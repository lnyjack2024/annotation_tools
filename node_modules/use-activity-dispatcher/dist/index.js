'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var react = require('react');

function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function (obj) {
      return typeof obj;
    };
  } else {
    _typeof = function (obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

var IS_BROWSER = (typeof window === 'undefined' ? 'undefined' : typeof window === "undefined" ? "undefined" : _typeof(window)) === 'object';
var DEFAULT_ELEMENT = IS_BROWSER ? document : {};
var DEFAULT_EVENTS = ['mousemove', 'keydown', 'wheel', 'DOMMouseScroll', 'mousewheel', 'mousedown'];

var handleEvent = function handleEvent(e) {
  window.parent.postMessage("iframe-".concat(e.type), '*');
};

function useActivityDispatcher() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      _ref$events = _ref.events,
      events = _ref$events === void 0 ? DEFAULT_EVENTS : _ref$events,
      _ref$element = _ref.element,
      element = _ref$element === void 0 ? DEFAULT_ELEMENT : _ref$element,
      _ref$capture = _ref.capture,
      capture = _ref$capture === void 0 ? true : _ref$capture,
      _ref$passive = _ref.passive,
      passive = _ref$passive === void 0 ? true : _ref$passive;

  var _bindEvents = function _bindEvents() {
    if (!IS_BROWSER) {
      return;
    }

    events.forEach(function (e) {
      element.addEventListener(e, handleEvent, {
        capture: capture,
        passive: passive
      });
    });
  };

  var _unbindEvents = function _unbindEvents() {

    if (!IS_BROWSER) {
      return;
    }

    events.forEach(function (e) {
      element.removeEventListener(e, handleEvent, {
        capture: capture,
        passive: passive
      });
    });
  };

  react.useEffect(function () {
    if (window.parent) {
      _bindEvents();
    }

    return function () {
      _unbindEvents();
    };
  }, []);
}

exports.useActivityDispatcher = useActivityDispatcher;
//# sourceMappingURL=index.js.map
