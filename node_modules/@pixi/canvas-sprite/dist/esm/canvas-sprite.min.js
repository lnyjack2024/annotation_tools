/*!
 * @pixi/canvas-sprite - v6.2.2
 * Compiled Wed, 26 Jan 2022 16:23:27 UTC
 *
 * @pixi/canvas-sprite is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */
import{SCALE_MODES as t,BLEND_MODES as o}from"@pixi/constants";import{Matrix as r,groupD8 as e}from"@pixi/math";import{canvasUtils as i}from"@pixi/canvas-renderer";import{Sprite as n}from"@pixi/sprite";var a=new r,l=function(){function r(t){this.renderer=t}return r.prototype.render=function(r){var n=r._texture,l=this.renderer,s=l.context;if(n.valid){var h=n._frame.width,d=n._frame.height,u=r.transform.worldTransform,f=0,p=0,m=n.baseTexture.getDrawableSource();if(!(n.orig.width<=0||n.orig.height<=0)&&n.valid&&m){l.setBlendMode(r.blendMode,!0),l.context.globalAlpha=r.worldAlpha;var c=n.baseTexture.scaleMode===t.LINEAR;l.smoothProperty&&l.context[l.smoothProperty]!==c&&(s[l.smoothProperty]=c),n.trim?(f=n.trim.width/2+n.trim.x-r.anchor.x*n.orig.width,p=n.trim.height/2+n.trim.y-r.anchor.y*n.orig.height):(f=(.5-r.anchor.x)*n.orig.width,p=(.5-r.anchor.y)*n.orig.height),n.rotate&&(u.copyTo(a),u=a,e.matrixAppendRotationInv(u,n.rotate,f,p),f=0,p=0),f-=h/2,p-=d/2,l.setContextTransform(u,r.roundPixels,1),r.roundPixels&&(f|=0,p|=0);var x=n.baseTexture.resolution,g=l._outerBlend;g&&(s.save(),s.beginPath(),s.rect(f*l.resolution,p*l.resolution,h*l.resolution,d*l.resolution),s.clip()),16777215!==r.tint?(r._cachedTint===r.tint&&r._tintedCanvas.tintId===r._texture._updateID||(r._cachedTint=r.tint,r._tintedCanvas=i.getTintedCanvas(r,r.tint)),s.drawImage(r._tintedCanvas,0,0,Math.floor(h*x),Math.floor(d*x),Math.floor(f*l.resolution),Math.floor(p*l.resolution),Math.floor(h*l.resolution),Math.floor(d*l.resolution))):s.drawImage(m,n._frame.x*x,n._frame.y*x,Math.floor(h*x),Math.floor(d*x),Math.floor(f*l.resolution),Math.floor(p*l.resolution),Math.floor(h*l.resolution),Math.floor(d*l.resolution)),g&&s.restore(),l.setBlendMode(o.NORMAL)}}},r.prototype.destroy=function(){this.renderer=null},r}();n.prototype._tintedCanvas=null,n.prototype._renderCanvas=function(t){t.plugins.sprite.render(this)};export{l as CanvasSpriteRenderer};
//# sourceMappingURL=canvas-sprite.min.js.map
