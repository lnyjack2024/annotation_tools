/*!
 * @pixi/canvas-graphics - v6.2.2
 * Compiled Wed, 26 Jan 2022 16:23:27 UTC
 *
 * @pixi/canvas-graphics is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var canvasRenderer,core=require("@pixi/core"),math=require("@pixi/math"),canvasRenderer$1=require("@pixi/canvas-renderer"),graphics=require("@pixi/graphics"),PolygonUtils=function(){function e(){}return e.offsetPolygon=function(t,i){var r=[],a=t.length;i=e.isPolygonClockwise(t)?i:-1*i;for(var n=0;n<a;n+=2){var o=n-2;o<0&&(o+=a);var l=(n+2)%a,s=t[n]-t[o],h=t[n+1]-t[o+1],v=Math.sqrt(s*s+h*h);s/=v,h/=v;var c=-(h*=i),p=s*=i,g=[t[o]+c,t[o+1]+p],f=[t[n]+c,t[n+1]+p],u=t[l]-t[n],d=t[l+1]-t[n+1];u/=v=Math.sqrt(u*u+d*d),d/=v;var m=-(d*=i),T=u*=i,x=[t[n]+m,t[n+1]+T],y=[t[l]+m,t[l+1]+T],b=e.findIntersection(g[0],g[1],f[0],f[1],x[0],x[1],y[0],y[1]);b&&r.push.apply(r,b)}return r},e.findIntersection=function(e,t,i,r,a,n,o,l){var s=(l-n)*(i-e)-(o-a)*(r-t),h=(o-a)*(t-n)-(l-n)*(e-a);if(0===s)return 0===h&&0===(i-e)*(t-n)-(r-t)*(e-a)?[(e+i)/2,(t+r)/2]:null;var v=h/s;return[e+v*(i-e),t+v*(r-t)]},e.isPolygonClockwise=function(e){for(var t=0,i=0;i<e.length-2;i+=2)t+=(e[i+2]-e[i])*(e[i+3]+e[i+1]);return t>0},e}(),CanvasGraphicsRenderer=function(){function e(e){this._svgMatrix=null,this._tempMatrix=new math.Matrix,this.renderer=e}return e.prototype._calcCanvasStyle=function(e,t){var i;return e.texture&&e.texture.baseTexture!==core.Texture.WHITE.baseTexture?e.texture.valid?(i=canvasRenderer$1.canvasUtils.getTintedPattern(e.texture,t),this.setPatternTransform(i,e.matrix||math.Matrix.IDENTITY)):i="#808080":i="#"+("00000"+(0|t).toString(16)).substr(-6),i},e.prototype.render=function(e){var t=this.renderer,i=t.context,r=e.worldAlpha,a=e.transform.worldTransform;t.setContextTransform(a),t.setBlendMode(e.blendMode);for(var n,o,l=e.geometry.graphicsData,s=(e.tint>>16&255)/255,h=(e.tint>>8&255)/255,v=(255&e.tint)/255,c=0;c<l.length;c++){var p=l[c],g=p.shape,f=p.fillStyle,u=p.lineStyle,d=0|p.fillStyle.color,m=0|p.lineStyle.color;if(p.matrix&&t.setContextTransform(a.copyTo(this._tempMatrix).append(p.matrix)),f.visible){var T=((d>>16&255)/255*s*255<<16)+((d>>8&255)/255*h*255<<8)+(255&d)/255*v*255;n=this._calcCanvasStyle(f,T)}if(u.visible){var x=((m>>16&255)/255*s*255<<16)+((m>>8&255)/255*h*255<<8)+(255&m)/255*v*255;o=this._calcCanvasStyle(u,x)}if(i.lineWidth=u.width,i.lineCap=u.cap,i.lineJoin=u.join,i.miterLimit=u.miterLimit,p.type===math.SHAPES.POLY){i.beginPath();var y=(k=g).points,b=p.holes,M=void 0,P=void 0,S=void 0,C=void 0,w=void 0;i.moveTo(y[0],y[1]);for(var R=2;R<y.length;R+=2)i.lineTo(y[R],y[R+1]);if(k.closeStroke&&i.closePath(),b.length>0){w=[],M=0,S=y[0],C=y[1];for(R=2;R+2<y.length;R+=2)M+=(y[R]-S)*(y[R+3]-C)-(y[R+2]-S)*(y[R+1]-C);for(var _=0;_<b.length;_++)if(y=b[_].shape.points){P=0,S=y[0],C=y[1];for(R=2;R+2<y.length;R+=2)P+=(y[R]-S)*(y[R+3]-C)-(y[R+2]-S)*(y[R+1]-C);if(P*M<0){i.moveTo(y[0],y[1]);for(R=2;R<y.length;R+=2)i.lineTo(y[R],y[R+1])}else{i.moveTo(y[y.length-2],y[y.length-1]);for(R=y.length-4;R>=0;R-=2)i.lineTo(y[R],y[R+1])}b[_].shape.closeStroke&&i.closePath(),w[_]=P*M<0}}f.visible&&(i.globalAlpha=f.alpha*r,i.fillStyle=n,i.fill()),u.visible&&this.paintPolygonStroke(k,u,o,b,w,r,i)}else if(p.type===math.SHAPES.RECT){var k=g;if(f.visible&&(i.globalAlpha=f.alpha*r,i.fillStyle=n,i.fillRect(k.x,k.y,k.width,k.height)),u.visible){var A=u.width*(.5-(1-u.alignment)),q=k.width+2*A,E=k.height+2*A;i.globalAlpha=u.alpha*r,i.strokeStyle=o,i.strokeRect(k.x-A,k.y-A,q,E)}}else if(p.type===math.SHAPES.CIRC){k=g;if(i.beginPath(),i.arc(k.x,k.y,k.radius,0,2*Math.PI),i.closePath(),f.visible&&(i.globalAlpha=f.alpha*r,i.fillStyle=n,i.fill()),u.visible){if(.5!==u.alignment){A=u.width*(.5-(1-u.alignment));i.beginPath(),i.arc(k.x,k.y,k.radius+A,0,2*Math.PI),i.closePath()}i.globalAlpha=u.alpha*r,i.strokeStyle=o,i.stroke()}}else if(p.type===math.SHAPES.ELIP){k=g;if((N=1===u.alignment)||this.paintEllipse(k,f,u,n,r,i),u.visible){if(.5!==u.alignment){A=u.width*(.5-(1-u.alignment));var G=2*(k.width+A),I=2*(k.height+A),z=k.x-G/2,H=k.y-I/2,L=G/2*.5522848,U=I/2*.5522848,D=z+G,$=H+I,j=z+G/2,B=H+I/2;i.beginPath(),i.moveTo(z,B),i.bezierCurveTo(z,B-U,j-L,H,j,H),i.bezierCurveTo(j+L,H,D,B-U,D,B),i.bezierCurveTo(D,B+U,j+L,$,j,$),i.bezierCurveTo(j-L,$,z,B+U,z,B),i.closePath()}i.globalAlpha=u.alpha*r,i.strokeStyle=o,i.stroke()}N&&this.paintEllipse(k,f,u,n,r,i)}else if(p.type===math.SHAPES.RREC){var N;k=g;if((N=1===u.alignment)||this.paintRoundedRectangle(k,f,u,n,r,i),u.visible){if(.5!==u.alignment){q=k.width,E=k.height,A=u.width*(.5-(1-u.alignment));var O=k.x-A,V=k.y-A,W=k.width+2*A,Y=k.height+2*A,J=A*(u.alignment>=1?Math.min(W/q,Y/E):Math.min(q/W,E/Y)),F=k.radius+J,K=Math.min(W,Y)/2;F=F>K?K:F,i.beginPath(),i.moveTo(O,V+F),i.lineTo(O,V+Y-F),i.quadraticCurveTo(O,V+Y,O+F,V+Y),i.lineTo(O+W-F,V+Y),i.quadraticCurveTo(O+W,V+Y,O+W,V+Y-F),i.lineTo(O+W,V+F),i.quadraticCurveTo(O+W,V,O+W-F,V),i.lineTo(O+F,V),i.quadraticCurveTo(O,V,O,V+F),i.closePath()}i.globalAlpha=u.alpha*r,i.strokeStyle=o,i.stroke()}N&&this.paintRoundedRectangle(k,f,u,n,r,i)}}},e.prototype.paintPolygonStroke=function(e,t,i,r,a,n,o){if(.5!==t.alignment){var l=t.width*(.5-(1-t.alignment)),s=PolygonUtils.offsetPolygon(e.points,l),h=void 0;o.beginPath(),o.moveTo(s[0],s[1]);for(var v=2;v<s.length;v+=2)o.lineTo(s[v],s[v+1]);e.closeStroke&&o.closePath();for(var c=0;c<r.length;c++){if(h=r[c].shape.points,s=PolygonUtils.offsetPolygon(h,l),a[c]){o.moveTo(s[0],s[1]);for(v=2;v<s.length;v+=2)o.lineTo(s[v],s[v+1])}else{o.moveTo(s[s.length-2],s[s.length-1]);for(v=s.length-4;v>=0;v-=2)o.lineTo(s[v],s[v+1])}r[c].shape.closeStroke&&o.closePath()}}o.globalAlpha=t.alpha*n,o.strokeStyle=i,o.stroke()},e.prototype.paintEllipse=function(e,t,i,r,a,n){var o=2*e.width,l=2*e.height,s=e.x-o/2,h=e.y-l/2,v=o/2*.5522848,c=l/2*.5522848,p=s+o,g=h+l,f=s+o/2,u=h+l/2;0===i.alignment&&n.save(),n.beginPath(),n.moveTo(s,u),n.bezierCurveTo(s,u-c,f-v,h,f,h),n.bezierCurveTo(f+v,h,p,u-c,p,u),n.bezierCurveTo(p,u+c,f+v,g,f,g),n.bezierCurveTo(f-v,g,s,u+c,s,u),n.closePath(),0===i.alignment&&n.clip(),t.visible&&(n.globalAlpha=t.alpha*a,n.fillStyle=r,n.fill()),0===i.alignment&&n.restore()},e.prototype.paintRoundedRectangle=function(e,t,i,r,a,n){var o=e.x,l=e.y,s=e.width,h=e.height,v=e.radius,c=Math.min(s,h)/2;v=v>c?c:v,0===i.alignment&&n.save(),n.beginPath(),n.moveTo(o,l+v),n.lineTo(o,l+h-v),n.quadraticCurveTo(o,l+h,o+v,l+h),n.lineTo(o+s-v,l+h),n.quadraticCurveTo(o+s,l+h,o+s,l+h-v),n.lineTo(o+s,l+v),n.quadraticCurveTo(o+s,l,o+s-v,l),n.lineTo(o+v,l),n.quadraticCurveTo(o,l,o,l+v),n.closePath(),0===i.alignment&&n.clip(),t.visible&&(n.globalAlpha=t.alpha*a,n.fillStyle=r,n.fill()),0===i.alignment&&n.restore()},e.prototype.setPatternTransform=function(e,t){if(!1!==this._svgMatrix){if(!this._svgMatrix){var i=document.createElementNS("http://www.w3.org/2000/svg","svg");if(i&&i.createSVGMatrix&&(this._svgMatrix=i.createSVGMatrix()),!this._svgMatrix||!e.setTransform)return void(this._svgMatrix=!1)}this._svgMatrix.a=t.a,this._svgMatrix.b=t.b,this._svgMatrix.c=t.c,this._svgMatrix.d=t.d,this._svgMatrix.e=t.tx,this._svgMatrix.f=t.ty,e.setTransform(this._svgMatrix.inverse())}},e.prototype.destroy=function(){this.renderer=null,this._svgMatrix=null,this._tempMatrix=null},e}(),tempMatrix=new math.Matrix;graphics.Graphics.prototype.generateCanvasTexture=function(e,t){void 0===t&&(t=1);var i=this.getLocalBounds(),r=core.RenderTexture.create({width:i.width,height:i.height,scaleMode:e,resolution:t});canvasRenderer||(canvasRenderer=new canvasRenderer$1.CanvasRenderer),this.transform.updateLocalTransform(),this.transform.localTransform.copyTo(tempMatrix),tempMatrix.invert(),tempMatrix.tx-=i.x,tempMatrix.ty-=i.y,canvasRenderer.render(this,{renderTexture:r,clear:!0,transform:tempMatrix});var a=core.Texture.from(r.baseTexture._canvasRenderTarget.canvas,{scaleMode:e});return a.baseTexture.setResolution(t),a},graphics.Graphics.prototype.cachedGraphicsData=[],graphics.Graphics.prototype._renderCanvas=function(e){!0!==this.isMask&&(this.finishPoly(),e.plugins.graphics.render(this))},exports.CanvasGraphicsRenderer=CanvasGraphicsRenderer;
//# sourceMappingURL=canvas-graphics.min.js.map
