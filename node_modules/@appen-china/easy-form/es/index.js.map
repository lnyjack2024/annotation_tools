{"version":3,"sources":["../src/index.tsx"],"names":["React","useState","useEffect","useRef","Button","Form","ConfigProvider","ResizeObserver","cx","isEqual","BaseField","ImageTextField","LayoutMode","utils","getFieldsFromCondition","ruleTrigger","parseFormFields","DarkTheme","lazy","LightTheme","defaultContainerSize","width","EasyForm","focusFieldKey","theme","hideLabel","layoutMode","fields","initialFields","conditions","effects","rules","autoFocus","footerVisible","submitText","cancelText","onFieldsChange","onSubmit","onCancel","onChange","renderLabel","uploader","containerRef","containerSize","setContainerSize","useForm","form","setFields","initialValues","setInitialValues","fieldRulesMap","setFieldRulesMap","handleResize","current","getBoundingClientRect","observe","length","parsedValue","reduce","acc","curr","updatedFields","updatedValues","currentValues","getFieldsValue","resetFields","map","forEach","rule","condition","undefined","Array","isArray","ruleCondition","find","c","id","ruleEffects","filter","e","includes","fieldNames","fieldName","push","handleValuesChange","changedValues","allValues","Object","keys","fieldRules","r","setFieldsValue","setTimeout","formValues","handleFinish","values","handleFinishFailed","err","querySelector","scrollIntoViewIfNeeded","handleFieldsChange","changedFields","allFields","autoFocusField","field","index","name","findIndex","f","visible","readonly","COMPACT","paddingTop"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,cAAvB,QAA6C,MAA7C;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,SAAqDC,UAArD,QAAuE,SAAvE;AACA,OAAOC,KAAP,IAAgBC,sBAAhB,EAAwCC,WAAxC,EAAqDC,eAArD,QAA4E,SAA5E;AAEA,IAAMC,SAAS,gBAAGjB,KAAK,CAACkB,IAAN,CAAW;AAAA,SAAM,OAAO,oBAAP,CAAN;AAAA,CAAX,CAAlB;AACA,IAAMC,UAAU,gBAAGnB,KAAK,CAACkB,IAAN,CAAW;AAAA,SAAM,OAAO,qBAAP,CAAN;AAAA,CAAX,CAAnB;AAEA,IAAME,oBAAoB,GAAG;AAC3BC,EAAAA,KAAK,EAAE;AADoB,CAA7B;;AA0BA,IAAMC,QAA6B,GAAG,SAAhCA,QAAgC,OAmBhC;AAAA,MAlBJC,aAkBI,QAlBJA,aAkBI;AAAA,wBAjBJC,KAiBI;AAAA,MAjBJA,KAiBI,2BAjBI,OAiBJ;AAAA,4BAhBJC,SAgBI;AAAA,MAhBJA,SAgBI,+BAhBQ,KAgBR;AAAA,MAfJC,UAeI,QAfJA,UAeI;AAAA,yBAdJC,MAcI;AAAA,MAdIC,aAcJ,4BAdoB,EAcpB;AAAA,6BAbJC,UAaI;AAAA,MAbJA,UAaI,gCAbS,EAaT;AAAA,0BAZJC,OAYI;AAAA,MAZJA,OAYI,6BAZM,EAYN;AAAA,wBAXJC,KAWI;AAAA,MAXJA,KAWI,2BAXI,EAWJ;AAAA,4BAVJC,SAUI;AAAA,MAVJA,SAUI,+BAVQ,IAUR;AAAA,gCATJC,aASI;AAAA,MATJA,aASI,mCATY,IASZ;AAAA,MARJC,UAQI,QARJA,UAQI;AAAA,MAPJC,UAOI,QAPJA,UAOI;AAAA,MANJC,cAMI,QANJA,cAMI;AAAA,MALJC,QAKI,QALJA,QAKI;AAAA,MAJJC,QAII,QAJJA,QAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJC,WAEI,QAFJA,WAEI;AAAA,MADJC,QACI,QADJA,QACI;AACJ,MAAMC,YAAY,GAAGvC,MAAM,CAAiB,IAAjB,CAA3B;;AACA,kBAA0CF,QAAQ,CAACmB,oBAAD,CAAlD;AAAA,MAAOuB,aAAP;AAAA,MAAsBC,gBAAtB;;AAEA,sBAAevC,IAAI,CAACwC,OAAL,EAAf;AAAA,MAAOC,IAAP;;AACA,mBAA4B7C,QAAQ,CAAU,EAAV,CAApC;AAAA,MAAO0B,MAAP;AAAA,MAAeoB,SAAf;;AACA,mBACE9C,QAAQ,CAA+C,EAA/C,CADV;AAAA,MAAO+C,aAAP;AAAA,MAAsBC,gBAAtB;;AAEA,mBAA0ChD,QAAQ,CAA8B,EAA9B,CAAlD;AAAA,MAAOiD,aAAP;AAAA,MAAsBC,gBAAtB;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,QAAIV,YAAY,CAACW,OAAjB,EAA0B;AACxB,kCAAkBX,YAAY,CAACW,OAAb,CAAqBC,qBAArB,EAAlB;AAAA,UAAQjC,KAAR,yBAAQA,KAAR;;AACAuB,MAAAA,gBAAgB,CAAC;AAAEvB,QAAAA,KAAK,EAALA;AAAF,OAAD,CAAhB;AACD;AACF,GALD;;AAOAnB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIK,cAAJ,CAAmB6C,YAAnB,EAAiCG,OAAjC,CAAyCb,YAAY,CAACW,OAAtD;AACAD,IAAAA,YAAY;AACb,GAHQ,EAGN,EAHM,CAAT;AAKAlD,EAAAA,SAAS,CAAC,YAAM;AACd;AACA,QAAI0B,aAAa,CAAC4B,MAAd,GAAuB,CAA3B,EAA8B;AAC5B,UAAMC,WAAW,GAAGzC,eAAe,CAACY,aAAD,CAAnC,CAD4B,CAE5B;;AACA,0BAAyCG,KAAK,CAAC2B,MAAN,CACvC,UAACC,GAAD,EAAMC,IAAN;AAAA,eAAe7C,WAAW,CACxB6C,IADwB,EAClBD,GAAG,CAACE,aADc,EACCF,GAAG,CAACG,aADL,EACoBlC,aADpB,EACmCC,UADnC,EAC+CC,OAD/C,CAA1B;AAAA,OADuC,EAIvC;AAAE+B,QAAAA,aAAa,EAAEJ,WAAW,CAAC9B,MAA7B;AAAqCmC,QAAAA,aAAa,EAAEL,WAAW,CAACT;AAAhE,OAJuC,CAAzC;AAAA,UAAQa,aAAR,iBAAQA,aAAR;AAAA,UAAuBC,aAAvB,iBAAuBA,aAAvB;;AAMAf,MAAAA,SAAS,CAACc,aAAD,CAAT;AACAZ,MAAAA,gBAAgB,CAACa,aAAD,CAAhB;AACD;AACF,GAdQ,EAcN,CAAClC,aAAD,CAdM,CAAT;AAgBA1B,EAAAA,SAAS,CAAC,YAAM;AACd;AACA;AACA,QAAM6D,aAAa,GAAGjB,IAAI,CAACkB,cAAL,CAAoB,IAApB,CAAtB;;AACA,QAAI,CAACvD,OAAO,CAACuC,aAAD,EAAgBe,aAAhB,CAAZ,EAA4C;AAC1CjB,MAAAA,IAAI,CAACmB,WAAL;AACD;AACF,GAPQ,EAON,CAACjB,aAAD,CAPM,CAAT;AASA9C,EAAAA,SAAS,CAAC,YAAM;AACd;AACA,QAAI6B,KAAK,CAACyB,MAAN,GAAe,CAAf,IAAoB3B,UAAU,CAAC2B,MAAX,GAAoB,CAAxC,IAA6C1B,OAAO,CAAC0B,MAAR,GAAiB,CAAlE,EAAqE;AACnE,UAAMU,GAAgC,GAAG,EAAzC;AACAnC,MAAAA,KAAK,CAACoC,OAAN,CAAc,UAACC,IAAD,EAAU;AACtB;AACA,YACEA,IAAI,CAACC,SAAL,KAAmBC,SAAnB,IACAF,IAAI,CAACtC,OAAL,KAAiBwC,SADjB,IAEAC,KAAK,CAACC,OAAN,CAAcJ,IAAI,CAACtC,OAAnB,CAFA,IAGAsC,IAAI,CAACtC,OAAL,CAAa0B,MAAb,GAAsB,CAJxB,EAKE;AACA,cAAMiB,aAAa,GAAG5C,UAAU,CAAC6C,IAAX,CAAgB,UAACC,CAAD;AAAA,mBAAOA,CAAC,CAACC,EAAF,KAASR,IAAI,CAACC,SAArB;AAAA,WAAhB,CAAtB;AACA,cAAMQ,WAAW,GAAG/C,OAAO,CAACgD,MAAR,CAAe,UAACC,CAAD;AAAA,mBAAOX,IAAI,CAACtC,OAAL,CAAakD,QAAb,CAAsBD,CAAC,CAACH,EAAxB,CAAP;AAAA,WAAf,CAApB,CAFA,CAIA;;AACA,cAAIH,aAAa,IAAII,WAAW,CAACrB,MAAZ,KAAuBY,IAAI,CAACtC,OAAL,CAAa0B,MAAzD,EAAiE;AAC/D,gBAAMyB,UAAU,GAAGnE,sBAAsB,CAAC2D,aAAD,EAAgB5C,UAAhB,CAAzC;AACAoD,YAAAA,UAAU,CAACd,OAAX,CAAmB,UAACe,SAAD,EAAe;AAChC,kBAAI,CAAChB,GAAG,CAACgB,SAAD,CAAR,EAAqB;AACnBhB,gBAAAA,GAAG,CAACgB,SAAD,CAAH,GAAiB,EAAjB;AACD;;AACD,kBAAI,CAAChB,GAAG,CAACgB,SAAD,CAAH,CAAeF,QAAf,CAAwBZ,IAAI,CAACQ,EAA7B,CAAL,EAAuC;AACrCV,gBAAAA,GAAG,CAACgB,SAAD,CAAH,CAAeC,IAAf,CAAoBf,IAAI,CAACQ,EAAzB;AACD;AACF,aAPD;AAQD;AACF;AACF,OAxBD;AAyBAzB,MAAAA,gBAAgB,CAACe,GAAD,CAAhB;AACD;AACF,GA/BQ,EA+BN,CAACrC,UAAD,EAAaC,OAAb,EAAsBC,KAAtB,CA/BM,CAAT;;AAiCA,MAAMqD,kBAAkB,GAAG,SAArBA,kBAAqB,CACzBC,aADyB,EAEzBC,SAFyB,EAGtB;AACHC,IAAAA,MAAM,CAACC,IAAP,CAAYH,aAAZ,EAA2BlB,OAA3B,CAAmC,UAACe,SAAD,EAAe;AAChD,UAAIhC,aAAa,CAACgC,SAAD,CAAjB,EAA8B;AAC5B,YAAMO,UAAU,GAAG1D,KAAK,CAAC+C,MAAN,CAAa,UAACY,CAAD;AAAA,iBAAOxC,aAAa,CAACgC,SAAD,CAAb,CAAyBF,QAAzB,CAAkCU,CAAC,CAACd,EAApC,CAAP;AAAA,SAAb,CAAnB;;AACA,iCAAyCa,UAAU,CAAC/B,MAAX,CACvC,UAACC,GAAD,EAAMC,IAAN;AAAA,iBAAe7C,WAAW,CACxB6C,IADwB,EAClBD,GAAG,CAACE,aADc,EACCF,GAAG,CAACG,aADL,EACoBlC,aADpB,EACmCC,UADnC,EAC+CC,OAD/C,CAA1B;AAAA,SADuC,EAIvC;AAAE+B,UAAAA,aAAa,EAAElC,MAAjB;AAAyBmC,UAAAA,aAAa,eAAOd,aAAP,EAAyBsC,SAAzB;AAAtC,SAJuC,CAAzC;AAAA,YAAQzB,aAAR,sBAAQA,aAAR;AAAA,YAAuBC,aAAvB,sBAAuBA,aAAvB;;AAMAf,QAAAA,SAAS,CAACc,aAAD,CAAT;AACAf,QAAAA,IAAI,CAAC6C,cAAL,CAAoB7B,aAApB;AACD;AACF,KAZD;;AAaA,QAAIvB,QAAJ,EAAc;AACZqD,MAAAA,UAAU,CAAC,YAAM;AACf,YAAMC,UAAU,GAAG/C,IAAI,CAACkB,cAAL,EAAnB;AACAzB,QAAAA,QAAQ,CAAC8C,aAAD,EAAgBQ,UAAhB,CAAR;AACD,OAHS,EAGP,CAHO,CAAV;AAID;AACF,GAvBD;;AAyBA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAA0D;AAC7E1D,IAAAA,QAAQ,CAAC0D,MAAD,CAAR;AACD,GAFD;;AAIA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/BJ,IAAAA,UAAU,CAAC,YAAM;AAAA;;AACf,UAAMK,GAAG,6BAAGvD,YAAY,CAACW,OAAhB,qBAAG,uBAAsB6C,aAAtB,CAAoC,+BAApC,CAAZ;;AACA,UAAID,GAAJ,YAAIA,GAAG,CAAEE,sBAAT,EAAiC;AAC/BF,QAAAA,GAAG,CAACE,sBAAJ;AACD;AACF,KALS,EAKP,CALO,CAAV;AAMD,GAPD;;AASA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,aAAD,EAAgBC,SAAhB,EAA8B;AACvD,QAAIlE,cAAJ,EAAoB;AAClBA,MAAAA,cAAc,CAACiE,aAAD,EAAgBC,SAAhB,CAAd;AACD;AACF,GAJD;;AAMA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAeC,KAAf,EAAiC;AACtD,QAAIlF,aAAJ,EAAmB;AACjB,aAAOA,aAAa,KAAKiF,KAAK,CAACE,IAA/B;AACD;;AACD,WAAO1E,SAAS,IAAIyE,KAAK,KAAK9E,MAAM,CAACgF,SAAP,CAAiB,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACC,OAAF,IAAa,CAACD,CAAC,CAACE,QAAvB;AAAA,KAAjB,CAA9B;AACD,GALD;;AAOA,sBACE;AAAK,IAAA,GAAG,EAAEpE,YAAV;AAAwB,IAAA,KAAK,EAAE;AAAErB,MAAAA,KAAK,EAAE;AAAT;AAA/B,kBACE,oBAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,QAAQ,eAAE;AAA1B,KACGG,KAAK,KAAK,MAAV,gBAAmB,oBAAC,SAAD,OAAnB,gBAAmC,oBAAC,UAAD,OADtC,CADF,eAIE,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAC;AAA1B,kBACE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAEE,UAAU,KAAKd,UAAU,CAACmG,OAA1B,GAAoC,OAApC,GAA8CzC,SADtD;AAEE,IAAA,IAAI,EAAExB,IAFR;AAGE,IAAA,MAAM,EAAC,UAHT;AAIE,IAAA,SAAS,EAAEtC,EAAE,CAAC,WAAD,EAAc;AAAE,4BAAsBkB,UAAU,KAAKd,UAAU,CAACmG;AAAlD,KAAd,CAJf;AAKE,IAAA,KAAK,EAAE,KALT;AAME,IAAA,aAAa,EAAE/D,aANjB;AAOE,IAAA,QAAQ,EAAE8C,YAPZ;AAQE,IAAA,cAAc,EAAEE,kBARlB;AASE,IAAA,cAAc,EAAEZ,kBATlB;AAUE,IAAA,cAAc,EAAEgB;AAVlB,KAYGzE,MAAM,CAACuC,GAAP,CAAW,UAACsC,KAAD,EAAQC,KAAR;AAAA,wBACV,oBAAC,SAAD;AACE,MAAA,SAAS,EAAEhF,SADb;AAEE,MAAA,GAAG,EAAE+E,KAAK,CAACE,IAFb;AAGE,MAAA,KAAK,EAAEF,KAHT;AAIE,MAAA,SAAS,EAAED,cAAc,CAACC,KAAD,EAAQC,KAAR,CAJ3B;AAKE,MAAA,WAAW,EAAEjE,WALf;AAME,MAAA,QAAQ,EAAEC,QANZ;AAOE,MAAA,UAAU,EAAEf,UAPd;AAQE,MAAA,aAAa,EAAEiB;AARjB,MADU;AAAA,GAAX,CAZH,EAwBGV,aAAa,iBACZ;AAAK,IAAA,KAAK,EAAE;AAAE+E,MAAAA,UAAU,EAAE;AAAd;AAAZ,kBACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAyC,IAAA,SAAS,EAAC;AAAnD,KACG9E,UAAU,IAAI,QADjB,CADF,EAIGI,QAAQ,iBACP,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEA,QAAjB;AAA2B,IAAA,SAAS,EAAC;AAArC,KACGH,UAAU,IAAI,QADjB,CALJ,CAzBJ,CADF,CAJF,CADF;AA8CD,CApMD;;AAsMA,eAAeb,QAAf;AACA,SAAST,KAAT,EAAgBF,cAAhB","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Button, Form, ConfigProvider } from 'antd';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport cx from 'classnames';\nimport { isEqual } from 'lodash';\nimport BaseField from './components/BaseField';\nimport ImageTextField from './components/ImageTextField';\nimport { Field, FieldValue, Condition, Effect, Rule, LayoutMode } from './types';\nimport utils, { getFieldsFromCondition, ruleTrigger, parseFormFields } from './utils';\n\nconst DarkTheme = React.lazy(() => import('./themes/DarkTheme'));\nconst LightTheme = React.lazy(() => import('./themes/LightTheme'));\n\nconst defaultContainerSize = {\n  width: 416,\n};\n\ninterface FormProps {\n  focusFieldKey?: string;\n  theme?: string;\n  fields: Field[];\n  conditions?: Condition[];\n  effects?: Effect[];\n  rules?: Rule[];\n  autoFocus?: boolean;\n  hideLabel?: boolean;\n  layoutMode?: LayoutMode;\n  footerVisible?: boolean;\n  submitText?: string;\n  cancelText?: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  onSubmit: (values: any) => void;\n  onFieldsChange?: (changedFields, allFields) => void;\n  onCancel?: () => void;\n  onChange?: (changedValues, formValues) => void;\n  renderLabel?: (label: string | undefined, field: Field) => string | React.ReactNode;\n  uploader?: (file: File) => Promise<string>;\n}\n\nconst EasyForm: React.FC<FormProps> = ({\n  focusFieldKey,\n  theme = 'light',\n  hideLabel = false,\n  layoutMode,\n  fields: initialFields = [],\n  conditions = [],\n  effects = [],\n  rules = [],\n  autoFocus = true,\n  footerVisible = true,\n  submitText,\n  cancelText,\n  onFieldsChange,\n  onSubmit,\n  onCancel,\n  onChange,\n  renderLabel,\n  uploader,\n}) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [containerSize, setContainerSize] = useState(defaultContainerSize);\n\n  const [form] = Form.useForm();\n  const [fields, setFields] = useState<Field[]>([]);\n  const [initialValues, setInitialValues] =\n    useState<{ [key: string]: FieldValue | FieldValue[] }>({});\n  const [fieldRulesMap, setFieldRulesMap] = useState<{ [key: string]: string[] }>({});\n\n  const handleResize = () => {\n    if (containerRef.current) {\n      const { width } = containerRef.current.getBoundingClientRect();\n      setContainerSize({ width });\n    }\n  };\n\n  useEffect(() => {\n    new ResizeObserver(handleResize).observe(containerRef.current);\n    handleResize();\n  }, []);\n\n  useEffect(() => {\n    // init fields\n    if (initialFields.length > 0) {\n      const parsedValue = parseFormFields(initialFields);\n      // trigger initial rule effects\n      const { updatedFields, updatedValues } = rules.reduce(\n        (acc, curr) => ruleTrigger(\n          curr, acc.updatedFields, acc.updatedValues, initialFields, conditions, effects,\n        ),\n        { updatedFields: parsedValue.fields, updatedValues: parsedValue.initialValues },\n      );\n      setFields(updatedFields);\n      setInitialValues(updatedValues);\n    }\n  }, [initialFields]);\n\n  useEffect(() => {\n    // when initialValues changed, means initialFields changed\n    // form changed so reset fields\n    const currentValues = form.getFieldsValue(true);\n    if (!isEqual(initialValues, currentValues)) {\n      form.resetFields();\n    }\n  }, [initialValues]);\n\n  useEffect(() => {\n    // init field rules map, like [fieldName]: [ruleId1, ruleId2, ...]\n    if (rules.length > 0 && conditions.length > 0 && effects.length > 0) {\n      const map: { [key: string]: string[] } = {};\n      rules.forEach((rule) => {\n        // check if the rule reaches the requirement\n        if (\n          rule.condition !== undefined &&\n          rule.effects !== undefined &&\n          Array.isArray(rule.effects) &&\n          rule.effects.length > 0\n        ) {\n          const ruleCondition = conditions.find((c) => c.id === rule.condition);\n          const ruleEffects = effects.filter((e) => rule.effects.includes(e.id));\n\n          // rule condition is defined and all effects are defined\n          if (ruleCondition && ruleEffects.length === rule.effects.length) {\n            const fieldNames = getFieldsFromCondition(ruleCondition, conditions);\n            fieldNames.forEach((fieldName) => {\n              if (!map[fieldName]) {\n                map[fieldName] = [];\n              }\n              if (!map[fieldName].includes(rule.id)) {\n                map[fieldName].push(rule.id);\n              }\n            });\n          }\n        }\n      });\n      setFieldRulesMap(map);\n    }\n  }, [conditions, effects, rules]);\n\n  const handleValuesChange = (\n    changedValues: { [key: string]: FieldValue | FieldValue[] },\n    allValues: { [key: string]: FieldValue | FieldValue[] },\n  ) => {\n    Object.keys(changedValues).forEach((fieldName) => {\n      if (fieldRulesMap[fieldName]) {\n        const fieldRules = rules.filter((r) => fieldRulesMap[fieldName].includes(r.id));\n        const { updatedFields, updatedValues } = fieldRules.reduce(\n          (acc, curr) => ruleTrigger(\n            curr, acc.updatedFields, acc.updatedValues, initialFields, conditions, effects,\n          ),\n          { updatedFields: fields, updatedValues: { ...initialValues, ...allValues } },\n        );\n        setFields(updatedFields);\n        form.setFieldsValue(updatedValues);\n      }\n    });\n    if (onChange) {\n      setTimeout(() => {\n        const formValues = form.getFieldsValue();\n        onChange(changedValues, formValues);\n      }, 0);\n    }\n  };\n\n  const handleFinish = (values: { [key: string]: FieldValue | FieldValue[] }) => {\n    onSubmit(values);\n  };\n\n  const handleFinishFailed = () => {\n    setTimeout(() => {\n      const err = containerRef.current?.querySelector('.easyform-form-item-has-error') as any;\n      if (err?.scrollIntoViewIfNeeded) {\n        err.scrollIntoViewIfNeeded();\n      }\n    }, 0);\n  };\n\n  const handleFieldsChange = (changedFields, allFields) => {\n    if (onFieldsChange) {\n      onFieldsChange(changedFields, allFields);\n    }\n  };\n\n  const autoFocusField = (field: Field, index: number) => {\n    if (focusFieldKey) {\n      return focusFieldKey === field.name;\n    }\n    return autoFocus && index === fields.findIndex((f) => f.visible && !f.readonly);\n  };\n\n  return (\n    <div ref={containerRef} style={{ width: '100%' }}>\n      <React.Suspense fallback={<></>}>\n        {theme === 'dark' ? <DarkTheme /> : <LightTheme />}\n      </React.Suspense>\n      <ConfigProvider prefixCls=\"easyform\">\n        <Form\n          size={layoutMode === LayoutMode.COMPACT ? 'small' : undefined}\n          form={form}\n          layout=\"vertical\"\n          className={cx('easy-form', { 'easy-form--compact': layoutMode === LayoutMode.COMPACT })}\n          colon={false}\n          initialValues={initialValues}\n          onFinish={handleFinish}\n          onFinishFailed={handleFinishFailed}\n          onValuesChange={handleValuesChange}\n          onFieldsChange={handleFieldsChange}\n        >\n          {fields.map((field, index) => (\n            <BaseField\n              hideLabel={hideLabel}\n              key={field.name}\n              field={field}\n              autoFocus={autoFocusField(field, index)}\n              renderLabel={renderLabel}\n              uploader={uploader}\n              layoutMode={layoutMode}\n              containerSize={containerSize}\n            />\n          ))}\n          {footerVisible && (\n            <div style={{ paddingTop: 24 }}>\n              <Button type=\"primary\" htmlType=\"submit\" className=\"form-btn-submit\">\n                {submitText || 'Submit'}\n              </Button>\n              {onCancel && (\n                <Button onClick={onCancel} className=\"form-btn-cancel\">\n                  {cancelText || 'Cancel'}\n                </Button>\n              )}\n            </div>\n          )}\n        </Form>\n      </ConfigProvider>\n    </div>\n  );\n};\n\nexport default EasyForm;\nexport { utils, ImageTextField };\n"],"file":"index.js"}