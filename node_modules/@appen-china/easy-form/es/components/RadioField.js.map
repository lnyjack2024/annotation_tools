{"version":3,"sources":["../../src/components/RadioField.tsx"],"names":["React","useEffect","useMemo","useState","Radio","Row","Col","Modal","Popover","InfoCircleOutlined","ZoomInOutlined","OptionType","getColSpanForOptions","textFilter","DownArrow","DEFAULT_GROUP_NAME","RadioField","value","onChange","autoFocus","disabled","options","containerSize","filterKey","optionType","DEFAULT","foldable","fold","setFilterCount","handleFold","previewVisible","setPreviewVisible","selectedOption","setSelectedOption","colSpan","width","groups","groupOptionsMap","forEach","o","i","group","unshift","push","splice","filter","label","length","handleChange","e","optionValue","target","checked","renderOption","option","focus","radioFieldProps","toString","desc","maxWidth","referenceUrl","backgroundImage","preventDefault","renderButtonOption","map","BUTTON","Object","keys","groupName","groupIndex","margin","index","maxHeight","overflowY","textAlign"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { Radio, Row, Col, Modal, Popover } from 'antd';\nimport { InfoCircleOutlined, ZoomInOutlined } from '@ant-design/icons';\nimport { RadioChangeEvent } from 'antd/lib/radio';\nimport { FieldOption, OptionType } from '../types';\nimport { getColSpanForOptions, textFilter } from '../utils';\nimport DownArrow from '../icons/DownArrow';\nimport { DEFAULT_GROUP_NAME } from '../utils/constants';\n\ntype RadioValue = string | number;\n\ninterface RadioProps {\n  value?: RadioValue;\n  onChange?: (value: RadioValue) => void;\n  autoFocus?: boolean;\n  disabled?: boolean;\n  options?: FieldOption[];\n  containerSize: { width: number };\n  filterKey?: string;\n  optionType?: OptionType;\n  foldable?: boolean;\n  fold?: boolean;\n  setFilterCount?: (count: number) => void;\n  handleFold: () => void;\n}\n\nconst RadioField: React.FC<RadioProps> = ({\n  value,\n  onChange,\n  autoFocus,\n  disabled,\n  options = [],\n  containerSize,\n  filterKey = '',\n  optionType = OptionType.DEFAULT,\n  foldable,\n  fold,\n  setFilterCount,\n  handleFold,\n}) => {\n  const [previewVisible, setPreviewVisible] = useState<boolean>(false);\n  const [selectedOption, setSelectedOption] = useState<FieldOption>(null);\n  const colSpan = getColSpanForOptions(containerSize.width, options);\n  const groups = useMemo(() => {\n    const groupOptionsMap: { [groupName: string]: FieldOption[] } = {};\n    options.forEach((o, i) => {\n      const group = fold ? DEFAULT_GROUP_NAME : o.group || DEFAULT_GROUP_NAME;\n      if (!groupOptionsMap[group]) {\n        groupOptionsMap[group] = [];\n      }\n      if (o.value === value && fold && i >= 7) {\n        groupOptionsMap[group].unshift(o);\n      } else {\n        groupOptionsMap[group].push(o);\n      }\n      if (fold) {\n        groupOptionsMap[group].splice(7);\n      }\n    });\n    return groupOptionsMap;\n  }, [options, fold]);\n\n  useEffect(() => {\n    if (setFilterCount) {\n      if (filterKey) {\n        setFilterCount(options.filter((o) => textFilter(o.label, filterKey)).length);\n      } else {\n        setFilterCount(options.length);\n      }\n    }\n  }, [filterKey]);\n\n  const handleChange = (e: RadioChangeEvent, optionValue: RadioValue) => {\n    if (e.target.checked && onChange) {\n      onChange(optionValue);\n    }\n  };\n\n  const renderOption = (option: FieldOption, focus = false) => {\n    const radioFieldProps = {\n      autoFocus: focus,\n      value: option.value,\n      checked: value === option.value,\n      disabled: disabled || option.disabled,\n      onChange: (e) => handleChange(e, option.value as RadioValue),\n    };\n    return (\n      <Col key={option.value.toString()} span={colSpan}>\n        <Radio {...radioFieldProps}>\n          <span title={option.label}>\n            {option.label}\n            {option.desc && (\n              <Popover\n                content={option.desc}\n                zIndex={10001}\n                overlayInnerStyle={{\n                  maxWidth: 320,\n                }}\n              >\n                <InfoCircleOutlined className=\"easyform-option-info-icon\" />\n              </Popover>\n            )}\n          </span>\n          {option.referenceUrl && (\n            <div className=\"easyform-radio-reference\" style={{ backgroundImage: `url(${option.referenceUrl})` }}>\n              <div\n                className=\"check-preview\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  setSelectedOption(option);\n                  setPreviewVisible(true);\n                }}\n              >\n                <ZoomInOutlined />\n              </div>\n            </div>\n          )}\n        </Radio>\n      </Col>\n    );\n  };\n\n  const renderButtonOption = (option: FieldOption, focus = false) => {\n    const radioFieldProps = {\n      autoFocus: focus,\n      value: option.value,\n      checked: value === option.value,\n      disabled: disabled || option.disabled,\n      onChange: (e) => handleChange(e, option.value as RadioValue),\n    };\n    return (\n      <Radio.Button {...radioFieldProps} key={option.value.toString()}>\n        <span title={option.label}>\n          {option.label}\n          {option.desc && (\n            <Popover\n              content={option.desc}\n              zIndex={10001}\n              overlayInnerStyle={{\n                maxWidth: 320,\n              }}\n            >\n              <InfoCircleOutlined className=\"easyform-option-info-icon\" />\n            </Popover>\n          )}\n        </span>\n      </Radio.Button>\n    );\n  };\n\n  return (\n    <>\n      {filterKey ? (\n        <Row>\n          {options.filter((o) => textFilter(o.label, filterKey))\n            .map((option) => (\n              optionType === OptionType.BUTTON ? renderButtonOption(option) : renderOption(option)))}\n        </Row>\n      ) : (\n        <>\n          {Object.keys(groups).map((groupName, groupIndex) => (\n            <div key={groupName}>\n              {groupName !== DEFAULT_GROUP_NAME && (\n                <div style={{ margin: '8px 0 4px 0' }}>\n                  {groupName}\n                </div>\n              )}\n              {optionType === OptionType.BUTTON ? (\n                <div className=\"easyform-radio-container\">\n                  {groups[groupName].map((option, index) => renderButtonOption(option, groupIndex === 0 && index === 0 && autoFocus))}\n                  {foldable && (\n                    <div\n                      className={`easyform-radio-fold ${!fold ? 'active' : ''}`}\n                      onClick={handleFold}\n                    >\n                      <span className=\"icon\"><DownArrow /></span>\n                    </div>\n                  )}\n                </div>\n              ) : (\n                <Row>\n                  {groups[groupName].map((option, index) => renderOption(option, groupIndex === 0 && index === 0 && autoFocus))}\n                </Row>\n              )}\n            </div>\n          ))}\n        </>\n      )}\n      <Modal\n        open={previewVisible}\n        wrapClassName=\"radio-preview-modal\"\n        width={640}\n        zIndex={10001}\n        title={<></>}\n        bodyStyle={{ maxHeight: 640, overflowY: 'auto' }}\n        footer={null}\n        onCancel={() => {\n          setSelectedOption(null);\n          setPreviewVisible(false);\n        }}\n      >\n        <div style={{ width: '100%', maxHeight: '100%', textAlign: 'center' }}>\n          <img src={selectedOption?.referenceUrl} alt=\"reference img\" style={{ maxWidth: '100%', maxHeight: '100%' }} />\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default RadioField;\n"],"file":"RadioField.js"}