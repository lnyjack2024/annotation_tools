{"version":3,"sources":["../../src/components/SelectField.tsx"],"names":["React","useCallback","useMemo","useState","Input","Select","CaretDownOutlined","CaretUpOutlined","CloseOutlined","SearchOutlined","LayoutMode","DEFAULT_GROUP_NAME","SelectField","value","autoFocus","disabled","options","mode","onChange","layoutMode","optionSearchable","clickStopPropagation","inputValue","setInputValue","groupsForSelect","groupsForSelectOptionsMap","filteredOptions","filter","element","label","toLowerCase","includes","forEach","optionItem","groupName","group","push","filterOption","e","targetInputValue","target","preventDefaultClick","event","stopPropagation","preventDefault","tagRender","props","closable","onClose","onPreventMouseDown","marginRight","COMPACT","menu","Object","keys","length","map","groupIndex","option","toString","values"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useState } from 'react';\nimport { Input, Select } from 'antd';\nimport { CaretDownOutlined, CaretUpOutlined, CloseOutlined, SearchOutlined } from '@ant-design/icons';\nimport type { CustomTagProps } from 'rc-select/lib/BaseSelect';\nimport { FieldOption, FieldValue, LayoutMode, Mode } from '../types';\nimport { DEFAULT_GROUP_NAME } from '../utils/constants';\n\ntype SelectValue = string | number;\n\ninterface SelectProps {\n  value?: SelectValue | FieldValue | FieldValue[];\n  onChange?: (value: SelectValue) => void;\n  autoFocus?: boolean;\n  optionSearchable?: boolean;\n  clickStopPropagation?: boolean;\n  disabled?: boolean;\n  options?: FieldOption[];\n  mode?: Mode;\n  layoutMode?: LayoutMode;\n}\n\nconst SelectField: React.FC<SelectProps> = ({\n  value,\n  autoFocus,\n  disabled,\n  options = [],\n  mode = null,\n  onChange,\n  layoutMode,\n  optionSearchable = false,\n  clickStopPropagation = false,\n}) => {\n  const [inputValue, setInputValue] = useState('');\n  // options format for mode select\n  const groupsForSelect = useMemo(() => {\n    const groupsForSelectOptionsMap: { [key: string]: FieldOption[] } = {};\n    const filteredOptions =\n      options.filter((element) => (\n        element?.label as unknown as string).toLowerCase().includes(inputValue.toLowerCase()));\n\n    if (filteredOptions) {\n      filteredOptions.forEach((optionItem) => {\n        const groupName = optionItem.group || DEFAULT_GROUP_NAME;\n        if (!groupsForSelectOptionsMap[groupName]) groupsForSelectOptionsMap[groupName] = [];\n        groupsForSelectOptionsMap[groupName].push(optionItem);\n      });\n    }\n    return groupsForSelectOptionsMap;\n  }, [options, inputValue]);\n\n  const filterOption = (e) => {\n    const targetInputValue = e.target.value;\n    setInputValue(targetInputValue);\n  };\n\n  const preventDefaultClick = useCallback((event) => {\n    if (clickStopPropagation) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  }, [clickStopPropagation]);\n\n  const tagRender = (props: CustomTagProps) => {\n    const { label, closable, onClose } = props;\n    const onPreventMouseDown = (event: React.MouseEvent<HTMLSpanElement>) => {\n      event.preventDefault();\n      event.stopPropagation();\n    };\n    return (\n      <div\n        role=\"button\"\n        tabIndex={0}\n        className=\"easyform-select-custom-tag\"\n        onMouseDown={onPreventMouseDown}\n        style={{ marginRight: 3 }}\n      >\n        <span>{label}</span>\n        {closable && (<CloseOutlined onClick={onClose} />)}\n      </div>\n    );\n  };\n  return (\n    <Select\n      showSearch={false}\n      suffixIcon={layoutMode === LayoutMode.COMPACT ? () => (\n        <span>\n          <CaretUpOutlined />\n          <CaretDownOutlined />\n        </span>\n      ) : null}\n      autoFocus={false}\n      disabled={disabled}\n      dropdownMatchSelectWidth\n      popupClassName={layoutMode === LayoutMode.COMPACT ? 'easyform-select-dropdown-compact' : null}\n      mode={mode}\n      onChange={onChange}\n      defaultValue={value}\n      dropdownRender={(menu) => (\n        <div onClick={preventDefaultClick}>\n          {optionSearchable && (\n            <Input\n              autoFocus={autoFocus}\n              placeholder=\"search..\"\n              onChange={filterOption}\n              onKeyDown={(e) => {\n                e.stopPropagation();\n              }}\n              suffix={<SearchOutlined />}\n            />\n          )}\n          {menu}\n        </div>\n      )}\n      tagRender={tagRender}\n    >\n      {groupsForSelect && (Object.keys(groupsForSelect).length > 1) &&\n        Object.keys(groupsForSelect).map((groupName, groupIndex) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <Select.OptGroup label={groupName === DEFAULT_GROUP_NAME ? '' : groupName} key={`${groupName}-${groupIndex}`}>\n            {groupsForSelect[groupName].map((option) => (\n              <Select.Option\n                value={option.value as string | number}\n                key={option.value?.toString()}\n              >\n                {option.label}\n              </Select.Option>\n            ))}\n          </Select.OptGroup>\n        ))}\n\n      {groupsForSelect &&\n        (Object.values(groupsForSelect).length === 1) &&\n        Object.values(groupsForSelect)[0].map((option: FieldOption) => (\n          <Select.Option\n            value={option.value as string | number}\n            key={option.value?.toString()}\n          >\n            {option.label}\n          </Select.Option>\n        ))}\n    </Select>\n  );\n};\nexport default SelectField;\n"],"file":"SelectField.js"}