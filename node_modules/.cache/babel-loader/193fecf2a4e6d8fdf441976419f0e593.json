{"ast":null,"code":"import{makeAutoObservable,toJS}from'mobx';import{ReviewMode}from'../types';import Cursor from'../../common/Cursor';import{isReviewEditable}from'../../../utils/tool-mode';/**\n * store for config\n * @class\n */export default class ConfigStore{/**\n   * active measurement box\n   * @getter\n   */get activeMeasurementBox(){return(toJS(this.measurementBoxList)||[])[this.activeMeasurementBoxIndex];}/**\n   * is there any modal opened\n   * @getter\n   */get isAnyModalOpened(){return this.attributesModalVisible||this.reviewModalVisible||this.pointAttributesModalVisible||this.frameAttributesModalVisible;}constructor(rootStore){/**\n   * root store\n   */this.rootStore=void 0;/**\n   * add mode, true means adding active\n   */this.addMode=false;/**\n   * review mode\n   */this.reviewMode=ReviewMode.LABELING;/**\n   * current cursor\n   */this.cursor=Cursor.INHERIT;/**\n   * canvas view scale factor\n   */this.viewScale=1;/**\n   * canvas view position\n   */this.viewPosition={x:0,y:0};/**\n   * whether cross line visible\n   */this.crossLineVisible=true;/**\n   * is attributes modal visible\n   */this.attributesModalVisible=false;/**\n   * point attributes modal visible\n   */this.pointAttributesModalVisible=false;/**\n   * frame attributes modal visible\n   */this.frameAttributesModalVisible=false;/**\n   * is review modal visible\n   */this.reviewModalVisible=false;/**\n   * measurement box list\n   */this.measurementBoxList=null;/**\n   * active measurement box index\n   */this.activeMeasurementBoxIndex=-1;/**\n   * Whether the shape can be rotated\n   */this.rotatable=false;/**\n   * auto snap to polygon & line vertexes\n   */this.autoSnapPoint=true;makeAutoObservable(this,{rootStore:false},{autoBind:true});this.rootStore=rootStore;}/**\n   * init from paylod\n   * @param payload\n   */init(payload){// set default review mode\nthis.reviewMode=isReviewEditable(payload.jobProxy.toolMode)?ReviewMode.REVIEW:ReviewMode.LABELING;// parse measurement box list\nif(typeof payload.measurement_box==='string'&&payload.measurement_box){try{const list=JSON.parse(payload.measurement_box);if(Array.isArray(list)&&list.every(i=>i.length===2&&typeof i[0]==='number'&&typeof i[1]==='number')){this.measurementBoxList=list;}}catch(e){// parse error\n}}// parse rotatable\nthis.rotatable=payload.rotatable==='true'||payload.rotatable===true;// parse auto snap point\nthis.autoSnapPoint=payload.auto_snap_point!=='false'&&payload.auto_snap_point!==false;}/**\n   * set add mode\n   * @param addMode\n   */setAddMode(addMode){if(this.rootStore.readonly||this.isAnyModalOpened||!this.rootStore.ontology.selectedCategory){return;}this.addMode=addMode;// change cursor\nthis.cursor=addMode?Cursor.CROSSHAIR:Cursor.DEFAULT;// change other shapes interactive\nthis.rootStore.shape.updateShapesInteractive(!addMode);// remove drawing shape if needed\nif(!addMode&&this.rootStore.shape.drawingShape){this.rootStore.shape.drawingShape.destroy();this.rootStore.shape.drawingShape=null;}// hide or show predict shape\nif(addMode){this.rootStore.shape.clearPredictedShapes();}else{this.rootStore.shape.predict();}}/**\n   * set review mode\n   * @param reviewMode\n   */setReviewMode(reviewMode){if(this.reviewMode!==reviewMode){this.setAddMode(false);this.reviewMode=reviewMode;this.rootStore.review.unselectReview();this.rootStore.shape.updateShapesEditable(reviewMode===ReviewMode.LABELING);}}/**\n   * set view scale\n   * @param viewScale\n   */setViewScale(viewScale){this.viewScale=viewScale;this.rootStore.review.updateAnchorsScale(viewScale);}/**\n   * set view position\n   * @param position\n   */setViewPosition(position){this.viewPosition={...position};this.rootStore.shape.redrawShapesLabel();}/**\n   * set cross line visible\n   * @param visible\n   */setCrossLineVisible(visible){this.crossLineVisible=visible;}/**\n   * set attributes modal visibility\n   * @param visible\n   */setAttributesModalVisible(visible){this.attributesModalVisible=visible;}/**\n   * set review modal visibility\n   * @param visible\n   */setReviewModalVisible(visible){this.reviewModalVisible=visible;}/**\n   * set point attributes modal visibility\n   * @param visible\n   */setPointAttributesModalVisible(visible){this.pointAttributesModalVisible=visible;}/**\n   * set frame attributes modal visibility\n   * @param visible\n   */setFrameAttributesModalVisible(visible){this.frameAttributesModalVisible=visible;}/**\n   * set measurement box indexs\n   * @param index\n   */setMeasurementBoxIndex(index){this.activeMeasurementBoxIndex=index;}}","map":{"version":3,"names":["makeAutoObservable","toJS","ReviewMode","Cursor","isReviewEditable","ConfigStore","activeMeasurementBox","measurementBoxList","activeMeasurementBoxIndex","isAnyModalOpened","attributesModalVisible","reviewModalVisible","pointAttributesModalVisible","frameAttributesModalVisible","constructor","rootStore","addMode","reviewMode","LABELING","cursor","INHERIT","viewScale","viewPosition","x","y","crossLineVisible","rotatable","autoSnapPoint","autoBind","init","payload","jobProxy","toolMode","REVIEW","measurement_box","list","JSON","parse","Array","isArray","every","i","length","e","auto_snap_point","setAddMode","readonly","ontology","selectedCategory","CROSSHAIR","DEFAULT","shape","updateShapesInteractive","drawingShape","destroy","clearPredictedShapes","predict","setReviewMode","review","unselectReview","updateShapesEditable","setViewScale","updateAnchorsScale","setViewPosition","position","redrawShapesLabel","setCrossLineVisible","visible","setAttributesModalVisible","setReviewModalVisible","setPointAttributesModalVisible","setFrameAttributesModalVisible","setMeasurementBoxIndex","index"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking2/store/ConfigStore.ts"],"sourcesContent":["import { makeAutoObservable, toJS } from 'mobx';\nimport RootStore from './RootStore';\nimport { Payload, ReviewMode } from '../types';\nimport Cursor from '../../common/Cursor';\nimport { isReviewEditable } from '../../../utils/tool-mode';\n\n/**\n * store for config\n * @class\n */\nexport default class ConfigStore {\n  /**\n   * root store\n   */\n  rootStore: typeof RootStore;\n\n  /**\n   * add mode, true means adding active\n   */\n  addMode = false;\n\n  /**\n   * review mode\n   */\n  reviewMode = ReviewMode.LABELING;\n\n  /**\n   * current cursor\n   */\n  cursor = Cursor.INHERIT;\n\n  /**\n   * canvas view scale factor\n   */\n  viewScale = 1;\n\n  /**\n   * canvas view position\n   */\n  viewPosition = { x: 0, y: 0 };\n\n  /**\n   * whether cross line visible\n   */\n  crossLineVisible = true;\n\n  /**\n   * is attributes modal visible\n   */\n  attributesModalVisible = false;\n\n  /**\n   * point attributes modal visible\n   */\n  pointAttributesModalVisible = false;\n\n  /**\n   * frame attributes modal visible\n   */\n  frameAttributesModalVisible = false;\n\n  /**\n   * is review modal visible\n   */\n  reviewModalVisible = false;\n\n  /**\n   * measurement box list\n   */\n  measurementBoxList: number[][] | null = null;\n\n  /**\n   * active measurement box index\n   */\n  activeMeasurementBoxIndex = -1;\n\n  /**\n   * Whether the shape can be rotated\n   */\n  rotatable = false;\n\n  /**\n   * auto snap to polygon & line vertexes\n   */\n  autoSnapPoint = true;\n\n  /**\n   * active measurement box\n   * @getter\n   */\n  get activeMeasurementBox() {\n    return (toJS(this.measurementBoxList) || [])[this.activeMeasurementBoxIndex];\n  }\n\n  /**\n   * is there any modal opened\n   * @getter\n   */\n  get isAnyModalOpened() {\n    return this.attributesModalVisible\n      || this.reviewModalVisible\n      || this.pointAttributesModalVisible\n      || this.frameAttributesModalVisible;\n  }\n\n  constructor(rootStore: typeof RootStore) {\n    makeAutoObservable(this, {\n      rootStore: false,\n    }, {\n      autoBind: true,\n    });\n\n    this.rootStore = rootStore;\n  }\n\n  /**\n   * init from paylod\n   * @param payload\n   */\n  init(payload: Payload) {\n    // set default review mode\n    this.reviewMode = isReviewEditable(payload.jobProxy.toolMode) ? ReviewMode.REVIEW : ReviewMode.LABELING;\n\n    // parse measurement box list\n    if (typeof payload.measurement_box === 'string' && payload.measurement_box) {\n      try {\n        const list = JSON.parse(payload.measurement_box);\n        if (Array.isArray(list) && list.every((i) => i.length === 2 && typeof i[0] === 'number' && typeof i[1] === 'number')) {\n          this.measurementBoxList = list;\n        }\n      } catch (e) {\n        // parse error\n      }\n    }\n\n    // parse rotatable\n    this.rotatable = payload.rotatable === 'true' || payload.rotatable === true;\n\n    // parse auto snap point\n    this.autoSnapPoint = payload.auto_snap_point !== 'false' && payload.auto_snap_point !== false;\n  }\n\n  /**\n   * set add mode\n   * @param addMode\n   */\n  setAddMode(addMode: boolean) {\n    if (this.rootStore.readonly || this.isAnyModalOpened || !this.rootStore.ontology.selectedCategory) {\n      return;\n    }\n\n    this.addMode = addMode;\n    // change cursor\n    this.cursor = addMode ? Cursor.CROSSHAIR : Cursor.DEFAULT;\n    // change other shapes interactive\n    this.rootStore.shape.updateShapesInteractive(!addMode);\n    // remove drawing shape if needed\n    if (!addMode && this.rootStore.shape.drawingShape) {\n      this.rootStore.shape.drawingShape.destroy();\n      this.rootStore.shape.drawingShape = null;\n    }\n    // hide or show predict shape\n    if (addMode) {\n      this.rootStore.shape.clearPredictedShapes();\n    } else {\n      this.rootStore.shape.predict();\n    }\n  };\n\n  /**\n   * set review mode\n   * @param reviewMode\n   */\n  setReviewMode(reviewMode: ReviewMode) {\n    if (this.reviewMode !== reviewMode) {\n      this.setAddMode(false);\n      this.reviewMode = reviewMode;\n      this.rootStore.review.unselectReview();\n      this.rootStore.shape.updateShapesEditable(reviewMode === ReviewMode.LABELING);\n    }\n  }\n\n  /**\n   * set view scale\n   * @param viewScale\n   */\n  setViewScale(viewScale: number) {\n    this.viewScale = viewScale;\n    this.rootStore.review.updateAnchorsScale(viewScale);\n  }\n\n  /**\n   * set view position\n   * @param position\n   */\n  setViewPosition(position: { x: number; y: number }) {\n    this.viewPosition = { ...position };\n    this.rootStore.shape.redrawShapesLabel();\n  }\n\n  /**\n   * set cross line visible\n   * @param visible\n   */\n  setCrossLineVisible(visible: boolean) {\n    this.crossLineVisible = visible;\n  }\n\n  /**\n   * set attributes modal visibility\n   * @param visible\n   */\n  setAttributesModalVisible(visible: boolean) {\n    this.attributesModalVisible = visible;\n  }\n\n  /**\n   * set review modal visibility\n   * @param visible\n   */\n  setReviewModalVisible(visible: boolean) {\n    this.reviewModalVisible = visible;\n  }\n\n  /**\n   * set point attributes modal visibility\n   * @param visible\n   */\n  setPointAttributesModalVisible(visible: boolean) {\n    this.pointAttributesModalVisible = visible;\n  }\n\n  /**\n   * set frame attributes modal visibility\n   * @param visible\n   */\n  setFrameAttributesModalVisible(visible: boolean) {\n    this.frameAttributesModalVisible = visible;\n  }\n\n  /**\n   * set measurement box indexs\n   * @param index\n   */\n  setMeasurementBoxIndex(index: number) {\n    this.activeMeasurementBoxIndex = index;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}