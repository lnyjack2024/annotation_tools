{"ast":null,"code":"import React,{forwardRef,useCallback,useEffect,useImperativeHandle,useRef,useState}from'react';import{EditorState,getDefaultKeyBinding}from'draft-js';import Editor from'@draft-js-plugins/editor';import createImagePlugin from'@draft-js-plugins/image';import cx from'classnames';import{Check,Close,Fullscreen,FullscreenExit}from'../../icons';import prismDecorator from'./decorators/prism-decorator';import backspaceCommandHandler from'./command-handlers/backspace';import tabCommandHandler from'./command-handlers/tab';import splitBlockCallback from'./callbacks/split-block-callback';import insertFragmentCallback from'./callbacks/insert-fragment-callback';import{contentStateToContent,contentToContentState}from'./utils';import{TAB_COMMAND,TAB_SHIFT_COMMAND}from'./constants';// styles\nimport'draft-js/dist/Draft.css';import'prismjs/themes/prism.css';const imagePlugin=createImagePlugin();const Input=forwardRef((_ref,ref)=>{let{defaultValue,onSubmit,onCancel,onError,renderTypeSwitch}=_ref;const editor=useRef(null);const[editorState,setEditorState]=useState(EditorState.createEmpty());// NOTICE: use settimeout to wait for plugin decorators setup\nconst initEditor=v=>setTimeout(()=>{var _editor$current;setEditorState(v&&v.length>0?EditorState.createWithContent(contentToContentState(v)):EditorState.createEmpty());(_editor$current=editor.current)===null||_editor$current===void 0?void 0:_editor$current.focus();},0);useEffect(()=>{initEditor(defaultValue);},[defaultValue]);const[screenfull,setScreenfull]=useState(false);const[addFormula,setAddFormula]=useState(false);const[editingFormulaBlock,setEditingFormulaBlock]=useState(null);useImperativeHandle(ref,()=>({setValue:initEditor,getCurrentValue:()=>contentStateToContent(editorState.getCurrentContent())}));const submit=()=>{const content=contentStateToContent(editorState.getCurrentContent());const last=content[content.length-1];if((last===null||last===void 0?void 0:last.content)===''){// remove last empty line\ncontent.pop();}if(content.length>0){onSubmit(content);setScreenfull(false);}else{var _editor$current2;// empty content\nonError();(_editor$current2=editor.current)===null||_editor$current2===void 0?void 0:_editor$current2.focus();}};const onEditorStateChange=updatedEditorState=>{const changeType=updatedEditorState.getLastChangeType();switch(changeType){case'split-block':// enter\nsetEditorState(splitBlockCallback(updatedEditorState));break;case'insert-fragment':// paste\nsetEditorState(insertFragmentCallback(updatedEditorState,editorState));break;default:setEditorState(updatedEditorState);}};const handleKeyCommand=command=>{switch(command){case'backspace':case'backspace-to-start-of-line':return backspaceCommandHandler(editorState,setEditorState);case TAB_COMMAND:case TAB_SHIFT_COMMAND:{return tabCommandHandler(editorState,setEditorState,{shift:command===TAB_SHIFT_COMMAND});}default:}return'not-handled';};const keyBindingFn=useCallback(e=>{if(e.key==='Tab'){return e.shiftKey?TAB_SHIFT_COMMAND:TAB_COMMAND;}return getDefaultKeyBinding(e);},[]);return/*#__PURE__*/React.createElement(\"div\",{className:cx('llm-input-container',{'screen-full':screenfull}),onMouseDown:e=>e.stopPropagation()},/*#__PURE__*/React.createElement(\"div\",{className:\"llm-input-tools\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"llm-input-tools-btn\",onClick:()=>setScreenfull(!screenfull)},screenfull?/*#__PURE__*/React.createElement(FullscreenExit,null):/*#__PURE__*/React.createElement(Fullscreen,null)),renderTypeSwitch&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"divider\"}),renderTypeSwitch())),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"llm-input-tools-btn\",onClick:onCancel},/*#__PURE__*/React.createElement(Close,null)),/*#__PURE__*/React.createElement(\"div\",{className:\"llm-input-tools-btn\",onClick:submit},/*#__PURE__*/React.createElement(Check,null)))),/*#__PURE__*/React.createElement(\"div\",{className:\"llm-input\"},/*#__PURE__*/React.createElement(Editor,{ref:editor,stripPastedStyles:true,plugins:[imagePlugin],decorators:[prismDecorator],editorState:editorState,onChange:onEditorStateChange,handleKeyCommand:handleKeyCommand,keyBindingFn:keyBindingFn})));});export default Input;","map":{"version":3,"names":["React","forwardRef","useCallback","useEffect","useImperativeHandle","useRef","useState","EditorState","getDefaultKeyBinding","Editor","createImagePlugin","cx","Check","Close","Fullscreen","FullscreenExit","prismDecorator","backspaceCommandHandler","tabCommandHandler","splitBlockCallback","insertFragmentCallback","contentStateToContent","contentToContentState","TAB_COMMAND","TAB_SHIFT_COMMAND","imagePlugin","Input","_ref","ref","defaultValue","onSubmit","onCancel","onError","renderTypeSwitch","editor","editorState","setEditorState","createEmpty","initEditor","v","setTimeout","_editor$current","length","createWithContent","current","focus","screenfull","setScreenfull","addFormula","setAddFormula","editingFormulaBlock","setEditingFormulaBlock","setValue","getCurrentValue","getCurrentContent","submit","content","last","pop","_editor$current2","onEditorStateChange","updatedEditorState","changeType","getLastChangeType","handleKeyCommand","command","shift","keyBindingFn","e","key","shiftKey","createElement","className","onMouseDown","stopPropagation","onClick","Fragment","stripPastedStyles","plugins","decorators","onChange"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/common/llm/input/Input.tsx"],"sourcesContent":["import React, { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { ContentBlock, EditorCommand, EditorState, Entity, getDefaultKeyBinding } from 'draft-js';\nimport Editor from '@draft-js-plugins/editor';\nimport createImagePlugin from '@draft-js-plugins/image';\nimport cx from 'classnames';\nimport { Check, Close, Fullscreen, FullscreenExit } from '../../icons';\nimport prismDecorator from './decorators/prism-decorator';\nimport backspaceCommandHandler from './command-handlers/backspace';\nimport tabCommandHandler from './command-handlers/tab';\nimport splitBlockCallback from './callbacks/split-block-callback';\nimport insertFragmentCallback from './callbacks/insert-fragment-callback';\nimport { contentStateToContent, contentToContentState } from './utils';\nimport { TAB_COMMAND, TAB_SHIFT_COMMAND } from './constants';\nimport { Content } from '../types';\n\n// styles\nimport 'draft-js/dist/Draft.css';\nimport 'prismjs/themes/prism.css';\n\nconst imagePlugin = createImagePlugin();\n\ninterface InputProps {\n  defaultValue?: Content;\n  onSubmit: (value: Content) => void;\n  onCancel: () => void;\n  onError: (msg?: string) => void;\n  renderTypeSwitch?: () => React.ReactElement;\n}\n\nexport interface InputHandle {\n  setValue: (value?: Content) => void;\n  getCurrentValue: () => Content;\n}\n\nconst Input = forwardRef<InputHandle, InputProps>(({\n  defaultValue,\n  onSubmit,\n  onCancel,\n  onError,\n  renderTypeSwitch,\n}, ref) => {\n  const editor = useRef<Editor>(null);\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n\n  // NOTICE: use settimeout to wait for plugin decorators setup\n  const initEditor = (v?: Content) => setTimeout(() => {\n    setEditorState(\n      v && v.length > 0\n        ? EditorState.createWithContent(contentToContentState(v))\n        : EditorState.createEmpty()\n    );\n    editor.current?.focus();\n  }, 0);\n\n  useEffect(() => {\n    initEditor(defaultValue);\n  }, [defaultValue]);\n\n  const [screenfull, setScreenfull] = useState(false);\n  const [addFormula, setAddFormula] = useState(false);\n  const [editingFormulaBlock, setEditingFormulaBlock] = useState<ContentBlock | null>(null);\n\n  useImperativeHandle(ref, () => ({\n    setValue: initEditor,\n    getCurrentValue: () => contentStateToContent(editorState.getCurrentContent()),\n  }));\n\n  const submit = () => {\n    const content = contentStateToContent(editorState.getCurrentContent());\n    const last = content[content.length - 1];\n    if (last?.content === '') {\n      // remove last empty line\n      content.pop();\n    }\n    if (content.length > 0) {\n      onSubmit(content);\n      setScreenfull(false);\n    } else {\n      // empty content\n      onError();\n      editor.current?.focus();\n    }\n  };\n\n  const onEditorStateChange = (updatedEditorState: EditorState) => {\n    const changeType = updatedEditorState.getLastChangeType();\n\n    switch (changeType) {\n      case 'split-block':\n        // enter\n        setEditorState(splitBlockCallback(updatedEditorState));\n        break;\n      case 'insert-fragment':\n        // paste\n        setEditorState(insertFragmentCallback(updatedEditorState, editorState));\n        break;\n      default:\n        setEditorState(updatedEditorState);\n    }\n  };\n\n  const handleKeyCommand = (command: EditorCommand) => {\n    switch (command) {\n      case 'backspace':\n      case 'backspace-to-start-of-line':\n        return backspaceCommandHandler(editorState, setEditorState);\n      case TAB_COMMAND:\n      case TAB_SHIFT_COMMAND: {\n        return tabCommandHandler(editorState, setEditorState, {\n          shift: command === TAB_SHIFT_COMMAND,\n        });\n      }\n      default:\n    }\n    return 'not-handled';\n  };\n\n  const keyBindingFn = useCallback((e) => {\n    if (e.key === 'Tab') {\n      return e.shiftKey ? TAB_SHIFT_COMMAND : TAB_COMMAND;\n    }\n    return getDefaultKeyBinding(e);\n  }, []);\n\n  return (\n    <div\n      className={cx('llm-input-container', {\n        'screen-full': screenfull,\n      })}\n      onMouseDown={(e) => e.stopPropagation()}\n    >\n      <div className=\"llm-input-tools\">\n        <div>\n          <div\n            className=\"llm-input-tools-btn\"\n            onClick={() => setScreenfull(!screenfull)}\n          >\n            {screenfull ? <FullscreenExit /> : <Fullscreen />}\n          </div>\n          {renderTypeSwitch && (\n            <>\n              <div className=\"divider\" />\n              {renderTypeSwitch()}\n            </>\n          )}\n        </div>\n        <div>\n          <div\n            className=\"llm-input-tools-btn\"\n            onClick={onCancel}\n          >\n            <Close />\n          </div>\n          <div\n            className=\"llm-input-tools-btn\"\n            onClick={submit}\n          >\n            <Check />\n          </div>\n        </div>\n      </div>\n      <div className=\"llm-input\">\n        <Editor\n          ref={editor}\n          stripPastedStyles\n          plugins={[imagePlugin]}\n          decorators={[prismDecorator]}\n          editorState={editorState}\n          onChange={onEditorStateChange}\n          handleKeyCommand={handleKeyCommand}\n          keyBindingFn={keyBindingFn}\n        />\n      </div>\n\n    </div>\n  );\n});\n\nexport default Input;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}