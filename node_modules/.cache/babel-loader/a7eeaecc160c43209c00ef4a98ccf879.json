{"ast":null,"code":"import { useState, useRef, useEffect, useCallback } from 'react';\nimport { getNextState } from './utils';\nexport default function useAsyncState(init) {\n  const [state, setState] = useState(init);\n  const list = useRef([]);\n  useEffect(() => {\n    list.current.forEach(v => v(state));\n    list.current = [];\n  }, [state]);\n  const action = useCallback(nextState => new Promise(resolve => {\n    setState(prevState => {\n      // const nextState = value instanceof Function ? value(prevState) : value;\n\n      if (nextState === prevState) {\n        resolve(nextState);\n      } else {\n        list.current.push(resolve);\n      }\n      return nextState;\n    });\n  }), [setState]);\n  const asyncSetState = useCallback(async value => {\n    const preState = await getNextState(setState);\n    const nextState = value instanceof Function ? await value(preState) : value;\n    return action(nextState);\n  }, []);\n  return [state, asyncSetState];\n}","map":{"version":3,"names":["useState","useRef","useEffect","useCallback","getNextState","useAsyncState","init","state","setState","list","current","forEach","v","action","nextState","Promise","resolve","prevState","push","asyncSetState","value","preState","Function"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/keypoint/useAsyncState.ts"],"sourcesContent":["import { useState, useRef, useEffect, useCallback } from 'react';\nimport { getNextState } from './utils';\n\ntype SetStateAction<S> = (\n  prevState: S | ((prevState: S) => S | Promise<S>)\n) => Promise<S>;\ntype AsyncAction<S> = (value: S) => Promise<S>;\n\nexport default function useAsyncState<S>(init: S | (() => S)): [S, SetStateAction<S>] {\n  const [state, setState] = useState<S>(init);\n\n  const list = useRef<Array<(state: S) => void>>([]);\n\n  useEffect(() => {\n    list.current.forEach((v) => v(state));\n    list.current = [];\n  }, [state]);\n\n  const action: AsyncAction<S> = useCallback(\n    (nextState: S) => new Promise<S>((resolve) => {\n      setState((prevState) => {\n        // const nextState = value instanceof Function ? value(prevState) : value;\n\n        if (nextState === prevState) {\n          resolve(nextState);\n        } else {\n          list.current.push(resolve);\n        }\n\n        return nextState;\n      });\n    }),\n    [setState]\n  );\n\n  const asyncSetState: SetStateAction<S> = useCallback(\n    async (value: S | ((prevState: S) => S | Promise<S>)) => {\n      const preState = await getNextState(setState);\n      const nextState =\n        value instanceof Function ? await value(preState) : value;\n      return action(nextState);\n    },\n    []\n  );\n\n  return [state, asyncSetState];\n}\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAChE,SAASC,YAAY,QAAQ,SAAS;AAOtC,eAAe,SAASC,aAAaA,CAAIC,IAAmB,EAA0B;EACpF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAIM,IAAI,CAAC;EAE3C,MAAMG,IAAI,GAAGR,MAAM,CAA4B,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACdO,IAAI,CAACC,OAAO,CAACC,OAAO,CAAEC,CAAC,IAAKA,CAAC,CAACL,KAAK,CAAC,CAAC;IACrCE,IAAI,CAACC,OAAO,GAAG,EAAE;EACnB,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;EAEX,MAAMM,MAAsB,GAAGV,WAAW,CACvCW,SAAY,IAAK,IAAIC,OAAO,CAAKC,OAAO,IAAK;IAC5CR,QAAQ,CAAES,SAAS,IAAK;MACtB;;MAEA,IAAIH,SAAS,KAAKG,SAAS,EAAE;QAC3BD,OAAO,CAACF,SAAS,CAAC;MACpB,CAAC,MAAM;QACLL,IAAI,CAACC,OAAO,CAACQ,IAAI,CAACF,OAAO,CAAC;MAC5B;MAEA,OAAOF,SAAS;IAClB,CAAC,CAAC;EACJ,CAAC,CAAC,EACF,CAACN,QAAQ,CACX,CAAC;EAED,MAAMW,aAAgC,GAAGhB,WAAW,CAClD,MAAOiB,KAA6C,IAAK;IACvD,MAAMC,QAAQ,GAAG,MAAMjB,YAAY,CAACI,QAAQ,CAAC;IAC7C,MAAMM,SAAS,GACbM,KAAK,YAAYE,QAAQ,GAAG,MAAMF,KAAK,CAACC,QAAQ,CAAC,GAAGD,KAAK;IAC3D,OAAOP,MAAM,CAACC,SAAS,CAAC;EAC1B,CAAC,EACD,EACF,CAAC;EAED,OAAO,CAACP,KAAK,EAAEY,aAAa,CAAC;AAC/B","ignoreList":[]},"metadata":{},"sourceType":"module"}