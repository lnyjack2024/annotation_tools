{"ast":null,"code":"import{makeAutoObservable,runInAction,toJS}from'mobx';import{cloneDeep}from'lodash';import View,{EventAction}from'../shapes/View';import{DEFAULT_CAMERA_NAME,SIDEBAR_WIDTH,TOOLBAR_HEIGHT}from'../constants';import{parseFramesByPaylod,parseLabelConfig}from'../utils';import{ReviewMode}from'../types';import loader from'../../../utils/image-preloader';import{triggerFormRules}from'../../../utils/form';/**\n * store for frames\n * @class\n */export default class FrameStore{/**\n   * is single camera\n   * @getter\n   */get isSingleCamera(){const cameraNames=Object.keys(this.cameras);return cameraNames.length===1;}/**\n   * camera names\n   * @getter\n   */get cameraNames(){return Object.keys(this.cameras);}/**\n   * camera count\n   * @getter\n   */get cameraCount(){return Object.keys(this.cameras).length;}/**\n   * current cameras frames\n   * @getter\n   */get frames(){return this.cameras[this.currentCamera]||[];}/**\n   * current camera frame count\n   * @getter\n   */get frameCount(){return this.frames.length;}/**\n   * image boundary\n   * @getter\n   */get imageBounds(){return this.getImageBoundsForCamera(this.currentCamera);}/**\n   * is current frame attributes\n   * @getter\n   */get currentFrameAttributes(){var _this$attributes$this;const{attributes={}}=((_this$attributes$this=this.attributes[this.currentCamera])===null||_this$attributes$this===void 0?void 0:_this$attributes$this[this.currentFrame])||{};return attributes;}constructor(rootStore){var _this=this;/**\n   * root store\n   */this.rootStore=void 0;/**\n   * camera frames\n   */this.cameras={};/**\n   * camera views\n   */this.cameraViews={};/**\n   * current active camera\n   */this.currentCameraView=null;/**\n   * frame attributes (for each camera)\n   */this.attributes={};/**\n   * next shape orders for different cameras & frames\n   */this.nextShapeOrders={};/**\n   * current camera name\n   */this.currentCamera=DEFAULT_CAMERA_NAME;/**\n   * current frame index\n   */this.currentFrame=0;/**\n   * frame loading\n   */this.loading=true;/**\n   * is playing\n   */this.isPlaying=false;/**\n   * play timer\n   */this.playTimer=null;/**\n   * image preloader\n   */this.imagePreloader=null;/**\n   * frame config (for each camera)\n   */this.frameConfig=void 0;/**\n   * get next shape order & do increment\n   * @param frameIndex\n   * @param camera\n   */this.getNextShapeOrder=function(){let frameIndex=arguments.length>0&&arguments[0]!==undefined?arguments[0]:_this.currentFrame;let camera=arguments.length>1&&arguments[1]!==undefined?arguments[1]:_this.currentCamera;if(_this.nextShapeOrders[camera]===undefined){_this.nextShapeOrders[camera]={};}if(_this.nextShapeOrders[camera][frameIndex]===undefined){_this.nextShapeOrders[camera][frameIndex]=0;}const order=_this.nextShapeOrders[camera][frameIndex];_this.nextShapeOrders[camera][frameIndex]+=1;return order;};makeAutoObservable(this,{rootStore:false,cameraViews:false,nextShapeOrders:false,playTimer:false,imagePreloader:false,imageBounds:false},{autoBind:true});this.rootStore=rootStore;}/**\n   * init from paylod\n   * @param payload\n   */async init(payload){const cameras=await parseFramesByPaylod(payload);// parse frame config\nthis.frameConfig=parseLabelConfig(payload.frame_config);// update attributes by camera & frames\nlet frameCount=0;let defaultAttributes;if(this.frameConfig){const{updatedValues}=triggerFormRules(this.frameConfig,{});if(updatedValues&&Object.keys(updatedValues).length>0){defaultAttributes=updatedValues;}}const attributes={};cameras.forEach(_ref=>{let{camera,frames}=_ref;const count=frames.length;if(count>frameCount){frameCount=count;}if(!attributes[camera]){attributes[camera]={};}frames.forEach((_,frameIndex)=>{if(!attributes[camera][frameIndex]){attributes[camera][frameIndex]={frameIndex,valid:true,originValid:true,rotation:0};}if(defaultAttributes){if(this.rootStore.annotatable){// save to attributes directly\nattributes[camera][frameIndex].attributes={...defaultAttributes};}else{// just show attribute keys if no value\nattributes[camera][frameIndex].attributes={};Object.keys(defaultAttributes).forEach(key=>{attributes[camera][frameIndex].attributes[key]='';});}}});});this.attributes=attributes;runInAction(()=>{if(cameras.length>0){// set cameras\nthis.cameras=cameras.reduce((acc,curr)=>{acc[curr.camera]=curr.frames;return acc;},{});// setup camera containers\ncameras.forEach(_ref2=>{let{camera}=_ref2;return this.createCameraView(camera);});// set current camera\nthis.setCamera(cameras[0].camera);// preload image\nconst allImages=Array.from({length:this.frameCount}).flatMap((_,i)=>cameras.map(c=>c.frames[i]));this.imagePreloader=loader(allImages);}});}/**\n   * init attributes\n   * @param result\n   */initAttributes(result){const{frames:attrs}=result;if(Array.isArray(attrs)){const attributes=toJS(this.attributes);attrs.forEach(cameraItem=>{const{camera,frames}=cameraItem||{};if(camera){if(!attributes[camera]){attributes[camera]={};}if(Array.isArray(frames)){frames.forEach(frameItem=>{const{frameIndex,imageUrl,imageWidth,imageHeight,valid,attributes:frameAttributes,...legacyAttributes}=frameItem;attributes[camera][frameIndex]={...attributes[camera][frameIndex],frameIndex,imageUrl,imageWidth,imageHeight,valid:valid!==false&&valid!=='false',rotation:0,attributes:frameAttributes||Object.keys(legacyAttributes).length>0?cloneDeep({...legacyAttributes,...frameAttributes}):undefined};});}}});this.attributes=attributes;}}/**\n   * create camera view\n   * @param camera\n   */createCameraView(camera){const{autoSnapPoint}=this.rootStore.config;const cameraView=new View({id:camera,enableReview:!this.rootStore.isLabeling,enableSnap:autoSnapPoint});// bind listeners\ncameraView.on(EventAction.SELECTED,event=>{if(event.button===2){return;}this.rootStore.shape.unselectShape();this.rootStore.review.unselectReview();});cameraView.on(EventAction.POINTERDOWN,(p,event)=>{if(event.button===2){return;}if(this.rootStore.config.reviewMode===ReviewMode.LABELING){this.rootStore.shape.addShape(p);}else{this.rootStore.review.addReview(p);}});cameraView.on(EventAction.SCALE_CHANGED,scale=>{if(this.currentCamera===camera){this.rootStore.config.setViewScale(scale);}});cameraView.on(EventAction.POSITION_CHANGED,p=>{if(this.currentCamera===camera){this.rootStore.config.setViewPosition(p);}});this.cameraViews[camera]=cameraView;return cameraView;}/**\n   * get image bounds for camera\n   * @param camera\n   */getImageBoundsForCamera(camera){const cameraView=this.cameraViews[camera];const w=cameraView===null||cameraView===void 0?void 0:cameraView.image.width;const h=cameraView===null||cameraView===void 0?void 0:cameraView.image.height;return{left:0,top:0,right:w||0,bottom:h||0};}/**\n   * set current camera\n   * @param camera\n   */setCamera(camera){// set selected camera\nthis.currentCamera=camera;const cameraView=this.cameraViews[camera];if(cameraView){cameraView.selected=true;this.currentCameraView=cameraView;this.updateCameraLayers(cameraView);}}/**\n   * update working layers by camera view\n   * @param cameraView\n   */updateCameraLayers(cameraView){// update view scale\nthis.rootStore.config.setViewScale(cameraView.viewScale);// update shapes layer\nthis.rootStore.shape.currentLayer=cameraView.shapesLayer;// update review layer\nif(cameraView.reviewLayer){this.rootStore.review.setReviewLayer(cameraView.reviewLayer);this.rootStore.review.setReviewLayerOffset(SIDEBAR_WIDTH,TOOLBAR_HEIGHT*2);}}/**\n   * set current frame\n   * @param frameIndex\n   */setFrame(frameIndex){if(frameIndex!==this.currentFrame){// frame changes\nthis.currentFrame=frameIndex;this.loading=true;this.rootStore.review.clearAnchors();}}/**\n   * when frame loaded\n   * @param image\n   */onFrameLoaded(){var _this$imagePreloader;// turn off add mode\nthis.rootStore.config.setAddMode(false);// setup current shapes\nthis.rootStore.shape.setupShapes();// setup reivew anchors\nthis.rootStore.review.setupReviewAnchors();// select shape\nconst{selectedInstanceItems,selectedInstances}=this.rootStore.instance;if(selectedInstanceItems.length>0){this.rootStore.shape.selectShapeByInstanceItem(selectedInstanceItems);}else if(selectedInstances.length>0){this.rootStore.shape.updateShapesInInstance(selectedInstances);}// predict\nthis.rootStore.shape.predict();this.loading=false;// preload image\n(_this$imagePreloader=this.imagePreloader)===null||_this$imagePreloader===void 0?void 0:_this$imagePreloader.preload((this.currentFrame+1)*this.cameraCount);// when loaded, if is auto playing, play next frame\nif(this.isPlaying){this.playTimer=window.setTimeout(()=>{this.setFrameByAutoPlay();},300);}}/**\n   * go to previous frame by step\n   * @param step\n   */prev(step){if(!this.isPlaying){this.setFrame(Math.max(this.currentFrame-step,0));}}/**\n   * go to next frame by step\n   * @param step\n   */next(step){if(!this.isPlaying){this.setFrame(Math.min(this.currentFrame+step,this.frameCount-1));}}/**\n   * toggle playing\n   */togglePlaying(){this.isPlaying=!this.isPlaying;if(this.isPlaying){this.setFrameByAutoPlay();}else if(this.playTimer){window.clearTimeout(this.playTimer);this.playTimer=null;}}/**\n   * set frame by auto play\n   */setFrameByAutoPlay(){if(this.currentFrame<this.frameCount-1){this.setFrame(this.currentFrame+1);}else{this.isPlaying=false;this.setFrame(0);}}/**\n   * can update attributes by camera & frameIndex\n   * @param camera\n   * @param frameIndex\n   */canUpdateFrameForCamera(camera,frameIndex){if(this.rootStore.readonly){return false;}if(!this.attributes[camera]||!this.attributes[camera][frameIndex]){// attributes not initialized as expected, may have wrong frames or base_url input\nreturn false;}return true;}/**\n   * set frame attributes & frame valid\n   * @param camera\n   * @param frames\n   * @param attributes\n   */setFrameAttributesForCamera(camera,frames,attributes){const currentFramesData=[];const newFramesData=[];frames.sort((a,b)=>a-b).forEach(frameIndex=>{if(this.canUpdateFrameForCamera(camera,frameIndex)){currentFramesData.push(toJS(this.attributes[camera][frameIndex]));this.attributes[camera][frameIndex].attributes=cloneDeep(attributes);newFramesData.push(toJS(this.attributes[camera][frameIndex]));}});if(currentFramesData.length>0){const storeId=this.rootStore.undo.preserve({frames:[{camera,frames:currentFramesData}]});this.rootStore.undo.save(storeId,{frames:[{camera,frames:newFramesData}]});}}/**\n   * update next shape order\n   * @param currentOrder\n   * @param frameIndex\n   * @param camera\n   */updateNextShapeOrder(currentOrder){let frameIndex=arguments.length>1&&arguments[1]!==undefined?arguments[1]:this.currentFrame;let camera=arguments.length>2&&arguments[2]!==undefined?arguments[2]:this.currentCamera;if(this.nextShapeOrders[camera]===undefined){this.nextShapeOrders[camera]={};}if(this.nextShapeOrders[camera][frameIndex]===undefined||this.nextShapeOrders[camera][frameIndex]<=currentOrder){this.nextShapeOrders[camera][frameIndex]=currentOrder+1;}}/**\n   * update image size\n   * @param camera\n   * @param frameIndex\n   * @param width\n   * @param height\n   */updateImageSize(camera,frameIndex,width,height){if(this.attributes[camera]&&this.attributes[camera][frameIndex]){const{imageWidth,imageHeight}=this.attributes[camera][frameIndex];if(width>0&&height>0||imageWidth===undefined||imageHeight===undefined){// only update when size valid, or size not initialized\nthis.attributes[camera][frameIndex].imageWidth=width;this.attributes[camera][frameIndex].imageHeight=height;}}}/**\n   * get frame attributes json data (for save)\n   */framesJSON(){return Object.keys(this.cameras).map(camera=>({camera,frames:this.cameras[camera].map((imageUrl,frameIndex)=>({frameIndex,imageUrl,imageWidth:this.attributes[camera][frameIndex].imageWidth,imageHeight:this.attributes[camera][frameIndex].imageHeight,valid:true,originValid:true,rotation:0,attributes:toJS(this.attributes[camera][frameIndex].attributes)}))}));}}","map":{"version":3,"names":["makeAutoObservable","runInAction","toJS","cloneDeep","View","EventAction","DEFAULT_CAMERA_NAME","SIDEBAR_WIDTH","TOOLBAR_HEIGHT","parseFramesByPaylod","parseLabelConfig","ReviewMode","loader","triggerFormRules","FrameStore","isSingleCamera","cameraNames","Object","keys","cameras","length","cameraCount","frames","currentCamera","frameCount","imageBounds","getImageBoundsForCamera","currentFrameAttributes","_this$attributes$this","attributes","currentFrame","constructor","rootStore","_this","cameraViews","currentCameraView","nextShapeOrders","loading","isPlaying","playTimer","imagePreloader","frameConfig","getNextShapeOrder","frameIndex","arguments","undefined","camera","order","autoBind","init","payload","frame_config","defaultAttributes","updatedValues","forEach","_ref","count","_","valid","originValid","rotation","annotatable","key","reduce","acc","curr","_ref2","createCameraView","setCamera","allImages","Array","from","flatMap","i","map","c","initAttributes","result","attrs","isArray","cameraItem","frameItem","imageUrl","imageWidth","imageHeight","frameAttributes","legacyAttributes","autoSnapPoint","config","cameraView","id","enableReview","isLabeling","enableSnap","on","SELECTED","event","button","shape","unselectShape","review","unselectReview","POINTERDOWN","p","reviewMode","LABELING","addShape","addReview","SCALE_CHANGED","scale","setViewScale","POSITION_CHANGED","setViewPosition","w","image","width","h","height","left","top","right","bottom","selected","updateCameraLayers","viewScale","currentLayer","shapesLayer","reviewLayer","setReviewLayer","setReviewLayerOffset","setFrame","clearAnchors","onFrameLoaded","_this$imagePreloader","setAddMode","setupShapes","setupReviewAnchors","selectedInstanceItems","selectedInstances","instance","selectShapeByInstanceItem","updateShapesInInstance","predict","preload","window","setTimeout","setFrameByAutoPlay","prev","step","Math","max","next","min","togglePlaying","clearTimeout","canUpdateFrameForCamera","readonly","setFrameAttributesForCamera","currentFramesData","newFramesData","sort","a","b","push","storeId","undo","preserve","save","updateNextShapeOrder","currentOrder","updateImageSize","framesJSON"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking2/store/FrameStore.ts"],"sourcesContent":["import { makeAutoObservable, runInAction, toJS } from 'mobx';\nimport { cloneDeep } from 'lodash';\nimport { message } from 'antd';\nimport { MessageType } from 'antd/es/message';\nimport RootStore from './RootStore';\nimport View, { EventAction } from '../shapes/View';\nimport { DEFAULT_CAMERA_NAME, SIDEBAR_WIDTH, TOOLBAR_HEIGHT } from '../constants';\nimport { parseFramesByPaylod, parseLabelConfig } from '../utils';\nimport { Payload, FrameAttributes, CameraFrameAttributes, LabelConfig, ReviewMode } from '../types';\nimport i18n from '../locales';\nimport loader, { ImagePreloader } from '../../../utils/image-preloader';\nimport { triggerFormRules } from '../../../utils/form';\n\n/**\n * store for frames\n * @class\n */\nexport default class FrameStore {\n  /**\n   * root store\n   */\n  rootStore: typeof RootStore;\n\n  /**\n   * camera frames\n   */\n  cameras: { [camera: string]: string[] } = {};\n\n  /**\n   * camera views\n   */\n  cameraViews: { [camera: string]: View } = {};\n\n  /**\n   * current active camera\n   */\n  currentCameraView: View | null = null;\n\n  /**\n   * frame attributes (for each camera)\n   */\n  attributes: {\n    [camera: string]: {\n      [frameIndex: number]: FrameAttributes;\n    }\n  } = {};\n\n  /**\n   * next shape orders for different cameras & frames\n   */\n  nextShapeOrders: {\n    [camera: string]: {\n      [frameIndex: number]: number;\n    }\n  } = {};\n\n  /**\n   * current camera name\n   */\n  currentCamera = DEFAULT_CAMERA_NAME;\n\n  /**\n   * current frame index\n   */\n  currentFrame = 0;\n\n  /**\n   * frame loading\n   */\n  loading = true;\n\n  /**\n   * is playing\n   */\n  isPlaying = false;\n\n  /**\n   * play timer\n   */\n  playTimer: number | null = null;\n\n  /**\n   * image preloader\n   */\n  imagePreloader: ImagePreloader | null = null;\n\n  /**\n   * frame config (for each camera)\n   */\n  frameConfig?: LabelConfig;\n\n  /**\n   * is single camera\n   * @getter\n   */\n  get isSingleCamera() {\n    const cameraNames = Object.keys(this.cameras);\n    return cameraNames.length === 1;\n  }\n\n  /**\n   * camera names\n   * @getter\n   */\n  get cameraNames() {\n    return Object.keys(this.cameras);\n  }\n\n  /**\n   * camera count\n   * @getter\n   */\n  get cameraCount() {\n    return Object.keys(this.cameras).length;\n  }\n\n  /**\n   * current cameras frames\n   * @getter\n   */\n  get frames() {\n    return this.cameras[this.currentCamera] || [];\n  }\n\n  /**\n   * current camera frame count\n   * @getter\n   */\n  get frameCount() {\n    return this.frames.length;\n  }\n\n  /**\n   * image boundary\n   * @getter\n   */\n  get imageBounds() {\n    return this.getImageBoundsForCamera(this.currentCamera);\n  }\n\n  /**\n   * is current frame attributes\n   * @getter\n   */\n  get currentFrameAttributes() {\n    const { attributes = {} } = this.attributes[this.currentCamera]?.[this.currentFrame] || {};\n    return attributes;\n  }\n\n  constructor(rootStore: typeof RootStore) {\n    makeAutoObservable(this, {\n      rootStore: false,\n      cameraViews: false,\n      nextShapeOrders: false,\n      playTimer: false,\n      imagePreloader: false,\n      imageBounds: false,\n    }, {\n      autoBind: true,\n    });\n\n    this.rootStore = rootStore;\n  }\n\n  /**\n   * init from paylod\n   * @param payload\n   */\n  async init(payload: Payload) {\n    const cameras = await parseFramesByPaylod(payload);\n    // parse frame config\n    this.frameConfig = parseLabelConfig(payload.frame_config);\n\n    // update attributes by camera & frames\n    let frameCount = 0;\n    let defaultAttributes: any;\n    if (this.frameConfig) {\n      const { updatedValues } = triggerFormRules(this.frameConfig, {});\n      if (updatedValues && Object.keys(updatedValues).length > 0) {\n        defaultAttributes = updatedValues;\n      }\n    }\n    const attributes: {\n      [camera: string]: {\n        [frameIndex: number]: FrameAttributes;\n      }\n    } = {};\n    cameras.forEach(({ camera, frames }) => {\n      const count = frames.length;\n      if (count > frameCount) {\n        frameCount = count;\n      }\n      if (!attributes[camera]) {\n        attributes[camera] = {};\n      }\n      frames.forEach((_, frameIndex) => {\n        if (!attributes[camera][frameIndex]) {\n          attributes[camera][frameIndex] = {\n            frameIndex,\n            valid: true,\n            originValid: true,\n            rotation: 0,\n          };\n        }\n        if (defaultAttributes) {\n          if (this.rootStore.annotatable) {\n            // save to attributes directly\n            attributes[camera][frameIndex].attributes = { ...defaultAttributes };\n          } else {\n            // just show attribute keys if no value\n            attributes[camera][frameIndex].attributes = {};\n            Object.keys(defaultAttributes).forEach((key) => {\n              attributes[camera][frameIndex].attributes[key] = '';\n            });\n          }\n        }\n      });\n    });\n    this.attributes = attributes;\n    runInAction(() => {\n      if (cameras.length > 0) {\n        // set cameras\n        this.cameras = cameras.reduce((acc, curr) => {\n          acc[curr.camera] = curr.frames;\n          return acc;\n        }, {} as { [camera: string]: string[] });\n        // setup camera containers\n        cameras.forEach(({ camera }) => this.createCameraView(camera));\n        // set current camera\n        this.setCamera(cameras[0].camera);\n        // preload image\n        const allImages = Array.from({ length: this.frameCount }).flatMap((_, i) => cameras.map((c) => c.frames[i]));\n        this.imagePreloader = loader(allImages);\n      }\n    });\n  }\n\n  /**\n   * init attributes\n   * @param result\n   */\n  initAttributes(result: any) {\n    const { frames: attrs } = result;\n    if (Array.isArray(attrs)) {\n      const attributes = toJS(this.attributes);\n\n      attrs.forEach((cameraItem) => {\n        const { camera, frames } = cameraItem || {};\n        if (camera) {\n          if (!attributes[camera]) {\n            attributes[camera] = {};\n          }\n          if (Array.isArray(frames)) {\n            frames.forEach((frameItem) => {\n              const { frameIndex, imageUrl, imageWidth, imageHeight, valid, attributes: frameAttributes, ...legacyAttributes } = frameItem;\n              attributes[camera][frameIndex] = {\n                ...attributes[camera][frameIndex],\n                frameIndex,\n                imageUrl,\n                imageWidth,\n                imageHeight,\n                valid: valid !== false && valid !== 'false',\n                rotation: 0,\n                attributes: frameAttributes || Object.keys(legacyAttributes).length > 0 ? cloneDeep({ ...legacyAttributes, ...frameAttributes }) : undefined,\n              };\n            });\n          }\n        }\n      });\n\n      this.attributes = attributes;\n    }\n  }\n\n  /**\n   * create camera view\n   * @param camera\n   */\n  createCameraView(camera: string) {\n    const { autoSnapPoint } = this.rootStore.config;\n    const cameraView = new View({\n      id: camera,\n      enableReview: !this.rootStore.isLabeling,\n      enableSnap: autoSnapPoint,\n    });\n\n    // bind listeners\n    cameraView.on(EventAction.SELECTED, (event) => {\n      if (event.button === 2) {\n        return;\n      }\n      this.rootStore.shape.unselectShape();\n      this.rootStore.review.unselectReview();\n    });\n    cameraView.on(EventAction.POINTERDOWN, (p, event) => {\n      if (event.button === 2) {\n        return;\n      }\n      if (this.rootStore.config.reviewMode === ReviewMode.LABELING) {\n        this.rootStore.shape.addShape(p);\n      } else {\n        this.rootStore.review.addReview(p);\n      }\n    });\n    cameraView.on(EventAction.SCALE_CHANGED, (scale) => {\n      if (this.currentCamera === camera) {\n        this.rootStore.config.setViewScale(scale);\n      }\n    });\n    cameraView.on(EventAction.POSITION_CHANGED, (p) => {\n      if (this.currentCamera === camera) {\n        this.rootStore.config.setViewPosition(p);\n      }\n    });\n\n    this.cameraViews[camera] = cameraView;\n    return cameraView;\n  }\n\n  /**\n   * get image bounds for camera\n   * @param camera\n   */\n  getImageBoundsForCamera(camera: string) {\n    const cameraView = this.cameraViews[camera];\n    const w = cameraView?.image.width;\n    const h = cameraView?.image.height;\n    return { left: 0, top: 0, right: w || 0, bottom: h || 0 };\n  }\n\n  /**\n   * set current camera\n   * @param camera\n   */\n  setCamera(camera: string) {\n    // set selected camera\n    this.currentCamera = camera;\n    const cameraView = this.cameraViews[camera];\n    if (cameraView) {\n      cameraView.selected = true;\n      this.currentCameraView = cameraView;\n      this.updateCameraLayers(cameraView);\n    }\n  }\n\n  /**\n   * update working layers by camera view\n   * @param cameraView\n   */\n  updateCameraLayers(cameraView: View) {\n    // update view scale\n    this.rootStore.config.setViewScale(cameraView.viewScale);\n    // update shapes layer\n    this.rootStore.shape.currentLayer = cameraView.shapesLayer;\n    // update review layer\n    if (cameraView.reviewLayer) {\n      this.rootStore.review.setReviewLayer(cameraView.reviewLayer);\n      this.rootStore.review.setReviewLayerOffset(SIDEBAR_WIDTH, TOOLBAR_HEIGHT * 2);\n    }\n  }\n\n  /**\n   * set current frame\n   * @param frameIndex\n   */\n  setFrame(frameIndex: number) {\n    if (frameIndex !== this.currentFrame) {\n      // frame changes\n      this.currentFrame = frameIndex;\n      this.loading = true;\n      this.rootStore.review.clearAnchors();\n    }\n  }\n\n  /**\n   * when frame loaded\n   * @param image\n   */\n  onFrameLoaded() {\n    // turn off add mode\n    this.rootStore.config.setAddMode(false);\n    // setup current shapes\n    this.rootStore.shape.setupShapes();\n    // setup reivew anchors\n    this.rootStore.review.setupReviewAnchors();\n\n    // select shape\n    const { selectedInstanceItems, selectedInstances } = this.rootStore.instance;\n    if (selectedInstanceItems.length > 0) {\n      this.rootStore.shape.selectShapeByInstanceItem(selectedInstanceItems);\n    } else if (selectedInstances.length > 0) {\n      this.rootStore.shape.updateShapesInInstance(selectedInstances);\n    }\n    // predict\n    this.rootStore.shape.predict();\n\n    this.loading = false;\n\n    // preload image\n    this.imagePreloader?.preload((this.currentFrame + 1) * this.cameraCount);\n\n    // when loaded, if is auto playing, play next frame\n    if (this.isPlaying) {\n      this.playTimer = window.setTimeout(() => {\n        this.setFrameByAutoPlay();\n      }, 300);\n    }\n  }\n\n  /**\n   * go to previous frame by step\n   * @param step\n   */\n  prev(step: number) {\n    if (!this.isPlaying) {\n      this.setFrame(Math.max(this.currentFrame - step, 0));\n    }\n  }\n\n  /**\n   * go to next frame by step\n   * @param step\n   */\n  next(step: number) {\n    if (!this.isPlaying) {\n      this.setFrame(Math.min(this.currentFrame + step, this.frameCount - 1));\n    }\n  }\n\n  /**\n   * toggle playing\n   */\n  togglePlaying() {\n    this.isPlaying = !this.isPlaying;\n    if (this.isPlaying) {\n      this.setFrameByAutoPlay();\n    } else if (this.playTimer) {\n      window.clearTimeout(this.playTimer);\n      this.playTimer = null;\n    }\n  }\n\n  /**\n   * set frame by auto play\n   */\n  setFrameByAutoPlay() {\n    if (this.currentFrame < this.frameCount - 1) {\n      this.setFrame(this.currentFrame + 1);\n    } else {\n      this.isPlaying = false;\n      this.setFrame(0);\n    }\n  }\n\n  /**\n   * can update attributes by camera & frameIndex\n   * @param camera\n   * @param frameIndex\n   */\n  canUpdateFrameForCamera(camera: string, frameIndex: number) {\n    if (this.rootStore.readonly) {\n      return false;\n    }\n    if (!this.attributes[camera] || !this.attributes[camera][frameIndex]) {\n      // attributes not initialized as expected, may have wrong frames or base_url input\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * set frame attributes & frame valid\n   * @param camera\n   * @param frames\n   * @param attributes\n   */\n  setFrameAttributesForCamera(\n    camera: string,\n    frames: number[],\n    attributes: any,\n  ) {\n    const currentFramesData: FrameAttributes[] = [];\n    const newFramesData: FrameAttributes[] = [];\n    frames.sort((a, b) => a - b).forEach((frameIndex) => {\n      if (this.canUpdateFrameForCamera(camera, frameIndex)) {\n        currentFramesData.push(toJS(this.attributes[camera][frameIndex]));\n        this.attributes[camera][frameIndex].attributes = cloneDeep(attributes);\n        newFramesData.push(toJS(this.attributes[camera][frameIndex]));\n      }\n    });\n    if (currentFramesData.length > 0) {\n      const storeId = this.rootStore.undo.preserve({\n        frames: [{ camera, frames: currentFramesData }],\n      });\n      this.rootStore.undo.save(storeId, {\n        frames: [{ camera, frames: newFramesData }],\n      });\n    }\n  }\n\n  /**\n   * get next shape order & do increment\n   * @param frameIndex\n   * @param camera\n   */\n  getNextShapeOrder = (frameIndex = this.currentFrame, camera = this.currentCamera) => {\n    if (this.nextShapeOrders[camera] === undefined) {\n      this.nextShapeOrders[camera] = {};\n    }\n    if (this.nextShapeOrders[camera][frameIndex] === undefined) {\n      this.nextShapeOrders[camera][frameIndex] = 0;\n    }\n\n    const order = this.nextShapeOrders[camera][frameIndex];\n    this.nextShapeOrders[camera][frameIndex] += 1;\n    return order;\n  };\n\n  /**\n   * update next shape order\n   * @param currentOrder\n   * @param frameIndex\n   * @param camera\n   */\n  updateNextShapeOrder(currentOrder: number, frameIndex = this.currentFrame, camera = this.currentCamera) {\n    if (this.nextShapeOrders[camera] === undefined) {\n      this.nextShapeOrders[camera] = {};\n    }\n    if (this.nextShapeOrders[camera][frameIndex] === undefined || this.nextShapeOrders[camera][frameIndex] <= currentOrder) {\n      this.nextShapeOrders[camera][frameIndex] = currentOrder + 1;\n    }\n  }\n\n  /**\n   * update image size\n   * @param camera\n   * @param frameIndex\n   * @param width\n   * @param height\n   */\n  updateImageSize(camera: string, frameIndex: number, width: number, height: number) {\n    if (this.attributes[camera] && this.attributes[camera][frameIndex]) {\n      const { imageWidth, imageHeight } = this.attributes[camera][frameIndex];\n      if ((width > 0 && height > 0) || imageWidth === undefined || imageHeight === undefined) {\n        // only update when size valid, or size not initialized\n        this.attributes[camera][frameIndex].imageWidth = width;\n        this.attributes[camera][frameIndex].imageHeight = height;\n      }\n    }\n  }\n\n  /**\n   * get frame attributes json data (for save)\n   */\n  framesJSON(): CameraFrameAttributes[] {\n    return Object.keys(this.cameras).map((camera) => ({\n      camera,\n      frames: this.cameras[camera].map((imageUrl, frameIndex) => ({\n        frameIndex,\n        imageUrl,\n        imageWidth: this.attributes[camera][frameIndex].imageWidth,\n        imageHeight: this.attributes[camera][frameIndex].imageHeight,\n        valid: true,\n        originValid: true,\n        rotation: 0,\n        attributes: toJS(this.attributes[camera][frameIndex].attributes),\n      })),\n    }));\n  }\n}\n"],"mappings":"AAAA,OAASA,kBAAkB,CAAEC,WAAW,CAAEC,IAAI,KAAQ,MAAM,CAC5D,OAASC,SAAS,KAAQ,QAAQ,CAIlC,MAAO,CAAAC,IAAI,EAAIC,WAAW,KAAQ,gBAAgB,CAClD,OAASC,mBAAmB,CAAEC,aAAa,CAAEC,cAAc,KAAQ,cAAc,CACjF,OAASC,mBAAmB,CAAEC,gBAAgB,KAAQ,UAAU,CAChE,OAAuEC,UAAU,KAAQ,UAAU,CAEnG,MAAO,CAAAC,MAAM,KAA0B,gCAAgC,CACvE,OAASC,gBAAgB,KAAQ,qBAAqB,CAEtD;AACA;AACA;AACA,GACA,cAAe,MAAM,CAAAC,UAAW,CA0E9B;AACF;AACA;AACA,KACE,GAAI,CAAAC,cAAcA,CAAA,CAAG,CACnB,KAAM,CAAAC,WAAW,CAAGC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACC,OAAO,CAAC,CAC7C,MAAO,CAAAH,WAAW,CAACI,MAAM,GAAK,CAAC,CACjC,CAEA;AACF;AACA;AACA,KACE,GAAI,CAAAJ,WAAWA,CAAA,CAAG,CAChB,MAAO,CAAAC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACC,OAAO,CAAC,CAClC,CAEA;AACF;AACA;AACA,KACE,GAAI,CAAAE,WAAWA,CAAA,CAAG,CAChB,MAAO,CAAAJ,MAAM,CAACC,IAAI,CAAC,IAAI,CAACC,OAAO,CAAC,CAACC,MAAM,CACzC,CAEA;AACF;AACA;AACA,KACE,GAAI,CAAAE,MAAMA,CAAA,CAAG,CACX,MAAO,KAAI,CAACH,OAAO,CAAC,IAAI,CAACI,aAAa,CAAC,EAAI,EAAE,CAC/C,CAEA;AACF;AACA;AACA,KACE,GAAI,CAAAC,UAAUA,CAAA,CAAG,CACf,MAAO,KAAI,CAACF,MAAM,CAACF,MAAM,CAC3B,CAEA;AACF;AACA;AACA,KACE,GAAI,CAAAK,WAAWA,CAAA,CAAG,CAChB,MAAO,KAAI,CAACC,uBAAuB,CAAC,IAAI,CAACH,aAAa,CAAC,CACzD,CAEA;AACF;AACA;AACA,KACE,GAAI,CAAAI,sBAAsBA,CAAA,CAAG,KAAAC,qBAAA,CAC3B,KAAM,CAAEC,UAAU,CAAG,CAAC,CAAE,CAAC,CAAG,EAAAD,qBAAA,KAAI,CAACC,UAAU,CAAC,IAAI,CAACN,aAAa,CAAC,UAAAK,qBAAA,iBAAnCA,qBAAA,CAAsC,IAAI,CAACE,YAAY,CAAC,GAAI,CAAC,CAAC,CAC1F,MAAO,CAAAD,UAAU,CACnB,CAEAE,WAAWA,CAACC,SAA2B,CAAE,KAAAC,KAAA,MAnIzC;AACF;AACA,KAFE,KAGAD,SAAS,QAET;AACF;AACA,KAFE,KAGAb,OAAO,CAAmC,CAAC,CAAC,CAE5C;AACF;AACA,KAFE,KAGAe,WAAW,CAA+B,CAAC,CAAC,CAE5C;AACF;AACA,KAFE,KAGAC,iBAAiB,CAAgB,IAAI,CAErC;AACF;AACA,KAFE,KAGAN,UAAU,CAIN,CAAC,CAAC,CAEN;AACF;AACA,KAFE,KAGAO,eAAe,CAIX,CAAC,CAAC,CAEN;AACF;AACA,KAFE,KAGAb,aAAa,CAAGjB,mBAAmB,CAEnC;AACF;AACA,KAFE,KAGAwB,YAAY,CAAG,CAAC,CAEhB;AACF;AACA,KAFE,KAGAO,OAAO,CAAG,IAAI,CAEd;AACF;AACA,KAFE,KAGAC,SAAS,CAAG,KAAK,CAEjB;AACF;AACA,KAFE,KAGAC,SAAS,CAAkB,IAAI,CAE/B;AACF;AACA,KAFE,KAGAC,cAAc,CAA0B,IAAI,CAE5C;AACF;AACA,KAFE,KAGAC,WAAW,QA2ZX;AACF;AACA;AACA;AACA,KAJE,KAKAC,iBAAiB,CAAG,UAAiE,IAAhE,CAAAC,UAAU,CAAAC,SAAA,CAAAxB,MAAA,IAAAwB,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAGX,KAAI,CAACH,YAAY,IAAE,CAAAgB,MAAM,CAAAF,SAAA,CAAAxB,MAAA,IAAAwB,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAGX,KAAI,CAACV,aAAa,CAC9E,GAAIU,KAAI,CAACG,eAAe,CAACU,MAAM,CAAC,GAAKD,SAAS,CAAE,CAC9CZ,KAAI,CAACG,eAAe,CAACU,MAAM,CAAC,CAAG,CAAC,CAAC,CACnC,CACA,GAAIb,KAAI,CAACG,eAAe,CAACU,MAAM,CAAC,CAACH,UAAU,CAAC,GAAKE,SAAS,CAAE,CAC1DZ,KAAI,CAACG,eAAe,CAACU,MAAM,CAAC,CAACH,UAAU,CAAC,CAAG,CAAC,CAC9C,CAEA,KAAM,CAAAI,KAAK,CAAGd,KAAI,CAACG,eAAe,CAACU,MAAM,CAAC,CAACH,UAAU,CAAC,CACtDV,KAAI,CAACG,eAAe,CAACU,MAAM,CAAC,CAACH,UAAU,CAAC,EAAI,CAAC,CAC7C,MAAO,CAAAI,KAAK,CACd,CAAC,CA9WC/C,kBAAkB,CAAC,IAAI,CAAE,CACvBgC,SAAS,CAAE,KAAK,CAChBE,WAAW,CAAE,KAAK,CAClBE,eAAe,CAAE,KAAK,CACtBG,SAAS,CAAE,KAAK,CAChBC,cAAc,CAAE,KAAK,CACrBf,WAAW,CAAE,KACf,CAAC,CAAE,CACDuB,QAAQ,CAAE,IACZ,CAAC,CAAC,CAEF,IAAI,CAAChB,SAAS,CAAGA,SAAS,CAC5B,CAEA;AACF;AACA;AACA,KACE,KAAM,CAAAiB,IAAIA,CAACC,OAAgB,CAAE,CAC3B,KAAM,CAAA/B,OAAO,CAAG,KAAM,CAAAV,mBAAmB,CAACyC,OAAO,CAAC,CAClD;AACA,IAAI,CAACT,WAAW,CAAG/B,gBAAgB,CAACwC,OAAO,CAACC,YAAY,CAAC,CAEzD;AACA,GAAI,CAAA3B,UAAU,CAAG,CAAC,CAClB,GAAI,CAAA4B,iBAAsB,CAC1B,GAAI,IAAI,CAACX,WAAW,CAAE,CACpB,KAAM,CAAEY,aAAc,CAAC,CAAGxC,gBAAgB,CAAC,IAAI,CAAC4B,WAAW,CAAE,CAAC,CAAC,CAAC,CAChE,GAAIY,aAAa,EAAIpC,MAAM,CAACC,IAAI,CAACmC,aAAa,CAAC,CAACjC,MAAM,CAAG,CAAC,CAAE,CAC1DgC,iBAAiB,CAAGC,aAAa,CACnC,CACF,CACA,KAAM,CAAAxB,UAIL,CAAG,CAAC,CAAC,CACNV,OAAO,CAACmC,OAAO,CAACC,IAAA,EAAwB,IAAvB,CAAET,MAAM,CAAExB,MAAO,CAAC,CAAAiC,IAAA,CACjC,KAAM,CAAAC,KAAK,CAAGlC,MAAM,CAACF,MAAM,CAC3B,GAAIoC,KAAK,CAAGhC,UAAU,CAAE,CACtBA,UAAU,CAAGgC,KAAK,CACpB,CACA,GAAI,CAAC3B,UAAU,CAACiB,MAAM,CAAC,CAAE,CACvBjB,UAAU,CAACiB,MAAM,CAAC,CAAG,CAAC,CAAC,CACzB,CACAxB,MAAM,CAACgC,OAAO,CAAC,CAACG,CAAC,CAAEd,UAAU,GAAK,CAChC,GAAI,CAACd,UAAU,CAACiB,MAAM,CAAC,CAACH,UAAU,CAAC,CAAE,CACnCd,UAAU,CAACiB,MAAM,CAAC,CAACH,UAAU,CAAC,CAAG,CAC/BA,UAAU,CACVe,KAAK,CAAE,IAAI,CACXC,WAAW,CAAE,IAAI,CACjBC,QAAQ,CAAE,CACZ,CAAC,CACH,CACA,GAAIR,iBAAiB,CAAE,CACrB,GAAI,IAAI,CAACpB,SAAS,CAAC6B,WAAW,CAAE,CAC9B;AACAhC,UAAU,CAACiB,MAAM,CAAC,CAACH,UAAU,CAAC,CAACd,UAAU,CAAG,CAAE,GAAGuB,iBAAkB,CAAC,CACtE,CAAC,IAAM,CACL;AACAvB,UAAU,CAACiB,MAAM,CAAC,CAACH,UAAU,CAAC,CAACd,UAAU,CAAG,CAAC,CAAC,CAC9CZ,MAAM,CAACC,IAAI,CAACkC,iBAAiB,CAAC,CAACE,OAAO,CAAEQ,GAAG,EAAK,CAC9CjC,UAAU,CAACiB,MAAM,CAAC,CAACH,UAAU,CAAC,CAACd,UAAU,CAACiC,GAAG,CAAC,CAAG,EAAE,CACrD,CAAC,CAAC,CACJ,CACF,CACF,CAAC,CAAC,CACJ,CAAC,CAAC,CACF,IAAI,CAACjC,UAAU,CAAGA,UAAU,CAC5B5B,WAAW,CAAC,IAAM,CAChB,GAAIkB,OAAO,CAACC,MAAM,CAAG,CAAC,CAAE,CACtB;AACA,IAAI,CAACD,OAAO,CAAGA,OAAO,CAAC4C,MAAM,CAAC,CAACC,GAAG,CAAEC,IAAI,GAAK,CAC3CD,GAAG,CAACC,IAAI,CAACnB,MAAM,CAAC,CAAGmB,IAAI,CAAC3C,MAAM,CAC9B,MAAO,CAAA0C,GAAG,CACZ,CAAC,CAAE,CAAC,CAAmC,CAAC,CACxC;AACA7C,OAAO,CAACmC,OAAO,CAACY,KAAA,MAAC,CAAEpB,MAAO,CAAC,CAAAoB,KAAA,OAAK,KAAI,CAACC,gBAAgB,CAACrB,MAAM,CAAC,GAAC,CAC9D;AACA,IAAI,CAACsB,SAAS,CAACjD,OAAO,CAAC,CAAC,CAAC,CAAC2B,MAAM,CAAC,CACjC;AACA,KAAM,CAAAuB,SAAS,CAAGC,KAAK,CAACC,IAAI,CAAC,CAAEnD,MAAM,CAAE,IAAI,CAACI,UAAW,CAAC,CAAC,CAACgD,OAAO,CAAC,CAACf,CAAC,CAAEgB,CAAC,GAAKtD,OAAO,CAACuD,GAAG,CAAEC,CAAC,EAAKA,CAAC,CAACrD,MAAM,CAACmD,CAAC,CAAC,CAAC,CAAC,CAC5G,IAAI,CAACjC,cAAc,CAAG5B,MAAM,CAACyD,SAAS,CAAC,CACzC,CACF,CAAC,CAAC,CACJ,CAEA;AACF;AACA;AACA,KACEO,cAAcA,CAACC,MAAW,CAAE,CAC1B,KAAM,CAAEvD,MAAM,CAAEwD,KAAM,CAAC,CAAGD,MAAM,CAChC,GAAIP,KAAK,CAACS,OAAO,CAACD,KAAK,CAAC,CAAE,CACxB,KAAM,CAAAjD,UAAU,CAAG3B,IAAI,CAAC,IAAI,CAAC2B,UAAU,CAAC,CAExCiD,KAAK,CAACxB,OAAO,CAAE0B,UAAU,EAAK,CAC5B,KAAM,CAAElC,MAAM,CAAExB,MAAO,CAAC,CAAG0D,UAAU,EAAI,CAAC,CAAC,CAC3C,GAAIlC,MAAM,CAAE,CACV,GAAI,CAACjB,UAAU,CAACiB,MAAM,CAAC,CAAE,CACvBjB,UAAU,CAACiB,MAAM,CAAC,CAAG,CAAC,CAAC,CACzB,CACA,GAAIwB,KAAK,CAACS,OAAO,CAACzD,MAAM,CAAC,CAAE,CACzBA,MAAM,CAACgC,OAAO,CAAE2B,SAAS,EAAK,CAC5B,KAAM,CAAEtC,UAAU,CAAEuC,QAAQ,CAAEC,UAAU,CAAEC,WAAW,CAAE1B,KAAK,CAAE7B,UAAU,CAAEwD,eAAe,CAAE,GAAGC,gBAAiB,CAAC,CAAGL,SAAS,CAC5HpD,UAAU,CAACiB,MAAM,CAAC,CAACH,UAAU,CAAC,CAAG,CAC/B,GAAGd,UAAU,CAACiB,MAAM,CAAC,CAACH,UAAU,CAAC,CACjCA,UAAU,CACVuC,QAAQ,CACRC,UAAU,CACVC,WAAW,CACX1B,KAAK,CAAEA,KAAK,GAAK,KAAK,EAAIA,KAAK,GAAK,OAAO,CAC3CE,QAAQ,CAAE,CAAC,CACX/B,UAAU,CAAEwD,eAAe,EAAIpE,MAAM,CAACC,IAAI,CAACoE,gBAAgB,CAAC,CAAClE,MAAM,CAAG,CAAC,CAAGjB,SAAS,CAAC,CAAE,GAAGmF,gBAAgB,CAAE,GAAGD,eAAgB,CAAC,CAAC,CAAGxC,SACrI,CAAC,CACH,CAAC,CAAC,CACJ,CACF,CACF,CAAC,CAAC,CAEF,IAAI,CAAChB,UAAU,CAAGA,UAAU,CAC9B,CACF,CAEA;AACF;AACA;AACA,KACEsC,gBAAgBA,CAACrB,MAAc,CAAE,CAC/B,KAAM,CAAEyC,aAAc,CAAC,CAAG,IAAI,CAACvD,SAAS,CAACwD,MAAM,CAC/C,KAAM,CAAAC,UAAU,CAAG,GAAI,CAAArF,IAAI,CAAC,CAC1BsF,EAAE,CAAE5C,MAAM,CACV6C,YAAY,CAAE,CAAC,IAAI,CAAC3D,SAAS,CAAC4D,UAAU,CACxCC,UAAU,CAAEN,aACd,CAAC,CAAC,CAEF;AACAE,UAAU,CAACK,EAAE,CAACzF,WAAW,CAAC0F,QAAQ,CAAGC,KAAK,EAAK,CAC7C,GAAIA,KAAK,CAACC,MAAM,GAAK,CAAC,CAAE,CACtB,OACF,CACA,IAAI,CAACjE,SAAS,CAACkE,KAAK,CAACC,aAAa,CAAC,CAAC,CACpC,IAAI,CAACnE,SAAS,CAACoE,MAAM,CAACC,cAAc,CAAC,CAAC,CACxC,CAAC,CAAC,CACFZ,UAAU,CAACK,EAAE,CAACzF,WAAW,CAACiG,WAAW,CAAE,CAACC,CAAC,CAAEP,KAAK,GAAK,CACnD,GAAIA,KAAK,CAACC,MAAM,GAAK,CAAC,CAAE,CACtB,OACF,CACA,GAAI,IAAI,CAACjE,SAAS,CAACwD,MAAM,CAACgB,UAAU,GAAK7F,UAAU,CAAC8F,QAAQ,CAAE,CAC5D,IAAI,CAACzE,SAAS,CAACkE,KAAK,CAACQ,QAAQ,CAACH,CAAC,CAAC,CAClC,CAAC,IAAM,CACL,IAAI,CAACvE,SAAS,CAACoE,MAAM,CAACO,SAAS,CAACJ,CAAC,CAAC,CACpC,CACF,CAAC,CAAC,CACFd,UAAU,CAACK,EAAE,CAACzF,WAAW,CAACuG,aAAa,CAAGC,KAAK,EAAK,CAClD,GAAI,IAAI,CAACtF,aAAa,GAAKuB,MAAM,CAAE,CACjC,IAAI,CAACd,SAAS,CAACwD,MAAM,CAACsB,YAAY,CAACD,KAAK,CAAC,CAC3C,CACF,CAAC,CAAC,CACFpB,UAAU,CAACK,EAAE,CAACzF,WAAW,CAAC0G,gBAAgB,CAAGR,CAAC,EAAK,CACjD,GAAI,IAAI,CAAChF,aAAa,GAAKuB,MAAM,CAAE,CACjC,IAAI,CAACd,SAAS,CAACwD,MAAM,CAACwB,eAAe,CAACT,CAAC,CAAC,CAC1C,CACF,CAAC,CAAC,CAEF,IAAI,CAACrE,WAAW,CAACY,MAAM,CAAC,CAAG2C,UAAU,CACrC,MAAO,CAAAA,UAAU,CACnB,CAEA;AACF;AACA;AACA,KACE/D,uBAAuBA,CAACoB,MAAc,CAAE,CACtC,KAAM,CAAA2C,UAAU,CAAG,IAAI,CAACvD,WAAW,CAACY,MAAM,CAAC,CAC3C,KAAM,CAAAmE,CAAC,CAAGxB,UAAU,SAAVA,UAAU,iBAAVA,UAAU,CAAEyB,KAAK,CAACC,KAAK,CACjC,KAAM,CAAAC,CAAC,CAAG3B,UAAU,SAAVA,UAAU,iBAAVA,UAAU,CAAEyB,KAAK,CAACG,MAAM,CAClC,MAAO,CAAEC,IAAI,CAAE,CAAC,CAAEC,GAAG,CAAE,CAAC,CAAEC,KAAK,CAAEP,CAAC,EAAI,CAAC,CAAEQ,MAAM,CAAEL,CAAC,EAAI,CAAE,CAAC,CAC3D,CAEA;AACF;AACA;AACA,KACEhD,SAASA,CAACtB,MAAc,CAAE,CACxB;AACA,IAAI,CAACvB,aAAa,CAAGuB,MAAM,CAC3B,KAAM,CAAA2C,UAAU,CAAG,IAAI,CAACvD,WAAW,CAACY,MAAM,CAAC,CAC3C,GAAI2C,UAAU,CAAE,CACdA,UAAU,CAACiC,QAAQ,CAAG,IAAI,CAC1B,IAAI,CAACvF,iBAAiB,CAAGsD,UAAU,CACnC,IAAI,CAACkC,kBAAkB,CAAClC,UAAU,CAAC,CACrC,CACF,CAEA;AACF;AACA;AACA,KACEkC,kBAAkBA,CAAClC,UAAgB,CAAE,CACnC;AACA,IAAI,CAACzD,SAAS,CAACwD,MAAM,CAACsB,YAAY,CAACrB,UAAU,CAACmC,SAAS,CAAC,CACxD;AACA,IAAI,CAAC5F,SAAS,CAACkE,KAAK,CAAC2B,YAAY,CAAGpC,UAAU,CAACqC,WAAW,CAC1D;AACA,GAAIrC,UAAU,CAACsC,WAAW,CAAE,CAC1B,IAAI,CAAC/F,SAAS,CAACoE,MAAM,CAAC4B,cAAc,CAACvC,UAAU,CAACsC,WAAW,CAAC,CAC5D,IAAI,CAAC/F,SAAS,CAACoE,MAAM,CAAC6B,oBAAoB,CAAC1H,aAAa,CAAEC,cAAc,CAAG,CAAC,CAAC,CAC/E,CACF,CAEA;AACF;AACA;AACA,KACE0H,QAAQA,CAACvF,UAAkB,CAAE,CAC3B,GAAIA,UAAU,GAAK,IAAI,CAACb,YAAY,CAAE,CACpC;AACA,IAAI,CAACA,YAAY,CAAGa,UAAU,CAC9B,IAAI,CAACN,OAAO,CAAG,IAAI,CACnB,IAAI,CAACL,SAAS,CAACoE,MAAM,CAAC+B,YAAY,CAAC,CAAC,CACtC,CACF,CAEA;AACF;AACA;AACA,KACEC,aAAaA,CAAA,CAAG,KAAAC,oBAAA,CACd;AACA,IAAI,CAACrG,SAAS,CAACwD,MAAM,CAAC8C,UAAU,CAAC,KAAK,CAAC,CACvC;AACA,IAAI,CAACtG,SAAS,CAACkE,KAAK,CAACqC,WAAW,CAAC,CAAC,CAClC;AACA,IAAI,CAACvG,SAAS,CAACoE,MAAM,CAACoC,kBAAkB,CAAC,CAAC,CAE1C;AACA,KAAM,CAAEC,qBAAqB,CAAEC,iBAAkB,CAAC,CAAG,IAAI,CAAC1G,SAAS,CAAC2G,QAAQ,CAC5E,GAAIF,qBAAqB,CAACrH,MAAM,CAAG,CAAC,CAAE,CACpC,IAAI,CAACY,SAAS,CAACkE,KAAK,CAAC0C,yBAAyB,CAACH,qBAAqB,CAAC,CACvE,CAAC,IAAM,IAAIC,iBAAiB,CAACtH,MAAM,CAAG,CAAC,CAAE,CACvC,IAAI,CAACY,SAAS,CAACkE,KAAK,CAAC2C,sBAAsB,CAACH,iBAAiB,CAAC,CAChE,CACA;AACA,IAAI,CAAC1G,SAAS,CAACkE,KAAK,CAAC4C,OAAO,CAAC,CAAC,CAE9B,IAAI,CAACzG,OAAO,CAAG,KAAK,CAEpB;AACA,CAAAgG,oBAAA,KAAI,CAAC7F,cAAc,UAAA6F,oBAAA,iBAAnBA,oBAAA,CAAqBU,OAAO,CAAC,CAAC,IAAI,CAACjH,YAAY,CAAG,CAAC,EAAI,IAAI,CAACT,WAAW,CAAC,CAExE;AACA,GAAI,IAAI,CAACiB,SAAS,CAAE,CAClB,IAAI,CAACC,SAAS,CAAGyG,MAAM,CAACC,UAAU,CAAC,IAAM,CACvC,IAAI,CAACC,kBAAkB,CAAC,CAAC,CAC3B,CAAC,CAAE,GAAG,CAAC,CACT,CACF,CAEA;AACF;AACA;AACA,KACEC,IAAIA,CAACC,IAAY,CAAE,CACjB,GAAI,CAAC,IAAI,CAAC9G,SAAS,CAAE,CACnB,IAAI,CAAC4F,QAAQ,CAACmB,IAAI,CAACC,GAAG,CAAC,IAAI,CAACxH,YAAY,CAAGsH,IAAI,CAAE,CAAC,CAAC,CAAC,CACtD,CACF,CAEA;AACF;AACA;AACA,KACEG,IAAIA,CAACH,IAAY,CAAE,CACjB,GAAI,CAAC,IAAI,CAAC9G,SAAS,CAAE,CACnB,IAAI,CAAC4F,QAAQ,CAACmB,IAAI,CAACG,GAAG,CAAC,IAAI,CAAC1H,YAAY,CAAGsH,IAAI,CAAE,IAAI,CAAC5H,UAAU,CAAG,CAAC,CAAC,CAAC,CACxE,CACF,CAEA;AACF;AACA,KACEiI,aAAaA,CAAA,CAAG,CACd,IAAI,CAACnH,SAAS,CAAG,CAAC,IAAI,CAACA,SAAS,CAChC,GAAI,IAAI,CAACA,SAAS,CAAE,CAClB,IAAI,CAAC4G,kBAAkB,CAAC,CAAC,CAC3B,CAAC,IAAM,IAAI,IAAI,CAAC3G,SAAS,CAAE,CACzByG,MAAM,CAACU,YAAY,CAAC,IAAI,CAACnH,SAAS,CAAC,CACnC,IAAI,CAACA,SAAS,CAAG,IAAI,CACvB,CACF,CAEA;AACF;AACA,KACE2G,kBAAkBA,CAAA,CAAG,CACnB,GAAI,IAAI,CAACpH,YAAY,CAAG,IAAI,CAACN,UAAU,CAAG,CAAC,CAAE,CAC3C,IAAI,CAAC0G,QAAQ,CAAC,IAAI,CAACpG,YAAY,CAAG,CAAC,CAAC,CACtC,CAAC,IAAM,CACL,IAAI,CAACQ,SAAS,CAAG,KAAK,CACtB,IAAI,CAAC4F,QAAQ,CAAC,CAAC,CAAC,CAClB,CACF,CAEA;AACF;AACA;AACA;AACA,KACEyB,uBAAuBA,CAAC7G,MAAc,CAAEH,UAAkB,CAAE,CAC1D,GAAI,IAAI,CAACX,SAAS,CAAC4H,QAAQ,CAAE,CAC3B,MAAO,MAAK,CACd,CACA,GAAI,CAAC,IAAI,CAAC/H,UAAU,CAACiB,MAAM,CAAC,EAAI,CAAC,IAAI,CAACjB,UAAU,CAACiB,MAAM,CAAC,CAACH,UAAU,CAAC,CAAE,CACpE;AACA,MAAO,MAAK,CACd,CACA,MAAO,KAAI,CACb,CAEA;AACF;AACA;AACA;AACA;AACA,KACEkH,2BAA2BA,CACzB/G,MAAc,CACdxB,MAAgB,CAChBO,UAAe,CACf,CACA,KAAM,CAAAiI,iBAAoC,CAAG,EAAE,CAC/C,KAAM,CAAAC,aAAgC,CAAG,EAAE,CAC3CzI,MAAM,CAAC0I,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKD,CAAC,CAAGC,CAAC,CAAC,CAAC5G,OAAO,CAAEX,UAAU,EAAK,CACnD,GAAI,IAAI,CAACgH,uBAAuB,CAAC7G,MAAM,CAAEH,UAAU,CAAC,CAAE,CACpDmH,iBAAiB,CAACK,IAAI,CAACjK,IAAI,CAAC,IAAI,CAAC2B,UAAU,CAACiB,MAAM,CAAC,CAACH,UAAU,CAAC,CAAC,CAAC,CACjE,IAAI,CAACd,UAAU,CAACiB,MAAM,CAAC,CAACH,UAAU,CAAC,CAACd,UAAU,CAAG1B,SAAS,CAAC0B,UAAU,CAAC,CACtEkI,aAAa,CAACI,IAAI,CAACjK,IAAI,CAAC,IAAI,CAAC2B,UAAU,CAACiB,MAAM,CAAC,CAACH,UAAU,CAAC,CAAC,CAAC,CAC/D,CACF,CAAC,CAAC,CACF,GAAImH,iBAAiB,CAAC1I,MAAM,CAAG,CAAC,CAAE,CAChC,KAAM,CAAAgJ,OAAO,CAAG,IAAI,CAACpI,SAAS,CAACqI,IAAI,CAACC,QAAQ,CAAC,CAC3ChJ,MAAM,CAAE,CAAC,CAAEwB,MAAM,CAAExB,MAAM,CAAEwI,iBAAkB,CAAC,CAChD,CAAC,CAAC,CACF,IAAI,CAAC9H,SAAS,CAACqI,IAAI,CAACE,IAAI,CAACH,OAAO,CAAE,CAChC9I,MAAM,CAAE,CAAC,CAAEwB,MAAM,CAAExB,MAAM,CAAEyI,aAAc,CAAC,CAC5C,CAAC,CAAC,CACJ,CACF,CAoBA;AACF;AACA;AACA;AACA;AACA,KACES,oBAAoBA,CAACC,YAAoB,CAA+D,IAA7D,CAAA9H,UAAU,CAAAC,SAAA,CAAAxB,MAAA,IAAAwB,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,IAAI,CAACd,YAAY,IAAE,CAAAgB,MAAM,CAAAF,SAAA,CAAAxB,MAAA,IAAAwB,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,IAAI,CAACrB,aAAa,CACpG,GAAI,IAAI,CAACa,eAAe,CAACU,MAAM,CAAC,GAAKD,SAAS,CAAE,CAC9C,IAAI,CAACT,eAAe,CAACU,MAAM,CAAC,CAAG,CAAC,CAAC,CACnC,CACA,GAAI,IAAI,CAACV,eAAe,CAACU,MAAM,CAAC,CAACH,UAAU,CAAC,GAAKE,SAAS,EAAI,IAAI,CAACT,eAAe,CAACU,MAAM,CAAC,CAACH,UAAU,CAAC,EAAI8H,YAAY,CAAE,CACtH,IAAI,CAACrI,eAAe,CAACU,MAAM,CAAC,CAACH,UAAU,CAAC,CAAG8H,YAAY,CAAG,CAAC,CAC7D,CACF,CAEA;AACF;AACA;AACA;AACA;AACA;AACA,KACEC,eAAeA,CAAC5H,MAAc,CAAEH,UAAkB,CAAEwE,KAAa,CAAEE,MAAc,CAAE,CACjF,GAAI,IAAI,CAACxF,UAAU,CAACiB,MAAM,CAAC,EAAI,IAAI,CAACjB,UAAU,CAACiB,MAAM,CAAC,CAACH,UAAU,CAAC,CAAE,CAClE,KAAM,CAAEwC,UAAU,CAAEC,WAAY,CAAC,CAAG,IAAI,CAACvD,UAAU,CAACiB,MAAM,CAAC,CAACH,UAAU,CAAC,CACvE,GAAKwE,KAAK,CAAG,CAAC,EAAIE,MAAM,CAAG,CAAC,EAAKlC,UAAU,GAAKtC,SAAS,EAAIuC,WAAW,GAAKvC,SAAS,CAAE,CACtF;AACA,IAAI,CAAChB,UAAU,CAACiB,MAAM,CAAC,CAACH,UAAU,CAAC,CAACwC,UAAU,CAAGgC,KAAK,CACtD,IAAI,CAACtF,UAAU,CAACiB,MAAM,CAAC,CAACH,UAAU,CAAC,CAACyC,WAAW,CAAGiC,MAAM,CAC1D,CACF,CACF,CAEA;AACF;AACA,KACEsD,UAAUA,CAAA,CAA4B,CACpC,MAAO,CAAA1J,MAAM,CAACC,IAAI,CAAC,IAAI,CAACC,OAAO,CAAC,CAACuD,GAAG,CAAE5B,MAAM,GAAM,CAChDA,MAAM,CACNxB,MAAM,CAAE,IAAI,CAACH,OAAO,CAAC2B,MAAM,CAAC,CAAC4B,GAAG,CAAC,CAACQ,QAAQ,CAAEvC,UAAU,IAAM,CAC1DA,UAAU,CACVuC,QAAQ,CACRC,UAAU,CAAE,IAAI,CAACtD,UAAU,CAACiB,MAAM,CAAC,CAACH,UAAU,CAAC,CAACwC,UAAU,CAC1DC,WAAW,CAAE,IAAI,CAACvD,UAAU,CAACiB,MAAM,CAAC,CAACH,UAAU,CAAC,CAACyC,WAAW,CAC5D1B,KAAK,CAAE,IAAI,CACXC,WAAW,CAAE,IAAI,CACjBC,QAAQ,CAAE,CAAC,CACX/B,UAAU,CAAE3B,IAAI,CAAC,IAAI,CAAC2B,UAAU,CAACiB,MAAM,CAAC,CAACH,UAAU,CAAC,CAACd,UAAU,CACjE,CAAC,CAAC,CACJ,CAAC,CAAC,CAAC,CACL,CACF","ignoreList":[]},"metadata":{},"sourceType":"module"}