{"ast":null,"code":"import{substr}from'fbjs/lib/UnicodeUtils';import{isArabic,getConfigByKeys}from'./helper';import TagInfoMap from'./TagInfoMap';import{isQATag}from'../store/tag_mode';import{TAG_HEIGHT,CONNECTION_DIR,DEFAULT_COLOR,FONT_SIZE,FONT_COLOR}from'../store/constant';const genLabelsMap=labelsConfig=>{const labelsMap={};labelsConfig.forEach(item=>{labelsMap[item.text]={bgColor:item.color,displayName:item.displayName||item.text};});return labelsMap;};const isContain=(item,resultItem)=>item.start>=resultItem.start&&item.end<=resultItem.end;const isContained=(item,resultItem)=>item.start<=resultItem.start&&item.end>=resultItem.end;export function genDisplayLabels(){let labels=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];let labelsConfig=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];const result=[];const labelsMap=genLabelsMap(labelsConfig);labels.forEach(label=>{let existed=false;const{value,text,type}=label;const newLabel={...label,displayName:labelsMap[value].displayName,realText:text,text:value,bgColor:labelsMap[value].bgColor,fontColor:isQATag(type)?'#000000':FONT_COLOR,children:[]};result.forEach((resultLabel,resultLabelIndex)=>{if(isContain(newLabel,resultLabel)){result[resultLabelIndex].children=[...resultLabel.children,newLabel];existed=true;}else if(isContained(newLabel,resultLabel)){const newResultLabel={...newLabel,children:[...resultLabel.children]};delete result[resultLabelIndex].children;newResultLabel.children.push(resultLabel);result[resultLabelIndex]={...newResultLabel};existed=true;}});if(!existed){result.push(newLabel);}});return result;}export function renderTagMap(tagMap,spanMap){const{labels,insertions,connections}=tagMap;Object.entries(labels).forEach(_ref=>{let[id,label]=_ref;const span=spanMap.get(label.head);label.top+=(span===null||span===void 0?void 0:span.offsetTop)||0;label.left+=label.isArabic?(span===null||span===void 0?void 0:span.offsetWidth)||0:0;});Object.entries(insertions).forEach(_ref2=>{let[id,insertion]=_ref2;const span=spanMap.get(insertion.head);insertion.top+=(span===null||span===void 0?void 0:span.offsetTop)||0+7;});Object.entries(connections).forEach(_ref3=>{let[id,connection]=_ref3;const span=spanMap.get(connection.head);connection.top+=(span===null||span===void 0?void 0:span.offsetTop)||0;connection.path=getPath(connection.from,connection.to,connection);});}const tagWidthCache={};const calcWidth=text=>{if(tagWidthCache[text]){return tagWidthCache[text];}const div=document.createElement('div');div.style.cssText='position:absolute;visibility:hidden;width:auto;height:auto';div.style.fontSize='12px';let width=80;try{document.body.appendChild(div);div.innerText=text;width=div.offsetWidth;document.body.removeChild(div);}catch(e){//\n}const adjustedWidth=width+12;tagWidthCache[text]=adjustedWidth;return adjustedWidth;};export function genTagMap(results,configMap,spanMap,occupyMap,text){const{labels,insertions,connections}=results;const tagMap=new TagInfoMap();labels.forEach(label=>{const arabic=isArabic(substr(text,label.start,label.end-label.start));const span=spanMap.get(label.start);if(span){const occupyList=occupyMap.get(span.offsetTop);const occupy={top:-TAG_HEIGHT,left:span.offsetLeft,text:label.value};// position occupied\nwhile(occupyList.filter(item=>item.top===occupy.top&&Math.abs(occupy.left-item.left)<calcWidth(item.text)).length>0){occupy.top-=TAG_HEIGHT;}occupyList.push(occupy);const configInfo=getConfigByKeys(configMap,label.keys);tagMap.setItem(label.id,{head:label.start,top:occupy.top,left:occupy.left,text:label.value,displayName:label.displayName||configInfo.displayName||label.value,bgColor:isQATag(label.type)?'#ffffff':configInfo.color,fontColor:isQATag(label.type)?'#000000':FONT_COLOR,id:label.id,type:label.type,isArabic:arabic,isReview:label.isReview});}});insertions.forEach(insertion=>{const span=spanMap.get(insertion.at);if(span){var _getConfigByKeys;const occupyList=occupyMap.get(span.offsetTop);const occupy={top:FONT_SIZE,left:span.offsetLeft,text:insertion.value};// position occupied\nwhile(occupyList.filter(item=>item.top===occupy.top&&Math.abs(occupy.left-item.left)<calcWidth(item.text)).length>0)occupy.top+=TAG_HEIGHT;occupyList.push(occupy);const configInfo=getConfigByKeys(configMap,insertion.keys);tagMap.setItem(insertion.id,{head:insertion.at,top:occupy.top,left:occupy.left,text:insertion.value,displayName:insertion.displayName||configInfo.displayName||insertion.value,id:insertion.id,type:insertion.type,bgColor:(_getConfigByKeys=getConfigByKeys(configMap,insertion.keys))===null||_getConfigByKeys===void 0?void 0:_getConfigByKeys.color,fontColor:isQATag(insertion.type)?'#000000':FONT_COLOR,isReview:insertion.isReview});}});try{connections.forEach((connection,index)=>{const from=tagMap.getItem(connection.fromId,connection.fromType);const to=tagMap.getItem(connection.toId,connection.toType);if(!from||!to){throw new Error('BreakException');}const span=spanMap.get(Math.min(from.head,to.head));if(span){const occupyList=occupyMap.get(span.offsetTop);let top=Math.min(from.top,to.top)-2*TAG_HEIGHT;// occupyList.map((item) => item.top).sort((a, b) => (a - b)).shift() - TAG_HEIGHT;\nif(top>-TAG_HEIGHT)top=-2*TAG_HEIGHT;const occupy={top,/* left: (from.left + to.left) / 2, */left:Math.min(from.left,to.left),right:Math.max(to.left,from.left),text:connection.value};while(occupyList.filter(item=>item.top===occupy.top&&(item.right&&item.right-item.left>TAG_HEIGHT*2?!(occupy.left>=item.right||occupy.right<=item.left):occupy.left<=item.left+calcWidth(item.text)&&occupy.right>=item.left-calcWidth(item.text))).length>0)occupy.top-=2*TAG_HEIGHT;occupyList.push(occupy);const configInfo=getConfigByKeys(configMap,connection.keys);tagMap.setItem(connection.id,{head:Math.min(from.head,to.head),from,to,dir:from.left<=to.left?CONNECTION_DIR.LEFT:CONNECTION_DIR.RIGHT,top:occupy.top,left:(from.left+to.left)/2,text:connection.value,displayName:connection.displayName||configInfo.displayName||connection.value,id:connection.id,type:connection.type,bgColor:DEFAULT_COLOR,fontColor:isQATag(connection.type)?'#000000':FONT_COLOR,isReview:connection.isReview});}});}catch(error){if(error.message!=='BreakException')throw error;}return tagMap;}export function genTagMap1(results,configMap,spanMap,occupyMap,text){const{labels,insertions,connections}=results;const tagMap=new TagInfoMap();labels.forEach(label=>{const arabic=isArabic(substr(text,label.start,label.end-label.start));const span=spanMap.get(label.start);if(span){const occupyList=occupyMap.get(span.offsetTop);const occupy={top:-TAG_HEIGHT,left:span.offsetLeft,text:label.value};// position occupied\nwhile(occupyList.filter(item=>item.top===occupy.top&&Math.abs(occupy.left-item.left)<calcWidth(item.text)).length>0){occupy.top-=TAG_HEIGHT;}occupyList.push(occupy);const configInfo=configMap.get(label.value);tagMap.setItem(label.id,{head:label.start,top:occupy.top,left:occupy.left,text:label.value,displayName:label.displayName||configInfo.displayName||label.value,bgColor:isQATag(label.id)?'#ffffff':configInfo.color,fontColor:isQATag(label.id)?'#000000':FONT_COLOR,id:label.id,isArabic:arabic,isReview:label.isReview});}});insertions.forEach(insertion=>{const span=spanMap.get(insertion.at);if(span){const occupyList=occupyMap.get(span.offsetTop);const occupy={top:FONT_SIZE,left:span.offsetLeft,text:insertion.value};// position occupied\nwhile(occupyList.filter(item=>item.top===occupy.top&&Math.abs(occupy.left-item.left)<calcWidth(item.text)).length>0)occupy.top+=TAG_HEIGHT;occupyList.push(occupy);const configInfo=configMap.get(insertion.value);tagMap.setItem(insertion.id,{head:insertion.at,top:occupy.top,left:occupy.left,text:insertion.value,displayName:insertion.displayName||configInfo.displayName||insertion.value,id:insertion.id,bgColor:configMap.get(insertion.value).color,fontColor:isQATag(insertion.id)?'#000000':FONT_COLOR,isReview:insertion.isReview});}});try{connections.forEach(connection=>{const from=tagMap.getItem(connection.fromId,connection.fromType);const to=tagMap.getItem(connection.toId,connection.toType);if(!from||!to){throw new Error('BreakException');}const span=spanMap.get(Math.min(from.head,to.head));if(span){const occupyList=occupyMap.get(span.offsetTop);let top=Math.min(from.top,to.top)-2*TAG_HEIGHT;// occupyList.map((item) => item.top).sort((a, b) => (a - b)).shift() - TAG_HEIGHT;\nif(top>-TAG_HEIGHT)top=-2*TAG_HEIGHT;const occupy={top,/* left: (from.left + to.left) / 2, */left:Math.min(from.left,to.left),right:Math.max(to.left,from.left),text:connection.value};while(occupyList.filter(item=>item.top===occupy.top&&(item.right&&item.right-item.left>TAG_HEIGHT*2?!(occupy.left>=item.right||occupy.right<=item.left):occupy.left<=item.left+calcWidth(item.text)&&occupy.right>=item.left-calcWidth(item.text))).length>0)occupy.top-=2*TAG_HEIGHT;occupyList.push(occupy);const configInfo=configMap.get(connection.value);tagMap.setItem(connection.id,{head:Math.min(from.head,to.head),from,to,dir:from.left<=to.left?CONNECTION_DIR.LEFT:CONNECTION_DIR.RIGHT,top:occupy.top,left:(from.left+to.left)/2,text:connection.value,displayName:connection.displayName||configInfo.displayName||connection.value,id:connection.id,bgColor:DEFAULT_COLOR,fontColor:isQATag(connection.id)?'#000000':FONT_COLOR,isReview:connection.isReview});}});}catch(error){if(error.message!=='BreakException')throw error;}return tagMap;}const getPath=(from,to,middle)=>{if(from.left<middle.left-50)return\"M \".concat(from.left,\" \").concat(from.top,\" Q \").concat(from.left,\" \").concat(middle.top+TAG_HEIGHT/2,\", \").concat(middle.left-50,\" \").concat(middle.top+TAG_HEIGHT/2,\" L \").concat(middle.left+50,\" \").concat(middle.top+TAG_HEIGHT/2,\" Q \").concat(to.left,\" \").concat(middle.top+TAG_HEIGHT/2,\", \").concat(to.left,\" \").concat(to.top);if(from.left>middle.left+50)return\"M \".concat(from.left,\" \").concat(from.top,\" Q \").concat(from.left,\" \").concat(middle.top+TAG_HEIGHT/2,\", \").concat(middle.left+50,\" \").concat(middle.top+TAG_HEIGHT/2,\" L \").concat(middle.left-50,\" \").concat(middle.top+TAG_HEIGHT/2,\" Q \").concat(to.left,\" \").concat(middle.top+TAG_HEIGHT/2,\", \").concat(to.left,\" \").concat(to.top);if(from.left<to.left)return\"M \".concat(from.left,\" \").concat(from.top,\" Q \").concat(middle.left-50,\" \").concat(from.top,\", \").concat(middle.left-50,\" \").concat(middle.top+TAG_HEIGHT/2,\" L \").concat(middle.left+50,\" \").concat(middle.top+TAG_HEIGHT/2,\" Q \").concat(middle.left+50,\" \").concat(to.top,\", \").concat(to.left,\" \").concat(to.top);return\"M \".concat(from.left,\" \").concat(from.top,\" Q \").concat(middle.left+50,\" \").concat(from.top,\", \").concat(middle.left+50,\" \").concat(middle.top+TAG_HEIGHT/2,\" L \").concat(middle.left-50,\" \").concat(middle.top+TAG_HEIGHT/2,\" Q \").concat(middle.left-50,\" \").concat(to.top,\", \").concat(to.left,\" \").concat(to.top);};","map":{"version":3,"names":["substr","isArabic","getConfigByKeys","TagInfoMap","isQATag","TAG_HEIGHT","CONNECTION_DIR","DEFAULT_COLOR","FONT_SIZE","FONT_COLOR","genLabelsMap","labelsConfig","labelsMap","forEach","item","text","bgColor","color","displayName","isContain","resultItem","start","end","isContained","genDisplayLabels","labels","arguments","length","undefined","result","label","existed","value","type","newLabel","realText","fontColor","children","resultLabel","resultLabelIndex","newResultLabel","push","renderTagMap","tagMap","spanMap","insertions","connections","Object","entries","_ref","id","span","get","head","top","offsetTop","left","offsetWidth","_ref2","insertion","_ref3","connection","path","getPath","from","to","tagWidthCache","calcWidth","div","document","createElement","style","cssText","fontSize","width","body","appendChild","innerText","removeChild","e","adjustedWidth","genTagMap","results","configMap","occupyMap","arabic","occupyList","occupy","offsetLeft","filter","Math","abs","configInfo","keys","setItem","isReview","at","_getConfigByKeys","index","getItem","fromId","fromType","toId","toType","Error","min","right","max","dir","LEFT","RIGHT","error","message","genTagMap1","middle","concat"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/editable-text/utils/tagMapUtil.js"],"sourcesContent":["import { substr } from 'fbjs/lib/UnicodeUtils';\nimport { isArabic, getConfigByKeys } from './helper';\nimport TagInfoMap from './TagInfoMap';\nimport { isQATag } from '../store/tag_mode';\nimport { TAG_HEIGHT, CONNECTION_DIR, DEFAULT_COLOR, FONT_SIZE, FONT_COLOR } from '../store/constant';\n\nconst genLabelsMap = (labelsConfig) => {\n  const labelsMap = {};\n  labelsConfig.forEach((item) => {\n    labelsMap[item.text] = { bgColor: item.color, displayName: item.displayName || item.text };\n  });\n  return labelsMap;\n};\n\nconst isContain = (item, resultItem) => (item.start >= resultItem.start) && (item.end <= resultItem.end);\n\nconst isContained = (item, resultItem) => (item.start <= resultItem.start) && (item.end >= resultItem.end);\n\nexport function genDisplayLabels(labels = [], labelsConfig = []) {\n  const result = [];\n  const labelsMap = genLabelsMap(labelsConfig);\n  labels.forEach((label) => {\n    let existed = false;\n    const { value, text, type } = label;\n    const newLabel = { ...label, displayName: labelsMap[value].displayName, realText: text, text: value, bgColor: labelsMap[value].bgColor, fontColor: isQATag(type) ? '#000000' : FONT_COLOR, children: [] };\n\n    result.forEach((resultLabel, resultLabelIndex) => {\n      if (isContain(newLabel, resultLabel)) {\n        result[resultLabelIndex].children = [...resultLabel.children, newLabel];\n        existed = true;\n      } else if (isContained(newLabel, resultLabel)) {\n        const newResultLabel = { ...newLabel, children: [...resultLabel.children] };\n        delete result[resultLabelIndex].children;\n        newResultLabel.children.push(resultLabel);\n        result[resultLabelIndex] = { ...newResultLabel };\n        existed = true;\n      }\n    });\n    if (!existed) {\n      result.push(newLabel);\n    }\n  });\n  return result;\n}\n\nexport function renderTagMap(tagMap, spanMap) {\n  const { labels, insertions, connections } = tagMap;\n  Object.entries(labels).forEach(([id, label]) => {\n    const span = spanMap.get(label.head);\n    label.top += span?.offsetTop || 0;\n    label.left += label.isArabic ? span?.offsetWidth || 0 : 0;\n  });\n  Object.entries(insertions).forEach(([id, insertion]) => {\n    const span = spanMap.get(insertion.head);\n    insertion.top += span?.offsetTop || 0 + 7;\n  });\n  Object.entries(connections).forEach(([id, connection]) => {\n    const span = spanMap.get(connection.head);\n    connection.top += span?.offsetTop || 0;\n    connection.path = getPath(connection.from, connection.to, connection);\n  });\n}\n\nconst tagWidthCache = {};\n\nconst calcWidth = (text) => {\n  if (tagWidthCache[text]) {\n    return tagWidthCache[text];\n  }\n  const div = document.createElement('div');\n  div.style.cssText = 'position:absolute;visibility:hidden;width:auto;height:auto';\n  div.style.fontSize = '12px';\n  let width = 80;\n  try {\n    document.body.appendChild(div);\n    div.innerText = text;\n    width = div.offsetWidth;\n    document.body.removeChild(div);\n  } catch (e) {\n    //\n  }\n  const adjustedWidth = width + 12;\n  tagWidthCache[text] = adjustedWidth;\n  return adjustedWidth;\n};\n\nexport function genTagMap(results, configMap, spanMap, occupyMap, text) {\n  const { labels, insertions, connections } = results;\n  const tagMap = new TagInfoMap();\n\n  labels.forEach((label) => {\n    const arabic = isArabic(substr(text, label.start, label.end - label.start));\n    const span = spanMap.get(label.start);\n    if (span) {\n      const occupyList = occupyMap.get(span.offsetTop);\n      const occupy = { top: -TAG_HEIGHT, left: span.offsetLeft, text: label.value };\n      // position occupied\n      while (occupyList.filter((item) => (item.top === occupy.top && Math.abs(occupy.left - item.left) < calcWidth(item.text))).length > 0) {\n        occupy.top -= TAG_HEIGHT;\n      }\n      occupyList.push(occupy);\n      const configInfo = getConfigByKeys(configMap, label.keys);\n      tagMap.setItem(label.id, {\n        head: label.start,\n        top: occupy.top,\n        left: occupy.left,\n        text: label.value,\n        displayName: label.displayName || configInfo.displayName || label.value,\n        bgColor: isQATag(label.type) ? '#ffffff' : configInfo.color,\n        fontColor: isQATag(label.type) ? '#000000' : FONT_COLOR,\n        id: label.id,\n        type: label.type,\n        isArabic: arabic,\n        isReview: label.isReview,\n      });\n    }\n  });\n  insertions.forEach((insertion) => {\n    const span = spanMap.get(insertion.at);\n    if (span) {\n      const occupyList = occupyMap.get(span.offsetTop);\n      const occupy = { top: FONT_SIZE, left: span.offsetLeft, text: insertion.value };\n      // position occupied\n      while (occupyList.filter((item) => (item.top === occupy.top && Math.abs(occupy.left - item.left) < calcWidth(item.text))).length > 0) occupy.top += TAG_HEIGHT;\n      occupyList.push(occupy);\n      const configInfo = getConfigByKeys(configMap, insertion.keys);\n      tagMap.setItem(insertion.id, {\n        head: insertion.at,\n        top: occupy.top,\n        left: occupy.left,\n        text: insertion.value,\n        displayName: insertion.displayName || configInfo.displayName || insertion.value,\n        id: insertion.id,\n        type: insertion.type,\n        bgColor: getConfigByKeys(configMap, insertion.keys)?.color,\n        fontColor: isQATag(insertion.type) ? '#000000' : FONT_COLOR,\n        isReview: insertion.isReview,\n      });\n    }\n  });\n  try {\n    connections.forEach((connection, index) => {\n      const from = tagMap.getItem(connection.fromId, connection.fromType);\n      const to = tagMap.getItem(connection.toId, connection.toType);\n      if (!from || !to) {\n        throw new Error('BreakException');\n      }\n      const span = spanMap.get(Math.min(from.head, to.head));\n      if (span) {\n        const occupyList = occupyMap.get(span.offsetTop);\n        let top = Math.min(from.top, to.top) - 2 * TAG_HEIGHT; // occupyList.map((item) => item.top).sort((a, b) => (a - b)).shift() - TAG_HEIGHT;\n        if (top > -TAG_HEIGHT) top = -2 * TAG_HEIGHT;\n        const occupy = { top, /* left: (from.left + to.left) / 2, */ left: Math.min(from.left, to.left), right: Math.max(to.left, from.left), text: connection.value };\n        while (occupyList.filter((item) => (\n          item.top === occupy.top &&\n          (\n            (item.right && item.right - item.left > TAG_HEIGHT * 2) ?\n              !(occupy.left >= item.right || occupy.right <= item.left) :\n              occupy.left <= item.left + calcWidth(item.text) && occupy.right >= item.left - calcWidth(item.text)\n          )\n        )).length > 0) occupy.top -= 2 * TAG_HEIGHT;\n        occupyList.push(occupy);\n        const configInfo = getConfigByKeys(configMap, connection.keys);\n        tagMap.setItem(connection.id, {\n          head: Math.min(from.head, to.head),\n          from,\n          to,\n          dir: from.left <= to.left ? CONNECTION_DIR.LEFT : CONNECTION_DIR.RIGHT,\n          top: occupy.top,\n          left: (from.left + to.left) / 2,\n          text: connection.value,\n          displayName: connection.displayName || configInfo.displayName || connection.value,\n          id: connection.id,\n          type: connection.type,\n          bgColor: DEFAULT_COLOR,\n          fontColor: isQATag(connection.type) ? '#000000' : FONT_COLOR,\n          isReview: connection.isReview,\n        });\n      }\n    });\n  } catch (error) {\n    if (error.message !== 'BreakException') throw error;\n  }\n  return tagMap;\n}\nexport function genTagMap1(results, configMap, spanMap, occupyMap, text) {\n  const { labels, insertions, connections } = results;\n  const tagMap = new TagInfoMap();\n\n  labels.forEach((label) => {\n    const arabic = isArabic(substr(text, label.start, label.end - label.start));\n    const span = spanMap.get(label.start);\n    if (span) {\n      const occupyList = occupyMap.get(span.offsetTop);\n      const occupy = { top: -TAG_HEIGHT, left: span.offsetLeft, text: label.value };\n      // position occupied\n      while (occupyList.filter((item) => (item.top === occupy.top && Math.abs(occupy.left - item.left) < calcWidth(item.text))).length > 0) {\n        occupy.top -= TAG_HEIGHT;\n      }\n      occupyList.push(occupy);\n      const configInfo = configMap.get(label.value);\n      tagMap.setItem(label.id, {\n        head: label.start,\n        top: occupy.top,\n        left: occupy.left,\n        text: label.value,\n        displayName: label.displayName || configInfo.displayName || label.value,\n        bgColor: isQATag(label.id) ? '#ffffff' : configInfo.color,\n        fontColor: isQATag(label.id) ? '#000000' : FONT_COLOR,\n        id: label.id,\n        isArabic: arabic,\n        isReview: label.isReview,\n      });\n    }\n  });\n  insertions.forEach((insertion) => {\n    const span = spanMap.get(insertion.at);\n    if (span) {\n      const occupyList = occupyMap.get(span.offsetTop);\n      const occupy = { top: FONT_SIZE, left: span.offsetLeft, text: insertion.value };\n      // position occupied\n      while (occupyList.filter((item) => (item.top === occupy.top && Math.abs(occupy.left - item.left) < calcWidth(item.text))).length > 0) occupy.top += TAG_HEIGHT;\n      occupyList.push(occupy);\n      const configInfo = configMap.get(insertion.value);\n      tagMap.setItem(insertion.id, {\n        head: insertion.at,\n        top: occupy.top,\n        left: occupy.left,\n        text: insertion.value,\n        displayName: insertion.displayName || configInfo.displayName || insertion.value,\n        id: insertion.id,\n        bgColor: configMap.get(insertion.value).color,\n        fontColor: isQATag(insertion.id) ? '#000000' : FONT_COLOR,\n        isReview: insertion.isReview,\n      });\n    }\n  });\n  try {\n    connections.forEach((connection) => {\n      const from = tagMap.getItem(connection.fromId, connection.fromType);\n      const to = tagMap.getItem(connection.toId, connection.toType);\n      if (!from || !to) {\n        throw new Error('BreakException');\n      }\n      const span = spanMap.get(Math.min(from.head, to.head));\n      if (span) {\n        const occupyList = occupyMap.get(span.offsetTop);\n        let top = Math.min(from.top, to.top) - 2 * TAG_HEIGHT; // occupyList.map((item) => item.top).sort((a, b) => (a - b)).shift() - TAG_HEIGHT;\n        if (top > -TAG_HEIGHT) top = -2 * TAG_HEIGHT;\n        const occupy = { top, /* left: (from.left + to.left) / 2, */ left: Math.min(from.left, to.left), right: Math.max(to.left, from.left), text: connection.value };\n        while (occupyList.filter((item) => (\n          item.top === occupy.top &&\n          (\n            (item.right && item.right - item.left > TAG_HEIGHT * 2) ?\n              !(occupy.left >= item.right || occupy.right <= item.left) :\n              occupy.left <= item.left + calcWidth(item.text) && occupy.right >= item.left - calcWidth(item.text)\n          )\n        )).length > 0) occupy.top -= 2 * TAG_HEIGHT;\n        occupyList.push(occupy);\n        const configInfo = configMap.get(connection.value);\n        tagMap.setItem(connection.id, {\n          head: Math.min(from.head, to.head),\n          from,\n          to,\n          dir: from.left <= to.left ? CONNECTION_DIR.LEFT : CONNECTION_DIR.RIGHT,\n          top: occupy.top,\n          left: (from.left + to.left) / 2,\n          text: connection.value,\n          displayName: connection.displayName || configInfo.displayName || connection.value,\n          id: connection.id,\n          bgColor: DEFAULT_COLOR,\n          fontColor: isQATag(connection.id) ? '#000000' : FONT_COLOR,\n          isReview: connection.isReview,\n        });\n      }\n    });\n  } catch (error) {\n    if (error.message !== 'BreakException') throw error;\n  }\n  return tagMap;\n}\n\nconst getPath = (from, to, middle) => {\n  if (from.left < middle.left - 50) return `M ${from.left} ${from.top} Q ${from.left} ${middle.top + TAG_HEIGHT / 2}, ${middle.left - 50} ${middle.top + TAG_HEIGHT / 2} L ${middle.left + 50} ${middle.top + TAG_HEIGHT / 2} Q ${to.left} ${middle.top + TAG_HEIGHT / 2}, ${to.left} ${to.top}`;\n  if (from.left > middle.left + 50) return `M ${from.left} ${from.top} Q ${from.left} ${middle.top + TAG_HEIGHT / 2}, ${middle.left + 50} ${middle.top + TAG_HEIGHT / 2} L ${middle.left - 50} ${middle.top + TAG_HEIGHT / 2} Q ${to.left} ${middle.top + TAG_HEIGHT / 2}, ${to.left} ${to.top}`;\n  if (from.left < to.left) return `M ${from.left} ${from.top} Q ${middle.left - 50} ${from.top}, ${middle.left - 50} ${middle.top + TAG_HEIGHT / 2} L ${middle.left + 50} ${middle.top + TAG_HEIGHT / 2} Q ${middle.left + 50} ${to.top}, ${to.left} ${to.top}`;\n  return `M ${from.left} ${from.top} Q ${middle.left + 50} ${from.top}, ${middle.left + 50} ${middle.top + TAG_HEIGHT / 2} L ${middle.left - 50} ${middle.top + TAG_HEIGHT / 2} Q ${middle.left - 50} ${to.top}, ${to.left} ${to.top}`;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}