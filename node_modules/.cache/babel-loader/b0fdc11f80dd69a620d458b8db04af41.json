{"ast":null,"code":"import React,{useState,useEffect,useImperativeHandle}from'react';import{connect}from'react-redux';import{Input}from'antd';import{UpOutlined,DownOutlined}from'@ant-design/icons';import{setSegmentStartEnd}from'../../../redux/action';import{formatTimestamp}from'../../../constants';import'./PlaySettingSegment.scss';const TIMESTAMP='00:00.000';const TIMESTAMP_REGX=/^\\d{2}:\\d{2}\\.\\d{3}$/;export const MoveType={PLUS:'plus',MINUS:'minus'};const InputNumber=_ref=>{let{className,step=0.1,min,max,value,onChange,onFocus,onBlur}=_ref;const[timestamp,setTimestamp]=useState('');useEffect(()=>{setTimestamp(formatTimestamp(value));},[value]);const select=(input,selectionStart,selectionEnd)=>{setTimeout(()=>{input.setSelectionRange(selectionStart,selectionEnd!==undefined?selectionEnd:selectionStart);},0);};const change=t=>{if(TIMESTAMP_REGX.test(t)){const minute=parseInt(t.substring(0,2),10);const second=parseFloat(t.substring(3));const time=minute*60+second;if(time>=min&&time<=max){onChange(time);}else{setTimestamp(formatTimestamp(value));}}};const handleChange=e=>{const input=e.target;const str=input.value;if(TIMESTAMP_REGX.test(str)){setTimestamp(str);return;}const arr=Array.from(str);const timestampArr=Array.from(timestamp);const index=arr.findIndex((c,i)=>timestampArr[i]!==c);const{selectionStart}=input;if((index<0||index>=selectionStart)&&arr.length<=timestampArr.length){// just delete some characters\nconst beginStr=str.substring(0,selectionStart);const endStr=str.substring(selectionStart);const complementStr=TIMESTAMP.substring(beginStr.length,TIMESTAMP.length-endStr.length);const tStr=\"\".concat(beginStr).concat(complementStr).concat(endStr);setTimestamp(tStr);change(tStr);select(input,selectionStart===3||selectionStart===6?selectionStart-1:selectionStart);}else{const subStr=str.substring(index,selectionStart);if(/^\\d+$/.test(subStr)){const subArr=Array.from(subStr);const characters=timestampArr.map((_,i)=>{if(i>=index&&subArr.length>0){if(i===2||i===5){return timestampArr[i];}const character=subArr.shift();return character;}return timestampArr[i];});const tStr=characters.join('');setTimestamp(tStr);change(tStr);select(input,selectionStart===3||selectionStart===6?selectionStart+1:selectionStart);}}};const handleKeyDown=e=>{const key=e.key.toLowerCase();if(key==='='||key==='+'){// plus\nhandlePlus();}else if(key==='-'||key==='_'){// minus\nhandleMinus();}};const handlePlus=()=>{onChange(Math.min(Math.max(value+step,min),max));};const handleMinus=()=>{onChange(Math.min(Math.max(value-step,min),max));};return/*#__PURE__*/React.createElement(Input,{className:className,value:timestamp,onChange:handleChange,onKeyDown:handleKeyDown,onFocus:onFocus,onBlur:onBlur,addonAfter:/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{onClick:handlePlus},/*#__PURE__*/React.createElement(UpOutlined,null)),/*#__PURE__*/React.createElement(\"div\",{onClick:handleMinus},/*#__PURE__*/React.createElement(DownOutlined,null)))});};const PlaySettingSegment=_ref2=>{let{wavesurfers,results,currentVideo,currentSegment,adjustmentStep=0.1,minSegmentLength,segmentOverlap,updateSegment,playSettingRef}=_ref2;const[start,setStart]=useState(0);const[end,setEnd]=useState(0);const[min,setMin]=useState(0);const[max,setMax]=useState(0);useEffect(()=>{const segment=results[currentVideo][currentSegment];if(segment){setStart(segment.start);setEnd(segment.end);}if(wavesurfers&&wavesurfers.current&&wavesurfers.current.wavesurfer){let segMin=0;let segMax=wavesurfers.current.wavesurfer.getDuration();if(!segmentOverlap){const prevSeg=results[currentVideo][currentSegment-1];const nextSeg=results[currentVideo][currentSegment+1];if(prevSeg){segMin=prevSeg.end;}if(nextSeg){segMax=nextSeg.start;}}setMin(segMin);setMax(segMax);}},[results,currentVideo,currentSegment,wavesurfers]);useImperativeHandle(playSettingRef,()=>({moveStart,moveEnd}));const handleStartChange=value=>{updateSegment({videoIndex:currentVideo,segmentIndex:currentSegment,start:value,end});};const handleEndChange=value=>{updateSegment({videoIndex:currentVideo,segmentIndex:currentSegment,start,end:value});};const moveStart=type=>{const newStart=Math.min(Math.max(start+(type==='plus'?adjustmentStep:-adjustmentStep),min),end-minSegmentLength);handleStartChange(newStart);};const moveEnd=type=>{const newEnd=Math.min(Math.max(end+(type==='plus'?adjustmentStep:-adjustmentStep),start+minSegmentLength),max);handleEndChange(newEnd);};return/*#__PURE__*/React.createElement(\"div\",{className:\"play-setting-segment-container\"},currentSegment>=0&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(InputNumber,{className:\"play-setting-segment-time\",min:min,max:end-minSegmentLength,step:adjustmentStep,value:start,onChange:handleStartChange,onFocus:()=>{window.disableLongAudioHotKeys=true;},onBlur:()=>{window.disableLongAudioHotKeys=false;}})),/*#__PURE__*/React.createElement(\"span\",null,\"~\"),/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(InputNumber,{className:\"play-setting-segment-time\",min:start+minSegmentLength,max:max,step:adjustmentStep,value:end,onChange:handleEndChange,onFocus:()=>{window.disableLongAudioHotKeys=true;},onBlur:()=>{window.disableLongAudioHotKeys=false;}})),/*#__PURE__*/React.createElement(\"span\",null,\"(\".concat((end-start).toFixed(3),\"s)\"))));};const mapStateToProps=state=>({wavesurfers:state.wavesurfers,results:state.results,currentVideo:state.currentVideo,currentSegment:state.currentSegment,adjustmentStep:state.adjustmentStep,minSegmentLength:state.minSegmentLength,segmentOverlap:state.segmentOverlap});const mapDispatchToProps={updateSegment:setSegmentStartEnd};const PlaySettingSegmentComponent=connect(mapStateToProps,mapDispatchToProps)(PlaySettingSegment);export default React.forwardRef((props,ref)=>/*#__PURE__*/React.createElement(PlaySettingSegmentComponent,Object.assign({},props,{ref:ref})));","map":{"version":3,"names":["React","useState","useEffect","useImperativeHandle","connect","Input","UpOutlined","DownOutlined","setSegmentStartEnd","formatTimestamp","TIMESTAMP","TIMESTAMP_REGX","MoveType","PLUS","MINUS","InputNumber","_ref","className","step","min","max","value","onChange","onFocus","onBlur","timestamp","setTimestamp","select","input","selectionStart","selectionEnd","setTimeout","setSelectionRange","undefined","change","t","test","minute","parseInt","substring","second","parseFloat","time","handleChange","e","target","str","arr","Array","from","timestampArr","index","findIndex","c","i","length","beginStr","endStr","complementStr","tStr","concat","subStr","subArr","characters","map","_","character","shift","join","handleKeyDown","key","toLowerCase","handlePlus","handleMinus","Math","createElement","onKeyDown","addonAfter","Fragment","onClick","PlaySettingSegment","_ref2","wavesurfers","results","currentVideo","currentSegment","adjustmentStep","minSegmentLength","segmentOverlap","updateSegment","playSettingRef","start","setStart","end","setEnd","setMin","setMax","segment","current","wavesurfer","segMin","segMax","getDuration","prevSeg","nextSeg","moveStart","moveEnd","handleStartChange","videoIndex","segmentIndex","handleEndChange","type","newStart","newEnd","window","disableLongAudioHotKeys","toFixed","mapStateToProps","state","mapDispatchToProps","PlaySettingSegmentComponent","forwardRef","props","ref","Object","assign"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/AudioComp/PlaySettingSegment/PlaySettingSegment.jsx"],"sourcesContent":["import React, { useState, useEffect, useImperativeHandle } from 'react';\nimport { connect } from 'react-redux';\nimport { Input } from 'antd';\nimport { UpOutlined, DownOutlined } from '@ant-design/icons';\nimport { setSegmentStartEnd } from '../../../redux/action';\nimport { formatTimestamp } from '../../../constants';\nimport './PlaySettingSegment.scss';\n\nconst TIMESTAMP = '00:00.000';\nconst TIMESTAMP_REGX = /^\\d{2}:\\d{2}\\.\\d{3}$/;\n\nexport const MoveType = {\n  PLUS: 'plus',\n  MINUS: 'minus'\n};\n\nconst InputNumber = ({ className, step = 0.1, min, max, value, onChange, onFocus, onBlur }) => {\n  const [timestamp, setTimestamp] = useState('');\n\n  useEffect(() => {\n    setTimestamp(formatTimestamp(value));\n  }, [value]);\n\n  const select = (input, selectionStart, selectionEnd) => {\n    setTimeout(() => {\n      input.setSelectionRange(selectionStart, selectionEnd !== undefined ? selectionEnd : selectionStart);\n    }, 0);\n  };\n\n  const change = (t) => {\n    if (TIMESTAMP_REGX.test(t)) {\n      const minute = parseInt(t.substring(0, 2), 10);\n      const second = parseFloat(t.substring(3));\n      const time = minute * 60 + second;\n      if (time >= min && time <= max) {\n        onChange(time);\n      } else {\n        setTimestamp(formatTimestamp(value));\n      }\n    }\n  };\n\n  const handleChange = (e) => {\n    const input = e.target;\n    const str = input.value;\n    if (TIMESTAMP_REGX.test(str)) {\n      setTimestamp(str);\n      return;\n    }\n\n    const arr = Array.from(str);\n    const timestampArr = Array.from(timestamp);\n    const index = arr.findIndex((c, i) => timestampArr[i] !== c);\n    const { selectionStart } = input;\n    if ((index < 0 || index >= selectionStart) && arr.length <= timestampArr.length) {\n      // just delete some characters\n      const beginStr = str.substring(0, selectionStart);\n      const endStr = str.substring(selectionStart);\n      const complementStr = TIMESTAMP.substring(beginStr.length, TIMESTAMP.length - endStr.length);\n      const tStr = `${beginStr}${complementStr}${endStr}`;\n      setTimestamp(tStr);\n      change(tStr);\n      select(input, selectionStart === 3 || selectionStart === 6 ? selectionStart - 1 : selectionStart);\n    } else {\n      const subStr = str.substring(index, selectionStart);\n      if (/^\\d+$/.test(subStr)) {\n        const subArr = Array.from(subStr);\n        const characters = timestampArr.map((_, i) => {\n          if (i >= index && subArr.length > 0) {\n            if (i === 2 || i === 5) {\n              return timestampArr[i];\n            }\n            const character = subArr.shift();\n            return character;\n          }\n          return timestampArr[i];\n        });\n        const tStr = characters.join('');\n        setTimestamp(tStr);\n        change(tStr);\n        select(input, selectionStart === 3 || selectionStart === 6 ? selectionStart + 1 : selectionStart);\n      }\n    }\n  };\n\n  const handleKeyDown = (e) => {\n    const key = e.key.toLowerCase();\n    if (key === '=' || key === '+') {\n      // plus\n      handlePlus();\n    } else if (key === '-' || key === '_') {\n      // minus\n      handleMinus();\n    }\n  };\n\n  const handlePlus = () => {\n    onChange(Math.min(Math.max(value + step, min), max));\n  };\n\n  const handleMinus = () => {\n    onChange(Math.min(Math.max(value - step, min), max));\n  };\n\n  return (\n    <Input\n      className={className}\n      value={timestamp}\n      onChange={handleChange}\n      onKeyDown={handleKeyDown}\n      onFocus={onFocus}\n      onBlur={onBlur}\n      addonAfter={(\n        <>\n          <div onClick={handlePlus}><UpOutlined /></div>\n          <div onClick={handleMinus}><DownOutlined /></div>\n        </>\n      )}\n    />\n  );\n};\n\nconst PlaySettingSegment = ({ wavesurfers, results, currentVideo, currentSegment, adjustmentStep = 0.1, minSegmentLength, segmentOverlap, updateSegment, playSettingRef }) => {\n  const [start, setStart] = useState(0);\n  const [end, setEnd] = useState(0);\n  const [min, setMin] = useState(0);\n  const [max, setMax] = useState(0);\n\n  useEffect(() => {\n    const segment = results[currentVideo][currentSegment];\n    if (segment) {\n      setStart(segment.start);\n      setEnd(segment.end);\n    }\n\n    if (wavesurfers && wavesurfers.current && wavesurfers.current.wavesurfer) {\n      let segMin = 0;\n      let segMax = wavesurfers.current.wavesurfer.getDuration();\n      if (!segmentOverlap) {\n        const prevSeg = results[currentVideo][currentSegment - 1];\n        const nextSeg = results[currentVideo][currentSegment + 1];\n        if (prevSeg) {\n          segMin = prevSeg.end;\n        }\n        if (nextSeg) {\n          segMax = nextSeg.start;\n        }\n      }\n      setMin(segMin);\n      setMax(segMax);\n    }\n  }, [results, currentVideo, currentSegment, wavesurfers]);\n\n  useImperativeHandle(playSettingRef, () => ({\n    moveStart,\n    moveEnd,\n  }));\n\n  const handleStartChange = (value) => {\n    updateSegment({\n      videoIndex: currentVideo,\n      segmentIndex: currentSegment,\n      start: value,\n      end,\n    });\n  };\n\n  const handleEndChange = (value) => {\n    updateSegment({\n      videoIndex: currentVideo,\n      segmentIndex: currentSegment,\n      start,\n      end: value,\n    });\n  };\n\n  const moveStart = (type) => {\n    const newStart = Math.min(Math.max(start + (type === 'plus' ? adjustmentStep : -adjustmentStep), min), end - minSegmentLength);\n    handleStartChange(newStart);\n  };\n\n  const moveEnd = (type) => {\n    const newEnd = Math.min(Math.max(end + (type === 'plus' ? adjustmentStep : -adjustmentStep), start + minSegmentLength), max);\n    handleEndChange(newEnd);\n  };\n\n  return (\n    <div className=\"play-setting-segment-container\">\n      {currentSegment >= 0 && (\n        <>\n          <span>\n            <InputNumber\n              className=\"play-setting-segment-time\"\n              min={min}\n              max={end - minSegmentLength}\n              step={adjustmentStep}\n              value={start}\n              onChange={handleStartChange}\n              onFocus={() => { window.disableLongAudioHotKeys = true; }}\n              onBlur={() => { window.disableLongAudioHotKeys = false; }}\n            />\n          </span>\n          <span>~</span>\n          <span>\n            <InputNumber\n              className=\"play-setting-segment-time\"\n              min={start + minSegmentLength}\n              max={max}\n              step={adjustmentStep}\n              value={end}\n              onChange={handleEndChange}\n              onFocus={() => { window.disableLongAudioHotKeys = true; }}\n              onBlur={() => { window.disableLongAudioHotKeys = false; }}\n            />\n          </span>\n          <span>{`(${(end - start).toFixed(3)}s)`}</span>\n        </>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  wavesurfers: state.wavesurfers,\n  results: state.results,\n  currentVideo: state.currentVideo,\n  currentSegment: state.currentSegment,\n  adjustmentStep: state.adjustmentStep,\n  minSegmentLength: state.minSegmentLength,\n  segmentOverlap: state.segmentOverlap,\n});\nconst mapDispatchToProps = {\n  updateSegment: setSegmentStartEnd,\n};\n\nconst PlaySettingSegmentComponent = connect(mapStateToProps, mapDispatchToProps)(PlaySettingSegment);\nexport default React.forwardRef((props, ref) => <PlaySettingSegmentComponent {...props} ref={ref} />);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}