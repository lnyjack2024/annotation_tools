{"ast":null,"code":"import { utils } from '@appen/easy-form';\n// eslint-disable-next-line import/prefer-default-export\nexport function triggerFormRules(config, values) {\n  const {\n    fields: configFields,\n    conditions = [],\n    effects = [],\n    rules = []\n  } = config;\n  const fields = (configFields || []).map(field => ({\n    ...field,\n    ...(values[field.name] !== undefined && {\n      defaultValue: values[field.name]\n    })\n  }));\n  const parsedValue = utils.parseFormFields(fields);\n  // trigger rule effects\n  const {\n    updatedFields,\n    updatedValues\n  } = rules.reduce((acc, curr) => utils.ruleTrigger(curr, acc.updatedFields, acc.updatedValues, fields, conditions, effects), {\n    updatedFields: parsedValue.fields,\n    updatedValues: parsedValue.initialValues\n  });\n\n  // remove invisible values\n  updatedFields.forEach(f => {\n    if (!f.visible) {\n      delete updatedValues[f.name];\n    }\n  });\n  return {\n    updatedValues,\n    updatedFields\n  };\n}","map":{"version":3,"names":["utils","triggerFormRules","config","values","fields","configFields","conditions","effects","rules","map","field","name","undefined","defaultValue","parsedValue","parseFormFields","updatedFields","updatedValues","reduce","acc","curr","ruleTrigger","initialValues","forEach","f","visible"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/utils/form.ts"],"sourcesContent":["import { utils } from '@appen/easy-form';\nimport { FormConfig } from '@appen/easy-form/es/types';\n\n// eslint-disable-next-line import/prefer-default-export\nexport function triggerFormRules(config: FormConfig, values: any) {\n  const { fields: configFields, conditions = [], effects = [], rules = [] } = config;\n  const fields = (configFields || []).map((field) => ({\n    ...field,\n    ...values[field.name] !== undefined && {\n      defaultValue: values[field.name],\n    },\n  }));\n\n  const parsedValue = utils.parseFormFields(fields);\n  // trigger rule effects\n  const { updatedFields, updatedValues } = rules.reduce(\n    (acc, curr) => utils.ruleTrigger(\n      curr, acc.updatedFields, acc.updatedValues, fields, conditions, effects,\n    ),\n    { updatedFields: parsedValue.fields, updatedValues: parsedValue.initialValues },\n  );\n\n  // remove invisible values\n  updatedFields.forEach((f) => {\n    if (!f.visible) {\n      delete updatedValues[f.name];\n    }\n  });\n  return {\n    updatedValues,\n    updatedFields,\n  };\n}\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,kBAAkB;AAGxC;AACA,OAAO,SAASC,gBAAgBA,CAACC,MAAkB,EAAEC,MAAW,EAAE;EAChE,MAAM;IAAEC,MAAM,EAAEC,YAAY;IAAEC,UAAU,GAAG,EAAE;IAAEC,OAAO,GAAG,EAAE;IAAEC,KAAK,GAAG;EAAG,CAAC,GAAGN,MAAM;EAClF,MAAME,MAAM,GAAG,CAACC,YAAY,IAAI,EAAE,EAAEI,GAAG,CAAEC,KAAK,KAAM;IAClD,GAAGA,KAAK;IACR,IAAGP,MAAM,CAACO,KAAK,CAACC,IAAI,CAAC,KAAKC,SAAS,IAAI;MACrCC,YAAY,EAAEV,MAAM,CAACO,KAAK,CAACC,IAAI;IACjC,CAAC;EACH,CAAC,CAAC,CAAC;EAEH,MAAMG,WAAW,GAAGd,KAAK,CAACe,eAAe,CAACX,MAAM,CAAC;EACjD;EACA,MAAM;IAAEY,aAAa;IAAEC;EAAc,CAAC,GAAGT,KAAK,CAACU,MAAM,CACnD,CAACC,GAAG,EAAEC,IAAI,KAAKpB,KAAK,CAACqB,WAAW,CAC9BD,IAAI,EAAED,GAAG,CAACH,aAAa,EAAEG,GAAG,CAACF,aAAa,EAAEb,MAAM,EAAEE,UAAU,EAAEC,OAClE,CAAC,EACD;IAAES,aAAa,EAAEF,WAAW,CAACV,MAAM;IAAEa,aAAa,EAAEH,WAAW,CAACQ;EAAc,CAChF,CAAC;;EAED;EACAN,aAAa,CAACO,OAAO,CAAEC,CAAC,IAAK;IAC3B,IAAI,CAACA,CAAC,CAACC,OAAO,EAAE;MACd,OAAOR,aAAa,CAACO,CAAC,CAACb,IAAI,CAAC;IAC9B;EACF,CAAC,CAAC;EACF,OAAO;IACLM,aAAa;IACbD;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module"}