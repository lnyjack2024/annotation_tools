{"ast":null,"code":"/*\n * JavaScript Load Image\n * https://github.com/blueimp/JavaScript-Load-Image\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n */\n\n/* global define, module, Promise */\n\n;\n(function ($) {\n  'use strict';\n\n  var urlAPI = $.URL || $.webkitURL;\n\n  /**\n   * Creates an object URL for a given File object.\n   *\n   * @param {Blob} blob Blob object\n   * @returns {string|boolean} Returns object URL if API exists, else false.\n   */\n  function createObjectURL(blob) {\n    return urlAPI ? urlAPI.createObjectURL(blob) : false;\n  }\n\n  /**\n   * Revokes a given object URL.\n   *\n   * @param {string} url Blob object URL\n   * @returns {undefined|boolean} Returns undefined if API exists, else false.\n   */\n  function revokeObjectURL(url) {\n    return urlAPI ? urlAPI.revokeObjectURL(url) : false;\n  }\n\n  /**\n   * Helper function to revoke an object URL\n   *\n   * @param {string} url Blob Object URL\n   * @param {object} [options] Options object\n   */\n  function revokeHelper(url, options) {\n    if (url && url.slice(0, 5) === 'blob:' && !(options && options.noRevoke)) {\n      revokeObjectURL(url);\n    }\n  }\n\n  /**\n   * Loads a given File object via FileReader interface.\n   *\n   * @param {Blob} file Blob object\n   * @param {Function} onload Load event callback\n   * @param {Function} [onerror] Error/Abort event callback\n   * @param {string} [method=readAsDataURL] FileReader method\n   * @returns {FileReader|boolean} Returns FileReader if API exists, else false.\n   */\n  function readFile(file, onload, onerror, method) {\n    if (!$.FileReader) return false;\n    var reader = new FileReader();\n    reader.onload = function () {\n      onload.call(reader, this.result);\n    };\n    if (onerror) {\n      reader.onabort = reader.onerror = function () {\n        onerror.call(reader, this.error);\n      };\n    }\n    var readerMethod = reader[method || 'readAsDataURL'];\n    if (readerMethod) {\n      readerMethod.call(reader, file);\n      return reader;\n    }\n  }\n\n  /**\n   * Cross-frame instanceof check.\n   *\n   * @param {string} type Instance type\n   * @param {object} obj Object instance\n   * @returns {boolean} Returns true if the object is of the given instance.\n   */\n  function isInstanceOf(type, obj) {\n    // Cross-frame instanceof check\n    return Object.prototype.toString.call(obj) === '[object ' + type + ']';\n  }\n\n  /**\n   * @typedef { HTMLImageElement|HTMLCanvasElement } Result\n   */\n\n  /**\n   * Loads an image for a given File object.\n   *\n   * @param {Blob|string} file Blob object or image URL\n   * @param {Function|object} [callback] Image load event callback or options\n   * @param {object} [options] Options object\n   * @returns {HTMLImageElement|FileReader|Promise<Result>} Object\n   */\n  function loadImage(file, callback, options) {\n    /**\n     * Promise executor\n     *\n     * @param {Function} resolve Resolution function\n     * @param {Function} reject Rejection function\n     * @returns {HTMLImageElement|FileReader} Object\n     */\n    function executor(resolve, reject) {\n      var img = document.createElement('img');\n      var url;\n      /**\n       * Callback for the fetchBlob call.\n       *\n       * @param {HTMLImageElement|HTMLCanvasElement} img Error object\n       * @param {object} data Data object\n       * @returns {undefined} Undefined\n       */\n      function resolveWrapper(img, data) {\n        if (resolve === reject) {\n          // Not using Promises\n          if (resolve) resolve(img, data);\n          return;\n        } else if (img instanceof Error) {\n          reject(img);\n          return;\n        }\n        data = data || {}; // eslint-disable-line no-param-reassign\n        data.image = img;\n        resolve(data);\n      }\n      /**\n       * Callback for the fetchBlob call.\n       *\n       * @param {Blob} blob Blob object\n       * @param {Error} err Error object\n       */\n      function fetchBlobCallback(blob, err) {\n        if (err && $.console) console.log(err); // eslint-disable-line no-console\n        if (blob && isInstanceOf('Blob', blob)) {\n          file = blob; // eslint-disable-line no-param-reassign\n          url = createObjectURL(file);\n        } else {\n          url = file;\n          if (options && options.crossOrigin) {\n            img.crossOrigin = options.crossOrigin;\n          }\n        }\n        img.src = url;\n      }\n      img.onerror = function (event) {\n        revokeHelper(url, options);\n        if (reject) reject.call(img, event);\n      };\n      img.onload = function () {\n        revokeHelper(url, options);\n        var data = {\n          originalWidth: img.naturalWidth || img.width,\n          originalHeight: img.naturalHeight || img.height\n        };\n        try {\n          loadImage.transform(img, options, resolveWrapper, file, data);\n        } catch (error) {\n          if (reject) reject(error);\n        }\n      };\n      if (typeof file === 'string') {\n        if (loadImage.requiresMetaData(options)) {\n          loadImage.fetchBlob(file, fetchBlobCallback, options);\n        } else {\n          fetchBlobCallback();\n        }\n        return img;\n      } else if (isInstanceOf('Blob', file) || isInstanceOf('File', file)) {\n        url = createObjectURL(file);\n        if (url) {\n          img.src = url;\n          return img;\n        }\n        return readFile(file, function (url) {\n          img.src = url;\n        }, reject);\n      }\n    }\n    if ($.Promise && typeof callback !== 'function') {\n      options = callback; // eslint-disable-line no-param-reassign\n      return new Promise(executor);\n    }\n    return executor(callback, callback);\n  }\n\n  // Determines if metadata should be loaded automatically.\n  // Requires the load image meta extension to load metadata.\n  loadImage.requiresMetaData = function (options) {\n    return options && options.meta;\n  };\n\n  // If the callback given to this function returns a blob, it is used as image\n  // source instead of the original url and overrides the file argument used in\n  // the onload and onerror event callbacks:\n  loadImage.fetchBlob = function (url, callback) {\n    callback();\n  };\n  loadImage.transform = function (img, options, callback, file, data) {\n    callback(img, data);\n  };\n  loadImage.global = $;\n  loadImage.readFile = readFile;\n  loadImage.isInstanceOf = isInstanceOf;\n  loadImage.createObjectURL = createObjectURL;\n  loadImage.revokeObjectURL = revokeObjectURL;\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return loadImage;\n    });\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = loadImage;\n  } else {\n    $.loadImage = loadImage;\n  }\n})(typeof window !== 'undefined' && window || this);","map":{"version":3,"names":["$","urlAPI","URL","webkitURL","createObjectURL","blob","revokeObjectURL","url","revokeHelper","options","slice","noRevoke","readFile","file","onload","onerror","method","FileReader","reader","call","result","onabort","error","readerMethod","isInstanceOf","type","obj","Object","prototype","toString","loadImage","callback","executor","resolve","reject","img","document","createElement","resolveWrapper","data","Error","image","fetchBlobCallback","err","console","log","crossOrigin","src","event","originalWidth","naturalWidth","width","originalHeight","naturalHeight","height","transform","requiresMetaData","fetchBlob","Promise","meta","global","define","amd","module","exports","window"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/node_modules/blueimp-load-image/js/load-image.js"],"sourcesContent":["/*\n * JavaScript Load Image\n * https://github.com/blueimp/JavaScript-Load-Image\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n */\n\n/* global define, module, Promise */\n\n;(function ($) {\n  'use strict'\n\n  var urlAPI = $.URL || $.webkitURL\n\n  /**\n   * Creates an object URL for a given File object.\n   *\n   * @param {Blob} blob Blob object\n   * @returns {string|boolean} Returns object URL if API exists, else false.\n   */\n  function createObjectURL(blob) {\n    return urlAPI ? urlAPI.createObjectURL(blob) : false\n  }\n\n  /**\n   * Revokes a given object URL.\n   *\n   * @param {string} url Blob object URL\n   * @returns {undefined|boolean} Returns undefined if API exists, else false.\n   */\n  function revokeObjectURL(url) {\n    return urlAPI ? urlAPI.revokeObjectURL(url) : false\n  }\n\n  /**\n   * Helper function to revoke an object URL\n   *\n   * @param {string} url Blob Object URL\n   * @param {object} [options] Options object\n   */\n  function revokeHelper(url, options) {\n    if (url && url.slice(0, 5) === 'blob:' && !(options && options.noRevoke)) {\n      revokeObjectURL(url)\n    }\n  }\n\n  /**\n   * Loads a given File object via FileReader interface.\n   *\n   * @param {Blob} file Blob object\n   * @param {Function} onload Load event callback\n   * @param {Function} [onerror] Error/Abort event callback\n   * @param {string} [method=readAsDataURL] FileReader method\n   * @returns {FileReader|boolean} Returns FileReader if API exists, else false.\n   */\n  function readFile(file, onload, onerror, method) {\n    if (!$.FileReader) return false\n    var reader = new FileReader()\n    reader.onload = function () {\n      onload.call(reader, this.result)\n    }\n    if (onerror) {\n      reader.onabort = reader.onerror = function () {\n        onerror.call(reader, this.error)\n      }\n    }\n    var readerMethod = reader[method || 'readAsDataURL']\n    if (readerMethod) {\n      readerMethod.call(reader, file)\n      return reader\n    }\n  }\n\n  /**\n   * Cross-frame instanceof check.\n   *\n   * @param {string} type Instance type\n   * @param {object} obj Object instance\n   * @returns {boolean} Returns true if the object is of the given instance.\n   */\n  function isInstanceOf(type, obj) {\n    // Cross-frame instanceof check\n    return Object.prototype.toString.call(obj) === '[object ' + type + ']'\n  }\n\n  /**\n   * @typedef { HTMLImageElement|HTMLCanvasElement } Result\n   */\n\n  /**\n   * Loads an image for a given File object.\n   *\n   * @param {Blob|string} file Blob object or image URL\n   * @param {Function|object} [callback] Image load event callback or options\n   * @param {object} [options] Options object\n   * @returns {HTMLImageElement|FileReader|Promise<Result>} Object\n   */\n  function loadImage(file, callback, options) {\n    /**\n     * Promise executor\n     *\n     * @param {Function} resolve Resolution function\n     * @param {Function} reject Rejection function\n     * @returns {HTMLImageElement|FileReader} Object\n     */\n    function executor(resolve, reject) {\n      var img = document.createElement('img')\n      var url\n      /**\n       * Callback for the fetchBlob call.\n       *\n       * @param {HTMLImageElement|HTMLCanvasElement} img Error object\n       * @param {object} data Data object\n       * @returns {undefined} Undefined\n       */\n      function resolveWrapper(img, data) {\n        if (resolve === reject) {\n          // Not using Promises\n          if (resolve) resolve(img, data)\n          return\n        } else if (img instanceof Error) {\n          reject(img)\n          return\n        }\n        data = data || {} // eslint-disable-line no-param-reassign\n        data.image = img\n        resolve(data)\n      }\n      /**\n       * Callback for the fetchBlob call.\n       *\n       * @param {Blob} blob Blob object\n       * @param {Error} err Error object\n       */\n      function fetchBlobCallback(blob, err) {\n        if (err && $.console) console.log(err) // eslint-disable-line no-console\n        if (blob && isInstanceOf('Blob', blob)) {\n          file = blob // eslint-disable-line no-param-reassign\n          url = createObjectURL(file)\n        } else {\n          url = file\n          if (options && options.crossOrigin) {\n            img.crossOrigin = options.crossOrigin\n          }\n        }\n        img.src = url\n      }\n      img.onerror = function (event) {\n        revokeHelper(url, options)\n        if (reject) reject.call(img, event)\n      }\n      img.onload = function () {\n        revokeHelper(url, options)\n        var data = {\n          originalWidth: img.naturalWidth || img.width,\n          originalHeight: img.naturalHeight || img.height\n        }\n        try {\n          loadImage.transform(img, options, resolveWrapper, file, data)\n        } catch (error) {\n          if (reject) reject(error)\n        }\n      }\n      if (typeof file === 'string') {\n        if (loadImage.requiresMetaData(options)) {\n          loadImage.fetchBlob(file, fetchBlobCallback, options)\n        } else {\n          fetchBlobCallback()\n        }\n        return img\n      } else if (isInstanceOf('Blob', file) || isInstanceOf('File', file)) {\n        url = createObjectURL(file)\n        if (url) {\n          img.src = url\n          return img\n        }\n        return readFile(\n          file,\n          function (url) {\n            img.src = url\n          },\n          reject\n        )\n      }\n    }\n    if ($.Promise && typeof callback !== 'function') {\n      options = callback // eslint-disable-line no-param-reassign\n      return new Promise(executor)\n    }\n    return executor(callback, callback)\n  }\n\n  // Determines if metadata should be loaded automatically.\n  // Requires the load image meta extension to load metadata.\n  loadImage.requiresMetaData = function (options) {\n    return options && options.meta\n  }\n\n  // If the callback given to this function returns a blob, it is used as image\n  // source instead of the original url and overrides the file argument used in\n  // the onload and onerror event callbacks:\n  loadImage.fetchBlob = function (url, callback) {\n    callback()\n  }\n\n  loadImage.transform = function (img, options, callback, file, data) {\n    callback(img, data)\n  }\n\n  loadImage.global = $\n  loadImage.readFile = readFile\n  loadImage.isInstanceOf = isInstanceOf\n  loadImage.createObjectURL = createObjectURL\n  loadImage.revokeObjectURL = revokeObjectURL\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return loadImage\n    })\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = loadImage\n  } else {\n    $.loadImage = loadImage\n  }\n})((typeof window !== 'undefined' && window) || this)\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}