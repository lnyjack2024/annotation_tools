{"ast":null,"code":"import Rectangle from'./Rectangle';import Polygon from'./Polygon';import Line from'./Line';import Dot from'./Dot';import{ShapeType}from'./types';export default class ShapeFactory{static getShape(shapeType,options){switch(shapeType){case ShapeType.RECTANGLE:return new Rectangle(options);case ShapeType.POLYGON:return new Polygon(options);case ShapeType.LINE:return new Line(options);case ShapeType.DOT:return new Dot(options);default:}return null;}}","map":{"version":3,"names":["Rectangle","Polygon","Line","Dot","ShapeType","ShapeFactory","getShape","shapeType","options","RECTANGLE","POLYGON","LINE","DOT"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/common/shapes/ShapeFactory.ts"],"sourcesContent":["import type Shape from './Shape';\nimport Rectangle from './Rectangle';\nimport Polygon from './Polygon';\nimport Line from './Line';\nimport Dot from './Dot';\nimport { ShapeType, ShapeData, ShapeOptions } from './types';\n\nexport default class ShapeFactory {\n  static getShape(shapeType: ShapeType, options: ShapeOptions): Shape<ShapeData> | null {\n    switch (shapeType) {\n      case ShapeType.RECTANGLE:\n        return new Rectangle(options);\n      case ShapeType.POLYGON:\n        return new Polygon(options);\n      case ShapeType.LINE:\n        return new Line(options);\n      case ShapeType.DOT:\n        return new Dot(options);\n      default:\n    }\n    return null;\n  }\n}\n"],"mappings":"AACA,MAAO,CAAAA,SAAS,KAAM,aAAa,CACnC,MAAO,CAAAC,OAAO,KAAM,WAAW,CAC/B,MAAO,CAAAC,IAAI,KAAM,QAAQ,CACzB,MAAO,CAAAC,GAAG,KAAM,OAAO,CACvB,OAASC,SAAS,KAAiC,SAAS,CAE5D,cAAe,MAAM,CAAAC,YAAa,CAChC,MAAO,CAAAC,QAAQA,CAACC,SAAoB,CAAEC,OAAqB,CAA2B,CACpF,OAAQD,SAAS,EACf,IAAK,CAAAH,SAAS,CAACK,SAAS,CACtB,MAAO,IAAI,CAAAT,SAAS,CAACQ,OAAO,CAAC,CAC/B,IAAK,CAAAJ,SAAS,CAACM,OAAO,CACpB,MAAO,IAAI,CAAAT,OAAO,CAACO,OAAO,CAAC,CAC7B,IAAK,CAAAJ,SAAS,CAACO,IAAI,CACjB,MAAO,IAAI,CAAAT,IAAI,CAACM,OAAO,CAAC,CAC1B,IAAK,CAAAJ,SAAS,CAACQ,GAAG,CAChB,MAAO,IAAI,CAAAT,GAAG,CAACK,OAAO,CAAC,CACzB,QACF,CACA,MAAO,KAAI,CACb,CACF","ignoreList":[]},"metadata":{},"sourceType":"module"}