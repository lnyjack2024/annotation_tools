{"ast":null,"code":"/* eslint-disable import/prefer-default-export */\nimport { getOrigin } from '../../utils';\nexport function getOCRText(base64Str) {\n  const origin = getOrigin();\n  const formData = new FormData();\n  formData.append('base64', base64Str);\n  const fetchPromise = new Promise((resolve, reject) => {\n    fetch(`${origin}/contributor_proxy/v1/lidar/vision/text`, {\n      method: 'POST',\n      credentials: 'include',\n      body: formData\n    }).then(res => {\n      if (res.status === 200) {\n        return res.json();\n      }\n      throw new Error('Request failed.');\n    }).then(body => resolve(body.data)).catch(e => reject(e));\n  });\n  const timeoutPromise = new Promise((_, reject) => {\n    setTimeout(() => reject(), 4000);\n  });\n  return Promise.race([fetchPromise, timeoutPromise]);\n}","map":{"version":3,"names":["getOrigin","getOCRText","base64Str","origin","formData","FormData","append","fetchPromise","Promise","resolve","reject","fetch","method","credentials","body","then","res","status","json","Error","data","catch","e","timeoutPromise","_","setTimeout","race"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking/request.ts"],"sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport { getOrigin } from '../../utils';\n\nexport function getOCRText(base64Str: string) {\n  const origin = getOrigin();\n  const formData = new FormData();\n  formData.append('base64', base64Str);\n\n  const fetchPromise = new Promise<string>((resolve, reject) => {\n    fetch(`${origin}/contributor_proxy/v1/lidar/vision/text`, {\n      method: 'POST',\n      credentials: 'include',\n      body: formData,\n    })\n      .then((res) => {\n        if (res.status === 200) {\n          return res.json();\n        }\n        throw new Error('Request failed.');\n      })\n      .then((body) => resolve(body.data))\n      .catch((e) => reject(e));\n  });\n  const timeoutPromise = new Promise<string>((_, reject) => {\n    setTimeout(() => reject(), 4000);\n  });\n\n  return Promise.race([fetchPromise, timeoutPromise]);\n}\n"],"mappings":"AAAA;AACA,SAASA,SAAS,QAAQ,aAAa;AAEvC,OAAO,SAASC,UAAUA,CAACC,SAAiB,EAAE;EAC5C,MAAMC,MAAM,GAAGH,SAAS,CAAC,CAAC;EAC1B,MAAMI,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEJ,SAAS,CAAC;EAEpC,MAAMK,YAAY,GAAG,IAAIC,OAAO,CAAS,CAACC,OAAO,EAAEC,MAAM,KAAK;IAC5DC,KAAK,CAAC,GAAGR,MAAM,yCAAyC,EAAE;MACxDS,MAAM,EAAE,MAAM;MACdC,WAAW,EAAE,SAAS;MACtBC,IAAI,EAAEV;IACR,CAAC,CAAC,CACCW,IAAI,CAAEC,GAAG,IAAK;MACb,IAAIA,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;QACtB,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;MACnB;MACA,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;IACpC,CAAC,CAAC,CACDJ,IAAI,CAAED,IAAI,IAAKL,OAAO,CAACK,IAAI,CAACM,IAAI,CAAC,CAAC,CAClCC,KAAK,CAAEC,CAAC,IAAKZ,MAAM,CAACY,CAAC,CAAC,CAAC;EAC5B,CAAC,CAAC;EACF,MAAMC,cAAc,GAAG,IAAIf,OAAO,CAAS,CAACgB,CAAC,EAAEd,MAAM,KAAK;IACxDe,UAAU,CAAC,MAAMf,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC;EAClC,CAAC,CAAC;EAEF,OAAOF,OAAO,CAACkB,IAAI,CAAC,CAACnB,YAAY,EAAEgB,cAAc,CAAC,CAAC;AACrD","ignoreList":[]},"metadata":{},"sourceType":"module"}