{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/SegmentDetail/LineText/LineText.js\";\nimport React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport './LineText.scss';\nimport { Input, Tooltip, notification } from 'antd';\nimport { FaRobot } from 'react-icons/fa';\nimport { setLineText } from '../../../redux/action';\nimport { translate, tagType, shortText } from '../../../constants';\nimport { isAnnotationReadonly } from '../../../../../utils/tool-mode';\nimport TagIcon from '../../common/Icons/TagIcon';\nimport StandaloneTagIcon from '../../common/Icons/StandaloneTagIcon';\nimport { store, containsRTLLanguage } from '../../../../../utils';\nnotification.config({\n  top: 60\n});\nconst LineText = props => {\n  const textareaRef = useRef();\n  const {\n    text,\n    lineIndex\n  } = props;\n  const handleTextChange = value => {\n    props.setLineText({\n      text: value,\n      videoIndex: null,\n      segmentIndex: null,\n      lineIndex\n    });\n  };\n  const handleTagClick = (group, tag) => {\n    if (isAnnotationReadonly(props.toolMode) || props.annotateDisabled) {\n      return;\n    }\n    const domTextArea = textareaRef.current.resizableTextArea.textArea;\n    const txt = domTextArea.value;\n    const before = txt.substring(0, domTextArea.selectionStart);\n    const selected = txt.substring(domTextArea.selectionStart, domTextArea.selectionEnd);\n    const after = txt.substring(domTextArea.selectionEnd);\n    let newTxt = domTextArea.value;\n    let newSelection = before === null || before === void 0 ? void 0 : before.length;\n    if (group.type === tagType.standalone) {\n      var _tag$text;\n      newSelection += (_tag$text = tag.text) === null || _tag$text === void 0 ? void 0 : _tag$text.length;\n      newTxt = `${before}${tag.text}${after}`;\n    } else if (group.type === tagType.tag) {\n      var _tag$prefix, _tag$suffix;\n      newSelection += ((_tag$prefix = tag.prefix) === null || _tag$prefix === void 0 ? void 0 : _tag$prefix.length) + (selected === null || selected === void 0 ? void 0 : selected.length) + (selected.length === 0 ? 0 : (_tag$suffix = tag.suffix) === null || _tag$suffix === void 0 ? void 0 : _tag$suffix.length);\n      newTxt = `${before}${tag.prefix}${selected}${tag.suffix}${after}`;\n    }\n    domTextArea.value = newTxt;\n    handleTextChange(newTxt);\n    domTextArea.focus();\n    domTextArea.setSelectionRange(newSelection, newSelection);\n  };\n  const handleTagShortcut = e => {\n    if (e.ctrlKey && e.shiftKey && e.key) {\n      e.preventDefault();\n      props.tagGroup.forEach(group => {\n        group.tags.forEach(tag => {\n          var _tag$shortcut;\n          if (e.key.toUpperCase() === ((_tag$shortcut = tag.shortcut) === null || _tag$shortcut === void 0 ? void 0 : _tag$shortcut.toUpperCase())) {\n            handleTagClick(group, tag);\n          }\n        });\n      });\n    }\n  };\n  const namespace = 'audio-transcription-hist';\n  const getCurrentVideoUrl = () => {\n    var _props$videos$props$c;\n    return (_props$videos$props$c = props.videos[props.currentVideo]) === null || _props$videos$props$c === void 0 ? void 0 : _props$videos$props$c.url;\n  };\n  const increaseCallHist = duration => {\n    try {\n      const currentVideoIndex = getCurrentVideoUrl();\n      const count = store.getStorage(namespace, currentVideoIndex) || 0;\n      store.setStorage(namespace, currentVideoIndex, count + duration);\n      store.cleanExpiredStorage(namespace);\n    } catch (e) {\n      // do nothing\n    }\n  };\n  const isCallLimitExceeded = () => {\n    try {\n      const currentVideoIndex = getCurrentVideoUrl();\n      const limit = props.wavesurfers.current.wavesurfer.getDuration() * 1.1;\n      if (currentVideoIndex) {\n        const count = store.getStorage(namespace, currentVideoIndex) || 0;\n        return count > limit;\n      }\n    } catch (e) {\n      // do nothing\n    }\n    return false;\n  };\n  const handleAutoTranscribe = () => {\n    try {\n      let transcribed = false;\n      if (hasWordTimestamps()) {\n        transcribed = transcribeWithWordTimestamps();\n      }\n      if (!transcribed && props.autoTranscription && props.autoTranscriptionLanguage) {\n        if (isCallLimitExceeded()) {\n          notification.error({\n            message: translate('AUTO_TRANSCRIBE_EXCEEDS_LIMIT')\n          });\n        } else {\n          transcribe();\n        }\n      }\n    } catch (e) {\n      console.log(e);\n      notification.error({\n        message: `${translate('AUTO_TRANSCRIBE_FAILURE')} error: ${e}`\n      });\n    }\n  };\n  const hasWordTimestamps = () => {\n    var _props$wordTimestamps, _props$wordTimestamps2;\n    return ((_props$wordTimestamps = props.wordTimestamps[props.currentVideo]) === null || _props$wordTimestamps === void 0 ? void 0 : (_props$wordTimestamps2 = _props$wordTimestamps.words) === null || _props$wordTimestamps2 === void 0 ? void 0 : _props$wordTimestamps2.length) > 0;\n  };\n  const transcribeWithWordTimestamps = () => {\n    const wavesurfer = props.wavesurfers.current.wavesurfer;\n    wavesurfer.pause();\n    const region = props.wavesurfers.current.segmentSelected;\n    if (!region) {\n      notification.error({\n        message: translate('AUTO_TRANSCRIBE_NOT_SELECTED')\n      });\n      return;\n    }\n    const start = region.start;\n    const end = region.end;\n    const wordTimestamps = props.wordTimestamps[props.currentVideo];\n    const words = [];\n    for (let i = 0; i < wordTimestamps.words.length; i += 1) {\n      const w = wordTimestamps.words[i];\n      if (w.start >= start && w.end <= end || w.start <= start && w.end >= start || w.start <= end && w.end >= end) {\n        words.push(w.word);\n      }\n      if (w.end > end) {\n        break;\n      }\n    }\n    const text = words.join(wordTimestamps.separator);\n    if (text === null || text === void 0 ? void 0 : text.trim()) {\n      handleTextChange(text);\n      return true;\n    }\n    return false;\n  };\n  const transcribe = () => {\n    const wavesurfer = props.wavesurfers.current.wavesurfer;\n    wavesurfer.pause();\n    const region = props.wavesurfers.current.segmentSelected;\n    if (!region) {\n      notification.error({\n        message: translate('AUTO_TRANSCRIBE_NOT_SELECTED')\n      });\n      return;\n    }\n    const duration = region.end - region.start;\n    if (duration > 100) {\n      notification.error({\n        message: translate('AUTO_TRANSCRIBE_TOO_LONG')\n      });\n      return;\n    }\n    const originalBuffer = wavesurfer.backend.buffer;\n    const emptySegment = wavesurfer.backend.ac.createBuffer(originalBuffer.numberOfChannels, duration * originalBuffer.sampleRate, originalBuffer.sampleRate);\n    try {\n      for (let i = 0; i < originalBuffer.numberOfChannels; i += 1) {\n        const chanData = originalBuffer.getChannelData(i);\n        const emptySegmentData = emptySegment.getChannelData(i);\n        const start = Math.floor(region.start * originalBuffer.sampleRate);\n        const end = Math.min(start + emptySegmentData.length, chanData.length);\n        // region.start * originalBuffer.sampleRate, region.end * originalBuffer.sampleRate\n        const mid_data = chanData.subarray(start, end);\n        // console.log(mid_data.length, emptySegmentData.length);\n        emptySegmentData.set(mid_data);\n      }\n    } catch (e) {\n      console.log(e);\n      return;\n    }\n    const blob = bufferToWave(emptySegment, 0, emptySegment.length);\n    const formData = new FormData();\n    formData.append('file', blob);\n    formData.append('job_id', props.jobId);\n    formData.append('language', props.autoTranscriptionLanguage);\n    formData.append('duration', `${duration}`);\n    formData.append('endpoint', props.autoTranscriptionEndpoint);\n    notification.info({\n      message: translate('AUTO_TRANSCRIBE_START')\n    });\n    // TODO: temp solution\n    let url = 'http://localhost:5000';\n    const parent = window.location.href;\n    if (parent.startsWith('http://tools.devk.appen.com.cn')) {\n      url = 'http://request-proxy.devk.appen.com.cn';\n    } else if (parent.startsWith('http://tools.stg.appen.com.cn')) {\n      url = 'http://request-proxy.stg.appen.com.cn';\n    } else if (parent.startsWith('http://tools.appen.com.cn') || parent.startsWith('https://tools.appen.com.cn')) {\n      url = 'https://request-proxy.appen.com.cn';\n    }\n    fetch(`${url}/contributor_proxy/v1/lidar/speech/transcribe`, {\n      credentials: 'include',\n      method: 'POST',\n      body: formData\n    }).then(response => response.json()).then(result => {\n      console.log('Success:', result);\n      if (result.code === 0) {\n        handleTextChange(result.data);\n        notification.success({\n          message: translate('AUTO_TRANSCRIBE_SUCCESS')\n        });\n      } else if (result.code === -1) {\n        notification.warn({\n          message: translate('AUTO_TRANSCRIBE_NO_MATCH')\n        });\n      } else {\n        notification.warn({\n          message: `${translate('AUTO_TRANSCRIBE_FAILURE')} message=${result.message}`\n        });\n      }\n      increaseCallHist(duration);\n    }).catch(error => {\n      console.error('Error:', error);\n      notification.error({\n        message: translate('AUTO_TRANSCRIBE_FAILURE')\n      });\n    });\n  };\n  const bufferToWave = (array_buffer, offset, len) => {\n    const numOfChan = array_buffer.numberOfChannels;\n    const length = len * numOfChan * 2 + 44;\n    const buffer = new ArrayBuffer(length);\n    const view = new DataView(buffer);\n    const channels = [];\n    let i;\n    let sample;\n    let pos = 0;\n\n    // write WAVE header\n    setUint32(0x46464952); // \"RIFF\"\n    setUint32(length - 8); // file length - 8\n    setUint32(0x45564157); // \"WAVE\"\n\n    setUint32(0x20746d66); // \"fmt \" chunk\n    setUint32(16); // length = 16\n    setUint16(1); // PCM (uncompressed)\n    setUint16(numOfChan);\n    setUint32(array_buffer.sampleRate);\n    setUint32(array_buffer.sampleRate * 2 * numOfChan); // avg. bytes/sec\n    setUint16(numOfChan * 2); // block-align\n    setUint16(16); // 16-bit (hardcoded in this demo)\n\n    setUint32(0x61746164); // \"data\" - chunk\n    setUint32(length - pos - 4); // chunk length\n\n    // write interleaved data\n    for (i = 0; i < array_buffer.numberOfChannels; i += 1) {\n      channels.push(array_buffer.getChannelData(i));\n    }\n    while (pos < length) {\n      for (i = 0; i < numOfChan; i += 1) {\n        // interleave channels\n        sample = Math.max(-1, Math.min(1, channels[i][offset])); // clamp\n        sample = (0.5 + sample < 0 ? sample * 32768 : sample * 32767) | 0; // scale to 16-bit signed int\n        view.setInt16(pos, sample, true); // update data chunk\n        pos += 2;\n      }\n      offset += 1; // next source sample\n    }\n\n    // create Blob\n    return new Blob([buffer], {\n      type: 'audio/mpeg'\n    });\n    function setUint16(data) {\n      view.setUint16(pos, data, true);\n      pos += 2;\n    }\n    function setUint32(data) {\n      view.setUint32(pos, data, true);\n      pos += 4;\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"line-text-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"line-text-head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"line-text-content-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }\n  }, `${translate('content')}:`), (hasWordTimestamps() || props.autoTranscription && props.autoTranscriptionLanguage && !isAnnotationReadonly(props.toolMode) && !props.annotateDisabled) && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"line-text-auto-transcribe\",\n    onClick: e => handleAutoTranscribe(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FaRobot, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Input.TextArea, {\n    ref: textareaRef,\n    className: \"line-text\",\n    value: text,\n    autoSize: {\n      minRows: 6\n    },\n    onChange: e => handleTextChange(e.target.value),\n    autoComplete: \"off\",\n    disabled: isAnnotationReadonly(props.toolMode) || props.annotateDisabled,\n    onFocus: () => {\n      window.disableLongAudioHotKeys = true;\n    },\n    onBlur: () => {\n      window.disableLongAudioHotKeys = false;\n    },\n    onKeyDown: e => {\n      handleTagShortcut(e);\n    },\n    dir: containsRTLLanguage(text) ? 'rtl' : 'ltr',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }\n  }, props.tagGroup.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tags-group-shortcut\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }\n  }, translate('TAG_SHORTCUT'), \": ctrl+shift+[key]\"), props.tagGroup.map(group => /*#__PURE__*/React.createElement(\"div\", {\n    key: `tags-group-${group.name}`,\n    className: \"tags-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: group.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tags-group-tag-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 17\n    }\n  }, group.type === tagType.tag && /*#__PURE__*/React.createElement(TagIcon, {\n    size: 16,\n    viewBox: \"0 0 16 16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 51\n    }\n  }), group.type === tagType.standalone && /*#__PURE__*/React.createElement(StandaloneTagIcon, {\n    size: 16,\n    viewBox: \"0 0 16 16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 58\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tags-group-tags\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 15\n    }\n  }, group.tags.map((tag, idx) => /*#__PURE__*/React.createElement(Tooltip, {\n    overlayClassName: \"tooltip\",\n    key: `tags-group-tag-${group.name}-${tag.name}-${idx}`,\n    title: `${translate('TAG')}: ${tag.prefix ? tag.prefix : ''}${tag.suffix ? tag.suffix : ''}${tag.text ? tag.text : ''} ${tag.shortcut ? `${translate('TAG_SHORTCUT')}: ctrl+shift+${tag.shortcut}` : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: `tags-group-tag tags-group-tag-${group.type} tags-group-tag-${isAnnotationReadonly(props.toolMode) || props.annotateDisabled ? 'disabled' : 'enabled'}`,\n    key: `tags-group-tag-${group.name}-${tag.name}-${idx}`,\n    onClick: () => handleTagClick(group, tag),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 21\n    }\n  }, `${shortText(tag.name, 50)}${tag.shortcut ? ` [${tag.shortcut}]` : ''}`))))))));\n};\nLineText.propTypes = {\n  setLineText: PropTypes.func,\n  text: PropTypes.string,\n  lineIndex: PropTypes.number\n};\nconst mapStateToProps = state => ({\n  toolMode: state.toolMode,\n  tagGroup: state.tagGroup,\n  wavesurfers: state.wavesurfers,\n  autoTranscription: state.autoTranscription,\n  autoTranscriptionLanguage: state.autoTranscriptionLanguage,\n  autoTranscriptionEndpoint: state.autoTranscriptionEndpoint,\n  jobId: state.jobId,\n  videos: state.videos,\n  currentVideo: state.currentVideo,\n  wordTimestamps: state.wordTimestamps,\n  annotateDisabled: state.annotateDisabled\n});\nconst mapDispatchToProps = {\n  setLineText\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(LineText);","map":{"version":3,"names":["React","useRef","PropTypes","connect","Input","Tooltip","notification","FaRobot","setLineText","translate","tagType","shortText","isAnnotationReadonly","TagIcon","StandaloneTagIcon","store","containsRTLLanguage","config","top","LineText","props","textareaRef","text","lineIndex","handleTextChange","value","videoIndex","segmentIndex","handleTagClick","group","tag","toolMode","annotateDisabled","domTextArea","current","resizableTextArea","textArea","txt","before","substring","selectionStart","selected","selectionEnd","after","newTxt","newSelection","length","type","standalone","_tag$text","_tag$prefix","_tag$suffix","prefix","suffix","focus","setSelectionRange","handleTagShortcut","e","ctrlKey","shiftKey","key","preventDefault","tagGroup","forEach","tags","_tag$shortcut","toUpperCase","shortcut","namespace","getCurrentVideoUrl","_props$videos$props$c","videos","currentVideo","url","increaseCallHist","duration","currentVideoIndex","count","getStorage","setStorage","cleanExpiredStorage","isCallLimitExceeded","limit","wavesurfers","wavesurfer","getDuration","handleAutoTranscribe","transcribed","hasWordTimestamps","transcribeWithWordTimestamps","autoTranscription","autoTranscriptionLanguage","error","message","transcribe","console","log","_props$wordTimestamps","_props$wordTimestamps2","wordTimestamps","words","pause","region","segmentSelected","start","end","i","w","push","word","join","separator","trim","originalBuffer","backend","buffer","emptySegment","ac","createBuffer","numberOfChannels","sampleRate","chanData","getChannelData","emptySegmentData","Math","floor","min","mid_data","subarray","set","blob","bufferToWave","formData","FormData","append","jobId","autoTranscriptionEndpoint","info","parent","window","location","href","startsWith","fetch","credentials","method","body","then","response","json","result","code","data","success","warn","catch","array_buffer","offset","len","numOfChan","ArrayBuffer","view","DataView","channels","sample","pos","setUint32","setUint16","max","setInt16","Blob","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","TextArea","ref","autoSize","minRows","onChange","target","autoComplete","disabled","onFocus","disableLongAudioHotKeys","onBlur","onKeyDown","dir","map","name","title","viewBox","idx","overlayClassName","propTypes","func","string","number","mapStateToProps","state","mapDispatchToProps"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/SegmentDetail/LineText/LineText.js"],"sourcesContent":["import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport './LineText.scss';\nimport { Input, Tooltip, notification } from 'antd';\nimport { FaRobot } from 'react-icons/fa';\nimport { setLineText } from '../../../redux/action';\nimport { translate, tagType, shortText } from '../../../constants';\nimport { isAnnotationReadonly } from '../../../../../utils/tool-mode';\nimport TagIcon from '../../common/Icons/TagIcon';\nimport StandaloneTagIcon from '../../common/Icons/StandaloneTagIcon';\nimport { store, containsRTLLanguage } from '../../../../../utils';\n\nnotification.config({ top: 60 });\n\nconst LineText = (props) => {\n  const textareaRef = useRef();\n  const { text, lineIndex } = props;\n  const handleTextChange = (value) => {\n    props.setLineText({\n      text: value,\n      videoIndex: null,\n      segmentIndex: null,\n      lineIndex,\n    });\n  };\n\n  const handleTagClick = (group, tag) => {\n    if (isAnnotationReadonly(props.toolMode) || props.annotateDisabled) {\n      return;\n    }\n    const domTextArea = textareaRef.current.resizableTextArea.textArea;\n    const txt = domTextArea.value;\n    const before = txt.substring(0, domTextArea.selectionStart);\n    const selected = txt.substring(domTextArea.selectionStart, domTextArea.selectionEnd);\n    const after = txt.substring(domTextArea.selectionEnd);\n    let newTxt = domTextArea.value;\n    let newSelection = before?.length;\n    if (group.type === tagType.standalone) {\n      newSelection += tag.text?.length;\n      newTxt = `${before}${tag.text}${after}`;\n    } else if (group.type === tagType.tag) {\n      newSelection += tag.prefix?.length + selected?.length + (selected.length === 0 ? 0 : tag.suffix?.length);\n      newTxt = `${before}${tag.prefix}${selected}${tag.suffix}${after}`;\n    }\n    domTextArea.value = newTxt;\n    handleTextChange(newTxt);\n    domTextArea.focus();\n    domTextArea.setSelectionRange(newSelection, newSelection);\n  };\n\n  const handleTagShortcut = (e) => {\n    if (e.ctrlKey && e.shiftKey && e.key) {\n      e.preventDefault();\n      props.tagGroup.forEach((group) => {\n        group.tags.forEach((tag) => {\n          if (e.key.toUpperCase() === tag.shortcut?.toUpperCase()) {\n            handleTagClick(group, tag);\n          }\n        });\n      });\n    }\n  };\n\n  const namespace = 'audio-transcription-hist';\n\n  const getCurrentVideoUrl = () => props.videos[props.currentVideo]?.url;\n\n  const increaseCallHist = (duration) => {\n    try {\n      const currentVideoIndex = getCurrentVideoUrl();\n      const count = store.getStorage(namespace, currentVideoIndex) || 0;\n      store.setStorage(namespace, currentVideoIndex, count + duration);\n      store.cleanExpiredStorage(namespace);\n    } catch (e) {\n      // do nothing\n    }\n  };\n\n  const isCallLimitExceeded = () => {\n    try {\n      const currentVideoIndex = getCurrentVideoUrl();\n      const limit = props.wavesurfers.current.wavesurfer.getDuration() * 1.1;\n      if (currentVideoIndex) {\n        const count = store.getStorage(namespace, currentVideoIndex) || 0;\n        return count > limit;\n      }\n    } catch (e) {\n      // do nothing\n    }\n    return false;\n  };\n\n  const handleAutoTranscribe = () => {\n    try {\n      let transcribed = false;\n      if (hasWordTimestamps()) {\n        transcribed = transcribeWithWordTimestamps();\n      }\n      if (!transcribed && props.autoTranscription && props.autoTranscriptionLanguage) {\n        if (isCallLimitExceeded()) {\n          notification.error({ message: translate('AUTO_TRANSCRIBE_EXCEEDS_LIMIT') });\n        } else {\n          transcribe();\n        }\n      }\n    } catch (e) {\n      console.log(e);\n      notification.error({ message: `${translate('AUTO_TRANSCRIBE_FAILURE')} error: ${e}` });\n    }\n  };\n\n  const hasWordTimestamps = () => props.wordTimestamps[props.currentVideo]?.words?.length > 0;\n\n  const transcribeWithWordTimestamps = () => {\n    const wavesurfer = props.wavesurfers.current.wavesurfer;\n    wavesurfer.pause();\n    const region = props.wavesurfers.current.segmentSelected;\n    if (!region) {\n      notification.error({ message: translate('AUTO_TRANSCRIBE_NOT_SELECTED') });\n      return;\n    }\n    const start = region.start;\n    const end = region.end;\n    const wordTimestamps = props.wordTimestamps[props.currentVideo];\n    const words = [];\n    for (let i = 0; i < wordTimestamps.words.length; i += 1) {\n      const w = wordTimestamps.words[i];\n      if ((w.start >= start && w.end <= end) || (w.start <= start && w.end >= start) || (w.start <= end && w.end >= end)) {\n        words.push(w.word);\n      }\n      if (w.end > end) {\n        break;\n      }\n    }\n    const text = words.join(wordTimestamps.separator);\n    if (text?.trim()) {\n      handleTextChange(text);\n      return true;\n    }\n    return false;\n  };\n\n  const transcribe = () => {\n    const wavesurfer = props.wavesurfers.current.wavesurfer;\n    wavesurfer.pause();\n    const region = props.wavesurfers.current.segmentSelected;\n    if (!region) {\n      notification.error({ message: translate('AUTO_TRANSCRIBE_NOT_SELECTED') });\n      return;\n    }\n    const duration = region.end - region.start;\n    if (duration > 100) {\n      notification.error({ message: translate('AUTO_TRANSCRIBE_TOO_LONG') });\n      return;\n    }\n    const originalBuffer = wavesurfer.backend.buffer;\n    const emptySegment = wavesurfer.backend.ac.createBuffer(\n      originalBuffer.numberOfChannels,\n      duration * originalBuffer.sampleRate,\n      originalBuffer.sampleRate,\n    );\n\n    try {\n      for (let i = 0; i < originalBuffer.numberOfChannels; i += 1) {\n        const chanData = originalBuffer.getChannelData(i);\n        const emptySegmentData = emptySegment.getChannelData(i);\n        const start = Math.floor(region.start * originalBuffer.sampleRate);\n        const end = Math.min(start + emptySegmentData.length, chanData.length);\n        // region.start * originalBuffer.sampleRate, region.end * originalBuffer.sampleRate\n        const mid_data = chanData.subarray(start, end);\n        // console.log(mid_data.length, emptySegmentData.length);\n        emptySegmentData.set(mid_data);\n      }\n    } catch (e) {\n      console.log(e);\n      return;\n    }\n\n    const blob = bufferToWave(emptySegment, 0, emptySegment.length);\n    const formData = new FormData();\n    formData.append('file', blob);\n    formData.append('job_id', props.jobId);\n    formData.append('language', props.autoTranscriptionLanguage);\n    formData.append('duration', `${duration}`);\n    formData.append('endpoint', props.autoTranscriptionEndpoint);\n\n    notification.info({ message: translate('AUTO_TRANSCRIBE_START') });\n    // TODO: temp solution\n    let url = 'http://localhost:5000';\n    const parent = window.location.href;\n    if (parent.startsWith('http://tools.devk.appen.com.cn')) {\n      url = 'http://request-proxy.devk.appen.com.cn';\n    } else if (parent.startsWith('http://tools.stg.appen.com.cn')) {\n      url = 'http://request-proxy.stg.appen.com.cn';\n    } else if (parent.startsWith('http://tools.appen.com.cn')\n        || parent.startsWith('https://tools.appen.com.cn')) {\n      url = 'https://request-proxy.appen.com.cn';\n    }\n\n    fetch(`${url}/contributor_proxy/v1/lidar/speech/transcribe`, {\n      credentials: 'include',\n      method: 'POST',\n      body: formData\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        console.log('Success:', result);\n        if (result.code === 0) {\n          handleTextChange(result.data);\n          notification.success({ message: translate('AUTO_TRANSCRIBE_SUCCESS') });\n        } else if (result.code === -1) {\n          notification.warn({ message: translate('AUTO_TRANSCRIBE_NO_MATCH') });\n        } else {\n          notification.warn({ message: `${translate('AUTO_TRANSCRIBE_FAILURE')} message=${result.message}` });\n        }\n        increaseCallHist(duration);\n      })\n      .catch((error) => {\n        console.error('Error:', error);\n        notification.error({ message: translate('AUTO_TRANSCRIBE_FAILURE') });\n      });\n  };\n\n  const bufferToWave = (array_buffer, offset, len) => {\n    const numOfChan = array_buffer.numberOfChannels;\n    const length = len * numOfChan * 2 + 44;\n    const buffer = new ArrayBuffer(length);\n    const view = new DataView(buffer);\n    const channels = []; let i; let sample;\n    let pos = 0;\n\n    // write WAVE header\n    setUint32(0x46464952); // \"RIFF\"\n    setUint32(length - 8); // file length - 8\n    setUint32(0x45564157); // \"WAVE\"\n\n    setUint32(0x20746d66); // \"fmt \" chunk\n    setUint32(16); // length = 16\n    setUint16(1); // PCM (uncompressed)\n    setUint16(numOfChan);\n    setUint32(array_buffer.sampleRate);\n    setUint32(array_buffer.sampleRate * 2 * numOfChan); // avg. bytes/sec\n    setUint16(numOfChan * 2); // block-align\n    setUint16(16); // 16-bit (hardcoded in this demo)\n\n    setUint32(0x61746164); // \"data\" - chunk\n    setUint32(length - pos - 4); // chunk length\n\n    // write interleaved data\n    for (i = 0; i < array_buffer.numberOfChannels; i += 1) { channels.push(array_buffer.getChannelData(i)); }\n\n    while (pos < length) {\n      for (i = 0; i < numOfChan; i += 1) { // interleave channels\n        sample = Math.max(-1, Math.min(1, channels[i][offset])); // clamp\n        sample = (0.5 + sample < 0 ? sample * 32768 : sample * 32767) | 0; // scale to 16-bit signed int\n        view.setInt16(pos, sample, true); // update data chunk\n        pos += 2;\n      }\n      offset += 1; // next source sample\n    }\n\n    // create Blob\n    return new Blob([buffer], { type: 'audio/mpeg' });\n\n    function setUint16(data) {\n      view.setUint16(pos, data, true);\n      pos += 2;\n    }\n\n    function setUint32(data) {\n      view.setUint32(pos, data, true);\n      pos += 4;\n    }\n  };\n\n  return (\n    <div className=\"line-text-container\">\n      <div className=\"line-text-head\">\n        <div className=\"line-text-content-title\">{`${translate('content')}:`}</div>\n        {\n          (hasWordTimestamps() || (props.autoTranscription && props.autoTranscriptionLanguage && !isAnnotationReadonly(props.toolMode) && !props.annotateDisabled)) && (\n            <button\n              className=\"line-text-auto-transcribe\"\n              onClick={(e) => handleAutoTranscribe()}\n            >\n              <FaRobot size={20} />\n            </button>\n          )\n        }\n      </div>\n      <Input.TextArea\n        ref={textareaRef}\n        className=\"line-text\"\n        value={text}\n        autoSize={{ minRows: 6 }}\n        onChange={(e) => handleTextChange(e.target.value)}\n        autoComplete=\"off\"\n        disabled={isAnnotationReadonly(props.toolMode) || props.annotateDisabled}\n        onFocus={() => { window.disableLongAudioHotKeys = true; }}\n        onBlur={() => { window.disableLongAudioHotKeys = false; }}\n        onKeyDown={(e) => { handleTagShortcut(e); }}\n        dir={containsRTLLanguage(text) ? 'rtl' : 'ltr'}\n      />\n      <div>\n        {\n          props.tagGroup.length > 0 && (\n            <div className=\"tags-group-shortcut\">\n              {translate('TAG_SHORTCUT')}\n              : ctrl+shift+[key]\n            </div>\n          )\n        }\n        {\n          props.tagGroup.map((group) => (\n            <div key={`tags-group-${group.name}`} className=\"tags-group\">\n              <Tooltip\n                title={group.name}\n              >\n                <div className=\"tags-group-tag-icon\">\n                  {\n                    group.type === tagType.tag && <TagIcon size={16} viewBox=\"0 0 16 16\" />\n                  }\n                  {\n                    group.type === tagType.standalone && <StandaloneTagIcon size={16} viewBox=\"0 0 16 16\" />\n                  }\n                </div>\n              </Tooltip>\n              <div className=\"tags-group-tags\">\n                {\n                group.tags.map((tag, idx) => (\n                  <Tooltip\n                    overlayClassName=\"tooltip\"\n                    key={`tags-group-tag-${group.name}-${tag.name}-${idx}`}\n                    title={`${translate('TAG')}: ${tag.prefix ? tag.prefix : ''}${tag.suffix ? tag.suffix : ''}${tag.text ? tag.text : ''} ${tag.shortcut ? `${translate('TAG_SHORTCUT')}: ctrl+shift+${tag.shortcut}` : ''}`}\n                  >\n                    <span\n                      className={`tags-group-tag tags-group-tag-${group.type} tags-group-tag-${isAnnotationReadonly(props.toolMode) || props.annotateDisabled ? 'disabled' : 'enabled'}`}\n                      key={`tags-group-tag-${group.name}-${tag.name}-${idx}`}\n                      onClick={() => handleTagClick(group, tag)}\n                    >\n                      {`${shortText(tag.name, 50)}${tag.shortcut ? ` [${tag.shortcut}]` : ''}`}\n                    </span>\n                  </Tooltip>\n                ))\n              }\n              </div>\n            </div>\n          ))\n        }\n      </div>\n    </div>\n  );\n};\n\nLineText.propTypes = {\n  setLineText: PropTypes.func,\n  text: PropTypes.string,\n  lineIndex: PropTypes.number,\n};\nconst mapStateToProps = (state) => ({\n  toolMode: state.toolMode,\n  tagGroup: state.tagGroup,\n  wavesurfers: state.wavesurfers,\n  autoTranscription: state.autoTranscription,\n  autoTranscriptionLanguage: state.autoTranscriptionLanguage,\n  autoTranscriptionEndpoint: state.autoTranscriptionEndpoint,\n  jobId: state.jobId,\n  videos: state.videos,\n  currentVideo: state.currentVideo,\n  wordTimestamps: state.wordTimestamps,\n  annotateDisabled: state.annotateDisabled,\n});\nconst mapDispatchToProps = {\n  setLineText,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(LineText);\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAO,iBAAiB;AACxB,SAASC,KAAK,EAAEC,OAAO,EAAEC,YAAY,QAAQ,MAAM;AACnD,SAASC,OAAO,QAAQ,gBAAgB;AACxC,SAASC,WAAW,QAAQ,uBAAuB;AACnD,SAASC,SAAS,EAAEC,OAAO,EAAEC,SAAS,QAAQ,oBAAoB;AAClE,SAASC,oBAAoB,QAAQ,gCAAgC;AACrE,OAAOC,OAAO,MAAM,4BAA4B;AAChD,OAAOC,iBAAiB,MAAM,sCAAsC;AACpE,SAASC,KAAK,EAAEC,mBAAmB,QAAQ,sBAAsB;AAEjEV,YAAY,CAACW,MAAM,CAAC;EAAEC,GAAG,EAAE;AAAG,CAAC,CAAC;AAEhC,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAC1B,MAAMC,WAAW,GAAGpB,MAAM,CAAC,CAAC;EAC5B,MAAM;IAAEqB,IAAI;IAAEC;EAAU,CAAC,GAAGH,KAAK;EACjC,MAAMI,gBAAgB,GAAIC,KAAK,IAAK;IAClCL,KAAK,CAACZ,WAAW,CAAC;MAChBc,IAAI,EAAEG,KAAK;MACXC,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBJ;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMK,cAAc,GAAGA,CAACC,KAAK,EAAEC,GAAG,KAAK;IACrC,IAAIlB,oBAAoB,CAACQ,KAAK,CAACW,QAAQ,CAAC,IAAIX,KAAK,CAACY,gBAAgB,EAAE;MAClE;IACF;IACA,MAAMC,WAAW,GAAGZ,WAAW,CAACa,OAAO,CAACC,iBAAiB,CAACC,QAAQ;IAClE,MAAMC,GAAG,GAAGJ,WAAW,CAACR,KAAK;IAC7B,MAAMa,MAAM,GAAGD,GAAG,CAACE,SAAS,CAAC,CAAC,EAAEN,WAAW,CAACO,cAAc,CAAC;IAC3D,MAAMC,QAAQ,GAAGJ,GAAG,CAACE,SAAS,CAACN,WAAW,CAACO,cAAc,EAAEP,WAAW,CAACS,YAAY,CAAC;IACpF,MAAMC,KAAK,GAAGN,GAAG,CAACE,SAAS,CAACN,WAAW,CAACS,YAAY,CAAC;IACrD,IAAIE,MAAM,GAAGX,WAAW,CAACR,KAAK;IAC9B,IAAIoB,YAAY,GAAGP,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEQ,MAAM;IACjC,IAAIjB,KAAK,CAACkB,IAAI,KAAKrC,OAAO,CAACsC,UAAU,EAAE;MAAA,IAAAC,SAAA;MACrCJ,YAAY,KAAAI,SAAA,GAAInB,GAAG,CAACR,IAAI,cAAA2B,SAAA,uBAARA,SAAA,CAAUH,MAAM;MAChCF,MAAM,GAAG,GAAGN,MAAM,GAAGR,GAAG,CAACR,IAAI,GAAGqB,KAAK,EAAE;IACzC,CAAC,MAAM,IAAId,KAAK,CAACkB,IAAI,KAAKrC,OAAO,CAACoB,GAAG,EAAE;MAAA,IAAAoB,WAAA,EAAAC,WAAA;MACrCN,YAAY,IAAI,EAAAK,WAAA,GAAApB,GAAG,CAACsB,MAAM,cAAAF,WAAA,uBAAVA,WAAA,CAAYJ,MAAM,KAAGL,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEK,MAAM,KAAIL,QAAQ,CAACK,MAAM,KAAK,CAAC,GAAG,CAAC,IAAAK,WAAA,GAAGrB,GAAG,CAACuB,MAAM,cAAAF,WAAA,uBAAVA,WAAA,CAAYL,MAAM,CAAC;MACxGF,MAAM,GAAG,GAAGN,MAAM,GAAGR,GAAG,CAACsB,MAAM,GAAGX,QAAQ,GAAGX,GAAG,CAACuB,MAAM,GAAGV,KAAK,EAAE;IACnE;IACAV,WAAW,CAACR,KAAK,GAAGmB,MAAM;IAC1BpB,gBAAgB,CAACoB,MAAM,CAAC;IACxBX,WAAW,CAACqB,KAAK,CAAC,CAAC;IACnBrB,WAAW,CAACsB,iBAAiB,CAACV,YAAY,EAAEA,YAAY,CAAC;EAC3D,CAAC;EAED,MAAMW,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,IAAIA,CAAC,CAACC,OAAO,IAAID,CAAC,CAACE,QAAQ,IAAIF,CAAC,CAACG,GAAG,EAAE;MACpCH,CAAC,CAACI,cAAc,CAAC,CAAC;MAClBzC,KAAK,CAAC0C,QAAQ,CAACC,OAAO,CAAElC,KAAK,IAAK;QAChCA,KAAK,CAACmC,IAAI,CAACD,OAAO,CAAEjC,GAAG,IAAK;UAAA,IAAAmC,aAAA;UAC1B,IAAIR,CAAC,CAACG,GAAG,CAACM,WAAW,CAAC,CAAC,OAAAD,aAAA,GAAKnC,GAAG,CAACqC,QAAQ,cAAAF,aAAA,uBAAZA,aAAA,CAAcC,WAAW,CAAC,CAAC,GAAE;YACvDtC,cAAc,CAACC,KAAK,EAAEC,GAAG,CAAC;UAC5B;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMsC,SAAS,GAAG,0BAA0B;EAE5C,MAAMC,kBAAkB,GAAGA,CAAA;IAAA,IAAAC,qBAAA;IAAA,QAAAA,qBAAA,GAAMlD,KAAK,CAACmD,MAAM,CAACnD,KAAK,CAACoD,YAAY,CAAC,cAAAF,qBAAA,uBAAhCA,qBAAA,CAAkCG,GAAG;EAAA;EAEtE,MAAMC,gBAAgB,GAAIC,QAAQ,IAAK;IACrC,IAAI;MACF,MAAMC,iBAAiB,GAAGP,kBAAkB,CAAC,CAAC;MAC9C,MAAMQ,KAAK,GAAG9D,KAAK,CAAC+D,UAAU,CAACV,SAAS,EAAEQ,iBAAiB,CAAC,IAAI,CAAC;MACjE7D,KAAK,CAACgE,UAAU,CAACX,SAAS,EAAEQ,iBAAiB,EAAEC,KAAK,GAAGF,QAAQ,CAAC;MAChE5D,KAAK,CAACiE,mBAAmB,CAACZ,SAAS,CAAC;IACtC,CAAC,CAAC,OAAOX,CAAC,EAAE;MACV;IAAA;EAEJ,CAAC;EAED,MAAMwB,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAI;MACF,MAAML,iBAAiB,GAAGP,kBAAkB,CAAC,CAAC;MAC9C,MAAMa,KAAK,GAAG9D,KAAK,CAAC+D,WAAW,CAACjD,OAAO,CAACkD,UAAU,CAACC,WAAW,CAAC,CAAC,GAAG,GAAG;MACtE,IAAIT,iBAAiB,EAAE;QACrB,MAAMC,KAAK,GAAG9D,KAAK,CAAC+D,UAAU,CAACV,SAAS,EAAEQ,iBAAiB,CAAC,IAAI,CAAC;QACjE,OAAOC,KAAK,GAAGK,KAAK;MACtB;IACF,CAAC,CAAC,OAAOzB,CAAC,EAAE;MACV;IAAA;IAEF,OAAO,KAAK;EACd,CAAC;EAED,MAAM6B,oBAAoB,GAAGA,CAAA,KAAM;IACjC,IAAI;MACF,IAAIC,WAAW,GAAG,KAAK;MACvB,IAAIC,iBAAiB,CAAC,CAAC,EAAE;QACvBD,WAAW,GAAGE,4BAA4B,CAAC,CAAC;MAC9C;MACA,IAAI,CAACF,WAAW,IAAInE,KAAK,CAACsE,iBAAiB,IAAItE,KAAK,CAACuE,yBAAyB,EAAE;QAC9E,IAAIV,mBAAmB,CAAC,CAAC,EAAE;UACzB3E,YAAY,CAACsF,KAAK,CAAC;YAAEC,OAAO,EAAEpF,SAAS,CAAC,+BAA+B;UAAE,CAAC,CAAC;QAC7E,CAAC,MAAM;UACLqF,UAAU,CAAC,CAAC;QACd;MACF;IACF,CAAC,CAAC,OAAOrC,CAAC,EAAE;MACVsC,OAAO,CAACC,GAAG,CAACvC,CAAC,CAAC;MACdnD,YAAY,CAACsF,KAAK,CAAC;QAAEC,OAAO,EAAE,GAAGpF,SAAS,CAAC,yBAAyB,CAAC,WAAWgD,CAAC;MAAG,CAAC,CAAC;IACxF;EACF,CAAC;EAED,MAAM+B,iBAAiB,GAAGA,CAAA;IAAA,IAAAS,qBAAA,EAAAC,sBAAA;IAAA,OAAM,EAAAD,qBAAA,GAAA7E,KAAK,CAAC+E,cAAc,CAAC/E,KAAK,CAACoD,YAAY,CAAC,cAAAyB,qBAAA,wBAAAC,sBAAA,GAAxCD,qBAAA,CAA0CG,KAAK,cAAAF,sBAAA,uBAA/CA,sBAAA,CAAiDpD,MAAM,IAAG,CAAC;EAAA;EAE3F,MAAM2C,4BAA4B,GAAGA,CAAA,KAAM;IACzC,MAAML,UAAU,GAAGhE,KAAK,CAAC+D,WAAW,CAACjD,OAAO,CAACkD,UAAU;IACvDA,UAAU,CAACiB,KAAK,CAAC,CAAC;IAClB,MAAMC,MAAM,GAAGlF,KAAK,CAAC+D,WAAW,CAACjD,OAAO,CAACqE,eAAe;IACxD,IAAI,CAACD,MAAM,EAAE;MACXhG,YAAY,CAACsF,KAAK,CAAC;QAAEC,OAAO,EAAEpF,SAAS,CAAC,8BAA8B;MAAE,CAAC,CAAC;MAC1E;IACF;IACA,MAAM+F,KAAK,GAAGF,MAAM,CAACE,KAAK;IAC1B,MAAMC,GAAG,GAAGH,MAAM,CAACG,GAAG;IACtB,MAAMN,cAAc,GAAG/E,KAAK,CAAC+E,cAAc,CAAC/E,KAAK,CAACoD,YAAY,CAAC;IAC/D,MAAM4B,KAAK,GAAG,EAAE;IAChB,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,cAAc,CAACC,KAAK,CAACtD,MAAM,EAAE4D,CAAC,IAAI,CAAC,EAAE;MACvD,MAAMC,CAAC,GAAGR,cAAc,CAACC,KAAK,CAACM,CAAC,CAAC;MACjC,IAAKC,CAAC,CAACH,KAAK,IAAIA,KAAK,IAAIG,CAAC,CAACF,GAAG,IAAIA,GAAG,IAAME,CAAC,CAACH,KAAK,IAAIA,KAAK,IAAIG,CAAC,CAACF,GAAG,IAAID,KAAM,IAAKG,CAAC,CAACH,KAAK,IAAIC,GAAG,IAAIE,CAAC,CAACF,GAAG,IAAIA,GAAI,EAAE;QAClHL,KAAK,CAACQ,IAAI,CAACD,CAAC,CAACE,IAAI,CAAC;MACpB;MACA,IAAIF,CAAC,CAACF,GAAG,GAAGA,GAAG,EAAE;QACf;MACF;IACF;IACA,MAAMnF,IAAI,GAAG8E,KAAK,CAACU,IAAI,CAACX,cAAc,CAACY,SAAS,CAAC;IACjD,IAAIzF,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE0F,IAAI,CAAC,CAAC,EAAE;MAChBxF,gBAAgB,CAACF,IAAI,CAAC;MACtB,OAAO,IAAI;IACb;IACA,OAAO,KAAK;EACd,CAAC;EAED,MAAMwE,UAAU,GAAGA,CAAA,KAAM;IACvB,MAAMV,UAAU,GAAGhE,KAAK,CAAC+D,WAAW,CAACjD,OAAO,CAACkD,UAAU;IACvDA,UAAU,CAACiB,KAAK,CAAC,CAAC;IAClB,MAAMC,MAAM,GAAGlF,KAAK,CAAC+D,WAAW,CAACjD,OAAO,CAACqE,eAAe;IACxD,IAAI,CAACD,MAAM,EAAE;MACXhG,YAAY,CAACsF,KAAK,CAAC;QAAEC,OAAO,EAAEpF,SAAS,CAAC,8BAA8B;MAAE,CAAC,CAAC;MAC1E;IACF;IACA,MAAMkE,QAAQ,GAAG2B,MAAM,CAACG,GAAG,GAAGH,MAAM,CAACE,KAAK;IAC1C,IAAI7B,QAAQ,GAAG,GAAG,EAAE;MAClBrE,YAAY,CAACsF,KAAK,CAAC;QAAEC,OAAO,EAAEpF,SAAS,CAAC,0BAA0B;MAAE,CAAC,CAAC;MACtE;IACF;IACA,MAAMwG,cAAc,GAAG7B,UAAU,CAAC8B,OAAO,CAACC,MAAM;IAChD,MAAMC,YAAY,GAAGhC,UAAU,CAAC8B,OAAO,CAACG,EAAE,CAACC,YAAY,CACrDL,cAAc,CAACM,gBAAgB,EAC/B5C,QAAQ,GAAGsC,cAAc,CAACO,UAAU,EACpCP,cAAc,CAACO,UACjB,CAAC;IAED,IAAI;MACF,KAAK,IAAId,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGO,cAAc,CAACM,gBAAgB,EAAEb,CAAC,IAAI,CAAC,EAAE;QAC3D,MAAMe,QAAQ,GAAGR,cAAc,CAACS,cAAc,CAAChB,CAAC,CAAC;QACjD,MAAMiB,gBAAgB,GAAGP,YAAY,CAACM,cAAc,CAAChB,CAAC,CAAC;QACvD,MAAMF,KAAK,GAAGoB,IAAI,CAACC,KAAK,CAACvB,MAAM,CAACE,KAAK,GAAGS,cAAc,CAACO,UAAU,CAAC;QAClE,MAAMf,GAAG,GAAGmB,IAAI,CAACE,GAAG,CAACtB,KAAK,GAAGmB,gBAAgB,CAAC7E,MAAM,EAAE2E,QAAQ,CAAC3E,MAAM,CAAC;QACtE;QACA,MAAMiF,QAAQ,GAAGN,QAAQ,CAACO,QAAQ,CAACxB,KAAK,EAAEC,GAAG,CAAC;QAC9C;QACAkB,gBAAgB,CAACM,GAAG,CAACF,QAAQ,CAAC;MAChC;IACF,CAAC,CAAC,OAAOtE,CAAC,EAAE;MACVsC,OAAO,CAACC,GAAG,CAACvC,CAAC,CAAC;MACd;IACF;IAEA,MAAMyE,IAAI,GAAGC,YAAY,CAACf,YAAY,EAAE,CAAC,EAAEA,YAAY,CAACtE,MAAM,CAAC;IAC/D,MAAMsF,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEJ,IAAI,CAAC;IAC7BE,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAElH,KAAK,CAACmH,KAAK,CAAC;IACtCH,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAElH,KAAK,CAACuE,yBAAyB,CAAC;IAC5DyC,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAE,GAAG3D,QAAQ,EAAE,CAAC;IAC1CyD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAElH,KAAK,CAACoH,yBAAyB,CAAC;IAE5DlI,YAAY,CAACmI,IAAI,CAAC;MAAE5C,OAAO,EAAEpF,SAAS,CAAC,uBAAuB;IAAE,CAAC,CAAC;IAClE;IACA,IAAIgE,GAAG,GAAG,uBAAuB;IACjC,MAAMiE,MAAM,GAAGC,MAAM,CAACC,QAAQ,CAACC,IAAI;IACnC,IAAIH,MAAM,CAACI,UAAU,CAAC,gCAAgC,CAAC,EAAE;MACvDrE,GAAG,GAAG,wCAAwC;IAChD,CAAC,MAAM,IAAIiE,MAAM,CAACI,UAAU,CAAC,+BAA+B,CAAC,EAAE;MAC7DrE,GAAG,GAAG,uCAAuC;IAC/C,CAAC,MAAM,IAAIiE,MAAM,CAACI,UAAU,CAAC,2BAA2B,CAAC,IAClDJ,MAAM,CAACI,UAAU,CAAC,4BAA4B,CAAC,EAAE;MACtDrE,GAAG,GAAG,oCAAoC;IAC5C;IAEAsE,KAAK,CAAC,GAAGtE,GAAG,+CAA+C,EAAE;MAC3DuE,WAAW,EAAE,SAAS;MACtBC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEd;IACR,CAAC,CAAC,CACCe,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,MAAM,IAAK;MAChBvD,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEsD,MAAM,CAAC;MAC/B,IAAIA,MAAM,CAACC,IAAI,KAAK,CAAC,EAAE;QACrB/H,gBAAgB,CAAC8H,MAAM,CAACE,IAAI,CAAC;QAC7BlJ,YAAY,CAACmJ,OAAO,CAAC;UAAE5D,OAAO,EAAEpF,SAAS,CAAC,yBAAyB;QAAE,CAAC,CAAC;MACzE,CAAC,MAAM,IAAI6I,MAAM,CAACC,IAAI,KAAK,CAAC,CAAC,EAAE;QAC7BjJ,YAAY,CAACoJ,IAAI,CAAC;UAAE7D,OAAO,EAAEpF,SAAS,CAAC,0BAA0B;QAAE,CAAC,CAAC;MACvE,CAAC,MAAM;QACLH,YAAY,CAACoJ,IAAI,CAAC;UAAE7D,OAAO,EAAE,GAAGpF,SAAS,CAAC,yBAAyB,CAAC,YAAY6I,MAAM,CAACzD,OAAO;QAAG,CAAC,CAAC;MACrG;MACAnB,gBAAgB,CAACC,QAAQ,CAAC;IAC5B,CAAC,CAAC,CACDgF,KAAK,CAAE/D,KAAK,IAAK;MAChBG,OAAO,CAACH,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BtF,YAAY,CAACsF,KAAK,CAAC;QAAEC,OAAO,EAAEpF,SAAS,CAAC,yBAAyB;MAAE,CAAC,CAAC;IACvE,CAAC,CAAC;EACN,CAAC;EAED,MAAM0H,YAAY,GAAGA,CAACyB,YAAY,EAAEC,MAAM,EAAEC,GAAG,KAAK;IAClD,MAAMC,SAAS,GAAGH,YAAY,CAACrC,gBAAgB;IAC/C,MAAMzE,MAAM,GAAGgH,GAAG,GAAGC,SAAS,GAAG,CAAC,GAAG,EAAE;IACvC,MAAM5C,MAAM,GAAG,IAAI6C,WAAW,CAAClH,MAAM,CAAC;IACtC,MAAMmH,IAAI,GAAG,IAAIC,QAAQ,CAAC/C,MAAM,CAAC;IACjC,MAAMgD,QAAQ,GAAG,EAAE;IAAE,IAAIzD,CAAC;IAAE,IAAI0D,MAAM;IACtC,IAAIC,GAAG,GAAG,CAAC;;IAEX;IACAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;IACvBA,SAAS,CAACxH,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;IACvBwH,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;;IAEvBA,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;IACvBA,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;IACfC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IACdA,SAAS,CAACR,SAAS,CAAC;IACpBO,SAAS,CAACV,YAAY,CAACpC,UAAU,CAAC;IAClC8C,SAAS,CAACV,YAAY,CAACpC,UAAU,GAAG,CAAC,GAAGuC,SAAS,CAAC,CAAC,CAAC;IACpDQ,SAAS,CAACR,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1BQ,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEfD,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;IACvBA,SAAS,CAACxH,MAAM,GAAGuH,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;;IAE7B;IACA,KAAK3D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkD,YAAY,CAACrC,gBAAgB,EAAEb,CAAC,IAAI,CAAC,EAAE;MAAEyD,QAAQ,CAACvD,IAAI,CAACgD,YAAY,CAAClC,cAAc,CAAChB,CAAC,CAAC,CAAC;IAAE;IAExG,OAAO2D,GAAG,GAAGvH,MAAM,EAAE;MACnB,KAAK4D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqD,SAAS,EAAErD,CAAC,IAAI,CAAC,EAAE;QAAE;QACnC0D,MAAM,GAAGxC,IAAI,CAAC4C,GAAG,CAAC,CAAC,CAAC,EAAE5C,IAAI,CAACE,GAAG,CAAC,CAAC,EAAEqC,QAAQ,CAACzD,CAAC,CAAC,CAACmD,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QACzDO,MAAM,GAAG,CAAC,GAAG,GAAGA,MAAM,GAAG,CAAC,GAAGA,MAAM,GAAG,KAAK,GAAGA,MAAM,GAAG,KAAK,IAAI,CAAC,CAAC,CAAC;QACnEH,IAAI,CAACQ,QAAQ,CAACJ,GAAG,EAAED,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC;QAClCC,GAAG,IAAI,CAAC;MACV;MACAR,MAAM,IAAI,CAAC,CAAC,CAAC;IACf;;IAEA;IACA,OAAO,IAAIa,IAAI,CAAC,CAACvD,MAAM,CAAC,EAAE;MAAEpE,IAAI,EAAE;IAAa,CAAC,CAAC;IAEjD,SAASwH,SAASA,CAACf,IAAI,EAAE;MACvBS,IAAI,CAACM,SAAS,CAACF,GAAG,EAAEb,IAAI,EAAE,IAAI,CAAC;MAC/Ba,GAAG,IAAI,CAAC;IACV;IAEA,SAASC,SAASA,CAACd,IAAI,EAAE;MACvBS,IAAI,CAACK,SAAS,CAACD,GAAG,EAAEb,IAAI,EAAE,IAAI,CAAC;MAC/Ba,GAAG,IAAI,CAAC;IACV;EACF,CAAC;EAED,oBACErK,KAAA,CAAA2K,aAAA;IAAKC,SAAS,EAAC,qBAAqB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClClL,KAAA,CAAA2K,aAAA;IAAKC,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC7BlL,KAAA,CAAA2K,aAAA;IAAKC,SAAS,EAAC,yBAAyB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAE,GAAGzK,SAAS,CAAC,SAAS,CAAC,GAAS,CAAC,EAEzE,CAAC+E,iBAAiB,CAAC,CAAC,IAAKpE,KAAK,CAACsE,iBAAiB,IAAItE,KAAK,CAACuE,yBAAyB,IAAI,CAAC/E,oBAAoB,CAACQ,KAAK,CAACW,QAAQ,CAAC,IAAI,CAACX,KAAK,CAACY,gBAAiB,kBACtJhC,KAAA,CAAA2K,aAAA;IACEC,SAAS,EAAC,2BAA2B;IACrCO,OAAO,EAAG1H,CAAC,IAAK6B,oBAAoB,CAAC,CAAE;IAAAuF,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEvClL,KAAA,CAAA2K,aAAA,CAACpK,OAAO;IAAC6K,IAAI,EAAE,EAAG;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACd,CAGT,CAAC,eACNlL,KAAA,CAAA2K,aAAA,CAACvK,KAAK,CAACiL,QAAQ;IACbC,GAAG,EAAEjK,WAAY;IACjBuJ,SAAS,EAAC,WAAW;IACrBnJ,KAAK,EAAEH,IAAK;IACZiK,QAAQ,EAAE;MAAEC,OAAO,EAAE;IAAE,CAAE;IACzBC,QAAQ,EAAGhI,CAAC,IAAKjC,gBAAgB,CAACiC,CAAC,CAACiI,MAAM,CAACjK,KAAK,CAAE;IAClDkK,YAAY,EAAC,KAAK;IAClBC,QAAQ,EAAEhL,oBAAoB,CAACQ,KAAK,CAACW,QAAQ,CAAC,IAAIX,KAAK,CAACY,gBAAiB;IACzE6J,OAAO,EAAEA,CAAA,KAAM;MAAElD,MAAM,CAACmD,uBAAuB,GAAG,IAAI;IAAE,CAAE;IAC1DC,MAAM,EAAEA,CAAA,KAAM;MAAEpD,MAAM,CAACmD,uBAAuB,GAAG,KAAK;IAAE,CAAE;IAC1DE,SAAS,EAAGvI,CAAC,IAAK;MAAED,iBAAiB,CAACC,CAAC,CAAC;IAAE,CAAE;IAC5CwI,GAAG,EAAEjL,mBAAmB,CAACM,IAAI,CAAC,GAAG,KAAK,GAAG,KAAM;IAAAuJ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAChD,CAAC,eACFlL,KAAA,CAAA2K,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEI9J,KAAK,CAAC0C,QAAQ,CAAChB,MAAM,GAAG,CAAC,iBACvB9C,KAAA,CAAA2K,aAAA;IAAKC,SAAS,EAAC,qBAAqB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACjCzK,SAAS,CAAC,cAAc,CAAC,EAAC,oBAExB,CACN,EAGDW,KAAK,CAAC0C,QAAQ,CAACoI,GAAG,CAAErK,KAAK,iBACvB7B,KAAA,CAAA2K,aAAA;IAAK/G,GAAG,EAAE,cAAc/B,KAAK,CAACsK,IAAI,EAAG;IAACvB,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1DlL,KAAA,CAAA2K,aAAA,CAACtK,OAAO;IACN+L,KAAK,EAAEvK,KAAK,CAACsK,IAAK;IAAAtB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAElBlL,KAAA,CAAA2K,aAAA;IAAKC,SAAS,EAAC,qBAAqB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEhCrJ,KAAK,CAACkB,IAAI,KAAKrC,OAAO,CAACoB,GAAG,iBAAI9B,KAAA,CAAA2K,aAAA,CAAC9J,OAAO;IAACuK,IAAI,EAAE,EAAG;IAACiB,OAAO,EAAC,WAAW;IAAAxB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,EAGvErJ,KAAK,CAACkB,IAAI,KAAKrC,OAAO,CAACsC,UAAU,iBAAIhD,KAAA,CAAA2K,aAAA,CAAC7J,iBAAiB;IAACsK,IAAI,EAAE,EAAG;IAACiB,OAAO,EAAC,WAAW;IAAAxB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAEtF,CACE,CAAC,eACVlL,KAAA,CAAA2K,aAAA;IAAKC,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAE9BrJ,KAAK,CAACmC,IAAI,CAACkI,GAAG,CAAC,CAACpK,GAAG,EAAEwK,GAAG,kBACtBtM,KAAA,CAAA2K,aAAA,CAACtK,OAAO;IACNkM,gBAAgB,EAAC,SAAS;IAC1B3I,GAAG,EAAE,kBAAkB/B,KAAK,CAACsK,IAAI,IAAIrK,GAAG,CAACqK,IAAI,IAAIG,GAAG,EAAG;IACvDF,KAAK,EAAE,GAAG3L,SAAS,CAAC,KAAK,CAAC,KAAKqB,GAAG,CAACsB,MAAM,GAAGtB,GAAG,CAACsB,MAAM,GAAG,EAAE,GAAGtB,GAAG,CAACuB,MAAM,GAAGvB,GAAG,CAACuB,MAAM,GAAG,EAAE,GAAGvB,GAAG,CAACR,IAAI,GAAGQ,GAAG,CAACR,IAAI,GAAG,EAAE,IAAIQ,GAAG,CAACqC,QAAQ,GAAG,GAAG1D,SAAS,CAAC,cAAc,CAAC,gBAAgBqB,GAAG,CAACqC,QAAQ,EAAE,GAAG,EAAE,EAAG;IAAA0G,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAE1MlL,KAAA,CAAA2K,aAAA;IACEC,SAAS,EAAE,iCAAiC/I,KAAK,CAACkB,IAAI,mBAAmBnC,oBAAoB,CAACQ,KAAK,CAACW,QAAQ,CAAC,IAAIX,KAAK,CAACY,gBAAgB,GAAG,UAAU,GAAG,SAAS,EAAG;IACnK4B,GAAG,EAAE,kBAAkB/B,KAAK,CAACsK,IAAI,IAAIrK,GAAG,CAACqK,IAAI,IAAIG,GAAG,EAAG;IACvDnB,OAAO,EAAEA,CAAA,KAAMvJ,cAAc,CAACC,KAAK,EAAEC,GAAG,CAAE;IAAA+I,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEzC,GAAGvK,SAAS,CAACmB,GAAG,CAACqK,IAAI,EAAE,EAAE,CAAC,GAAGrK,GAAG,CAACqC,QAAQ,GAAG,KAAKrC,GAAG,CAACqC,QAAQ,GAAG,GAAG,EAAE,EAClE,CACC,CACV,CAEE,CACF,CACN,CAEA,CACF,CAAC;AAEV,CAAC;AAEDhD,QAAQ,CAACqL,SAAS,GAAG;EACnBhM,WAAW,EAAEN,SAAS,CAACuM,IAAI;EAC3BnL,IAAI,EAAEpB,SAAS,CAACwM,MAAM;EACtBnL,SAAS,EAAErB,SAAS,CAACyM;AACvB,CAAC;AACD,MAAMC,eAAe,GAAIC,KAAK,KAAM;EAClC9K,QAAQ,EAAE8K,KAAK,CAAC9K,QAAQ;EACxB+B,QAAQ,EAAE+I,KAAK,CAAC/I,QAAQ;EACxBqB,WAAW,EAAE0H,KAAK,CAAC1H,WAAW;EAC9BO,iBAAiB,EAAEmH,KAAK,CAACnH,iBAAiB;EAC1CC,yBAAyB,EAAEkH,KAAK,CAAClH,yBAAyB;EAC1D6C,yBAAyB,EAAEqE,KAAK,CAACrE,yBAAyB;EAC1DD,KAAK,EAAEsE,KAAK,CAACtE,KAAK;EAClBhE,MAAM,EAAEsI,KAAK,CAACtI,MAAM;EACpBC,YAAY,EAAEqI,KAAK,CAACrI,YAAY;EAChC2B,cAAc,EAAE0G,KAAK,CAAC1G,cAAc;EACpCnE,gBAAgB,EAAE6K,KAAK,CAAC7K;AAC1B,CAAC,CAAC;AACF,MAAM8K,kBAAkB,GAAG;EACzBtM;AACF,CAAC;AACD,eAAeL,OAAO,CAACyM,eAAe,EAAEE,kBAAkB,CAAC,CAAC3L,QAAQ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}