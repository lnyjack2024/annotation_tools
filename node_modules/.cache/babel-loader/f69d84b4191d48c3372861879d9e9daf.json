{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/TaskNavigation/TaskNavigation.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport screenfull from 'screenfull';\nimport { connect } from 'react-redux';\nimport AppenLogo from '../../../common/AppenLogo';\nimport TaskSelect from './TaskSelect/TaskSelect';\nimport Guider from './Guider/Guider';\nimport Measurements from './Measurements/Measurements';\nimport Preferences from '../Preferences';\nimport { ClearAll, Save, Question, Fullscreen } from '../../../common/icons';\nimport './TaskNavigation.scss';\nimport { showHideGuider } from '../../redux/action';\nimport { translate, SegmentMode } from '../../constants';\nimport version from '../../version';\nimport { isPreview, isAnnotationReadonly } from '../../../../utils/tool-mode';\nimport { isAppenCloud } from '../../../../utils';\nconst TaskNavigation = props => {\n  const {\n    toolMode,\n    annotateDisabled,\n    results,\n    currentVideo,\n    segmentMode\n  } = props;\n  const [enableClear, setEnableClear] = useState(false);\n  useEffect(() => {\n    const readonly = isAnnotationReadonly(toolMode) || annotateDisabled;\n    const segments = results[currentVideo];\n    const len = segments.length;\n    let isAnnotated = false;\n    if (len === 1) {\n      const {\n        attributes,\n        content = [{\n          role: 'none',\n          text: '',\n          attributes: {}\n        }]\n      } = segments[0];\n      isAnnotated = Object.keys(attributes || {}).length > 0 || content[0].role !== 'none' || Object.keys(content[0].attributes || {}).length > 0;\n    }\n    setEnableClear(!readonly && (segmentMode === SegmentMode.individual && len > 0 || segmentMode === SegmentMode.continuous && (len > 1 || isAnnotated)));\n  }, [results, currentVideo]);\n  const handleButtonClick = (e, type) => {\n    switch (type) {\n      case 'fullscreen':\n        if (screenfull.isEnabled) {\n          screenfull.toggle();\n        }\n        break;\n      case 'guider':\n        props.showHideGuider();\n        break;\n      case 'save':\n        props.onSave();\n        break;\n      case 'clearAll':\n        {\n          if (enableClear) {\n            props.clearAll();\n          }\n          break;\n        }\n      default:\n        break;\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-navigation-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, isAppenCloud() && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"appen-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppenLogo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"appen-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Audio Segmentation Tool\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"version\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, translate('VERSION_LABEL'), ' ', version)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-navigation-button-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Measurements, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: !enableClear,\n    className: \"clear-all-button\",\n    onClick: e => handleButtonClick(e, 'clearAll'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ClearAll, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"guider-button\",\n    onClick: e => handleButtonClick(e, 'guider'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Question, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"fullscreen-button\",\n    onClick: e => handleButtonClick(e, 'fullscreen'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Fullscreen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Preferences, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"save-button\",\n    disabled: isPreview(toolMode),\n    onClick: e => handleButtonClick(e, 'save'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Save, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Guider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TaskSelect, {\n    className: \"task-select-wrapper\",\n    setCurrentSegment: props.setCurrentSegment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }));\n};\nconst mapStateToProps = state => ({\n  isGuiding: state.isGuiding,\n  toolMode: state.toolMode,\n  segmentMode: state.segmentMode,\n  currentVideo: state.currentVideo,\n  results: state.results,\n  annotateDisabled: state.annotateDisabled\n});\nconst mapDispatchToProps = {\n  showHideGuider\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskNavigation);","map":{"version":3,"names":["React","useEffect","useState","screenfull","connect","AppenLogo","TaskSelect","Guider","Measurements","Preferences","ClearAll","Save","Question","Fullscreen","showHideGuider","translate","SegmentMode","version","isPreview","isAnnotationReadonly","isAppenCloud","TaskNavigation","props","toolMode","annotateDisabled","results","currentVideo","segmentMode","enableClear","setEnableClear","readonly","segments","len","length","isAnnotated","attributes","content","role","text","Object","keys","individual","continuous","handleButtonClick","e","type","isEnabled","toggle","onSave","clearAll","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","disabled","onClick","setCurrentSegment","mapStateToProps","state","isGuiding","mapDispatchToProps"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/TaskNavigation/TaskNavigation.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport screenfull from 'screenfull';\nimport { connect } from 'react-redux';\nimport AppenLogo from '../../../common/AppenLogo';\nimport TaskSelect from './TaskSelect/TaskSelect';\nimport Guider from './Guider/Guider';\nimport Measurements from './Measurements/Measurements';\nimport Preferences from '../Preferences';\nimport { ClearAll, Save, Question, Fullscreen } from '../../../common/icons';\nimport './TaskNavigation.scss';\nimport { showHideGuider } from '../../redux/action';\nimport { translate, SegmentMode } from '../../constants';\nimport version from '../../version';\nimport { isPreview, isAnnotationReadonly } from '../../../../utils/tool-mode';\nimport { isAppenCloud } from '../../../../utils';\n\nconst TaskNavigation = ((props) => {\n  const { toolMode, annotateDisabled, results, currentVideo, segmentMode } = props;\n  const [enableClear, setEnableClear] = useState(false);\n\n  useEffect(() => {\n    const readonly = isAnnotationReadonly(toolMode) || annotateDisabled;\n    const segments = results[currentVideo];\n    const len = segments.length;\n    let isAnnotated = false;\n    if (len === 1) {\n      const { attributes, content = [{ role: 'none', text: '', attributes: {} }] } = segments[0];\n      isAnnotated =\n        Object.keys(attributes || {}).length > 0 ||\n        content[0].role !== 'none' ||\n        Object.keys(content[0].attributes || {}).length > 0;\n    }\n\n    setEnableClear(\n      !readonly && (\n        (segmentMode === SegmentMode.individual && len > 0) ||\n        (segmentMode === SegmentMode.continuous && (len > 1 || isAnnotated))\n      )\n    );\n  }, [results, currentVideo]);\n\n  const handleButtonClick = (e, type) => {\n    switch (type) {\n      case 'fullscreen':\n        if (screenfull.isEnabled) {\n          screenfull.toggle();\n        }\n        break;\n      case 'guider':\n        props.showHideGuider();\n        break;\n      case 'save':\n        props.onSave();\n        break;\n      case 'clearAll': {\n        if (enableClear) {\n          props.clearAll();\n        }\n        break;\n      }\n      default:\n        break;\n    }\n  };\n  return (\n    <div className=\"task-navigation-container\">\n      {isAppenCloud() && (\n        <div className=\"appen-logo\">\n          <AppenLogo />\n        </div>\n      )}\n      <div className=\"appen-title\">\n        <span>Audio Segmentation Tool</span>\n        <span className=\"version\">\n          {translate('VERSION_LABEL')}\n          {' '}\n          {version}\n        </span>\n      </div>\n      <div className=\"task-navigation-button-list\">\n        <Measurements />\n        <button\n          disabled={!enableClear}\n          className=\"clear-all-button\"\n          onClick={(e) => handleButtonClick(e, 'clearAll')}\n        >\n          <ClearAll />\n        </button>\n        <button\n          className=\"guider-button\"\n          onClick={(e) => handleButtonClick(e, 'guider')}\n        >\n          <Question />\n        </button>\n        <button\n          className=\"fullscreen-button\"\n          onClick={(e) => handleButtonClick(e, 'fullscreen')}\n        >\n          <Fullscreen />\n        </button>\n        <Preferences />\n        <button\n          className=\"save-button\"\n          disabled={isPreview(toolMode)}\n          onClick={(e) => handleButtonClick(e, 'save')}\n        >\n          <Save />\n        </button>\n      </div>\n      <Guider />\n      <TaskSelect\n        className=\"task-select-wrapper\"\n        setCurrentSegment={props.setCurrentSegment}\n      />\n    </div>\n  );\n});\n\nconst mapStateToProps = (state) => ({\n  isGuiding: state.isGuiding,\n  toolMode: state.toolMode,\n  segmentMode: state.segmentMode,\n  currentVideo: state.currentVideo,\n  results: state.results,\n  annotateDisabled: state.annotateDisabled,\n});\nconst mapDispatchToProps = {\n  showHideGuider,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskNavigation);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}