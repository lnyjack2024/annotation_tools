{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/multi-channel/index.tsx\";\nimport React from 'react';\nimport { makeObservable, toJS } from 'mobx';\nimport { observer } from 'mobx-react';\nimport { notification } from 'antd';\nimport LayoutWrapper from '../common/layout/LayoutWrapper';\nimport AutoSaver from '../common/AutoSaver';\nimport Toolbar from './components/Toolbar';\nimport TabMenu from '../common/tabs-menu/TabMenu';\nimport Sidebar from './components/Sidebar';\nimport Validator from './components/Validator';\nimport Channels from './components/Channels';\nimport PlayControls from './components/PlayControls';\nimport Attributes from './components/Attributes';\nimport Review from './components/Review';\nimport InfoPanel from './components/InfoPanel';\nimport bindKeyboardEvents from './keyboard-events';\nimport i18n from './locales';\nimport { UpdateType, ReviewResult, ValidationType } from './types';\nimport { OverlapMode, SegmentMode } from './components/Wave/types';\nimport store from './store/RootStore';\nimport { validate, verifyCurrentForm, verifyForm } from './utils';\nimport './index.scss';\nexport class MultiChannel extends React.Component {\n  constructor(props) {\n    super(props);\n    /**\n     * auto saver reference\n     */\n    this.saverRef = React.createRef();\n    /**\n     * keyboard events\n     */\n    this.removeKeyboardEvents = () => {};\n    /**\n     * trigger validation, return passed or not\n     */\n    this.triggerValidation = async () => {\n      if (store.global.annotateDisabled) return true;\n      const {\n        results,\n        hasCustomError\n      } = await this.getScriptResult();\n      const {\n        emptys,\n        hasEmptyError\n      } = this.emptyValidation();\n      const {\n        overlaps,\n        hasOverlapError\n      } = this.overlapValidation();\n      const {\n        globals,\n        hasGlobalError\n      } = this.globalValidation();\n      const hasError = hasCustomError || hasEmptyError || hasOverlapError || hasGlobalError;\n      const errors = [...overlaps, ...emptys, ...results, ...globals];\n      store.review.setScriptResult({\n        results: errors,\n        hasCustomError\n      });\n      return !hasError && errors.length <= 0;\n    };\n    this.globalValidation = () => {\n      const result = {\n        globals: [],\n        hasGlobalError: false\n      };\n      const globalVerify = verifyForm(store.global.globalConfig, store.global.attributes);\n      if (!globalVerify.result) {\n        result.hasGlobalError = true;\n        result.globals.push({\n          warningType: ValidationType.GLOBAL_ERROR,\n          id: '',\n          message: i18n.translate('VALIDATION_TYPE_ATTR_EMPTY'),\n          frames: []\n        });\n      }\n      return result;\n    };\n    this.overlapValidation = () => {\n      const {\n        waveform: {\n          channelCount\n        },\n        instance: {\n          instances\n        }\n      } = store;\n      const result = {\n        overlaps: [],\n        hasOverlapError: false\n      };\n      if (store.waveform.segmentMode === SegmentMode.CONTINUOUS) return result;\n      const createError = (channelIndex, id) => {\n        result.hasOverlapError = true;\n        const categoryInstances = store.instance.channelInstancesMap[channelIndex];\n        const index = categoryInstances.findIndex(instance => instance.id === id);\n        result.overlaps.push({\n          warningType: ValidationType.OVERLAP,\n          id,\n          message: i18n.translate('ERROR_OVERLAP', {\n            values: {\n              channelIndex: channelIndex + 1,\n              index: index + 1\n            }\n          }),\n          frames: []\n        });\n      };\n      const newInstances = Object.values(toJS(instances)).sort((a, b) => a.start - b.start);\n      if (store.waveform.segmentOverlap === OverlapMode.DISABLED_CHANNEL_OVERLAP) {\n        for (let i = 0; i < channelCount; i += 1) {\n          let prev;\n          newInstances.filter(current => current.channelIndex === i).forEach(current => {\n            if (prev && current.start < prev.end) {\n              createError(current.channelIndex, current.id);\n            }\n            prev = current;\n          });\n        }\n      } else if (store.waveform.segmentOverlap === OverlapMode.DISABLED_OVERALL_OVERLAP) {\n        let prev;\n        Object.values(toJS(instances)).sort((a, b) => a.start - b.start).forEach(current => {\n          if (prev && current.start < prev.end) {\n            createError(current.channelIndex, current.id);\n          }\n          prev = current;\n        });\n      }\n      return result;\n    };\n    this.emptyValidation = () => {\n      const newInstances = Object.values(toJS(store.instance.instances));\n      const result = {\n        emptys: [],\n        hasEmptyError: false\n      };\n      for (let i = 0; i < newInstances.length; i += 1) {\n        const {\n          id,\n          channelIndex,\n          start,\n          text\n        } = newInstances[i];\n        const verifyRes = verifyCurrentForm(store.ontology.segmentConfig, newInstances[i], i);\n        if (!text || verifyRes.result === false) {\n          result.hasEmptyError = true;\n          const categoryInstances = store.instance.channelInstancesMap[channelIndex];\n          const index = categoryInstances.findIndex(instance => instance.start === start);\n          result.emptys.push({\n            warningType: ValidationType.ATTR_EMPTY,\n            id,\n            message: verifyRes.error || i18n.translate('ERROR_INCOMPLETE', {\n              values: {\n                channelIndex: channelIndex + 1,\n                index: index + 1\n              }\n            }),\n            frames: []\n          });\n        }\n      }\n      return result;\n    };\n    this.onSave = async (submit = true) => {\n      var _this$saverRef$curren;\n      if (store.setting.loading || !store.jobProxy) {\n        const loadError = i18n.translate('ERROR_DATA_LOAD');\n        notification.error({\n          message: loadError\n        });\n        throw new Error(loadError);\n      }\n      if (!store.review.isSelectInstanceEnable) {\n        const reviewError = i18n.translate('QC_ERROR');\n        notification.error({\n          message: reviewError\n        });\n        throw new Error(reviewError);\n      }\n      (_this$saverRef$curren = this.saverRef.current) === null || _this$saverRef$curren === void 0 ? void 0 : _this$saverRef$curren.disableLeaveCheck();\n      if (submit) {\n        if (store.setting.submitCheck) {\n          // validate before submit\n          const passed = await this.triggerValidation();\n          if (!passed) {\n            throw new Error(i18n.translate('SUBMIT_CHECK_FAIL'));\n          }\n        }\n      }\n      return store.saveResult();\n    };\n    this.saveReviews = (type = 'submit') => {\n      var _this$saverRef$curren2;\n      if (type === 'submit') {\n        const hasSuspend = store.review.reviews.find(review => review.result === ReviewResult.SUSPEND);\n        if (hasSuspend) {\n          throw new Error(i18n.translate('QC_SUSPEND_ERROR'));\n        }\n      }\n      (_this$saverRef$curren2 = this.saverRef.current) === null || _this$saverRef$curren2 === void 0 ? void 0 : _this$saverRef$curren2.disableLeaveCheck();\n      return store.saveReviews();\n    };\n    /**\n     * get review statistics\n     */\n    this.getStatistics = () => {\n      const statShapes = {};\n      const objects = {\n        total: 0,\n        approved: 0,\n        rejected: 0,\n        suspended: 0,\n        missed: 0\n      };\n      const reviews = store.review.getReviewsForSave().filter(r => r.result !== ReviewResult.APPROVE);\n      const instancesList = Object.values(store.instance.instances).filter(v => !!v);\n      for (let i = 0; i < instancesList.length; i += 1) {\n        const {\n          id,\n          category,\n          start,\n          end\n        } = instancesList[i];\n        if (!statShapes[category]) {\n          statShapes[category] = {\n            rejected: 0,\n            approved: 0,\n            suspended: 0,\n            missed: 0,\n            total: 0\n          };\n        }\n        const duration = (end - start) * 1000;\n        statShapes[category].total += duration;\n        objects.total += duration;\n        const review = reviews.find(r => r.instanceId === id);\n        if ((review === null || review === void 0 ? void 0 : review.result) === ReviewResult.REJECT) {\n          statShapes[category].rejected += duration;\n          objects.rejected += duration;\n        } else if ((review === null || review === void 0 ? void 0 : review.result) === ReviewResult.SUSPEND) {\n          statShapes[category].suspended += duration;\n          objects.suspended += duration;\n        } else {\n          statShapes[category].approved += duration;\n          objects.approved += duration;\n        }\n      }\n      return {\n        objects,\n        shapes: statShapes\n      };\n    };\n    this.handleSave = async () => {\n      if (store.isPreview) {\n        return;\n      }\n      try {\n        await this.onSave(false);\n        if (store.review.isEnabled) {\n          await this.saveReviews('save');\n        }\n        notification.success({\n          message: i18n.translate('SAVE_SUCCESS')\n        });\n      } catch (e) {\n        notification.error({\n          message: i18n.translate('SAVE_FAIL')\n        });\n      }\n    };\n    this.handleUndo = () => {\n      if (!store.undo.undoDisabled) {\n        const item = store.undo.undo();\n        if (item && item.before) {\n          this.updateStatus(item.before);\n          notification.success({\n            message: 'Undo successfully.'\n          });\n        }\n      }\n    };\n    this.handleRedo = () => {\n      if (!store.undo.redoDisabled) {\n        const item = store.undo.redo();\n        if (item && item.after) {\n          this.updateStatus(item.after);\n          notification.success({\n            message: 'Redo successfully.'\n          });\n        }\n      }\n    };\n    this.updateStatus = curr => {\n      curr.forEach(step => {\n        if (step.type === 'instance') {\n          store.instance.setUpdatedInstances(step.status, UpdateType.UNDOREDO);\n        } else if (step.type === 'review') {\n          store.review.updateReviews(step.status);\n        }\n      });\n    };\n    this.getScriptResult = async () => {\n      let resultLink = '';\n      if (store.setting.customCheck) {\n        if (typeof store.jobProxy.reviewFrom === 'string') {\n          resultLink = store.jobProxy.reviewFrom;\n        }\n        if (!store.readonly) {\n          try {\n            resultLink = await this.onSave(false);\n          } catch (e) {\n            resultLink = '';\n          }\n        }\n      }\n      const [result] = await Promise.all([validate(store.setting.customCheck, {\n        resultLink\n      }), new Promise(resolve => {\n        setTimeout(resolve, 300);\n      })]);\n      return result || {\n        results: [],\n        hasCustomError: false\n      };\n    };\n    this.handleScreenFull = () => {\n      if (store.setting.screenfull.isEnabled) {\n        store.setting.screenfull.toggle();\n      }\n    };\n    this.reload = () => {\n      window.location.reload();\n    };\n    makeObservable(this, {});\n    // set props\n    store.jobProxy = this.props.jobProxy;\n    i18n.setLocale(props.locale);\n  }\n  async componentDidMount() {\n    this.removeKeyboardEvents = bindKeyboardEvents(this);\n    // init store\n    try {\n      await store.init(this.props);\n    } catch (e) {\n      notification.error({\n        message: i18n.translate('ANNOTATION_DATA_LOAD_ERROR')\n      });\n      return;\n    }\n    // render completed\n    this.props.renderComplete();\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(LayoutWrapper, {\n      className: \"multi-channel-app\",\n      loading: store.setting.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AutoSaver, {\n      ref: this.saverRef,\n      leaveCheck: true,\n      data: {\n        storePointer: store.undo.pointer\n      },\n      save: this.handleSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Toolbar, {\n      readonly: store.setting.loading,\n      onSave: this.handleSave,\n      handleUndo: this.handleUndo,\n      handleRedo: this.handleRedo,\n      handleScreenFull: this.handleScreenFull,\n      reload: this.reload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      onContextMenu: e => e.preventDefault(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TabMenu, {\n      tabs: [{\n        title: i18n.translate('MENU_SENTENCE'),\n        key: 'instance',\n        count: 0,\n        content: /*#__PURE__*/React.createElement(Sidebar, {\n          allInstances: store.instance.allInstances,\n          instances: store.instance.displayInstances,\n          hideChannels: store.waveform.hideChannels,\n          selectedInstanceId: store.instance.selectedInstanceId,\n          currentTime: store.waveform.currentTime,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 19\n          }\n        })\n      }, {\n        title: i18n.translate('MENU_WARNING'),\n        key: 'validator',\n        count: store.review.warnings.length,\n        content: /*#__PURE__*/React.createElement(Validator, {\n          triggerValidation: this.triggerValidation,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 19\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }\n    }), store.initialized && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"channel-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Channels, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"handle-pannel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(PlayControls, {\n      currentTime: store.waveform.currentTime,\n      instance: store.instance.selectedInstance,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"attributes-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 19\n      }\n    }, store.instance.selectedInstance || store.review.selectedReview ? /*#__PURE__*/React.createElement(React.Fragment, null, store.review.drawMode && store.instance.selectedInstance ? /*#__PURE__*/React.createElement(Attributes, {\n      instance: store.instance.selectedInstance,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 27\n      }\n    }) : /*#__PURE__*/React.createElement(Review, {\n      instanceId: store.instance.selectedInstanceId,\n      review: store.review.selectedReview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 27\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"not-selected\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 23\n      }\n    }, i18n.translate('NOT_SELECTED'))))), /*#__PURE__*/React.createElement(InfoPanel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 15\n      }\n    }))));\n  }\n}\n;\nexport default observer(MultiChannel);","map":{"version":3,"names":["React","makeObservable","toJS","observer","notification","LayoutWrapper","AutoSaver","Toolbar","TabMenu","Sidebar","Validator","Channels","PlayControls","Attributes","Review","InfoPanel","bindKeyboardEvents","i18n","UpdateType","ReviewResult","ValidationType","OverlapMode","SegmentMode","store","validate","verifyCurrentForm","verifyForm","MultiChannel","Component","constructor","props","saverRef","createRef","removeKeyboardEvents","triggerValidation","global","annotateDisabled","results","hasCustomError","getScriptResult","emptys","hasEmptyError","emptyValidation","overlaps","hasOverlapError","overlapValidation","globals","hasGlobalError","globalValidation","hasError","errors","review","setScriptResult","length","result","globalVerify","globalConfig","attributes","push","warningType","GLOBAL_ERROR","id","message","translate","frames","waveform","channelCount","instance","instances","segmentMode","CONTINUOUS","createError","channelIndex","categoryInstances","channelInstancesMap","index","findIndex","OVERLAP","values","newInstances","Object","sort","a","b","start","segmentOverlap","DISABLED_CHANNEL_OVERLAP","i","prev","filter","current","forEach","end","DISABLED_OVERALL_OVERLAP","text","verifyRes","ontology","segmentConfig","ATTR_EMPTY","error","onSave","submit","_this$saverRef$curren","setting","loading","jobProxy","loadError","Error","isSelectInstanceEnable","reviewError","disableLeaveCheck","submitCheck","passed","saveResult","saveReviews","type","_this$saverRef$curren2","hasSuspend","reviews","find","SUSPEND","getStatistics","statShapes","objects","total","approved","rejected","suspended","missed","getReviewsForSave","r","APPROVE","instancesList","v","category","duration","instanceId","REJECT","shapes","handleSave","isPreview","isEnabled","success","e","handleUndo","undo","undoDisabled","item","before","updateStatus","handleRedo","redoDisabled","redo","after","curr","step","setUpdatedInstances","status","UNDOREDO","updateReviews","resultLink","customCheck","reviewFrom","readonly","Promise","all","resolve","setTimeout","handleScreenFull","screenfull","toggle","reload","window","location","setLocale","locale","componentDidMount","init","renderComplete","render","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ref","leaveCheck","data","storePointer","pointer","save","onContextMenu","preventDefault","tabs","title","key","count","content","allInstances","displayInstances","hideChannels","selectedInstanceId","currentTime","warnings","initialized","Fragment","selectedInstance","selectedReview","drawMode"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/multi-channel/index.tsx"],"sourcesContent":["import React from 'react';\nimport { makeObservable, toJS } from 'mobx';\nimport { observer } from 'mobx-react';\nimport { notification } from 'antd';\nimport LayoutWrapper from '../common/layout/LayoutWrapper';\nimport AutoSaver from '../common/AutoSaver';\nimport Toolbar from './components/Toolbar';\nimport TabMenu from '../common/tabs-menu/TabMenu';\nimport Sidebar from './components/Sidebar';\nimport Validator from './components/Validator';\nimport Channels from './components/Channels';\nimport PlayControls from './components/PlayControls';\nimport Attributes from './components/Attributes';\nimport Review from './components/Review';\nimport InfoPanel from './components/InfoPanel';\nimport bindKeyboardEvents from './keyboard-events';\nimport { Status } from './store/UndoStore';\nimport i18n from './locales';\nimport { Payload, UpdateType, ReviewResult, Instance, ValidationType } from './types';\nimport { OverlapMode, SegmentMode } from './components/Wave/types';\nimport { IWarning } from '../common/tabs-menu/Validator';\nimport store from './store/RootStore';\nimport { validate, verifyCurrentForm, verifyForm } from './utils';\nimport './index.scss';\n\nexport interface MultiChannelProps extends Payload {\n  renderComplete: () => Promise<void>;\n}\n\nexport class MultiChannel extends React.Component<MultiChannelProps> {\n  /**\n   * auto saver reference\n   */\n  saverRef = React.createRef<AutoSaver>();\n\n  /**\n   * keyboard events\n   */\n  removeKeyboardEvents = () => {};\n\n  constructor(props: MultiChannelProps) {\n    super(props);\n    makeObservable(this, {});\n    // set props\n    store.jobProxy = this.props.jobProxy;\n    i18n.setLocale(props.locale);\n  }\n\n  async componentDidMount() {\n    this.removeKeyboardEvents = bindKeyboardEvents(this);\n    // init store\n    try {\n      await store.init(this.props);\n    } catch (e) {\n      notification.error({ message: i18n.translate('ANNOTATION_DATA_LOAD_ERROR') });\n      return;\n    }\n    // render completed\n    this.props.renderComplete();\n  }\n\n  /**\n   * trigger validation, return passed or not\n   */\n  triggerValidation = async () => {\n    if (store.global.annotateDisabled) return true;\n    const { results, hasCustomError } = await this.getScriptResult();\n    const { emptys, hasEmptyError } = this.emptyValidation();\n    const { overlaps, hasOverlapError } = this.overlapValidation();\n    const { globals, hasGlobalError } = this.globalValidation();\n    const hasError = hasCustomError || hasEmptyError || hasOverlapError || hasGlobalError;\n    const errors = [...overlaps, ...emptys, ...results, ...globals];\n    store.review.setScriptResult({ results: errors, hasCustomError });\n    return !hasError && errors.length <= 0;\n  };\n\n  globalValidation = () => {\n    const result: { globals: IWarning[], hasGlobalError: boolean, } = {\n      globals: [],\n      hasGlobalError: false,\n    };\n    const globalVerify = verifyForm(store.global.globalConfig, store.global.attributes);\n    if (!globalVerify.result) {\n      result.hasGlobalError = true;\n      result.globals.push({\n        warningType: ValidationType.GLOBAL_ERROR,\n        id: '',\n        message: i18n.translate('VALIDATION_TYPE_ATTR_EMPTY'),\n        frames: [],\n      });\n    }\n    return result;\n  };\n\n  overlapValidation = () => {\n    const { waveform: { channelCount }, instance: { instances } } = store;\n    const result: { overlaps: IWarning[], hasOverlapError: boolean, } = {\n      overlaps: [],\n      hasOverlapError: false,\n    };\n    if (store.waveform.segmentMode === SegmentMode.CONTINUOUS) return result;\n    const createError = (channelIndex: number, id: string) => {\n      result.hasOverlapError = true;\n      const categoryInstances = store.instance.channelInstancesMap[channelIndex];\n      const index = categoryInstances.findIndex((instance) => instance.id === id);\n      result.overlaps.push({\n        warningType: ValidationType.OVERLAP,\n        id,\n        message: i18n.translate('ERROR_OVERLAP', {\n          values: {\n            channelIndex: channelIndex + 1,\n            index: index + 1,\n          }\n        }),\n        frames: [],\n      });\n    };\n    const newInstances = Object.values(toJS(instances)).sort((a, b) => a.start - b.start);\n    if (store.waveform.segmentOverlap === OverlapMode.DISABLED_CHANNEL_OVERLAP) {\n      for (let i = 0; i < channelCount; i += 1) {\n        let prev: Instance | undefined;\n        newInstances.filter((current) => current.channelIndex === i).forEach((current) => {\n          if (prev && current.start < prev.end) {\n            createError(current.channelIndex, current.id);\n          }\n          prev = current;\n        });\n      }\n    } else if (store.waveform.segmentOverlap === OverlapMode.DISABLED_OVERALL_OVERLAP) {\n      let prev: Instance | undefined;\n      Object.values(toJS(instances)).sort((a, b) => a.start - b.start).forEach((current) => {\n        if (prev && current.start < prev.end) {\n          createError(current.channelIndex, current.id);\n        }\n        prev = current;\n      });\n    }\n    return result;\n  };\n\n  emptyValidation = () => {\n    const newInstances: Instance[] = Object.values(toJS(store.instance.instances));\n    const result: { emptys: IWarning[], hasEmptyError: boolean, } = {\n      emptys: [],\n      hasEmptyError: false,\n    };\n    for (let i = 0; i < newInstances.length; i += 1) {\n      const { id, channelIndex, start, text } = newInstances[i];\n      const verifyRes = verifyCurrentForm(store.ontology.segmentConfig, newInstances[i], i);\n      if (!text || verifyRes.result === false) {\n        result.hasEmptyError = true;\n        const categoryInstances = store.instance.channelInstancesMap[channelIndex];\n        const index = categoryInstances.findIndex((instance) => instance.start === start);\n        result.emptys.push({\n          warningType: ValidationType.ATTR_EMPTY,\n          id,\n          message: verifyRes.error || i18n.translate('ERROR_INCOMPLETE', {\n            values: {\n              channelIndex: channelIndex + 1,\n              index: index + 1,\n            }\n          }),\n          frames: [],\n        });\n      }\n    }\n    return result;\n  };\n\n  onSave = async (submit = true) => {\n    if (store.setting.loading || !store.jobProxy) {\n      const loadError = i18n.translate('ERROR_DATA_LOAD');\n      notification.error({ message: loadError });\n      throw new Error(loadError);\n    }\n    if (!store.review.isSelectInstanceEnable) {\n      const reviewError = i18n.translate('QC_ERROR');\n      notification.error({ message: reviewError });\n      throw new Error(reviewError);\n    }\n    this.saverRef.current?.disableLeaveCheck();\n    if (submit) {\n      if (store.setting.submitCheck) {\n        // validate before submit\n        const passed = await this.triggerValidation();\n        if (!passed) {\n          throw new Error(i18n.translate('SUBMIT_CHECK_FAIL'));\n        }\n      }\n    }\n    return store.saveResult();\n  };\n\n  saveReviews = (type = 'submit') => {\n    if (type === 'submit') {\n      const hasSuspend = store.review.reviews.find((review) => review.result === ReviewResult.SUSPEND);\n      if (hasSuspend) {\n        throw new Error(i18n.translate('QC_SUSPEND_ERROR'));\n      }\n    }\n    this.saverRef.current?.disableLeaveCheck();\n    return store.saveReviews();\n  };\n\n  /**\n   * get review statistics\n   */\n  getStatistics = () => {\n    const statShapes: {\n      [shape: string]: { rejected: number; approved: number, suspended: number, missed: number, total: number };\n    } = {};\n    const objects = {\n      total: 0,\n      approved: 0,\n      rejected: 0,\n      suspended: 0,\n      missed: 0,\n    };\n    const reviews = store.review.getReviewsForSave().filter((r) => r.result !== ReviewResult.APPROVE);\n    const instancesList = Object.values(store.instance.instances).filter((v) => !!v);\n    for (let i = 0; i < instancesList.length; i += 1) {\n      const { id, category, start, end } = instancesList[i];\n      if (!statShapes[category]) {\n        statShapes[category] = {\n          rejected: 0,\n          approved: 0,\n          suspended: 0,\n          missed: 0,\n          total: 0\n        };\n      }\n      const duration = (end - start) * 1000;\n      statShapes[category].total += duration;\n      objects.total += duration;\n      const review = reviews.find((r) => r.instanceId === id);\n      if (review?.result === ReviewResult.REJECT) {\n        statShapes[category].rejected += duration;\n        objects.rejected += duration;\n      } else if (review?.result === ReviewResult.SUSPEND) {\n        statShapes[category].suspended += duration;\n        objects.suspended += duration;\n      } else {\n        statShapes[category].approved += duration;\n        objects.approved += duration;\n      }\n    }\n    return { objects, shapes: statShapes };\n  };\n\n  handleSave = async () => {\n    if (store.isPreview) {\n      return;\n    }\n\n    try {\n      await this.onSave(false);\n      if (store.review.isEnabled) {\n        await this.saveReviews('save');\n      }\n      notification.success({ message: i18n.translate('SAVE_SUCCESS') });\n    } catch (e) {\n      notification.error({ message: i18n.translate('SAVE_FAIL') });\n    }\n  };\n\n  handleUndo = () => {\n    if (!store.undo.undoDisabled) {\n      const item = store.undo.undo();\n      if (item && item.before) {\n        this.updateStatus(item.before);\n        notification.success({ message: 'Undo successfully.' });\n      }\n    }\n  };\n\n  handleRedo = () => {\n    if (!store.undo.redoDisabled) {\n      const item = store.undo.redo();\n      if (item && item.after) {\n        this.updateStatus(item.after);\n        notification.success({ message: 'Redo successfully.' });\n      }\n    }\n  };\n\n  updateStatus = (curr: Status[]) => {\n    curr.forEach((step) => {\n      if (step.type === 'instance') {\n        store.instance.setUpdatedInstances(step.status, UpdateType.UNDOREDO);\n      } else if (step.type === 'review') {\n        store.review.updateReviews(step.status);\n      }\n    });\n  };\n\n  getScriptResult = async () => {\n    let resultLink = '';\n    if (store.setting.customCheck) {\n      if (typeof store.jobProxy!.reviewFrom === 'string') {\n        resultLink = store.jobProxy!.reviewFrom;\n      }\n      if (!store.readonly) {\n        try {\n          resultLink = await this.onSave(false);\n        } catch (e) {\n          resultLink = '';\n        }\n      }\n    }\n\n    const [result] = await Promise.all([\n      validate(store.setting.customCheck, {\n        resultLink,\n      }),\n      new Promise((resolve) => {\n        setTimeout(resolve, 300);\n      }),\n    ]);\n    return result || { results: [], hasCustomError: false };\n  };\n\n  handleScreenFull = () => {\n    if (store.setting.screenfull.isEnabled) {\n      store.setting.screenfull.toggle();\n    }\n  };\n\n  reload = () => {\n    window.location.reload();\n  };\n\n  render() {\n    return (\n      <LayoutWrapper className=\"multi-channel-app\" loading={store.setting.loading}>\n        <AutoSaver\n          ref={this.saverRef}\n          leaveCheck\n          data={{ storePointer: store.undo.pointer }}\n          save={this.handleSave}\n        />\n        <Toolbar\n          readonly={store.setting.loading}\n          onSave={this.handleSave}\n          handleUndo={this.handleUndo}\n          handleRedo={this.handleRedo}\n          handleScreenFull={this.handleScreenFull}\n          reload={this.reload}\n        />\n        <div className=\"container\" onContextMenu={(e) => e.preventDefault()}>\n          <TabMenu\n            tabs={[\n              {\n                title: i18n.translate('MENU_SENTENCE'),\n                key: 'instance',\n                count: 0,\n                content: (\n                  <Sidebar\n                    allInstances={store.instance.allInstances}\n                    instances={store.instance.displayInstances}\n                    hideChannels={store.waveform.hideChannels}\n                    selectedInstanceId={store.instance.selectedInstanceId}\n                    currentTime={store.waveform.currentTime}\n                  />\n                )\n              },\n              {\n                title: i18n.translate('MENU_WARNING'),\n                key: 'validator',\n                count: store.review.warnings.length,\n                content: (\n                  <Validator triggerValidation={this.triggerValidation} />\n                )\n              }\n            ]}\n          />\n          {store.initialized && (\n            <>\n              <div className=\"channel-container\">\n                <Channels />\n                <div className=\"handle-pannel\">\n                  <PlayControls\n                    currentTime={store.waveform.currentTime}\n                    instance={store.instance.selectedInstance}\n                  />\n                  <div className=\"attributes-container\">\n                    {(store.instance.selectedInstance || store.review.selectedReview) ? (\n                      <>\n                        {(store.review.drawMode && store.instance.selectedInstance) ? (\n                          <Attributes instance={store.instance.selectedInstance} />\n                        ) : (\n                          <Review\n                            instanceId={store.instance.selectedInstanceId!}\n                            review={store.review.selectedReview}\n                          />\n                        )}\n                      </>\n                    ) : (\n                      <div className=\"not-selected\">{i18n.translate('NOT_SELECTED')}</div>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <InfoPanel />\n            </>\n          )}\n        </div>\n      </LayoutWrapper>\n    );\n  }\n};\nexport default observer(MultiChannel);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}