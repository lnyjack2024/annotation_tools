{"ast":null,"code":"export let LandmarkEditType=/*#__PURE__*/function(LandmarkEditType){LandmarkEditType[\"KEYPOINT\"]=\"keypoint\";LandmarkEditType[\"RECTANGLE\"]=\"rectangle\";return LandmarkEditType;}({});export let CategoryPathShape=/*#__PURE__*/function(CategoryPathShape){CategoryPathShape[\"CIRCLE\"]=\"circle\";CategoryPathShape[\"RECTANGLE\"]=\"rectangle\";return CategoryPathShape;}({});;;export let DELETETYPE=/*#__PURE__*/function(DELETETYPE){DELETETYPE[\"CURRENT\"]=\"CURRENT\";DELETETYPE[\"FOLLOW\"]=\"FOLLOW\";DELETETYPE[\"ALL\"]=\"ALL\";return DELETETYPE;}({});export let ValidationType=/*#__PURE__*/function(ValidationType){ValidationType[\"ATTR_EMPTY\"]=\"attr_empty\";ValidationType[\"CUSTOM\"]=\"custom\";ValidationType[\"QUALITY\"]=\"quality\";return ValidationType;}({});export let LabelItem=/*#__PURE__*/function(LabelItem){LabelItem[\"CATEGORY\"]=\"category\";LabelItem[\"NUMBER\"]=\"number\";LabelItem[\"TOOL_NAME\"]=\"tool-name\";LabelItem[\"ATTRIBUTE_KEYS\"]=\"attribute-keys\";LabelItem[\"ATTRIBUTE_VALUES\"]=\"attribute-values\";return LabelItem;}({});export let LabelStyle=/*#__PURE__*/function(LabelStyle){LabelStyle[\"DEFAULT\"]=\"default\";LabelStyle[\"TRANSPARENT\"]=\"transparent\";return LabelStyle;}({});export let LabelFormat=/*#__PURE__*/function(LabelFormat){LabelFormat[\"DEFAULT\"]=\"default\";LabelFormat[\"COMPRESSED\"]=\"compressed\";return LabelFormat;}({});export let ReviewResult=/*#__PURE__*/function(ReviewResult){ReviewResult[\"APPROVE\"]=\"approve\";ReviewResult[\"REJECT\"]=\"reject\";ReviewResult[\"SUSPEND\"]=\"suspend\";return ReviewResult;}({});export let PathStyles=/*#__PURE__*/function(PathStyles){PathStyles[\"DEFAULT\"]=\"default\";PathStyles[\"CURVES\"]=\"curves\";return PathStyles;}({});export let HandleType=/*#__PURE__*/function(HandleType){HandleType[\"HANDLE_IN\"]=\"handle-in\";HandleType[\"HANDLE_OUT\"]=\"handle-out\";return HandleType;}({});","map":{"version":3,"names":["LandmarkEditType","CategoryPathShape","DELETETYPE","ValidationType","LabelItem","LabelStyle","LabelFormat","ReviewResult","PathStyles","HandleType"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/keypoint/types.ts"],"sourcesContent":["import { Field, Condition, Effect, Rule } from '@appen-china/easy-form/es/types';\nimport { OntologyItem } from './store/OntologyStore';\nimport JobProxy from '../../libs/JobProxy';\n\nexport interface Payload {\n  job_id: string;\n  task_id: string;\n  record_id: string;\n  worker_id: string;\n  image: string;\n  ontology: OntologyItem[] | CategoryItem[];\n  jobProxy: JobProxy;\n  review_from?: string;\n  initial_result?: string;\n  check_missing_points?: boolean;\n  issue_types?: string;\n  locale?: string;\n  path_style?: PathStyles;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  loadContent: (filename: string, jobId: string) => Promise<any>;\n  renderComplete: () => Promise<void>;\n}\n\nexport interface CategoryItem {\n  name: string;\n  range: number[];\n  keys: number[];\n  reference?: string;\n  isConnect?: boolean;\n  displayColor?: string;\n}\n\nexport enum LandmarkEditType {\n  KEYPOINT = 'keypoint',\n  RECTANGLE = 'rectangle',\n}\n\nexport interface Line {\n  points: [number, number];\n  color: string;\n}\n\nexport interface FormConfig {\n  fields: Field[];\n  conditions?: Condition[];\n  effects?: Effect[];\n  rules?: Rule[];\n}\n\nexport enum CategoryPathShape {\n  CIRCLE = 'circle',\n  RECTANGLE = 'rectangle',\n}\n\nexport interface Point {\n  pointCategory?: string;\n  isKeyPoint?: boolean;\n  position?: {\n    x: number;\n    y: number;\n  };\n  attributes?: {\n    [attr: string]: any;\n  };\n  visible?: boolean;\n}\n\nexport interface PointListItem extends Point {\n  index?: number;\n}\n\nexport interface InstanceStatus {\n  frameIndex: number;\n  id: string;\n  instance?: InstanceAct;\n}\n\nexport interface GroupStatus extends FrameGroup {\n  attributes?: {[attr: string]: any;};\n}\n\nexport interface PointStatus extends FrameGroup {\n  index: number;\n  point?: Point;\n}\n\nexport interface CategoryPathShapeStatus {\n  frameIndex: number;\n  pointCategory: string;\n  shape?: CategoryPathShape;\n}\n\nexport interface Rectangle {\n  id: string;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  displayColor: string;\n  visible?: boolean;\n}\n\nexport interface Group {\n  instanceId: string;\n  category: string;\n  groupName: string;\n  shapeType?: LandmarkEditType;\n  displayColor?: string;\n}\n\nexport interface FrameGroup extends Group {\n  frameIndex: number;\n}\n\nexport interface RectangleStatus extends FrameGroup {\n  id: string;\n  rectangle?: Rectangle;\n}\n\nexport interface UpdatedShape extends FrameGroup {\n  id?: string;\n  index?: number;\n  pointCategory?: string;\n  shapeType: LandmarkEditType;\n  shape?: Point | Rectangle;\n}\n\nexport interface InstanceGroup {\n  name: string;\n  display_name?: string;\n  shapeType: LandmarkEditType;\n}\n\nexport interface Points { [index: number]: Point; };\n\nexport interface CurrentShapes { [shapeId: string]: Rectangle; };\n\nexport type Shapes = Points | CurrentShapes;\n\nexport interface Frame {\n  frameIndex: number;\n  count: number;\n  shapes: Shapes;\n  attributes?: {[key: string]: any;}\n}\nexport interface InstanceGroupAct extends InstanceGroup {\n  count: number;\n  frames: {[frameIndex: number]: Frame};\n}\nexport interface InstanceGroupStatus extends InstanceGroup {\n  frames: {\n    frameIndex: number,\n    number: number;\n    shapes: { [index: number]: PointStatus; } | { [shapeId: string]: RectangleStatus; };\n    attributes?: {[key: string]: any;};\n  }[];\n}\nexport interface InstanceGroupListItem extends InstanceGroup {\n  frames: ({\n    frameIndex: number,\n    shapes: PointListItem[] | Rectangle[];\n    attributes?: {[key: string]: any;};\n  } | undefined)[];\n}\n\nexport interface InstanceAct {\n  id: string;\n  category: string;\n  displayColor?: string;\n  number: number;\n  notEmpty: number;\n  children: InstanceGroupAct[];\n}\n\nexport interface InstanceListItem {\n  id: string;\n  category: string;\n  number: number;\n  displayColor?: string;\n  children: InstanceGroupListItem[];\n}\n\nexport interface GroupInfo extends Group {\n  shapeType?: LandmarkEditType;\n  displayColor?: string;\n}\n\nexport interface PointInfo extends GroupInfo {\n  pointCategory: string;\n  isKeyPoint: boolean;\n}\n\nexport interface ShapeInfo extends GroupInfo {\n  frameIndex: number;\n  id?: string | number;\n}\n\nexport interface ObjectInfo extends Group {\n  index?: number;\n  point?: Point;\n}\n\nexport interface CategoryInstancesMap {\n  [category: string]: {\n    [instanceId: string]: number; // instance id -> instance num\n  };\n}\n\nexport interface KeypointCategoryProps extends Group {\n  frameIndex: number;\n  pointCategory: string;\n}\n\nexport enum DELETETYPE {\n  CURRENT = 'CURRENT',\n  FOLLOW = 'FOLLOW',\n  ALL = 'ALL'\n}\n\nexport enum ValidationType {\n  ATTR_EMPTY = 'attr_empty',\n  CUSTOM = 'custom',\n  QUALITY = 'quality',\n}\n\nexport enum LabelItem {\n  CATEGORY = 'category',\n  NUMBER = 'number',\n  TOOL_NAME = 'tool-name',\n  ATTRIBUTE_KEYS = 'attribute-keys',\n  ATTRIBUTE_VALUES = 'attribute-values',\n}\n\nexport enum LabelStyle {\n  DEFAULT = 'default',\n  TRANSPARENT = 'transparent'\n}\n\nexport enum LabelFormat {\n  DEFAULT = 'default',\n  COMPRESSED = 'compressed',\n}\n\nexport enum ReviewResult {\n  APPROVE = 'approve',\n  REJECT = 'reject',\n  SUSPEND = 'suspend',\n}\n\nexport interface ReviewData {\n  result: ReviewResult;\n  type?: string[];\n  comment?: string;\n}\n\nexport interface Review extends ReviewData {\n  instanceId: string;\n  groupName: string;\n  frameIndex: number;\n  shapeIds: (number | string)[];\n}\n\nexport interface MissingReview extends ReviewData {\n  id: string;\n  number: number;\n  frameIndex: number;\n  data?: MissingReviewData;\n}\nexport type MissingReviewData = DotData;\ninterface DotData {\n  position: {\n    x: number;\n    y: number;\n  }\n}\n\nexport interface Summary {\n  ids: string[]\n  category: string;\n  shape?: LandmarkEditType;\n  count: number;\n  distinctCount: number;\n}\n\nexport interface Element {\n  instance: string;\n  id: string | number;\n  shape?: LandmarkEditType;\n  frame: number;\n  category: string;\n  label?: { [key: string]: string };\n}\n\nexport interface Statistic {\n  elements: Element[];\n  categories: string[];\n  shapes: Set<any>;\n  summary: { [key: string]: Summary };\n  frameCount: number;\n  annotatedFrames: Set<any>;\n}\n\nexport interface Image {\n  url: string;\n  valid: boolean;\n  index: number;\n}\n\nexport enum PathStyles {\n  DEFAULT = 'default',\n  CURVES = 'curves',\n}\n\nexport enum HandleType {\n  HANDLE_IN = 'handle-in',\n  HANDLE_OUT = 'handle-out',\n}\n\nexport interface Handle {\n  frameIndex: number;\n  instanceId: string;\n  groupName: string;\n  handleIn: {x: number, y: number};\n  handleOut: {x: number, y: number};\n  pointIndex: number;\n  pointPosition: {x: number, y: number};\n  pathId: string;\n}\n\nexport interface HandleStatus {\n  frameIndex: number;\n  pathId: string;\n  pointIndex: number;\n  handle: Handle | null;\n}\n"],"mappings":"AAgCA,UAAY,CAAAA,gBAAgB,uBAAhBA,gBAAgB,EAAhBA,gBAAgB,wBAAhBA,gBAAgB,gCAAhB,CAAAA,gBAAgB,OAiB5B,UAAY,CAAAC,iBAAiB,uBAAjBA,iBAAiB,EAAjBA,iBAAiB,oBAAjBA,iBAAiB,gCAAjB,CAAAA,iBAAiB,OAoFsB,CAEa,CA8EhE,UAAY,CAAAC,UAAU,uBAAVA,UAAU,EAAVA,UAAU,sBAAVA,UAAU,oBAAVA,UAAU,oBAAV,CAAAA,UAAU,OAMtB,UAAY,CAAAC,cAAc,uBAAdA,cAAc,EAAdA,cAAc,4BAAdA,cAAc,oBAAdA,cAAc,4BAAd,CAAAA,cAAc,OAM1B,UAAY,CAAAC,SAAS,uBAATA,SAAS,EAATA,SAAS,wBAATA,SAAS,oBAATA,SAAS,0BAATA,SAAS,oCAATA,SAAS,8CAAT,CAAAA,SAAS,OAQrB,UAAY,CAAAC,UAAU,uBAAVA,UAAU,EAAVA,UAAU,sBAAVA,UAAU,oCAAV,CAAAA,UAAU,OAKtB,UAAY,CAAAC,WAAW,uBAAXA,WAAW,EAAXA,WAAW,sBAAXA,WAAW,kCAAX,CAAAA,WAAW,OAKvB,UAAY,CAAAC,YAAY,uBAAZA,YAAY,EAAZA,YAAY,sBAAZA,YAAY,oBAAZA,YAAY,4BAAZ,CAAAA,YAAY,OAiExB,UAAY,CAAAC,UAAU,uBAAVA,UAAU,EAAVA,UAAU,sBAAVA,UAAU,0BAAV,CAAAA,UAAU,OAKtB,UAAY,CAAAC,UAAU,uBAAVA,UAAU,EAAVA,UAAU,0BAAVA,UAAU,kCAAV,CAAAA,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module"}