{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking2/components/frames/FrameControl.tsx\";\nimport React from 'react';\nimport { makeObservable, observable, action, reaction } from 'mobx';\nimport { observer } from 'mobx-react';\nimport { Slider } from 'antd';\nimport hexToRgba from 'hex-to-rgba';\nimport FrameActions from './FrameActions';\nimport ItemLabel from './ItemLabel';\nimport FramesRenderer, { EventAction } from '../../../../libs/FramesRenderer';\nimport { Minus, Plus } from '../../../common/icons';\nimport store from '../../store/RootStore';\nimport { ReviewResult } from '../../types';\nimport './FrameControl.scss';\nconst itemKeySeparator = '|S|';\nconst defaultFrameColor = '#5C5F6B';\nconst actionsContainerHeight = 40;\nfunction getRGBAColor(category, alpha = 0.2) {\n  const {\n    displayColor\n  } = store.ontology.getCategory(category) || {};\n  if (displayColor) {\n    return hexToRgba(displayColor, alpha);\n  }\n  return defaultFrameColor;\n}\nfunction getFrameColor(instanceItem, camera) {\n  const frameColor = {};\n  const cameraData = instanceItem.cameras[camera];\n  if (cameraData) {\n    Object.values(cameraData.frames).forEach(({\n      frameIndex\n    }) => {\n      const result = store.review.getReviewForInstanceItem(instanceItem, camera, frameIndex);\n      if (result) {\n        if (result === ReviewResult.REJECT) {\n          frameColor[frameIndex] = '#9C4434';\n        } else if (!store.isRework) {\n          if (result === ReviewResult.APPROVE) {\n            frameColor[frameIndex] = '#3E6F45';\n          } else if (result === ReviewResult.SUSPEND) {\n            frameColor[frameIndex] = '#A28900';\n          }\n        }\n      }\n    });\n  }\n  return frameColor;\n}\n;\nvar FramesMode = /*#__PURE__*/function (FramesMode) {\n  FramesMode[\"DEFAULT\"] = \"default\";\n  return FramesMode;\n}(FramesMode || {});\nclass FrameControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.reactionDisposers = [];\n    this.framesRenderer = null;\n    this.framesContainer = React.createRef();\n    this.itemsContainer = React.createRef();\n    this.framesMode = FramesMode.DEFAULT;\n    this.framesHeight = 64;\n    this.visibleFramesIndex = 0;\n    this.visibleFramesIndexArr = [];\n    this.itemKeys = [];\n    this.updateVisibleFrames = (currentIndex, indexArr) => {\n      this.visibleFramesIndex = currentIndex;\n      if (indexArr) {\n        this.visibleFramesIndexArr = indexArr;\n      }\n    };\n    this.updateCurrentFrame = (frameIndex, itemIndex) => {\n      const itemKey = this.itemKeys[itemIndex];\n      if (itemKey) {\n        const [instanceId, instanceItemId] = itemKey.split(itemKeySeparator);\n        const instance = store.instance.getInstanceById(instanceId);\n        if (instance) {\n          const item = instance.items[instanceItemId];\n          if (item) {\n            store.instance.selectInstanceItem(item);\n          } else {\n            const isSingle = instance.isSingle && store.frame.isSingleCamera;\n            if (!isSingle) {\n              store.instance.selectInstanceItem(null);\n            }\n            store.instance.selectInstance(instance);\n          }\n        }\n      }\n      store.frame.setFrame(frameIndex);\n    };\n    this.updateFrameCountIndex = v => {\n      this.visibleFramesIndex = Math.min(Math.max(v, this.visibleFramesIndexArr[0]), this.visibleFramesIndexArr[this.visibleFramesIndexArr.length - 1]);\n      if (this.framesRenderer) {\n        this.framesRenderer.currentRangeIndex = this.visibleFramesIndex;\n      }\n    };\n    makeObservable(this, {\n      framesMode: observable,\n      visibleFramesIndex: observable,\n      visibleFramesIndexArr: observable,\n      itemKeys: observable,\n      getItems: action,\n      updateVisibleFrames: action,\n      updateFrameCountIndex: action\n    });\n\n    // when current frame changes\n    this.reactionDisposers.push(reaction(() => store.frame.currentFrame, () => {\n      if (this.framesRenderer) {\n        this.framesRenderer.currentFrame = store.frame.currentFrame;\n      }\n    }));\n\n    // when instance changes, or data changes\n    this.reactionDisposers.push(reaction(() => [store.instance.selectedInstanceItems, store.instance.selectedInstances, store.undo.pointer, store.undo.lastStoreId, store.config.reviewMode], ([items, instances, pointer, storeId, reviewMode], [prevItems, prevInstances, prevPointer, prevStoreId, prevReviewMode]) => {\n      const selectedChanged = items.length !== prevItems.length || items.some(i => prevItems.indexOf(i) < 0) || instances.length !== prevInstances.length || instances.some(i => prevInstances.indexOf(i) < 0);\n      if (this.framesRenderer && (selectedChanged || pointer !== prevPointer || storeId !== prevStoreId || reviewMode !== prevReviewMode)) {\n        this.framesRenderer.items = this.getItems();\n      }\n    }));\n  }\n  componentDidMount() {\n    if (this.framesContainer.current) {\n      this.framesRenderer = new FramesRenderer(this.framesContainer.current, store.frame.frameCount);\n      this.framesRenderer.on(EventAction.VISIBLE_FRAMES_UPDATE, this.updateVisibleFrames);\n      this.framesRenderer.on(EventAction.CURRENT_FRAME_CHANGE, this.updateCurrentFrame);\n      this.framesRenderer.items = this.getItems();\n    }\n  }\n  componentWillUnmount() {\n    if (this.framesRenderer) {\n      this.framesRenderer.removeEventListeners();\n      this.framesRenderer.off(EventAction.VISIBLE_FRAMES_UPDATE, this.updateVisibleFrames);\n      this.framesRenderer.off(EventAction.CURRENT_FRAME_CHANGE, this.updateCurrentFrame);\n    }\n    this.reactionDisposers.forEach(disposer => disposer());\n  }\n  getItems() {\n    const items = {};\n    const {\n      selectedInstances,\n      selectedInstanceItems\n    } = store.instance;\n    const {\n      currentCamera\n    } = store.frame;\n    if (selectedInstances.length > 0) {\n      const selectedInstanceItem = selectedInstanceItems[0];\n      const selectedInstance = selectedInstanceItem ? selectedInstanceItem.instance : selectedInstances[0];\n      if (!selectedInstanceItem) {\n        // only instance selected\n        items[selectedInstance.id] = {\n          frameStatus: selectedInstance.frameStatus,\n          color: getRGBAColor(selectedInstance.category)\n        };\n      } else {\n        var _selectedInstanceItem;\n        // instance item in current frame selected\n        const key = [selectedInstance.id, selectedInstanceItem.id, currentCamera].join(itemKeySeparator);\n        items[key] = {\n          frameStatus: (_selectedInstanceItem = selectedInstanceItem.cameras[currentCamera]) === null || _selectedInstanceItem === void 0 ? void 0 : _selectedInstanceItem.frameStatus,\n          frameColor: getFrameColor(selectedInstanceItem, currentCamera),\n          color: hexToRgba(selectedInstanceItem.categoryItemRef.displayColor || defaultFrameColor, 0.2),\n          showCards: true,\n          selected: true\n        };\n      }\n    } else if (this.framesMode === FramesMode.DEFAULT) {\n      const frameStatus = Object.values(store.instance.instances).map(i => i.frameStatus).reduce((acc, curr) => ({\n        ...acc,\n        ...curr\n      }), {});\n      items.global = {\n        frameStatus,\n        color: defaultFrameColor,\n        selected: true\n      };\n    }\n    this.itemKeys = Object.keys(items);\n    return items;\n  }\n  render() {\n    const {\n      selectedInstances,\n      selectedInstanceItems\n    } = store.instance;\n    const selectedInstanceItem = selectedInstanceItems.length > 0 ? selectedInstanceItems[0] : null;\n    let selectedInstance = null;\n    if (selectedInstanceItem) {\n      selectedInstance = selectedInstanceItem.instance;\n    } else if (selectedInstances.length > 0) {\n      selectedInstance = selectedInstances[0];\n    }\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frame-control\",\n      style: {\n        height: this.framesHeight + actionsContainerHeight\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frame-actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }\n    }, selectedInstance && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"label-dot\",\n      style: {\n        backgroundColor: selectedInstance.categoryRef.displayColor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }\n    }), selectedInstance.label)), /*#__PURE__*/React.createElement(FrameActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frames\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frame-items-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frame-scaler\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frame-action-icon\",\n      onClick: () => this.updateFrameCountIndex(this.visibleFramesIndex - 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Minus, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        flex: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Slider, {\n      tooltipVisible: false,\n      step: 1,\n      min: this.visibleFramesIndexArr[0],\n      max: this.visibleFramesIndexArr[this.visibleFramesIndexArr.length - 1],\n      value: this.visibleFramesIndex,\n      onChange: this.updateFrameCountIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frame-action-icon\",\n      onClick: () => this.updateFrameCountIndex(this.visibleFramesIndex + 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Plus, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.itemsContainer,\n      className: \"frame-items\",\n      style: {\n        height: this.framesHeight - 44\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 13\n      }\n    }, this.itemKeys.map(itemKey => /*#__PURE__*/React.createElement(ItemLabel, {\n      key: itemKey,\n      itemKey: itemKey,\n      separator: itemKeySeparator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frame-steps\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.framesContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 13\n      }\n    }))));\n  }\n}\nexport default observer(FrameControl);","map":{"version":3,"names":["React","makeObservable","observable","action","reaction","observer","Slider","hexToRgba","FrameActions","ItemLabel","FramesRenderer","EventAction","Minus","Plus","store","ReviewResult","itemKeySeparator","defaultFrameColor","actionsContainerHeight","getRGBAColor","category","alpha","displayColor","ontology","getCategory","getFrameColor","instanceItem","camera","frameColor","cameraData","cameras","Object","values","frames","forEach","frameIndex","result","review","getReviewForInstanceItem","REJECT","isRework","APPROVE","SUSPEND","FramesMode","FrameControl","Component","constructor","props","reactionDisposers","framesRenderer","framesContainer","createRef","itemsContainer","framesMode","DEFAULT","framesHeight","visibleFramesIndex","visibleFramesIndexArr","itemKeys","updateVisibleFrames","currentIndex","indexArr","updateCurrentFrame","itemIndex","itemKey","instanceId","instanceItemId","split","instance","getInstanceById","item","items","selectInstanceItem","isSingle","frame","isSingleCamera","selectInstance","setFrame","updateFrameCountIndex","v","Math","min","max","length","currentRangeIndex","getItems","push","currentFrame","selectedInstanceItems","selectedInstances","undo","pointer","lastStoreId","config","reviewMode","instances","storeId","prevItems","prevInstances","prevPointer","prevStoreId","prevReviewMode","selectedChanged","some","i","indexOf","componentDidMount","current","frameCount","on","VISIBLE_FRAMES_UPDATE","CURRENT_FRAME_CHANGE","componentWillUnmount","removeEventListeners","off","disposer","currentCamera","selectedInstanceItem","selectedInstance","id","frameStatus","color","_selectedInstanceItem","key","join","categoryItemRef","showCards","selected","map","reduce","acc","curr","global","keys","render","createElement","className","style","height","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","categoryRef","label","onClick","flex","tooltipVisible","step","value","onChange","ref","separator"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking2/components/frames/FrameControl.tsx"],"sourcesContent":["import React from 'react';\nimport { makeObservable, observable, action, reaction, IReactionDisposer } from 'mobx';\nimport { observer } from 'mobx-react';\nimport { Slider } from 'antd';\nimport hexToRgba from 'hex-to-rgba';\nimport FrameActions from './FrameActions';\nimport ItemLabel from './ItemLabel';\nimport FramesRenderer, { FrameItem, EventAction } from '../../../../libs/FramesRenderer';\nimport { Minus, Plus } from '../../../common/icons';\nimport Instance from '../../model/Instance';\nimport InstanceItem from '../../model/InstanceItem';\nimport store from '../../store/RootStore';\nimport { ReviewResult } from '../../types';\nimport './FrameControl.scss';\n\nconst itemKeySeparator = '|S|';\nconst defaultFrameColor = '#5C5F6B';\nconst actionsContainerHeight = 40;\nfunction getRGBAColor(category: string, alpha = 0.2) {\n  const { displayColor } = store.ontology.getCategory(category) || {};\n  if (displayColor) {\n    return hexToRgba(displayColor, alpha);\n  }\n  return defaultFrameColor;\n}\nfunction getFrameColor(instanceItem: InstanceItem, camera: string) {\n  const frameColor: { [frameIndex: number]: string } = {};\n  const cameraData = instanceItem.cameras[camera];\n  if (cameraData) {\n    Object.values(cameraData.frames).forEach(({ frameIndex }) => {\n      const result = store.review.getReviewForInstanceItem(instanceItem, camera, frameIndex);\n      if (result) {\n        if (result === ReviewResult.REJECT) {\n          frameColor[frameIndex] = '#9C4434';\n        } else if (!store.isRework) {\n          if (result === ReviewResult.APPROVE) {\n            frameColor[frameIndex] = '#3E6F45';\n          } else if (result === ReviewResult.SUSPEND) {\n            frameColor[frameIndex] = '#A28900';\n          }\n        }\n      }\n    });\n  }\n  return frameColor;\n};\n\nenum FramesMode {\n  DEFAULT = 'default',\n}\n\nclass FrameControl extends React.Component {\n  reactionDisposers: IReactionDisposer[] = [];\n\n  framesRenderer: FramesRenderer | null = null;\n\n  framesContainer = React.createRef<HTMLDivElement>();\n\n  itemsContainer = React.createRef<HTMLDivElement>();\n\n  framesMode = FramesMode.DEFAULT;\n\n  framesHeight = 64;\n\n  visibleFramesIndex = 0;\n\n  visibleFramesIndexArr: number[] = [];\n\n  itemKeys: string[] = [];\n\n  constructor(props: any) {\n    super(props);\n\n    makeObservable(this, {\n      framesMode: observable,\n      visibleFramesIndex: observable,\n      visibleFramesIndexArr: observable,\n      itemKeys: observable,\n      getItems: action,\n      updateVisibleFrames: action,\n      updateFrameCountIndex: action,\n    });\n\n    // when current frame changes\n    this.reactionDisposers.push(reaction(\n      () => store.frame.currentFrame,\n      () => {\n        if (this.framesRenderer) {\n          this.framesRenderer.currentFrame = store.frame.currentFrame;\n        }\n      },\n    ));\n\n    // when instance changes, or data changes\n    this.reactionDisposers.push(reaction(\n      () => [\n        store.instance.selectedInstanceItems,\n        store.instance.selectedInstances,\n        store.undo.pointer,\n        store.undo.lastStoreId,\n        store.config.reviewMode,\n      ],\n      (\n        [items, instances, pointer, storeId, reviewMode],\n        [prevItems, prevInstances, prevPointer, prevStoreId, prevReviewMode]\n      ) => {\n        const selectedChanged = (items as InstanceItem[]).length !== (prevItems as InstanceItem[]).length\n          || (items as InstanceItem[]).some((i) => (prevItems as InstanceItem[]).indexOf(i) < 0)\n          || (instances as Instance[]).length !== (prevInstances as Instance[]).length\n          || (instances as Instance[]).some((i) => (prevInstances as Instance[]).indexOf(i) < 0);\n        if (this.framesRenderer && (\n          selectedChanged ||\n          pointer !== prevPointer ||\n          storeId !== prevStoreId ||\n          reviewMode !== prevReviewMode\n        )) {\n          this.framesRenderer.items = this.getItems();\n        }\n      },\n    ));\n  }\n\n  componentDidMount() {\n    if (this.framesContainer.current) {\n      this.framesRenderer = new FramesRenderer(this.framesContainer.current, store.frame.frameCount);\n      this.framesRenderer.on(EventAction.VISIBLE_FRAMES_UPDATE, this.updateVisibleFrames);\n      this.framesRenderer.on(EventAction.CURRENT_FRAME_CHANGE, this.updateCurrentFrame);\n      this.framesRenderer.items = this.getItems();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.framesRenderer) {\n      this.framesRenderer.removeEventListeners();\n      this.framesRenderer.off(EventAction.VISIBLE_FRAMES_UPDATE, this.updateVisibleFrames);\n      this.framesRenderer.off(EventAction.CURRENT_FRAME_CHANGE, this.updateCurrentFrame);\n    }\n    this.reactionDisposers.forEach((disposer) => disposer());\n  }\n\n  getItems() {\n    const items: { [id: string]: FrameItem } = {};\n\n    const { selectedInstances, selectedInstanceItems } = store.instance;\n    const { currentCamera } = store.frame;\n\n    if (selectedInstances.length > 0) {\n      const selectedInstanceItem = selectedInstanceItems[0];\n      const selectedInstance = selectedInstanceItem ? selectedInstanceItem.instance : selectedInstances[0];\n      if (!selectedInstanceItem) {\n        // only instance selected\n        items[selectedInstance.id] = {\n          frameStatus: selectedInstance.frameStatus,\n          color: getRGBAColor(selectedInstance.category),\n        };\n      } else {\n        // instance item in current frame selected\n        const key = [selectedInstance.id, selectedInstanceItem.id, currentCamera].join(itemKeySeparator);\n        items[key] = {\n          frameStatus: selectedInstanceItem.cameras[currentCamera]?.frameStatus,\n          frameColor: getFrameColor(selectedInstanceItem, currentCamera),\n          color: hexToRgba(selectedInstanceItem.categoryItemRef.displayColor || defaultFrameColor, 0.2),\n          showCards: true,\n          selected: true,\n        };\n      }\n    } else if (this.framesMode === FramesMode.DEFAULT) {\n      const frameStatus = Object.values(store.instance.instances)\n        .map((i) => i.frameStatus)\n        .reduce((acc, curr) => ({ ...acc, ...curr }), {});\n      items.global = {\n        frameStatus,\n        color: defaultFrameColor,\n        selected: true,\n      };\n    }\n\n    this.itemKeys = Object.keys(items);\n    return items;\n  }\n\n  updateVisibleFrames = (currentIndex: number, indexArr?: number[]) => {\n    this.visibleFramesIndex = currentIndex;\n    if (indexArr) {\n      this.visibleFramesIndexArr = indexArr;\n    }\n  };\n\n  updateCurrentFrame = (frameIndex: number, itemIndex: number) => {\n    const itemKey = this.itemKeys[itemIndex];\n    if (itemKey) {\n      const [instanceId, instanceItemId] = itemKey.split(itemKeySeparator);\n      const instance = store.instance.getInstanceById(instanceId);\n      if (instance) {\n        const item = instance.items[instanceItemId];\n        if (item) {\n          store.instance.selectInstanceItem(item);\n        } else {\n          const isSingle = instance.isSingle && store.frame.isSingleCamera;\n          if (!isSingle) {\n            store.instance.selectInstanceItem(null);\n          }\n          store.instance.selectInstance(instance);\n        }\n      }\n    }\n    store.frame.setFrame(frameIndex);\n  };\n\n  updateFrameCountIndex = (v: number) => {\n    this.visibleFramesIndex = Math.min(\n      Math.max(v, this.visibleFramesIndexArr[0]),\n      this.visibleFramesIndexArr[this.visibleFramesIndexArr.length - 1],\n    );\n    if (this.framesRenderer) {\n      this.framesRenderer.currentRangeIndex = this.visibleFramesIndex;\n    }\n  };\n\n  render() {\n    const { selectedInstances, selectedInstanceItems } = store.instance;\n    const selectedInstanceItem = selectedInstanceItems.length > 0 ? selectedInstanceItems[0] : null;\n    let selectedInstance: Instance | null = null;\n    if (selectedInstanceItem) {\n      selectedInstance = selectedInstanceItem.instance;\n    } else if (selectedInstances.length > 0) {\n      selectedInstance = selectedInstances[0];\n    }\n    return (\n      <div\n        className=\"frame-control\"\n        style={{\n          height: this.framesHeight + actionsContainerHeight,\n        }}\n      >\n        <div className=\"frame-actions\">\n          <div>\n            {selectedInstance && (\n              <div className=\"label\">\n                <div\n                  className=\"label-dot\"\n                  style={{ backgroundColor: selectedInstance.categoryRef.displayColor }}\n                />\n                {selectedInstance.label}\n              </div>\n            )}\n          </div>\n          <FrameActions />\n          <div />\n        </div>\n        <div className=\"frames\">\n          <div className=\"frame-items-container\">\n            <div className=\"frame-scaler\">\n              <div\n                className=\"frame-action-icon\"\n                onClick={() => this.updateFrameCountIndex(this.visibleFramesIndex - 1)}\n              >\n                <Minus />\n              </div>\n              <div style={{ flex: 1 }}>\n                <Slider\n                  tooltipVisible={false}\n                  step={1}\n                  min={this.visibleFramesIndexArr[0]}\n                  max={this.visibleFramesIndexArr[this.visibleFramesIndexArr.length - 1]}\n                  value={this.visibleFramesIndex}\n                  onChange={this.updateFrameCountIndex}\n                />\n              </div>\n              <div\n                className=\"frame-action-icon\"\n                onClick={() => this.updateFrameCountIndex(this.visibleFramesIndex + 1)}\n              >\n                <Plus />\n              </div>\n            </div>\n            <div\n              ref={this.itemsContainer}\n              className=\"frame-items\"\n              style={{ height: this.framesHeight - 44 }}\n            >\n              {this.itemKeys.map((itemKey) => (\n                <ItemLabel\n                  key={itemKey}\n                  itemKey={itemKey}\n                  separator={itemKeySeparator}\n                />\n              ))}\n            </div>\n          </div>\n          <div className=\"frame-steps\">\n            <div ref={this.framesContainer} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default observer(FrameControl);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}