{"ast":null,"code":"export let CurveType = /*#__PURE__*/function (CurveType) {\n  CurveType[\"SPECTROGRAM\"] = \"spectrogram\";\n  CurveType[\"PITCH\"] = \"pitch\";\n  CurveType[\"FORMANT\"] = \"formant\";\n  CurveType[\"INTENSITY\"] = \"intensity\";\n  return CurveType;\n}({});\n;\n;\nexport const PraatAnnotationType = {\n  segment: 'IntervalTier',\n  timing: 'TextTier'\n};\nexport let AnnotationType = /*#__PURE__*/function (AnnotationType) {\n  AnnotationType[\"SEGMENT\"] = \"segment\";\n  AnnotationType[\"TIMING\"] = \"timing\";\n  return AnnotationType;\n}({});\n;\nexport let ValidationType = /*#__PURE__*/function (ValidationType) {\n  ValidationType[\"ATTR_EMPTY\"] = \"attr_empty\";\n  ValidationType[\"CUSTOM\"] = \"custom\";\n  ValidationType[\"QUALITY\"] = \"quality\";\n  return ValidationType;\n}({});\nexport let ReviewResult = /*#__PURE__*/function (ReviewResult) {\n  ReviewResult[\"APPROVE\"] = \"approve\";\n  ReviewResult[\"REJECT\"] = \"reject\";\n  ReviewResult[\"SUSPEND\"] = \"suspend\";\n  return ReviewResult;\n}({});\nexport let ReviewColor = /*#__PURE__*/function (ReviewColor) {\n  ReviewColor[ReviewColor[\"APPROVE\"] = 5424154] = \"APPROVE\";\n  ReviewColor[ReviewColor[\"APPROVE_BG\"] = 13560779] = \"APPROVE_BG\";\n  ReviewColor[ReviewColor[\"REJECT\"] = 14435876] = \"REJECT\";\n  ReviewColor[ReviewColor[\"REJECT_BG\"] = 15653335] = \"REJECT_BG\";\n  ReviewColor[ReviewColor[\"SUSPEND\"] = 16421140] = \"SUSPEND\";\n  ReviewColor[ReviewColor[\"SUSPEND_BG\"] = 16706000] = \"SUSPEND_BG\";\n  return ReviewColor;\n}({});\nexport let Align = /*#__PURE__*/function (Align) {\n  Align[\"RIGHT\"] = \"right\";\n  Align[\"LEFT\"] = \"left\";\n  Align[\"CENTER\"] = \"center\";\n  return Align;\n}({});\nexport let MoveType = /*#__PURE__*/function (MoveType) {\n  MoveType[\"SINGLE\"] = \"single\";\n  MoveType[\"MULTIPLE\"] = \"multiple\";\n  return MoveType;\n}({});\nexport let UpdateType = /*#__PURE__*/function (UpdateType) {\n  UpdateType[\"INIT\"] = \"init\";\n  UpdateType[\"MODIFY\"] = \"modify\";\n  UpdateType[\"UNDOREDO\"] = \"undoredo\";\n  return UpdateType;\n}({});\nexport let Style = /*#__PURE__*/function (Style) {\n  Style[\"STROKE\"] = \"#0060FF\";\n  Style[\"FILL\"] = \"#363B44\";\n  Style[\"ACTIVE\"] = \"#0060FF\";\n  Style[\"PITCH\"] = \"#0060FF\";\n  Style[\"INTENSITY\"] = \"#4bf506\";\n  Style[Style[\"FONTSIZE\"] = 12] = \"FONTSIZE\";\n  Style[Style[\"DEFAULT_ALPHA\"] = 0.2] = \"DEFAULT_ALPHA\";\n  return Style;\n}({});\n;","map":{"version":3,"names":["CurveType","PraatAnnotationType","segment","timing","AnnotationType","ValidationType","ReviewResult","ReviewColor","Align","MoveType","UpdateType","Style"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/phonetic-transcription/types.ts"],"sourcesContent":["import { Field, Condition, Effect, Rule, FieldControlType, FieldOption } from '@appen/easy-form/es/types';\nimport JobProxy from '../../libs/JobProxy';\n\nexport enum CurveType {\n  SPECTROGRAM = 'spectrogram',\n  PITCH = 'pitch',\n  FORMANT = 'formant',\n  INTENSITY = 'intensity',\n}\nexport interface Ontology {\n  key?: string;\n  class_name: string;\n  display_name?: string;\n  display_color: string;\n  description?: string;\n  type: AnnotationType;\n};\n\nexport interface Payload {\n  locale?: string;\n  issue_types?: string;\n  base_url?: string;\n  review_from?: string;\n  custom_check?: string;\n  submit_check?: string | boolean;\n  check_missing_character?: string | boolean;\n  jobProxy: JobProxy;\n  ontology: Ontology[];\n  reference: string;\n  audio: string;\n  label_config?: string;\n};\n\nexport const PraatAnnotationType: {[key: string]: string} = {\n  segment: 'IntervalTier',\n  timing: 'TextTier',\n};\n\nexport enum AnnotationType {\n  SEGMENT = 'segment',\n  TIMING = 'timing',\n};\nexport interface Category {\n  className: string;\n  displayName: string;\n  displayColor: string;\n  type: AnnotationType,\n  labelConfig?: LabelConfig;\n}\n\nexport interface LabelConfig {\n  fields: Field[];\n  conditions?: Condition[];\n  effects?: Effect[];\n  rules?: Rule[];\n}\n\nexport interface FieldConfig {\n  name: string;\n  type: FieldControlType;\n  label?: string;\n  options?: FieldOption[];\n}\n\nexport enum ValidationType {\n  ATTR_EMPTY = 'attr_empty',\n  CUSTOM = 'custom',\n  QUALITY = 'quality',\n}\n\nexport interface ReviewData {\n  result: ReviewResult;\n  type?: string[];\n  comment?: string;\n}\n\nexport interface Review extends ReviewData {\n  instanceId: string; // related instance\n  validationType?: ValidationType\n}\n\nexport enum ReviewResult {\n  APPROVE = 'approve',\n  REJECT = 'reject',\n  SUSPEND = 'suspend',\n}\n\nexport enum ReviewColor {\n  APPROVE = 0x52C41A,\n  APPROVE_BG = 0xCEEBCB,\n  REJECT = 0xDC4624,\n  REJECT_BG = 0xEED9D7,\n  SUSPEND = 0xFA9114,\n  SUSPEND_BG = 0xFEE9D0,\n}\n\nexport interface Element {\n  id: string;\n  category: string;\n  start: number;\n  end?: number;\n  text?: string;\n}\n\nexport interface Statistic {\n  elements: Element[];\n  categories: string[];\n  shapes: Set<unknown>;\n  summary: { [key: string]: Summary };\n  duration: number; // file duration\n  approvedWordCount: number;\n  rejectedWordCount: number;\n  approvedCharCount: number;\n  rejectedCharCount: number;\n  wordCount: number;\n  charCount: number;\n}\n\nexport interface Summary {\n  ids: string[];\n  category: string;\n  shape: AnnotationType;\n  wordCount: number;\n  charCount: number;\n}\n\nexport interface DisplayBuffer {\n  start: number;\n  end: number;\n  precent: number;\n}\nexport interface Tier {\n  id: string;\n  category: string;\n}\n\nexport interface InstanceItem {\n  id: string;\n  start: number;\n  end?: number;\n  shapeType: AnnotationType;\n  category: string;\n  text?: string;\n}\nexport interface Instance {\n  id: string;\n  start: number;\n  end?: number;\n  shapeType: AnnotationType;\n  category: string;\n  categoryIndex: number;\n  text?: string;\n}\n\nexport enum Align {\n  RIGHT = 'right',\n  LEFT = 'left',\n  CENTER = 'center',\n}\n\nexport enum MoveType {\n  SINGLE = 'single',\n  MULTIPLE = 'multiple',\n}\n\nexport enum UpdateType {\n  INIT = 'init',\n  MODIFY = 'modify',\n  UNDOREDO = 'undoredo',\n}\n\nexport enum Style {\n  STROKE = '#0060FF',\n  FILL = '#363B44',\n  ACTIVE = '#0060FF',\n  PITCH = '#0060FF',\n  INTENSITY = '#4bf506',\n  FONTSIZE = 12,\n  DEFAULT_ALPHA = 0.2,\n};\n"],"mappings":"AAGA,WAAYA,SAAS,0BAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAAA,OAATA,SAAS;AAAA;AAapB;AAeA;AAED,OAAO,MAAMC,mBAA4C,GAAG;EAC1DC,OAAO,EAAE,cAAc;EACvBC,MAAM,EAAE;AACV,CAAC;AAED,WAAYC,cAAc,0BAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAA,OAAdA,cAAc;AAAA;AAGzB;AAuBD,WAAYC,cAAc,0BAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAA,OAAdA,cAAc;AAAA;AAiB1B,WAAYC,YAAY,0BAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAA,OAAZA,YAAY;AAAA;AAMxB,WAAYC,WAAW,0BAAXA,WAAW;EAAXA,WAAW,CAAXA,WAAW;EAAXA,WAAW,CAAXA,WAAW;EAAXA,WAAW,CAAXA,WAAW;EAAXA,WAAW,CAAXA,WAAW;EAAXA,WAAW,CAAXA,WAAW;EAAXA,WAAW,CAAXA,WAAW;EAAA,OAAXA,WAAW;AAAA;AAmEvB,WAAYC,KAAK,0BAALA,KAAK;EAALA,KAAK;EAALA,KAAK;EAALA,KAAK;EAAA,OAALA,KAAK;AAAA;AAMjB,WAAYC,QAAQ,0BAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAAA,OAARA,QAAQ;AAAA;AAKpB,WAAYC,UAAU,0BAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAA,OAAVA,UAAU;AAAA;AAMtB,WAAYC,KAAK,0BAALA,KAAK;EAALA,KAAK;EAALA,KAAK;EAALA,KAAK;EAALA,KAAK;EAALA,KAAK;EAALA,KAAK,CAALA,KAAK;EAALA,KAAK,CAALA,KAAK;EAAA,OAALA,KAAK;AAAA;AAQhB","ignoreList":[]},"metadata":{},"sourceType":"module"}