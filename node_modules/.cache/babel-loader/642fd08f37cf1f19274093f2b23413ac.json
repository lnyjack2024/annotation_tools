{"ast":null,"code":"import { Point } from 'pixi.js';\nimport Cuboid from './Cuboid';\nimport { ShapeType } from './types';\n\n/**\n * Two side cuboid shape\n * @class\n */\nexport default class TwoSidesCuboid extends Cuboid {\n  /**\n   * get front face x\n   * @getter\n   */\n  get x1() {\n    return this._x1 || 0;\n  }\n\n  /**\n   * set front face x\n   * @setter\n   */\n  set x1(x1) {\n    this._x1 = x1;\n    this.normalize();\n  }\n\n  /**\n   * get front face y\n   * @getter\n   */\n  get y1() {\n    return this._y1 || 0;\n  }\n\n  /**\n   * set front face y\n   * @setter\n   */\n  set y1(y1) {\n    this._y1 = y1;\n    this.normalize();\n  }\n\n  /**\n   * get front face width\n   * @getter\n   */\n  get w1() {\n    return this._w1 || 0;\n  }\n\n  /**\n   * set front face width\n   * @setter\n   */\n  set w1(w1) {\n    this._w1 = w1;\n    this.normalize();\n  }\n\n  /**\n   * get front face height\n   * @getter\n   */\n  get h1() {\n    return this._h1 || 0;\n  }\n\n  /**\n   * set front face height\n   * @setter\n   */\n  set h1(h1) {\n    this._h1 = h1;\n    this.normalize();\n  }\n\n  /**\n   * get back face x\n   * @getter\n   */\n  get x2() {\n    return this._x2 || 0;\n  }\n\n  /**\n   * set back face x\n   * @setter\n   */\n  set x2(x2) {\n    this._x2 = x2;\n    this.normalize();\n  }\n\n  /**\n   * get back face y\n   * @getter\n   */\n  get y2() {\n    return this._y2 || 0;\n  }\n\n  /**\n   * set back face y\n   * @setter\n   */\n  set y2(y2) {\n    this._y2 = y2;\n    this.normalize();\n  }\n\n  /**\n   * get back face width\n   * @getter\n   */\n  get w2() {\n    return this._w2 || 0;\n  }\n\n  /**\n   * set back face width\n   * @setter\n   */\n  set w2(w2) {\n    this._w2 = w2;\n    this.normalize();\n  }\n\n  /**\n   * get back face height\n   * @getter\n   */\n  get h2() {\n    return this._h2 || 0;\n  }\n\n  /**\n   * set back face height\n   * @setter\n   */\n  set h2(h2) {\n    this._h2 = h2;\n    this.normalize();\n  }\n  constructor(options) {\n    super(options);\n    this.shapeType = ShapeType.TWO_SIDES_CUBOID;\n    /**\n     * is mouse down\n     * @private\n     */\n    this._isDown = false;\n    /**\n     * mouse up count\n     * @private\n     */\n    this._upCount = 0;\n    const {\n      front,\n      back\n    } = options;\n    const {\n      x: x1,\n      y: y1,\n      width: w1,\n      height: h1\n    } = front || {};\n    const {\n      x: x2,\n      y: y2,\n      width: w2,\n      height: h2\n    } = back || {};\n    if (x1 !== undefined && y1 !== undefined && w1 !== undefined && h1 !== undefined) {\n      this._x1 = x1;\n      this._y1 = y1;\n      this._w1 = w1;\n      this._h1 = h1;\n      if (x2 !== undefined && y2 !== undefined && w2 !== undefined && h2 !== undefined) {\n        this._x2 = x2;\n        this._y2 = y2;\n        this._w2 = w2;\n        this._h2 = h2;\n        this.normalize();\n      }\n    }\n  }\n\n  /**\n   * drag to create\n   */\n  create() {\n    const mouseMove = event => {\n      if (this._isDown) {\n        const point = this._mapScreenToStagePosition(event.clientX, event.clientY);\n        const localPoint = this._mapStageToLocalPosition(point);\n        this._draw(localPoint);\n      }\n    };\n    const mouseDown = event => {\n      if (event.button === 0) {\n        this._isDown = true;\n      }\n    };\n    const mouseUp = () => {\n      this._isDown = false;\n      this._upCount += 1;\n      if (this._upCount > 1) {\n        // finish\n        this.normalize();\n        this._finish();\n        document.removeEventListener('mousemove', mouseMove, false);\n        document.removeEventListener('mousedown', mouseDown, false);\n        document.removeEventListener('mouseup', mouseUp, false);\n      }\n    };\n    document.addEventListener('mousemove', mouseMove, false);\n    document.addEventListener('mousedown', mouseDown, false);\n    document.addEventListener('mouseup', mouseUp, false);\n    this._finished = false;\n    this._isDown = true; // create start is mouse down\n  }\n\n  /**\n   * draw shape\n   */\n  drawShape() {\n    this.instance.clear();\n    if (this._finished || this._upCount === 1) {\n      // back face\n      this._drawFace(this.x2, this.y2, this.w2, this.h2);\n      // 4 sides\n      this._drawSides();\n    }\n    // front face\n    this._drawFace(this.x1, this.y1, this.w1, this.h1);\n    if (this._finished) {\n      this.drawShapeLabel();\n      this.attachControlPoints();\n    }\n  }\n\n  /**\n   * draw shape by the position\n   * @protected\n   * @param point mouse position\n   */\n  _draw(point) {\n    const p = this._keepPointInBounds(point);\n    if (this._upCount === 0) {\n      // front\n      if (this._x1 === undefined || this._y1 === undefined) {\n        this._x1 = p.x;\n        this._y1 = p.y;\n      } else {\n        this._w1 = p.x - this._x1;\n        this._h1 = p.y - this._y1;\n      }\n    } else if (this._upCount === 1) {\n      // back\n      if (this._x2 === undefined || this._y2 === undefined) {\n        this._x2 = p.x;\n        this._y2 = p.y;\n      } else {\n        this._w2 = p.x - this._x2;\n        this._h2 = p.y - this._y2;\n      }\n    }\n    this.drawShape();\n  }\n\n  /**\n   * update cuboid by dragging front face edge\n   * @param index edge index, top -> right -> bottom -> left\n   * @param x new position x\n   * @param y new position y\n   */\n  _updateByBarPosition(index, x, y) {\n    const position = this._keepPointInBounds(new Point(x, y));\n    const offsetX1 = position.x - this.x1;\n    const offsetY1 = position.y - this.y1;\n    const offsetX2 = position.x - this.x2;\n    const offsetY2 = position.y - this.y2;\n    switch (index) {\n      case 0:\n        this._y1 = position.y;\n        this._h1 = this.h1 - offsetY1;\n        break;\n      case 1:\n        this._w1 = offsetX1;\n        break;\n      case 2:\n        this._h1 = offsetY1;\n        break;\n      case 3:\n        this._x1 = position.x;\n        this._w1 = this.w1 - offsetX1;\n        break;\n      case 4:\n        this._y2 = position.y;\n        this._h2 = this.h2 - offsetY2;\n        break;\n      case 5:\n        this._w2 = offsetX2;\n        break;\n      case 6:\n        this._h2 = offsetY2;\n        break;\n      case 7:\n        this._x2 = position.x;\n        this._w2 = this.w2 - offsetX2;\n        break;\n      default:\n    }\n    this.drawShape();\n    this._resizing();\n  }\n\n  /**\n   * update cuboid by dragging point\n   * @protected\n   * @param index point index\n   * @param x new position x\n   * @param y new position y\n   */\n  _updateByPointPosition(index, x, y) {\n    const position = this._keepPointInBounds(new Point(x, y));\n    const points = this.getPoints();\n    const offsetX = position.x - points[index].x;\n    const offsetY = position.y - points[index].y;\n    switch (index) {\n      case 0:\n        this._x1 = position.x;\n        this._y1 = position.y;\n        this._w1 = this.w1 - offsetX;\n        this._h1 = this.h1 - offsetY;\n        break;\n      case 1:\n        this._y1 = position.y;\n        this._w1 = this.w1 + offsetX;\n        this._h1 = this.h1 - offsetY;\n        break;\n      case 2:\n        this._w1 = this.w1 + offsetX;\n        this._h1 = this.h1 + offsetY;\n        break;\n      case 3:\n        this._x1 = position.x;\n        this._w1 = this.w1 - offsetX;\n        this._h1 = this.h1 + offsetY;\n        break;\n      case 4:\n        this._x2 = position.x;\n        this._y2 = position.y;\n        this._w2 = this.w2 - offsetX;\n        this._h2 = this.h2 - offsetY;\n        break;\n      case 5:\n        this._y2 = position.y;\n        this._w2 = this.w2 + offsetX;\n        this._h2 = this.h2 - offsetY;\n        break;\n      case 6:\n        this._w2 = this.w2 + offsetX;\n        this._h2 = this.h2 + offsetY;\n        break;\n      case 7:\n        this._x2 = position.x;\n        this._w2 = this.w2 - offsetX;\n        this._h2 = this.h2 + offsetY;\n        break;\n      default:\n    }\n    this.drawShape();\n    this._resizing();\n  }\n\n  /**\n   * get edge points\n   */\n  getEdgePoints() {\n    const points = this.getPoints();\n    return points.map((point, index) => {\n      const nextIndex = Math.floor(index / 4) * 4 + (index + 1) % 4;\n      const nextPoint = points[nextIndex];\n      return {\n        x: (point.x + nextPoint.x) / 2,\n        y: (point.y + nextPoint.y) / 2\n      };\n    });\n  }\n}","map":{"version":3,"names":["Point","Cuboid","ShapeType","TwoSidesCuboid","x1","_x1","normalize","y1","_y1","w1","_w1","h1","_h1","x2","_x2","y2","_y2","w2","_w2","h2","_h2","constructor","options","shapeType","TWO_SIDES_CUBOID","_isDown","_upCount","front","back","x","y","width","height","undefined","create","mouseMove","event","point","_mapScreenToStagePosition","clientX","clientY","localPoint","_mapStageToLocalPosition","_draw","mouseDown","button","mouseUp","_finish","document","removeEventListener","addEventListener","_finished","drawShape","instance","clear","_drawFace","_drawSides","drawShapeLabel","attachControlPoints","p","_keepPointInBounds","_updateByBarPosition","index","position","offsetX1","offsetY1","offsetX2","offsetY2","_resizing","_updateByPointPosition","points","getPoints","offsetX","offsetY","getEdgePoints","map","nextIndex","Math","floor","nextPoint"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/common/shapes/TwoSidesCuboid.ts"],"sourcesContent":["import { Point } from 'pixi.js';\nimport Cuboid, { CuboidOptions } from './Cuboid';\nimport { ShapeType } from './types';\n\n/**\n * Two side cuboid shape\n * @class\n */\nexport default class TwoSidesCuboid extends Cuboid {\n  shapeType = ShapeType.TWO_SIDES_CUBOID;\n\n  /**\n   * is mouse down\n   * @private\n   */\n  private _isDown = false;\n\n  /**\n   * mouse up count\n   * @private\n   */\n  private _upCount = 0;\n\n  /**\n   * get front face x\n   * @getter\n   */\n  get x1() {\n    return this._x1 || 0;\n  }\n\n  /**\n   * set front face x\n   * @setter\n   */\n  set x1(x1: number) {\n    this._x1 = x1;\n    this.normalize();\n  }\n\n  /**\n   * get front face y\n   * @getter\n   */\n  get y1() {\n    return this._y1 || 0;\n  }\n\n  /**\n   * set front face y\n   * @setter\n   */\n  set y1(y1: number) {\n    this._y1 = y1;\n    this.normalize();\n  }\n\n  /**\n   * get front face width\n   * @getter\n   */\n  get w1() {\n    return this._w1 || 0;\n  }\n\n  /**\n   * set front face width\n   * @setter\n   */\n  set w1(w1: number) {\n    this._w1 = w1;\n    this.normalize();\n  }\n\n  /**\n   * get front face height\n   * @getter\n   */\n  get h1() {\n    return this._h1 || 0;\n  }\n\n  /**\n   * set front face height\n   * @setter\n   */\n  set h1(h1: number) {\n    this._h1 = h1;\n    this.normalize();\n  }\n\n  /**\n   * get back face x\n   * @getter\n   */\n  get x2() {\n    return this._x2 || 0;\n  }\n\n  /**\n   * set back face x\n   * @setter\n   */\n  set x2(x2: number) {\n    this._x2 = x2;\n    this.normalize();\n  }\n\n  /**\n   * get back face y\n   * @getter\n   */\n  get y2() {\n    return this._y2 || 0;\n  }\n\n  /**\n   * set back face y\n   * @setter\n   */\n  set y2(y2: number) {\n    this._y2 = y2;\n    this.normalize();\n  }\n\n  /**\n   * get back face width\n   * @getter\n   */\n  get w2() {\n    return this._w2 || 0;\n  }\n\n  /**\n   * set back face width\n   * @setter\n   */\n  set w2(w2: number) {\n    this._w2 = w2;\n    this.normalize();\n  }\n\n  /**\n   * get back face height\n   * @getter\n   */\n  get h2() {\n    return this._h2 || 0;\n  }\n\n  /**\n   * set back face height\n   * @setter\n   */\n  set h2(h2: number) {\n    this._h2 = h2;\n    this.normalize();\n  }\n\n  constructor(options: CuboidOptions) {\n    super(options);\n\n    const { front, back } = options;\n    const { x: x1, y: y1, width: w1, height: h1 } = front || {};\n    const { x: x2, y: y2, width: w2, height: h2 } = back || {};\n    if (x1 !== undefined && y1 !== undefined && w1 !== undefined && h1 !== undefined) {\n      this._x1 = x1;\n      this._y1 = y1;\n      this._w1 = w1;\n      this._h1 = h1;\n      if (x2 !== undefined && y2 !== undefined && w2 !== undefined && h2 !== undefined) {\n        this._x2 = x2;\n        this._y2 = y2;\n        this._w2 = w2;\n        this._h2 = h2;\n        this.normalize();\n      }\n    }\n  }\n\n  /**\n   * drag to create\n   */\n  create() {\n    const mouseMove = (event: MouseEvent) => {\n      if (this._isDown) {\n        const point = this._mapScreenToStagePosition(event.clientX, event.clientY);\n        const localPoint = this._mapStageToLocalPosition(point);\n        this._draw(localPoint);\n      }\n    };\n    const mouseDown = (event: MouseEvent) => {\n      if (event.button === 0) {\n        this._isDown = true;\n      }\n    };\n    const mouseUp = () => {\n      this._isDown = false;\n      this._upCount += 1;\n      if (this._upCount > 1) {\n        // finish\n        this.normalize();\n        this._finish();\n        document.removeEventListener('mousemove', mouseMove, false);\n        document.removeEventListener('mousedown', mouseDown, false);\n        document.removeEventListener('mouseup', mouseUp, false);\n      }\n    };\n\n    document.addEventListener('mousemove', mouseMove, false);\n    document.addEventListener('mousedown', mouseDown, false);\n    document.addEventListener('mouseup', mouseUp, false);\n    this._finished = false;\n    this._isDown = true; // create start is mouse down\n  }\n\n  /**\n   * draw shape\n   */\n  drawShape() {\n    this.instance.clear();\n    if (this._finished || this._upCount === 1) {\n      // back face\n      this._drawFace(this.x2, this.y2, this.w2, this.h2);\n      // 4 sides\n      this._drawSides();\n    }\n    // front face\n    this._drawFace(this.x1, this.y1, this.w1, this.h1);\n    if (this._finished) {\n      this.drawShapeLabel();\n      this.attachControlPoints();\n    }\n  }\n\n  /**\n   * draw shape by the position\n   * @protected\n   * @param point mouse position\n   */\n  protected _draw(point: Point) {\n    const p = this._keepPointInBounds(point);\n    if (this._upCount === 0) {\n      // front\n      if (this._x1 === undefined || this._y1 === undefined) {\n        this._x1 = p.x;\n        this._y1 = p.y;\n      } else {\n        this._w1 = p.x - this._x1;\n        this._h1 = p.y - this._y1;\n      }\n    } else if (this._upCount === 1) {\n      // back\n      if (this._x2 === undefined || this._y2 === undefined) {\n        this._x2 = p.x;\n        this._y2 = p.y;\n      } else {\n        this._w2 = p.x - this._x2;\n        this._h2 = p.y - this._y2;\n      }\n    }\n    this.drawShape();\n  }\n\n  /**\n   * update cuboid by dragging front face edge\n   * @param index edge index, top -> right -> bottom -> left\n   * @param x new position x\n   * @param y new position y\n   */\n  protected _updateByBarPosition(index: number, x: number, y: number) {\n    const position = this._keepPointInBounds(new Point(x, y));\n    const offsetX1 = position.x - this.x1;\n    const offsetY1 = position.y - this.y1;\n    const offsetX2 = position.x - this.x2;\n    const offsetY2 = position.y - this.y2;\n    switch (index) {\n      case 0:\n        this._y1 = position.y;\n        this._h1 = this.h1 - offsetY1;\n        break;\n      case 1:\n        this._w1 = offsetX1;\n        break;\n      case 2:\n        this._h1 = offsetY1;\n        break;\n      case 3:\n        this._x1 = position.x;\n        this._w1 = this.w1 - offsetX1;\n        break;\n      case 4:\n        this._y2 = position.y;\n        this._h2 = this.h2 - offsetY2;\n        break;\n      case 5:\n        this._w2 = offsetX2;\n        break;\n      case 6:\n        this._h2 = offsetY2;\n        break;\n      case 7:\n        this._x2 = position.x;\n        this._w2 = this.w2 - offsetX2;\n        break;\n      default:\n    }\n    this.drawShape();\n    this._resizing();\n  }\n\n  /**\n   * update cuboid by dragging point\n   * @protected\n   * @param index point index\n   * @param x new position x\n   * @param y new position y\n   */\n  protected _updateByPointPosition(index: number, x: number, y: number) {\n    const position = this._keepPointInBounds(new Point(x, y));\n    const points = this.getPoints();\n    const offsetX = position.x - points[index].x;\n    const offsetY = position.y - points[index].y;\n    switch (index) {\n      case 0:\n        this._x1 = position.x;\n        this._y1 = position.y;\n        this._w1 = this.w1 - offsetX;\n        this._h1 = this.h1 - offsetY;\n        break;\n      case 1:\n        this._y1 = position.y;\n        this._w1 = this.w1 + offsetX;\n        this._h1 = this.h1 - offsetY;\n        break;\n      case 2:\n        this._w1 = this.w1 + offsetX;\n        this._h1 = this.h1 + offsetY;\n        break;\n      case 3:\n        this._x1 = position.x;\n        this._w1 = this.w1 - offsetX;\n        this._h1 = this.h1 + offsetY;\n        break;\n      case 4:\n        this._x2 = position.x;\n        this._y2 = position.y;\n        this._w2 = this.w2 - offsetX;\n        this._h2 = this.h2 - offsetY;\n        break;\n      case 5:\n        this._y2 = position.y;\n        this._w2 = this.w2 + offsetX;\n        this._h2 = this.h2 - offsetY;\n        break;\n      case 6:\n        this._w2 = this.w2 + offsetX;\n        this._h2 = this.h2 + offsetY;\n        break;\n      case 7:\n        this._x2 = position.x;\n        this._w2 = this.w2 - offsetX;\n        this._h2 = this.h2 + offsetY;\n        break;\n      default:\n    }\n    this.drawShape();\n    this._resizing();\n  }\n\n  /**\n   * get edge points\n   */\n  getEdgePoints() {\n    const points = this.getPoints();\n    return points.map((point, index) => {\n      const nextIndex = Math.floor(index / 4) * 4 + ((index + 1) % 4);\n      const nextPoint = points[nextIndex];\n      return {\n        x: (point.x + nextPoint.x) / 2,\n        y: (point.y + nextPoint.y) / 2,\n      };\n    });\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}