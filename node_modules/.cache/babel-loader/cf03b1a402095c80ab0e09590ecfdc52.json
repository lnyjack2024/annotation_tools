{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking/components/FrameControl.tsx\";\nimport React from 'react';\nimport { Slider } from 'antd';\nimport cx from 'classnames';\nimport { isEqual } from 'lodash';\nimport hexToRgba from 'hex-to-rgba';\nimport FrameActions from './FrameActions';\nimport FrameValidation from './FrameValidation';\nimport FramesRenderer, { EventAction } from '../../../libs/FramesRenderer';\nimport { Minus, Plus, Up, SortAsc } from '../../common/icons';\nimport i18n from '../locales';\nimport { ReviewResult } from '../types';\nimport 'antd/es/slider/style/index.css';\nimport './FrameControl.scss';\nconst frameLabelHeight = 20;\nconst frameLabelColor = '#343846';\nconst frameLabelSelectedColor = '#292C38';\nconst actionsContainerHeight = 48;\nexport default class FrameControl extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.framesRenderer = null;\n    this.framesContainer = React.createRef();\n    this.itemsContainer = React.createRef();\n    this.state = {\n      framesCollapsed: true,\n      framesHeight: 56,\n      visibleFramesIndex: 0,\n      visibleFramesIndexArr: []\n    };\n    this.setFrame = frameIndex => {\n      this.props.setFrame(frameIndex);\n    };\n    this.updateHeight = height => {\n      this.setState({\n        framesHeight: height\n      });\n      this.props.onHeightChange(height + actionsContainerHeight);\n    };\n    this.updateVisibleFrames = (currentIndex, indexArr) => {\n      this.setState(stat => ({\n        ...stat,\n        visibleFramesIndex: currentIndex,\n        ...(indexArr && {\n          visibleFramesIndexArr: indexArr\n        })\n      }));\n    };\n    this.updateFrameCountIndex = v => {\n      const {\n        visibleFramesIndexArr\n      } = this.state;\n      const visibleFramesIndex = Math.min(Math.max(v, visibleFramesIndexArr[0]), visibleFramesIndexArr[visibleFramesIndexArr.length - 1]);\n      this.setState({\n        visibleFramesIndex\n      });\n      if (this.framesRenderer) {\n        this.framesRenderer.currentRangeIndex = visibleFramesIndex;\n      }\n    };\n    this.updateItemsScroll = top => {\n      if (this.itemsContainer.current) {\n        this.itemsContainer.current.scroll({\n          top\n        });\n      }\n    };\n    this.onItemsScroll = e => {\n      if (this.framesRenderer) {\n        this.framesRenderer.itemsOffset = e.target.scrollTop;\n      }\n    };\n    this.toggleCollapse = () => {\n      if (!this.isEmpty) {\n        this.setState(stat => ({\n          framesCollapsed: !stat.framesCollapsed\n        }), () => {\n          // update renderer\n          if (this.framesRenderer) {\n            this.framesRenderer.scrollable = !this.state.framesCollapsed;\n            this.framesRenderer.items = this.getItems();\n          }\n        });\n      }\n    };\n  }\n  get isEmpty() {\n    const {\n      categoryInstancesMap\n    } = this.props;\n    return Object.values(categoryInstancesMap).every(categoryInstances => Object.keys(categoryInstances).length === 0);\n  }\n  get allInstanceIds() {\n    const {\n      categoryInstancesMap,\n      instances\n    } = this.props;\n    const categories = Object.keys(categoryInstancesMap);\n    return Object.values(categoryInstancesMap).flatMap(categoryInstances => Object.keys(categoryInstances)).sort((a, b) => {\n      const instanceA = instances[a];\n      const instanceB = instances[b];\n      const instanceAFirstFrame = Number(Object.keys(instanceA.frames)[0]);\n      const instanceBFirstFrame = Number(Object.keys(instanceB.frames)[0]);\n      if (instanceAFirstFrame > instanceBFirstFrame) {\n        return 1;\n      }\n      if (instanceAFirstFrame < instanceBFirstFrame) {\n        return -1;\n      }\n      const instanceACategoryIndex = categories.indexOf(instanceA.category);\n      const instanceBCategoryIndex = categories.indexOf(instanceB.category);\n      if (instanceACategoryIndex > instanceBCategoryIndex) {\n        return 1;\n      }\n      if (instanceACategoryIndex < instanceBCategoryIndex) {\n        return -1;\n      }\n      return instanceA.number > instanceB.number ? 1 : -1;\n    });\n  }\n  componentDidMount() {\n    if (this.framesContainer.current) {\n      this.framesRenderer = new FramesRenderer(this.framesContainer.current, this.props.frameCount);\n      this.framesRenderer.on(EventAction.HEIGHT_CHANGE, this.updateHeight);\n      this.framesRenderer.on(EventAction.VISIBLE_FRAMES_UPDATE, this.updateVisibleFrames);\n      this.framesRenderer.on(EventAction.CURRENT_FRAME_CHANGE, this.setFrame);\n      this.framesRenderer.on(EventAction.ITEMS_OFFSET_CHANGE, this.updateItemsScroll);\n      this.framesRenderer.items = this.getItems();\n    }\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.currentFrame !== this.props.currentFrame) {\n      // current frame changes\n      if (this.framesRenderer) {\n        this.framesRenderer.currentFrame = this.props.currentFrame;\n      }\n    }\n    if (!isEqual(prevProps.invalidFrames, this.props.invalidFrames)) {\n      if (this.framesRenderer) {\n        this.framesRenderer.invalidFrames = this.props.invalidFrames;\n      }\n    }\n    if (prevProps.undoStackPointer !== this.props.undoStackPointer || prevProps.selectedInstance && !this.props.selectedInstance || !prevProps.selectedInstance && this.props.selectedInstance || prevProps.selectedInstance && this.props.selectedInstance && prevProps.selectedInstance.id !== this.props.selectedInstance.id || !isEqual(prevProps.categoryInstancesMap, this.props.categoryInstancesMap) || !isEqual(prevProps.frameReviews, this.props.frameReviews)) {\n      // selected instance changes, or instances changes\n      if (this.framesRenderer) {\n        this.framesRenderer.items = this.getItems();\n      }\n    } else if (prevProps.selectedInstance && this.props.selectedInstance && prevProps.selectedInstance.id === this.props.selectedInstance.id && !isEqual(prevProps.selectedInstanceFrames, this.props.selectedInstanceFrames)) {\n      // selected instance frame status changes\n      if (this.framesRenderer) {\n        this.framesRenderer.updateItemFrameStatus(this.props.selectedInstance.id, this.props.selectedInstanceFrames);\n      }\n    }\n  }\n  componentWillUnmount() {\n    if (this.framesRenderer) {\n      this.framesRenderer.removeEventListeners();\n      this.framesRenderer.off(EventAction.HEIGHT_CHANGE, this.updateHeight);\n      this.framesRenderer.off(EventAction.VISIBLE_FRAMES_UPDATE, this.updateVisibleFrames);\n      this.framesRenderer.off(EventAction.CURRENT_FRAME_CHANGE, this.setFrame);\n      this.framesRenderer.off(EventAction.ITEMS_OFFSET_CHANGE, this.updateItemsScroll);\n    }\n  }\n  getRGBAColor(category, alpha = 0.2) {\n    const displayColor = (this.props.getCategory(category) || {}).display_color;\n    if (displayColor) {\n      return hexToRgba(displayColor, alpha);\n    }\n    return '#FFFFFF';\n  }\n  getItems() {\n    const {\n      frameReviews,\n      selectedInstance,\n      selectedInstanceFrames\n    } = this.props;\n    const frameColor = {};\n    if (selectedInstance) {\n      Object.values(selectedInstance.frames).forEach(({\n        frameIndex\n      }) => {\n        const review = (frameReviews[frameIndex] || {})[selectedInstance.id];\n        if (review === ReviewResult.APPROVE) {\n          frameColor[frameIndex] = '#3E6F45';\n        } else if (review === ReviewResult.REJECT) {\n          frameColor[frameIndex] = '#9C4434';\n        } else if (review === ReviewResult.SUSPEND) {\n          frameColor[frameIndex] = '#A28900';\n        }\n      });\n    }\n    if (this.state.framesCollapsed) {\n      if (selectedInstance) {\n        return {\n          [selectedInstance.id]: {\n            frameStatus: selectedInstanceFrames,\n            frameColor,\n            color: this.getRGBAColor(selectedInstance.category),\n            showCards: true,\n            selected: true\n          }\n        };\n      }\n      const frameStatus = {};\n      this.props.frameInstances.forEach((instances, index) => {\n        if (instances.length > 0) {\n          frameStatus[index] = false;\n        }\n      });\n      return {\n        global: {\n          frameStatus,\n          color: '#5C5F6B',\n          selected: true\n        }\n      };\n    }\n    const items = {};\n    this.allInstanceIds.forEach(instanceId => {\n      const instance = this.props.instances[instanceId];\n      items[instanceId] = {\n        frameStatus: {},\n        color: this.getRGBAColor(instance.category)\n      };\n    });\n    this.props.frameInstances.forEach((frameInstances, frameIndex) => {\n      frameInstances.forEach(instanceId => {\n        items[instanceId].frameStatus[frameIndex] = false;\n      });\n    });\n    if (selectedInstance) {\n      items[selectedInstance.id].frameStatus = selectedInstanceFrames;\n      items[selectedInstance.id].frameColor = frameColor;\n      items[selectedInstance.id].showCards = true;\n      items[selectedInstance.id].selected = true;\n    }\n    return items;\n  }\n  renderItemLabels() {\n    const {\n      instances,\n      frameReviews,\n      selectedInstance,\n      selectInstance,\n      getInstanceLabel\n    } = this.props;\n    const {\n      framesCollapsed\n    } = this.state;\n    if (framesCollapsed) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"frame-item-label\",\n        style: {\n          height: frameLabelHeight,\n          background: framesCollapsed ? frameLabelSelectedColor : frameLabelColor\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 9\n        }\n      }, selectedInstance ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"frame-item-label-dot\",\n        style: {\n          backgroundColor: this.getRGBAColor(selectedInstance.category, 1)\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 15\n        }\n      }), getInstanceLabel(selectedInstance)) : i18n.translate('PROGRESS_GLOBAL_LABEL'));\n    }\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.allInstanceIds.map(instanceId => {\n      const instance = instances[instanceId];\n      const selected = selectedInstance && selectedInstance.id === instanceId;\n      const allFrameReviews = Object.values(instance.frames).map(({\n        frameIndex\n      }) => (frameReviews[frameIndex] || {})[instanceId]);\n      const isReject = allFrameReviews.some(i => i === ReviewResult.REJECT);\n      let isPending = false;\n      let isApproved = false;\n      if (!isReject) {\n        isPending = allFrameReviews.some(i => i === ReviewResult.SUSPEND);\n      }\n      if (!isPending) {\n        isApproved = allFrameReviews.every(i => i === ReviewResult.APPROVE);\n      }\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: instanceId,\n        className: \"frame-item-label\",\n        style: {\n          height: frameLabelHeight,\n          background: selected ? frameLabelSelectedColor : frameLabelColor\n        },\n        onClick: () => selectInstance(instanceId, true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"frame-item-label-dot\",\n        style: {\n          backgroundColor: this.getRGBAColor(instance.category, 1)\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 17\n        }\n      }), getInstanceLabel(instance)), (isApproved || isReject || isPending) && /*#__PURE__*/React.createElement(\"div\", {\n        className: cx('frame-item-label-review', {\n          approved: isApproved,\n          rejected: isReject,\n          pending: isPending\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 17\n        }\n      }));\n    }));\n  }\n  render() {\n    const {\n      readonly,\n      frameCount,\n      frameLoading,\n      currentFrame\n    } = this.props;\n    const {\n      framesCollapsed,\n      framesHeight,\n      visibleFramesIndex,\n      visibleFramesIndexArr\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frame-control\",\n      style: {\n        height: framesHeight + actionsContainerHeight,\n        transition: 'height 0.15s'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frame-actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frame-items-sort\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SortAsc, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 19\n      }\n    })), i18n.translate('PROGRESS_SORT_LABEL')), /*#__PURE__*/React.createElement(FrameActions, {\n      frameCount: frameCount,\n      frameLoading: frameLoading,\n      currentFrame: currentFrame,\n      setFrame: this.setFrame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FrameValidation, {\n      readonly: readonly,\n      currentFrame: currentFrame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: cx('frame-collapse', {\n        disabled: this.isEmpty,\n        transform: !framesCollapsed\n      }),\n      onClick: this.toggleCollapse,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Up, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frames\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frame-items-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.itemsContainer,\n      className: \"frame-items\",\n      style: {\n        height: framesHeight - 36\n      },\n      onScroll: this.onItemsScroll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 13\n      }\n    }, this.renderItemLabels()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frame-scaler\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frame-action-icon\",\n      onClick: () => this.updateFrameCountIndex(visibleFramesIndex - 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Minus, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        flex: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Slider, {\n      tooltipVisible: false,\n      step: 1,\n      min: visibleFramesIndexArr[0],\n      max: visibleFramesIndexArr[visibleFramesIndexArr.length - 1],\n      value: visibleFramesIndex,\n      onChange: this.updateFrameCountIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frame-action-icon\",\n      onClick: () => this.updateFrameCountIndex(visibleFramesIndex + 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Plus, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frame-steps\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.framesContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 13\n      }\n    }))));\n  }\n}","map":{"version":3,"names":["React","Slider","cx","isEqual","hexToRgba","FrameActions","FrameValidation","FramesRenderer","EventAction","Minus","Plus","Up","SortAsc","i18n","ReviewResult","frameLabelHeight","frameLabelColor","frameLabelSelectedColor","actionsContainerHeight","FrameControl","Component","constructor","args","framesRenderer","framesContainer","createRef","itemsContainer","state","framesCollapsed","framesHeight","visibleFramesIndex","visibleFramesIndexArr","setFrame","frameIndex","props","updateHeight","height","setState","onHeightChange","updateVisibleFrames","currentIndex","indexArr","stat","updateFrameCountIndex","v","Math","min","max","length","currentRangeIndex","updateItemsScroll","top","current","scroll","onItemsScroll","e","itemsOffset","target","scrollTop","toggleCollapse","isEmpty","scrollable","items","getItems","categoryInstancesMap","Object","values","every","categoryInstances","keys","allInstanceIds","instances","categories","flatMap","sort","a","b","instanceA","instanceB","instanceAFirstFrame","Number","frames","instanceBFirstFrame","instanceACategoryIndex","indexOf","category","instanceBCategoryIndex","number","componentDidMount","frameCount","on","HEIGHT_CHANGE","VISIBLE_FRAMES_UPDATE","CURRENT_FRAME_CHANGE","ITEMS_OFFSET_CHANGE","componentDidUpdate","prevProps","currentFrame","invalidFrames","undoStackPointer","selectedInstance","id","frameReviews","selectedInstanceFrames","updateItemFrameStatus","componentWillUnmount","removeEventListeners","off","getRGBAColor","alpha","displayColor","getCategory","display_color","frameColor","forEach","review","APPROVE","REJECT","SUSPEND","frameStatus","color","showCards","selected","frameInstances","index","global","instanceId","instance","renderItemLabels","selectInstance","getInstanceLabel","createElement","className","style","background","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","backgroundColor","translate","map","allFrameReviews","isReject","some","i","isPending","isApproved","key","onClick","approved","rejected","pending","render","readonly","frameLoading","transition","disabled","transform","ref","onScroll","flex","tooltipVisible","step","value","onChange"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking/components/FrameControl.tsx"],"sourcesContent":["import React from 'react';\nimport { Slider } from 'antd';\nimport cx from 'classnames';\nimport { isEqual } from 'lodash';\nimport hexToRgba from 'hex-to-rgba';\nimport FrameActions from './FrameActions';\nimport FrameValidation from './FrameValidation';\nimport FramesRenderer, { FrameItem, EventAction } from '../../../libs/FramesRenderer';\nimport { Minus, Plus, Up, SortAsc } from '../../common/icons';\nimport i18n from '../locales';\nimport { Instance, CategoryInstancesMap, Ontology, ReviewResult } from '../types';\nimport 'antd/es/slider/style/index.css';\nimport './FrameControl.scss';\n\ninterface FrameControlProps {\n  readonly: boolean;\n  undoStackPointer: number;\n  frameCount: number;\n  frameLoading: boolean;\n  currentFrame: number;\n  invalidFrames: number[];\n  categoryInstancesMap: CategoryInstancesMap;\n  instances: { [instanceId: string]: Instance };\n  frameInstances: string[][];\n  frameReviews: { [frameIndex: number]: { [instanceId: string]: ReviewResult }};\n  selectedInstance: Instance;\n  selectedInstanceFrames: {[frameIndex: number]: boolean};\n  selectInstance: (instanceId: string, isManual?: boolean) => void;\n  setFrame: (frame: number) => void;\n  getCategory: (categoryName: string) => Ontology | undefined;\n  getInstanceLabel: (instance: Instance) => string;\n  onHeightChange: (height: number) => void;\n}\n\ninterface FrameControlState {\n  framesCollapsed: boolean;\n  framesHeight: number;\n  visibleFramesIndex: number;\n  visibleFramesIndexArr: number[];\n}\n\nconst frameLabelHeight = 20;\nconst frameLabelColor = '#343846';\nconst frameLabelSelectedColor = '#292C38';\nconst actionsContainerHeight = 48;\n\nexport default class FrameControl extends React.Component<FrameControlProps, FrameControlState> {\n  framesRenderer: FramesRenderer | null = null;\n\n  framesContainer = React.createRef<HTMLDivElement>();\n\n  itemsContainer = React.createRef<HTMLDivElement>();\n\n  state = {\n    framesCollapsed: true,\n    framesHeight: 56,\n    visibleFramesIndex: 0,\n    visibleFramesIndexArr: [],\n  };\n\n  get isEmpty() {\n    const { categoryInstancesMap } = this.props;\n    return Object.values(categoryInstancesMap).every((categoryInstances) => Object.keys(categoryInstances).length === 0);\n  }\n\n  get allInstanceIds() {\n    const { categoryInstancesMap, instances } = this.props;\n    const categories = Object.keys(categoryInstancesMap);\n    return Object.values(categoryInstancesMap)\n      .flatMap((categoryInstances) => Object.keys(categoryInstances))\n      .sort((a, b) => {\n        const instanceA = instances[a];\n        const instanceB = instances[b];\n        const instanceAFirstFrame = Number(Object.keys(instanceA.frames)[0]);\n        const instanceBFirstFrame = Number(Object.keys(instanceB.frames)[0]);\n        if (instanceAFirstFrame > instanceBFirstFrame) {\n          return 1;\n        }\n        if (instanceAFirstFrame < instanceBFirstFrame) {\n          return -1;\n        }\n        const instanceACategoryIndex = categories.indexOf(instanceA.category);\n        const instanceBCategoryIndex = categories.indexOf(instanceB.category);\n        if (instanceACategoryIndex > instanceBCategoryIndex) {\n          return 1;\n        }\n        if (instanceACategoryIndex < instanceBCategoryIndex) {\n          return -1;\n        }\n        return instanceA.number > instanceB.number ? 1 : -1;\n      });\n  }\n\n  componentDidMount() {\n    if (this.framesContainer.current) {\n      this.framesRenderer = new FramesRenderer(this.framesContainer.current, this.props.frameCount);\n      this.framesRenderer.on(EventAction.HEIGHT_CHANGE, this.updateHeight);\n      this.framesRenderer.on(EventAction.VISIBLE_FRAMES_UPDATE, this.updateVisibleFrames);\n      this.framesRenderer.on(EventAction.CURRENT_FRAME_CHANGE, this.setFrame);\n      this.framesRenderer.on(EventAction.ITEMS_OFFSET_CHANGE, this.updateItemsScroll);\n      this.framesRenderer.items = this.getItems();\n    }\n  }\n\n  componentDidUpdate(prevProps: FrameControlProps) {\n    if (prevProps.currentFrame !== this.props.currentFrame) {\n      // current frame changes\n      if (this.framesRenderer) {\n        this.framesRenderer.currentFrame = this.props.currentFrame;\n      }\n    }\n    if (!isEqual(prevProps.invalidFrames, this.props.invalidFrames)) {\n      if (this.framesRenderer) {\n        this.framesRenderer.invalidFrames = this.props.invalidFrames;\n      }\n    }\n    if (\n      (prevProps.undoStackPointer !== this.props.undoStackPointer) ||\n      (prevProps.selectedInstance && !this.props.selectedInstance) ||\n      (!prevProps.selectedInstance && this.props.selectedInstance) ||\n      (prevProps.selectedInstance && this.props.selectedInstance && prevProps.selectedInstance.id !== this.props.selectedInstance.id) ||\n      !isEqual(prevProps.categoryInstancesMap, this.props.categoryInstancesMap) ||\n      !isEqual(prevProps.frameReviews, this.props.frameReviews)\n    ) {\n      // selected instance changes, or instances changes\n      if (this.framesRenderer) {\n        this.framesRenderer.items = this.getItems();\n      }\n    } else if (\n      prevProps.selectedInstance && this.props.selectedInstance && prevProps.selectedInstance.id === this.props.selectedInstance.id &&\n      !isEqual(prevProps.selectedInstanceFrames, this.props.selectedInstanceFrames)) {\n      // selected instance frame status changes\n      if (this.framesRenderer) {\n        this.framesRenderer.updateItemFrameStatus(this.props.selectedInstance.id, this.props.selectedInstanceFrames);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.framesRenderer) {\n      this.framesRenderer.removeEventListeners();\n      this.framesRenderer.off(EventAction.HEIGHT_CHANGE, this.updateHeight);\n      this.framesRenderer.off(EventAction.VISIBLE_FRAMES_UPDATE, this.updateVisibleFrames);\n      this.framesRenderer.off(EventAction.CURRENT_FRAME_CHANGE, this.setFrame);\n      this.framesRenderer.off(EventAction.ITEMS_OFFSET_CHANGE, this.updateItemsScroll);\n    }\n  }\n\n  getRGBAColor(category: string, alpha = 0.2) {\n    const displayColor = (this.props.getCategory(category) || {}).display_color;\n    if (displayColor) {\n      return hexToRgba(displayColor, alpha);\n    }\n    return '#FFFFFF';\n  }\n\n  getItems(): { [id: string]: FrameItem } {\n    const { frameReviews, selectedInstance, selectedInstanceFrames } = this.props;\n\n    const frameColor: { [frameIndex: number]: string } = {};\n    if (selectedInstance) {\n      Object.values(selectedInstance.frames).forEach(({ frameIndex }) => {\n        const review = (frameReviews[frameIndex] || {})[selectedInstance.id];\n        if (review === ReviewResult.APPROVE) {\n          frameColor[frameIndex] = '#3E6F45';\n        } else if (review === ReviewResult.REJECT) {\n          frameColor[frameIndex] = '#9C4434';\n        } else if (review === ReviewResult.SUSPEND) {\n          frameColor[frameIndex] = '#A28900';\n        }\n      });\n    }\n\n    if (this.state.framesCollapsed) {\n      if (selectedInstance) {\n        return {\n          [selectedInstance.id]: {\n            frameStatus: selectedInstanceFrames,\n            frameColor,\n            color: this.getRGBAColor(selectedInstance.category),\n            showCards: true,\n            selected: true,\n          },\n        };\n      }\n      const frameStatus: { [frameIndex: number]: boolean } = {};\n      this.props.frameInstances.forEach((instances, index) => {\n        if (instances.length > 0) {\n          frameStatus[index] = false;\n        }\n      });\n      return {\n        global: {\n          frameStatus,\n          color: '#5C5F6B',\n          selected: true,\n        },\n      };\n    }\n\n    const items: { [id: string]: FrameItem } = {};\n    this.allInstanceIds.forEach((instanceId) => {\n      const instance = this.props.instances[instanceId];\n      items[instanceId] = {\n        frameStatus: {},\n        color: this.getRGBAColor(instance.category),\n      };\n    });\n    this.props.frameInstances.forEach((frameInstances, frameIndex) => {\n      frameInstances.forEach((instanceId) => {\n        items[instanceId].frameStatus[frameIndex] = false;\n      });\n    });\n    if (selectedInstance) {\n      items[selectedInstance.id].frameStatus = selectedInstanceFrames;\n      items[selectedInstance.id].frameColor = frameColor;\n      items[selectedInstance.id].showCards = true;\n      items[selectedInstance.id].selected = true;\n    }\n    return items;\n  }\n\n  setFrame = (frameIndex: number) => {\n    this.props.setFrame(frameIndex);\n  };\n\n  updateHeight = (height: number) => {\n    this.setState({ framesHeight: height });\n    this.props.onHeightChange(height + actionsContainerHeight);\n  };\n\n  updateVisibleFrames = (currentIndex: number, indexArr?: number[]) => {\n    this.setState((stat) => ({\n      ...stat,\n      visibleFramesIndex: currentIndex,\n      ...indexArr && { visibleFramesIndexArr: indexArr },\n    }));\n  };\n\n  updateFrameCountIndex = (v: number) => {\n    const { visibleFramesIndexArr } = this.state;\n    const visibleFramesIndex = Math.min(Math.max(v, visibleFramesIndexArr[0]), visibleFramesIndexArr[visibleFramesIndexArr.length - 1]);\n    this.setState({ visibleFramesIndex });\n    if (this.framesRenderer) {\n      this.framesRenderer.currentRangeIndex = visibleFramesIndex;\n    }\n  };\n\n  updateItemsScroll = (top: number) => {\n    if (this.itemsContainer.current) {\n      this.itemsContainer.current.scroll({ top });\n    }\n  };\n\n  onItemsScroll: React.UIEventHandler<HTMLDivElement> = (e) => {\n    if (this.framesRenderer) {\n      this.framesRenderer.itemsOffset = (e.target as HTMLDivElement).scrollTop;\n    }\n  };\n\n  toggleCollapse = () => {\n    if (!this.isEmpty) {\n      this.setState((stat) => ({\n        framesCollapsed: !stat.framesCollapsed,\n      }), () => {\n        // update renderer\n        if (this.framesRenderer) {\n          this.framesRenderer.scrollable = !this.state.framesCollapsed;\n          this.framesRenderer.items = this.getItems();\n        }\n      });\n    }\n  };\n\n  renderItemLabels() {\n    const { instances, frameReviews, selectedInstance, selectInstance, getInstanceLabel } = this.props;\n    const { framesCollapsed } = this.state;\n\n    if (framesCollapsed) {\n      return (\n        <div\n          className=\"frame-item-label\"\n          style={{\n            height: frameLabelHeight,\n            background: framesCollapsed ? frameLabelSelectedColor : frameLabelColor,\n          }}\n        >\n          {selectedInstance ? (\n            <>\n              <div\n                className=\"frame-item-label-dot\"\n                style={{ backgroundColor: this.getRGBAColor(selectedInstance.category, 1) }}\n              />\n              {getInstanceLabel(selectedInstance)}\n            </>\n          ) : i18n.translate('PROGRESS_GLOBAL_LABEL')}\n        </div>\n      );\n    }\n\n    return (\n      <>\n        {this.allInstanceIds.map((instanceId) => {\n          const instance = instances[instanceId];\n          const selected = selectedInstance && selectedInstance.id === instanceId;\n          const allFrameReviews = Object.values(instance.frames).map(({ frameIndex }) => (frameReviews[frameIndex] || {})[instanceId]);\n          const isReject = allFrameReviews.some((i) => i === ReviewResult.REJECT);\n          let isPending = false;\n          let isApproved = false;\n          if (!isReject) {\n            isPending = allFrameReviews.some((i) => i === ReviewResult.SUSPEND);\n          }\n          if (!isPending) {\n            isApproved = allFrameReviews.every((i) => i === ReviewResult.APPROVE);\n          }\n          return (\n            <div\n              key={instanceId}\n              className=\"frame-item-label\"\n              style={{\n                height: frameLabelHeight,\n                background: selected ? frameLabelSelectedColor : frameLabelColor,\n              }}\n              onClick={() => selectInstance(instanceId, true)}\n            >\n              <div>\n                <div\n                  className=\"frame-item-label-dot\"\n                  style={{ backgroundColor: this.getRGBAColor(instance.category, 1) }}\n                />\n                {getInstanceLabel(instance)}\n              </div>\n              {(isApproved || isReject || isPending) && (\n                <div\n                  className={cx('frame-item-label-review', {\n                    approved: isApproved,\n                    rejected: isReject,\n                    pending: isPending,\n                  })}\n                />\n              )}\n            </div>\n          );\n        })}\n      </>\n    );\n  }\n\n  render() {\n    const { readonly, frameCount, frameLoading, currentFrame } = this.props;\n    const { framesCollapsed, framesHeight, visibleFramesIndex, visibleFramesIndexArr } = this.state;\n    return (\n      <div\n        className=\"frame-control\"\n        style={{\n          height: framesHeight + actionsContainerHeight,\n          transition: 'height 0.15s',\n        }}\n      >\n        <div className=\"frame-actions\">\n          <div className=\"frame-items-sort\">\n            <span><SortAsc /></span>\n            {i18n.translate('PROGRESS_SORT_LABEL')}\n          </div>\n          <FrameActions\n            frameCount={frameCount}\n            frameLoading={frameLoading}\n            currentFrame={currentFrame}\n            setFrame={this.setFrame}\n          />\n          <div>\n            <FrameValidation\n              readonly={readonly}\n              currentFrame={currentFrame}\n            />\n            <div\n              className={cx('frame-collapse', {\n                disabled: this.isEmpty,\n                transform: !framesCollapsed,\n              })}\n              onClick={this.toggleCollapse}\n            >\n              <Up />\n            </div>\n          </div>\n        </div>\n        <div className=\"frames\">\n          <div className=\"frame-items-container\">\n            <div\n              ref={this.itemsContainer}\n              className=\"frame-items\"\n              style={{ height: framesHeight - 36 }}\n              onScroll={this.onItemsScroll}\n            >\n              {this.renderItemLabels()}\n            </div>\n            <div className=\"frame-scaler\">\n              <div\n                className=\"frame-action-icon\"\n                onClick={() => this.updateFrameCountIndex(visibleFramesIndex - 1)}\n              >\n                <Minus />\n              </div>\n              <div style={{ flex: 1 }}>\n                <Slider\n                  tooltipVisible={false}\n                  step={1}\n                  min={visibleFramesIndexArr[0]}\n                  max={visibleFramesIndexArr[visibleFramesIndexArr.length - 1]}\n                  value={visibleFramesIndex}\n                  onChange={this.updateFrameCountIndex}\n                />\n              </div>\n              <div\n                className=\"frame-action-icon\"\n                onClick={() => this.updateFrameCountIndex(visibleFramesIndex + 1)}\n              >\n                <Plus />\n              </div>\n            </div>\n          </div>\n          <div className=\"frame-steps\">\n            <div ref={this.framesContainer} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}