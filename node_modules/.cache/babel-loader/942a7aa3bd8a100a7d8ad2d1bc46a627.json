{"ast":null,"code":"export function cleanExpiredStorage(namespace, expire = 7 * 24 * 60 * 60 * 1000) {\n  const current = Date.now();\n  const last = current - expire;\n  const data = localStorage.getItem(namespace);\n  if (data) {\n    // if namespace exists\n    let store;\n    try {\n      store = JSON.parse(data);\n    } catch (e) {\n      store = {};\n    }\n    Object.keys(store).forEach(key => {\n      // check lastUpdate\n      const {\n        lastUpdate\n      } = store[key];\n      if (lastUpdate < last) {\n        delete store[key];\n      }\n    });\n    try {\n      // set new store\n      localStorage.setItem(namespace, JSON.stringify(store));\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.log('clean expired storage error: ', e);\n    }\n  }\n}\nexport function setStorage(namespace, key, value) {\n  const current = Date.now();\n  let store;\n  try {\n    store = JSON.parse(localStorage.getItem(namespace) || '{}');\n  } catch (e) {\n    store = {};\n  }\n  store[key] = {\n    value,\n    lastUpdate: current // set last update time\n  };\n  try {\n    localStorage.setItem(namespace, JSON.stringify(store));\n  } catch (e) {\n    if (e.name === 'QUOTA_EXCEEDED_ERR' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n      // clean expired storage and try again\n      cleanExpiredStorage(namespace);\n      try {\n        localStorage.setItem(namespace, JSON.stringify(store));\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.log('set storage error: ', error);\n      }\n    } else {\n      // eslint-disable-next-line no-console\n      console.log('set storage error: ', e);\n    }\n  }\n}\nexport function getStorage(namespace, key) {\n  try {\n    var _store$key;\n    const store = JSON.parse(localStorage.getItem(namespace) || '{}');\n    return (_store$key = store[key]) === null || _store$key === void 0 ? void 0 : _store$key.value;\n  } catch (e) {\n    return undefined;\n  }\n}\nexport function removeStorage(namespace, key) {\n  let store;\n  try {\n    store = JSON.parse(localStorage.getItem(namespace) || '{}');\n  } catch (e) {\n    store = {};\n  }\n  delete store[key];\n  try {\n    localStorage.setItem(namespace, JSON.stringify(store));\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.log('remove storage error: ', e);\n  }\n}\nexport function clear(namespace) {\n  localStorage.removeItem(namespace);\n}\nexport function isEnabled() {\n  var _window;\n  return !!((_window = window) === null || _window === void 0 ? void 0 : _window.localStorage);\n}","map":{"version":3,"names":["cleanExpiredStorage","namespace","expire","current","Date","now","last","data","localStorage","getItem","store","JSON","parse","e","Object","keys","forEach","key","lastUpdate","setItem","stringify","console","log","setStorage","value","name","error","getStorage","_store$key","undefined","removeStorage","clear","removeItem","isEnabled","_window","window"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/utils/storage.ts"],"sourcesContent":["export function cleanExpiredStorage(namespace: string, expire = 7 * 24 * 60 * 60 * 1000) {\n  const current = Date.now();\n  const last = current - expire;\n\n  const data = localStorage.getItem(namespace);\n  if (data) {\n    // if namespace exists\n    let store: any;\n    try {\n      store = JSON.parse(data);\n    } catch (e) {\n      store = {};\n    }\n\n    Object.keys(store).forEach(key => {\n      // check lastUpdate\n      const { lastUpdate } = store[key];\n      if (lastUpdate < last) {\n        delete store[key];\n      }\n    });\n\n    try {\n      // set new store\n      localStorage.setItem(namespace, JSON.stringify(store));\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.log('clean expired storage error: ', e);\n    }\n  }\n}\n\nexport function setStorage(namespace: string, key: string, value: any) {\n  const current = Date.now();\n\n  let store;\n  try {\n    store = JSON.parse(localStorage.getItem(namespace) || '{}');\n  } catch (e) {\n    store = {};\n  }\n\n  store[key] = {\n    value,\n    lastUpdate: current, // set last update time\n  };\n\n  try {\n    localStorage.setItem(namespace, JSON.stringify(store));\n  } catch (e) {\n    if (e.name === 'QUOTA_EXCEEDED_ERR' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n      // clean expired storage and try again\n      cleanExpiredStorage(namespace);\n      try {\n        localStorage.setItem(namespace, JSON.stringify(store));\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.log('set storage error: ', error);\n      }\n    } else {\n      // eslint-disable-next-line no-console\n      console.log('set storage error: ', e);\n    }\n  }\n}\n\nexport function getStorage(namespace: string, key: string) {\n  try {\n    const store = JSON.parse(localStorage.getItem(namespace) || '{}');\n    return store[key]?.value;\n  } catch (e) {\n    return undefined;\n  }\n}\n\nexport function removeStorage(namespace: string, key: string) {\n  let store;\n  try {\n    store = JSON.parse(localStorage.getItem(namespace) || '{}');\n  } catch (e) {\n    store = {};\n  }\n\n  delete store[key];\n\n  try {\n    localStorage.setItem(namespace, JSON.stringify(store));\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.log('remove storage error: ', e);\n  }\n}\n\nexport function clear(namespace: string) {\n  localStorage.removeItem(namespace);\n}\n\nexport function isEnabled() {\n  return !!window?.localStorage;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}