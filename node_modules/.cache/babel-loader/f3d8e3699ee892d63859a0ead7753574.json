{"ast":null,"code":"export function drawLine(ctx, fromX, fromY, toX, toY, color) {\n  if (color) {\n    ctx.strokeStyle = color;\n  }\n  ctx.lineWidth = 1 * window.devicePixelRatio;\n  ctx.beginPath();\n  ctx.moveTo(fromX, fromY);\n  ctx.lineTo(toX, toY);\n  ctx.stroke();\n}\nexport function drawRect(ctx, x, y, width, height, fillColor) {\n  if (fillColor) {\n    ctx.fillStyle = fillColor;\n  }\n  ctx.fillRect(x, y, width, height);\n}\nexport function drawRectBorder(ctx, x, y, width, height, color) {\n  if (color) {\n    ctx.strokeStyle = color;\n  }\n  ctx.lineWidth = 1 * window.devicePixelRatio;\n  ctx.beginPath();\n  ctx.moveTo(x - 0.5, y - 0.5);\n  ctx.lineTo(x + width + 0.5, y - 0.5);\n  ctx.lineTo(x + width + 0.5, y + height + 0.5);\n  ctx.lineTo(x - 0.5, y + height + 0.5);\n  ctx.lineTo(x - 0.5, y - 0.5);\n  ctx.stroke();\n}\nexport function drawRoundedRect(ctx, x, y, width, height, radius = 4, fillColor) {\n  if (fillColor) {\n    ctx.fillStyle = fillColor;\n  }\n  const ptA = {\n    x: x + radius,\n    y\n  };\n  const ptB = {\n    x: x + width,\n    y\n  };\n  const ptC = {\n    x: x + width,\n    y: y + height\n  };\n  const ptD = {\n    x,\n    y: y + height\n  };\n  const ptE = {\n    x,\n    y\n  };\n  ctx.beginPath();\n  ctx.moveTo(ptA.x, ptA.y);\n  ctx.arcTo(ptB.x, ptB.y, ptC.x, ptC.y, radius * window.devicePixelRatio);\n  ctx.arcTo(ptC.x, ptC.y, ptD.x, ptD.y, radius * window.devicePixelRatio);\n  ctx.arcTo(ptD.x, ptD.y, ptE.x, ptE.y, radius * window.devicePixelRatio);\n  ctx.arcTo(ptE.x, ptE.y, ptA.x, ptA.y, radius * window.devicePixelRatio);\n  ctx.fill();\n}\nexport function drawCircle(ctx, x, y, radius, fillColor) {\n  if (fillColor) {\n    ctx.fillStyle = fillColor;\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, radius * window.devicePixelRatio, 0, 2 * Math.PI);\n  ctx.fill();\n}\nexport function drawScale(ctx, x, y, scaleWidth, scaleHeight, scaleHeightShort, frame, drawFollowingFrames = true) {\n  // draw frame scale\n  ctx.strokeStyle = '#767A83';\n  ctx.lineWidth = 1 * window.devicePixelRatio;\n  ctx.beginPath();\n  ctx.moveTo(x + 0.5, y);\n  ctx.lineTo(x + 0.5, y + scaleHeight);\n  ctx.stroke();\n  if (drawFollowingFrames) {\n    // draw short scale\n    ctx.strokeStyle = '#50555F';\n    for (let i = 0; i < 4; i += 1) {\n      ctx.beginPath();\n      ctx.moveTo(x + (i + 1) * (scaleWidth / 5) + 0.5, y);\n      ctx.lineTo(x + (i + 1) * (scaleWidth / 5) + 0.5, y + scaleHeightShort);\n      ctx.stroke();\n    }\n  }\n  // draw frame number\n  ctx.font = `${10 * window.devicePixelRatio}px Arial`;\n  ctx.fillStyle = 'rgba(255, 255, 255, 0.8)';\n  ctx.textBaseline = 'alphabetic';\n  ctx.fillText(`${frame + 1}`, x + 4 * window.devicePixelRatio, y + scaleHeight);\n}\n;\nexport function drawRhombus(ctx, x, y, size, fillColor) {\n  if (fillColor) {\n    ctx.fillStyle = fillColor;\n  }\n  const halfSize = size / 2 * window.devicePixelRatio;\n  ctx.beginPath();\n  ctx.moveTo(x - halfSize, y);\n  ctx.lineTo(x, y - halfSize);\n  ctx.lineTo(x + halfSize, y);\n  ctx.lineTo(x, y + halfSize);\n  ctx.lineTo(x - halfSize, y);\n  ctx.fill();\n}\n;\nexport function drawText(ctx, text, x, y, color, fontSize, maxWidth) {\n  if (color) {\n    ctx.fillStyle = color;\n  }\n  ctx.font = `${(fontSize || 12) * window.devicePixelRatio}px Arial`;\n  ctx.textBaseline = 'top';\n  let newText = text;\n  if (maxWidth !== undefined) {\n    const {\n      width\n    } = ctx.measureText(text);\n    if (width > maxWidth) {\n      const {\n        width: ellipsisWidth\n      } = ctx.measureText('...');\n      if (maxWidth > ellipsisWidth) {\n        let len = Math.floor(maxWidth / width * text.length);\n        newText = text.substring(0, len);\n        let newWidth = ctx.measureText(newText).width;\n        while (newWidth > maxWidth - ellipsisWidth && len > 0) {\n          len -= 1;\n          newText = text.substring(0, len);\n          newWidth = ctx.measureText(newText).width;\n        }\n        newText = `${newText}...`;\n      } else {\n        newText = '';\n      }\n    }\n  }\n  ctx.fillText(newText, x, y);\n}\n;","map":{"version":3,"names":["drawLine","ctx","fromX","fromY","toX","toY","color","strokeStyle","lineWidth","window","devicePixelRatio","beginPath","moveTo","lineTo","stroke","drawRect","x","y","width","height","fillColor","fillStyle","fillRect","drawRectBorder","drawRoundedRect","radius","ptA","ptB","ptC","ptD","ptE","arcTo","fill","drawCircle","arc","Math","PI","drawScale","scaleWidth","scaleHeight","scaleHeightShort","frame","drawFollowingFrames","i","font","textBaseline","fillText","drawRhombus","size","halfSize","drawText","text","fontSize","maxWidth","newText","undefined","measureText","ellipsisWidth","len","floor","length","substring","newWidth"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/utils/canvas.ts"],"sourcesContent":["export function drawLine(\n  ctx: CanvasRenderingContext2D,\n  fromX: number,\n  fromY: number,\n  toX: number,\n  toY: number,\n  color?: string,\n) {\n  if (color) {\n    ctx.strokeStyle = color;\n  }\n  ctx.lineWidth = 1 * window.devicePixelRatio;\n  ctx.beginPath();\n  ctx.moveTo(fromX, fromY);\n  ctx.lineTo(toX, toY);\n  ctx.stroke();\n}\n\nexport function drawRect(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  fillColor?: string,\n) {\n  if (fillColor) {\n    ctx.fillStyle = fillColor;\n  }\n  ctx.fillRect(x, y, width, height);\n}\n\nexport function drawRectBorder(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  color?: string,\n) {\n  if (color) {\n    ctx.strokeStyle = color;\n  }\n  ctx.lineWidth = 1 * window.devicePixelRatio;\n  ctx.beginPath();\n  ctx.moveTo(x - 0.5, y - 0.5);\n  ctx.lineTo(x + width + 0.5, y - 0.5);\n  ctx.lineTo(x + width + 0.5, y + height + 0.5);\n  ctx.lineTo(x - 0.5, y + height + 0.5);\n  ctx.lineTo(x - 0.5, y - 0.5);\n  ctx.stroke();\n}\n\nexport function drawRoundedRect(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  radius = 4,\n  fillColor?: string,\n) {\n  if (fillColor) {\n    ctx.fillStyle = fillColor;\n  }\n\n  const ptA = { x: x + radius, y };\n  const ptB = { x: x + width, y };\n  const ptC = { x: x + width, y: y + height };\n  const ptD = { x, y: y + height };\n  const ptE = { x, y };\n\n  ctx.beginPath();\n  ctx.moveTo(ptA.x, ptA.y);\n  ctx.arcTo(ptB.x, ptB.y, ptC.x, ptC.y, radius * window.devicePixelRatio);\n  ctx.arcTo(ptC.x, ptC.y, ptD.x, ptD.y, radius * window.devicePixelRatio);\n  ctx.arcTo(ptD.x, ptD.y, ptE.x, ptE.y, radius * window.devicePixelRatio);\n  ctx.arcTo(ptE.x, ptE.y, ptA.x, ptA.y, radius * window.devicePixelRatio);\n  ctx.fill();\n}\n\nexport function drawCircle(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  radius: number,\n  fillColor?: string,\n) {\n  if (fillColor) {\n    ctx.fillStyle = fillColor;\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, radius * window.devicePixelRatio, 0, 2 * Math.PI);\n  ctx.fill();\n}\n\nexport function drawScale(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  scaleWidth: number,\n  scaleHeight: number,\n  scaleHeightShort: number,\n  frame: number,\n  drawFollowingFrames = true,\n) {\n  // draw frame scale\n  ctx.strokeStyle = '#767A83';\n  ctx.lineWidth = 1 * window.devicePixelRatio;\n  ctx.beginPath();\n  ctx.moveTo(x + 0.5, y);\n  ctx.lineTo(x + 0.5, y + scaleHeight);\n  ctx.stroke();\n  if (drawFollowingFrames) {\n    // draw short scale\n    ctx.strokeStyle = '#50555F';\n    for (let i = 0; i < 4; i += 1) {\n      ctx.beginPath();\n      ctx.moveTo(x + (i + 1) * (scaleWidth / 5) + 0.5, y);\n      ctx.lineTo(x + (i + 1) * (scaleWidth / 5) + 0.5, y + scaleHeightShort);\n      ctx.stroke();\n    }\n  }\n  // draw frame number\n  ctx.font = `${10 * window.devicePixelRatio}px Arial`;\n  ctx.fillStyle = 'rgba(255, 255, 255, 0.8)';\n  ctx.textBaseline = 'alphabetic';\n  ctx.fillText(`${frame + 1}`, x + 4 * window.devicePixelRatio, y + scaleHeight);\n};\n\nexport function drawRhombus(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  size: number,\n  fillColor?: string,\n) {\n  if (fillColor) {\n    ctx.fillStyle = fillColor;\n  }\n\n  const halfSize = (size / 2) * window.devicePixelRatio;\n  ctx.beginPath();\n  ctx.moveTo(x - halfSize, y);\n  ctx.lineTo(x, y - halfSize);\n  ctx.lineTo(x + halfSize, y);\n  ctx.lineTo(x, y + halfSize);\n  ctx.lineTo(x - halfSize, y);\n  ctx.fill();\n};\n\nexport function drawText(\n  ctx: CanvasRenderingContext2D,\n  text: string,\n  x: number,\n  y: number,\n  color?: string,\n  fontSize?: number,\n  maxWidth?: number,\n) {\n  if (color) {\n    ctx.fillStyle = color;\n  }\n  ctx.font = `${(fontSize || 12) * window.devicePixelRatio}px Arial`;\n  ctx.textBaseline = 'top';\n\n  let newText = text;\n  if (maxWidth !== undefined) {\n    const { width } = ctx.measureText(text);\n    if (width > maxWidth) {\n      const { width: ellipsisWidth } = ctx.measureText('...');\n\n      if (maxWidth > ellipsisWidth) {\n        let len = Math.floor((maxWidth / width) * text.length);\n        newText = text.substring(0, len);\n        let newWidth = ctx.measureText(newText).width;\n        while (newWidth > maxWidth - ellipsisWidth && len > 0) {\n          len -= 1;\n          newText = text.substring(0, len);\n          newWidth = ctx.measureText(newText).width;\n        }\n\n        newText = `${newText}...`;\n      } else {\n        newText = '';\n      }\n    }\n  }\n  ctx.fillText(newText, x, y);\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}