{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/SegmentDetail/SegmentDetail.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './SegmentDetail.scss';\nimport EasyForm from '@appen-china/easy-form';\nimport LineDetail from './LineDetail/LineDetail';\nimport { pushLine, setLineRole, setSegmentQAState, setSegmentCategory, setSegmentAttributes, setAttributeFocusInfo } from '../../redux/action';\nimport { formatTimestamp, SegmentMode, translate, triggerForm, attributeType } from '../../constants';\nimport { isInput } from '../../redux/reducer/segmentController';\nimport QAForm from './QAForm/QAForm';\nimport { isReviewEditable, isAnnotationReadonly } from '../../../../utils/tool-mode';\nclass SegmentDetail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleFocusAttribute = () => {\n      const {\n        focusAttribute: {\n          videoIndex,\n          segmentIndex,\n          type,\n          lineIndex,\n          key\n        },\n        currentVideo,\n        currentSegment\n      } = this.props;\n      if (videoIndex === currentVideo && segmentIndex === currentSegment && key) {\n        const attributeContainer = document.getElementsByClassName(type === attributeType.line ? `line-attributes-${lineIndex}` : 'segment-attributes')[0];\n        if (attributeContainer) {\n          let timer = setTimeout(() => {\n            clearTimeout(timer);\n            timer = null;\n            const label = attributeContainer.querySelector(`label[for=${key}]`);\n            const attribute = attributeContainer === null || attributeContainer === void 0 ? void 0 : attributeContainer.querySelector(`#${key}`);\n            label === null || label === void 0 ? void 0 : label.scrollIntoView();\n            attribute === null || attribute === void 0 ? void 0 : attribute.focus();\n            document.documentElement.scroll({\n              top: 0\n            });\n            this.props.setAttributeFocusInfo();\n          }, 10);\n        }\n      }\n    };\n    this.handleKeyDown = e => {\n      if (isInput()) return;\n      const {\n        currentSegment,\n        toolMode,\n        annotateDisabled\n      } = this.props;\n      if (e.keyCode === 81) {\n        // q\n        e.preventDefault();\n        this.props.setCurrentSegment({\n          index: currentSegment - 1\n        });\n      } else if (e.keyCode === 69) {\n        // e\n        e.preventDefault();\n        this.props.setCurrentSegment({\n          index: currentSegment + 1\n        });\n      }\n      if (e.keyCode >= 48 && e.key <= 57 && !annotateDisabled) {\n        const i = parseInt(e.key, 10);\n        if (i >= this.ontologyValidKeys.length) return;\n        const role = this.ontologyValidKeys[i];\n        this.props.setLineRole({\n          videoIndex: null,\n          segmentIndex: null,\n          lineIndex: 0,\n          role\n        });\n      }\n      if (e.keyCode === 13 && e.ctrlKey && isReviewEditable(toolMode)) {\n        e.preventDefault();\n        this.props.setSegmentQAState({\n          qaChecked: true\n        });\n        this.props.setCurrentSegment({\n          index: currentSegment + 1\n        });\n      }\n    };\n    this.changeSegmentCategory = data => {\n      const {\n        segmentConfig,\n        results,\n        currentVideo,\n        currentSegment\n      } = this.props;\n      const segment = results[currentVideo][currentSegment];\n      const attributes = {\n        ...segment.attributes,\n        ...data\n      };\n      const {\n        updatedValues\n      } = triggerForm(segmentConfig, attributes);\n      this.props.setSegmentAttributes({\n        videoIndex: currentVideo,\n        segmentIndex: currentSegment,\n        attributes: updatedValues\n      });\n    };\n    this.segmentRef = React.createRef();\n    this.isPreventScroll = false;\n  }\n  handleButtonClick(e, type) {\n    const {\n      currentSegment\n    } = this.props;\n    let newRole = null;\n    switch (type) {\n      case 'prev':\n        this.props.setCurrentSegment({\n          index: currentSegment - 1\n        });\n        break;\n      case 'next':\n        this.props.setCurrentSegment({\n          index: currentSegment + 1\n        });\n        break;\n      case 'push':\n        // eslint-disable-next-line no-restricted-syntax\n        for (const value of this.allRoles) {\n          if (this.currentRoles.indexOf(value) < 0) {\n            newRole = value;\n            break;\n          }\n        }\n        this.props.pushLine({\n          videoIndex: null,\n          segmentIndex: currentSegment,\n          role: newRole\n        });\n        break;\n      default:\n        break;\n    }\n  }\n\n  // eslint-disable-next-line react/no-deprecated\n  componentWillMount() {\n    // eslint-disable-next-line no-undef\n    window.addEventListener('keydown', this.handleKeyDown);\n    this.ontologyValidKeys = [];\n    const {\n      ontology\n    } = this.props;\n    ontology.forEach((value, key) => {\n      this.ontologyValidKeys.push(key);\n    });\n  }\n  shouldComponentUpdate(nextProps) {\n    const {\n      results,\n      segmentConfig,\n      currentVideo,\n      currentSegment,\n      keyAttribute,\n      toolMode,\n      annotateDisabled\n    } = nextProps;\n    const nextCurrentValues = results[currentVideo][currentSegment];\n    if (currentVideo !== this.props.currentVideo || currentSegment !== this.props.currentSegment || !this.config || annotateDisabled !== this.props.annotateDisabled) {\n      this.isPreventScroll = true;\n      const {\n        fields\n      } = segmentConfig;\n      if (keyAttribute.options.length > 0 && !fields.find(v => v.name === keyAttribute.name)) {\n        fields.unshift(keyAttribute);\n      }\n      const readonly = isAnnotationReadonly(toolMode) || annotateDisabled;\n      this.config = {\n        ...segmentConfig,\n        fields: fields.map(field => ({\n          ...field,\n          readonly: readonly || field.readonly,\n          optionType: 'button',\n          ...(nextCurrentValues && nextCurrentValues.attributes && nextCurrentValues.attributes[field.name] !== undefined && {\n            defaultValue: nextCurrentValues.attributes[field.name]\n          })\n        })),\n        footerVisible: false\n      };\n    } else {\n      this.isPreventScroll = false;\n    }\n    return true;\n  }\n  componentDidUpdate(prevProps) {\n    var _this$props$focusAttr;\n    if (this.segmentRef.current && this.isPreventScroll) {\n      let timer = setTimeout(() => {\n        clearTimeout(timer);\n        timer = null;\n        this.segmentRef.current.scrollTop = 0;\n      }, 10);\n    }\n    if ((_this$props$focusAttr = this.props.focusAttribute) === null || _this$props$focusAttr === void 0 ? void 0 : _this$props$focusAttr.key) {\n      this.handleFocusAttribute();\n    }\n  }\n  render() {\n    const {\n      results,\n      ontology,\n      currentVideo,\n      currentSegment,\n      toolMode\n    } = this.props;\n    this.segment = results[currentVideo][currentSegment];\n    if (!this.segment) {\n      return null;\n    }\n    this.currentRoles = [];\n    this.allRoles = [];\n    ontology.forEach((value, key) => {\n      this.allRoles.push(key);\n    });\n    this.segment.content.forEach(value => {\n      this.currentRoles.push(value.role);\n    });\n    const segment = results[currentVideo][currentSegment];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"segment-detail-container\",\n      ref: this.segmentRef,\n      key: `${currentVideo}_${currentSegment}_${segment.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"segment-detail-head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"segment-detail-index\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }\n    }, currentSegment + 1), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"segment-detail-timestamp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }\n    }, `${formatTimestamp(segment.start)}~${formatTimestamp(segment.end)}`), /*#__PURE__*/React.createElement(SegmentDetailChangeButton, {\n      className: \"segment-detail-change\",\n      content: translate('next'),\n      shortcut: \"E\",\n      onClick: e => this.handleButtonClick(e, 'next'),\n      disabled: currentSegment + 1 === results[currentVideo].length,\n      type2: \"next\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(SegmentDetailChangeButton, {\n      className: \"segment-detail-change\",\n      content: translate('prev'),\n      shortcut: \"Q\",\n      onClick: e => this.handleButtonClick(e, 'prev'),\n      disabled: currentSegment === 0,\n      type2: \"prev\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"segment-detail-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }\n    }, isReviewEditable(toolMode) ? /*#__PURE__*/React.createElement(QAForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 41\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"segment-attributes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(EasyForm, Object.assign({\n      theme: \"dark\",\n      autoFocus: false\n    }, this.config && this.config, {\n      onChange: this.changeSegmentCategory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }\n    }))), segment.content.map((line, index) => /*#__PURE__*/React.createElement(LineDetail\n    /* eslint-disable-next-line react/no-array-index-key */, {\n      key: `line-detail-${index}`,\n      line: line,\n      currentRoles: this.currentRoles,\n      lineIndex: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }\n    }))), this.props.overlap && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"segment-push-line\",\n      onClick: e => this.handleButtonClick(e, 'push'),\n      style: {\n        display: this.currentRoles.length === this.allRoles.length ? 'none' : 'block'\n      },\n      disabled: isAnnotationReadonly(this.props.toolMode) || this.props.annotateDisabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"add-role-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 13\n      }\n    }, \" +\"), translate('addRole')));\n  }\n}\nconst SegmentDetailChangeButton = props => /*#__PURE__*/React.createElement(\"button\", {\n  className: \"segment-detail-change\",\n  type: \"button\",\n  onClick: e => props.onClick(e, props.type2),\n  style: {\n    display: props.disabled ? 'none' : 'block'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 3\n  }\n}, props.content, /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 5\n  }\n}, ` {${props.shortcut}} `));\nconst mapStateToProps = state => ({\n  results: state.results,\n  ontology: state.ontology,\n  segmentConfig: state.segmentConfig,\n  lineConfig: state.lineConfig,\n  currentVideo: state.currentVideo,\n  currentSegment: state.currentSegment,\n  videos: state.videos,\n  toolMode: state.toolMode,\n  overlap: state.overlap,\n  keyAttribute: state.keyAttribute,\n  segmentMode: state.segmentMode,\n  annotateDisabled: state.annotateDisabled,\n  focusAttribute: state.focusAttribute,\n  loadReviewEnabled: state.loadReviewEnabled\n});\nconst mapDispatchToProps = {\n  pushLine,\n  setLineRole,\n  setSegmentQAState,\n  setSegmentCategory,\n  setAttributeFocusInfo,\n  setSegmentAttributes\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SegmentDetail);","map":{"version":3,"names":["React","connect","EasyForm","LineDetail","pushLine","setLineRole","setSegmentQAState","setSegmentCategory","setSegmentAttributes","setAttributeFocusInfo","formatTimestamp","SegmentMode","translate","triggerForm","attributeType","isInput","QAForm","isReviewEditable","isAnnotationReadonly","SegmentDetail","Component","constructor","props","handleFocusAttribute","focusAttribute","videoIndex","segmentIndex","type","lineIndex","key","currentVideo","currentSegment","attributeContainer","document","getElementsByClassName","line","timer","setTimeout","clearTimeout","label","querySelector","attribute","scrollIntoView","focus","documentElement","scroll","top","handleKeyDown","e","toolMode","annotateDisabled","keyCode","preventDefault","setCurrentSegment","index","i","parseInt","ontologyValidKeys","length","role","ctrlKey","qaChecked","changeSegmentCategory","data","segmentConfig","results","segment","attributes","updatedValues","segmentRef","createRef","isPreventScroll","handleButtonClick","newRole","value","allRoles","currentRoles","indexOf","componentWillMount","window","addEventListener","ontology","forEach","push","shouldComponentUpdate","nextProps","keyAttribute","nextCurrentValues","config","fields","options","find","v","name","unshift","readonly","map","field","optionType","undefined","defaultValue","footerVisible","componentDidUpdate","prevProps","_this$props$focusAttr","current","scrollTop","render","content","createElement","className","ref","id","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","start","end","SegmentDetailChangeButton","shortcut","onClick","disabled","type2","Object","assign","theme","autoFocus","onChange","overlap","style","display","mapStateToProps","state","lineConfig","videos","segmentMode","loadReviewEnabled","mapDispatchToProps"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/SegmentDetail/SegmentDetail.jsx"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport './SegmentDetail.scss';\nimport EasyForm from '@appen-china/easy-form';\nimport LineDetail from './LineDetail/LineDetail';\nimport { pushLine, setLineRole, setSegmentQAState, setSegmentCategory, setSegmentAttributes, setAttributeFocusInfo } from '../../redux/action';\nimport { formatTimestamp, SegmentMode, translate, triggerForm, attributeType } from '../../constants';\nimport { isInput } from '../../redux/reducer/segmentController';\nimport QAForm from './QAForm/QAForm';\nimport { isReviewEditable, isAnnotationReadonly } from '../../../../utils/tool-mode';\n\nclass SegmentDetail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.segmentRef = React.createRef();\n    this.isPreventScroll = false;\n  }\n\n  handleButtonClick(e, type) {\n    const { currentSegment } = this.props;\n    let newRole = null;\n    switch (type) {\n      case 'prev':\n        this.props.setCurrentSegment({ index: currentSegment - 1 });\n        break;\n      case 'next':\n        this.props.setCurrentSegment({ index: currentSegment + 1 });\n        break;\n      case 'push':\n        // eslint-disable-next-line no-restricted-syntax\n        for (const value of this.allRoles) {\n          if (this.currentRoles.indexOf(value) < 0) {\n            newRole = value;\n            break;\n          }\n        }\n        this.props.pushLine({\n          videoIndex: null,\n          segmentIndex: currentSegment,\n          role: newRole,\n        });\n        break;\n      default:\n        break;\n    }\n  }\n\n  // eslint-disable-next-line react/no-deprecated\n  componentWillMount() {\n    // eslint-disable-next-line no-undef\n    window.addEventListener('keydown', this.handleKeyDown);\n    this.ontologyValidKeys = [];\n    const { ontology } = this.props;\n    ontology.forEach((value, key) => {\n      this.ontologyValidKeys.push(key);\n    });\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const { results, segmentConfig, currentVideo, currentSegment, keyAttribute, toolMode, annotateDisabled } = nextProps;\n    const nextCurrentValues = results[currentVideo][currentSegment];\n    if (\n      currentVideo !== this.props.currentVideo ||\n      currentSegment !== this.props.currentSegment ||\n      !this.config ||\n      annotateDisabled !== this.props.annotateDisabled\n    ) {\n      this.isPreventScroll = true;\n      const { fields } = segmentConfig;\n      if (keyAttribute.options.length > 0 && !fields.find((v) => v.name === keyAttribute.name)) {\n        fields.unshift(keyAttribute);\n      }\n      const readonly = isAnnotationReadonly(toolMode) || annotateDisabled;\n      this.config = {\n        ...segmentConfig,\n        fields: fields.map((field) => ({\n          ...field,\n          readonly: readonly || field.readonly,\n          optionType: 'button',\n          ...nextCurrentValues && nextCurrentValues.attributes && nextCurrentValues.attributes[field.name] !== undefined && {\n            defaultValue: nextCurrentValues.attributes[field.name],\n          }\n        })),\n        footerVisible: false,\n      };\n    } else {\n      this.isPreventScroll = false;\n    }\n    return true;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.segmentRef.current && this.isPreventScroll) {\n      let timer = setTimeout(() => {\n        clearTimeout(timer);\n        timer = null;\n        this.segmentRef.current.scrollTop = 0;\n      }, 10);\n    }\n    if (this.props.focusAttribute?.key) {\n      this.handleFocusAttribute();\n    }\n  }\n\n  handleFocusAttribute = () => {\n    const { focusAttribute: { videoIndex, segmentIndex, type, lineIndex, key }, currentVideo, currentSegment } = this.props;\n    if (videoIndex === currentVideo && segmentIndex === currentSegment && key) {\n      const attributeContainer = document.getElementsByClassName(type === attributeType.line ? `line-attributes-${lineIndex}` : 'segment-attributes')[0];\n      if (attributeContainer) {\n        let timer = setTimeout(() => {\n          clearTimeout(timer);\n          timer = null;\n          const label = attributeContainer.querySelector(`label[for=${key}]`);\n          const attribute = attributeContainer?.querySelector(`#${key}`);\n          label?.scrollIntoView();\n          attribute?.focus();\n          document.documentElement.scroll({ top: 0 });\n          this.props.setAttributeFocusInfo();\n        }, 10);\n      }\n    }\n  };\n\n  handleKeyDown = (e) => {\n    if (isInput()) return;\n    const { currentSegment, toolMode, annotateDisabled } = this.props;\n    if (e.keyCode === 81) { // q\n      e.preventDefault();\n      this.props.setCurrentSegment({ index: currentSegment - 1 });\n    } else if (e.keyCode === 69) { // e\n      e.preventDefault();\n      this.props.setCurrentSegment({ index: currentSegment + 1 });\n    }\n    if (e.keyCode >= 48 && e.key <= 57 && !annotateDisabled) {\n      const i = parseInt(e.key, 10);\n      if (i >= this.ontologyValidKeys.length) return;\n      const role = this.ontologyValidKeys[i];\n      this.props.setLineRole({\n        videoIndex: null,\n        segmentIndex: null,\n        lineIndex: 0,\n        role,\n      });\n    }\n    if (e.keyCode === 13 && e.ctrlKey && isReviewEditable(toolMode)) {\n      e.preventDefault();\n      this.props.setSegmentQAState({ qaChecked: true });\n      this.props.setCurrentSegment({ index: currentSegment + 1 });\n    }\n  };\n\n  changeSegmentCategory = (data) => {\n    const { segmentConfig, results, currentVideo, currentSegment } = this.props;\n    const segment = results[currentVideo][currentSegment];\n    const attributes = {\n      ...segment.attributes,\n      ...data,\n    };\n    const { updatedValues } = triggerForm(segmentConfig, attributes);\n    this.props.setSegmentAttributes({\n      videoIndex: currentVideo,\n      segmentIndex: currentSegment,\n      attributes: updatedValues\n    });\n  };\n\n  render() {\n    const { results, ontology, currentVideo, currentSegment, toolMode } = this.props;\n    this.segment = results[currentVideo][currentSegment];\n    if (!this.segment) {\n      return null;\n    }\n    this.currentRoles = [];\n    this.allRoles = [];\n    ontology.forEach((value, key) => {\n      this.allRoles.push(key);\n    });\n    this.segment.content.forEach((value) => {\n      this.currentRoles.push(value.role);\n    });\n    const segment = results[currentVideo][currentSegment];\n    return (\n      <div className=\"segment-detail-container\" ref={this.segmentRef} key={`${currentVideo}_${currentSegment}_${segment.id}`}>\n        <div className=\"segment-detail-head\">\n          <div className=\"segment-detail-index\">{currentSegment + 1}</div>\n          <div className=\"segment-detail-timestamp\">\n            {`${formatTimestamp(segment.start)}~${formatTimestamp(segment.end)}`}\n          </div>\n          <SegmentDetailChangeButton\n            className=\"segment-detail-change\"\n            content={translate('next')}\n            shortcut=\"E\"\n            onClick={(e) => this.handleButtonClick(e, 'next')}\n            disabled={currentSegment + 1 === results[currentVideo].length}\n            type2=\"next\"\n          />\n          <SegmentDetailChangeButton\n            className=\"segment-detail-change\"\n            content={translate('prev')}\n            shortcut=\"Q\"\n            onClick={(e) => this.handleButtonClick(e, 'prev')}\n            disabled={currentSegment === 0}\n            type2=\"prev\"\n          />\n        </div>\n        <div className=\"segment-detail-body\">\n          {isReviewEditable(toolMode) ? <QAForm /> : null}\n          <div className=\"segment-attributes\">\n            <EasyForm\n              theme=\"dark\"\n              autoFocus={false}\n              {...this.config && this.config}\n              onChange={this.changeSegmentCategory}\n            />\n          </div>\n          {segment.content.map((line, index) => (\n            <LineDetail\n              /* eslint-disable-next-line react/no-array-index-key */\n              key={`line-detail-${index}`}\n              line={line}\n              currentRoles={this.currentRoles}\n              lineIndex={index}\n            />\n          ))}\n        </div>\n        {(this.props.overlap) && (\n          <button\n            className=\"segment-push-line\"\n            onClick={(e) => this.handleButtonClick(e, 'push')}\n            style={{ display: this.currentRoles.length === this.allRoles.length ? 'none' : 'block' }}\n            disabled={isAnnotationReadonly(this.props.toolMode) || this.props.annotateDisabled}\n          >\n            <div className=\"add-role-icon\"> +</div>\n            {translate('addRole')}\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nconst SegmentDetailChangeButton = ((props) => (\n  <button\n    className=\"segment-detail-change\"\n    type=\"button\"\n    onClick={(e) => props.onClick(e, props.type2)}\n    style={{ display: props.disabled ? 'none' : 'block' }}\n  >\n    {props.content}\n    <span>\n      {` {${props.shortcut}} `}\n    </span>\n  </button>\n));\n\nconst mapStateToProps = (state) => ({\n  results: state.results,\n  ontology: state.ontology,\n  segmentConfig: state.segmentConfig,\n  lineConfig: state.lineConfig,\n  currentVideo: state.currentVideo,\n  currentSegment: state.currentSegment,\n  videos: state.videos,\n  toolMode: state.toolMode,\n  overlap: state.overlap,\n  keyAttribute: state.keyAttribute,\n  segmentMode: state.segmentMode,\n  annotateDisabled: state.annotateDisabled,\n  focusAttribute: state.focusAttribute,\n  loadReviewEnabled: state.loadReviewEnabled,\n});\nconst mapDispatchToProps = {\n  pushLine,\n  setLineRole,\n  setSegmentQAState,\n  setSegmentCategory,\n  setAttributeFocusInfo,\n  setSegmentAttributes,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SegmentDetail);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}