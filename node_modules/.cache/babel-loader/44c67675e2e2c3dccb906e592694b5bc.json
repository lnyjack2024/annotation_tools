{"ast":null,"code":"import{makeAutoObservable,toJS}from'mobx';import{xor,findIndex,isEqual}from'lodash';import{substr,strlen}from'fbjs/lib/UnicodeUtils';import{v4 as uuidv4}from'uuid';import{ReviewItemResult,TAG}from'../types';import{MISSING_LABEL}from'./constant';import{generateConfigKeyByKeys,getConfigByKeys,getNextInLoopList,getTextByInsertion}from'../utils/helper';import{isConnection,isInsertion,isLabel,isQATag}from'./tag_mode';import localMessage from'../locale';const missKeys=generateConfigKeyByKeys(MISSING_LABEL.keys);/**\n * store for config\n * @class\n */export default class OntologyStore{constructor(rootStore){var _this=this;/**\n   * root store\n   */this.rootStore=void 0;this.ontologyConfigMap=new Map();this.ontologiesStatusMap=new Map();this.ontologies=void 0;this.results={labels:[],insertions:[],connections:[]};this.text='';this.formatOntologyItem=function(ontologyItem,type){let keys=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[];if(!ontologyItem){return[];}const result=[];ontologyItem.forEach(item=>{const newKeys=[...keys];newKeys.push(item.text);const{children,...restProps}=item;const newOntologyItem={...restProps,type,keys:newKeys};if(item.children&&item.children.length>0){newOntologyItem.children=_this.formatOntologyItem(item.children,type,newKeys);}result.push(newOntologyItem);});return result;};this.updateOntologiesCollapseStatus=(keys,collapseStatus)=>{const configKey=generateConfigKeyByKeys(keys);const currentStatus=this.ontologiesStatusMap.get(configKey);if(!currentStatus){return;}this.ontologiesStatusMap.set(configKey,{...currentStatus,isCollapse:collapseStatus});this.updateOntologiesStatusMap();};this.getItemPosition=item=>{if(!item){return-1;}if(isLabel(item.type)){return item.start;}if(isInsertion(item.type)){return item.at;}if(isConnection(item.type)){const startTag=this.getItem(item.fromType,item.fromId);return this.getItemPosition(startTag);}return-1;};makeAutoObservable(this,{rootStore:false},{autoBind:true});this.rootStore=rootStore;}getOntologiesStatusMap(){return toJS(this.ontologiesStatusMap);}/**\n   * init from paylod\n   * @param payload\n   */init(payload){const{labels,insertions,connections,content}=payload;this.text=content;this.formatOntologies(labels,insertions,connections);this.generateConfigMap(labels,insertions,connections);}formatOntologies(labels,insertions,connections){const formattedLabels=this.formatOntologyItem(labels,TAG.LABEL);const formattedInsertions=this.formatOntologyItem(insertions,TAG.INSERTION);const formattedConnections=this.formatOntologyItem(connections,TAG.CONNECTION);if(this.rootStore.reviewable||this.rootStore.isRework){const missingLabel=[{...MISSING_LABEL,type:TAG.LABEL_QA,text:localMessage(MISSING_LABEL.text)}];this.ontologies={labels_qa:missingLabel};}this.ontologies={...this.ontologies,labels:formattedLabels,insertions:formattedInsertions,connections:formattedConnections};}generateConfigMap(labels,insertions,connections){if(this.rootStore.reviewable||this.rootStore.isRework){this.ontologyConfigMap.set(generateConfigKeyByKeys(MISSING_LABEL.keys),{...MISSING_LABEL,type:TAG.LABEL_QA,text:localMessage(MISSING_LABEL.text)});}if(labels){this.generateConfigMapItem(labels,TAG.LABEL);}if(insertions){this.generateConfigMapItem(insertions,TAG.INSERTION);}if(connections){this.generateConfigMapItem(connections,TAG.CONNECTION);}}generateConfigMapItem(tags,type){let key=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[];let isChild=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;let childKeys=arguments.length>4&&arguments[4]!==undefined?arguments[4]:[];tags.forEach(tag=>{childKeys.push(tag.text);let newKey=[...key];newKey.push(tag.text);const newTag={type,color:tag.color,displayName:tag.displayName,text:tag.text,isChild,keys:newKey,childKeys:[]};if(tag.children&&tag.children.length>0){const childKeysArr=this.generateConfigMapItem(tag.children,type,newKey,true);newTag.childKeys=childKeysArr;this.ontologyConfigMap.set(generateConfigKeyByKeys(newKey),newTag);}else{this.ontologyConfigMap.set(generateConfigKeyByKeys(newKey),newTag);newKey=[];}});return childKeys;}calcCountItem(ontology){const{labels,insertions,connections}=this.results;const{missing}=this.rootStore.review.reviews;const{keys,type,children}=ontology;const configKey=generateConfigKeyByKeys(keys);const currentStatus=this.ontologiesStatusMap.get(configKey);const newItem={isCollapse:true,keys,tagCount:0,tagCountContainChildren:0,rejectCount:0,rejectCountContainChildren:0,approveCount:0};if(currentStatus){newItem.isCollapse=currentStatus.isCollapse;newItem.keys=currentStatus.keys;}let tagCount=0;let rejectCount=0;let childRejectCount=0;let childTagCount=0;let approveCount=0;if(type===TAG.LABEL_QA){tagCount=missing.length;this.ontologiesStatusMap.set(missKeys,{isCollapse:false,keys:MISSING_LABEL.keys,tagCount});}if(type===TAG.LABEL){labels.forEach(label=>{if(isEqual(label.keys,keys)){tagCount+=1;const review=this.rootStore.review.getReview(label.id);if(review){if(review.result===ReviewItemResult.REJECT){rejectCount+=1;}else if((review===null||review===void 0?void 0:review.result)===ReviewItemResult.PASS){approveCount+=1;}}}});}if(type===TAG.INSERTION){insertions.forEach(insertion=>{if(isEqual(insertion.keys,keys)){tagCount+=1;const review=this.rootStore.review.getReview(insertion.id);if(review){if(review.result===ReviewItemResult.REJECT){rejectCount+=1;}else if((review===null||review===void 0?void 0:review.result)===ReviewItemResult.PASS){approveCount+=1;}}}});}if(type===TAG.CONNECTION){connections.forEach(connection=>{if(isEqual(connection.keys,keys)){tagCount+=1;const review=this.rootStore.review.getReview(connection.id);if(review){if(review.result===ReviewItemResult.REJECT){rejectCount+=1;}else if((review===null||review===void 0?void 0:review.result)===ReviewItemResult.PASS){approveCount+=1;}}}});}if(children&&children.length>0){const childCountInfo=this.calcCount(children);childRejectCount=childCountInfo.rejectCount;childTagCount=childCountInfo.tagCount;}newItem.tagCount=tagCount;newItem.rejectCount=rejectCount;newItem.approveCount=approveCount;newItem.rejectCountContainChildren=rejectCount+childRejectCount;newItem.tagCountContainChildren=tagCount+childTagCount;return{configKey,newItem};}calcCount(ontologies){const result={rejectCount:0,tagCount:0};ontologies.forEach(ontology=>{const{configKey,newItem}=this.calcCountItem(ontology);this.ontologiesStatusMap.set(configKey,newItem);result.tagCount+=newItem.tagCountContainChildren;result.rejectCount+=newItem.rejectCountContainChildren;});return result;}updateOntologiesStatusMap(){if(!this.ontologies){return;}Object.values(this.ontologies).forEach(ontologies=>{this.calcCount(ontologies);});}updateOntologiesCollapseStatusAll(collapseStatus){this.ontologiesStatusMap.forEach((value,key)=>{if(key!==missKeys){value.isCollapse=collapseStatus;}});this.updateOntologiesStatusMap();}parseResults(newResult){var _newResult$labels,_newResult$labels2,_newResult$insertions,_newResult$insertions2,_newResult$connection,_newResult$connection2;if(!newResult)return;const{results}=this;const length=strlen(this.text);// parse label\n(_newResult$labels=newResult.labels)===null||_newResult$labels===void 0?void 0:_newResult$labels.forEach(label=>{var _getConfigByKeys;// invalid start & end\nif(typeof label!=='object')return;if(Number.isNaN(label.start)||label.start===null||label.start<0||label.start>=length){label.dirty=true;return;}if(Number.isNaN(label.end)||label.end===null||label.end<0||label.end>=length+1){label.dirty=true;return;}if(!label.keys){this.ontologyConfigMap.forEach((value,key)=>{const keys=value.keys;if(keys[keys.length-1]===label.value){label.keys=value.keys;}});}// invalid value\nif(!isLabel((_getConfigByKeys=getConfigByKeys(this.ontologyConfigMap,label.keys))===null||_getConfigByKeys===void 0?void 0:_getConfigByKeys.type)){label.dirty=true;return;}// invalid & missing id\nif(!label.id){label.id=uuidv4();}if(!label.type){label.type=TAG.LABEL;}// missing text\nif(!label.text)label.text=substr(this.text,label.start,label.end-label.start);});if(!(results===null||results===void 0?void 0:results.labels)){results.labels=[];}results.labels=((_newResult$labels2=newResult.labels)===null||_newResult$labels2===void 0?void 0:_newResult$labels2.filter(label=>typeof label==='object'&&!label.dirty))||[];// parse insertion\n(_newResult$insertions=newResult.insertions)===null||_newResult$insertions===void 0?void 0:_newResult$insertions.forEach(insertion=>{var _getConfigByKeys2;// invalid start & end\nif(typeof insertion!=='object')return;if(Number.isNaN(insertion.at)||insertion.at===null||insertion.at<0||insertion.at>=length){insertion.dirty=true;return;}if(!insertion.keys){this.ontologyConfigMap.forEach((value,key)=>{const keys=value.keys;if(keys[keys.length-1]===insertion.value){insertion.keys=value.keys;}});}// invalid value\nif(!isInsertion((_getConfigByKeys2=getConfigByKeys(this.ontologyConfigMap,insertion.keys))===null||_getConfigByKeys2===void 0?void 0:_getConfigByKeys2.type)){insertion.dirty=true;return;}// invalid & missing id\nif(!insertion.id){insertion.id=uuidv4();}if(!insertion.type){insertion.type=TAG.INSERTION;}// missing text\nif(!insertion.text)insertion.text=getTextByInsertion(this.text,insertion);});if(!(results===null||results===void 0?void 0:results.insertions)){results.insertions=[];}results.insertions=((_newResult$insertions2=newResult.insertions)===null||_newResult$insertions2===void 0?void 0:_newResult$insertions2.filter(insertion=>typeof insertion==='object'&&!insertion.dirty))||[];// parse connection\n(_newResult$connection=newResult.connections)===null||_newResult$connection===void 0?void 0:_newResult$connection.forEach(connection=>{var _getConfigByKeys3;// invalid start & end\nif(typeof connection!=='object')return;if(!connection.keys){this.ontologyConfigMap.forEach((value,key)=>{const keys=value.keys;if(keys[keys.length-1]===connection.value){connection.keys=value.keys;}});}if(!connection.fromId&&connection.from){connection.fromId=connection.from;}if(!connection.fromType&&connection.from){const target=this.getItemById(connection.from);if(target){connection.fromType=target.type;}}if(!connection.toId&&connection.to){connection.toId=connection.to;}if(!connection.toType&&connection.to){const target=this.getItemById(connection.to);if(target){connection.toType=target.type;}}// invalid value\nif(!isConnection((_getConfigByKeys3=getConfigByKeys(this.ontologyConfigMap,connection.keys))===null||_getConfigByKeys3===void 0?void 0:_getConfigByKeys3.type)){connection.dirty=true;return;}// invalid from & to\nif(findIndex(newResult.labels,{id:connection.fromId})===-1&&findIndex(newResult.insertions,{id:connection.fromId})===-1){connection.dirty=true;return;}if(findIndex(newResult.labels,{id:connection.toId})===-1&&findIndex(newResult.insertions,{id:connection.toId})===-1){connection.dirty=true;return;}if(!connection.type){connection.type=TAG.CONNECTION;}// invalid & missing id\nif(!connection.id){connection.id=uuidv4();}});if(!(results===null||results===void 0?void 0:results.connections)){results.connections=[];}results.connections=((_newResult$connection2=newResult.connections)===null||_newResult$connection2===void 0?void 0:_newResult$connection2.filter(connection=>typeof connection==='object'&&!connection.dirty))||[];console.log('results parse',results);}getResults(){let withMissing=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;const{labels,insertions,connections}=this.results;const{missing}=this.rootStore.review.reviews;let allLabels=labels;if(withMissing){allLabels=labels.concat(missing);}return{labels:allLabels.map(item=>toJS(item)),insertions:insertions.map(item=>toJS(item)),connections:connections.map(item=>toJS(item))};}setResults(){let newResults=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const results=JSON.parse(JSON.stringify(newResults));this.results={labels:results.labels||[],insertions:results.insertions||[],connections:results.connections||[]};}addResultItem(newItem){let relatedConnections=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];const{insertions,labels,connections}=this.results;const{type}=newItem;switch(true){case isLabel(type):{labels.unshift(newItem);labels.sort((a,b)=>a.start-b.start);relatedConnections.forEach(connection=>{connections.unshift(connection);});break;}case isConnection(type):{connections.unshift(newItem);break;}case isInsertion(type):{insertions.unshift(newItem);insertions.sort((a,b)=>a.at-b.at);relatedConnections.forEach(connection=>{connections.unshift(connection);});break;}default:break;}}deleteTag(type,id){const{connections,labels,insertions}=this.results;switch(true){case isLabel(type):{const index=findIndex(labels,{id});const label=labels[index];labels.splice(index,1);const nextConnections=connections.filter(connection=>connection.fromId!==id&&connection.toId!==id);const relatedConnections=xor(connections,nextConnections);this.results.connections=nextConnections;return{relatedConnections,label};}case isConnection(type):{const index=findIndex(connections,{id});const connection=connections[index];connections.splice(index,1);return{connection};}case isInsertion(type):{const index=findIndex(insertions,{id});const insertion=insertions[index];insertions.splice(index,1);const nextConnections=connections.filter(connection=>connection.fromId!==id&&connection.toId!==id);const relatedConnections=xor(connections,nextConnections);this.results.connections=nextConnections;return{relatedConnections,insertion};}default:break;}}getItemById(id){const{labels,insertions,connections}=this.results;const{missing}=this.rootStore.review.reviews;const targetArr=[];return targetArr.concat(missing).concat(labels).concat(insertions).concat(connections).find(item=>item.id===id);}getItem(type,id){const{labels,insertions,connections}=this.results;const{missing}=this.rootStore.review.reviews;switch(true){case isQATag(type):{const index=findIndex(missing,{id});return missing[index];}case isLabel(type):{const index=findIndex(labels,{id});return labels[index];}case isConnection(type):{const index=findIndex(connections,{id});return connections[index];}case isInsertion(type):{const index=findIndex(insertions,{id});return insertions[index];}default:return null;}}stepToTag(id,step){const{labels,connections,insertions}=this.results;const{missing}=this.rootStore.review.reviews;let targetList;switch(true){case isQATag(id):targetList=missing;break;case isLabel(id):targetList=labels;break;case isConnection(id):targetList=connections;break;case isInsertion(id):targetList=insertions;break;default:break;}if(!targetList){return null;}const index=findIndex(targetList,{id});return getNextInLoopList(targetList,index,step);}moveToTagByStep(id,step){let reviewOnly=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;const{labels,connections,insertions}=this.results;const{missing,data}=this.rootStore.review.reviews;if(reviewOnly){const list=Object.keys(data).map(key=>this.getItem(TAG.LABEL_QA,key)).sort((a,b)=>this.getItemPosition(a)-this.getItemPosition(b));if(!data[id]){// if id is not reviewed item then start from 0\nreturn list[0];}return getNextInLoopList(list,findIndex(list,{id}),step);}let list=[];list=list.concat(missing).concat(labels).concat(connections).concat(insertions);list.sort((a,b)=>this.getItemPosition(a)-this.getItemPosition(b));return getNextInLoopList(list,findIndex(list,{id}),step);}tagMove(prevStart,prevEnd,offset){const{text}=this;this.results.labels=this.results.labels.map(label=>{const newLabel={...label};// labels overlap & before slice\nif(label.start<prevStart&&label.end>prevStart&&label.end<=prevEnd){newLabel.end=prevEnd+offset;newLabel.text=substr(text,newLabel.start,newLabel.end-newLabel.start);}else if(label.start>=prevStart&&label.end<=prevEnd)newLabel.dirty=true;// labels contained slice\nelse if(label.start>=prevStart&&label.start<prevEnd&&label.end>prevEnd){// labels overlap & behind slice\nnewLabel.end+=offset;newLabel.start=prevEnd+offset;newLabel.text=substr(text,newLabel.start,newLabel.end-newLabel.start);}else if(label.start<prevStart&&label.end>prevEnd){// labels contain slice\nnewLabel.end+=offset;newLabel.text=substr(text,newLabel.start,newLabel.end-newLabel.start);}else if(label.start>prevEnd){// labels behind slice\nnewLabel.end+=offset;newLabel.start+=offset;}// labels before slice\n// nothing happened\nreturn newLabel;});this.results.insertions=this.results.insertions.map(insertion=>{const newInsertion={...insertion};// insertions behind slice\nif(insertion.at>=prevEnd){newInsertion.at+=offset;}else if(insertion.at>prevStart&&insertion.at<prevEnd)newInsertion.dirty=true;// insertions contained slice\n// insertions before slice\n// nothing happened\nif(insertion.at>prevStart-5&&insertion.at<prevEnd+5){newInsertion.text=getTextByInsertion(text,{at:newInsertion.at,value:newInsertion.value});}return newInsertion;});this.rootStore.review.reviews.missing=this.rootStore.review.reviews.missing.map(label=>{const newLabel={...label};// labels overlap & before slice\nif(label.start<prevStart&&label.end>prevStart&&label.end<=prevEnd){newLabel.end=prevEnd+offset;newLabel.text=substr(text,newLabel.start,newLabel.end-newLabel.start);}else if(label.start>=prevStart&&label.end<=prevEnd)newLabel.dirty=true;// labels contained slice\nelse if(label.start>=prevStart&&label.start<prevEnd&&label.end>prevEnd){// labels overlap & behind slice\nnewLabel.end+=offset;newLabel.start=prevEnd+offset;newLabel.text=substr(text,newLabel.start,newLabel.end-newLabel.start);}else if(label.start<prevStart&&label.end>prevEnd){// labels contain slice\nnewLabel.end+=offset;newLabel.text=substr(text,newLabel.start,newLabel.end-newLabel.start);}else if(label.start>prevEnd){// labels behind slice\nnewLabel.end+=offset;newLabel.start+=offset;}// labels before slice\n// nothing happened\nreturn newLabel;});this.results.insertions=this.results.insertions.filter(insertion=>!insertion.dirty);this.results.labels=this.results.labels.filter(label=>!label.dirty);this.rootStore.review.reviews.missing=this.rootStore.review.reviews.missing.filter(label=>!label.dirty);}}","map":{"version":3,"names":["makeAutoObservable","toJS","xor","findIndex","isEqual","substr","strlen","v4","uuidv4","ReviewItemResult","TAG","MISSING_LABEL","generateConfigKeyByKeys","getConfigByKeys","getNextInLoopList","getTextByInsertion","isConnection","isInsertion","isLabel","isQATag","localMessage","missKeys","keys","OntologyStore","constructor","rootStore","_this","ontologyConfigMap","Map","ontologiesStatusMap","ontologies","results","labels","insertions","connections","text","formatOntologyItem","ontologyItem","type","arguments","length","undefined","result","forEach","item","newKeys","push","children","restProps","newOntologyItem","updateOntologiesCollapseStatus","collapseStatus","configKey","currentStatus","get","set","isCollapse","updateOntologiesStatusMap","getItemPosition","start","at","startTag","getItem","fromType","fromId","autoBind","getOntologiesStatusMap","init","payload","content","formatOntologies","generateConfigMap","formattedLabels","LABEL","formattedInsertions","INSERTION","formattedConnections","CONNECTION","reviewable","isRework","missingLabel","LABEL_QA","labels_qa","generateConfigMapItem","tags","key","isChild","childKeys","tag","newKey","newTag","color","displayName","childKeysArr","calcCountItem","ontology","missing","review","reviews","newItem","tagCount","tagCountContainChildren","rejectCount","rejectCountContainChildren","approveCount","childRejectCount","childTagCount","label","getReview","id","REJECT","PASS","insertion","connection","childCountInfo","calcCount","Object","values","updateOntologiesCollapseStatusAll","value","parseResults","newResult","_newResult$labels","_newResult$labels2","_newResult$insertions","_newResult$insertions2","_newResult$connection","_newResult$connection2","_getConfigByKeys","Number","isNaN","dirty","end","filter","_getConfigByKeys2","_getConfigByKeys3","from","target","getItemById","toId","to","toType","console","log","getResults","withMissing","allLabels","concat","map","setResults","newResults","JSON","parse","stringify","addResultItem","relatedConnections","unshift","sort","a","b","deleteTag","index","splice","nextConnections","targetArr","find","stepToTag","step","targetList","moveToTagByStep","reviewOnly","data","list","tagMove","prevStart","prevEnd","offset","newLabel","newInsertion"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/editable-text/store/OntologyStore.ts"],"sourcesContent":["import { makeAutoObservable, toJS } from 'mobx';\nimport { xor, findIndex, isEqual } from 'lodash';\nimport { substr, strlen } from 'fbjs/lib/UnicodeUtils';\nimport { v4 as uuidv4 } from 'uuid';\nimport RootStore from './RootStore';\nimport { ConnectionItem, InsertionItem, LabelItem, MissingItem, Ontologies, OntologiesStatus, OntologyConfigMap, OntologyItem, OntologyItemPayLoad, OntologyItemType, OntologyResult, Payload, ReviewDataItem, ReviewItemResult, ReviewResult, TAG } from '../types';\nimport { MISSING_LABEL } from './constant';\nimport { generateConfigKeyByKeys, getConfigByKeys, getNextInLoopList, getTextByInsertion } from '../utils/helper';\nimport { isConnection, isInsertion, isLabel, isQATag } from './tag_mode';\nimport localMessage from '../locale';\n\nconst missKeys = generateConfigKeyByKeys(MISSING_LABEL.keys);\n/**\n * store for config\n * @class\n */\nexport default class OntologyStore {\n  /**\n   * root store\n   */\n  rootStore;\n\n  ontologyConfigMap = new Map();\n\n  ontologiesStatusMap: Map<string, OntologiesStatus> = new Map();\n\n  ontologies: Ontologies | undefined;\n\n  results: OntologyResult = { labels: [], insertions: [], connections: [] };\n\n  text = '';\n\n  constructor(rootStore: typeof RootStore) {\n    makeAutoObservable(this, {\n      rootStore: false,\n    }, {\n      autoBind: true,\n    });\n\n    this.rootStore = rootStore;\n  }\n\n  getOntologiesStatusMap() {\n    return toJS(this.ontologiesStatusMap);\n  }\n\n  /**\n   * init from paylod\n   * @param payload\n   */\n  init(payload: Payload) {\n    const { labels, insertions, connections, content } = payload;\n\n    this.text = content;\n    this.formatOntologies(labels, insertions, connections);\n    this.generateConfigMap(labels, insertions, connections);\n  }\n\n  formatOntologyItem = (ontologyItem: OntologyItemPayLoad[] | undefined, type: OntologyItemType, keys: string[] = []) => {\n    if (!ontologyItem) {\n      return [];\n    }\n    const result: OntologyItem[] = [];\n    ontologyItem.forEach((item) => {\n      const newKeys = [...keys];\n      newKeys.push(item.text);\n      const { children, ...restProps } = item;\n      const newOntologyItem: OntologyItem = {\n        ...restProps,\n        type,\n        keys: newKeys\n      };\n      if (item.children && item.children.length > 0) {\n        newOntologyItem.children = this.formatOntologyItem(item.children, type, newKeys);\n      }\n      result.push(newOntologyItem);\n    });\n    return result;\n  };\n\n  formatOntologies(labels: OntologyItemPayLoad[] | undefined, insertions: OntologyItemPayLoad[] | undefined, connections: OntologyItemPayLoad[] | undefined) {\n    const formattedLabels = this.formatOntologyItem(labels, TAG.LABEL);\n    const formattedInsertions = this.formatOntologyItem(insertions, TAG.INSERTION);\n    const formattedConnections = this.formatOntologyItem(connections, TAG.CONNECTION);\n    if (this.rootStore.reviewable || this.rootStore.isRework) {\n      const missingLabel: OntologyItem[] = [{ ...MISSING_LABEL, type: TAG.LABEL_QA, text: localMessage(MISSING_LABEL.text) }];\n      this.ontologies = { labels_qa: missingLabel };\n    }\n    this.ontologies = {\n      ...this.ontologies,\n      labels: formattedLabels,\n      insertions: formattedInsertions,\n      connections: formattedConnections\n    };\n  };\n\n  generateConfigMap(labels: OntologyItemPayLoad[] | undefined, insertions: OntologyItemPayLoad[] | undefined, connections: OntologyItemPayLoad[] | undefined) {\n    if (this.rootStore.reviewable || this.rootStore.isRework) {\n      this.ontologyConfigMap.set(generateConfigKeyByKeys(MISSING_LABEL.keys), { ...MISSING_LABEL, type: TAG.LABEL_QA, text: localMessage(MISSING_LABEL.text) });\n    }\n    if (labels) { this.generateConfigMapItem(labels, TAG.LABEL); }\n    if (insertions) { this.generateConfigMapItem(insertions, TAG.INSERTION); }\n    if (connections) { this.generateConfigMapItem(connections, TAG.CONNECTION); }\n  };\n\n  generateConfigMapItem(tags: OntologyItemPayLoad[], type: OntologyItemType, key: string[] = [], isChild = false, childKeys: string[] = []) {\n    tags.forEach((tag) => {\n      childKeys.push(tag.text);\n      let newKey = [...key];\n      newKey.push(tag.text);\n      const newTag: OntologyConfigMap = {\n        type,\n        color: tag.color,\n        displayName: tag.displayName,\n        text: tag.text,\n        isChild,\n        keys: newKey,\n        childKeys: []\n      };\n\n      if (tag.children && tag.children.length > 0) {\n        const childKeysArr = this.generateConfigMapItem(tag.children, type, newKey, true);\n        newTag.childKeys = childKeysArr;\n        this.ontologyConfigMap.set(generateConfigKeyByKeys(newKey), newTag);\n      } else {\n        this.ontologyConfigMap.set(generateConfigKeyByKeys(newKey), newTag);\n\n        newKey = [];\n      }\n    });\n    return childKeys;\n  };\n\n  calcCountItem(ontology: OntologyItem) {\n    const { labels, insertions, connections } = this.results;\n    const { missing } = this.rootStore.review.reviews;\n    const { keys, type, children } = ontology;\n    const configKey = generateConfigKeyByKeys(keys);\n    const currentStatus = this.ontologiesStatusMap.get(configKey);\n    const newItem: OntologiesStatus = {\n      isCollapse: true,\n      keys,\n      tagCount: 0,\n      tagCountContainChildren: 0,\n      rejectCount: 0,\n      rejectCountContainChildren: 0,\n      approveCount: 0,\n    };\n    if (currentStatus) {\n      newItem.isCollapse = currentStatus.isCollapse;\n      newItem.keys = currentStatus.keys;\n    }\n    let tagCount = 0;\n    let rejectCount = 0;\n    let childRejectCount = 0;\n    let childTagCount = 0;\n    let approveCount = 0;\n\n    if (type === TAG.LABEL_QA) {\n      tagCount = missing.length;\n      this.ontologiesStatusMap.set(missKeys,\n        {\n          isCollapse: false, keys: MISSING_LABEL.keys, tagCount\n        });\n    }\n    if (type === TAG.LABEL) {\n      labels.forEach((label) => {\n        if (isEqual(label.keys, keys)) {\n          tagCount += 1;\n          const review = this.rootStore.review.getReview(label.id);\n          if (review) {\n            if (review.result === ReviewItemResult.REJECT) {\n              rejectCount += 1;\n            } else if (review?.result === ReviewItemResult.PASS) {\n              approveCount += 1;\n            }\n          }\n        }\n      });\n    }\n    if (type === TAG.INSERTION) {\n      insertions.forEach((insertion) => {\n        if (isEqual(insertion.keys, keys)) {\n          tagCount += 1;\n          const review = this.rootStore.review.getReview(insertion.id);\n          if (review) {\n            if (review.result === ReviewItemResult.REJECT) {\n              rejectCount += 1;\n            } else if (review?.result === ReviewItemResult.PASS) {\n              approveCount += 1;\n            }\n          }\n        }\n      });\n    }\n    if (type === TAG.CONNECTION) {\n      connections.forEach((connection) => {\n        if (isEqual(connection.keys, keys)) {\n          tagCount += 1;\n          const review = this.rootStore.review.getReview(connection.id);\n          if (review) {\n            if (review.result === ReviewItemResult.REJECT) {\n              rejectCount += 1;\n            } else if (review?.result === ReviewItemResult.PASS) {\n              approveCount += 1;\n            }\n          }\n        }\n      });\n    }\n    if (children && children.length > 0) {\n      const childCountInfo = this.calcCount(children);\n      childRejectCount = childCountInfo.rejectCount;\n      childTagCount = childCountInfo.tagCount;\n    }\n    newItem.tagCount = tagCount;\n    newItem.rejectCount = rejectCount;\n    newItem.approveCount = approveCount;\n    newItem.rejectCountContainChildren = rejectCount + childRejectCount;\n    newItem.tagCountContainChildren = tagCount + childTagCount;\n    return { configKey, newItem };\n  }\n\n  calcCount(ontologies: OntologyItem[]) {\n    const result = {\n      rejectCount: 0,\n      tagCount: 0,\n    };\n    ontologies.forEach((ontology: OntologyItem) => {\n      const { configKey, newItem } = this.calcCountItem(ontology);\n      this.ontologiesStatusMap.set(configKey, newItem);\n      result.tagCount += newItem.tagCountContainChildren!;\n      result.rejectCount += newItem.rejectCountContainChildren!;\n    });\n    return result;\n  }\n\n  updateOntologiesStatusMap() {\n    if (!this.ontologies) {\n      return;\n    }\n    Object.values(this.ontologies).forEach((ontologies) => {\n      this.calcCount(ontologies);\n    });\n  }\n\n  updateOntologiesCollapseStatusAll(collapseStatus: boolean) {\n    this.ontologiesStatusMap.forEach((value, key) => {\n      if (key !== missKeys) {\n        value.isCollapse = collapseStatus;\n      }\n    });\n    this.updateOntologiesStatusMap();\n  }\n\n  updateOntologiesCollapseStatus = (keys: string[], collapseStatus: boolean) => {\n    const configKey = generateConfigKeyByKeys(keys);\n    const currentStatus = this.ontologiesStatusMap.get(configKey);\n    if (!currentStatus) {\n      return;\n    }\n    this.ontologiesStatusMap.set(configKey, { ...currentStatus, isCollapse: collapseStatus });\n    this.updateOntologiesStatusMap();\n  };\n\n  parseResults(newResult: OntologyResult) {\n    if (!newResult) return;\n    const { results } = this;\n    const length = strlen(this.text);\n    // parse label\n    newResult.labels?.forEach((label) => {\n      // invalid start & end\n      if (typeof (label) !== 'object') return;\n      if (Number.isNaN(label.start) || label.start === null || label.start < 0 || label.start >= length) {\n        label.dirty = true;\n        return;\n      }\n      if (Number.isNaN(label.end) || label.end === null || label.end < 0 || label.end >= length + 1) {\n        label.dirty = true;\n        return;\n      }\n\n      if (!label.keys) {\n        this.ontologyConfigMap.forEach((value, key) => {\n          const keys = value.keys;\n          if (keys[keys.length - 1] === label.value) {\n            label.keys = value.keys;\n          }\n        });\n      }\n      // invalid value\n      if (!isLabel(getConfigByKeys(this.ontologyConfigMap, label.keys)?.type)) {\n        label.dirty = true;\n        return;\n      }\n      // invalid & missing id\n      if (!label.id) {\n        label.id = uuidv4();\n      }\n      if (!label.type) {\n        label.type = TAG.LABEL;\n      }\n      // missing text\n      if (!label.text) label.text = substr(this.text, label.start, label.end - label.start);\n    });\n    if (!results?.labels) {\n      results.labels = [];\n    }\n    results.labels = newResult.labels?.filter((label) => typeof (label) === 'object' && !label.dirty) || [];\n\n    // parse insertion\n    newResult.insertions?.forEach((insertion) => {\n      // invalid start & end\n      if (typeof (insertion) !== 'object') return;\n      if (Number.isNaN(insertion.at) || insertion.at === null || insertion.at < 0 || insertion.at >= length) {\n        insertion.dirty = true;\n        return;\n      }\n      if (!insertion.keys) {\n        this.ontologyConfigMap.forEach((value, key) => {\n          const keys = value.keys;\n          if (keys[keys.length - 1] === insertion.value) {\n            insertion.keys = value.keys;\n          }\n        });\n      }\n      // invalid value\n      if (!isInsertion(getConfigByKeys(this.ontologyConfigMap, insertion.keys)?.type)) {\n        insertion.dirty = true;\n        return;\n      }\n      // invalid & missing id\n      if (!insertion.id) {\n        insertion.id = uuidv4();\n      }\n      if (!insertion.type) {\n        insertion.type = TAG.INSERTION;\n      }\n      // missing text\n      if (!insertion.text) insertion.text = getTextByInsertion(this.text, insertion);\n    });\n    if (!results?.insertions) {\n      results.insertions = [];\n    }\n    results.insertions = newResult.insertions?.filter((insertion) => typeof (insertion) === 'object' && !insertion.dirty) || [];\n    // parse connection\n    newResult.connections?.forEach((connection) => {\n      // invalid start & end\n      if (typeof (connection) !== 'object') return;\n\n      if (!connection.keys) {\n        this.ontologyConfigMap.forEach((value, key) => {\n          const keys = value.keys;\n          if (keys[keys.length - 1] === connection.value) {\n            connection.keys = value.keys;\n          }\n        });\n      }\n      if (!connection.fromId && connection.from) {\n        connection.fromId = connection.from;\n      }\n      if (!connection.fromType && connection.from) {\n        const target = this.getItemById(connection.from);\n        if (target) {\n          connection.fromType = target.type;\n        }\n      }\n      if (!connection.toId && connection.to) {\n        connection.toId = connection.to;\n      }\n      if (!connection.toType && connection.to) {\n        const target = this.getItemById(connection.to);\n        if (target) {\n          connection.toType = target.type;\n        }\n      }\n      // invalid value\n      if (!isConnection(getConfigByKeys(this.ontologyConfigMap, connection.keys)?.type)) {\n        connection.dirty = true;\n        return;\n      }\n      // invalid from & to\n      if (findIndex(newResult.labels, { id: connection.fromId }) === -1 && findIndex(newResult.insertions, { id: connection.fromId }) === -1) {\n        connection.dirty = true;\n        return;\n      }\n      if (findIndex(newResult.labels, { id: connection.toId }) === -1 && findIndex(newResult.insertions, { id: connection.toId }) === -1) {\n        connection.dirty = true;\n        return;\n      }\n      if (!connection.type) {\n        connection.type = TAG.CONNECTION;\n      }\n      // invalid & missing id\n      if (!connection.id) {\n        connection.id = uuidv4();\n      }\n    });\n    if (!results?.connections) {\n      results.connections = [];\n    }\n    results.connections = newResult.connections?.filter((connection) => typeof (connection) === 'object' && !connection.dirty) || [];\n    console.log('results parse', results)\n  }\n\n  getResults(withMissing = true) {\n    const { labels, insertions, connections } = this.results;\n    const { missing } = this.rootStore.review.reviews;\n    let allLabels = labels;\n    if (withMissing) {\n      allLabels = labels.concat(missing);\n    }\n    return {\n      labels: allLabels.map((item) => toJS(item)),\n      insertions: insertions.map((item) => toJS(item)),\n      connections: connections.map((item) => toJS(item)),\n    };\n  }\n\n  setResults(newResults = {}) {\n    const results = JSON.parse(JSON.stringify(newResults));\n    this.results = {\n      labels: results.labels || [],\n      insertions: results.insertions || [],\n      connections: results.connections || [],\n    };\n  }\n\n  addResultItem(newItem: LabelItem | InsertionItem | ConnectionItem, relatedConnections = []) {\n    const { insertions, labels, connections } = this.results;\n    const { type } = newItem;\n    switch (true) {\n      case (isLabel(type)): {\n        labels.unshift(newItem as LabelItem);\n        labels.sort((a, b) => (a.start - b.start));\n        relatedConnections.forEach((connection) => {\n          connections.unshift((connection));\n        });\n        break;\n      }\n      case (isConnection(type)): {\n        connections.unshift(newItem as ConnectionItem);\n        break;\n      }\n      case (isInsertion(type)): {\n        insertions.unshift(newItem as InsertionItem);\n        insertions.sort((a, b) => a.at - b.at);\n        relatedConnections.forEach((connection) => {\n          connections.unshift(connection);\n        });\n        break;\n      }\n      default: break;\n    }\n  }\n\n  deleteTag(type: OntologyItemType, id: string) {\n    const { connections, labels, insertions } = this.results;\n\n    switch (true) {\n      case (isLabel(type)): {\n        const index = findIndex(labels, { id });\n        const label = labels[index];\n        labels.splice(index, 1);\n        const nextConnections = connections.filter((connection) => connection.fromId !== id && connection.toId !== id);\n        const relatedConnections = xor(connections, nextConnections);\n        this.results.connections = nextConnections;\n        return { relatedConnections, label };\n      }\n      case (isConnection(type)): {\n        const index = findIndex(connections, { id });\n        const connection = connections[index];\n        connections.splice(index, 1);\n        return { connection };\n      }\n      case (isInsertion(type)): {\n        const index = findIndex(insertions, { id });\n        const insertion = insertions[index];\n        insertions.splice(index, 1);\n        const nextConnections = connections.filter((connection) => connection.fromId !== id && connection.toId !== id);\n        const relatedConnections = xor(connections, nextConnections);\n        this.results.connections = nextConnections;\n\n        return { relatedConnections, insertion };\n      }\n      default:\n        break;\n    }\n  }\n\n  getItemById(id: string) {\n    const { labels, insertions, connections } = this.results;\n    const { missing } = this.rootStore.review.reviews;\n    const targetArr: (MissingItem | LabelItem | InsertionItem | ConnectionItem)[] = [];\n    return targetArr.concat(missing).concat(labels).concat(insertions).concat(connections)\n      .find((item) => item.id === id);\n  }\n\n  getItem(type: OntologyItemType, id: string) {\n    const { labels, insertions, connections } = this.results;\n    const { missing } = this.rootStore.review.reviews;\n    switch (true) {\n      case (isQATag(type)): {\n        const index = findIndex(missing, { id });\n        return missing[index];\n      }\n      case (isLabel(type)): {\n        const index = findIndex(labels, { id });\n        return labels[index];\n      }\n      case (isConnection(type)): {\n        const index = findIndex(connections, { id });\n        return connections[index];\n      }\n      case (isInsertion(type)): {\n        const index = findIndex(insertions, { id });\n        return insertions[index];\n      }\n      default: return null;\n    }\n  }\n\n  stepToTag(id: string, step: number) {\n    const { labels, connections, insertions } = this.results;\n    const { missing } = this.rootStore.review.reviews;\n    let targetList: (MissingItem | LabelItem | ConnectionItem | InsertionItem)[] | undefined;\n    switch (true) {\n      case (isQATag(id)): targetList = missing; break;\n      case (isLabel(id)): targetList = labels; break;\n      case (isConnection(id)): targetList = connections; break;\n      case (isInsertion(id)): targetList = insertions; break;\n      default: break;\n    }\n    if (!targetList) {\n      return null;\n    }\n    const index = findIndex(targetList, { id });\n\n    return getNextInLoopList(targetList, index, step);\n  }\n\n  getItemPosition = (item: MissingItem | LabelItem | ConnectionItem | InsertionItem | null): number => {\n    if (!item) {\n      return -1;\n    }\n    if (isLabel(item.type)) {\n      return (item as LabelItem | MissingItem).start;\n    }\n    if (isInsertion(item.type)) {\n      return (item as InsertionItem).at;\n    }\n    if (isConnection(item.type)) {\n      const startTag = this.getItem((item as ConnectionItem).fromType, (item as ConnectionItem).fromId);\n      return this.getItemPosition(startTag);\n    }\n    return -1;\n  };\n\n  moveToTagByStep(id: string, step: number, reviewOnly = false) {\n    const { labels, connections, insertions } = this.results;\n    const { missing, data } = this.rootStore.review.reviews;\n\n    if (reviewOnly) {\n      const list = Object.keys(data).map((key) => this.getItem(TAG.LABEL_QA, key))\n        .sort((a, b) => this.getItemPosition(a) - this.getItemPosition(b));\n      if (!data[id]) { // if id is not reviewed item then start from 0\n        return list[0];\n      }\n      return getNextInLoopList(list, findIndex(list, { id }), step);\n    }\n\n    let list: (MissingItem | LabelItem | ConnectionItem | InsertionItem)[] = [];\n    list = list.concat(missing).concat(labels).concat(connections).concat(insertions);\n    list.sort((a, b) => this.getItemPosition(a) - this.getItemPosition(b));\n    return getNextInLoopList(list, findIndex(list, { id }), step);\n  }\n\n  tagMove(prevStart: number, prevEnd: number, offset: number) {\n    const { text } = this;\n    this.results.labels = this.results.labels.map((label) => {\n      const newLabel = { ...label };\n      // labels overlap & before slice\n      if (label.start < prevStart && label.end > prevStart && label.end <= prevEnd) {\n        newLabel.end = prevEnd + offset;\n        newLabel.text = substr(text, newLabel.start, newLabel.end - newLabel.start);\n      } else if (label.start >= prevStart && label.end <= prevEnd) newLabel.dirty = true; // labels contained slice\n      else if (label.start >= prevStart && label.start < prevEnd && label.end > prevEnd) { // labels overlap & behind slice\n        newLabel.end += offset;\n        newLabel.start = prevEnd + offset;\n        newLabel.text = substr(text, newLabel.start, newLabel.end - newLabel.start);\n      } else if (label.start < prevStart && label.end > prevEnd) { // labels contain slice\n        newLabel.end += offset;\n        newLabel.text = substr(text, newLabel.start, newLabel.end - newLabel.start);\n      } else if (label.start > prevEnd) { // labels behind slice\n        newLabel.end += offset;\n        newLabel.start += offset;\n      }\n      // labels before slice\n      // nothing happened\n      return newLabel;\n    });\n    this.results.insertions = this.results.insertions.map((insertion) => {\n      const newInsertion = { ...insertion };\n      // insertions behind slice\n      if (insertion.at >= prevEnd) {\n        newInsertion.at += offset;\n      } else if (insertion.at > prevStart && insertion.at < prevEnd) newInsertion.dirty = true; // insertions contained slice\n      // insertions before slice\n      // nothing happened\n      if (insertion.at > prevStart - 5 && insertion.at < prevEnd + 5) {\n        newInsertion.text = getTextByInsertion(text, { at: newInsertion.at, value: newInsertion.value });\n      }\n      return newInsertion;\n    });\n    this.rootStore.review.reviews.missing = this.rootStore.review.reviews.missing.map((label) => {\n      const newLabel = { ...label };\n      // labels overlap & before slice\n      if (label.start < prevStart && label.end > prevStart && label.end <= prevEnd) {\n        newLabel.end = prevEnd + offset;\n        newLabel.text = substr(text, newLabel.start, newLabel.end - newLabel.start);\n      } else if (label.start >= prevStart && label.end <= prevEnd) newLabel.dirty = true; // labels contained slice\n      else if (label.start >= prevStart && label.start < prevEnd && label.end > prevEnd) { // labels overlap & behind slice\n        newLabel.end += offset;\n        newLabel.start = prevEnd + offset;\n        newLabel.text = substr(text, newLabel.start, newLabel.end - newLabel.start);\n      } else if (label.start < prevStart && label.end > prevEnd) { // labels contain slice\n        newLabel.end += offset;\n        newLabel.text = substr(text, newLabel.start, newLabel.end - newLabel.start);\n      } else if (label.start > prevEnd) { // labels behind slice\n        newLabel.end += offset;\n        newLabel.start += offset;\n      }\n      // labels before slice\n      // nothing happened\n      return newLabel;\n    });\n    this.results.insertions = this.results.insertions.filter((insertion) => !insertion.dirty);\n    this.results.labels = this.results.labels.filter((label) => !label.dirty);\n    this.rootStore.review.reviews.missing = this.rootStore.review.reviews.missing.filter((label) => !label.dirty);\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}