{"ast":null,"code":"import{makeAutoObservable}from'mobx';/**\n * store for validation\n * @class\n */export default class ValidationStore{/**\n   * warnings count\n   * @getter\n   */get warningCount(){return this.warnings.length;}/**\n   * has error or blocked issue\n   * @getter\n   */get blocked(){if(!this.rootStore.config.submitCheck){return false;}return this.hasCustomError||this.warnings.filter(warning=>warning.blockSubmit===true).length>0;}constructor(rootStore){/**\n   * root store\n   */this.rootStore=void 0;/**\n   * warning list\n   */this.warnings=[];/**\n   * has custom error\n   */this.hasCustomError=false;/**\n   * is checking\n   */this.checking=false;makeAutoObservable(this,{rootStore:false,blocked:false},{autoBind:true});this.rootStore=rootStore;}/**\n   * trigger sync\n   */async sync(){if(this.checking){return;}await this.defaultSync();}/**\n   * trigger default sync\n   * @param isSubmit\n   */async defaultSync(){this.checking=true;const[result]=await Promise.all([this.validate(),new Promise(resolve=>{setTimeout(resolve,300);})]);if(result){const{results,hasCustomError}=result;this.warnings=results;this.hasCustomError=hasCustomError;}this.checking=false;}/**\n   * do validation\n   * @param isSubmit\n   */validate(){const{validationConfig}=this.rootStore.config;return new Promise(async resolve=>{const results=[];const hasCustomError=false;// get result link\nlet resultLink='';if(validationConfig.script){var _this$rootStore$jobPr;if(typeof((_this$rootStore$jobPr=this.rootStore.jobProxy)===null||_this$rootStore$jobPr===void 0?void 0:_this$rootStore$jobPr.reviewFrom)==='string'){resultLink=this.rootStore.jobProxy.reviewFrom;}if(this.rootStore.annotatable){try{resultLink=(await this.rootStore.saveResult())||'';}catch(e){resultLink='';}}}resolve({results,hasCustomError});});}}","map":{"version":3,"names":["makeAutoObservable","ValidationStore","warningCount","warnings","length","blocked","rootStore","config","submitCheck","hasCustomError","filter","warning","blockSubmit","constructor","checking","autoBind","sync","defaultSync","result","Promise","all","validate","resolve","setTimeout","results","validationConfig","resultLink","script","_this$rootStore$jobPr","jobProxy","reviewFrom","annotatable","saveResult","e"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/editable-text/store/ValidationStore.ts"],"sourcesContent":["import { makeAutoObservable } from 'mobx';\nimport RootStore from './RootStore';\nimport { Result } from '../types';\n\n/**\n * store for validation\n * @class\n */\nexport default class ValidationStore {\n  /**\n   * root store\n   */\n  rootStore;\n\n  /**\n   * warning list\n   */\n  warnings: Result[] = [];\n\n  /**\n   * has custom error\n   */\n  hasCustomError = false;\n\n  /**\n   * is checking\n   */\n  checking = false;\n\n  /**\n   * warnings count\n   * @getter\n   */\n  get warningCount() {\n    return this.warnings.length;\n  }\n\n  /**\n   * has error or blocked issue\n   * @getter\n   */\n  get blocked() {\n    if (!this.rootStore.config.submitCheck) {\n      return false;\n    }\n    return this.hasCustomError || this.warnings.filter((warning) => warning.blockSubmit === true).length > 0;\n  }\n\n  constructor(rootStore: typeof RootStore) {\n    makeAutoObservable(this, {\n      rootStore: false,\n      blocked: false,\n    }, {\n      autoBind: true,\n    });\n\n    this.rootStore = rootStore;\n  }\n\n  /**\n   * trigger sync\n   */\n  async sync() {\n    if (this.checking) {\n      return;\n    }\n    await this.defaultSync();\n  }\n\n  /**\n   * trigger default sync\n   * @param isSubmit\n   */\n  async defaultSync() {\n    this.checking = true;\n    const [result] = await Promise.all([\n      this.validate(),\n      new Promise((resolve) => {\n        setTimeout(resolve, 300);\n      }),\n    ]);\n    if (result) {\n      const { results, hasCustomError } = result as ({results: Result[], hasCustomError: boolean});\n      this.warnings = results;\n      this.hasCustomError = hasCustomError;\n    }\n    this.checking = false;\n  }\n\n  /**\n   * do validation\n   * @param isSubmit\n   */\n  validate() {\n    const { validationConfig } = this.rootStore.config;\n    return new Promise(async (resolve) => {\n      const results: Result[] = [];\n      const hasCustomError = false;\n\n      // get result link\n      let resultLink = '';\n      if (validationConfig.script) {\n        if (typeof this.rootStore.jobProxy?.reviewFrom === 'string') {\n          resultLink = this.rootStore.jobProxy.reviewFrom;\n        }\n        if (this.rootStore.annotatable) {\n          try {\n            resultLink = await this.rootStore.saveResult() || '';\n          } catch (e) {\n            resultLink = '';\n          }\n        }\n      }\n      resolve({ results, hasCustomError });\n    });\n  }\n}\n"],"mappings":"AAAA,OAASA,kBAAkB,KAAQ,MAAM,CAIzC;AACA;AACA;AACA,GACA,cAAe,MAAM,CAAAC,eAAgB,CAqBnC;AACF;AACA;AACA,KACE,GAAI,CAAAC,YAAYA,CAAA,CAAG,CACjB,MAAO,KAAI,CAACC,QAAQ,CAACC,MAAM,CAC7B,CAEA;AACF;AACA;AACA,KACE,GAAI,CAAAC,OAAOA,CAAA,CAAG,CACZ,GAAI,CAAC,IAAI,CAACC,SAAS,CAACC,MAAM,CAACC,WAAW,CAAE,CACtC,MAAO,MAAK,CACd,CACA,MAAO,KAAI,CAACC,cAAc,EAAI,IAAI,CAACN,QAAQ,CAACO,MAAM,CAAEC,OAAO,EAAKA,OAAO,CAACC,WAAW,GAAK,IAAI,CAAC,CAACR,MAAM,CAAG,CAAC,CAC1G,CAEAS,WAAWA,CAACP,SAA2B,CAAE,CAvCzC;AACF;AACA,KAFE,KAGAA,SAAS,QAET;AACF;AACA,KAFE,KAGAH,QAAQ,CAAa,EAAE,CAEvB;AACF;AACA,KAFE,KAGAM,cAAc,CAAG,KAAK,CAEtB;AACF;AACA,KAFE,KAGAK,QAAQ,CAAG,KAAK,CAsBdd,kBAAkB,CAAC,IAAI,CAAE,CACvBM,SAAS,CAAE,KAAK,CAChBD,OAAO,CAAE,KACX,CAAC,CAAE,CACDU,QAAQ,CAAE,IACZ,CAAC,CAAC,CAEF,IAAI,CAACT,SAAS,CAAGA,SAAS,CAC5B,CAEA;AACF;AACA,KACE,KAAM,CAAAU,IAAIA,CAAA,CAAG,CACX,GAAI,IAAI,CAACF,QAAQ,CAAE,CACjB,OACF,CACA,KAAM,KAAI,CAACG,WAAW,CAAC,CAAC,CAC1B,CAEA;AACF;AACA;AACA,KACE,KAAM,CAAAA,WAAWA,CAAA,CAAG,CAClB,IAAI,CAACH,QAAQ,CAAG,IAAI,CACpB,KAAM,CAACI,MAAM,CAAC,CAAG,KAAM,CAAAC,OAAO,CAACC,GAAG,CAAC,CACjC,IAAI,CAACC,QAAQ,CAAC,CAAC,CACf,GAAI,CAAAF,OAAO,CAAEG,OAAO,EAAK,CACvBC,UAAU,CAACD,OAAO,CAAE,GAAG,CAAC,CAC1B,CAAC,CAAC,CACH,CAAC,CACF,GAAIJ,MAAM,CAAE,CACV,KAAM,CAAEM,OAAO,CAAEf,cAAe,CAAC,CAAGS,MAAwD,CAC5F,IAAI,CAACf,QAAQ,CAAGqB,OAAO,CACvB,IAAI,CAACf,cAAc,CAAGA,cAAc,CACtC,CACA,IAAI,CAACK,QAAQ,CAAG,KAAK,CACvB,CAEA;AACF;AACA;AACA,KACEO,QAAQA,CAAA,CAAG,CACT,KAAM,CAAEI,gBAAiB,CAAC,CAAG,IAAI,CAACnB,SAAS,CAACC,MAAM,CAClD,MAAO,IAAI,CAAAY,OAAO,CAAC,KAAO,CAAAG,OAAO,EAAK,CACpC,KAAM,CAAAE,OAAiB,CAAG,EAAE,CAC5B,KAAM,CAAAf,cAAc,CAAG,KAAK,CAE5B;AACA,GAAI,CAAAiB,UAAU,CAAG,EAAE,CACnB,GAAID,gBAAgB,CAACE,MAAM,CAAE,KAAAC,qBAAA,CAC3B,GAAI,QAAAA,qBAAA,CAAO,IAAI,CAACtB,SAAS,CAACuB,QAAQ,UAAAD,qBAAA,iBAAvBA,qBAAA,CAAyBE,UAAU,IAAK,QAAQ,CAAE,CAC3DJ,UAAU,CAAG,IAAI,CAACpB,SAAS,CAACuB,QAAQ,CAACC,UAAU,CACjD,CACA,GAAI,IAAI,CAACxB,SAAS,CAACyB,WAAW,CAAE,CAC9B,GAAI,CACFL,UAAU,CAAG,MAAM,KAAI,CAACpB,SAAS,CAAC0B,UAAU,CAAC,CAAC,GAAI,EAAE,CACtD,CAAE,MAAOC,CAAC,CAAE,CACVP,UAAU,CAAG,EAAE,CACjB,CACF,CACF,CACAJ,OAAO,CAAC,CAAEE,OAAO,CAAEf,cAAe,CAAC,CAAC,CACtC,CAAC,CAAC,CACJ,CACF","ignoreList":[]},"metadata":{},"sourceType":"module"}