{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking2/components/cameras/CamerasContainer.tsx\";\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { reaction, makeObservable, observable, action, computed } from 'mobx';\nimport { Point, Texture, utils } from 'pixi.js';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport cx from 'classnames';\nimport imageLoader from 'blueimp-load-image';\nimport OperationNavigator from '../toolbar/OperationNavigator';\nimport LabelViewer from '../attributes/LabelViewer';\nimport Assistant from '../../../common/shapes/assists/Assistant';\nimport store from '../../store/RootStore';\nimport i18n from '../../locales';\nimport { NAVIGATOR_HEIGHT, CAMERA_VIEW, CAMERA_VIEW_LABELS, CAMERA_VIEW_CONNECTIONS, CONNECTION_MARKER_ARROW } from '../../constants';\nimport './CamerasContainer.scss';\nclass CamerasContainer extends React.Component {\n  /**\n   * scroll thumb top\n   */\n  get scrollThumbTop() {\n    if (this.scrollHeight === 0) {\n      return 0;\n    }\n    return this.scrollTop / this.scrollHeight * this.containerHeight;\n  }\n\n  /**\n   * scrooll thumb height\n   */\n  get scrollThumbHeight() {\n    if (this.scrollHeight === 0) {\n      return 0;\n    }\n    return this.containerHeight / this.scrollHeight * this.containerHeight;\n  }\n  constructor(props) {\n    super(props);\n    /**\n     * canvas dom container\n     */\n    this.container = React.createRef();\n    /**\n     * cameras dom container\n     */\n    this.camerasContainer = React.createRef();\n    /**\n     * cancellable image loader\n     */\n    this.cancellableLoaders = [];\n    /**\n     * loaded count for current frame\n     */\n    this.loadedCount = 0;\n    /**\n     * reactions\n     */\n    this.reactionDisposers = [];\n    /**\n     * mouse position\n     */\n    this.mousePosition = {\n      x: -1,\n      y: -1\n    };\n    /**\n     * image load errors\n     */\n    this.imageLoadErrors = {};\n    /**\n     * cameras container scroll top\n     */\n    this.scrollTop = 0;\n    /**\n     * cameras container scroll height\n     */\n    this.scrollHeight = 0;\n    /**\n     * cameras container height\n     */\n    this.containerHeight = 0;\n    /**\n     * scroll y when start\n     */\n    this.scrollStartY = 0;\n    /**\n     * scroll top when start\n     */\n    this.scrollStartTop = 0;\n    /**\n     * update mouse position\n     * @param e\n     */\n    this.updateMousePosition = e => {\n      const {\n        clientX,\n        clientY\n      } = e;\n      this.mousePosition = {\n        x: clientX,\n        y: clientY\n      };\n      this.updateMousePositionInCamera();\n    };\n    /**\n     * update mouse position in current camera\n     */\n    this.updateMousePositionInCamera = () => {\n      const {\n        currentCameraView\n      } = store.frame;\n      if (currentCameraView === null || currentCameraView === void 0 ? void 0 : currentCameraView.hovered) {\n        const position = this.mapScreenToStagePosition(this.mousePosition.x, this.mousePosition.y);\n        store.currPosition = currentCameraView.stage.toLocal(position);\n      } else {\n        store.currPosition = undefined;\n      }\n    };\n    /**\n     * resize\n     */\n    this.resize = () => {\n      const {\n        width,\n        height\n      } = this.getContainerSize();\n      this.props.app.renderer.resize(width, height);\n      this.props.app.render();\n\n      // update camera views\n      Object.values(store.frame.cameraViews).forEach((cameraView, i) => {\n        this.updateCameraBounds(cameraView, i);\n      });\n      // update cameras scroller\n      this.updateScroller();\n    };\n    /**\n     * on resource loaded\n     * @param name\n     * @param index\n     * @param url\n     * @param data\n     */\n    this.onLoaded = (name, index, url, data) => {\n      const error = data instanceof Event && data.type === 'error';\n      const cameraView = store.frame.cameraViews[name];\n      if (cameraView) {\n        this.props.app.stage.addChild(cameraView); // add view if needed\n\n        const {\n          currentFrame,\n          getFrameRotation,\n          updateImageSize\n        } = store.frame;\n        cameraView.imageLoadError = error;\n        cameraView.imageRotation = getFrameRotation(name, currentFrame);\n        this.updateCameraBounds(cameraView, index);\n        let texture;\n        if (!error) {\n          texture = Texture.from(data);\n          cameraView.setImage(texture);\n        }\n        updateImageSize(name, currentFrame, error ? -1 : texture.width, error ? -1 : texture.height);\n      }\n      this.imageLoadErrors[name] = error ? i18n.translate('COMMON_IMAGE_ERROR', {\n        values: {\n          image: url || i18n.translate('COMMON_EMPTY')\n        }\n      }) : '';\n      this.loadedCount += 1;\n      this.checkLoaded();\n    };\n    /**\n     * wheel\n     */\n    this.wheel = event => {\n      const {\n        currentCameraView\n      } = store.frame;\n      if (currentCameraView) {\n        const point = this.mapScreenToStagePosition(event.clientX, event.clientY);\n        const localPoint = this.mapStageToLocalPosition(point);\n        const zoomed = currentCameraView.zoom(event.nativeEvent, localPoint);\n        if (!zoomed) {\n          this.scroll(event.deltaY);\n        }\n      }\n    };\n    /**\n     * start scroll\n     * @param e\n     */\n    this.startScroll = e => {\n      e.stopPropagation();\n      this.scrollStartY = e.clientY;\n      this.scrollStartTop = this.scrollThumbTop;\n      window.addEventListener('mousemove', this.scrolling);\n      window.addEventListener('mouseup', this.finishScroll);\n    };\n    /**\n     * scrolling\n     * @param e\n     */\n    this.scrolling = e => {\n      e.preventDefault();\n      if (this.camerasContainer.current) {\n        const offsetClientY = e.clientY - this.scrollStartY;\n        let top = this.scrollStartTop + offsetClientY;\n        if (top < 0) {\n          top = 0;\n        }\n        const {\n          clientHeight,\n          scrollHeight\n        } = this.camerasContainer.current;\n        const maxTop = clientHeight - this.scrollThumbHeight;\n        if (top > maxTop) {\n          top = maxTop;\n        }\n        this.scrollTop = top / clientHeight * scrollHeight;\n        this.camerasContainer.current.scroll(0, this.scrollTop);\n        Object.values(store.frame.cameraViews).forEach((cameraView, i) => {\n          this.updateCameraBounds(cameraView, i);\n        });\n      }\n    };\n    /**\n     * finish scroll\n     * @param e\n     */\n    this.finishScroll = e => {\n      e.preventDefault();\n      window.removeEventListener('mousemove', this.scrolling);\n      window.removeEventListener('mouseup', this.finishScroll);\n    };\n    makeObservable(this, {\n      mousePosition: observable,\n      imageLoadErrors: observable,\n      scrollTop: observable,\n      scrollHeight: observable,\n      containerHeight: observable,\n      scrollThumbTop: computed,\n      scrollThumbHeight: computed,\n      updateMousePosition: action,\n      updateScroller: action,\n      onLoaded: action,\n      scroll: action,\n      scrolling: action\n    });\n    this.reactionDisposers.push(reaction(() => [store.initialized, store.frame.currentFrame], () => {\n      // when initialized, or frame changes\n      this.updateCameras();\n    }));\n    this.reactionDisposers.push(reaction(() => store.frame.currentCamera, () => {\n      this.updateMousePositionInCamera();\n    }));\n  }\n  componentDidMount() {\n    window.addEventListener('mousemove', this.updateMousePosition);\n    if (this.container.current) {\n      new ResizeObserver(this.resize).observe(this.container.current);\n      this.props.app.renderer.on('resolution-changed', this.resize);\n\n      // setup view\n      this.container.current.appendChild(this.props.app.view);\n      this.resize();\n      this.updateCameras();\n    }\n  }\n  componentWillUnmount() {\n    window.removeEventListener('mousemove', this.updateMousePosition);\n    this.props.app.renderer.off('resolution-changed', this.resize);\n    this.reactionDisposers.forEach(disposer => disposer());\n    // remove camera views\n    Object.values(store.frame.cameraViews).forEach(view => {\n      this.props.app.stage.removeChild(view);\n    });\n  }\n  /**\n   * get container's size, defualt is 800 * 600\n   */\n  getContainerSize() {\n    // default size is 800 * 600\n    const size = {\n      width: 800,\n      height: 600\n    };\n    if (this.container.current) {\n      size.width = this.container.current.clientWidth;\n      size.height = this.container.current.clientHeight;\n    }\n    return size;\n  }\n\n  /**\n   * get camera bounds by camera index\n   * @param cameraIndex\n   */\n  getCameraBounds(cameraIndex) {\n    const {\n      width,\n      height\n    } = this.props.app.screen;\n    const {\n      cameraCount\n    } = store.frame;\n    if (cameraCount === 1) {\n      return {\n        width,\n        height,\n        x: 0,\n        y: 0\n      };\n    }\n    const hasScroller = cameraCount > 4;\n    const cameraWidth = (hasScroller ? width - 12 : width) / 2;\n    const cameraHeight = hasScroller ? cameraWidth / 16 * 9 : height / 2;\n    if (cameraCount === 2) {\n      // split two columns\n      return {\n        width: cameraWidth,\n        height,\n        x: cameraIndex * cameraWidth,\n        y: 0\n      };\n    }\n    // default split into 4 parts\n    const colIndex = cameraIndex % 2;\n    const rowIndex = Math.floor(cameraIndex / 2);\n    return {\n      width: cameraWidth,\n      height: cameraHeight,\n      x: colIndex * cameraWidth,\n      y: rowIndex * cameraHeight\n    };\n  }\n  /**\n   * update cameras for current frame\n   */\n  updateCameras() {\n    const {\n      cameras,\n      currentFrame\n    } = store.frame;\n    utils.clearTextureCache();\n    this.cancellableLoaders.forEach(loader => {\n      loader.cancel();\n    });\n    this.cancellableLoaders = [];\n    this.loadedCount = 0;\n    Object.keys(cameras).forEach((camera, i) => {\n      const url = cameras[camera][currentFrame] || '';\n      const loader = {\n        cancelled: false,\n        cancel() {\n          this.cancelled = true;\n        },\n        load() {\n          return new Promise((resove, reject) => {\n            imageLoader(url, data => {\n              if (!this.cancelled) {\n                resove(data);\n              } else {\n                reject();\n              }\n            }, {\n              canvas: true,\n              orientation: true,\n              crossOrigin: 'anonymous'\n            });\n          });\n        }\n      };\n      loader.load().then(data => this.onLoaded(camera, i, url, data)).catch(() => {\n        // canceled\n      });\n      this.cancellableLoaders.push(loader);\n    });\n  }\n\n  /**\n   * update camera bounds\n   * @param cameraView\n   * @param index\n   */\n  updateCameraBounds(cameraView, index) {\n    const {\n      x,\n      y,\n      width,\n      height\n    } = this.getCameraBounds(index);\n    cameraView.updatePositionAndSize(x, y - this.scrollTop, width, height);\n    const cameraDom = document.getElementById(`${CAMERA_VIEW}-${cameraView.id}`);\n    if (cameraDom) {\n      cameraDom.style.left = `${x}px`;\n      cameraDom.style.top = `${y}px`;\n      cameraDom.style.width = `${width}px`;\n      cameraDom.style.height = `${height}px`;\n    }\n  }\n\n  /**\n   * update cameras scroller\n   */\n  updateScroller() {\n    if (this.camerasContainer.current) {\n      const {\n        scrollTop,\n        scrollHeight\n      } = this.camerasContainer.current;\n      const {\n        height\n      } = this.camerasContainer.current.getBoundingClientRect();\n      this.scrollTop = scrollTop;\n      this.scrollHeight = scrollHeight;\n      this.containerHeight = height;\n    }\n  }\n  /**\n   * check all cameras loaded in current frame\n   */\n  checkLoaded() {\n    const {\n      cameras,\n      onFrameLoaded\n    } = store.frame;\n    if (this.loadedCount === Object.keys(cameras).length) {\n      onFrameLoaded();\n    }\n  }\n  /**\n   * scroll\n   * @param deltaY\n   */\n  scroll(deltaY) {\n    if (this.camerasContainer.current) {\n      this.camerasContainer.current.scrollBy(0, deltaY);\n      this.scrollTop = this.camerasContainer.current.scrollTop;\n      Object.values(store.frame.cameraViews).forEach((cameraView, i) => {\n        this.updateCameraBounds(cameraView, i);\n      });\n    }\n  }\n  /**\n   * map screen position to stage position as a PIXI point\n   * @param x screen position x\n   * @param y screen position y\n   */\n  mapScreenToStagePosition(x, y) {\n    const point = new Point();\n    this.props.app.renderer.plugins.interaction.mapPositionToPoint(point, x, y);\n    return point;\n  }\n\n  /**\n   * map stage position to local posistion as a PIXI point\n   * @param point\n   */\n  mapStageToLocalPosition(point) {\n    return this.props.app.stage.toLocal(point);\n  }\n  renderCameraView(camera, i) {\n    const {\n      labelMode,\n      viewScale,\n      crossLineVisible,\n      activeMeasurementBox\n    } = store.config;\n    const {\n      currentCamera,\n      isSingleCamera\n    } = store.frame;\n    const selected = currentCamera === camera;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: camera,\n      id: `${CAMERA_VIEW}-${camera}`,\n      className: cx('camera-view', {\n        selected,\n        single: isSingleCamera\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: `${CAMERA_VIEW_LABELS}-${camera}`,\n      className: \"shape-labels-container\",\n      style: {\n        display: labelMode ? 'block' : 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"svg\", {\n      id: `${CAMERA_VIEW_CONNECTIONS}-${camera}`,\n      className: \"connections-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"marker\", {\n      id: CONNECTION_MARKER_ARROW,\n      markerWidth: \"10\",\n      markerHeight: \"10\",\n      refX: \"8\",\n      refY: \"4\",\n      orient: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      d: \"M0,0 L0,8 L8,4 z\",\n      fill: \"#FFAFFE\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(LabelViewer, {\n      camera: camera,\n      mousePosition: this.mousePosition,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Assistant, {\n      scale: viewScale,\n      crossline: selected && crossLineVisible,\n      measurementBox: selected ? activeMeasurementBox : undefined,\n      mousePosition: this.mousePosition,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"outer-border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inner-border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 11\n      }\n    }, this.imageLoadErrors[camera] && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error\",\n      onClick: () => store.frame.setCamera(camera),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 15\n      }\n    }, this.imageLoadErrors[camera]), !isSingleCamera && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 15\n      }\n    }, `C${i + 1}-${camera}`))));\n  }\n  render() {\n    const {\n      cursor\n    } = store.config;\n    const {\n      currentCameraView,\n      cameraNames\n    } = store.frame;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(OperationNavigator, {\n      onViewReset: () => currentCameraView === null || currentCameraView === void 0 ? void 0 : currentCameraView.fitImageToView(),\n      setViewScale: scale => currentCameraView === null || currentCameraView === void 0 ? void 0 : currentCameraView.zoomTo(scale),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        height: `calc(100% - ${NAVIGATOR_HEIGHT}px)`,\n        position: 'relative',\n        cursor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.container,\n      className: \"canvas-container\",\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      onContextMenu: e => e.preventDefault(),\n      onWheel: this.wheel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.camerasContainer,\n      className: \"cameras-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 11\n      }\n    }, cameraNames.map((camera, i) => this.renderCameraView(camera, i))), cameraNames.length > 4 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cameras-scroller\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cameras-scroller__thumb\",\n      style: {\n        top: this.scrollThumbTop,\n        height: this.scrollThumbHeight\n      },\n      onMouseDown: this.startScroll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 15\n      }\n    }))));\n  }\n}\nexport default observer(CamerasContainer);","map":{"version":3,"names":["React","observer","reaction","makeObservable","observable","action","computed","Point","Texture","utils","ResizeObserver","cx","imageLoader","OperationNavigator","LabelViewer","Assistant","store","i18n","NAVIGATOR_HEIGHT","CAMERA_VIEW","CAMERA_VIEW_LABELS","CAMERA_VIEW_CONNECTIONS","CONNECTION_MARKER_ARROW","CamerasContainer","Component","scrollThumbTop","scrollHeight","scrollTop","containerHeight","scrollThumbHeight","constructor","props","container","createRef","camerasContainer","cancellableLoaders","loadedCount","reactionDisposers","mousePosition","x","y","imageLoadErrors","scrollStartY","scrollStartTop","updateMousePosition","e","clientX","clientY","updateMousePositionInCamera","currentCameraView","frame","hovered","position","mapScreenToStagePosition","currPosition","stage","toLocal","undefined","resize","width","height","getContainerSize","app","renderer","render","Object","values","cameraViews","forEach","cameraView","i","updateCameraBounds","updateScroller","onLoaded","name","index","url","data","error","Event","type","addChild","currentFrame","getFrameRotation","updateImageSize","imageLoadError","imageRotation","texture","from","setImage","translate","image","checkLoaded","wheel","event","point","localPoint","mapStageToLocalPosition","zoomed","zoom","nativeEvent","scroll","deltaY","startScroll","stopPropagation","window","addEventListener","scrolling","finishScroll","preventDefault","current","offsetClientY","top","clientHeight","maxTop","removeEventListener","push","initialized","updateCameras","currentCamera","componentDidMount","observe","on","appendChild","view","componentWillUnmount","off","disposer","removeChild","size","clientWidth","getCameraBounds","cameraIndex","screen","cameraCount","hasScroller","cameraWidth","cameraHeight","colIndex","rowIndex","Math","floor","cameras","clearTextureCache","loader","cancel","keys","camera","cancelled","load","Promise","resove","reject","canvas","orientation","crossOrigin","then","catch","updatePositionAndSize","cameraDom","document","getElementById","id","style","left","getBoundingClientRect","onFrameLoaded","length","scrollBy","plugins","interaction","mapPositionToPoint","renderCameraView","labelMode","viewScale","crossLineVisible","activeMeasurementBox","config","isSingleCamera","selected","createElement","key","className","single","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","display","markerWidth","markerHeight","refX","refY","orient","d","fill","scale","crossline","measurementBox","onClick","setCamera","cursor","cameraNames","Fragment","onViewReset","fitImageToView","setViewScale","zoomTo","ref","onContextMenu","onWheel","map","onMouseDown"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking2/components/cameras/CamerasContainer.tsx"],"sourcesContent":["import React from 'react';\nimport { observer } from 'mobx-react';\nimport { reaction, IReactionDisposer, makeObservable, observable, action, computed } from 'mobx';\nimport { Application, Point, Texture, utils } from 'pixi.js';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport cx from 'classnames';\nimport imageLoader from 'blueimp-load-image';\nimport OperationNavigator from '../toolbar/OperationNavigator';\nimport LabelViewer from '../attributes/LabelViewer';\nimport Assistant from '../../../common/shapes/assists/Assistant';\nimport store from '../../store/RootStore';\nimport i18n from '../../locales';\nimport { NAVIGATOR_HEIGHT, CAMERA_VIEW, CAMERA_VIEW_LABELS, CAMERA_VIEW_CONNECTIONS, CONNECTION_MARKER_ARROW } from '../../constants';\nimport './CamerasContainer.scss';\nimport View from '../../shapes/View';\n\ninterface CancellableLoader {\n  cancelled: boolean;\n  cancel: () => void;\n  load: () => Promise<Event | HTMLCanvasElement | HTMLImageElement>;\n}\n\ninterface CamerasContainerProps {\n  app: Application;\n}\n\nclass CamerasContainer extends React.Component<CamerasContainerProps> {\n  /**\n   * canvas dom container\n   */\n  container = React.createRef<HTMLDivElement>();\n\n  /**\n   * cameras dom container\n   */\n  camerasContainer = React.createRef<HTMLDivElement>();\n\n  /**\n   * cancellable image loader\n   */\n  cancellableLoaders: CancellableLoader[] = [];\n\n  /**\n   * loaded count for current frame\n   */\n  loadedCount = 0;\n\n  /**\n   * reactions\n   */\n  reactionDisposers: IReactionDisposer[] = [];\n\n  /**\n   * mouse position\n   */\n  mousePosition = {\n    x: -1,\n    y: -1,\n  };\n\n  /**\n   * image load errors\n   */\n  imageLoadErrors: {\n    [camera: string]: string;\n  } = {};\n\n  /**\n   * cameras container scroll top\n   */\n  scrollTop = 0;\n\n  /**\n   * cameras container scroll height\n   */\n  scrollHeight = 0;\n\n  /**\n   * cameras container height\n   */\n  containerHeight = 0;\n\n  /**\n   * scroll y when start\n   */\n  scrollStartY = 0;\n\n  /**\n   * scroll top when start\n   */\n  scrollStartTop = 0;\n\n  /**\n   * scroll thumb top\n   */\n  get scrollThumbTop() {\n    if (this.scrollHeight === 0) {\n      return 0;\n    }\n    return (this.scrollTop / this.scrollHeight) * this.containerHeight;\n  }\n\n  /**\n   * scrooll thumb height\n   */\n  get scrollThumbHeight() {\n    if (this.scrollHeight === 0) {\n      return 0;\n    }\n    return (this.containerHeight / this.scrollHeight) * this.containerHeight;\n  }\n\n  constructor(props: CamerasContainerProps) {\n    super(props);\n\n    makeObservable(this, {\n      mousePosition: observable,\n      imageLoadErrors: observable,\n      scrollTop: observable,\n      scrollHeight: observable,\n      containerHeight: observable,\n      scrollThumbTop: computed,\n      scrollThumbHeight: computed,\n      updateMousePosition: action,\n      updateScroller: action,\n      onLoaded: action,\n      scroll: action,\n      scrolling: action,\n    });\n\n    this.reactionDisposers.push(reaction(\n      () => [store.initialized, store.frame.currentFrame],\n      () => {\n        // when initialized, or frame changes\n        this.updateCameras();\n      },\n    ));\n    this.reactionDisposers.push(reaction(\n      () => store.frame.currentCamera,\n      () => {\n        this.updateMousePositionInCamera();\n      },\n    ));\n  }\n\n  componentDidMount() {\n    window.addEventListener('mousemove', this.updateMousePosition);\n    if (this.container.current) {\n      new ResizeObserver(this.resize).observe(this.container.current);\n      this.props.app.renderer.on('resolution-changed', this.resize);\n\n      // setup view\n      this.container.current.appendChild(this.props.app.view);\n      this.resize();\n      this.updateCameras();\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('mousemove', this.updateMousePosition);\n    this.props.app.renderer.off('resolution-changed', this.resize);\n    this.reactionDisposers.forEach((disposer) => disposer());\n    // remove camera views\n    Object.values(store.frame.cameraViews).forEach((view) => {\n      this.props.app.stage.removeChild(view);\n    });\n  }\n\n  /**\n   * update mouse position\n   * @param e\n   */\n  updateMousePosition = (e: MouseEvent) => {\n    const { clientX, clientY } = e;\n    this.mousePosition = {\n      x: clientX,\n      y: clientY,\n    };\n    this.updateMousePositionInCamera();\n  };\n\n  /**\n   * update mouse position in current camera\n   */\n  updateMousePositionInCamera = () => {\n    const { currentCameraView } = store.frame;\n    if (currentCameraView?.hovered) {\n      const position = this.mapScreenToStagePosition(this.mousePosition.x, this.mousePosition.y);\n      store.currPosition = currentCameraView.stage.toLocal(position);\n    } else {\n      store.currPosition = undefined;\n    }\n  };\n\n  /**\n   * get container's size, defualt is 800 * 600\n   */\n  getContainerSize() {\n    // default size is 800 * 600\n    const size = {\n      width: 800,\n      height: 600,\n    };\n    if (this.container.current) {\n      size.width = this.container.current.clientWidth;\n      size.height = this.container.current.clientHeight;\n    }\n    return size;\n  }\n\n  /**\n   * get camera bounds by camera index\n   * @param cameraIndex\n   */\n  getCameraBounds(cameraIndex: number) {\n    const { width, height } = this.props.app.screen;\n    const { cameraCount } = store.frame;\n    if (cameraCount === 1) {\n      return {\n        width,\n        height,\n        x: 0,\n        y: 0,\n      };\n    }\n    const hasScroller = cameraCount > 4;\n    const cameraWidth = (hasScroller ? width - 12 : width) / 2;\n    const cameraHeight = hasScroller ? (cameraWidth / 16) * 9 : height / 2;\n    if (cameraCount === 2) {\n      // split two columns\n      return {\n        width: cameraWidth,\n        height,\n        x: cameraIndex * cameraWidth,\n        y: 0,\n      };\n    }\n    // default split into 4 parts\n    const colIndex = cameraIndex % 2;\n    const rowIndex = Math.floor(cameraIndex / 2);\n    return {\n      width: cameraWidth,\n      height: cameraHeight,\n      x: colIndex * cameraWidth,\n      y: rowIndex * cameraHeight,\n    };\n  }\n\n  /**\n   * resize\n   */\n  resize = () => {\n    const { width, height } = this.getContainerSize();\n    this.props.app.renderer.resize(width, height);\n    this.props.app.render();\n\n    // update camera views\n    Object.values(store.frame.cameraViews).forEach((cameraView, i) => {\n      this.updateCameraBounds(cameraView, i);\n    });\n    // update cameras scroller\n    this.updateScroller();\n  };\n\n  /**\n   * update cameras for current frame\n   */\n  updateCameras() {\n    const { cameras, currentFrame } = store.frame;\n\n    utils.clearTextureCache();\n    this.cancellableLoaders.forEach((loader) => {\n      loader.cancel();\n    });\n    this.cancellableLoaders = [];\n    this.loadedCount = 0;\n\n    Object.keys(cameras).forEach((camera, i) => {\n      const url = cameras[camera][currentFrame] || '';\n      const loader: CancellableLoader = {\n        cancelled: false,\n        cancel() {\n          this.cancelled = true;\n        },\n        load() {\n          return new Promise((resove, reject) => {\n            imageLoader(url, (data) => {\n              if (!this.cancelled) {\n                resove(data);\n              } else {\n                reject();\n              }\n            }, {\n              canvas: true,\n              orientation: true,\n              crossOrigin: 'anonymous',\n            });\n          });\n        }\n      };\n      loader\n        .load()\n        .then((data) => this.onLoaded(camera, i, url, data))\n        .catch(() => {\n          // canceled\n        });\n      this.cancellableLoaders.push(loader);\n    });\n  }\n\n  /**\n   * update camera bounds\n   * @param cameraView\n   * @param index\n   */\n  updateCameraBounds(cameraView: View, index: number) {\n    const { x, y, width, height } = this.getCameraBounds(index);\n    cameraView.updatePositionAndSize(x, y - this.scrollTop, width, height);\n    const cameraDom = document.getElementById(`${CAMERA_VIEW}-${cameraView.id}`);\n    if (cameraDom) {\n      cameraDom.style.left = `${x}px`;\n      cameraDom.style.top = `${y}px`;\n      cameraDom.style.width = `${width}px`;\n      cameraDom.style.height = `${height}px`;\n    }\n  }\n\n  /**\n   * update cameras scroller\n   */\n  updateScroller() {\n    if (this.camerasContainer.current) {\n      const { scrollTop, scrollHeight } = this.camerasContainer.current;\n      const { height } = this.camerasContainer.current.getBoundingClientRect();\n      this.scrollTop = scrollTop;\n      this.scrollHeight = scrollHeight;\n      this.containerHeight = height;\n    }\n  }\n\n  /**\n   * on resource loaded\n   * @param name\n   * @param index\n   * @param url\n   * @param data\n   */\n  onLoaded = (name: string, index: number, url: string, data: Event | HTMLCanvasElement | HTMLImageElement) => {\n    const error = data instanceof Event && data.type === 'error';\n    const cameraView = store.frame.cameraViews[name];\n    if (cameraView) {\n      this.props.app.stage.addChild(cameraView); // add view if needed\n\n      const { currentFrame, getFrameRotation, updateImageSize } = store.frame;\n      cameraView.imageLoadError = error;\n      cameraView.imageRotation = getFrameRotation(name, currentFrame);\n      this.updateCameraBounds(cameraView, index);\n\n      let texture: Texture;\n      if (!error) {\n        texture = Texture.from(data as HTMLCanvasElement);\n        cameraView.setImage(texture);\n      }\n      updateImageSize(name, currentFrame, error ? -1 : texture!.width, error ? -1 : texture!.height);\n    }\n    this.imageLoadErrors[name] = error\n      ? i18n.translate('COMMON_IMAGE_ERROR', { values: { image: url || i18n.translate('COMMON_EMPTY') } })\n      : '';\n    this.loadedCount += 1;\n    this.checkLoaded();\n  };\n\n  /**\n   * check all cameras loaded in current frame\n   */\n  checkLoaded() {\n    const { cameras, onFrameLoaded } = store.frame;\n    if (this.loadedCount === Object.keys(cameras).length) {\n      onFrameLoaded();\n    }\n  }\n\n  /**\n   * wheel\n   */\n  wheel = (event: React.WheelEvent) => {\n    const { currentCameraView } = store.frame;\n    if (currentCameraView) {\n      const point = this.mapScreenToStagePosition(event.clientX, event.clientY);\n      const localPoint = this.mapStageToLocalPosition(point);\n      const zoomed = currentCameraView.zoom(event.nativeEvent, localPoint);\n      if (!zoomed) {\n        this.scroll(event.deltaY);\n      }\n    }\n  };\n\n  /**\n   * scroll\n   * @param deltaY\n   */\n  scroll(deltaY: number) {\n    if (this.camerasContainer.current) {\n      this.camerasContainer.current.scrollBy(0, deltaY);\n      this.scrollTop = this.camerasContainer.current.scrollTop;\n      Object.values(store.frame.cameraViews).forEach((cameraView, i) => {\n        this.updateCameraBounds(cameraView, i);\n      });\n    }\n  }\n\n  /**\n   * start scroll\n   * @param e\n   */\n  startScroll = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    this.scrollStartY = e.clientY;\n    this.scrollStartTop = this.scrollThumbTop;\n    window.addEventListener('mousemove', this.scrolling);\n    window.addEventListener('mouseup', this.finishScroll);\n  };\n\n  /**\n   * scrolling\n   * @param e\n   */\n  scrolling = (e: MouseEvent) => {\n    e.preventDefault();\n    if (this.camerasContainer.current) {\n      const offsetClientY = e.clientY - this.scrollStartY;\n      let top = this.scrollStartTop + offsetClientY;\n      if (top < 0) {\n        top = 0;\n      }\n      const { clientHeight, scrollHeight } = this.camerasContainer.current;\n      const maxTop = clientHeight - this.scrollThumbHeight;\n      if (top > maxTop) {\n        top = maxTop;\n      }\n\n      this.scrollTop = (top / clientHeight) * scrollHeight;\n      this.camerasContainer.current.scroll(0, this.scrollTop);\n\n      Object.values(store.frame.cameraViews).forEach((cameraView, i) => {\n        this.updateCameraBounds(cameraView, i);\n      });\n    }\n  };\n\n  /**\n   * finish scroll\n   * @param e\n   */\n  finishScroll = (e: MouseEvent) => {\n    e.preventDefault();\n    window.removeEventListener('mousemove', this.scrolling);\n    window.removeEventListener('mouseup', this.finishScroll);\n  };\n\n  /**\n   * map screen position to stage position as a PIXI point\n   * @param x screen position x\n   * @param y screen position y\n   */\n  mapScreenToStagePosition(x: number, y: number) {\n    const point = new Point();\n    this.props.app.renderer.plugins.interaction.mapPositionToPoint(point, x, y);\n    return point;\n  }\n\n  /**\n   * map stage position to local posistion as a PIXI point\n   * @param point\n   */\n  mapStageToLocalPosition(point: Point) {\n    return this.props.app.stage.toLocal(point);\n  }\n\n  renderCameraView(camera: string, i: number) {\n    const { labelMode, viewScale, crossLineVisible, activeMeasurementBox } = store.config;\n    const { currentCamera, isSingleCamera } = store.frame;\n    const selected = currentCamera === camera;\n    return (\n      <div\n        key={camera}\n        id={`${CAMERA_VIEW}-${camera}`}\n        className={cx('camera-view', {\n          selected,\n          single: isSingleCamera,\n        })}\n      >\n        <div\n          id={`${CAMERA_VIEW_LABELS}-${camera}`}\n          className=\"shape-labels-container\"\n          style={{ display: labelMode ? 'block' : 'none' }}\n        />\n        <svg\n          id={`${CAMERA_VIEW_CONNECTIONS}-${camera}`}\n          className=\"connections-container\"\n        >\n          <marker id={CONNECTION_MARKER_ARROW} markerWidth=\"10\" markerHeight=\"10\" refX=\"8\" refY=\"4\" orient=\"auto\">\n            <path d=\"M0,0 L0,8 L8,4 z\" fill=\"#FFAFFE\" />\n          </marker>\n        </svg>\n        <LabelViewer\n          camera={camera}\n          mousePosition={this.mousePosition}\n        />\n        <Assistant\n          scale={viewScale}\n          crossline={selected && crossLineVisible}\n          measurementBox={selected ? activeMeasurementBox : undefined}\n          mousePosition={this.mousePosition}\n        />\n        <div className=\"outer-border\">\n          <div className=\"inner-border\">\n            {this.imageLoadErrors[camera] && (\n              <div\n                className=\"error\"\n                onClick={() => store.frame.setCamera(camera)}\n              >\n                {this.imageLoadErrors[camera]}\n              </div>\n            )}\n            {!isSingleCamera && (\n              <div className=\"name\">{`C${i + 1}-${camera}`}</div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { cursor } = store.config;\n    const { currentCameraView, cameraNames } = store.frame;\n    return (\n      <>\n        <OperationNavigator\n          onViewReset={() => currentCameraView?.fitImageToView()}\n          setViewScale={(scale) => currentCameraView?.zoomTo(scale)}\n        />\n        <div\n          style={{\n            width: '100%',\n            height: `calc(100% - ${NAVIGATOR_HEIGHT}px)`,\n            position: 'relative',\n            cursor,\n          }}\n        >\n          <div\n            ref={this.container}\n            className=\"canvas-container\"\n            style={{ width: '100%', height: '100%' }}\n            onContextMenu={(e) => e.preventDefault()}\n            onWheel={this.wheel}\n          />\n          <div\n            ref={this.camerasContainer}\n            className=\"cameras-container\"\n          >\n            {cameraNames.map((camera, i) => this.renderCameraView(camera, i))}\n          </div>\n          {cameraNames.length > 4 && (\n            <div className=\"cameras-scroller\">\n              <div\n                className=\"cameras-scroller__thumb\"\n                style={{\n                  top: this.scrollThumbTop,\n                  height: this.scrollThumbHeight,\n                }}\n                onMouseDown={this.startScroll}\n              />\n            </div>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default observer(CamerasContainer);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}