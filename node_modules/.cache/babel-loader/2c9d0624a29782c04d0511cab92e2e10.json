{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/SegmentNavigation/SegmentNavigation.js\";\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable no-empty */\nimport React, { useRef, useImperativeHandle } from 'react';\nimport { Tooltip } from 'antd';\nimport { connect } from 'react-redux';\nimport { Grid, AutoSizer } from 'react-virtualized';\nimport './SegmentNavigation.scss';\nimport { translate } from '../../constants';\nlet SegmentNavigation = props => {\n  const {\n    currentVideo,\n    currentSegment,\n    videos,\n    refInstance\n  } = props;\n  const gridRef = useRef();\n  const handleButtonClick = (e, segmentIndex) => {\n    props.setCurrentSegment({\n      index: segmentIndex\n    });\n  };\n  const size = props.results[currentVideo].length;\n  useImperativeHandle(refInstance, () => ({\n    gridRef: gridRef.current\n  }));\n  const getNavigationEnd = index => {\n    const step = props.navigationSize;\n    const min = Math.min(index + step, size);\n    if (min === index + 1) {\n      const text = `${index + 1}`;\n      // eslint-disable-next-line no-nested-ternary\n      const style = text.length > 3 ? {\n        fontSize: '9px',\n        marginLeft: '-3px'\n      } : text.length > 2 ? {\n        fontSize: '11px',\n        marginLeft: '-2px'\n      } : null;\n      return /*#__PURE__*/React.createElement(\"span\", {\n        style: style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 14\n        }\n      }, text);\n    }\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 12\n      }\n    }, `${index + 1}~${min}`);\n  };\n  const containsEmptyText = index => {\n    try {\n      const results = props.results[currentVideo];\n      const max = Math.min(index + props.navigationSize, size);\n      for (let i = index; i < max; i += 1) {\n        var _results$i;\n        if ((_results$i = results[i]) === null || _results$i === void 0 ? void 0 : _results$i.content.some(l => !l.text)) {\n          return true;\n        }\n      }\n    } catch (e) {}\n    return false;\n  };\n  const getTextSnapshot = index => {\n    try {\n      var _props$results$curren, _props$results$curren2, _props$results$curren3, _props$results$curren4;\n      const role = (_props$results$curren = props.results[currentVideo][index]) === null || _props$results$curren === void 0 ? void 0 : (_props$results$curren2 = _props$results$curren.content[0]) === null || _props$results$curren2 === void 0 ? void 0 : _props$results$curren2.role;\n      return (role ? `${role}: ` : '') + ((_props$results$curren3 = props.results[currentVideo][index]) === null || _props$results$curren3 === void 0 ? void 0 : (_props$results$curren4 = _props$results$curren3.content[0]) === null || _props$results$curren4 === void 0 ? void 0 : _props$results$curren4.text);\n    } catch (e) {}\n    return '';\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: videos[currentVideo].type === 'video' ? 'calc(60% - 12px)' : 'calc(100% - 12px)'\n    },\n    className: \"segment-navigation-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, `${translate('navigation')}:`), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"segment-navigation-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AutoSizer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, ({\n    width,\n    height\n  }) => /*#__PURE__*/React.createElement(Grid, {\n    ref: gridRef,\n    style: {\n      outline: 'none'\n    },\n    width: width,\n    height: height,\n    rowCount: Math.ceil(props.results[currentVideo].length / Math.floor(width / 40)),\n    columnCount: Math.floor(width / 40),\n    rowHeight: 40,\n    columnWidth: 40,\n    cellRenderer: ({\n      columnIndex: col,\n      rowIndex: row,\n      key,\n      parent,\n      style\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      style: style,\n      key: key,\n      parent: parent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, row * Math.floor(width / 40) + col >= props.results[currentVideo].length ? null : /*#__PURE__*/React.createElement(Tooltip, {\n      title: getTextSnapshot(row * Math.floor(width / 40) + col),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: `segment-navigation-item ${row * Math.floor(width / 40) + col === currentSegment ? 'segment-navigation-item-focus' : ''} ${containsEmptyText(row * Math.floor(width / 40) + col) ? 'segment-navigation-item-empty' : ''}`,\n      onClick: e => handleButtonClick(e, row * Math.floor(width / 40) + col),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 27\n      }\n    }, getNavigationEnd(row * Math.floor(width / 40) + col)))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }))));\n};\nconst mapStateToProps = state => ({\n  videos: state.videos,\n  results: state.results,\n  currentVideo: state.currentVideo,\n  currentSegment: state.currentSegment,\n  navigationSize: state.navigationSize\n});\nconst mapDispatchToProps = {};\nSegmentNavigation = connect(mapStateToProps, mapDispatchToProps)(SegmentNavigation);\nexport default React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(SegmentNavigation, Object.assign({}, props, {\n  refInstance: ref,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 49\n  }\n})));","map":{"version":3,"names":["React","useRef","useImperativeHandle","Tooltip","connect","Grid","AutoSizer","translate","SegmentNavigation","props","currentVideo","currentSegment","videos","refInstance","gridRef","handleButtonClick","e","segmentIndex","setCurrentSegment","index","size","results","length","current","getNavigationEnd","step","navigationSize","min","Math","text","style","fontSize","marginLeft","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","containsEmptyText","max","i","_results$i","content","some","l","getTextSnapshot","_props$results$curren","_props$results$curren2","_props$results$curren3","_props$results$curren4","role","height","type","className","width","ref","outline","rowCount","ceil","floor","columnCount","rowHeight","columnWidth","cellRenderer","columnIndex","col","rowIndex","row","key","parent","title","onClick","mapStateToProps","state","mapDispatchToProps","forwardRef","Object","assign"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/SegmentNavigation/SegmentNavigation.js"],"sourcesContent":["/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable no-empty */\nimport React, { useRef, useImperativeHandle } from 'react';\nimport { Tooltip } from 'antd';\nimport { connect } from 'react-redux';\nimport { Grid, AutoSizer } from 'react-virtualized';\nimport './SegmentNavigation.scss';\nimport { translate } from '../../constants';\n\nlet SegmentNavigation = (props) => {\n  const { currentVideo, currentSegment, videos, refInstance } = props;\n  const gridRef = useRef();\n  const handleButtonClick = (e, segmentIndex) => {\n    props.setCurrentSegment({ index: segmentIndex });\n  };\n\n  const size = props.results[currentVideo].length;\n\n  useImperativeHandle(refInstance, () => ({\n    gridRef: gridRef.current\n  }));\n\n  const getNavigationEnd = (index) => {\n    const step = props.navigationSize;\n    const min = Math.min(index + step, size);\n    if (min === index + 1) {\n      const text = `${index + 1}`;\n      // eslint-disable-next-line no-nested-ternary\n      const style = text.length > 3 ? { fontSize: '9px', marginLeft: '-3px' } : text.length > 2 ? { fontSize: '11px', marginLeft: '-2px' } : null;\n      return <span style={style}>{text}</span>;\n    }\n    return <span>{`${index + 1}~${min}`}</span>;\n  };\n\n  const containsEmptyText = (index) => {\n    try {\n      const results = props.results[currentVideo];\n      const max = Math.min(index + props.navigationSize, size);\n      for (let i = index; i < max; i += 1) {\n        if (results[i]?.content.some((l) => !l.text)) {\n          return true;\n        }\n      }\n    } catch (e) {}\n    return false;\n  };\n\n  const getTextSnapshot = (index) => {\n    try {\n      const role = props.results[currentVideo][index]?.content[0]?.role;\n      return (role ? `${role}: ` : '') + props.results[currentVideo][index]?.content[0]?.text;\n    } catch (e) {}\n    return '';\n  };\n\n  return (\n    <div\n      style={{ height: videos[currentVideo].type === 'video' ? 'calc(60% - 12px)' : 'calc(100% - 12px)' }}\n      className=\"segment-navigation-container\"\n    >\n      <span>{`${translate('navigation')}:`}</span>\n      <div className=\"segment-navigation-list\">\n        <AutoSizer>\n          {({ width, height }) => (\n            <Grid\n              ref={gridRef}\n              style={{ outline: 'none' }}\n              width={width}\n              height={height}\n              rowCount={Math.ceil(props.results[currentVideo].length / Math.floor(width / 40))}\n              columnCount={Math.floor(width / 40)}\n              rowHeight={40}\n              columnWidth={40}\n              cellRenderer={({ columnIndex: col, rowIndex: row, key, parent, style }) => (\n                <div\n                  style={style}\n                  key={key}\n                  parent={parent}\n                >\n                  {\n                    row * Math.floor(width / 40) + col >= props.results[currentVideo].length\n                      ? null\n                      : (\n                        <Tooltip\n                          title={getTextSnapshot(row * Math.floor(width / 40) + col)}\n                        >\n                          <button\n                            className={`segment-navigation-item ${row * Math.floor(width / 40) + col === currentSegment ? 'segment-navigation-item-focus' : ''} ${containsEmptyText(row * Math.floor(width / 40) + col) ? 'segment-navigation-item-empty' : ''}`}\n                            onClick={(e) => handleButtonClick(e, row * Math.floor(width / 40) + col)}\n                          >\n                            {getNavigationEnd(row * Math.floor(width / 40) + col)}\n                          </button>\n                        </Tooltip>\n                      )\n                  }\n                </div>\n              )}\n            />\n          )}\n        </AutoSizer>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  videos: state.videos,\n  results: state.results,\n  currentVideo: state.currentVideo,\n  currentSegment: state.currentSegment,\n  navigationSize: state.navigationSize,\n});\nconst mapDispatchToProps = {};\n\nSegmentNavigation = connect(mapStateToProps, mapDispatchToProps)(SegmentNavigation);\nexport default React.forwardRef((props, ref) => <SegmentNavigation {...props} refInstance={ref} />);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}