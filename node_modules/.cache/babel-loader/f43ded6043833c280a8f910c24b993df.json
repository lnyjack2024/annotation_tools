{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/SegmentAbstract/SegmentAbstractItem/SegmentAbstractItem.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport './SegmentAbstractItem.scss';\nimport hexToRgba from 'hex-to-rgba';\nimport { Input, Popover } from 'antd';\nimport LineAbstractItem from '../LineAbstractItem/LineAbstractItem';\nimport { defaultColor, formatTimestamp, translate, shortText } from '../../../constants';\nimport QAAcceptIcon from '../../common/Icons/QAAcceptIcon';\nimport QARejectIcon from '../../common/Icons/QARejectIcon';\nimport { TOOL_MODE } from '../../../../../utils/tool-mode';\nclass SegmentAbstractItem extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.handleContainerClick = e => {\n      this.props.setCurrentSegment({\n        index: this.props.segmentIndex\n      });\n    };\n  }\n  componentDidMount() {\n    this.props.onUpdate();\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.segment && prevProps.segment.content && this.props.segment && this.props.segment.content && prevProps.segment.content.length !== this.props.segment.content.length) {\n      this.props.onUpdate();\n    }\n  }\n  render() {\n    const {\n      currentSegment,\n      ontology,\n      segmentConfig,\n      segment,\n      segmentIndex,\n      toolMode,\n      setCurrentSegment\n    } = this.props;\n    const color = ontology.get(segment.content[0].role) ? hexToRgba(ontology.get(segment.content[0].role), defaultColor.defaultAlpha) : 'transparent';\n    const validConfig = segmentConfig.fields.map(value => value.name);\n    return (\n      /*#__PURE__*/\n      // eslint-disable-next-line react/jsx-filename-extension\n      React.createElement(\"div\", {\n        onClick: e => this.handleContainerClick(e),\n        className: `segment-abstract-item-container ${currentSegment === segmentIndex ? 'segment-abstract-item-container-current' : ''}`,\n        id: `segment-abstract-item-${segmentIndex}`,\n        ref: r => {\n          this.segmentAbstractItemBox = r;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"segment-abstract-item\",\n        style: {\n          borderLeft: `6px solid ${color}`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"segment-abstract-item-index\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, segmentIndex + 1), this.props.client !== 'hw-translation' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"segment-abstract-item-timestamp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, `${(segment.end - segment.start).toFixed(3)}s (${formatTimestamp(segment.start)}~${formatTimestamp(segment.end)})`), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"segment-abstract-item-categories\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, Object.keys(segment.attributes).map((value, index) => (validConfig.indexOf(value) >= 0 || this.props.keyAttribute.name === value) && segment.attributes[value] !== undefined ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"segment-abstract-item-category\"\n        /* eslint-disable-next-line react/no-array-index-key */,\n        key: `segment-abstract-item-category${index}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }\n      }, segment.attributes[value]) : null))) : /*#__PURE__*/React.createElement(Input.TextArea, {\n        className: \"segment-abstract-item-category-hw\",\n        value: segment.attributes.source,\n        disabled: true,\n        autoComplete: \"off\",\n        autoSize: {\n          minRows: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"segment-abstract-item-qa-state\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }, segment.qaChecked === undefined || toolMode === TOOL_MODE.LABELING ? null : /*#__PURE__*/React.createElement(Popover, {\n        overlayStyle: {\n          maxWidth: '30%'\n        },\n        mouseEnterDelay: 0,\n        mouseLeaveDelay: 0,\n        trigger: \"hover\",\n        color: \"#2D2A34FF\",\n        content: segment.qaChecked === false ? /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            fontSize: '15px',\n            color: 'white'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            fontSize: '18px',\n            color: 'white',\n            fontWeight: 'bolder'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }\n        }, translate('qaReject')), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            fontWeight: 'bolder'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }\n        }, `${translate('reason')}: `), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }\n        }, segment.qaReason || ''), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            fontWeight: 'bolder'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }\n        }, `${translate('comment')}: `), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }\n        }, segment.qaComment || '')) : /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            fontSize: '15px',\n            color: 'white'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }\n        }, translate('qaAccept')),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }\n      }, segment.qaChecked === true ? /*#__PURE__*/React.createElement(QAAcceptIcon, {\n        style: {\n          width: '22px',\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 47\n        }\n      }) : /*#__PURE__*/React.createElement(QARejectIcon, {\n        style: {\n          width: '22px',\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 111\n        }\n      })))), segment.content.map((value, index) => /*#__PURE__*/React.createElement(LineAbstractItem\n      /* eslint-disable-next-line react/no-array-index-key */, {\n        key: `lineAbstractItem${index}`,\n        line: value,\n        lineIndex: index,\n        segmentIndex: segmentIndex,\n        setCurrentSegment: setCurrentSegment,\n        existRole: this.props.ontology && this.props.ontology.size > 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      })))\n    );\n  }\n}\n;\nSegmentAbstractItem.protoTypes = {\n  ontology: PropTypes.arrayOf(PropTypes.object),\n  segmentConfig: PropTypes.arrayOf(PropTypes.object),\n  lineConfig: PropTypes.arrayOf(PropTypes.object),\n  currentSegment: PropTypes.number,\n  segment: PropTypes.object,\n  segmentIndex: PropTypes.number\n};\nconst mapStateToProps = state => ({\n  ontology: state.ontology,\n  segmentConfig: state.segmentConfig,\n  lineConfig: state.lineConfig,\n  currentSegment: state.currentSegment,\n  toolMode: state.toolMode,\n  keyAttribute: state.keyAttribute,\n  client: state.client\n});\nconst mapDispatchToProps = {\n  // setCurrentSegment,\n};\nexport default connect(mapStateToProps, mapDispatchToProps, null, {\n  forwardRef: true\n})(SegmentAbstractItem);","map":{"version":3,"names":["React","PropTypes","connect","hexToRgba","Input","Popover","LineAbstractItem","defaultColor","formatTimestamp","translate","shortText","QAAcceptIcon","QARejectIcon","TOOL_MODE","SegmentAbstractItem","Component","constructor","args","handleContainerClick","e","props","setCurrentSegment","index","segmentIndex","componentDidMount","onUpdate","componentDidUpdate","prevProps","segment","content","length","render","currentSegment","ontology","segmentConfig","toolMode","color","get","role","defaultAlpha","validConfig","fields","map","value","name","createElement","onClick","className","id","ref","r","segmentAbstractItemBox","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","borderLeft","client","Fragment","end","start","toFixed","Object","keys","attributes","indexOf","keyAttribute","undefined","key","TextArea","source","disabled","autoComplete","autoSize","minRows","qaChecked","LABELING","overlayStyle","maxWidth","mouseEnterDelay","mouseLeaveDelay","trigger","fontSize","fontWeight","qaReason","qaComment","width","cursor","line","lineIndex","existRole","size","protoTypes","arrayOf","object","lineConfig","number","mapStateToProps","state","mapDispatchToProps","forwardRef"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/SegmentAbstract/SegmentAbstractItem/SegmentAbstractItem.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport './SegmentAbstractItem.scss';\nimport hexToRgba from 'hex-to-rgba';\nimport { Input, Popover } from 'antd';\nimport LineAbstractItem from '../LineAbstractItem/LineAbstractItem';\nimport { defaultColor, formatTimestamp, translate, shortText } from '../../../constants';\nimport QAAcceptIcon from '../../common/Icons/QAAcceptIcon';\nimport QARejectIcon from '../../common/Icons/QARejectIcon';\nimport { TOOL_MODE } from '../../../../../utils/tool-mode';\n\nclass SegmentAbstractItem extends React.Component {\n  componentDidMount() {\n    this.props.onUpdate();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.segment && prevProps.segment.content && this.props.segment && this.props.segment.content && prevProps.segment.content.length !== this.props.segment.content.length) {\n      this.props.onUpdate();\n    }\n  }\n\n  handleContainerClick = (e) => {\n    this.props.setCurrentSegment({ index: this.props.segmentIndex });\n  };\n\n  render() {\n    const { currentSegment, ontology, segmentConfig, segment, segmentIndex, toolMode, setCurrentSegment } = this.props;\n    const color = ontology.get(segment.content[0].role)\n      ? hexToRgba(ontology.get(segment.content[0].role), defaultColor.defaultAlpha)\n      : 'transparent';\n    const validConfig = segmentConfig.fields.map((value) => value.name);\n\n    return (\n      // eslint-disable-next-line react/jsx-filename-extension\n      <div\n        onClick={(e) => this.handleContainerClick(e)}\n        className={`segment-abstract-item-container ${currentSegment === segmentIndex ? 'segment-abstract-item-container-current' : ''}`}\n        id={`segment-abstract-item-${segmentIndex}`}\n        ref={(r) => { this.segmentAbstractItemBox = r; }}\n      >\n        <div className=\"segment-abstract-item\" style={{ borderLeft: `6px solid ${color}` }}>\n          {/* <div\n            style={{ background: color }}\n            className=\"segment-abstract-item-color\"\n          /> */}\n          <div className=\"segment-abstract-item-index\">{segmentIndex + 1}</div>\n          {\n            this.props.client !== 'hw-translation' ? (\n              <>\n                <div className=\"segment-abstract-item-timestamp\">{`${(segment.end - segment.start).toFixed(3)}s (${formatTimestamp(segment.start)}~${formatTimestamp(segment.end)})`}</div>\n                <div className=\"segment-abstract-item-categories\">\n                  {Object.keys(segment.attributes).map((value, index) => (\n                    (\n                      (validConfig.indexOf(value) >= 0 || this.props.keyAttribute.name === value) &&\n                      segment.attributes[value] !== undefined\n                    )\n                      ? (\n                        <span\n                          className=\"segment-abstract-item-category\"\n                          /* eslint-disable-next-line react/no-array-index-key */\n                          key={`segment-abstract-item-category${index}`}\n                        >\n                          {segment.attributes[value]}\n                        </span>\n                      ) : null\n                  ))}\n                </div>\n              </>\n            ) : (\n              <Input.TextArea\n                className=\"segment-abstract-item-category-hw\"\n                value={segment.attributes.source}\n                disabled\n                autoComplete=\"off\"\n                autoSize={{ minRows: 1 }}\n              />\n            )\n          }\n          <div className=\"segment-abstract-item-qa-state\">\n            {segment.qaChecked === undefined || toolMode === TOOL_MODE.LABELING ? null : (\n              <Popover\n                overlayStyle={{\n                  maxWidth: '30%'\n                }}\n                mouseEnterDelay={0}\n                mouseLeaveDelay={0}\n                trigger=\"hover\"\n                color=\"#2D2A34FF\"\n                content={\n                  segment.qaChecked === false ?\n                    (\n                      <div style={{ fontSize: '15px', color: 'white' }}>\n                        <span style={{ fontSize: '18px', color: 'white', fontWeight: 'bolder' }}>{translate('qaReject')}</span>\n                        <br />\n                        <span style={{ fontWeight: 'bolder' }}>{`${translate('reason')}: `}</span>\n                        <span>{segment.qaReason || ''}</span>\n                        <br />\n                        <span style={{ fontWeight: 'bolder' }}>{`${translate('comment')}: `}</span>\n                        <span>{segment.qaComment || ''}</span>\n                      </div>\n                    ) : <div style={{ fontSize: '15px', color: 'white' }}>{translate('qaAccept')}</div>\n                }\n              >\n                {segment.qaChecked === true ? <QAAcceptIcon style={{ width: '22px', cursor: 'pointer' }} /> : <QARejectIcon style={{ width: '22px', cursor: 'pointer' }} />}\n              </Popover>\n            )}\n          </div>\n        </div>\n        {segment.content.map((value, index) => (\n          <LineAbstractItem\n            /* eslint-disable-next-line react/no-array-index-key */\n            key={`lineAbstractItem${index}`}\n            line={value}\n            lineIndex={index}\n            segmentIndex={segmentIndex}\n            setCurrentSegment={setCurrentSegment}\n            existRole={this.props.ontology && this.props.ontology.size > 0}\n          />\n        ))}\n      </div>\n    );\n  }\n};\n\nSegmentAbstractItem.protoTypes = {\n  ontology: PropTypes.arrayOf(PropTypes.object),\n  segmentConfig: PropTypes.arrayOf(PropTypes.object),\n  lineConfig: PropTypes.arrayOf(PropTypes.object),\n  currentSegment: PropTypes.number,\n  segment: PropTypes.object,\n  segmentIndex: PropTypes.number,\n};\n\nconst mapStateToProps = (state) => ({\n  ontology: state.ontology,\n  segmentConfig: state.segmentConfig,\n  lineConfig: state.lineConfig,\n  currentSegment: state.currentSegment,\n  toolMode: state.toolMode,\n  keyAttribute: state.keyAttribute,\n  client: state.client,\n});\nconst mapDispatchToProps = {\n  // setCurrentSegment,\n};\nexport default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(SegmentAbstractItem);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}