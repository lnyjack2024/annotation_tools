{"ast":null,"code":"/*:: type SortDirection = 'ASC' | 'DESC';*/\n/*:: type SortParams = {\n  defaultSortDirection: SortDirection,\n  event: MouseEvent,\n  sortBy: string,\n};*/\n/*:: type SortDirectionMap = {[string]: SortDirection};*/\n/*:: type MultiSortOptions = {\n  defaultSortBy: ?Array<string>,\n  defaultSortDirection: ?SortDirectionMap,\n};*/\n/*:: type MultiSortReturn = {\n  /**\n   * Sort property to be passed to the `Table` component.\n   * This function updates `sortBy` and `sortDirection` values.\n   *-/\n  sort: (params: SortParams) => void,\n\n  /**\n   * Specifies the fields currently responsible for sorting data,\n   * In order of importance.\n   *-/\n  sortBy: Array<string>,\n\n  /**\n   * Specifies the direction a specific field is being sorted in.\n   *-/\n  sortDirection: SortDirectionMap,\n};*/\nexport default function createMultiSort(sortCallback /*: Function*/) /*: MultiSortReturn*/{\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    defaultSortBy = _ref.defaultSortBy,\n    _ref$defaultSortDirec = _ref.defaultSortDirection,\n    defaultSortDirection = _ref$defaultSortDirec === void 0 ? {} : _ref$defaultSortDirec;\n  if (!sortCallback) {\n    throw Error(\"Required parameter \\\"sortCallback\\\" not specified\");\n  }\n  var sortBy = defaultSortBy || [];\n  var sortDirection = {};\n  sortBy.forEach(function (dataKey) {\n    sortDirection[dataKey] = defaultSortDirection[dataKey] !== undefined ? defaultSortDirection[dataKey] : 'ASC';\n  });\n  function sort(_ref2 /*:: */) /*: void*/{\n    var defaultSortDirection = _ref2 /*:: */.defaultSortDirection,\n      event = _ref2 /*:: */.event,\n      dataKey = _ref2 /*:: */.sortBy;\n    if (event.shiftKey) {\n      // Shift + click appends a column to existing criteria\n      if (sortDirection[dataKey] !== undefined) {\n        sortDirection[dataKey] = sortDirection[dataKey] === 'ASC' ? 'DESC' : 'ASC';\n      } else {\n        sortDirection[dataKey] = defaultSortDirection;\n        sortBy.push(dataKey);\n      }\n    } else if (event.ctrlKey || event.metaKey) {\n      // Control + click removes column from sort (if pressent)\n      var index = sortBy.indexOf(dataKey);\n      if (index >= 0) {\n        sortBy.splice(index, 1);\n        delete sortDirection[dataKey];\n      }\n    } else {\n      // Clear sortBy array of all non-selected keys\n      sortBy.length = 0;\n      sortBy.push(dataKey);\n\n      // Clear sortDirection object of all non-selected keys\n      var sortDirectionKeys = Object.keys(sortDirection);\n      sortDirectionKeys.forEach(function (key) {\n        if (key !== dataKey) delete sortDirection[key];\n      });\n\n      // If key is already selected, reverse sort direction.\n      // Else, set sort direction to default direction.\n      if (sortDirection[dataKey] !== undefined) {\n        sortDirection[dataKey] = sortDirection[dataKey] === 'ASC' ? 'DESC' : 'ASC';\n      } else {\n        sortDirection[dataKey] = defaultSortDirection;\n      }\n    }\n\n    // Notify application code\n    sortCallback({\n      sortBy: sortBy,\n      sortDirection: sortDirection\n    });\n  }\n  return {\n    sort: sort,\n    sortBy: sortBy,\n    sortDirection: sortDirection\n  };\n}","map":{"version":3,"names":["createMultiSort","sortCallback","_ref","arguments","length","undefined","defaultSortBy","_ref$defaultSortDirec","defaultSortDirection","Error","sortBy","sortDirection","forEach","dataKey","sort","_ref2","event","shiftKey","push","ctrlKey","metaKey","index","indexOf","splice","sortDirectionKeys","Object","keys","key"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/node_modules/react-virtualized/dist/es/Table/createMultiSort.js"],"sourcesContent":["/*:: type SortDirection = 'ASC' | 'DESC';*/\n/*:: type SortParams = {\n  defaultSortDirection: SortDirection,\n  event: MouseEvent,\n  sortBy: string,\n};*/\n/*:: type SortDirectionMap = {[string]: SortDirection};*/\n/*:: type MultiSortOptions = {\n  defaultSortBy: ?Array<string>,\n  defaultSortDirection: ?SortDirectionMap,\n};*/\n/*:: type MultiSortReturn = {\n  /**\n   * Sort property to be passed to the `Table` component.\n   * This function updates `sortBy` and `sortDirection` values.\n   *-/\n  sort: (params: SortParams) => void,\n\n  /**\n   * Specifies the fields currently responsible for sorting data,\n   * In order of importance.\n   *-/\n  sortBy: Array<string>,\n\n  /**\n   * Specifies the direction a specific field is being sorted in.\n   *-/\n  sortDirection: SortDirectionMap,\n};*/\nexport default function createMultiSort(sortCallback /*: Function*/) /*: MultiSortReturn*/{\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    defaultSortBy = _ref.defaultSortBy,\n    _ref$defaultSortDirec = _ref.defaultSortDirection,\n    defaultSortDirection = _ref$defaultSortDirec === void 0 ? {} : _ref$defaultSortDirec;\n  if (!sortCallback) {\n    throw Error(\"Required parameter \\\"sortCallback\\\" not specified\");\n  }\n  var sortBy = defaultSortBy || [];\n  var sortDirection = {};\n  sortBy.forEach(function (dataKey) {\n    sortDirection[dataKey] = defaultSortDirection[dataKey] !== undefined ? defaultSortDirection[dataKey] : 'ASC';\n  });\n  function sort(_ref2 /*:: */) /*: void*/{\n    var defaultSortDirection = _ref2 /*:: */.defaultSortDirection,\n      event = _ref2 /*:: */.event,\n      dataKey = _ref2 /*:: */.sortBy;\n    if (event.shiftKey) {\n      // Shift + click appends a column to existing criteria\n      if (sortDirection[dataKey] !== undefined) {\n        sortDirection[dataKey] = sortDirection[dataKey] === 'ASC' ? 'DESC' : 'ASC';\n      } else {\n        sortDirection[dataKey] = defaultSortDirection;\n        sortBy.push(dataKey);\n      }\n    } else if (event.ctrlKey || event.metaKey) {\n      // Control + click removes column from sort (if pressent)\n      var index = sortBy.indexOf(dataKey);\n      if (index >= 0) {\n        sortBy.splice(index, 1);\n        delete sortDirection[dataKey];\n      }\n    } else {\n      // Clear sortBy array of all non-selected keys\n      sortBy.length = 0;\n      sortBy.push(dataKey);\n\n      // Clear sortDirection object of all non-selected keys\n      var sortDirectionKeys = Object.keys(sortDirection);\n      sortDirectionKeys.forEach(function (key) {\n        if (key !== dataKey) delete sortDirection[key];\n      });\n\n      // If key is already selected, reverse sort direction.\n      // Else, set sort direction to default direction.\n      if (sortDirection[dataKey] !== undefined) {\n        sortDirection[dataKey] = sortDirection[dataKey] === 'ASC' ? 'DESC' : 'ASC';\n      } else {\n        sortDirection[dataKey] = defaultSortDirection;\n      }\n    }\n\n    // Notify application code\n    sortCallback({\n      sortBy: sortBy,\n      sortDirection: sortDirection\n    });\n  }\n  return {\n    sort: sort,\n    sortBy: sortBy,\n    sortDirection: sortDirection\n  };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}