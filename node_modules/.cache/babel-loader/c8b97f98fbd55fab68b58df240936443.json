{"ast":null,"code":"/**\n * Get the smallest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Smallest number found\n * @example console.log(min([1, 2, 3])); // logs 1\n */\nexport function minnum(values) {\n  let smallest = Number(Infinity);\n  for (let i = 0; i < values.length; i += 1) {\n    if (values[i] < smallest) {\n      smallest = values[i];\n    }\n  }\n  return smallest;\n}\n\n/**\n * Get the largest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Largest number found\n * @example console.log(max([1, 2, 3])); // logs 3\n */\nexport function maxnum(values) {\n  let largest = -Infinity;\n  for (let i = 0; i < values.length; i += 1) {\n    if (values[i] > largest) {\n      largest = values[i];\n    }\n  }\n  return largest;\n}\n\n/**\n * Returns a number limited to the given range.\n *\n * @param {number} val The number to be limited to a range\n * @param {number} min The lower boundary of the limit range\n * @param {number} max The upper boundary of the limit range\n * @returns {number} A number in the range [min, max]\n */\nexport function clamp(val, min, max) {\n  return Math.min(Math.max(min, val), max);\n}\n\n/**\n * Get the largest absolute value in an array\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Largest number found\n * @example console.log(max([-3, 2, 1]), max([-3, 2, 4])); // logs 3 4\n * @since 4.3.0\n */\nexport function absMax(values) {\n  const max = maxnum(values);\n  const min = minnum(values);\n  return -min > max ? -min : max;\n}","map":{"version":3,"names":["minnum","values","smallest","Number","Infinity","i","length","maxnum","largest","clamp","val","min","max","Math","absMax"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/phonetic-transcription/common/Wave/utils/math.ts"],"sourcesContent":["/**\n * Get the smallest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Smallest number found\n * @example console.log(min([1, 2, 3])); // logs 1\n */\nexport function minnum(values: number[]) {\n  let smallest = Number(Infinity);\n  for (let i = 0; i < values.length; i += 1) {\n    if (values[i] < smallest) {\n      smallest = values[i];\n    }\n  }\n  return smallest;\n}\n\n/**\n * Get the largest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Largest number found\n * @example console.log(max([1, 2, 3])); // logs 3\n */\nexport function maxnum(values: number[]) {\n  let largest = -Infinity;\n  for (let i = 0; i < values.length; i += 1) {\n    if (values[i] > largest) {\n      largest = values[i];\n    }\n  }\n  return largest;\n}\n\n/**\n * Returns a number limited to the given range.\n *\n * @param {number} val The number to be limited to a range\n * @param {number} min The lower boundary of the limit range\n * @param {number} max The upper boundary of the limit range\n * @returns {number} A number in the range [min, max]\n */\nexport function clamp(val: number, min: number, max: number) {\n  return Math.min(Math.max(min, val), max);\n}\n\n/**\n * Get the largest absolute value in an array\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Largest number found\n * @example console.log(max([-3, 2, 1]), max([-3, 2, 4])); // logs 3 4\n * @since 4.3.0\n */\nexport function absMax(values: number[]) {\n  const max = maxnum(values);\n  const min = minnum(values);\n  return -min > max ? -min : max;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,MAAMA,CAACC,MAAgB,EAAE;EACvC,IAAIC,QAAQ,GAAGC,MAAM,CAACC,QAAQ,CAAC;EAC/B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,MAAM,CAACK,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;IACzC,IAAIJ,MAAM,CAACI,CAAC,CAAC,GAAGH,QAAQ,EAAE;MACxBA,QAAQ,GAAGD,MAAM,CAACI,CAAC,CAAC;IACtB;EACF;EACA,OAAOH,QAAQ;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASK,MAAMA,CAACN,MAAgB,EAAE;EACvC,IAAIO,OAAO,GAAG,CAACJ,QAAQ;EACvB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,MAAM,CAACK,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;IACzC,IAAIJ,MAAM,CAACI,CAAC,CAAC,GAAGG,OAAO,EAAE;MACvBA,OAAO,GAAGP,MAAM,CAACI,CAAC,CAAC;IACrB;EACF;EACA,OAAOG,OAAO;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,KAAKA,CAACC,GAAW,EAAEC,GAAW,EAAEC,GAAW,EAAE;EAC3D,OAAOC,IAAI,CAACF,GAAG,CAACE,IAAI,CAACD,GAAG,CAACD,GAAG,EAAED,GAAG,CAAC,EAAEE,GAAG,CAAC;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,MAAMA,CAACb,MAAgB,EAAE;EACvC,MAAMW,GAAG,GAAGL,MAAM,CAACN,MAAM,CAAC;EAC1B,MAAMU,GAAG,GAAGX,MAAM,CAACC,MAAM,CAAC;EAC1B,OAAO,CAACU,GAAG,GAAGC,GAAG,GAAG,CAACD,GAAG,GAAGC,GAAG;AAChC","ignoreList":[]},"metadata":{},"sourceType":"module"}