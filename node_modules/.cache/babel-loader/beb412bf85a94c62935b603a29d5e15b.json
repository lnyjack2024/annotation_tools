{"ast":null,"code":"export let ReviewMode = /*#__PURE__*/function (ReviewMode) {\n  ReviewMode[\"LABELING\"] = \"labeling\";\n  ReviewMode[\"REVIEW\"] = \"review\";\n  return ReviewMode;\n}({});\nexport let TAG = /*#__PURE__*/function (TAG) {\n  TAG[\"INSERTION\"] = \"INSERTION\";\n  TAG[\"LABEL\"] = \"LABEL\";\n  TAG[\"CONNECTION\"] = \"CONNECTION\";\n  TAG[\"LABEL_QA\"] = \"LABEL_QA\";\n  return TAG;\n}({});\n;\nexport let ValidationType = /*#__PURE__*/function (ValidationType) {\n  ValidationType[\"SCRIPT\"] = \"script\";\n  return ValidationType;\n}({});\nexport let ReviewItemResult = /*#__PURE__*/function (ReviewItemResult) {\n  ReviewItemResult[\"REJECT\"] = \"reject\";\n  ReviewItemResult[\"PASS\"] = \"pass\";\n  ReviewItemResult[\"MISSING\"] = \"missing\";\n  return ReviewItemResult;\n}({});","map":{"version":3,"names":["ReviewMode","TAG","ValidationType","ReviewItemResult"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/editable-text/types.ts"],"sourcesContent":["import JobProxy from 'src/libs/JobProxy';\n\nexport enum ReviewMode {\n  LABELING = 'labeling',\n  REVIEW = 'review',\n}\n\nexport enum TAG {\n  INSERTION = 'INSERTION',\n  LABEL = 'LABEL',\n  CONNECTION = 'CONNECTION',\n  LABEL_QA = 'LABEL_QA',\n};\nexport type OntologyItemType = TAG.LABEL | TAG.LABEL_QA | TAG.CONNECTION | TAG.INSERTION;\n\nexport interface OntologyItem {\n  keys: string[];\n  children?: OntologyItem[];\n  text: string;\n  color?: string;\n  type: OntologyItemType;\n  displayName?: string;\n}\nexport interface Ontologies {\n  labels_qa?: OntologyItem[];\n  labels?: OntologyItem[];\n  insertions?: OntologyItem[];\n  connections?: OntologyItem[];\n}\nexport interface OntologyItemPayLoad {\n  children?: OntologyItemPayLoad[];\n  text: string;\n  color?: string;\n  type: OntologyItemType;\n  displayName?: string;\n}\n\nexport interface Payload {\n  locale?: string;\n  issue_types?: string;\n  skip_check_for_invalid_data?: string | boolean;\n  jobProxy: JobProxy;\n  content: string;\n  read_only?: string | boolean;\n  labels?: OntologyItemPayLoad[];\n  insertions?: OntologyItemPayLoad[];\n  connections?: OntologyItemPayLoad[];\n}\n\nexport interface Result {\n  id: string;\n  message: string;\n  info: {\n    tagName: string\n  };\n  blockSubmit?: boolean;\n  type: string;\n}\n\nexport enum ValidationType {\n  SCRIPT = 'script',\n}\n\nexport interface LabelItem {\n  end: number;\n  start: number\n  id: string;\n  isReview: boolean;\n  text: string;\n  type: OntologyItemType;\n  value: string;\n  keys?: string[];\n  dirty?: boolean;\n}\nexport interface InsertionItem {\n  at: number;\n  value: string;\n  id: string;\n  text: string;\n  isReview: boolean;\n  keys?: string[];\n  dirty?: boolean;\n  type: OntologyItemType;\n}\n\nexport interface ConnectionItem {\n  fromId: string;\n  toId: string;\n  fromType: OntologyItemType;\n  toType: OntologyItemType;\n  value: string;\n  id: string;\n  from?: string;\n  to?: string;\n  isReview: boolean;\n  keys?: string[];\n  dirty?: boolean;\n  type: OntologyItemType;\n}\n\nexport interface MissingItem {\n  end: number;\n  start: number\n  id: string;\n  isReview: boolean;\n  text: string;\n  type: OntologyItemType;\n  value: string;\n  keys?: string[];\n  dirty?: boolean;\n}\n\nexport interface ReviewResultItem extends ReviewDataItem {\n  id: string;\n  key?: string[];\n}\n\nexport interface ReviewResult {\n  data: { [key: string]: ReviewDataItem };\n  missing: MissingItem[];\n}\n\nexport enum ReviewItemResult {\n  REJECT = 'reject',\n  PASS = 'pass',\n  MISSING = 'missing',\n}\nexport type ReviewResultType = ReviewItemResult.REJECT | ReviewItemResult.PASS | ReviewItemResult.MISSING;\nexport interface ReviewDataItem {\n  comment: string;\n  result: ReviewResultType;\n  type: string[]\n}\n\nexport interface OntologyResult {\n  labels: LabelItem[];\n  insertions: InsertionItem[];\n  connections: ConnectionItem[]\n}\n\nexport interface OntologyConfigMap {\n  keys: string[];\n  childKeys: string[];\n  text: string;\n  color?: string;\n  type: OntologyItemType;\n  displayName?: string;\n  isChild: boolean;\n}\n\nexport interface OntologiesStatus {\n  isCollapse: boolean;\n  keys: string[];\n  tagCount: number;\n  tagCountContainChildren?: number;\n  rejectCount?: number;\n  rejectCountContainChildren?: number;\n  approveCount?: number;\n}\n\nexport interface Statistics {\n  summary: SummaryItem[];\n  totalCount: number;\n}\n\nexport interface SummaryItem {\n  count: number;\n  shape: string;\n  keys: string[];\n}\n\nexport interface ReviewStatistics {\n  objects: AuditStatItem & { missed: number };\n  summary: SummaryItem[];\n  elements: {\n    approved: {\n      [type: string]: number;\n    },\n    rejected: {\n      [type: string]: number;\n    }\n  };\n}\n\nexport type AuditStatItem = {\n  total: number;\n  approved: number;\n  actualApproved: number;\n  rejected: number;\n};\n\nexport type AuditStatistics = {\n  objects: AuditStatItem & { missed: number };\n  shapes: {\n    [shape: string]: AuditStatItem;\n  };\n};\n"],"mappings":"AAEA,WAAYA,UAAU,0BAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAA,OAAVA,UAAU;AAAA;AAKtB,WAAYC,GAAG,0BAAHA,GAAG;EAAHA,GAAG;EAAHA,GAAG;EAAHA,GAAG;EAAHA,GAAG;EAAA,OAAHA,GAAG;AAAA;AAKd;AA+CD,WAAYC,cAAc,0BAAdA,cAAc;EAAdA,cAAc;EAAA,OAAdA,cAAc;AAAA;AA+D1B,WAAYC,gBAAgB,0BAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAA,OAAhBA,gBAAgB;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}