{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/SegmentDetail/LineRoleRadio/LineRoleRadio.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport './LineRoleRadio.scss';\nimport { Radio } from 'antd';\nimport { setLineRole } from '../../../redux/action';\nimport { translate } from '../../../constants';\nimport { isAnnotationReadonly } from '../../../../../utils/tool-mode';\nconst LineRoleRadio = props => {\n  const allRoles = [];\n  const {\n    index,\n    role,\n    currentRoles,\n    annotateDisabled\n  } = props;\n  props.ontology.forEach((value, key) => {\n    allRoles.push({\n      class_name: key,\n      display_color: value\n    });\n  });\n  const handleRadioChange = e => {\n    props.setLineRole({\n      lineIndex: index,\n      role: e.target.value\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"line-role-radio-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, allRoles.length === 1 && allRoles[0].class_name === 'none' ? null : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"line-role-radio-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, `${translate('role')}${props.index + 1}${props.index === 0 ? `(${translate('primary')})` : ''}: `), /*#__PURE__*/React.createElement(Radio.Group, {\n    value: role,\n    buttonStyle: \"solid\",\n    className: \"line-role-radio-group\",\n    onChange: e => handleRadioChange(e),\n    disabled: isAnnotationReadonly(props.toolMode) || annotateDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, allRoles.map((value, index2) => /*#__PURE__*/React.createElement(Radio.Button, {\n    // eslint-disable-next-line react/no-array-index-key\n    key: `line-role-radio-button-${index2}`,\n    className: \"line-role-radio-button\",\n    value: value.class_name,\n    disabled: currentRoles.indexOf(value.class_name) >= 0 && role !== value.class_name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"line-role-radio-color\",\n    style: {\n      backgroundColor: value.display_color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }), value.class_name)))));\n};\nLineRoleRadio.propTypes = {\n  setLineRole: PropTypes.func\n};\nconst mapStateToProps = state => ({\n  ontology: state.ontology,\n  toolMode: state.toolMode,\n  annotateDisabled: state.annotateDisabled\n});\nconst mapDispatchToProps = {\n  setLineRole\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(LineRoleRadio);","map":{"version":3,"names":["React","PropTypes","connect","Radio","setLineRole","translate","isAnnotationReadonly","LineRoleRadio","props","allRoles","index","role","currentRoles","annotateDisabled","ontology","forEach","value","key","push","class_name","display_color","handleRadioChange","e","lineIndex","target","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","length","Fragment","Group","buttonStyle","onChange","disabled","toolMode","map","index2","Button","indexOf","style","backgroundColor","propTypes","func","mapStateToProps","state","mapDispatchToProps"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/SegmentDetail/LineRoleRadio/LineRoleRadio.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport './LineRoleRadio.scss';\nimport { Radio } from 'antd';\nimport { setLineRole } from '../../../redux/action';\nimport { translate } from '../../../constants';\nimport { isAnnotationReadonly } from '../../../../../utils/tool-mode';\n\nconst LineRoleRadio = (props) => {\n  const allRoles = [];\n  const { index, role, currentRoles, annotateDisabled } = props;\n  props.ontology.forEach((value, key) => {\n    allRoles.push({ class_name: key, display_color: value });\n  });\n  const handleRadioChange = (e) => {\n    props.setLineRole({\n      lineIndex: index,\n      role: e.target.value,\n    });\n  };\n  return (\n    <div className=\"line-role-radio-container\">\n      {allRoles.length === 1 && allRoles[0].class_name === 'none' ? null : (\n        <>\n          <div className=\"line-role-radio-title\">{`${translate('role')}${props.index + 1}${props.index === 0 ? `(${translate('primary')})` : ''}: `}</div>\n          <Radio.Group\n            value={role}\n            buttonStyle=\"solid\"\n            className=\"line-role-radio-group\"\n            onChange={(e) => handleRadioChange(e)}\n            disabled={isAnnotationReadonly(props.toolMode) || annotateDisabled}\n          >\n            {allRoles.map((value, index2) => (\n              <Radio.Button\n                // eslint-disable-next-line react/no-array-index-key\n                key={`line-role-radio-button-${index2}`}\n                className=\"line-role-radio-button\"\n                value={value.class_name}\n                disabled={currentRoles.indexOf(value.class_name) >= 0 && role !== value.class_name}\n              >\n                <div\n                  className=\"line-role-radio-color\"\n                  style={{ backgroundColor: value.display_color }}\n                />\n                {value.class_name}\n              </Radio.Button>\n            ))}\n          </Radio.Group>\n        </>\n      )}\n    </div>\n  );\n};\n\nLineRoleRadio.propTypes = {\n  setLineRole: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => ({\n  ontology: state.ontology,\n  toolMode: state.toolMode,\n  annotateDisabled: state.annotateDisabled,\n});\nconst mapDispatchToProps = {\n  setLineRole,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(LineRoleRadio);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}