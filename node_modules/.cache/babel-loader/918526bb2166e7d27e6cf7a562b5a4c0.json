{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/SegmentDetail/QACommentInput/QACommentInput.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './QACommentInput.scss';\nimport { Input } from 'antd';\nimport { translate } from '../../../constants';\nimport { setSegmentQAComment } from '../../../redux/action';\nconst QACommentInput = props => {\n  const {\n    results,\n    currentVideo,\n    currentSegment\n  } = props;\n  const segment = results[currentVideo][currentSegment];\n  const handleInputChange = e => {\n    props.setSegmentQAComment({\n      qaComment: e.target.value\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"qa-comment-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"qa-comment-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, `${translate('comment')}:`), /*#__PURE__*/React.createElement(Input.TextArea, {\n    className: \"qa-comment-text\",\n    value: segment.qaComment,\n    autoSize: {\n      minRows: 6\n    },\n    onChange: e => handleInputChange(e),\n    onFocus: () => {\n      window.disableLongAudioHotKeys = true;\n    },\n    onBlur: () => {\n      window.disableLongAudioHotKeys = false;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }));\n};\nQACommentInput.propTypes = {};\nconst mapStateToProps = state => ({\n  results: state.results,\n  currentVideo: state.currentVideo,\n  currentSegment: state.currentSegment\n});\nconst mapDispatchToProps = {\n  setSegmentQAComment\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(QACommentInput);","map":{"version":3,"names":["React","connect","Input","translate","setSegmentQAComment","QACommentInput","props","results","currentVideo","currentSegment","segment","handleInputChange","e","qaComment","target","value","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","TextArea","autoSize","minRows","onChange","onFocus","window","disableLongAudioHotKeys","onBlur","propTypes","mapStateToProps","state","mapDispatchToProps"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/SegmentDetail/QACommentInput/QACommentInput.js"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport './QACommentInput.scss';\nimport { Input } from 'antd';\nimport { translate } from '../../../constants';\nimport { setSegmentQAComment } from '../../../redux/action';\n\nconst QACommentInput = (props) => {\n  const { results, currentVideo, currentSegment } = props;\n  const segment = results[currentVideo][currentSegment];\n  const handleInputChange = (e) => {\n    props.setSegmentQAComment({ qaComment: e.target.value });\n  };\n  return (\n    <div className=\"qa-comment-container\">\n      <div className=\"qa-comment-title\">{`${translate('comment')}:`}</div>\n      <Input.TextArea\n        className=\"qa-comment-text\"\n        value={segment.qaComment}\n        autoSize={{ minRows: 6 }}\n        onChange={(e) => handleInputChange(e)}\n        onFocus={() => { window.disableLongAudioHotKeys = true; }}\n        onBlur={() => { window.disableLongAudioHotKeys = false; }}\n      />\n    </div>\n  );\n};\n\nQACommentInput.propTypes = {\n};\n\nconst mapStateToProps = (state) => ({\n  results: state.results,\n  currentVideo: state.currentVideo,\n  currentSegment: state.currentSegment,\n});\nconst mapDispatchToProps = {\n  setSegmentQAComment\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(QACommentInput);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAO,uBAAuB;AAC9B,SAASC,KAAK,QAAQ,MAAM;AAC5B,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,mBAAmB,QAAQ,uBAAuB;AAE3D,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAChC,MAAM;IAAEC,OAAO;IAAEC,YAAY;IAAEC;EAAe,CAAC,GAAGH,KAAK;EACvD,MAAMI,OAAO,GAAGH,OAAO,CAACC,YAAY,CAAC,CAACC,cAAc,CAAC;EACrD,MAAME,iBAAiB,GAAIC,CAAC,IAAK;IAC/BN,KAAK,CAACF,mBAAmB,CAAC;MAAES,SAAS,EAAED,CAAC,CAACE,MAAM,CAACC;IAAM,CAAC,CAAC;EAC1D,CAAC;EACD,oBACEf,KAAA,CAAAgB,aAAA;IAAKC,SAAS,EAAC,sBAAsB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACnCvB,KAAA,CAAAgB,aAAA;IAAKC,SAAS,EAAC,kBAAkB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAE,GAAGpB,SAAS,CAAC,SAAS,CAAC,GAAS,CAAC,eACpEH,KAAA,CAAAgB,aAAA,CAACd,KAAK,CAACsB,QAAQ;IACbP,SAAS,EAAC,iBAAiB;IAC3BF,KAAK,EAAEL,OAAO,CAACG,SAAU;IACzBY,QAAQ,EAAE;MAAEC,OAAO,EAAE;IAAE,CAAE;IACzBC,QAAQ,EAAGf,CAAC,IAAKD,iBAAiB,CAACC,CAAC,CAAE;IACtCgB,OAAO,EAAEA,CAAA,KAAM;MAAEC,MAAM,CAACC,uBAAuB,GAAG,IAAI;IAAE,CAAE;IAC1DC,MAAM,EAAEA,CAAA,KAAM;MAAEF,MAAM,CAACC,uBAAuB,GAAG,KAAK;IAAE,CAAE;IAAAZ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC3D,CACE,CAAC;AAEV,CAAC;AAEDlB,cAAc,CAAC2B,SAAS,GAAG,CAC3B,CAAC;AAED,MAAMC,eAAe,GAAIC,KAAK,KAAM;EAClC3B,OAAO,EAAE2B,KAAK,CAAC3B,OAAO;EACtBC,YAAY,EAAE0B,KAAK,CAAC1B,YAAY;EAChCC,cAAc,EAAEyB,KAAK,CAACzB;AACxB,CAAC,CAAC;AACF,MAAM0B,kBAAkB,GAAG;EACzB/B;AACF,CAAC;AACD,eAAeH,OAAO,CAACgC,eAAe,EAAEE,kBAAkB,CAAC,CAAC9B,cAAc,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}