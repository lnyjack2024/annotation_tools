{"ast":null,"code":"import { observable, action, makeObservable } from 'mobx';\nimport screenfull from 'screenfull';\nclass SettingStore {\n  constructor(rootStore) {\n    this.rootStore = void 0;\n    this.zoom = 1;\n    this.loading = true;\n    this.isFullScreen = false;\n    this.isSolo = false;\n    this.customCheck = [];\n    this.submitCheck = false;\n    this.screenfull = screenfull;\n    makeObservable(this, {\n      isFullScreen: observable,\n      submitCheck: observable,\n      zoom: observable,\n      loading: observable,\n      isSolo: observable,\n      setFullScreen: action,\n      init: action,\n      setZoom: action,\n      setLoading: action,\n      setIsSolo: action\n    });\n    this.rootStore = rootStore;\n  }\n  setFullScreen(full) {\n    this.isFullScreen = full;\n  }\n\n  /**\n   * init by payload\n   * @param payload\n   */\n  init(payload) {\n    // parse validator\n    if (typeof payload.custom_check === 'string') {\n      const scriptIds = payload.custom_check.split(',').map(i => i.trim()).filter(i => !!i);\n      if (scriptIds.length > 0) {\n        this.customCheck = scriptIds;\n      }\n    }\n    // parse submit check config\n    this.submitCheck = payload.submit_check === 'true' || payload.submit_check === true;\n  }\n\n  /**\n   * set zoom\n   */\n  setZoom(newZoom) {\n    let zoom = newZoom;\n    if (zoom < 1) {\n      zoom = 1;\n    }\n    this.zoom = zoom;\n  }\n\n  /**\n   * set loading\n   */\n  setLoading(loading) {\n    this.loading = loading;\n  }\n\n  /**\n   * set solo\n   */\n  setIsSolo(solo) {\n    this.isSolo = solo;\n  }\n}\nexport default SettingStore;","map":{"version":3,"names":["observable","action","makeObservable","screenfull","SettingStore","constructor","rootStore","zoom","loading","isFullScreen","isSolo","customCheck","submitCheck","setFullScreen","init","setZoom","setLoading","setIsSolo","full","payload","custom_check","scriptIds","split","map","i","trim","filter","length","submit_check","newZoom","solo"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/multi-channel/store/SettingsStore.ts"],"sourcesContent":["import { observable, action, makeObservable } from 'mobx';\nimport screenfull from 'screenfull';\nimport { RootStoreType } from './RootStore';\n\nclass SettingStore {\n  rootStore: RootStoreType;\n\n  zoom = 1;\n\n  loading = true;\n\n  isFullScreen = false;\n\n  isSolo = false;\n\n  customCheck: string[] = [];\n\n  submitCheck = false;\n\n  screenfull = screenfull;\n\n  constructor(rootStore: RootStoreType) {\n    makeObservable(this, {\n      isFullScreen: observable,\n      submitCheck: observable,\n      zoom: observable,\n      loading: observable,\n      isSolo: observable,\n      setFullScreen: action,\n      init: action,\n      setZoom: action,\n      setLoading: action,\n      setIsSolo: action,\n    });\n    this.rootStore = rootStore;\n  }\n\n  setFullScreen(full: boolean) {\n    this.isFullScreen = full;\n  }\n\n  /**\n   * init by payload\n   * @param payload\n   */\n  init(payload: {[key: string]: any}) {\n    // parse validator\n    if (typeof payload.custom_check === 'string') {\n      const scriptIds = payload.custom_check.split(',').map((i) => i.trim()).filter((i) => !!i);\n      if (scriptIds.length > 0) {\n        this.customCheck = scriptIds;\n      }\n    }\n    // parse submit check config\n    this.submitCheck = payload.submit_check === 'true' || payload.submit_check === true;\n  }\n\n  /**\n   * set zoom\n   */\n  setZoom(newZoom:number) {\n    let zoom = newZoom;\n    if (zoom < 1) {\n      zoom = 1;\n    }\n    this.zoom = zoom;\n  }\n\n  /**\n   * set loading\n   */\n  setLoading(loading: boolean) {\n    this.loading = loading;\n  }\n\n  /**\n   * set solo\n   */\n  setIsSolo(solo: boolean) {\n    this.isSolo = solo;\n  }\n}\n\nexport default SettingStore;\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,MAAM,EAAEC,cAAc,QAAQ,MAAM;AACzD,OAAOC,UAAU,MAAM,YAAY;AAGnC,MAAMC,YAAY,CAAC;EAiBjBC,WAAWA,CAACC,SAAwB,EAAE;IAAA,KAhBtCA,SAAS;IAAA,KAETC,IAAI,GAAG,CAAC;IAAA,KAERC,OAAO,GAAG,IAAI;IAAA,KAEdC,YAAY,GAAG,KAAK;IAAA,KAEpBC,MAAM,GAAG,KAAK;IAAA,KAEdC,WAAW,GAAa,EAAE;IAAA,KAE1BC,WAAW,GAAG,KAAK;IAAA,KAEnBT,UAAU,GAAGA,UAAU;IAGrBD,cAAc,CAAC,IAAI,EAAE;MACnBO,YAAY,EAAET,UAAU;MACxBY,WAAW,EAAEZ,UAAU;MACvBO,IAAI,EAAEP,UAAU;MAChBQ,OAAO,EAAER,UAAU;MACnBU,MAAM,EAAEV,UAAU;MAClBa,aAAa,EAAEZ,MAAM;MACrBa,IAAI,EAAEb,MAAM;MACZc,OAAO,EAAEd,MAAM;MACfe,UAAU,EAAEf,MAAM;MAClBgB,SAAS,EAAEhB;IACb,CAAC,CAAC;IACF,IAAI,CAACK,SAAS,GAAGA,SAAS;EAC5B;EAEAO,aAAaA,CAACK,IAAa,EAAE;IAC3B,IAAI,CAACT,YAAY,GAAGS,IAAI;EAC1B;;EAEA;AACF;AACA;AACA;EACEJ,IAAIA,CAACK,OAA6B,EAAE;IAClC;IACA,IAAI,OAAOA,OAAO,CAACC,YAAY,KAAK,QAAQ,EAAE;MAC5C,MAAMC,SAAS,GAAGF,OAAO,CAACC,YAAY,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,MAAM,CAAEF,CAAC,IAAK,CAAC,CAACA,CAAC,CAAC;MACzF,IAAIH,SAAS,CAACM,MAAM,GAAG,CAAC,EAAE;QACxB,IAAI,CAAChB,WAAW,GAAGU,SAAS;MAC9B;IACF;IACA;IACA,IAAI,CAACT,WAAW,GAAGO,OAAO,CAACS,YAAY,KAAK,MAAM,IAAIT,OAAO,CAACS,YAAY,KAAK,IAAI;EACrF;;EAEA;AACF;AACA;EACEb,OAAOA,CAACc,OAAc,EAAE;IACtB,IAAItB,IAAI,GAAGsB,OAAO;IAClB,IAAItB,IAAI,GAAG,CAAC,EAAE;MACZA,IAAI,GAAG,CAAC;IACV;IACA,IAAI,CAACA,IAAI,GAAGA,IAAI;EAClB;;EAEA;AACF;AACA;EACES,UAAUA,CAACR,OAAgB,EAAE;IAC3B,IAAI,CAACA,OAAO,GAAGA,OAAO;EACxB;;EAEA;AACF;AACA;EACES,SAASA,CAACa,IAAa,EAAE;IACvB,IAAI,CAACpB,MAAM,GAAGoB,IAAI;EACpB;AACF;AAEA,eAAe1B,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module"}