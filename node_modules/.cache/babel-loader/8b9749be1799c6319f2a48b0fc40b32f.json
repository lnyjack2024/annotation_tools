{"ast":null,"code":"import _initializerDefineProperty from \"/Users/qzheng/Documents/webroot/annotation_tools/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/qzheng/Documents/webroot/annotation_tools/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/qzheng/Documents/webroot/annotation_tools/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\nvar _class,\n  _class2,\n  _descriptor,\n  _descriptor2,\n  _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking/components/Validator.tsx\";\nimport React from 'react';\nimport { observable, toJS, makeObservable } from 'mobx';\nimport { observer } from 'mobx-react';\nimport CommonValidator from '../../common/validator/Validator';\nimport i18n from '../locales';\nimport { ValidationType } from '../types';\nimport { validate } from '../utils';\nimport { isAnnotationReadonly } from '../../../utils/tool-mode';\nimport SettingsStore from '../store/SettingsStore';\nimport './Validator.scss';\nlet Validator = observer(_class = (_class2 = class Validator extends React.Component {\n  constructor(props) {\n    super(props);\n    _initializerDefineProperty(this, \"warnings\", _descriptor, this);\n    _initializerDefineProperty(this, \"hasCustomError\", _descriptor2, this);\n    this.handleSync = async () => {\n      let resultLink = '';\n      if (SettingsStore.validationConfig[ValidationType.CUSTOM]) {\n        if (typeof this.props.jobProxy.reviewFrom === 'string') {\n          resultLink = this.props.jobProxy.reviewFrom;\n        }\n        if (!isAnnotationReadonly(this.props.jobProxy.toolMode)) {\n          try {\n            resultLink = await this.props.saveResult();\n          } catch (e) {\n            resultLink = '';\n          }\n        }\n      }\n      const [result] = await Promise.all([validate(SettingsStore.validationConfig, {\n        instances: this.props.instances,\n        resultLink\n      }), new Promise(resolve => {\n        setTimeout(resolve, 300);\n      })]);\n      if (result) {\n        const {\n          results,\n          hasCustomError\n        } = result;\n        this.warnings = results;\n        this.hasCustomError = hasCustomError;\n      }\n      return {\n        hasCustomError: this.hasCustomError,\n        blockSubmitErrors: toJS(this.warnings).filter(warning => warning.type === ValidationType.CUSTOM && warning.blockSubmit === true)\n      };\n    };\n    this.handleAction = warning => {\n      const {\n        setFrame,\n        selectInstance\n      } = this.props;\n      const {\n        id,\n        frames\n      } = warning;\n      setFrame(frames[0]);\n      selectInstance(id);\n    };\n    makeObservable(this);\n  }\n  getCategoryByInstanceId(id) {\n    const {\n      categoryInstancesMap\n    } = this.props;\n    return Object.keys(categoryInstancesMap).find(c => categoryInstancesMap[c][id] !== undefined);\n  }\n  renderWarningTitle(warning) {\n    var _getCategory;\n    const {\n      categoryInstancesMap,\n      getCategory\n    } = this.props;\n    const {\n      id\n    } = warning;\n    const category = this.getCategoryByInstanceId(id);\n    if (!category) {\n      return i18n.translate('VALIDATION_NO_INSTANCE');\n    }\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cat-color-dot\",\n      style: {\n        backgroundColor: (_getCategory = getCategory(category)) === null || _getCategory === void 0 ? void 0 : _getCategory.display_color\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }), `${category} ${categoryInstancesMap[category][id]}`);\n  }\n  render() {\n    const ValidationTypeTitle = {\n      [ValidationType.ATTR_EMPTY]: i18n.translate('VALIDATION_TYPE_ATTR_EMPTY'),\n      [ValidationType.CUSTOM]: i18n.translate('VALIDATION_TYPE_CUSTOM')\n    };\n    return /*#__PURE__*/React.createElement(CommonValidator, {\n      validationTypes: ValidationTypeTitle,\n      warnings: toJS(this.warnings),\n      errors: {\n        [ValidationType.CUSTOM]: this.hasCustomError ? i18n.translate('VALIDATION_CUSTOM_ERROR') : ''\n      },\n      titleFormatter: count => i18n.translate('VALIDATION_TITLE', {\n        values: {\n          count\n        }\n      }),\n      checkingMsgFormatter: () => i18n.translate('COMMON_CHECKING'),\n      onValidate: this.handleSync,\n      renderWarningTitle: warning => this.renderWarningTitle(warning),\n      showWarningAction: warning => !!this.getCategoryByInstanceId(warning.id),\n      onWarningAction: warning => this.handleAction(warning),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }\n    });\n  }\n}, _descriptor = _applyDecoratedDescriptor(_class2.prototype, \"warnings\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"hasCustomError\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _class2)) || _class;\nexport default Validator;","map":{"version":3,"names":["React","observable","toJS","makeObservable","observer","CommonValidator","i18n","ValidationType","validate","isAnnotationReadonly","SettingsStore","Validator","_class","_class2","Component","constructor","props","_initializerDefineProperty","_descriptor","_descriptor2","handleSync","resultLink","validationConfig","CUSTOM","jobProxy","reviewFrom","toolMode","saveResult","e","result","Promise","all","instances","resolve","setTimeout","results","hasCustomError","warnings","blockSubmitErrors","filter","warning","type","blockSubmit","handleAction","setFrame","selectInstance","id","frames","getCategoryByInstanceId","categoryInstancesMap","Object","keys","find","c","undefined","renderWarningTitle","_getCategory","getCategory","category","translate","createElement","Fragment","className","style","backgroundColor","display_color","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","render","ValidationTypeTitle","ATTR_EMPTY","validationTypes","errors","titleFormatter","count","values","checkingMsgFormatter","onValidate","showWarningAction","onWarningAction","_applyDecoratedDescriptor","prototype","configurable","enumerable","writable","initializer"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking/components/Validator.tsx"],"sourcesContent":["import React from 'react';\nimport { observable, toJS, makeObservable } from 'mobx';\nimport { observer } from 'mobx-react';\nimport CommonValidator from '../../common/validator/Validator';\nimport i18n from '../locales';\nimport { Ontology, Instance, ValidationResult, ValidationType, CategoryInstancesMap } from '../types';\nimport { validate } from '../utils';\nimport { isAnnotationReadonly } from '../../../utils/tool-mode';\nimport JobProxy from '../../../libs/JobProxy';\nimport SettingsStore from '../store/SettingsStore';\nimport './Validator.scss';\n\ninterface ValidatorProps {\n  categoryInstancesMap: CategoryInstancesMap;\n  instances: {[instanceId: string]: Instance};\n  jobProxy: JobProxy;\n  getCategory: (categoryName: string) => Ontology | undefined;\n  setFrame: (frame: number) => void;\n  selectInstance: (instanceId: string, isManual?: boolean) => void;\n  saveResult: () => Promise<string>;\n}\n\n@observer\nclass Validator extends React.Component<ValidatorProps> {\n  @observable warnings: ValidationResult[] = [];\n\n  @observable hasCustomError = false;\n\n  constructor(props: ValidatorProps) {\n    super(props);\n    makeObservable(this);\n  }\n\n  getCategoryByInstanceId(id: string) {\n    const { categoryInstancesMap } = this.props;\n    return Object.keys(categoryInstancesMap).find((c) => categoryInstancesMap[c][id] !== undefined);\n  }\n\n  handleSync = async () => {\n    let resultLink = '';\n    if (SettingsStore.validationConfig[ValidationType.CUSTOM]) {\n      if (typeof this.props.jobProxy.reviewFrom === 'string') {\n        resultLink = this.props.jobProxy.reviewFrom;\n      }\n      if (!isAnnotationReadonly(this.props.jobProxy.toolMode)) {\n        try {\n          resultLink = await this.props.saveResult();\n        } catch (e) {\n          resultLink = '';\n        }\n      }\n    }\n\n    const [result] = await Promise.all([\n      validate(SettingsStore.validationConfig, {\n        instances: this.props.instances,\n        resultLink,\n      }),\n      new Promise((resolve) => {\n        setTimeout(resolve, 300);\n      }),\n    ]);\n    if (result) {\n      const { results, hasCustomError } = result as {results: ValidationResult[]; hasCustomError: boolean};\n      this.warnings = results;\n      this.hasCustomError = hasCustomError;\n    }\n\n    return {\n      hasCustomError: this.hasCustomError,\n      blockSubmitErrors: toJS(this.warnings).filter((warning) => warning.type === ValidationType.CUSTOM && warning.blockSubmit === true),\n    };\n  };\n\n  handleAction = (warning: ValidationResult) => {\n    const { setFrame, selectInstance } = this.props;\n    const { id, frames } = warning;\n    setFrame(frames[0]);\n    selectInstance(id);\n  };\n\n  renderWarningTitle(warning: ValidationResult) {\n    const { categoryInstancesMap, getCategory } = this.props;\n    const { id } = warning;\n    const category = this.getCategoryByInstanceId(id);\n    if (!category) {\n      return i18n.translate('VALIDATION_NO_INSTANCE');\n    }\n    return (\n      <>\n        <div\n          className=\"cat-color-dot\"\n          style={{ backgroundColor: getCategory(category)?.display_color }}\n        />\n        {`${category} ${categoryInstancesMap[category][id]}`}\n      </>\n    );\n  }\n\n  render() {\n    const ValidationTypeTitle = {\n      [ValidationType.ATTR_EMPTY]: i18n.translate('VALIDATION_TYPE_ATTR_EMPTY'),\n      [ValidationType.CUSTOM]: i18n.translate('VALIDATION_TYPE_CUSTOM'),\n    };\n    return (\n      <CommonValidator\n        validationTypes={ValidationTypeTitle}\n        warnings={toJS(this.warnings)}\n        errors={{\n          [ValidationType.CUSTOM]: this.hasCustomError ? i18n.translate('VALIDATION_CUSTOM_ERROR') : '',\n        }}\n        titleFormatter={(count) => i18n.translate('VALIDATION_TITLE', { values: { count } })}\n        checkingMsgFormatter={() => i18n.translate('COMMON_CHECKING')}\n        onValidate={this.handleSync}\n        renderWarningTitle={(warning) => this.renderWarningTitle(warning as ValidationResult)}\n        showWarningAction={(warning) => !!this.getCategoryByInstanceId(warning.id)}\n        onWarningAction={(warning) => this.handleAction(warning as ValidationResult)}\n      />\n    );\n  }\n}\n\nexport default Validator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}