{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking/components/LabelViewer.tsx\";\nimport React from 'react';\nimport cx from 'classnames';\nimport { utils } from '@appen/easy-form';\nimport { FieldControlType } from '@appen/easy-form/es/types';\nimport SettingsStore from '../store/SettingsStore';\nimport i18n from '../locales';\nimport { LabelFormat, LabelItem, LabelStyle, AttributesMode } from '../types';\nimport { getToolTypeFromFrameData } from '../utils';\nimport './LabelViewer.scss';\nexport default class LabelViewer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.container = React.createRef();\n    this.state = {\n      x: -1,\n      y: -1\n    };\n    this.updateMousePosition = e => {\n      const {\n        clientX,\n        clientY\n      } = e;\n      this.setState({\n        x: clientX,\n        y: clientY\n      });\n    };\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.hoveredShapeId !== this.props.hoveredShapeId || nextProps.selectedInstanceId !== this.props.selectedInstanceId || nextProps.hideOthers !== this.props.hideOthers || SettingsStore.activeAttributesMode === AttributesMode.HOVER && (nextState.x !== this.state.x || nextState.y !== this.state.y);\n  }\n  componentDidMount() {\n    window.addEventListener('mousemove', this.updateMousePosition);\n  }\n  componentWillUnmount() {\n    window.removeEventListener('mousemove', this.updateMousePosition);\n  }\n  renderLabelTitle(instance) {\n    const {\n      labelItems\n    } = SettingsStore;\n    const labels = [];\n    if (labelItems.includes(LabelItem.CATEGORY)) {\n      labels.push(instance.category);\n    }\n    if (labelItems.includes(LabelItem.NUMBER)) {\n      labels.push(`${instance.number}`);\n    }\n    if (labelItems.includes(LabelItem.TOOL_NAME)) {\n      const shapeData = instance.frames[this.props.currentFrame];\n      labels.push(`${getToolTypeFromFrameData(shapeData)}`);\n    }\n    return labels.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"label-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, labels.join(' '));\n  }\n  renderLabelAttributes(instance) {\n    const labels = [];\n    const {\n      labelConfig,\n      labelItems\n    } = SettingsStore;\n    const {\n      fields = []\n    } = labelConfig || {};\n    const {\n      attributes = {},\n      isOCR,\n      OCRText\n    } = instance.frames[this.props.currentFrame];\n    if (isOCR) {\n      const label = [];\n      if (labelItems.includes(LabelItem.ATTRIBUTE_KEYS)) {\n        label.push(i18n.translate('OCR_TEXT_LABEL'));\n      }\n      if (labelItems.includes(LabelItem.ATTRIBUTE_VALUES)) {\n        label.push(OCRText || '');\n      }\n      if (label.length > 0) {\n        labels.push(label);\n      }\n    }\n    Object.keys(attributes).forEach(attr => {\n      const attrField = fields.find(f => f.name === attr);\n      const label = [];\n      if (labelItems.includes(LabelItem.ATTRIBUTE_KEYS)) {\n        label.push(attrField && attrField.label ? attrField.label : attr);\n      }\n      if (labelItems.includes(LabelItem.ATTRIBUTE_VALUES)) {\n        let displayValue = '';\n        if (attributes[attr] !== undefined && attributes[attr] !== null) {\n          displayValue = attributes[attr].toString();\n          if (attrField && [FieldControlType.RADIO, FieldControlType.SELECT, FieldControlType.CHECKBOX].includes(attrField.type)) {\n            const parsedOptions = utils.parseOptions(attrField.options || [], attrField.valueType);\n            const getOptionLabel = v => {\n              const option = parsedOptions.find(o => o.value === v);\n              return option && option.label ? option.label : (v || '').toString();\n            };\n            displayValue = Array.isArray(attributes[attr]) ? attributes[attr].map(getOptionLabel).toString() : getOptionLabel(attributes[attr]);\n          }\n        }\n        label.push(displayValue);\n      }\n      if (label.length > 0) {\n        labels.push(label);\n      }\n    });\n    return labels.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"label-attributes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }\n    }, labels.map(l => /*#__PURE__*/React.createElement(\"div\", {\n      key: l[0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }, l.join(': '))));\n  }\n  renderLabelByShape(shape, useMousePosition = false) {\n    const {\n      labelStyle,\n      labelFormat\n    } = SettingsStore;\n    const {\n      shapeInstanceMap,\n      instances,\n      selectedInstanceId,\n      hideOthers\n    } = this.props;\n    const instanceId = shapeInstanceMap[shape.uid];\n    if (hideOthers && !!selectedInstanceId && instanceId !== selectedInstanceId) {\n      return null;\n    }\n    const instance = instances[instanceId];\n    const {\n      width,\n      height,\n      left,\n      top\n    } = this.container.current.getBoundingClientRect();\n    let x;\n    let y;\n    if (useMousePosition) {\n      x = this.state.x - left + 10;\n      y = this.state.y - top + 10;\n    } else {\n      const p = shape.getGlobalPosition();\n      x = p.x;\n      y = p.y;\n    }\n    if (x < 0 || x > width || y < 0 || y > height) {\n      return null;\n    }\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: shape.uid,\n      className: cx('label-item', {\n        centered: !useMousePosition,\n        transparent: labelStyle === LabelStyle.TRANSPARENT,\n        compressed: labelFormat === LabelFormat.COMPRESSED\n      }),\n      style: {\n        left: x,\n        top: y\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 7\n      }\n    }, this.renderLabelTitle(instance), this.renderLabelAttributes(instance));\n  }\n  render() {\n    const {\n      shapes,\n      hoveredShapeId\n    } = this.props;\n    const hoveredShape = shapes.find(shape => shape.uid === hoveredShapeId);\n    return SettingsStore.labelItems.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.container,\n      className: \"label-viewer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 7\n      }\n    }, SettingsStore.activeAttributesMode === AttributesMode.ALWAYS && shapes.map(shape => this.renderLabelByShape(shape)), SettingsStore.activeAttributesMode === AttributesMode.HOVER && hoveredShape && this.renderLabelByShape(hoveredShape, true));\n  }\n}\n;","map":{"version":3,"names":["React","cx","utils","FieldControlType","SettingsStore","i18n","LabelFormat","LabelItem","LabelStyle","AttributesMode","getToolTypeFromFrameData","LabelViewer","Component","constructor","args","container","createRef","state","x","y","updateMousePosition","e","clientX","clientY","setState","shouldComponentUpdate","nextProps","nextState","hoveredShapeId","props","selectedInstanceId","hideOthers","activeAttributesMode","HOVER","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","renderLabelTitle","instance","labelItems","labels","includes","CATEGORY","push","category","NUMBER","number","TOOL_NAME","shapeData","frames","currentFrame","length","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","join","renderLabelAttributes","labelConfig","fields","attributes","isOCR","OCRText","label","ATTRIBUTE_KEYS","translate","ATTRIBUTE_VALUES","Object","keys","forEach","attr","attrField","find","f","name","displayValue","undefined","toString","RADIO","SELECT","CHECKBOX","type","parsedOptions","parseOptions","options","valueType","getOptionLabel","v","option","o","value","Array","isArray","map","l","key","renderLabelByShape","shape","useMousePosition","labelStyle","labelFormat","shapeInstanceMap","instances","instanceId","uid","width","height","left","top","current","getBoundingClientRect","p","getGlobalPosition","centered","transparent","TRANSPARENT","compressed","COMPRESSED","style","render","shapes","hoveredShape","ref","ALWAYS"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking/components/LabelViewer.tsx"],"sourcesContent":["import React from 'react';\nimport cx from 'classnames';\nimport { utils } from '@appen/easy-form';\nimport { FieldControlType, FieldValue } from '@appen/easy-form/es/types';\nimport { ShapeData } from '../../common/shapes/types';\nimport Shape from '../../common/shapes/Shape';\nimport SettingsStore from '../store/SettingsStore';\nimport i18n from '../locales';\nimport { Instance, LabelFormat, LabelItem, LabelStyle, AttributesMode } from '../types';\nimport { getToolTypeFromFrameData } from '../utils';\nimport './LabelViewer.scss';\n\ninterface LabelViewerProps {\n  shapes: Shape<ShapeData>[];\n  shapeInstanceMap: {[shapeId: string]: string};\n  instances: {[instanceId: string]: Instance};\n  selectedInstanceId: string;\n  currentFrame: number;\n  hoveredShapeId: string;\n  hideOthers: boolean;\n}\n\ninterface LabelViewerState {\n  x: number;\n  y: number;\n}\n\nexport default class LabelViewer extends React.Component<LabelViewerProps, LabelViewerState> {\n  container = React.createRef<HTMLDivElement>();\n\n  state = {\n    x: -1,\n    y: -1,\n  };\n\n  shouldComponentUpdate(nextProps: LabelViewerProps, nextState: LabelViewerState) {\n    return (\n      nextProps.hoveredShapeId !== this.props.hoveredShapeId ||\n      nextProps.selectedInstanceId !== this.props.selectedInstanceId ||\n      nextProps.hideOthers !== this.props.hideOthers ||\n      (SettingsStore.activeAttributesMode === AttributesMode.HOVER && (\n        nextState.x !== this.state.x ||\n        nextState.y !== this.state.y\n      ))\n    );\n  }\n\n  componentDidMount() {\n    window.addEventListener('mousemove', this.updateMousePosition);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('mousemove', this.updateMousePosition);\n  }\n\n  updateMousePosition = (e: MouseEvent) => {\n    const { clientX, clientY } = e;\n    this.setState({\n      x: clientX,\n      y: clientY,\n    });\n  };\n\n  renderLabelTitle(instance: Instance) {\n    const { labelItems } = SettingsStore;\n    const labels = [];\n    if (labelItems.includes(LabelItem.CATEGORY)) {\n      labels.push(instance.category);\n    }\n    if (labelItems.includes(LabelItem.NUMBER)) {\n      labels.push(`${instance.number}`);\n    }\n    if (labelItems.includes(LabelItem.TOOL_NAME)) {\n      const shapeData = instance.frames[this.props.currentFrame];\n      labels.push(`${getToolTypeFromFrameData(shapeData)}`);\n    }\n    return labels.length > 0 && (\n      <div className=\"label-title\">{labels.join(' ')}</div>\n    );\n  }\n\n  renderLabelAttributes(instance: Instance) {\n    const labels: string[][] = [];\n    const { labelConfig, labelItems } = SettingsStore;\n    const { fields = [] } = labelConfig || {};\n    const { attributes = {}, isOCR, OCRText } = instance.frames[this.props.currentFrame];\n\n    if (isOCR) {\n      const label = [];\n      if (labelItems.includes(LabelItem.ATTRIBUTE_KEYS)) {\n        label.push(i18n.translate('OCR_TEXT_LABEL'));\n      }\n      if (labelItems.includes(LabelItem.ATTRIBUTE_VALUES)) {\n        label.push(OCRText || '');\n      }\n      if (label.length > 0) {\n        labels.push(label);\n      }\n    }\n\n    Object.keys(attributes).forEach((attr) => {\n      const attrField = fields.find((f) => f.name === attr);\n      const label = [];\n\n      if (labelItems.includes(LabelItem.ATTRIBUTE_KEYS)) {\n        label.push((attrField && attrField.label) ? attrField.label : attr);\n      }\n\n      if (labelItems.includes(LabelItem.ATTRIBUTE_VALUES)) {\n        let displayValue = '';\n        if (attributes[attr] !== undefined && attributes[attr] !== null) {\n          displayValue = attributes[attr].toString();\n          if (attrField && [FieldControlType.RADIO, FieldControlType.SELECT, FieldControlType.CHECKBOX].includes(attrField.type)) {\n            const parsedOptions = utils.parseOptions(attrField.options || [], attrField.valueType);\n            const getOptionLabel = (v: FieldValue) => {\n              const option = parsedOptions.find((o) => o.value === v);\n              return (option && option.label) ? option.label : (v || '').toString();\n            };\n            displayValue = Array.isArray(attributes[attr])\n              ? attributes[attr].map(getOptionLabel).toString()\n              : getOptionLabel(attributes[attr]);\n          }\n        }\n        label.push(displayValue);\n      }\n\n      if (label.length > 0) {\n        labels.push(label);\n      }\n    });\n\n    return labels.length > 0 && (\n      <div className=\"label-attributes\">\n        {labels.map((l) => (\n          <div key={l[0]}>{l.join(': ')}</div>\n        ))}\n      </div>\n    );\n  }\n\n  renderLabelByShape(shape: Shape<ShapeData>, useMousePosition = false) {\n    const { labelStyle, labelFormat } = SettingsStore;\n    const { shapeInstanceMap, instances, selectedInstanceId, hideOthers } = this.props;\n    const instanceId = shapeInstanceMap[shape.uid];\n\n    if (hideOthers && !!selectedInstanceId && instanceId !== selectedInstanceId) {\n      return null;\n    }\n\n    const instance = instances[instanceId];\n\n    const { width, height, left, top } = this.container.current!.getBoundingClientRect();\n    let x: number;\n    let y: number;\n    if (useMousePosition) {\n      x = this.state.x - left + 10;\n      y = this.state.y - top + 10;\n    } else {\n      const p = shape.getGlobalPosition();\n      x = p.x;\n      y = p.y;\n    }\n\n    if (x < 0 || x > width || y < 0 || y > height) {\n      return null;\n    }\n    return (\n      <div\n        key={shape.uid}\n        className={cx('label-item', {\n          centered: !useMousePosition,\n          transparent: labelStyle === LabelStyle.TRANSPARENT,\n          compressed: labelFormat === LabelFormat.COMPRESSED,\n        })}\n        style={{ left: x, top: y }}\n      >\n        {this.renderLabelTitle(instance)}\n        {this.renderLabelAttributes(instance)}\n      </div>\n    );\n  }\n\n  render() {\n    const { shapes, hoveredShapeId } = this.props;\n    const hoveredShape = shapes.find((shape) => shape.uid === hoveredShapeId);\n    return SettingsStore.labelItems.length > 0 && (\n      <div ref={this.container} className=\"label-viewer\">\n        {SettingsStore.activeAttributesMode === AttributesMode.ALWAYS && shapes.map((shape) => this.renderLabelByShape(shape))}\n        {SettingsStore.activeAttributesMode === AttributesMode.HOVER && hoveredShape && this.renderLabelByShape(hoveredShape, true)}\n      </div>\n    );\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}