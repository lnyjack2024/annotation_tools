{"ast":null,"code":"/*!\n * wavesurfer.js regions plugin 5.2.0 (2021-08-16)\n * https://wavesurfer-js.org\n * @license BSD-3-Clause\n */\n!function (e, t) {\n  \"object\" == typeof exports && \"object\" == typeof module ? module.exports = t() : \"function\" == typeof define && define.amd ? define(\"WaveSurfer\", [], t) : \"object\" == typeof exports ? exports.WaveSurfer = t() : (e.WaveSurfer = e.WaveSurfer || {}, e.WaveSurfer.regions = t());\n}(self, function () {\n  return (() => {\n    \"use strict\";\n\n    var e = {\n        23: (e, t, r) => {\n          Object.defineProperty(t, \"__esModule\", {\n            value: !0\n          }), t.default = void 0;\n          var i = r(638);\n          function n(e, t) {\n            var r = Object.keys(e);\n            if (Object.getOwnPropertySymbols) {\n              var i = Object.getOwnPropertySymbols(e);\n              t && (i = i.filter(function (t) {\n                return Object.getOwnPropertyDescriptor(e, t).enumerable;\n              })), r.push.apply(r, i);\n            }\n            return r;\n          }\n          function a(e) {\n            for (var t = 1; t < arguments.length; t++) {\n              var r = null != arguments[t] ? arguments[t] : {};\n              t % 2 ? n(Object(r), !0).forEach(function (t) {\n                s(e, t, r[t]);\n              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : n(Object(r)).forEach(function (t) {\n                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t));\n              });\n            }\n            return e;\n          }\n          function s(e, t, r) {\n            return t in e ? Object.defineProperty(e, t, {\n              value: r,\n              enumerable: !0,\n              configurable: !0,\n              writable: !0\n            }) : e[t] = r, e;\n          }\n          function o(e, t) {\n            for (var r = 0; r < t.length; r++) {\n              var i = t[r];\n              i.enumerable = i.enumerable || !1, i.configurable = !0, \"value\" in i && (i.writable = !0), Object.defineProperty(e, i.key, i);\n            }\n          }\n          var l = function () {\n            function e(t, r) {\n              var n = this;\n              !function (e, t) {\n                if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n              }(this, e), this.params = t, this.wavesurfer = r, this.util = a(a({}, r.util), {}, {\n                getRegionSnapToGridValue: function (e) {\n                  return n.getRegionSnapToGridValue(e, t);\n                }\n              }), this.maxRegions = t.maxRegions, this.regionsMinLength = t.regionsMinLength || null, Object.getOwnPropertyNames(this.util.Observer.prototype).forEach(function (e) {\n                i.Region.prototype[e] = n.util.Observer.prototype[e];\n              }), this.wavesurfer.Region = i.Region;\n              this._onBackendCreated = function () {\n                n.wrapper = n.wavesurfer.drawer.wrapper, n.orientation = n.wavesurfer.drawer.orientation, n.params.regions && n.params.regions.forEach(function (e) {\n                  e.edgeScrollWidth = n.params.edgeScrollWidth || .05 * n.wrapper.clientWidth, n.add(e);\n                });\n              }, this.list = {}, this._onReady = function () {\n                n.wrapper = n.wavesurfer.drawer.wrapper, n.vertical = n.wavesurfer.drawer.params.vertical, n.params.dragSelection && n.enableDragSelection(n.params), Object.keys(n.list).forEach(function (e) {\n                  n.list[e].updateRender();\n                });\n              };\n            }\n            var t, r, n;\n            return t = e, n = [{\n              key: \"create\",\n              value: function (t) {\n                return {\n                  name: \"regions\",\n                  deferInit: !(!t || !t.deferInit) && t.deferInit,\n                  params: t,\n                  staticProps: {\n                    addRegion: function (e) {\n                      return this.initialisedPluginList.regions || this.initPlugin(\"regions\"), this.regions.add(e);\n                    },\n                    clearRegions: function () {\n                      this.regions && this.regions.clear();\n                    },\n                    enableDragSelection: function (e) {\n                      this.initialisedPluginList.regions || this.initPlugin(\"regions\"), this.regions.enableDragSelection(e);\n                    },\n                    disableDragSelection: function () {\n                      this.regions.disableDragSelection();\n                    }\n                  },\n                  instance: e\n                };\n              }\n            }], (r = [{\n              key: \"init\",\n              value: function () {\n                this.wavesurfer.isReady ? (this._onBackendCreated(), this._onReady()) : (this.wavesurfer.once(\"ready\", this._onReady), this.wavesurfer.once(\"backend-created\", this._onBackendCreated));\n              }\n            }, {\n              key: \"destroy\",\n              value: function () {\n                this.wavesurfer.un(\"ready\", this._onReady), this.wavesurfer.un(\"backend-created\", this._onBackendCreated), this.disableDragSelection(), this.clear();\n              }\n            }, {\n              key: \"wouldExceedMaxRegions\",\n              value: function () {\n                return this.maxRegions && Object.keys(this.list).length >= this.maxRegions;\n              }\n            }, {\n              key: \"add\",\n              value: function (e) {\n                var t = this;\n                if (this.wouldExceedMaxRegions()) return null;\n                !e.minLength && this.regionsMinLength && (e = a(a({}, e), {}, {\n                  minLength: this.regionsMinLength\n                }));\n                var r = new this.wavesurfer.Region(e, this.util, this.wavesurfer);\n                return this.list[r.id] = r, r.on(\"remove\", function () {\n                  delete t.list[r.id];\n                }), r;\n              }\n            }, {\n              key: \"clear\",\n              value: function () {\n                var e = this;\n                Object.keys(this.list).forEach(function (t) {\n                  e.list[t].remove();\n                });\n              }\n            }, {\n              key: \"enableDragSelection\",\n              value: function (e) {\n                var t = this;\n                this.disableDragSelection();\n                var r,\n                  i,\n                  n,\n                  a,\n                  s,\n                  o,\n                  l,\n                  h = e.slop || 2,\n                  u = this.wavesurfer.drawer.container,\n                  d = !1 !== e.scroll && this.wavesurfer.params.scrollParent,\n                  c = e.scrollSpeed || 1,\n                  v = e.scrollThreshold || 10,\n                  f = this.wavesurfer.getDuration(),\n                  g = 0,\n                  p = function e(r) {\n                    if (a && o) {\n                      var s = t.wrapper.scrollLeft + c * o;\n                      t.wrapper.scrollLeft = s = Math.min(i, Math.max(0, s));\n                      var l = t.wavesurfer.drawer.handleEvent(r);\n                      a.update({\n                        start: Math.min(l * f, n * f),\n                        end: Math.max(l * f, n * f)\n                      }), s < i && s > 0 && window.requestAnimationFrame(function () {\n                        e(r);\n                      });\n                    }\n                  },\n                  m = function (e) {\n                    e.touches && e.touches.length > 1 || (f = t.wavesurfer.getDuration(), s = e.targetTouches ? e.targetTouches[0].identifier : null, i = t.wrapper.scrollWidth - t.wrapper.clientWidth, l = t.util.withOrientation(t.wrapper.getBoundingClientRect(), t.vertical), r = !0, n = t.wavesurfer.drawer.handleEvent(e, !0), a = null, o = null);\n                  };\n                this.wrapper.addEventListener(\"mousedown\", m), this.wrapper.addEventListener(\"touchstart\", m), this.on(\"disable-drag-selection\", function () {\n                  t.wrapper.removeEventListener(\"touchstart\", m), t.wrapper.removeEventListener(\"mousedown\", m);\n                });\n                var w = function (e) {\n                  e.touches && e.touches.length > 1 || (r = !1, g = 0, o = null, a && (t.util.preventClick(), a.fireEvent(\"update-end\", e), t.wavesurfer.fireEvent(\"region-update-end\", a, e)), a = null);\n                };\n                this.wrapper.addEventListener(\"mouseleave\", w), this.wrapper.addEventListener(\"mouseup\", w), this.wrapper.addEventListener(\"touchend\", w), document.body.addEventListener(\"mouseup\", w), document.body.addEventListener(\"touchend\", w), this.on(\"disable-drag-selection\", function () {\n                  document.body.removeEventListener(\"mouseup\", w), document.body.removeEventListener(\"touchend\", w), t.wrapper.removeEventListener(\"touchend\", w), t.wrapper.removeEventListener(\"mouseup\", w), t.wrapper.removeEventListener(\"mouseleave\", w);\n                });\n                var b = function (i) {\n                  if (r && !(++g <= h) && !(i.touches && i.touches.length > 1) && (!i.targetTouches || i.targetTouches[0].identifier == s) && (a || (a = t.add(e || {})))) {\n                    var c = t.wavesurfer.drawer.handleEvent(i),\n                      m = t.wavesurfer.regions.util.getRegionSnapToGridValue(n * f),\n                      w = t.wavesurfer.regions.util.getRegionSnapToGridValue(c * f);\n                    a.update({\n                      start: Math.min(w, m),\n                      end: Math.max(w, m)\n                    });\n                    var b = t.util.withOrientation(i, t.vertical);\n                    if (d && u.clientWidth < t.wrapper.scrollWidth) {\n                      var y = b.clientX - l.left;\n                      (o = y <= v ? -1 : y >= l.right - v ? 1 : null) && p(i);\n                    }\n                  }\n                };\n                this.wrapper.addEventListener(\"mousemove\", b), this.wrapper.addEventListener(\"touchmove\", b), this.on(\"disable-drag-selection\", function () {\n                  t.wrapper.removeEventListener(\"touchmove\", b), t.wrapper.removeEventListener(\"mousemove\", b);\n                }), this.wavesurfer.on(\"region-created\", function (e) {\n                  t.regionsMinLength && (e.minLength = t.regionsMinLength);\n                });\n              }\n            }, {\n              key: \"disableDragSelection\",\n              value: function () {\n                this.fireEvent(\"disable-drag-selection\");\n              }\n            }, {\n              key: \"getCurrentRegion\",\n              value: function () {\n                var e = this,\n                  t = this.wavesurfer.getCurrentTime(),\n                  r = null;\n                return Object.keys(this.list).forEach(function (i) {\n                  var n = e.list[i];\n                  n.start <= t && n.end >= t && (!r || n.end - n.start < r.end - r.start) && (r = n);\n                }), r;\n              }\n            }, {\n              key: \"getRegionSnapToGridValue\",\n              value: function (e, t) {\n                if (t.snapToGridInterval) {\n                  var r = t.snapToGridOffset || 0;\n                  return Math.round((e - r) / t.snapToGridInterval) * t.snapToGridInterval + r;\n                }\n                return e;\n              }\n            }]) && o(t.prototype, r), n && o(t, n), e;\n          }();\n          t.default = l, e.exports = t.default;\n        },\n        638: (e, t) => {\n          function r(e, t) {\n            for (var r = 0; r < t.length; r++) {\n              var i = t[r];\n              i.enumerable = i.enumerable || !1, i.configurable = !0, \"value\" in i && (i.writable = !0), Object.defineProperty(e, i.key, i);\n            }\n          }\n          Object.defineProperty(t, \"__esModule\", {\n            value: !0\n          }), t.Region = void 0;\n          var i = function () {\n            function e(t, r, i) {\n              var n,\n                a = this;\n              !function (e, t) {\n                if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n              }(this, e), this.wavesurfer = i, this.wrapper = i.drawer.wrapper, this.util = i.util, this.style = this.util.style, this.regionsUtil = r, this.vertical = i.drawer.params.vertical, this.id = null == t.id ? i.util.getId() : t.id, this.start = Number(t.start) || 0, this.end = null == t.end ? this.start + 4 / this.wrapper.scrollWidth * this.wavesurfer.getDuration() : Number(t.end), this.resize = void 0 === t.resize || Boolean(t.resize), this.drag = void 0 === t.drag || Boolean(t.drag), this.isResizing = !1, this.isDragging = !1, this.loop = Boolean(t.loop), this.color = t.color || \"rgba(0, 0, 0, 0.1)\", this.handleStyle = t.handleStyle || {\n                left: {},\n                right: {}\n              }, this.handleLeftEl = null, this.handleRightEl = null, this.data = t.data || {}, this.attributes = t.attributes || {}, this.showTooltip = null === (n = t.showTooltip) || void 0 === n || n, this.maxLength = t.maxLength, this.minLength = t.minLength, this._onRedraw = function () {\n                return a.updateRender();\n              }, this.scroll = !1 !== t.scroll && i.params.scrollParent, this.scrollSpeed = t.scrollSpeed || 1, this.scrollThreshold = t.scrollThreshold || 10, this.preventContextMenu = void 0 !== t.preventContextMenu && Boolean(t.preventContextMenu);\n              var s = null == t.channelIdx ? -1 : parseInt(t.channelIdx);\n              if (this.regionHeight = \"100%\", this.marginTop = \"0px\", -1 !== s) {\n                var o = null != this.wavesurfer.backend.buffer ? this.wavesurfer.backend.buffer.numberOfChannels : -1;\n                o >= 0 && s < o && (this.regionHeight = Math.floor(1 / o * 100) + \"%\", this.marginTop = this.wavesurfer.getHeight() * s + \"px\");\n              }\n              this.formatTimeCallback = t.formatTimeCallback, this.edgeScrollWidth = t.edgeScrollWidth, this.bindInOut(), this.render(), this.wavesurfer.on(\"zoom\", this._onRedraw), this.wavesurfer.on(\"redraw\", this._onRedraw), this.wavesurfer.fireEvent(\"region-created\", this);\n            }\n            var t, i, n;\n            return t = e, (i = [{\n              key: \"update\",\n              value: function (e, t) {\n                null != e.start && (this.start = Number(e.start)), null != e.end && (this.end = Number(e.end)), null != e.loop && (this.loop = Boolean(e.loop)), null != e.color && (this.color = e.color), null != e.handleStyle && (this.handleStyle = e.handleStyle), null != e.data && (this.data = e.data), null != e.resize && (this.resize = Boolean(e.resize), this.updateHandlesResize(this.resize)), null != e.drag && (this.drag = Boolean(e.drag)), null != e.maxLength && (this.maxLength = Number(e.maxLength)), null != e.minLength && (this.minLength = Number(e.minLength)), null != e.attributes && (this.attributes = e.attributes), this.updateRender(), this.fireEvent(\"update\"), this.wavesurfer.fireEvent(\"region-updated\", this, t);\n              }\n            }, {\n              key: \"remove\",\n              value: function () {\n                this.element && (this.wrapper.removeChild(this.element.domElement), this.element = null, this.fireEvent(\"remove\"), this.wavesurfer.un(\"zoom\", this._onRedraw), this.wavesurfer.un(\"redraw\", this._onRedraw), this.wavesurfer.fireEvent(\"region-removed\", this));\n              }\n            }, {\n              key: \"play\",\n              value: function (e) {\n                var t = e || this.start;\n                this.wavesurfer.play(t, this.end), this.fireEvent(\"play\"), this.wavesurfer.fireEvent(\"region-play\", this);\n              }\n            }, {\n              key: \"playLoop\",\n              value: function (e) {\n                this.loop = !0, this.play(e);\n              }\n            }, {\n              key: \"setLoop\",\n              value: function (e) {\n                this.loop = e;\n              }\n            }, {\n              key: \"render\",\n              value: function () {\n                for (var e in this.element = this.util.withOrientation(this.wrapper.appendChild(document.createElement(\"region\")), this.vertical), this.element.className = \"wavesurfer-region\", this.showTooltip && (this.element.title = this.formatTime(this.start, this.end)), this.element.setAttribute(\"data-id\", this.id), this.attributes) this.element.setAttribute(\"data-region-\" + e, this.attributes[e]);\n                if (this.style(this.element, {\n                  position: \"absolute\",\n                  zIndex: 2,\n                  height: this.regionHeight,\n                  top: this.marginTop\n                }), this.resize) {\n                  this.handleLeftEl = this.util.withOrientation(this.element.appendChild(document.createElement(\"handle\")), this.vertical), this.handleRightEl = this.util.withOrientation(this.element.appendChild(document.createElement(\"handle\")), this.vertical), this.handleLeftEl.className = \"wavesurfer-handle wavesurfer-handle-start\", this.handleRightEl.className = \"wavesurfer-handle wavesurfer-handle-end\";\n                  var t = {\n                      cursor: this.vertical ? \"row-resize\" : \"col-resize\",\n                      position: \"absolute\",\n                      top: \"0px\",\n                      width: \"2px\",\n                      height: \"100%\",\n                      backgroundColor: \"rgba(0, 0, 0, 1)\"\n                    },\n                    r = \"none\" !== this.handleStyle.left ? Object.assign({\n                      left: \"0px\"\n                    }, t, this.handleStyle.left) : null,\n                    i = \"none\" !== this.handleStyle.right ? Object.assign({\n                      right: \"0px\"\n                    }, t, this.handleStyle.right) : null;\n                  r && this.style(this.handleLeftEl, r), i && this.style(this.handleRightEl, i);\n                }\n                this.updateRender(), this.bindEvents();\n              }\n            }, {\n              key: \"formatTime\",\n              value: function (e, t) {\n                return this.formatTimeCallback ? this.formatTimeCallback(e, t) : (e == t ? [e] : [e, t]).map(function (e) {\n                  return [Math.floor(e % 3600 / 60), (\"00\" + Math.floor(e % 60)).slice(-2)].join(\":\");\n                }).join(\"-\");\n              }\n            }, {\n              key: \"getWidth\",\n              value: function () {\n                return this.wavesurfer.drawer.width / this.wavesurfer.params.pixelRatio;\n              }\n            }, {\n              key: \"updateRender\",\n              value: function () {\n                var e = this.wavesurfer.getDuration(),\n                  t = this.getWidth(),\n                  r = this.start,\n                  i = this.end;\n                if (r < 0 && (i -= r = 0), i > e && (r = e - ((i = e) - r)), null != this.minLength && (i = Math.max(r + this.minLength, i)), null != this.maxLength && (i = Math.min(r + this.maxLength, i)), null != this.element) {\n                  var n = Math.round(r / e * t),\n                    a = Math.round(i / e * t) - n;\n                  for (var s in this.style(this.element, {\n                    left: n + \"px\",\n                    width: a + \"px\",\n                    backgroundColor: this.color,\n                    cursor: this.drag ? \"move\" : \"default\"\n                  }), this.attributes) this.element.setAttribute(\"data-region-\" + s, this.attributes[s]);\n                  this.showTooltip && (this.element.title = this.formatTime(this.start, this.end));\n                }\n              }\n            }, {\n              key: \"bindInOut\",\n              value: function () {\n                var e = this;\n                this.firedIn = !1, this.firedOut = !1;\n                var t = function (t) {\n                  var r = Math.round(10 * e.start) / 10,\n                    i = Math.round(10 * e.end) / 10;\n                  t = Math.round(10 * t) / 10, !e.firedOut && e.firedIn && (r > t || i <= t) && (e.firedOut = !0, e.firedIn = !1, e.fireEvent(\"out\"), e.wavesurfer.fireEvent(\"region-out\", e)), !e.firedIn && r <= t && i > t && (e.firedIn = !0, e.firedOut = !1, e.fireEvent(\"in\"), e.wavesurfer.fireEvent(\"region-in\", e));\n                };\n                this.wavesurfer.backend.on(\"audioprocess\", t), this.on(\"remove\", function () {\n                  e.wavesurfer.backend.un(\"audioprocess\", t);\n                }), this.on(\"out\", function () {\n                  if (e.loop) {\n                    var t = e.wavesurfer.getCurrentTime();\n                    t >= e.start && t <= e.end && e.wavesurfer.play(e.start);\n                  }\n                });\n              }\n            }, {\n              key: \"bindEvents\",\n              value: function () {\n                var e = this,\n                  t = this.preventContextMenu;\n                this.element.addEventListener(\"mouseenter\", function (t) {\n                  e.fireEvent(\"mouseenter\", t), e.wavesurfer.fireEvent(\"region-mouseenter\", e, t);\n                }), this.element.addEventListener(\"mouseleave\", function (t) {\n                  e.fireEvent(\"mouseleave\", t), e.wavesurfer.fireEvent(\"region-mouseleave\", e, t);\n                }), this.element.addEventListener(\"click\", function (t) {\n                  t.preventDefault(), e.fireEvent(\"click\", t), e.wavesurfer.fireEvent(\"region-click\", e, t);\n                }), this.element.addEventListener(\"dblclick\", function (t) {\n                  t.stopPropagation(), t.preventDefault(), e.fireEvent(\"dblclick\", t), e.wavesurfer.fireEvent(\"region-dblclick\", e, t);\n                }), this.element.addEventListener(\"contextmenu\", function (r) {\n                  t && r.preventDefault(), e.fireEvent(\"contextmenu\", r), e.wavesurfer.fireEvent(\"region-contextmenu\", e, r);\n                }), (this.drag || this.resize) && this.bindDragEvents();\n              }\n            }, {\n              key: \"bindDragEvents\",\n              value: function () {\n                var e,\n                  t,\n                  r,\n                  i,\n                  n,\n                  a,\n                  s,\n                  o,\n                  l,\n                  h = this,\n                  u = this.wavesurfer.drawer.container,\n                  d = this.scrollSpeed,\n                  c = (this.scrollThreshold, !1),\n                  v = function t(u) {\n                    var c = h.util.withOrientation(u, h.vertical),\n                      v = h.wavesurfer.getDuration();\n                    if (a && (r || n)) {\n                      var f = c.clientX,\n                        g = 0,\n                        p = 0,\n                        m = 0,\n                        w = h.regionsUtil.getRegionSnapToGridValue(h.wavesurfer.drawer.handleEvent(u) * v);\n                      if (r) -1 === a ? (p = o * h.wavesurfer.params.minPxPerSec, g = f - s.left) : (p = l * h.wavesurfer.params.minPxPerSec, g = s.right - f);else {\n                        var b = h.minLength;\n                        b || (b = 0), \"start\" === n ? (w > h.end - b && (w = h.end - b, m = d * a), w < 0 && (w = 0)) : \"end\" === n && (w < h.start + b && (w = h.start + b, m = d * a), w > v && (w = v));\n                      }\n                      var y = h.wrapper.scrollLeft;\n                      if (-1 === a) {\n                        if (0 === Math.round(y)) return;\n                        if (Math.round(y - p + g) <= 0) return;\n                      } else {\n                        if (Math.round(y) === i) return;\n                        if (Math.round(y + p - g) >= i) return;\n                      }\n                      var E = y - m + d * a;\n                      if (-1 === a) {\n                        var L = Math.max(0 + p - g, E);\n                        h.wrapper.scrollLeft = E = L;\n                      } else {\n                        var k = Math.min(i - p + g, E);\n                        h.wrapper.scrollLeft = E = k;\n                      }\n                      var R = w - e;\n                      e = w, r ? h.onDrag(R) : h.onResize(R, n), window.requestAnimationFrame(function () {\n                        t(u);\n                      });\n                    }\n                  },\n                  f = function (a) {\n                    var u = h.wavesurfer.getDuration();\n                    a.touches && a.touches.length > 1 || (t = a.targetTouches ? a.targetTouches[0].identifier : null, (h.drag || h.resize) && a.stopPropagation(), e = h.regionsUtil.getRegionSnapToGridValue(h.wavesurfer.drawer.handleEvent(a, !0) * u), o = e - h.start, l = h.end - e, i = h.wrapper.scrollWidth - h.wrapper.clientWidth, s = h.util.withOrientation(h.wrapper.getBoundingClientRect(), h.vertical), h.isResizing = !1, h.isDragging = !1, \"handle\" === a.target.tagName.toLowerCase() ? (h.isResizing = !0, n = a.target.classList.contains(\"wavesurfer-handle-start\") ? \"start\" : \"end\") : (h.isDragging = !0, r = !0, n = !1));\n                  },\n                  g = function (e) {\n                    e.touches && e.touches.length > 1 || ((r || n) && (h.isDragging = !1, h.isResizing = !1, r = !1, a = null, n = !1), c && (c = !1, h.util.preventClick(), h.fireEvent(\"update-end\", e), h.wavesurfer.fireEvent(\"region-update-end\", h, e)));\n                  },\n                  p = function (i) {\n                    var d = h.wavesurfer.getDuration(),\n                      f = h.util.withOrientation(i, h.vertical);\n                    if (!(i.touches && i.touches.length > 1) && (!i.targetTouches || i.targetTouches[0].identifier == t) && (r || n)) {\n                      var g = h.regionsUtil.getRegionSnapToGridValue(h.wavesurfer.drawer.handleEvent(i) * d);\n                      if (r) {\n                        var p = h.wavesurfer.getDuration();\n                        g > p - l && (g = p - l), g - o < 0 && (g = o);\n                      }\n                      if (n) {\n                        var m = h.minLength;\n                        m || (m = 0), \"start\" === n ? (g > h.end - m && (g = h.end - m), g < 0 && (g = 0)) : \"end\" === n && (g < h.start + m && (g = h.start + m), g > d && (g = d));\n                      }\n                      var w = g - e;\n                      if (e = g, h.drag && r && (c = c || !!w, h.onDrag(w)), h.resize && n && (c = c || !!w, h.onResize(w, n)), h.scroll && u.clientWidth < h.wrapper.scrollWidth) {\n                        var b = f.clientX;\n                        (a = b < s.left + h.edgeScrollWidth ? -1 : b > s.right - h.edgeScrollWidth ? 1 : null) && v(i);\n                      }\n                    }\n                  };\n                this.element.addEventListener(\"mousedown\", f), this.element.addEventListener(\"touchstart\", f), document.body.addEventListener(\"mousemove\", p), document.body.addEventListener(\"touchmove\", p, {\n                  passive: !1\n                }), document.addEventListener(\"mouseup\", g), document.body.addEventListener(\"touchend\", g), this.on(\"remove\", function () {\n                  document.removeEventListener(\"mouseup\", g), document.body.removeEventListener(\"touchend\", g), document.body.removeEventListener(\"mousemove\", p), document.body.removeEventListener(\"touchmove\", p);\n                }), this.wavesurfer.on(\"destroy\", function () {\n                  document.removeEventListener(\"mouseup\", g), document.body.removeEventListener(\"touchend\", g);\n                });\n              }\n            }, {\n              key: \"onDrag\",\n              value: function (e) {\n                var t = this.wavesurfer.getDuration();\n                this.end + e > t && (e = t - this.end), this.start + e < 0 && (e = -1 * this.start);\n                var r = {\n                  direction: this._getDragDirection(e),\n                  action: \"drag\"\n                };\n                this.update({\n                  start: this.start + e,\n                  end: this.end + e\n                }, r);\n              }\n            }, {\n              key: \"_getDragDirection\",\n              value: function (e) {\n                return e < 0 ? \"left\" : e > 0 ? \"right\" : null;\n              }\n            }, {\n              key: \"onResize\",\n              value: function (e, t) {\n                var r = this.wavesurfer.getDuration(),\n                  i = {\n                    action: \"resize\",\n                    direction: \"start\" === t ? \"right\" : \"left\"\n                  };\n                \"start\" === t ? (e > 0 && this.end - (this.start + e) < this.minLength && (e = this.end - this.minLength - this.start), e < 0 && this.start + e < 0 && (e = -1 * this.start), this.update({\n                  start: Math.min(this.start + e, this.end),\n                  end: Math.max(this.start + e, this.end)\n                }, i)) : (e < 0 && this.end + e - this.start < this.minLength && (e = this.start + this.minLength - this.end), e > 0 && this.end + e > r && (e = r - this.end), this.update({\n                  start: Math.min(this.end + e, this.start),\n                  end: Math.max(this.end + e, this.start)\n                }, i));\n              }\n            }, {\n              key: \"updateHandlesResize\",\n              value: function (e) {\n                var t;\n                t = e ? this.vertical ? \"row-resize\" : \"col-resize\" : \"auto\", this.handleLeftEl && this.style(this.handleLeftEl, {\n                  cursor: t\n                }), this.handleRightEl && this.style(this.handleRightEl, {\n                  cursor: t\n                });\n              }\n            }]) && r(t.prototype, i), n && r(t, n), e;\n          }();\n          t.Region = i;\n        }\n      },\n      t = {};\n    return function r(i) {\n      var n = t[i];\n      if (void 0 !== n) return n.exports;\n      var a = t[i] = {\n        exports: {}\n      };\n      return e[i](a, a.exports, r), a.exports;\n    }(23);\n  })();\n});","map":{"version":3,"sources":["webpack://WaveSurfer.[name]/webpack/universalModuleDefinition","webpack://WaveSurfer.[name]/src/plugin/regions/index.js","webpack://WaveSurfer.[name]/src/plugin/regions/region.js","webpack://WaveSurfer.[name]/webpack/bootstrap","webpack://WaveSurfer.[name]/webpack/startup"],"names":["root","factory","exports","module","define","amd","self","RegionsPlugin","params","name","deferInit","staticProps","addRegion","options","this","initialisedPluginList","regions","initPlugin","add","clearRegions","clear","enableDragSelection","disableDragSelection","instance","ws","wavesurfer","util","getRegionSnapToGridValue","value","maxRegions","regionsMinLength","Object","getOwnPropertyNames","Observer","prototype","forEach","Region","key","_onBackendCreated","wrapper","drawer","orientation","region","edgeScrollWidth","clientWidth","list","_onReady","vertical","dragSelection","keys","id","updateRender","isReady","once","un","length","wouldExceedMaxRegions","minLength","on","remove","slop","container","scroll","scrollParent","scrollSpeed","scrollThreshold","drag","duration","getDuration","maxScroll","start","touchId","pxMove","scrollDirection","wrapperRect","edgeScroll","scrollLeft","Math","min","max","end","handleEvent","e","update","window","requestAnimationFrame","eventDown","touches","targetTouches","identifier","scrollWidth","withOrientation","getBoundingClientRect","addEventListener","removeEventListener","eventUp","preventClick","fireEvent","document","body","eventMove","event","startUpdate","endUpdate","orientedEvent","x","clientX","left","right","time","getCurrentTime","cur","snapToGridInterval","offset","snapToGridOffset","round","regionsUtils","style","regionsUtil","getId","Number","resize","undefined","Boolean","isResizing","isDragging","loop","color","handleStyle","handleLeftEl","handleRightEl","data","attributes","showTooltip","maxLength","_onRedraw","preventContextMenu","channelIdx","parseInt","regionHeight","marginTop","channelCount","backend","buffer","numberOfChannels","floor","getHeight","formatTimeCallback","bindInOut","render","eventParams","updateHandlesResize","element","removeChild","domElement","s","play","appendChild","createElement","className","title","formatTime","setAttribute","attrname","position","zIndex","height","top","css","cursor","width","backgroundColor","handleLeftCss","assign","handleRightCss","bindEvents","map","slice","join","pixelRatio","dur","getWidth","startLimited","endLimited","regionWidth","firedIn","firedOut","onProcess","realTime","preventDefault","stopPropagation","bindDragEvents","startTime","updated","regionLeftHalfTime","regionRightHalfTime","distanceBetweenCursorAndWrapperEdge","regionHalfTimeWidth","adjustment","minPxPerSec","wrapperScrollLeft","calculatedLeft","calculatedRight","delta","onDrag","onResize","onDown","target","tagName","toLowerCase","classList","contains","onUp","onMove","maxEnd","passive","direction","_getDragDirection","action","cursorStyle","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"mappings":"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","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = root[\"WaveSurfer\"] || {}, root[\"WaveSurfer\"][\"regions\"] = factory();\n})(self, function() {\nreturn ","/**\n *  @since 4.0.0 This class has been split\n *\n * @typedef {Object} RegionsPluginParams\n * @property {?boolean} dragSelection Enable creating regions by dragging with\n * the mouse\n * @property {?RegionParams[]} regions Regions that should be added upon\n * initialisation\n * @property {number} slop=2 The sensitivity of the mouse dragging\n * @property {?number} snapToGridInterval Snap the regions to a grid of the specified multiples in seconds\n * @property {?number} snapToGridOffset Shift the snap-to-grid by the specified seconds. May also be negative.\n * @property {?boolean} deferInit Set to true to manually call\n * @property {number[]} maxRegions Maximum number of regions that may be created by the user at one time.\n * `initPlugin('regions')`\n * @property {function} formatTimeCallback Allows custom formating for region tooltip.\n * @property {?number} edgeScrollWidth='5% from container edges' Optional width for edgeScroll to start\n */\n\n/**\n * @typedef {Object} RegionParams\n * @desc The parameters used to describe a region.\n * @example wavesurfer.addRegion(regionParams);\n * @property {string} id=→random The id of the region\n * @property {number} start=0 The start position of the region (in seconds).\n * @property {number} end=0 The end position of the region (in seconds).\n * @property {?boolean} loop Whether to loop the region when played back.\n * @property {boolean} drag=true Allow/disallow dragging the region.\n * @property {boolean} resize=true Allow/disallow resizing the region.\n * @property {string} [color='rgba(0, 0, 0, 0.1)'] HTML color code.\n * @property {?number} channelIdx Select channel to draw the region on (if there are multiple channel waveforms).\n * @property {?object} handleStyle A set of CSS properties used to style the left and right handle.\n * @property {?boolean} preventContextMenu=false Determines whether the context menu is prevented from being opened.\n * @property {boolean} showTooltip=true Enable/disable tooltip displaying start and end times when hovering over region.\n */\n\nimport {Region} from \"./region.js\";\n\n/**\n * Regions are visual overlays on waveform that can be used to play and loop\n * portions of audio. Regions can be dragged and resized.\n *\n * Visual customization is possible via CSS (using the selectors\n * `.wavesurfer-region` and `.wavesurfer-handle`).\n *\n * @implements {PluginClass}\n * @extends {Observer}\n *\n * @example\n * // es6\n * import RegionsPlugin from 'wavesurfer.regions.js';\n *\n * // commonjs\n * var RegionsPlugin = require('wavesurfer.regions.js');\n *\n * // if you are using <script> tags\n * var RegionsPlugin = window.WaveSurfer.regions;\n *\n * // ... initialising wavesurfer with the plugin\n * var wavesurfer = WaveSurfer.create({\n *   // wavesurfer options ...\n *   plugins: [\n *     RegionsPlugin.create({\n *       // plugin options ...\n *     })\n *   ]\n * });\n */\nexport default class RegionsPlugin {\n    /**\n     * Regions plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * @param {RegionsPluginParams} params parameters use to initialise the plugin\n     * @return {PluginDefinition} an object representing the plugin\n     */\n    static create(params) {\n        return {\n            name: 'regions',\n            deferInit: params && params.deferInit ? params.deferInit : false,\n            params: params,\n            staticProps: {\n                addRegion(options) {\n                    if (!this.initialisedPluginList.regions) {\n                        this.initPlugin('regions');\n                    }\n                    return this.regions.add(options);\n                },\n\n                clearRegions() {\n                    this.regions && this.regions.clear();\n                },\n\n                enableDragSelection(options) {\n                    if (!this.initialisedPluginList.regions) {\n                        this.initPlugin('regions');\n                    }\n                    this.regions.enableDragSelection(options);\n                },\n\n                disableDragSelection() {\n                    this.regions.disableDragSelection();\n                }\n            },\n            instance: RegionsPlugin\n        };\n    }\n\n    constructor(params, ws) {\n        this.params = params;\n        this.wavesurfer = ws;\n        this.util = {\n            ...ws.util,\n            getRegionSnapToGridValue: value => {\n                return this.getRegionSnapToGridValue(value, params);\n            }\n        };\n        this.maxRegions = params.maxRegions;\n        this.regionsMinLength = params.regionsMinLength || null;\n\n        // turn the plugin instance into an observer\n        const observerPrototypeKeys = Object.getOwnPropertyNames(\n            this.util.Observer.prototype\n        );\n        observerPrototypeKeys.forEach(key => {\n            Region.prototype[key] = this.util.Observer.prototype[key];\n        });\n        this.wavesurfer.Region = Region;\n\n        // By default, scroll the container if the user drags a region\n        // within 5% of its edge\n        const scrollWidthProportion = 0.05;\n        this._onBackendCreated = () => {\n            this.wrapper = this.wavesurfer.drawer.wrapper;\n            this.orientation = this.wavesurfer.drawer.orientation;\n            if (this.params.regions) {\n                this.params.regions.forEach(region => {\n                    region.edgeScrollWidth = this.params.edgeScrollWidth ||\n                        this.wrapper.clientWidth * scrollWidthProportion;\n                    this.add(region);\n                });\n            }\n        };\n\n        // Id-based hash of regions\n        this.list = {};\n        this._onReady = () => {\n            this.wrapper = this.wavesurfer.drawer.wrapper;\n            this.vertical = this.wavesurfer.drawer.params.vertical;\n            if (this.params.dragSelection) {\n                this.enableDragSelection(this.params);\n            }\n            Object.keys(this.list).forEach(id => {\n                this.list[id].updateRender();\n            });\n        };\n    }\n\n    init() {\n        // Check if ws is ready\n        if (this.wavesurfer.isReady) {\n            this._onBackendCreated();\n            this._onReady();\n        } else {\n            this.wavesurfer.once('ready', this._onReady);\n            this.wavesurfer.once('backend-created', this._onBackendCreated);\n        }\n    }\n\n    destroy() {\n        this.wavesurfer.un('ready', this._onReady);\n        this.wavesurfer.un('backend-created', this._onBackendCreated);\n        this.disableDragSelection();\n        this.clear();\n    }\n\n    /**\n     * check to see if adding a new region would exceed maxRegions\n     * @return {boolean} whether we should proceed and create a region\n     * @private\n     */\n    wouldExceedMaxRegions() {\n        return (\n            this.maxRegions && Object.keys(this.list).length >= this.maxRegions\n        );\n    }\n\n    /**\n     * Add a region\n     *\n     * @param {object} params Region parameters\n     * @return {Region} The created region\n     */\n    add(params) {\n        if (this.wouldExceedMaxRegions()) {\n            return null;\n        }\n\n        if (!params.minLength && this.regionsMinLength) {\n            params = {...params, minLength: this.regionsMinLength};\n        }\n\n        const region = new this.wavesurfer.Region(params, this.util, this.wavesurfer);\n\n        this.list[region.id] = region;\n\n        region.on('remove', () => {\n            delete this.list[region.id];\n        });\n\n        return region;\n    }\n\n    /**\n     * Remove all regions\n     */\n    clear() {\n        Object.keys(this.list).forEach(id => {\n            this.list[id].remove();\n        });\n    }\n\n    enableDragSelection(params) {\n        this.disableDragSelection();\n\n        const slop = params.slop || 2;\n        const container = this.wavesurfer.drawer.container;\n        const scroll =\n            params.scroll !== false && this.wavesurfer.params.scrollParent;\n        const scrollSpeed = params.scrollSpeed || 1;\n        const scrollThreshold = params.scrollThreshold || 10;\n        let drag;\n        let duration = this.wavesurfer.getDuration();\n        let maxScroll;\n        let start;\n        let region;\n        let touchId;\n        let pxMove = 0;\n        let scrollDirection;\n        let wrapperRect;\n\n        // Scroll when the user is dragging within the threshold\n        const edgeScroll = e => {\n            if (!region || !scrollDirection) {\n                return;\n            }\n\n            // Update scroll position\n            let scrollLeft =\n                this.wrapper.scrollLeft + scrollSpeed * scrollDirection;\n            this.wrapper.scrollLeft = scrollLeft = Math.min(\n                maxScroll,\n                Math.max(0, scrollLeft)\n            );\n\n            // Update range\n            const end = this.wavesurfer.drawer.handleEvent(e);\n            region.update({\n                start: Math.min(end * duration, start * duration),\n                end: Math.max(end * duration, start * duration)\n            });\n\n            // Check that there is more to scroll and repeat\n            if (scrollLeft < maxScroll && scrollLeft > 0) {\n                window.requestAnimationFrame(() => {\n                    edgeScroll(e);\n                });\n            }\n        };\n\n        const eventDown = e => {\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n            duration = this.wavesurfer.getDuration();\n            touchId = e.targetTouches ? e.targetTouches[0].identifier : null;\n\n            // Store for scroll calculations\n            maxScroll = this.wrapper.scrollWidth -\n                this.wrapper.clientWidth;\n            wrapperRect = this.util.withOrientation(\n                this.wrapper.getBoundingClientRect(),\n                this.vertical\n            );\n\n            drag = true;\n            start = this.wavesurfer.drawer.handleEvent(e, true);\n            region = null;\n            scrollDirection = null;\n        };\n        this.wrapper.addEventListener('mousedown', eventDown);\n        this.wrapper.addEventListener('touchstart', eventDown);\n        this.on('disable-drag-selection', () => {\n            this.wrapper.removeEventListener('touchstart', eventDown);\n            this.wrapper.removeEventListener('mousedown', eventDown);\n        });\n\n        const eventUp = e => {\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n\n            drag = false;\n            pxMove = 0;\n            scrollDirection = null;\n\n            if (region) {\n                this.util.preventClick();\n                region.fireEvent('update-end', e);\n                this.wavesurfer.fireEvent('region-update-end', region, e);\n            }\n\n            region = null;\n        };\n        this.wrapper.addEventListener('mouseleave', eventUp);\n        this.wrapper.addEventListener('mouseup', eventUp);\n        this.wrapper.addEventListener('touchend', eventUp);\n\n        document.body.addEventListener('mouseup', eventUp);\n        document.body.addEventListener('touchend', eventUp);\n        this.on('disable-drag-selection', () => {\n            document.body.removeEventListener('mouseup', eventUp);\n            document.body.removeEventListener('touchend', eventUp);\n            this.wrapper.removeEventListener('touchend', eventUp);\n            this.wrapper.removeEventListener('mouseup', eventUp);\n            this.wrapper.removeEventListener('mouseleave', eventUp);\n        });\n\n        const eventMove = event => {\n            if (!drag) {\n                return;\n            }\n            if (++pxMove <= slop) {\n                return;\n            }\n\n            if (event.touches && event.touches.length > 1) {\n                return;\n            }\n            if (event.targetTouches && event.targetTouches[0].identifier != touchId) {\n                return;\n            }\n\n            // auto-create a region during mouse drag, unless region-count would exceed \"maxRegions\"\n            if (!region) {\n                region = this.add(params || {});\n                if (!region) {\n                    return;\n                }\n            }\n\n            const end = this.wavesurfer.drawer.handleEvent(event);\n            const startUpdate = this.wavesurfer.regions.util.getRegionSnapToGridValue(\n                start * duration\n            );\n            const endUpdate = this.wavesurfer.regions.util.getRegionSnapToGridValue(\n                end * duration\n            );\n            region.update({\n                start: Math.min(endUpdate, startUpdate),\n                end: Math.max(endUpdate, startUpdate)\n            });\n\n            let orientedEvent = this.util.withOrientation(event, this.vertical);\n\n            // If scrolling is enabled\n            if (scroll && container.clientWidth < this.wrapper.scrollWidth) {\n                // Check threshold based on mouse\n                const x = orientedEvent.clientX - wrapperRect.left;\n                if (x <= scrollThreshold) {\n                    scrollDirection = -1;\n                } else if (x >= wrapperRect.right - scrollThreshold) {\n                    scrollDirection = 1;\n                } else {\n                    scrollDirection = null;\n                }\n                scrollDirection && edgeScroll(event);\n            }\n        };\n        this.wrapper.addEventListener('mousemove', eventMove);\n        this.wrapper.addEventListener('touchmove', eventMove);\n        this.on('disable-drag-selection', () => {\n            this.wrapper.removeEventListener('touchmove', eventMove);\n            this.wrapper.removeEventListener('mousemove', eventMove);\n        });\n\n        this.wavesurfer.on('region-created', region => {\n            if (this.regionsMinLength) {\n                region.minLength = this.regionsMinLength;\n            }\n        });\n    }\n\n    disableDragSelection() {\n        this.fireEvent('disable-drag-selection');\n    }\n\n    /**\n     * Get current region\n     *\n     * The smallest region that contains the current time. If several such\n     * regions exist, take the first. Return `null` if none exist.\n     *\n     * @returns {Region} The current region\n     */\n    getCurrentRegion() {\n        const time = this.wavesurfer.getCurrentTime();\n        let min = null;\n        Object.keys(this.list).forEach(id => {\n            const cur = this.list[id];\n            if (cur.start <= time && cur.end >= time) {\n                if (!min || cur.end - cur.start < min.end - min.start) {\n                    min = cur;\n                }\n            }\n        });\n\n        return min;\n    }\n\n    /**\n     * Match the value to the grid, if required\n     *\n     * If the regions plugin params have a snapToGridInterval set, return the\n     * value matching the nearest grid interval. If no snapToGridInterval is set,\n     * the passed value will be returned without modification.\n     *\n     * @param {number} value the value to snap to the grid, if needed\n     * @param {Object} params the regions plugin params\n     * @returns {number} value\n     */\n    getRegionSnapToGridValue(value, params) {\n        if (params.snapToGridInterval) {\n            // the regions should snap to a grid\n            const offset = params.snapToGridOffset || 0;\n            return (\n                Math.round((value - offset) / params.snapToGridInterval) *\n                    params.snapToGridInterval +\n                offset\n            );\n        }\n\n        // no snap-to-grid\n        return value;\n    }\n}\n","/**\n *  @since 4.0.0\n *\n * (Single) Region plugin class\n *\n * Must be turned into an observer before instantiating. This is done in\n * `RegionsPlugin` (main plugin class).\n *\n * @extends {Observer}\n */\nexport class Region {\n    constructor(params, regionsUtils, ws) {\n        this.wavesurfer = ws;\n        this.wrapper = ws.drawer.wrapper;\n        this.util = ws.util;\n        this.style = this.util.style;\n        this.regionsUtil = regionsUtils;\n        this.vertical = ws.drawer.params.vertical;\n\n        this.id = params.id == null ? ws.util.getId() : params.id;\n        this.start = Number(params.start) || 0;\n        this.end =\n            params.end == null\n                ? // small marker-like region\n                this.start +\n                (4 / this.wrapper.scrollWidth) * this.wavesurfer.getDuration()\n                : Number(params.end);\n        this.resize =\n            params.resize === undefined ? true : Boolean(params.resize);\n        this.drag = params.drag === undefined ? true : Boolean(params.drag);\n        // reflect resize and drag state of region for region-updated listener\n        this.isResizing = false;\n        this.isDragging = false;\n        this.loop = Boolean(params.loop);\n        this.color = params.color || 'rgba(0, 0, 0, 0.1)';\n        // The left and right handleStyle properties can be set to 'none' for\n        // no styling or can be assigned an object containing CSS properties.\n        this.handleStyle = params.handleStyle || {\n            left: {},\n            right: {}\n        };\n        this.handleLeftEl = null;\n        this.handleRightEl = null;\n        this.data = params.data || {};\n        this.attributes = params.attributes || {};\n        this.showTooltip = params.showTooltip ?? true;\n\n        this.maxLength = params.maxLength;\n        // It assumes the minLength parameter value, or the regionsMinLength parameter value, if the first one not provided\n        this.minLength = params.minLength;\n        this._onRedraw = () => this.updateRender();\n\n        this.scroll = params.scroll !== false && ws.params.scrollParent;\n        this.scrollSpeed = params.scrollSpeed || 1;\n        this.scrollThreshold = params.scrollThreshold || 10;\n        // Determines whether the context menu is prevented from being opened.\n        this.preventContextMenu =\n            params.preventContextMenu === undefined\n                ? false\n                : Boolean(params.preventContextMenu);\n\n        // select channel ID to set region\n        let channelIdx =\n            params.channelIdx == null ? -1 : parseInt(params.channelIdx);\n        this.regionHeight = '100%';\n        this.marginTop = '0px';\n\n        if (channelIdx !== -1) {\n            let channelCount =\n                this.wavesurfer.backend.buffer != null\n                    ? this.wavesurfer.backend.buffer.numberOfChannels\n                    : -1;\n            if (channelCount >= 0 && channelIdx < channelCount) {\n                this.regionHeight = Math.floor((1 / channelCount) * 100) + '%';\n                this.marginTop =\n                    this.wavesurfer.getHeight() * channelIdx + 'px';\n            }\n        }\n\n        this.formatTimeCallback = params.formatTimeCallback;\n        this.edgeScrollWidth = params.edgeScrollWidth;\n        this.bindInOut();\n        this.render();\n        this.wavesurfer.on('zoom', this._onRedraw);\n        this.wavesurfer.on('redraw', this._onRedraw);\n        this.wavesurfer.fireEvent('region-created', this);\n    }\n\n    /* Update region params. */\n    update(params, eventParams) {\n        if (params.start != null) {\n            this.start = Number(params.start);\n        }\n        if (params.end != null) {\n            this.end = Number(params.end);\n        }\n        if (params.loop != null) {\n            this.loop = Boolean(params.loop);\n        }\n        if (params.color != null) {\n            this.color = params.color;\n        }\n        if (params.handleStyle != null) {\n            this.handleStyle = params.handleStyle;\n        }\n        if (params.data != null) {\n            this.data = params.data;\n        }\n        if (params.resize != null) {\n            this.resize = Boolean(params.resize);\n            this.updateHandlesResize(this.resize);\n        }\n        if (params.drag != null) {\n            this.drag = Boolean(params.drag);\n        }\n        if (params.maxLength != null) {\n            this.maxLength = Number(params.maxLength);\n        }\n        if (params.minLength != null) {\n            this.minLength = Number(params.minLength);\n        }\n        if (params.attributes != null) {\n            this.attributes = params.attributes;\n        }\n\n        this.updateRender();\n        this.fireEvent('update');\n        this.wavesurfer.fireEvent('region-updated', this, eventParams);\n    }\n\n    /* Remove a single region. */\n    remove() {\n        if (this.element) {\n            this.wrapper.removeChild(this.element.domElement);\n            this.element = null;\n            this.fireEvent('remove');\n            this.wavesurfer.un('zoom', this._onRedraw);\n            this.wavesurfer.un('redraw', this._onRedraw);\n            this.wavesurfer.fireEvent('region-removed', this);\n        }\n    }\n\n    /**\n     * Play the audio region.\n     * @param {number} start Optional offset to start playing at\n     */\n    play(start) {\n        const s = start || this.start;\n        this.wavesurfer.play(s, this.end);\n        this.fireEvent('play');\n        this.wavesurfer.fireEvent('region-play', this);\n    }\n\n    /**\n     * Play the audio region in a loop.\n     * @param {number} start Optional offset to start playing at\n     * */\n    playLoop(start) {\n        this.loop = true;\n        this.play(start);\n    }\n\n    /**\n     * Set looping on/off.\n     * @param {boolean} loop True if should play in loop\n     */\n    setLoop(loop) {\n        this.loop = loop;\n    }\n\n    /* Render a region as a DOM element. */\n    render() {\n        this.element = this.util.withOrientation(\n            this.wrapper.appendChild(document.createElement('region')),\n            this.vertical\n        );\n\n        this.element.className = 'wavesurfer-region';\n        if (this.showTooltip) {\n            this.element.title = this.formatTime(this.start, this.end);\n        }\n        this.element.setAttribute('data-id', this.id);\n\n        for (const attrname in this.attributes) {\n            this.element.setAttribute(\n                'data-region-' + attrname,\n                this.attributes[attrname]\n            );\n        }\n\n        this.style(this.element, {\n            position: 'absolute',\n            zIndex: 2,\n            height: this.regionHeight,\n            top: this.marginTop\n        });\n\n        /* Resize handles */\n        if (this.resize) {\n            this.handleLeftEl = this.util.withOrientation(\n                this.element.appendChild(document.createElement('handle')),\n                this.vertical\n            );\n            this.handleRightEl = this.util.withOrientation(\n                this.element.appendChild(document.createElement('handle')),\n                this.vertical\n            );\n\n            this.handleLeftEl.className = 'wavesurfer-handle wavesurfer-handle-start';\n            this.handleRightEl.className = 'wavesurfer-handle wavesurfer-handle-end';\n\n            // Default CSS properties for both handles.\n            const css = {\n                cursor: this.vertical ? 'row-resize' : 'col-resize',\n                position: 'absolute',\n                top: '0px',\n                width: '2px',\n                height: '100%',\n                backgroundColor: 'rgba(0, 0, 0, 1)'\n            };\n\n            // Merge CSS properties per handle.\n            const handleLeftCss =\n                this.handleStyle.left !== 'none'\n                    ? Object.assign(\n                        { left: '0px' },\n                        css,\n                        this.handleStyle.left\n                    )\n                    : null;\n            const handleRightCss =\n                this.handleStyle.right !== 'none'\n                    ? Object.assign(\n                        { right: '0px' },\n                        css,\n                        this.handleStyle.right\n                    )\n                    : null;\n\n            if (handleLeftCss) {\n                this.style(this.handleLeftEl, handleLeftCss);\n            }\n\n            if (handleRightCss) {\n                this.style(this.handleRightEl, handleRightCss);\n            }\n        }\n\n        this.updateRender();\n        this.bindEvents();\n    }\n\n    formatTime(start, end) {\n        if (this.formatTimeCallback) {\n            return this.formatTimeCallback(start, end);\n        }\n        return (start == end ? [start] : [start, end])\n            .map((time) =>\n                [\n                    Math.floor((time % 3600) / 60), // minutes\n                    ('00' + Math.floor(time % 60)).slice(-2) // seconds\n                ].join(':')\n            )\n            .join('-');\n    }\n\n    getWidth() {\n        return this.wavesurfer.drawer.width / this.wavesurfer.params.pixelRatio;\n    }\n\n    /* Update element's position, width, color. */\n    updateRender() {\n        // duration varies during loading process, so don't overwrite important data\n        const dur = this.wavesurfer.getDuration();\n        const width = this.getWidth();\n\n        let startLimited = this.start;\n        let endLimited = this.end;\n        if (startLimited < 0) {\n            startLimited = 0;\n            endLimited = endLimited - startLimited;\n        }\n        if (endLimited > dur) {\n            endLimited = dur;\n            startLimited = dur - (endLimited - startLimited);\n        }\n\n        if (this.minLength != null) {\n            endLimited = Math.max(startLimited + this.minLength, endLimited);\n        }\n\n        if (this.maxLength != null) {\n            endLimited = Math.min(startLimited + this.maxLength, endLimited);\n        }\n\n        if (this.element != null) {\n            // Calculate the left and width values of the region such that\n            // no gaps appear between regions.\n            const left = Math.round((startLimited / dur) * width);\n            const regionWidth = Math.round((endLimited / dur) * width) - left;\n\n            this.style(this.element, {\n                left: left + 'px',\n                width: regionWidth + 'px',\n                backgroundColor: this.color,\n                cursor: this.drag ? 'move' : 'default'\n            });\n\n            for (const attrname in this.attributes) {\n                this.element.setAttribute(\n                    'data-region-' + attrname,\n                    this.attributes[attrname]\n                );\n            }\n\n            if (this.showTooltip) {\n                this.element.title = this.formatTime(this.start, this.end);\n            }\n        }\n    }\n\n    /* Bind audio events. */\n    bindInOut() {\n        this.firedIn = false;\n        this.firedOut = false;\n\n        const onProcess = (time) => {\n            let start = Math.round(this.start * 10) / 10;\n            let end = Math.round(this.end * 10) / 10;\n            time = Math.round(time * 10) / 10;\n\n            if (\n                !this.firedOut &&\n                this.firedIn &&\n                (start > time || end <= time)\n            ) {\n                this.firedOut = true;\n                this.firedIn = false;\n                this.fireEvent('out');\n                this.wavesurfer.fireEvent('region-out', this);\n            }\n            if (!this.firedIn && start <= time && end > time) {\n                this.firedIn = true;\n                this.firedOut = false;\n                this.fireEvent('in');\n                this.wavesurfer.fireEvent('region-in', this);\n            }\n        };\n\n        this.wavesurfer.backend.on('audioprocess', onProcess);\n\n        this.on('remove', () => {\n            this.wavesurfer.backend.un('audioprocess', onProcess);\n        });\n\n        /* Loop playback. */\n        this.on('out', () => {\n            if (this.loop) {\n                const realTime = this.wavesurfer.getCurrentTime();\n                if (realTime >= this.start && realTime <= this.end) {\n                    this.wavesurfer.play(this.start);\n                }\n            }\n        });\n    }\n\n    /* Bind DOM events. */\n    bindEvents() {\n        const preventContextMenu = this.preventContextMenu;\n\n        this.element.addEventListener('mouseenter', (e) => {\n            this.fireEvent('mouseenter', e);\n            this.wavesurfer.fireEvent('region-mouseenter', this, e);\n        });\n\n        this.element.addEventListener('mouseleave', (e) => {\n            this.fireEvent('mouseleave', e);\n            this.wavesurfer.fireEvent('region-mouseleave', this, e);\n        });\n\n        this.element.addEventListener('click', (e) => {\n            e.preventDefault();\n            this.fireEvent('click', e);\n            this.wavesurfer.fireEvent('region-click', this, e);\n        });\n\n        this.element.addEventListener('dblclick', (e) => {\n            e.stopPropagation();\n            e.preventDefault();\n            this.fireEvent('dblclick', e);\n            this.wavesurfer.fireEvent('region-dblclick', this, e);\n        });\n\n        this.element.addEventListener('contextmenu', (e) => {\n            if (preventContextMenu) {\n                e.preventDefault();\n            }\n            this.fireEvent('contextmenu', e);\n            this.wavesurfer.fireEvent('region-contextmenu', this, e);\n        });\n\n        /* Drag or resize on mousemove. */\n        if (this.drag || this.resize) {\n            this.bindDragEvents();\n        }\n    }\n\n    bindDragEvents() {\n        const container = this.wavesurfer.drawer.container;\n        const scrollSpeed = this.scrollSpeed;\n        const scrollThreshold = this.scrollThreshold;\n        let startTime;\n        let touchId;\n        let drag;\n        let maxScroll;\n        let resize;\n        let updated = false;\n        let scrollDirection;\n        let wrapperRect;\n        let regionLeftHalfTime;\n        let regionRightHalfTime;\n\n        // Scroll when the user is dragging within the threshold\n        const edgeScroll = (event) => {\n            let orientedEvent = this.util.withOrientation(event, this.vertical);\n            const duration = this.wavesurfer.getDuration();\n            if (!scrollDirection || (!drag && !resize)) {\n                return;\n            }\n\n            const x = orientedEvent.clientX;\n            let distanceBetweenCursorAndWrapperEdge = 0;\n            let regionHalfTimeWidth = 0;\n            let adjustment = 0;\n\n            // Get the currently selected time according to the mouse position\n            let time = this.regionsUtil.getRegionSnapToGridValue(\n                this.wavesurfer.drawer.handleEvent(event) * duration\n            );\n\n            if (drag) {\n                // Considering the point of contact with the region while edgescrolling\n                if (scrollDirection === -1) {\n                    regionHalfTimeWidth = regionLeftHalfTime * this.wavesurfer.params.minPxPerSec;\n                    distanceBetweenCursorAndWrapperEdge = x - wrapperRect.left;\n                } else {\n                    regionHalfTimeWidth = regionRightHalfTime * this.wavesurfer.params.minPxPerSec;\n                    distanceBetweenCursorAndWrapperEdge = wrapperRect.right - x;\n                }\n            } else {\n                // Considering minLength while edgescroll\n                let minLength = this.minLength;\n                if (!minLength) {\n                    minLength = 0;\n                }\n\n                if (resize === 'start') {\n                    if (time > this.end - minLength) {\n                        time = this.end - minLength;\n                        adjustment = scrollSpeed * scrollDirection;\n                    }\n\n                    if (time < 0) {\n                        time = 0;\n                    }\n                } else if (resize === 'end') {\n                    if (time < this.start + minLength) {\n                        time = this.start + minLength;\n                        adjustment = scrollSpeed * scrollDirection;\n                    }\n\n                    if (time > duration) {\n                        time = duration;\n                    }\n                }\n            }\n\n            // Don't edgescroll if region has reached min or max limit\n            const wrapperScrollLeft = this.wrapper.scrollLeft;\n\n            if (scrollDirection === -1) {\n                if (Math.round(wrapperScrollLeft) === 0) {\n                    return;\n                }\n\n                if (Math.round(wrapperScrollLeft - regionHalfTimeWidth + distanceBetweenCursorAndWrapperEdge) <= 0) {\n                    return;\n                }\n            } else {\n                if (Math.round(wrapperScrollLeft) === maxScroll) {\n                    return;\n                }\n\n                if (Math.round(wrapperScrollLeft + regionHalfTimeWidth - distanceBetweenCursorAndWrapperEdge) >= maxScroll) {\n                    return;\n                }\n            }\n\n            // Update scroll position\n            let scrollLeft = wrapperScrollLeft - adjustment + scrollSpeed * scrollDirection;\n\n            if (scrollDirection === -1) {\n                const calculatedLeft = Math.max(0 + regionHalfTimeWidth - distanceBetweenCursorAndWrapperEdge, scrollLeft);\n                this.wrapper.scrollLeft = scrollLeft = calculatedLeft;\n            } else {\n                const calculatedRight = Math.min(maxScroll - regionHalfTimeWidth + distanceBetweenCursorAndWrapperEdge, scrollLeft);\n                this.wrapper.scrollLeft = scrollLeft = calculatedRight;\n            }\n\n            const delta = time - startTime;\n            startTime = time;\n\n            // Continue dragging or resizing\n            drag ? this.onDrag(delta) : this.onResize(delta, resize);\n\n            // Repeat\n            window.requestAnimationFrame(() => {\n                edgeScroll(event);\n            });\n        };\n\n        const onDown = (event) => {\n            const duration = this.wavesurfer.getDuration();\n            if (event.touches && event.touches.length > 1) {\n                return;\n            }\n            touchId = event.targetTouches ? event.targetTouches[0].identifier : null;\n\n            // stop the event propagation, if this region is resizable or draggable\n            // and the event is therefore handled here.\n            if (this.drag || this.resize) {\n                event.stopPropagation();\n            }\n\n            // Store the selected startTime we begun dragging or resizing\n            startTime = this.regionsUtil.getRegionSnapToGridValue(\n                this.wavesurfer.drawer.handleEvent(event, true) * duration\n            );\n\n            // Store the selected point of contact when we begin dragging\n            regionLeftHalfTime = startTime - this.start;\n            regionRightHalfTime = this.end - startTime;\n\n            // Store for scroll calculations\n            maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n\n            wrapperRect = this.util.withOrientation(\n                this.wrapper.getBoundingClientRect(),\n                this.vertical\n            );\n\n            this.isResizing = false;\n            this.isDragging = false;\n            if (event.target.tagName.toLowerCase() === 'handle') {\n                this.isResizing = true;\n                resize = event.target.classList.contains('wavesurfer-handle-start')\n                    ? 'start'\n                    : 'end';\n            } else {\n                this.isDragging = true;\n                drag = true;\n                resize = false;\n            }\n        };\n        const onUp = (event) => {\n            if (event.touches && event.touches.length > 1) {\n                return;\n            }\n\n            if (drag || resize) {\n                this.isDragging = false;\n                this.isResizing = false;\n                drag = false;\n                scrollDirection = null;\n                resize = false;\n            }\n\n            if (updated) {\n                updated = false;\n                this.util.preventClick();\n                this.fireEvent('update-end', event);\n                this.wavesurfer.fireEvent('region-update-end', this, event);\n            }\n        };\n        const onMove = (event) => {\n            const duration = this.wavesurfer.getDuration();\n            let orientedEvent = this.util.withOrientation(event, this.vertical);\n\n            if (event.touches && event.touches.length > 1) {\n                return;\n            }\n            if (event.targetTouches && event.targetTouches[0].identifier != touchId) {\n                return;\n            }\n            if (!drag && !resize) {\n                return;\n            }\n\n            const oldTime = startTime;\n            let time = this.regionsUtil.getRegionSnapToGridValue(\n                this.wavesurfer.drawer.handleEvent(event) * duration\n            );\n\n            if (drag) {\n                // To maintain relative cursor start point while dragging\n                const maxEnd = this.wavesurfer.getDuration();\n                if (time > maxEnd - regionRightHalfTime) {\n                    time = maxEnd - regionRightHalfTime;\n                }\n\n                if (time - regionLeftHalfTime < 0) {\n                    time = regionLeftHalfTime;\n                }\n            }\n\n            if (resize) {\n                // To maintain relative cursor start point while resizing\n                // we have to handle for minLength\n                let minLength = this.minLength;\n                if (!minLength) {\n                    minLength = 0;\n                }\n\n                if (resize === 'start') {\n                    if (time > this.end - minLength) {\n                        time = this.end - minLength;\n                    }\n\n                    if (time < 0) {\n                        time = 0;\n                    }\n                } else if (resize === 'end') {\n                    if (time < this.start + minLength) {\n                        time = this.start + minLength;\n                    }\n\n                    if (time > duration) {\n                        time = duration;\n                    }\n                }\n            }\n\n            let delta = time - startTime;\n            startTime = time;\n\n            // Drag\n            if (this.drag && drag) {\n                updated = updated || !!delta;\n                this.onDrag(delta);\n            }\n\n            // Resize\n            if (this.resize && resize) {\n                updated = updated || !!delta;\n                this.onResize(delta, resize);\n            }\n\n            if (\n                this.scroll && container.clientWidth < this.wrapper.scrollWidth\n            ) {\n                // Triggering edgescroll from within edgeScrollWidth\n                let x = orientedEvent.clientX;\n\n                // Check direction\n                if (x < wrapperRect.left + this.edgeScrollWidth) {\n                    scrollDirection = -1;\n                } else if (x > wrapperRect.right - this.edgeScrollWidth) {\n                    scrollDirection = 1;\n                } else {\n                    scrollDirection = null;\n                }\n\n                if (scrollDirection) {\n                    edgeScroll(event);\n                }\n            }\n        };\n\n        this.element.addEventListener('mousedown', onDown);\n        this.element.addEventListener('touchstart', onDown);\n\n        document.body.addEventListener('mousemove', onMove);\n        document.body.addEventListener('touchmove', onMove, {passive: false});\n\n        document.addEventListener('mouseup', onUp);\n        document.body.addEventListener('touchend', onUp);\n\n        this.on('remove', () => {\n            document.removeEventListener('mouseup', onUp);\n            document.body.removeEventListener('touchend', onUp);\n            document.body.removeEventListener('mousemove', onMove);\n            document.body.removeEventListener('touchmove', onMove);\n        });\n\n        this.wavesurfer.on('destroy', () => {\n            document.removeEventListener('mouseup', onUp);\n            document.body.removeEventListener('touchend', onUp);\n        });\n    }\n\n    onDrag(delta) {\n        const maxEnd = this.wavesurfer.getDuration();\n        if (this.end + delta > maxEnd) {\n            delta = maxEnd - this.end;\n        }\n\n        if (this.start + delta < 0) {\n            delta = this.start * -1;\n        }\n\n        const eventParams = {\n            direction: this._getDragDirection(delta),\n            action: 'drag'\n        };\n\n        this.update({\n            start: this.start + delta,\n            end: this.end + delta\n        }, eventParams);\n    }\n\n    /**\n     * Returns the direction of dragging region based on delta\n     * Negative delta means region is moving to the left\n     * Positive - to the right\n     * For zero delta the direction is not defined\n     * @param {number} delta Drag offset\n     * @returns {string|null} Direction 'left', 'right' or null\n     */\n    _getDragDirection(delta) {\n        if (delta < 0) {\n            return 'left';\n        }\n        if (delta > 0) {\n            return 'right';\n        }\n        return null;\n    }\n\n    /**\n     * @example\n     * onResize(-5, 'start') // Moves the start point 5 seconds back\n     * onResize(0.5, 'end') // Moves the end point 0.5 seconds forward\n     *\n     * @param {number} delta How much to add or subtract, given in seconds\n     * @param {string} direction 'start 'or 'end'\n     */\n    onResize(delta, direction) {\n        const duration = this.wavesurfer.getDuration();\n        const eventParams = {\n            action: 'resize',\n            direction: direction === 'start' ? 'right' : 'left'\n        };\n\n        if (direction === 'start') {\n            // Check if changing the start by the given delta would result in the region being smaller than minLength\n            // Ignore cases where we are making the region wider rather than shrinking it\n            if (delta > 0 && this.end - (this.start + delta) < this.minLength) {\n                delta = this.end - this.minLength - this.start;\n            }\n\n            if (delta < 0 && (this.start + delta) < 0) {\n                delta = this.start * -1;\n            }\n\n            this.update({\n                start: Math.min(this.start + delta, this.end),\n                end: Math.max(this.start + delta, this.end)\n            }, eventParams);\n        } else {\n            // Check if changing the end by the given delta would result in the region being smaller than minLength\n            // Ignore cases where we are making the region wider rather than shrinking it\n            if (delta < 0 && this.end + delta - this.start < this.minLength) {\n                delta = this.start + this.minLength - this.end;\n            }\n\n            if (delta > 0 && (this.end + delta) > duration) {\n                delta = duration - this.end;\n            }\n\n            this.update({\n                start: Math.min(this.end + delta, this.start),\n                end: Math.max(this.end + delta, this.start)\n            }, eventParams);\n        }\n    }\n\n    updateHandlesResize(resize) {\n        let cursorStyle;\n        if (resize) {\n            cursorStyle = this.vertical ? 'row-resize' : 'col-resize';\n        } else {\n            cursorStyle = 'auto';\n        }\n\n        this.handleLeftEl && this.style(this.handleLeftEl, { cursor: cursorStyle });\n        this.handleRightEl && this.style(this.handleRightEl, { cursor: cursorStyle });\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(23);\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}