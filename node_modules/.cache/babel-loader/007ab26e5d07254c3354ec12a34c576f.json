{"ast":null,"code":"import { Container } from 'pixi.js';\nimport ShapeGraphics from '../common/shapes/ShapeGraphics';\nimport ExtendedGraphics from '../common/shapes/ExtendedGraphics';\nimport { runCustomValidation } from '../../../utils';\nimport { ValidationType } from '../types';\nimport store from '../store/RootStore';\n/**\n * load instance from result\n * @param result\n */\nexport function loadInstancesFromResult(result, ontology) {\n  const instances = result.map(i => {\n    const categoryIndex = ontology.findIndex(o => i.category === o.class_name);\n    return {\n      ...i,\n      categoryIndex\n    };\n  });\n  return instances;\n}\nexport const timeInterval = pxPerSec => {\n  let retVal = 1;\n  if (pxPerSec >= 5000) {\n    retVal = 0.01;\n  } else if (pxPerSec >= 2000) {\n    retVal = 0.02;\n  } else if (pxPerSec >= 1000) {\n    retVal = 0.05;\n  } else if (pxPerSec >= 500) {\n    retVal = 0.1;\n  } else if (pxPerSec >= 100) {\n    retVal = 0.25;\n  } else if (pxPerSec >= 50) {\n    retVal = 0.5;\n  } else if (pxPerSec >= 10) {\n    retVal = 1;\n  } else if (pxPerSec >= 5) {\n    retVal = 12;\n  } else if (pxPerSec >= 1) {\n    retVal = 24;\n  } else if (pxPerSec >= 0.5) {\n    retVal = 120;\n  } else if (pxPerSec >= 0.01) {\n    retVal = 600;\n  } else {\n    retVal = Math.ceil(1 / pxPerSec) * 60;\n  }\n  return retVal;\n};\nexport const formatTimeCallback = (secs, pxPerSec) => {\n  let seconds = Number(secs);\n  const minutes = Math.floor(seconds / 60);\n  seconds %= 60;\n\n  // fill up seconds with zeroes\n  let secondsStr = Math.round(seconds).toString();\n  if (pxPerSec >= 25 * 10) {\n    secondsStr = seconds.toFixed(2);\n  } else if (pxPerSec >= 25 * 1) {\n    secondsStr = seconds.toFixed(1);\n  }\n  secondsStr = seconds >= 10 ? secondsStr : `0${secondsStr}`;\n  return `${minutes || '00'}:${secondsStr}`;\n};\n\n/**\n * format in minutes:seconds:milliseconds, for example, 00:00:000\n * @param second\n * @returns {string}\n */\nexport const formatTimestamp = second => {\n  if (!second || Number.isNaN(second)) {\n    return '00.000';\n  }\n  const arr = [];\n  arr.push(`${Math.floor(second)}`.padStart(2, '0'));\n  second -= Number(arr[0]);\n  arr.push(second.toFixed(4).toString().slice(2));\n  return `${arr[0]}.${arr[1]}`;\n};\nexport function validate(customCheck, params) {\n  return new Promise(async resolve => {\n    const {\n      resultLink,\n      flowData\n    } = params;\n    const results = [];\n    let hasCustomError = false;\n    if (customCheck.length > 0) {\n      // custom check\n      const customResult = await runCustomValidation(customCheck, resultLink, flowData);\n      customResult.results.forEach(result => {\n        results.push({\n          ...result,\n          ...(result.info && result.info),\n          warningType: ValidationType.CUSTOM\n        });\n      });\n      hasCustomError = customResult.hasCustomError;\n    }\n    if (store.setting.scriptCheck) {\n      try {\n        var _store$jobProxy, _store$jobProxy$valid, _store$jobProxy2;\n        const validateResults = (await ((_store$jobProxy = store.jobProxy) === null || _store$jobProxy === void 0 ? void 0 : (_store$jobProxy$valid = _store$jobProxy.validateContent) === null || _store$jobProxy$valid === void 0 ? void 0 : _store$jobProxy$valid.call(_store$jobProxy, resultLink, (_store$jobProxy2 = store.jobProxy) === null || _store$jobProxy2 === void 0 ? void 0 : _store$jobProxy2.flowData))) || [];\n        validateResults.forEach(result => {\n          var _result$data;\n          const out = JSON.parse((result === null || result === void 0 ? void 0 : (_result$data = result.data) === null || _result$data === void 0 ? void 0 : _result$data.out_str) || '{}');\n          if ((result === null || result === void 0 ? void 0 : result.status_code) === 200 && Array.isArray(out)) {\n            out.forEach(item => {\n              results.push({\n                id: item.id,\n                message: item.message,\n                frames: item.frames,\n                info: {\n                  ...item.info\n                },\n                blockSubmit: item.blockSubmit,\n                warningType: ValidationType.SCRIPT\n              });\n            });\n          } else {\n            hasCustomError = true;\n          }\n        });\n      } catch (error) {\n        hasCustomError = true;\n        console.log('script validation error', error);\n      }\n    }\n    resolve({\n      results,\n      hasCustomError\n    });\n  });\n}\nexport function hitTesting(point, localPoint, rootChildren) {\n  return new Promise((resolve, reject) => {\n    const getIntersections = children => {\n      let shapes = [];\n      for (let i = 0; i < children.length; i += 1) {\n        const child = children[i];\n        if (child instanceof ExtendedGraphics) {\n          if (child.interactive && child.containsPoint(point)) {\n            resolve(undefined);\n          }\n        }\n        if (child instanceof ShapeGraphics) {\n          if (child.interactive && child.containsPoint(point)) {\n            shapes.push(child);\n          }\n        } else if (child instanceof Container) {\n          shapes = [...shapes, ...getIntersections(child.children)];\n        }\n      }\n      return shapes;\n    };\n    const intersections = getIntersections(rootChildren);\n    resolve(intersections[0]);\n  });\n}\nexport const wrapText = (ctx, text, x, sy, align, color, fontSize) => {\n  if (ctx) {\n    ctx.textAlign = align;\n    ctx.font = `${(fontSize || 12) * window.devicePixelRatio}px sans-serif`;\n    ctx.fillStyle = color || '#363B44';\n    ctx.fillText(text, x, sy);\n    ctx.stroke();\n  }\n};\nexport const drawRoundedRect = (ctx, x, y, width, height, radius) => {\n  const ptA = {\n    x: x + radius,\n    y\n  };\n  const ptB = {\n    x: x + width,\n    y\n  };\n  const ptC = {\n    x: x + width,\n    y: y + height\n  };\n  const ptD = {\n    x,\n    y: y + height\n  };\n  const ptE = {\n    x,\n    y\n  };\n  ctx.beginPath();\n  ctx.moveTo(ptA.x, ptA.y);\n  ctx.arcTo(ptB.x, ptB.y, ptC.x, ptC.y, radius);\n  ctx.arcTo(ptC.x, ptC.y, ptD.x, ptD.y, radius);\n  ctx.arcTo(ptD.x, ptD.y, ptE.x, ptE.y, radius);\n  ctx.arcTo(ptE.x, ptE.y, ptA.x, ptA.y, radius);\n  ctx.closePath();\n  ctx.fill();\n};","map":{"version":3,"names":["Container","ShapeGraphics","ExtendedGraphics","runCustomValidation","ValidationType","store","loadInstancesFromResult","result","ontology","instances","map","i","categoryIndex","findIndex","o","category","class_name","timeInterval","pxPerSec","retVal","Math","ceil","formatTimeCallback","secs","seconds","Number","minutes","floor","secondsStr","round","toString","toFixed","formatTimestamp","second","isNaN","arr","push","padStart","slice","validate","customCheck","params","Promise","resolve","resultLink","flowData","results","hasCustomError","length","customResult","forEach","info","warningType","CUSTOM","setting","scriptCheck","_store$jobProxy","_store$jobProxy$valid","_store$jobProxy2","validateResults","jobProxy","validateContent","call","_result$data","out","JSON","parse","data","out_str","status_code","Array","isArray","item","id","message","frames","blockSubmit","SCRIPT","error","console","log","hitTesting","point","localPoint","rootChildren","reject","getIntersections","children","shapes","child","interactive","containsPoint","undefined","intersections","wrapText","ctx","text","x","sy","align","color","fontSize","textAlign","font","window","devicePixelRatio","fillStyle","fillText","stroke","drawRoundedRect","y","width","height","radius","ptA","ptB","ptC","ptD","ptE","beginPath","moveTo","arcTo","closePath","fill"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/phonetic-transcription/utils/index.ts"],"sourcesContent":["import { Container, DisplayObject, Point } from 'pixi.js';\nimport ShapeGraphics from '../common/shapes/ShapeGraphics';\nimport ExtendedGraphics from '../common/shapes/ExtendedGraphics';\nimport { runCustomValidation } from '../../../utils';\nimport { ValidationType, Instance, InstanceItem, Ontology } from '../types';\nimport { IWarning } from '../../common/tabs-menu/Validator';\nimport store from '../store/RootStore';\n/**\n * load instance from result\n * @param result\n */\nexport function loadInstancesFromResult(result: InstanceItem[], ontology: Ontology[]) {\n  const instances: Instance[] = result.map((i) => {\n    const categoryIndex = ontology.findIndex((o) => i.category === o.class_name);\n    return {\n      ...i,\n      categoryIndex,\n    };\n  });\n  return instances;\n}\n\nexport const timeInterval = (pxPerSec: number) => {\n  let retVal = 1;\n  if (pxPerSec >= 5000) {\n    retVal = 0.01;\n  } else if (pxPerSec >= 2000) {\n    retVal = 0.02;\n  } else if (pxPerSec >= 1000) {\n    retVal = 0.05;\n  } else if (pxPerSec >= 500) {\n    retVal = 0.1;\n  } else if (pxPerSec >= 100) {\n    retVal = 0.25;\n  } else if (pxPerSec >= 50) {\n    retVal = 0.5;\n  } else if (pxPerSec >= 10) {\n    retVal = 1;\n  } else if (pxPerSec >= 5) {\n    retVal = 12;\n  } else if (pxPerSec >= 1) {\n    retVal = 24;\n  } else if (pxPerSec >= 0.5) {\n    retVal = 120;\n  } else if (pxPerSec >= 0.01) {\n    retVal = 600;\n  } else {\n    retVal = Math.ceil(1 / pxPerSec) * 60;\n  }\n  return retVal;\n};\n\nexport const formatTimeCallback = (secs: number, pxPerSec: number) => {\n  let seconds = Number(secs);\n  const minutes = Math.floor(seconds / 60);\n  seconds %= 60;\n\n  // fill up seconds with zeroes\n  let secondsStr = Math.round(seconds).toString();\n  if (pxPerSec >= 25 * 10) {\n    secondsStr = seconds.toFixed(2);\n  } else if (pxPerSec >= 25 * 1) {\n    secondsStr = seconds.toFixed(1);\n  }\n  secondsStr = seconds >= 10 ? secondsStr : `0${secondsStr}`;\n  return `${minutes || '00'}:${secondsStr}`;\n};\n\n/**\n * format in minutes:seconds:milliseconds, for example, 00:00:000\n * @param second\n * @returns {string}\n */\nexport const formatTimestamp = (second: number) => {\n  if (!second || Number.isNaN(second)) {\n    return '00.000';\n  }\n  const arr = [];\n  arr.push(`${Math.floor(second)}`.padStart(2, '0'));\n  second -= Number(arr[0]);\n  arr.push(second.toFixed(4).toString().slice(2));\n  return `${arr[0]}.${arr[1]}`;\n};\n\nexport function validate(\n  customCheck: string[],\n  params: {\n    resultLink?: string;\n    flowData?: string;\n  },\n) {\n  return new Promise<{\n    results: IWarning[];\n    hasCustomError: boolean;\n  }>(async (resolve) => {\n    const { resultLink, flowData } = params;\n    const results: IWarning[] = [];\n    let hasCustomError = false;\n\n    if (customCheck.length > 0) {\n      // custom check\n      const customResult = await runCustomValidation(customCheck, resultLink!, flowData);\n      customResult.results.forEach((result) => {\n        results.push({ ...result, ...result.info && result.info, warningType: ValidationType.CUSTOM });\n      });\n      hasCustomError = customResult.hasCustomError;\n    }\n\n    if (store.setting.scriptCheck) {\n      try {\n        const validateResults = await store.jobProxy?.validateContent?.(resultLink!, store.jobProxy?.flowData) || [];\n        validateResults.forEach((result: any) => {\n          const out = JSON.parse(result?.data?.out_str || '{}');\n          if (result?.status_code === 200 && Array.isArray(out)) {\n            out.forEach((item) => {\n              results.push({\n                id: item.id,\n                message: item.message,\n                frames: item.frames,\n                info: { ...item.info },\n                blockSubmit: item.blockSubmit,\n                warningType: ValidationType.SCRIPT,\n              });\n            });\n          } else {\n            hasCustomError = true;\n          }\n        });\n      } catch (error) {\n        hasCustomError = true;\n        console.log('script validation error', error);\n      }\n    }\n\n    resolve({ results, hasCustomError });\n  });\n}\n\nexport function hitTesting(point: Point, localPoint: Point, rootChildren: DisplayObject[]) {\n  return new Promise<ShapeGraphics<unknown> | undefined>((resolve, reject) => {\n    const getIntersections = (children: DisplayObject[]) => {\n      let shapes: ShapeGraphics<unknown>[] = [];\n      for (let i = 0; i < children.length; i += 1) {\n        const child = children[i];\n        if (child instanceof ExtendedGraphics) {\n          if (child.interactive && child.containsPoint(point)) {\n            resolve(undefined);\n          }\n        }\n        if (child instanceof ShapeGraphics) {\n          if (child.interactive && child.containsPoint(point)) {\n            shapes.push(child);\n          }\n        } else if (child instanceof Container) {\n          shapes = [...shapes, ...getIntersections(child.children)];\n        }\n      }\n      return shapes;\n    };\n    const intersections = getIntersections(rootChildren);\n    resolve(intersections[0]);\n  });\n}\n\nexport const wrapText = (ctx: CanvasRenderingContext2D | null, text: string, x: number, sy: number, align: CanvasTextAlign, color?: string, fontSize?: number) => {\n  if (ctx) {\n    ctx.textAlign = align;\n    ctx.font = `${(fontSize || 12) * window.devicePixelRatio}px sans-serif`;\n    ctx.fillStyle = color || '#363B44';\n    ctx.fillText(text, x, sy);\n    ctx.stroke();\n  }\n};\n\nexport const drawRoundedRect = (ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number) => {\n  const ptA = { x: x + radius, y };\n  const ptB = { x: x + width, y };\n  const ptC = { x: x + width, y: y + height };\n  const ptD = { x, y: y + height };\n  const ptE = { x, y };\n  ctx.beginPath();\n  ctx.moveTo(ptA.x, ptA.y);\n  ctx.arcTo(ptB.x, ptB.y, ptC.x, ptC.y, radius);\n  ctx.arcTo(ptC.x, ptC.y, ptD.x, ptD.y, radius);\n  ctx.arcTo(ptD.x, ptD.y, ptE.x, ptE.y, radius);\n  ctx.arcTo(ptE.x, ptE.y, ptA.x, ptA.y, radius);\n  ctx.closePath();\n  ctx.fill();\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}