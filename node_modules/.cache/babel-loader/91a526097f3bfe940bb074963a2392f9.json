{"ast":null,"code":"import{EditorState}from'draft-js';import{CODE_BLOCK_TYPE}from'../constants';import setLanguage from'../modifiers/set-language';export default function insertFragmentCallback(updatedEditorState,editorState){const lastContent=editorState.getCurrentContent();const lastSelection=editorState.getSelection();const lastSelectionKey=lastSelection.getStartKey();const lastBlock=lastContent.getBlockForKey(lastSelectionKey);if((lastBlock===null||lastBlock===void 0?void 0:lastBlock.getType())===CODE_BLOCK_TYPE){const language=lastBlock.getData().get('language');if(language){const selection=updatedEditorState.getSelection();const state=setLanguage(updatedEditorState,lastSelectionKey,language);return EditorState.forceSelection(state,selection);}}return updatedEditorState;}","map":{"version":3,"names":["EditorState","CODE_BLOCK_TYPE","setLanguage","insertFragmentCallback","updatedEditorState","editorState","lastContent","getCurrentContent","lastSelection","getSelection","lastSelectionKey","getStartKey","lastBlock","getBlockForKey","getType","language","getData","get","selection","state","forceSelection"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/common/llm/input/callbacks/insert-fragment-callback.ts"],"sourcesContent":["import { EditorState } from 'draft-js';\nimport { CODE_BLOCK_TYPE } from '../constants';\nimport setLanguage from '../modifiers/set-language';\n\nexport default function insertFragmentCallback(updatedEditorState: EditorState, editorState: EditorState) {\n  const lastContent = editorState.getCurrentContent();\n  const lastSelection = editorState.getSelection();\n  const lastSelectionKey = lastSelection.getStartKey();\n  const lastBlock = lastContent.getBlockForKey(lastSelectionKey);\n  if (lastBlock?.getType() === CODE_BLOCK_TYPE) {\n    const language = lastBlock.getData().get('language');\n    if (language) {\n      const selection = updatedEditorState.getSelection();\n      const state = setLanguage(updatedEditorState, lastSelectionKey, language);\n      return EditorState.forceSelection(state, selection);\n    }\n  }\n  return updatedEditorState;\n}\n"],"mappings":"AAAA,OAASA,WAAW,KAAQ,UAAU,CACtC,OAASC,eAAe,KAAQ,cAAc,CAC9C,MAAO,CAAAC,WAAW,KAAM,2BAA2B,CAEnD,cAAe,SAAS,CAAAC,sBAAsBA,CAACC,kBAA+B,CAAEC,WAAwB,CAAE,CACxG,KAAM,CAAAC,WAAW,CAAGD,WAAW,CAACE,iBAAiB,CAAC,CAAC,CACnD,KAAM,CAAAC,aAAa,CAAGH,WAAW,CAACI,YAAY,CAAC,CAAC,CAChD,KAAM,CAAAC,gBAAgB,CAAGF,aAAa,CAACG,WAAW,CAAC,CAAC,CACpD,KAAM,CAAAC,SAAS,CAAGN,WAAW,CAACO,cAAc,CAACH,gBAAgB,CAAC,CAC9D,GAAI,CAAAE,SAAS,SAATA,SAAS,iBAATA,SAAS,CAAEE,OAAO,CAAC,CAAC,IAAKb,eAAe,CAAE,CAC5C,KAAM,CAAAc,QAAQ,CAAGH,SAAS,CAACI,OAAO,CAAC,CAAC,CAACC,GAAG,CAAC,UAAU,CAAC,CACpD,GAAIF,QAAQ,CAAE,CACZ,KAAM,CAAAG,SAAS,CAAGd,kBAAkB,CAACK,YAAY,CAAC,CAAC,CACnD,KAAM,CAAAU,KAAK,CAAGjB,WAAW,CAACE,kBAAkB,CAAEM,gBAAgB,CAAEK,QAAQ,CAAC,CACzE,MAAO,CAAAf,WAAW,CAACoB,cAAc,CAACD,KAAK,CAAED,SAAS,CAAC,CACrD,CACF,CACA,MAAO,CAAAd,kBAAkB,CAC3B","ignoreList":[]},"metadata":{},"sourceType":"module"}