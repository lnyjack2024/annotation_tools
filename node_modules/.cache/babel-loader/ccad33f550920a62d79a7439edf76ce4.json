{"ast":null,"code":"export let CategoryPathShape = /*#__PURE__*/function (CategoryPathShape) {\n  CategoryPathShape[\"CIRCLE\"] = \"circle\";\n  return CategoryPathShape;\n}({});","map":{"version":3,"names":["CategoryPathShape"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/landmark-annotation/types.ts"],"sourcesContent":["export interface CategoryItem {\n  name: string;\n  range: number[];\n  keys: number[];\n}\n\nexport enum CategoryPathShape {\n  CIRCLE = 'circle',\n}\n\nexport interface Point {\n  category?: string;\n  isKeyPoint?: boolean;\n  position?: {\n    x: number;\n    y: number;\n  };\n  visible?: boolean;\n}\n\nexport interface PointListItem extends Point {\n  index?: number;\n}\n\nexport interface StatusItem {\n  before: Status[];\n  after: Status[];\n}\n\nexport type Status =\n  { type: 'point'; status: PointStatus; } |\n  { type: 'category-path-shape'; status: CategoryPathShapeStatus; };\n\nexport interface PointStatus {\n  index: number;\n  point?: Point;\n}\n\nexport interface CategoryPathShapeStatus {\n  category: string;\n  shape?: CategoryPathShape;\n}\n"],"mappings":"AAMA,WAAYA,iBAAiB,0BAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAA,OAAjBA,iBAAiB;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}