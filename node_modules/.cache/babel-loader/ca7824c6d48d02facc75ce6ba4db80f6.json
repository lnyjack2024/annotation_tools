{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/SegmentNavigation/SegmentNavigation.jsx\";\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable no-empty */\nimport React, { useRef, useImperativeHandle, useMemo } from 'react';\nimport { Tooltip } from 'antd';\nimport { connect } from 'react-redux';\nimport { Grid, AutoSizer } from 'react-virtualized';\nimport './SegmentNavigation.scss';\nimport { translate, ValidDurationMode } from '../../constants';\nlet SegmentNavigation = props => {\n  const {\n    currentVideo,\n    currentSegment,\n    videos,\n    keyAttribute,\n    refInstance,\n    results: annotationResults,\n    validDuration\n  } = props;\n  const gridRef = useRef();\n  const handleButtonClick = (e, segmentIndex) => {\n    props.setCurrentSegment({\n      index: segmentIndex\n    });\n  };\n  const size = annotationResults[currentVideo].length;\n  useImperativeHandle(refInstance, () => ({\n    gridRef: gridRef.current\n  }));\n  const getNavigationEnd = index => {\n    const step = props.navigationSize;\n    const min = Math.min(index + step, size);\n    if (min === index + 1) {\n      const text = `${index + 1}`;\n      // eslint-disable-next-line no-nested-ternary\n      const style = text.length > 3 ? {\n        fontSize: '9px',\n        marginLeft: '-3px'\n      } : text.length > 2 ? {\n        fontSize: '11px',\n        marginLeft: '-2px'\n      } : null;\n      return /*#__PURE__*/React.createElement(\"span\", {\n        style: style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 14\n        }\n      }, text);\n    }\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 12\n      }\n    }, `${index + 1}~${min}`);\n  };\n  const containsEmptyText = index => {\n    try {\n      const results = props.results[currentVideo];\n      const max = Math.min(index + props.navigationSize, size);\n      for (let i = index; i < max; i += 1) {\n        var _results$i;\n        if ((_results$i = results[i]) === null || _results$i === void 0 ? void 0 : _results$i.content.some(l => !l.text)) {\n          return true;\n        }\n      }\n    } catch (e) {}\n    return false;\n  };\n  const getTextSnapshot = index => {\n    try {\n      var _props$results$curren, _props$results$curren2, _props$results$curren3, _props$results$curren4;\n      const role = (_props$results$curren = props.results[currentVideo][index]) === null || _props$results$curren === void 0 ? void 0 : (_props$results$curren2 = _props$results$curren.content[0]) === null || _props$results$curren2 === void 0 ? void 0 : _props$results$curren2.role;\n      return (role ? `${role}: ` : '') + ((_props$results$curren3 = props.results[currentVideo][index]) === null || _props$results$curren3 === void 0 ? void 0 : (_props$results$curren4 = _props$results$curren3.content[0]) === null || _props$results$curren4 === void 0 ? void 0 : _props$results$curren4.text);\n    } catch (e) {}\n    return '';\n  };\n  const durationStatistic = useMemo(() => {\n    const objects = {\n      originalDuartion: 0,\n      validDuration: 0,\n      annotatedDuration: 0\n    };\n    const invalidOptions = keyAttribute.options.filter(o => o.isValid === false).map(o => o.value);\n    const currentResults = annotationResults[currentVideo];\n    const {\n      duration\n    } = videos[currentVideo];\n    objects.originalDuartion = duration;\n    for (let j = 0; j < currentResults.length; j += 1) {\n      const {\n        attributes,\n        start,\n        end,\n        content\n      } = currentResults[j];\n      if (start >= duration) break;\n      const time = end - start;\n      let isValid = true;\n      if (validDuration === ValidDurationMode.translations) {\n        const index = content.findIndex(c => c.text && c.text.trim() !== '');\n        if (index < 0) {\n          isValid = false;\n        }\n      } else {\n        const keyAttributeValue = attributes[keyAttribute.name];\n        if (keyAttributeValue && invalidOptions.includes(keyAttributeValue)) {\n          isValid = false;\n        }\n      }\n      objects.annotatedDuration += time;\n      if (isValid) {\n        objects.validDuration += time;\n      }\n    }\n    return objects;\n  }, [videos, annotationResults, currentVideo]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: videos[currentVideo].type === 'video' ? 'calc(60% - 12px)' : 'calc(100% - 12px)'\n    },\n    className: \"segment-navigation-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"duration-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"duration-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, `${translate('originalDuartion')}: `), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, (durationStatistic.originalDuartion || 0).toFixed(2), \"s\")), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"duration-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, `${translate('annotatedDuration')}: `), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, (durationStatistic.annotatedDuration || 0).toFixed(2), \"s\")), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"duration-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, `${translate('validDuration')}: `), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, (durationStatistic.validDuration || 0).toFixed(2), \"s\"))), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, `${translate('navigation')}:`), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"segment-navigation-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AutoSizer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, ({\n    width,\n    height\n  }) => /*#__PURE__*/React.createElement(Grid, {\n    ref: gridRef,\n    style: {\n      outline: 'none'\n    },\n    width: width,\n    height: height,\n    rowCount: Math.ceil(props.results[currentVideo].length / Math.floor(width / 40)),\n    columnCount: Math.floor(width / 40),\n    rowHeight: 40,\n    columnWidth: 40,\n    cellRenderer: ({\n      columnIndex: col,\n      rowIndex: row,\n      key,\n      parent,\n      style\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      style: style,\n      key: key,\n      parent: parent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, row * Math.floor(width / 40) + col >= props.results[currentVideo].length ? null : /*#__PURE__*/React.createElement(Tooltip, {\n      title: getTextSnapshot(row * Math.floor(width / 40) + col),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: `segment-navigation-item ${row * Math.floor(width / 40) + col === currentSegment ? 'segment-navigation-item-focus' : ''} ${containsEmptyText(row * Math.floor(width / 40) + col) ? 'segment-navigation-item-empty' : ''}`,\n      onClick: e => handleButtonClick(e, row * Math.floor(width / 40) + col),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 27\n      }\n    }, getNavigationEnd(row * Math.floor(width / 40) + col)))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }))));\n};\nconst mapStateToProps = state => ({\n  videos: state.videos,\n  results: state.results,\n  currentVideo: state.currentVideo,\n  currentSegment: state.currentSegment,\n  navigationSize: state.navigationSize,\n  validDuration: state.validDuration,\n  keyAttribute: state.keyAttribute,\n  globalConfig: state.globalConfig\n});\nconst mapDispatchToProps = {};\nSegmentNavigation = connect(mapStateToProps, mapDispatchToProps)(SegmentNavigation);\nexport default React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(SegmentNavigation, Object.assign({}, props, {\n  refInstance: ref,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 49\n  }\n})));","map":{"version":3,"names":["React","useRef","useImperativeHandle","useMemo","Tooltip","connect","Grid","AutoSizer","translate","ValidDurationMode","SegmentNavigation","props","currentVideo","currentSegment","videos","keyAttribute","refInstance","results","annotationResults","validDuration","gridRef","handleButtonClick","e","segmentIndex","setCurrentSegment","index","size","length","current","getNavigationEnd","step","navigationSize","min","Math","text","style","fontSize","marginLeft","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","containsEmptyText","max","i","_results$i","content","some","l","getTextSnapshot","_props$results$curren","_props$results$curren2","_props$results$curren3","_props$results$curren4","role","durationStatistic","objects","originalDuartion","annotatedDuration","invalidOptions","options","filter","o","isValid","map","value","currentResults","duration","j","attributes","start","end","time","translations","findIndex","c","trim","keyAttributeValue","name","includes","height","type","className","toFixed","width","ref","outline","rowCount","ceil","floor","columnCount","rowHeight","columnWidth","cellRenderer","columnIndex","col","rowIndex","row","key","parent","title","onClick","mapStateToProps","state","globalConfig","mapDispatchToProps","forwardRef","Object","assign"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/SegmentNavigation/SegmentNavigation.jsx"],"sourcesContent":["/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable no-empty */\nimport React, { useRef, useImperativeHandle, useMemo } from 'react';\nimport { Tooltip } from 'antd';\nimport { connect } from 'react-redux';\nimport { Grid, AutoSizer } from 'react-virtualized';\nimport './SegmentNavigation.scss';\nimport { translate, ValidDurationMode } from '../../constants';\n\nlet SegmentNavigation = (props) => {\n  const {\n    currentVideo, currentSegment, videos, keyAttribute, refInstance,\n    results: annotationResults, validDuration\n  } = props;\n  const gridRef = useRef();\n  const handleButtonClick = (e, segmentIndex) => {\n    props.setCurrentSegment({ index: segmentIndex });\n  };\n\n  const size = annotationResults[currentVideo].length;\n\n  useImperativeHandle(refInstance, () => ({\n    gridRef: gridRef.current\n  }));\n\n  const getNavigationEnd = (index) => {\n    const step = props.navigationSize;\n    const min = Math.min(index + step, size);\n    if (min === index + 1) {\n      const text = `${index + 1}`;\n      // eslint-disable-next-line no-nested-ternary\n      const style = text.length > 3 ? { fontSize: '9px', marginLeft: '-3px' } : text.length > 2 ? { fontSize: '11px', marginLeft: '-2px' } : null;\n      return <span style={style}>{text}</span>;\n    }\n    return <span>{`${index + 1}~${min}`}</span>;\n  };\n\n  const containsEmptyText = (index) => {\n    try {\n      const results = props.results[currentVideo];\n      const max = Math.min(index + props.navigationSize, size);\n      for (let i = index; i < max; i += 1) {\n        if (results[i]?.content.some((l) => !l.text)) {\n          return true;\n        }\n      }\n    } catch (e) {}\n    return false;\n  };\n\n  const getTextSnapshot = (index) => {\n    try {\n      const role = props.results[currentVideo][index]?.content[0]?.role;\n      return (role ? `${role}: ` : '') + props.results[currentVideo][index]?.content[0]?.text;\n    } catch (e) {}\n    return '';\n  };\n\n  const durationStatistic = useMemo(() => {\n    const objects = {\n      originalDuartion: 0,\n      validDuration: 0,\n      annotatedDuration: 0,\n    };\n    const invalidOptions = keyAttribute.options.filter((o) => o.isValid === false).map((o) => o.value);\n    const currentResults = annotationResults[currentVideo];\n    const { duration } = videos[currentVideo];\n    objects.originalDuartion = duration;\n    for (let j = 0; j < currentResults.length; j += 1) {\n      const { attributes, start, end, content } = currentResults[j];\n      if (start >= duration) break;\n      const time = end - start;\n      let isValid = true;\n      if (validDuration === ValidDurationMode.translations) {\n        const index = content.findIndex((c) => c.text && c.text.trim() !== '');\n        if (index < 0) {\n          isValid = false;\n        }\n      } else {\n        const keyAttributeValue = attributes[keyAttribute.name];\n        if (keyAttributeValue && invalidOptions.includes(keyAttributeValue)) {\n          isValid = false;\n        }\n      }\n      objects.annotatedDuration += time;\n      if (isValid) {\n        objects.validDuration += time;\n      }\n    }\n    return objects;\n  }, [videos, annotationResults, currentVideo]);\n\n  return (\n    <div\n      style={{ height: videos[currentVideo].type === 'video' ? 'calc(60% - 12px)' : 'calc(100% - 12px)' }}\n      className=\"segment-navigation-container\"\n    >\n      <div className=\"duration-box\">\n        <span className=\"duration-item\">\n          <span>{`${translate('originalDuartion')}: `}</span>\n          <span className=\"value\">\n            {(durationStatistic.originalDuartion || 0).toFixed(2)}\n            s\n          </span>\n        </span>\n        <span className=\"duration-item\">\n          <span>{`${translate('annotatedDuration')}: `}</span>\n          <span className=\"value\">\n            {(durationStatistic.annotatedDuration || 0).toFixed(2)}\n            s\n          </span>\n        </span>\n        <span className=\"duration-item\">\n          <span>{`${translate('validDuration')}: `}</span>\n          <span className=\"value\">\n            {(durationStatistic.validDuration || 0).toFixed(2)}\n            s\n          </span>\n        </span>\n      </div>\n      <span>{`${translate('navigation')}:`}</span>\n      <div className=\"segment-navigation-list\">\n        <AutoSizer>\n          {({ width, height }) => (\n            <Grid\n              ref={gridRef}\n              style={{ outline: 'none' }}\n              width={width}\n              height={height}\n              rowCount={Math.ceil(props.results[currentVideo].length / Math.floor(width / 40))}\n              columnCount={Math.floor(width / 40)}\n              rowHeight={40}\n              columnWidth={40}\n              cellRenderer={({ columnIndex: col, rowIndex: row, key, parent, style }) => (\n                <div\n                  style={style}\n                  key={key}\n                  parent={parent}\n                >\n                  {\n                    row * Math.floor(width / 40) + col >= props.results[currentVideo].length\n                      ? null\n                      : (\n                        <Tooltip\n                          title={getTextSnapshot(row * Math.floor(width / 40) + col)}\n                        >\n                          <button\n                            className={`segment-navigation-item ${row * Math.floor(width / 40) + col === currentSegment ? 'segment-navigation-item-focus' : ''} ${containsEmptyText(row * Math.floor(width / 40) + col) ? 'segment-navigation-item-empty' : ''}`}\n                            onClick={(e) => handleButtonClick(e, row * Math.floor(width / 40) + col)}\n                          >\n                            {getNavigationEnd(row * Math.floor(width / 40) + col)}\n                          </button>\n                        </Tooltip>\n                      )\n                  }\n                </div>\n              )}\n            />\n          )}\n        </AutoSizer>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  videos: state.videos,\n  results: state.results,\n  currentVideo: state.currentVideo,\n  currentSegment: state.currentSegment,\n  navigationSize: state.navigationSize,\n  validDuration: state.validDuration,\n  keyAttribute: state.keyAttribute,\n  globalConfig: state.globalConfig,\n});\nconst mapDispatchToProps = {};\n\nSegmentNavigation = connect(mapStateToProps, mapDispatchToProps)(SegmentNavigation);\nexport default React.forwardRef((props, ref) => <SegmentNavigation {...props} refInstance={ref} />);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}