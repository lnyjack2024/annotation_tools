{"ast":null,"code":"/*\n * JavaScript Load Image Fetch\n * https://github.com/blueimp/JavaScript-Load-Image\n *\n * Copyright 2017, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n */\n\n/* global define, module, require, Promise */\n\n;\n(function (factory) {\n  'use strict';\n\n  if (typeof define === 'function' && define.amd) {\n    // Register as an anonymous AMD module:\n    define(['./load-image'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    factory(require('./load-image'));\n  } else {\n    // Browser globals:\n    factory(window.loadImage);\n  }\n})(function (loadImage) {\n  'use strict';\n\n  var global = loadImage.global;\n  if (global.fetch && global.Request && global.Response && global.Response.prototype.blob) {\n    loadImage.fetchBlob = function (url, callback, options) {\n      /**\n       * Fetch response handler.\n       *\n       * @param {Response} response Fetch response\n       * @returns {Blob} Fetched Blob.\n       */\n      function responseHandler(response) {\n        return response.blob();\n      }\n      if (global.Promise && typeof callback !== 'function') {\n        return fetch(new Request(url, callback)).then(responseHandler);\n      }\n      fetch(new Request(url, options)).then(responseHandler).then(callback)[\n      // Avoid parsing error in IE<9, where catch is a reserved word.\n      // eslint-disable-next-line dot-notation\n      'catch'](function (err) {\n        callback(null, err);\n      });\n    };\n  } else if (global.XMLHttpRequest &&\n  // https://xhr.spec.whatwg.org/#the-responsetype-attribute\n  new XMLHttpRequest().responseType === '') {\n    loadImage.fetchBlob = function (url, callback, options) {\n      /**\n       * Promise executor\n       *\n       * @param {Function} resolve Resolution function\n       * @param {Function} reject Rejection function\n       */\n      function executor(resolve, reject) {\n        options = options || {}; // eslint-disable-line no-param-reassign\n        var req = new XMLHttpRequest();\n        req.open(options.method || 'GET', url);\n        if (options.headers) {\n          Object.keys(options.headers).forEach(function (key) {\n            req.setRequestHeader(key, options.headers[key]);\n          });\n        }\n        req.withCredentials = options.credentials === 'include';\n        req.responseType = 'blob';\n        req.onload = function () {\n          resolve(req.response);\n        };\n        req.onerror = req.onabort = req.ontimeout = function (err) {\n          if (resolve === reject) {\n            // Not using Promises\n            reject(null, err);\n          } else {\n            reject(err);\n          }\n        };\n        req.send(options.body);\n      }\n      if (global.Promise && typeof callback !== 'function') {\n        options = callback; // eslint-disable-line no-param-reassign\n        return new Promise(executor);\n      }\n      return executor(callback, callback);\n    };\n  }\n});","map":{"version":3,"names":["factory","define","amd","module","exports","require","window","loadImage","global","fetch","Request","Response","prototype","blob","fetchBlob","url","callback","options","responseHandler","response","Promise","then","err","XMLHttpRequest","responseType","executor","resolve","reject","req","open","method","headers","Object","keys","forEach","key","setRequestHeader","withCredentials","credentials","onload","onerror","onabort","ontimeout","send","body"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/node_modules/blueimp-load-image/js/load-image-fetch.js"],"sourcesContent":["/*\n * JavaScript Load Image Fetch\n * https://github.com/blueimp/JavaScript-Load-Image\n *\n * Copyright 2017, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n */\n\n/* global define, module, require, Promise */\n\n;(function (factory) {\n  'use strict'\n  if (typeof define === 'function' && define.amd) {\n    // Register as an anonymous AMD module:\n    define(['./load-image'], factory)\n  } else if (typeof module === 'object' && module.exports) {\n    factory(require('./load-image'))\n  } else {\n    // Browser globals:\n    factory(window.loadImage)\n  }\n})(function (loadImage) {\n  'use strict'\n\n  var global = loadImage.global\n\n  if (\n    global.fetch &&\n    global.Request &&\n    global.Response &&\n    global.Response.prototype.blob\n  ) {\n    loadImage.fetchBlob = function (url, callback, options) {\n      /**\n       * Fetch response handler.\n       *\n       * @param {Response} response Fetch response\n       * @returns {Blob} Fetched Blob.\n       */\n      function responseHandler(response) {\n        return response.blob()\n      }\n      if (global.Promise && typeof callback !== 'function') {\n        return fetch(new Request(url, callback)).then(responseHandler)\n      }\n      fetch(new Request(url, options))\n        .then(responseHandler)\n        .then(callback)\n        [\n          // Avoid parsing error in IE<9, where catch is a reserved word.\n          // eslint-disable-next-line dot-notation\n          'catch'\n        ](function (err) {\n          callback(null, err)\n        })\n    }\n  } else if (\n    global.XMLHttpRequest &&\n    // https://xhr.spec.whatwg.org/#the-responsetype-attribute\n    new XMLHttpRequest().responseType === ''\n  ) {\n    loadImage.fetchBlob = function (url, callback, options) {\n      /**\n       * Promise executor\n       *\n       * @param {Function} resolve Resolution function\n       * @param {Function} reject Rejection function\n       */\n      function executor(resolve, reject) {\n        options = options || {} // eslint-disable-line no-param-reassign\n        var req = new XMLHttpRequest()\n        req.open(options.method || 'GET', url)\n        if (options.headers) {\n          Object.keys(options.headers).forEach(function (key) {\n            req.setRequestHeader(key, options.headers[key])\n          })\n        }\n        req.withCredentials = options.credentials === 'include'\n        req.responseType = 'blob'\n        req.onload = function () {\n          resolve(req.response)\n        }\n        req.onerror =\n          req.onabort =\n          req.ontimeout =\n            function (err) {\n              if (resolve === reject) {\n                // Not using Promises\n                reject(null, err)\n              } else {\n                reject(err)\n              }\n            }\n        req.send(options.body)\n      }\n      if (global.Promise && typeof callback !== 'function') {\n        options = callback // eslint-disable-line no-param-reassign\n        return new Promise(executor)\n      }\n      return executor(callback, callback)\n    }\n  }\n})\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AAAC,CAAC,UAAUA,OAAO,EAAE;EACnB,YAAY;;EACZ,IAAI,OAAOC,MAAM,KAAK,UAAU,IAAIA,MAAM,CAACC,GAAG,EAAE;IAC9C;IACAD,MAAM,CAAC,CAAC,cAAc,CAAC,EAAED,OAAO,CAAC;EACnC,CAAC,MAAM,IAAI,OAAOG,MAAM,KAAK,QAAQ,IAAIA,MAAM,CAACC,OAAO,EAAE;IACvDJ,OAAO,CAACK,OAAO,CAAC,cAAc,CAAC,CAAC;EAClC,CAAC,MAAM;IACL;IACAL,OAAO,CAACM,MAAM,CAACC,SAAS,CAAC;EAC3B;AACF,CAAC,EAAE,UAAUA,SAAS,EAAE;EACtB,YAAY;;EAEZ,IAAIC,MAAM,GAAGD,SAAS,CAACC,MAAM;EAE7B,IACEA,MAAM,CAACC,KAAK,IACZD,MAAM,CAACE,OAAO,IACdF,MAAM,CAACG,QAAQ,IACfH,MAAM,CAACG,QAAQ,CAACC,SAAS,CAACC,IAAI,EAC9B;IACAN,SAAS,CAACO,SAAS,GAAG,UAAUC,GAAG,EAAEC,QAAQ,EAAEC,OAAO,EAAE;MACtD;AACN;AACA;AACA;AACA;AACA;MACM,SAASC,eAAeA,CAACC,QAAQ,EAAE;QACjC,OAAOA,QAAQ,CAACN,IAAI,CAAC,CAAC;MACxB;MACA,IAAIL,MAAM,CAACY,OAAO,IAAI,OAAOJ,QAAQ,KAAK,UAAU,EAAE;QACpD,OAAOP,KAAK,CAAC,IAAIC,OAAO,CAACK,GAAG,EAAEC,QAAQ,CAAC,CAAC,CAACK,IAAI,CAACH,eAAe,CAAC;MAChE;MACAT,KAAK,CAAC,IAAIC,OAAO,CAACK,GAAG,EAAEE,OAAO,CAAC,CAAC,CAC7BI,IAAI,CAACH,eAAe,CAAC,CACrBG,IAAI,CAACL,QAAQ,CAAC;MAEb;MACA;MACA,OAAO,CACR,CAAC,UAAUM,GAAG,EAAE;QACfN,QAAQ,CAAC,IAAI,EAAEM,GAAG,CAAC;MACrB,CAAC,CAAC;IACN,CAAC;EACH,CAAC,MAAM,IACLd,MAAM,CAACe,cAAc;EACrB;EACA,IAAIA,cAAc,CAAC,CAAC,CAACC,YAAY,KAAK,EAAE,EACxC;IACAjB,SAAS,CAACO,SAAS,GAAG,UAAUC,GAAG,EAAEC,QAAQ,EAAEC,OAAO,EAAE;MACtD;AACN;AACA;AACA;AACA;AACA;MACM,SAASQ,QAAQA,CAACC,OAAO,EAAEC,MAAM,EAAE;QACjCV,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC,EAAC;QACxB,IAAIW,GAAG,GAAG,IAAIL,cAAc,CAAC,CAAC;QAC9BK,GAAG,CAACC,IAAI,CAACZ,OAAO,CAACa,MAAM,IAAI,KAAK,EAAEf,GAAG,CAAC;QACtC,IAAIE,OAAO,CAACc,OAAO,EAAE;UACnBC,MAAM,CAACC,IAAI,CAAChB,OAAO,CAACc,OAAO,CAAC,CAACG,OAAO,CAAC,UAAUC,GAAG,EAAE;YAClDP,GAAG,CAACQ,gBAAgB,CAACD,GAAG,EAAElB,OAAO,CAACc,OAAO,CAACI,GAAG,CAAC,CAAC;UACjD,CAAC,CAAC;QACJ;QACAP,GAAG,CAACS,eAAe,GAAGpB,OAAO,CAACqB,WAAW,KAAK,SAAS;QACvDV,GAAG,CAACJ,YAAY,GAAG,MAAM;QACzBI,GAAG,CAACW,MAAM,GAAG,YAAY;UACvBb,OAAO,CAACE,GAAG,CAACT,QAAQ,CAAC;QACvB,CAAC;QACDS,GAAG,CAACY,OAAO,GACTZ,GAAG,CAACa,OAAO,GACXb,GAAG,CAACc,SAAS,GACX,UAAUpB,GAAG,EAAE;UACb,IAAII,OAAO,KAAKC,MAAM,EAAE;YACtB;YACAA,MAAM,CAAC,IAAI,EAAEL,GAAG,CAAC;UACnB,CAAC,MAAM;YACLK,MAAM,CAACL,GAAG,CAAC;UACb;QACF,CAAC;QACLM,GAAG,CAACe,IAAI,CAAC1B,OAAO,CAAC2B,IAAI,CAAC;MACxB;MACA,IAAIpC,MAAM,CAACY,OAAO,IAAI,OAAOJ,QAAQ,KAAK,UAAU,EAAE;QACpDC,OAAO,GAAGD,QAAQ,EAAC;QACnB,OAAO,IAAII,OAAO,CAACK,QAAQ,CAAC;MAC9B;MACA,OAAOA,QAAQ,CAACT,QAAQ,EAAEA,QAAQ,CAAC;IACrC,CAAC;EACH;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}