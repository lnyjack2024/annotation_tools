{"ast":null,"code":"import React,{useState,useEffect}from'react';import{ContextMenu,MenuItem,ContextMenuTrigger}from'react-contextmenu';import{PlusCircleOutlined}from'@ant-design/icons';import cx from'classnames';import{LandmarkEditType,DELETETYPE}from'../types';import RectangleFillIcon from'../../common/icons/RectangleFill';import KeypointsIcon from'../../common/icons/Keypoints';import DownArrow from'../../common/icons/DownArrow';import rootStore from'../store/RootStore';import formatMessage from'../locales';import{DotFill,PlusCircleStroke}from'../../common/icons';import'./SideMenus.scss';import{observer}from'mobx-react';var MENUTYPE=/*#__PURE__*/function(MENUTYPE){MENUTYPE[\"DELETE\"]=\"delete\";return MENUTYPE;}(MENUTYPE||{});const SideMenus=_ref=>{let{canvas,readonly,loading,currentFrame,selectedOntologyGroup,instances,selectedInstance,instancesReviewsMap,selectGroup,addInstance,addInstanceInFrame,removeInstanceFrames}=_ref;const[unfoldOntology,setUnfoldOntology]=useState([]);const[delIsntace,setDelInstance]=useState();useEffect(()=>{if(selectedInstance){if(unfoldOntology.length===0){setUnfoldOntology([selectedInstance.category]);}else{const newUnfoldOntology=[...unfoldOntology];const index=newUnfoldOntology.findIndex(v=>v===selectedInstance.category);if(index<0){newUnfoldOntology.push(selectedInstance.category);setUnfoldOntology(newUnfoldOntology);}}}},[selectedInstance]);const handleUnFold=name=>{const newUnfoldOntology=[...unfoldOntology];const index=newUnfoldOntology.findIndex(v=>v===name);if(index>=0){newUnfoldOntology.splice(index,1);}else{newUnfoldOntology.push(name);}setUnfoldOntology(newUnfoldOntology);};const menuHandleClick=type=>{if(!delIsntace)return;removeInstanceFrames(type,delIsntace.instance,delIsntace.name);setDelInstance(null);};const Instances=_ref2=>{let{ontologyInstances,ontology,isUnfold}=_ref2;return/*#__PURE__*/React.createElement(\"div\",{className:\"instances-container\",style:isUnfold?{height:'auto'}:{}},ontologyInstances.map(instance=>{let empty=true;for(let i=0;i<instance.children.length;i+=1){const currentframeGroup=instance.children[i].frames[currentFrame];if(currentframeGroup&&currentframeGroup.count>0){empty=false;break;}}const instanceCanAdd=instance.notEmpty>0&&empty&&!readonly;return/*#__PURE__*/React.createElement(\"div\",{className:\"instance\",key:instance.id},/*#__PURE__*/React.createElement(ContextMenuTrigger,{id:MENUTYPE.DELETE,holdToDisplay:1000},/*#__PURE__*/React.createElement(\"div\",{className:cx('instance-label',{empty:instanceCanAdd}),onContextMenu:e=>{if(readonly){e.preventDefault();}else{setDelInstance({instance});}}},/*#__PURE__*/React.createElement(\"span\",null,\"\".concat(ontology.display_name||ontology.class_name,\" \").concat(instance.number).concat(!instance.notEmpty?'（empty）':'')),instanceCanAdd&&/*#__PURE__*/React.createElement(\"span\",{className:\"add right\",onClick:()=>{addInstanceInFrame(instance.id);}},/*#__PURE__*/React.createElement(PlusCircleStroke,null)))),/*#__PURE__*/React.createElement(\"div\",{className:\"instance-group\"},ontology.children.map((group,n)=>{var _instancesReviewsMap$,_instancesReviewsMap$2,_instancesReviewsMap$3,_instancesReviewsMap$4;const child=instance.children.find(g=>g.name===group.name);const groupIsEmpty=!child||child.frames[currentFrame]===undefined||child.frames[currentFrame].count===0;const canAdd=child&&child.count>0&&groupIsEmpty&&!readonly||false;return/*#__PURE__*/React.createElement(ContextMenuTrigger,{id:MENUTYPE.DELETE,holdToDisplay:1000,key:instance.id+group.name},/*#__PURE__*/React.createElement(\"div\",{className:cx('instance-group-item',{empty:canAdd}),style:selectedInstance&&selectedInstance.id===instance.id&&selectedOntologyGroup===group.name?{backgroundColor:'#4A90E2'}:{},onClick:()=>{if((instance.id!==(selectedInstance===null||selectedInstance===void 0?void 0:selectedInstance.id)||group.name!==selectedOntologyGroup)&&!loading){selectGroup(instance.id,group.name);}},onContextMenu:()=>{if(!readonly){setDelInstance({instance,name:group.name});}}},/*#__PURE__*/React.createElement(\"div\",{className:\"icon\"},group.type===LandmarkEditType.KEYPOINT?/*#__PURE__*/React.createElement(KeypointsIcon,null):/*#__PURE__*/React.createElement(RectangleFillIcon,null)),/*#__PURE__*/React.createElement(\"div\",{className:\"name\"},group.display_name||group.name),canAdd?/*#__PURE__*/React.createElement(\"div\",{className:\"add right\",onClick:e=>{e.preventDefault();addInstanceInFrame(instance.id,group.name);}},/*#__PURE__*/React.createElement(PlusCircleStroke,null)):/*#__PURE__*/React.createElement(\"div\",{className:\"right\"},/*#__PURE__*/React.createElement(\"span\",{className:cx('dot',\"\".concat((_instancesReviewsMap$=instancesReviewsMap[instance.id])===null||_instancesReviewsMap$===void 0?void 0:(_instancesReviewsMap$2=_instancesReviewsMap$[currentFrame])===null||_instancesReviewsMap$2===void 0?void 0:(_instancesReviewsMap$3=_instancesReviewsMap$2.children)===null||_instancesReviewsMap$3===void 0?void 0:(_instancesReviewsMap$4=_instancesReviewsMap$3[group.name])===null||_instancesReviewsMap$4===void 0?void 0:_instancesReviewsMap$4.result))}),/*#__PURE__*/React.createElement(\"span\",{className:\"number\"},instance.children[n].frames[currentFrame]&&instance.children[n].frames[currentFrame].count||0))));})));}));};const Ontology=_ref3=>{let{ontology,ontologyInstances,canAdd}=_ref3;const isUnfold=unfoldOntology&&unfoldOntology.findIndex(v=>v===ontology.class_name)>=0;return/*#__PURE__*/React.createElement(\"div\",{className:\"ontology-item\",key:ontology.class_name},/*#__PURE__*/React.createElement(\"div\",{className:\"ontology-item-label\"},/*#__PURE__*/React.createElement(\"div\",{className:\"label-left\"},/*#__PURE__*/React.createElement(\"span\",{className:\"label-color\",style:{backgroundColor:ontology.display_color}}),/*#__PURE__*/React.createElement(\"span\",{className:\"label-name\"},ontology.display_name||ontology.class_name)),/*#__PURE__*/React.createElement(\"div\",{className:\"label-right\"},/*#__PURE__*/React.createElement(\"span\",{className:\"number\"},ontologyInstances.length),/*#__PURE__*/React.createElement(\"span\",{className:cx('label-add',{disabled:!canAdd}),onClick:()=>{if(canAdd){addInstance(ontology.class_name);if(!unfoldOntology.find(v=>v===ontology.class_name)){handleUnFold(ontology.class_name);}}}},/*#__PURE__*/React.createElement(PlusCircleOutlined,{className:\"icon\"})),/*#__PURE__*/React.createElement(\"span\",{className:cx('label-arrow',{unfold:isUnfold}),onClick:()=>{handleUnFold(ontology.class_name);}},/*#__PURE__*/React.createElement(DownArrow,null)))),/*#__PURE__*/React.createElement(Instances,{currentFrame:currentFrame,ontologyInstances:ontologyInstances,ontology:ontology,isUnfold:isUnfold,selectedOntologyGroup:selectedOntologyGroup}));};const Missings=observer(()=>{if(!rootStore.review.showReviews){return null;}const{drawMode,missingName,missingReviews,selectedMissingReview}=rootStore.review;const currentFrameMissingReviews=missingReviews.filter(r=>r.frameIndex===currentFrame);const canAdd=!drawMode&&(!selectedMissingReview||selectedMissingReview.data!==undefined);const isUnfold=unfoldOntology.findIndex(i=>i===rootStore.review.missingName)>=0;return/*#__PURE__*/React.createElement(\"div\",{className:\"ontology-item\"},/*#__PURE__*/React.createElement(\"div\",{className:\"ontology-item-label\"},/*#__PURE__*/React.createElement(\"div\",{className:\"label-left\"},/*#__PURE__*/React.createElement(\"span\",{className:\"label-color\"}),/*#__PURE__*/React.createElement(\"span\",{className:\"label-name\"},\"Missing\")),/*#__PURE__*/React.createElement(\"div\",{className:\"label-right\"},/*#__PURE__*/React.createElement(\"span\",{className:\"number\"},currentFrameMissingReviews.length),/*#__PURE__*/React.createElement(\"span\",{className:cx('label-add',{disabled:!canAdd}),onClick:()=>{if(canAdd){rootStore.review.addMissingReview(currentFrame);if(!isUnfold){handleUnFold(missingName);}}}},/*#__PURE__*/React.createElement(PlusCircleOutlined,{className:\"icon\"})),/*#__PURE__*/React.createElement(\"span\",{className:cx('label-arrow',{unfold:isUnfold}),onClick:()=>{handleUnFold(missingName);}},/*#__PURE__*/React.createElement(DownArrow,null)))),/*#__PURE__*/React.createElement(\"div\",{className:\"instances-container\",style:{...(isUnfold&&{height:'auto'})}},currentFrameMissingReviews.map(r=>/*#__PURE__*/React.createElement(\"div\",{className:\"instance missing\",key:r.id},/*#__PURE__*/React.createElement(\"div\",{className:\"instance-label\"},/*#__PURE__*/React.createElement(\"span\",null,\"Missing \".concat(r.number))),/*#__PURE__*/React.createElement(\"div\",{className:\"instance-group\"},/*#__PURE__*/React.createElement(\"div\",{className:cx('instance-group-item missing',{selected:(selectedMissingReview===null||selectedMissingReview===void 0?void 0:selectedMissingReview.id)===r.id}),onClick:()=>{var _r$data;rootStore.review.setSelectedMissingReview(r);if((_r$data=r.data)===null||_r$data===void 0?void 0:_r$data.position){canvas===null||canvas===void 0?void 0:canvas.fitPoint(r.data.position);}}},/*#__PURE__*/React.createElement(\"div\",{className:\"icon\"},/*#__PURE__*/React.createElement(DotFill,null)),/*#__PURE__*/React.createElement(\"div\",{className:\"name\"},\"Dot\")))))));});return/*#__PURE__*/React.createElement(\"div\",{className:\"side-menus-container\",onContextMenu:e=>e.preventDefault()},/*#__PURE__*/React.createElement(\"div\",{className:\"side-menus-box\"},/*#__PURE__*/React.createElement(Missings,null),rootStore.ontology.ontology.map(ontologyItem=>{const ontologyInstances=instances.filter(instance=>instance.category===ontologyItem.class_name);return/*#__PURE__*/React.createElement(Ontology,{key:ontologyItem.class_name,ontology:ontologyItem,ontologyInstances:ontologyInstances,canAdd:ontologyInstances.filter(instance=>!instance.notEmpty).length<=0&&!readonly});})),!readonly&&/*#__PURE__*/React.createElement(ContextMenu,{id:MENUTYPE.DELETE},Object.keys(DELETETYPE).map(v=>/*#__PURE__*/React.createElement(MenuItem,{key:v,onClick:()=>{menuHandleClick(v);}},formatMessage(\"DELETE_\".concat(v,\"_FRAMES\"))))));};export default SideMenus;","map":{"version":3,"names":["React","useState","useEffect","ContextMenu","MenuItem","ContextMenuTrigger","PlusCircleOutlined","cx","LandmarkEditType","DELETETYPE","RectangleFillIcon","KeypointsIcon","DownArrow","rootStore","formatMessage","DotFill","PlusCircleStroke","observer","MENUTYPE","SideMenus","_ref","canvas","readonly","loading","currentFrame","selectedOntologyGroup","instances","selectedInstance","instancesReviewsMap","selectGroup","addInstance","addInstanceInFrame","removeInstanceFrames","unfoldOntology","setUnfoldOntology","delIsntace","setDelInstance","length","category","newUnfoldOntology","index","findIndex","v","push","handleUnFold","name","splice","menuHandleClick","type","instance","Instances","_ref2","ontologyInstances","ontology","isUnfold","createElement","className","style","height","map","empty","i","children","currentframeGroup","frames","count","instanceCanAdd","notEmpty","key","id","DELETE","holdToDisplay","onContextMenu","e","preventDefault","concat","display_name","class_name","number","onClick","group","n","_instancesReviewsMap$","_instancesReviewsMap$2","_instancesReviewsMap$3","_instancesReviewsMap$4","child","find","g","groupIsEmpty","undefined","canAdd","backgroundColor","KEYPOINT","result","Ontology","_ref3","display_color","disabled","unfold","Missings","review","showReviews","drawMode","missingName","missingReviews","selectedMissingReview","currentFrameMissingReviews","filter","r","frameIndex","data","addMissingReview","selected","_r$data","setSelectedMissingReview","position","fitPoint","ontologyItem","Object","keys"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/keypoint/components/SideMenus.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from 'react-contextmenu';\nimport { PlusCircleOutlined } from '@ant-design/icons';\nimport cx from 'classnames';\nimport { InstanceAct, LandmarkEditType, DELETETYPE, Frame } from '../types';\nimport RectangleFillIcon from '../../common/icons/RectangleFill';\nimport KeypointsIcon from '../../common/icons/Keypoints';\nimport DownArrow from '../../common/icons/DownArrow';\nimport { InstancesReviewsMap } from '../index';\nimport rootStore from '../store/RootStore';\nimport { OntologyChild, OntologyItem } from '../store/OntologyStore';\nimport formatMessage from '../locales';\nimport { DotFill, PlusCircleStroke } from '../../common/icons';\nimport './SideMenus.scss';\nimport Canvas from './Canvas';\nimport { observer } from 'mobx-react';\n\nenum MENUTYPE {\n  DELETE = 'delete'\n}\n\nexport interface SideMenusProps {\n  canvas: Canvas | null;\n  readonly: boolean;\n  loading: boolean;\n  currentFrame: number;\n  instances: InstanceAct[];\n  instancesFrames: {\n    [id: string]: {\n      [frameIndex: number]: boolean;\n    }\n  },\n  selectedInstance?: InstanceAct;\n  selectedOntologyGroup: string;\n  instancesReviewsMap: InstancesReviewsMap;\n  addInstance: (ontologyName: string) => void;\n  selectGroup: (groupId: string, name: string) => void;\n  addInstanceInFrame: (instanceId: string, groupName?: string) => void;\n  removeInstanceFrames: (type: DELETETYPE, instance: InstanceAct, name?: string) => void;\n}\n\ntype OntologyProps = {\n  ontology: OntologyItem;\n  ontologyInstances: InstanceAct[];\n  canAdd: boolean;\n};\n\ntype InstanceProps = {\n  currentFrame: number;\n  ontologyInstances: InstanceAct[];\n  ontology: OntologyItem;\n  isUnfold: boolean;\n  selectedOntologyGroup: string;\n};\n\ninterface DelInstance {\n  instance: InstanceAct,\n  name?: string\n}\n\nconst SideMenus = ({\n  canvas,\n  readonly,\n  loading,\n  currentFrame,\n  selectedOntologyGroup,\n  instances,\n  selectedInstance,\n  instancesReviewsMap,\n  selectGroup,\n  addInstance,\n  addInstanceInFrame,\n  removeInstanceFrames\n}: SideMenusProps) => {\n  const [unfoldOntology, setUnfoldOntology] = useState<string[]>([]);\n  const [delIsntace, setDelInstance] = useState<DelInstance | null>();\n\n  useEffect(() => {\n    if (selectedInstance) {\n      if (unfoldOntology.length === 0) {\n        setUnfoldOntology([selectedInstance.category]);\n      } else {\n        const newUnfoldOntology = [...unfoldOntology];\n        const index = newUnfoldOntology.findIndex((v) => v === selectedInstance.category);\n        if (index < 0) {\n          newUnfoldOntology.push(selectedInstance.category);\n          setUnfoldOntology(newUnfoldOntology);\n        }\n      }\n    }\n  }, [selectedInstance]);\n  const handleUnFold = (name: string) => {\n    const newUnfoldOntology = [...unfoldOntology];\n    const index = newUnfoldOntology.findIndex((v) => v === name);\n    if (index >= 0) {\n      newUnfoldOntology.splice(index, 1);\n    } else {\n      newUnfoldOntology.push(name);\n    }\n    setUnfoldOntology(newUnfoldOntology);\n  };\n\n  const menuHandleClick = (type: DELETETYPE) => {\n    if (!delIsntace) return;\n    removeInstanceFrames(type, delIsntace.instance, delIsntace.name);\n    setDelInstance(null);\n  };\n\n  const Instances = ({\n    ontologyInstances,\n    ontology,\n    isUnfold\n  }: InstanceProps) => (\n    <div\n      className=\"instances-container\"\n      style={isUnfold ? { height: 'auto' } : {}}\n    >\n      {ontologyInstances.map((instance: InstanceAct) => {\n        let empty = true;\n        for (let i = 0; i < instance.children.length; i += 1) {\n          const currentframeGroup = instance.children[i].frames[currentFrame];\n          if (currentframeGroup && currentframeGroup.count > 0) {\n            empty = false;\n            break;\n          }\n        }\n        const instanceCanAdd = instance.notEmpty > 0 && empty && !readonly;\n        return (\n          <div className=\"instance\" key={instance.id}>\n            <ContextMenuTrigger\n              id={MENUTYPE.DELETE}\n              holdToDisplay={1000}\n            >\n              <div\n                className={cx('instance-label', { empty: instanceCanAdd })}\n                onContextMenu={(e) => {\n                  if (readonly) {\n                    e.preventDefault();\n                  } else {\n                    setDelInstance({ instance });\n                  }\n                }}\n              >\n                <span>{`${ontology.display_name || ontology.class_name} ${instance.number}${!instance.notEmpty ? '（empty）' : ''}`}</span>\n                {instanceCanAdd && (\n                  <span\n                    className=\"add right\"\n                    onClick={() => { addInstanceInFrame(instance.id); }}\n                  >\n                    <PlusCircleStroke />\n                  </span>\n                )}\n              </div>\n            </ContextMenuTrigger>\n            <div className=\"instance-group\">\n              {ontology.children.map((group: OntologyChild, n: number) => {\n                const child = instance.children.find((g) => g.name === group.name);\n                const groupIsEmpty = !child || (child.frames[currentFrame] === undefined || child.frames[currentFrame].count === 0);\n                const canAdd = child && child.count > 0 && groupIsEmpty && !readonly || false;\n                return (\n                  <ContextMenuTrigger id={MENUTYPE.DELETE} holdToDisplay={1000} key={instance.id + group.name}>\n                    <div\n                      className={cx('instance-group-item', { empty: canAdd })}\n                      style={selectedInstance && selectedInstance.id === instance.id && selectedOntologyGroup === group.name ? { backgroundColor: '#4A90E2' } : {}}\n                      onClick={() => {\n                        if ((instance.id !== selectedInstance?.id || group.name !== selectedOntologyGroup) && !loading) {\n                          selectGroup(instance.id, group.name);\n                        }\n                      }}\n                      onContextMenu={() => {\n                        if (!readonly) {\n                          setDelInstance({ instance, name: group.name });\n                        }\n                      }}\n                    >\n                      <div className=\"icon\">\n                        {group.type === LandmarkEditType.KEYPOINT ? <KeypointsIcon /> : <RectangleFillIcon />}\n                      </div>\n                      <div className=\"name\">{group.display_name || group.name}</div>\n                      {\n                        canAdd ?\n                          (\n                            <div\n                              className=\"add right\"\n                              onClick={(e) => {\n                                e.preventDefault();\n                                addInstanceInFrame(instance.id, group.name);\n                              }}\n                            >\n                              <PlusCircleStroke />\n                            </div>\n                          ) : (\n                            <div className=\"right\">\n                              <span className={cx('dot', `${instancesReviewsMap[instance.id]?.[currentFrame]?.children?.[group.name]?.result}`)} />\n                              <span className=\"number\">{(instance.children[n].frames[currentFrame] && (instance.children[n].frames[currentFrame] as Frame).count) || 0}</span>\n                            </div>\n                          )\n                      }\n                    </div>\n                  </ContextMenuTrigger>\n                );\n              })}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n\n  const Ontology = ({\n    ontology,\n    ontologyInstances,\n    canAdd\n  }: OntologyProps) => {\n    const isUnfold = unfoldOntology && unfoldOntology.findIndex((v: string) => v === ontology.class_name) >= 0;\n    return (\n      <div className=\"ontology-item\" key={ontology.class_name}>\n        <div className=\"ontology-item-label\">\n          <div className=\"label-left\">\n            <span className=\"label-color\" style={{ backgroundColor: ontology.display_color }} />\n            <span className=\"label-name\">{ontology.display_name || ontology.class_name}</span>\n          </div>\n          <div className=\"label-right\">\n            <span className=\"number\">{ontologyInstances.length}</span>\n            <span\n              className={cx('label-add', { disabled: !canAdd })}\n              onClick={() => {\n                if (canAdd) {\n                  addInstance(ontology.class_name);\n                  if (!unfoldOntology.find((v) => v === ontology.class_name)) {\n                    handleUnFold(ontology.class_name);\n                  }\n                }\n              }}\n            >\n              <PlusCircleOutlined className=\"icon\" />\n            </span>\n            <span className={cx('label-arrow', { unfold: isUnfold })} onClick={() => { handleUnFold(ontology.class_name); }}>\n              <DownArrow />\n            </span>\n          </div>\n        </div>\n        <Instances\n          currentFrame={currentFrame}\n          ontologyInstances={ontologyInstances}\n          ontology={ontology}\n          isUnfold={isUnfold}\n          selectedOntologyGroup={selectedOntologyGroup}\n        />\n      </div>\n    );\n  };\n\n  const Missings = observer(() => {\n    if (!rootStore.review.showReviews) {\n      return null;\n    }\n\n    const { drawMode, missingName, missingReviews, selectedMissingReview } = rootStore.review;\n    const currentFrameMissingReviews = missingReviews.filter((r) => r.frameIndex === currentFrame);\n    const canAdd = !drawMode && (!selectedMissingReview || selectedMissingReview.data !== undefined);\n    const isUnfold = unfoldOntology.findIndex((i) => i === rootStore.review.missingName) >= 0;\n    return (\n      <div className=\"ontology-item\">\n        <div className=\"ontology-item-label\">\n          <div className=\"label-left\">\n            <span className=\"label-color\" />\n            <span className=\"label-name\">Missing</span>\n          </div>\n          <div className=\"label-right\">\n            <span className=\"number\">{currentFrameMissingReviews.length}</span>\n            <span\n              className={cx('label-add', { disabled: !canAdd })}\n              onClick={() => {\n                if (canAdd) {\n                  rootStore.review.addMissingReview(currentFrame);\n                  if (!isUnfold) {\n                    handleUnFold(missingName);\n                  }\n                }\n              }}\n            >\n              <PlusCircleOutlined className=\"icon\" />\n            </span>\n            <span\n              className={cx('label-arrow', { unfold: isUnfold })}\n              onClick={() => {\n                handleUnFold(missingName);\n              }}\n            >\n              <DownArrow />\n            </span>\n          </div>\n        </div>\n        <div\n          className=\"instances-container\"\n          style={{\n            ...isUnfold && { height: 'auto' },\n          }}\n        >\n          {currentFrameMissingReviews.map((r) => (\n            <div className=\"instance missing\" key={r.id}>\n              <div className=\"instance-label\">\n                <span>{`Missing ${r.number}`}</span>\n              </div>\n              <div className=\"instance-group\">\n                <div\n                  className={cx('instance-group-item missing', {\n                    selected: selectedMissingReview?.id === r.id,\n                  })}\n                  onClick={() => {\n                    rootStore.review.setSelectedMissingReview(r);\n                    if (r.data?.position) {\n                      canvas?.fitPoint(r.data.position);\n                    }\n                  }}\n                >\n                  <div className=\"icon\">\n                    <DotFill />\n                  </div>\n                  <div className=\"name\">Dot</div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  });\n\n  return (\n    <div\n      className=\"side-menus-container\"\n      onContextMenu={(e) => e.preventDefault()}\n    >\n      <div className=\"side-menus-box\">\n        <Missings />\n        {rootStore.ontology.ontology.map((ontologyItem: OntologyItem) => {\n          const ontologyInstances = instances.filter((instance) => instance.category === ontologyItem.class_name);\n          return (\n            <Ontology\n              key={ontologyItem.class_name}\n              ontology={ontologyItem}\n              ontologyInstances={ontologyInstances}\n              canAdd={ontologyInstances.filter((instance) => !instance.notEmpty).length <= 0 && !readonly}\n            />\n          );\n        })}\n      </div>\n      {!readonly && (\n        <ContextMenu id={MENUTYPE.DELETE}>\n          {Object.keys(DELETETYPE).map((v) => (\n            <MenuItem key={v} onClick={() => { menuHandleClick(v as DELETETYPE); }}>{formatMessage(`DELETE_${v}_FRAMES`)}</MenuItem>\n          ))}\n        </ContextMenu>\n      )}\n    </div>\n  );\n};\n\nexport default SideMenus;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}