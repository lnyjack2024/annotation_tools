{"ast":null,"code":"import { SegmentMode, translate } from '../../constants';\nexport const debug = (state, data) => {\n  console.log('hello!');\n  return state;\n};\nexport const getWavesurfers = (state, data) => {\n  const {\n    wavesurfers\n  } = data;\n  return {\n    ...state,\n    wavesurfers\n  };\n};\nexport const setPlayingState = (state, data) => {\n  const {\n    isPlaying\n  } = data;\n  return {\n    ...state,\n    isPlaying\n  };\n};\nexport const setPlayMode = (state, data) => {\n  const {\n    value\n  } = data;\n  const {\n    wavesurfers\n  } = state;\n  wavesurfers.setPlayMode(value);\n  return {\n    ...state,\n    currentPlayMode: value\n  };\n};\nexport const playCurrentVideo = state => {\n  const {\n    wavesurfers\n  } = state;\n  wavesurfers.playVideo();\n  return state;\n};\nexport const pauseCurrentVideo = state => {\n  const {\n    wavesurfers\n  } = state;\n  wavesurfers.pauseVideo();\n  return state;\n};\nexport const forwardCurrentVideo = state => {\n  const {\n    wavesurfers\n  } = state;\n  wavesurfers.forwardVideo();\n  return state;\n};\nexport const backwardCurrentVideo = state => {\n  const {\n    wavesurfers\n  } = state;\n  wavesurfers.backwardVideo();\n  return state;\n};\nexport const setCurrentVideo = (state, data) => {\n  const {\n    index\n  } = data;\n  const {\n    currentVideo,\n    wavesurfers\n  } = state;\n  if (currentVideo === index) return state;\n  const videos = [...state.videos];\n  videos[index] = {\n    ...videos[index]\n  };\n  const video = videos[index];\n  video.checked = true;\n  wavesurfers.setCurrentVideo(index);\n  return {\n    ...state,\n    currentVideo: index,\n    currentSegment: 0,\n    isPlaying: false,\n    videos,\n    annotateDisabled: !state.invalidAnnotatable && video.attributes && video.attributes.is_valid === 'invalid'\n  };\n};\nexport const setAudioErrorMsg = (state, data) => {\n  const {\n    index,\n    errorMsg\n  } = data;\n  const {\n    audioErrorMsg = []\n  } = state;\n  audioErrorMsg[index] = errorMsg;\n  return {\n    ...state,\n    audioErrorMsg\n  };\n};\nexport const setErrorMsg = (state, data) => {\n  const {\n    errorMsg\n  } = data;\n  console.log(errorMsg);\n  return {\n    ...state,\n    errorMsg\n  };\n};\nexport const setCurrentSegment = (state, data) => {\n  const {\n    index,\n    start\n  } = data;\n  const {\n    currentVideo,\n    wavesurfers,\n    results,\n    segmentMode\n  } = state;\n  if (segmentMode !== SegmentMode.individual && index < 0 || index >= results[currentVideo].length) return state;\n  wavesurfers.setCurrentSegment(index, start);\n  return {\n    ...state,\n    currentSegment: index\n  };\n};\nexport const setVideoSpeed = (state, data) => {\n  const {\n    speed\n  } = data;\n  const {\n    wavesurfers,\n    currentVideo\n  } = state;\n  let rate = 1;\n  if (speed < 0.25) rate = 0.25;else if (speed > 4) rate = 4;\n  // eslint-disable-next-line radix\n  else if (speed >= 0.25 && speed <= 4) rate = parseFloat(speed).toFixed(2);\n  const videos = [...state.videos];\n  videos[currentVideo] = {\n    ...state.videos[currentVideo]\n  };\n  videos[currentVideo].speed = rate;\n  wavesurfers.setCurrentSpeed(rate);\n  return {\n    ...state,\n    videos\n  };\n};\nexport const setVideoZoom = (state, data) => {\n  const {\n    zoom\n  } = data;\n  const {\n    wavesurfers,\n    currentVideo\n  } = state;\n  let rate = 1;\n  if (zoom < 1) rate = 1;else if (zoom > 1000) rate = 1000;\n  // eslint-disable-next-line radix\n  else if (zoom >= 1 && zoom <= 1000) rate = parseInt(zoom);\n  const videos = [...state.videos];\n  videos[currentVideo] = {\n    ...state.videos[currentVideo]\n  };\n  videos[currentVideo].zoom = rate;\n  wavesurfers.setCurrentZoom(rate);\n  return {\n    ...state,\n    videos\n  };\n};\nexport const showHideGuider = state => {\n  const {\n    isGuiding\n  } = state;\n  return {\n    ...state,\n    isGuiding: !isGuiding\n  };\n};\nexport const setMeasurement = (state, data) => {\n  const {\n    selectedMeasurement\n  } = data;\n  return {\n    ...state,\n    selectedMeasurement\n  };\n};\nexport const updateVideoInfo = (state, data) => {\n  const {\n    index,\n    duration\n  } = data;\n  const videos = [...state.videos];\n  videos[index] = {\n    ...state.videos[index],\n    duration\n  };\n  return {\n    ...state,\n    videos\n  };\n};","map":{"version":3,"names":["SegmentMode","translate","debug","state","data","console","log","getWavesurfers","wavesurfers","setPlayingState","isPlaying","setPlayMode","value","currentPlayMode","playCurrentVideo","playVideo","pauseCurrentVideo","pauseVideo","forwardCurrentVideo","forwardVideo","backwardCurrentVideo","backwardVideo","setCurrentVideo","index","currentVideo","videos","video","checked","currentSegment","annotateDisabled","invalidAnnotatable","attributes","is_valid","setAudioErrorMsg","errorMsg","audioErrorMsg","setErrorMsg","setCurrentSegment","start","results","segmentMode","individual","length","setVideoSpeed","speed","rate","parseFloat","toFixed","setCurrentSpeed","setVideoZoom","zoom","parseInt","setCurrentZoom","showHideGuider","isGuiding","setMeasurement","selectedMeasurement","updateVideoInfo","duration"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/redux/reducer/settingController.js"],"sourcesContent":["import { SegmentMode, translate } from '../../constants';\n\nexport const debug = (state, data) => {\n  console.log('hello!');\n  return state;\n};\n\nexport const getWavesurfers = (state, data) => {\n  const { wavesurfers } = data;\n  return {\n    ...state,\n    wavesurfers,\n  };\n};\n\nexport const setPlayingState = (state, data) => {\n  const { isPlaying } = data;\n  return {\n    ...state,\n    isPlaying,\n  };\n};\n\nexport const setPlayMode = (state, data) => {\n  const { value } = data;\n  const { wavesurfers } = state;\n  wavesurfers.setPlayMode(value);\n  return {\n    ...state,\n    currentPlayMode: value,\n  };\n};\n\nexport const playCurrentVideo = (state) => {\n  const { wavesurfers } = state;\n  wavesurfers.playVideo();\n  return state;\n};\n\nexport const pauseCurrentVideo = (state) => {\n  const { wavesurfers } = state;\n  wavesurfers.pauseVideo();\n  return state;\n};\n\nexport const forwardCurrentVideo = (state) => {\n  const { wavesurfers } = state;\n  wavesurfers.forwardVideo();\n  return state;\n};\n\nexport const backwardCurrentVideo = (state) => {\n  const { wavesurfers } = state;\n  wavesurfers.backwardVideo();\n  return state;\n};\n\nexport const setCurrentVideo = (state, data) => {\n  const { index } = data;\n  const { currentVideo, wavesurfers } = state;\n  if (currentVideo === index) return state;\n  const videos = [...state.videos];\n  videos[index] = { ...videos[index] };\n  const video = videos[index];\n  video.checked = true;\n  wavesurfers.setCurrentVideo(index);\n  return ({\n    ...state,\n    currentVideo: index,\n    currentSegment: 0,\n    isPlaying: false,\n    videos,\n    annotateDisabled: !state.invalidAnnotatable && video.attributes && video.attributes.is_valid === 'invalid',\n  });\n};\n\nexport const setAudioErrorMsg = (state, data) => {\n  const { index, errorMsg } = data;\n  const { audioErrorMsg = [] } = state;\n  audioErrorMsg[index] = errorMsg;\n  return {\n    ...state,\n    audioErrorMsg,\n  };\n};\n\nexport const setErrorMsg = (state, data) => {\n  const { errorMsg } = data;\n  console.log(errorMsg);\n  return {\n    ...state,\n    errorMsg,\n  };\n};\n\nexport const setCurrentSegment = (state, data) => {\n  const { index, start } = data;\n  const { currentVideo, wavesurfers, results, segmentMode } = state;\n  if ((segmentMode !== SegmentMode.individual && index < 0) || index >= results[currentVideo].length) return state;\n  wavesurfers.setCurrentSegment(index, start);\n  return ({\n    ...state,\n    currentSegment: index,\n  });\n};\n\nexport const setVideoSpeed = (state, data) => {\n  const { speed } = data;\n  const { wavesurfers, currentVideo } = state;\n  let rate = 1;\n  if (speed < 0.25) rate = 0.25;\n  else if (speed > 4) rate = 4;\n  // eslint-disable-next-line radix\n  else if (speed >= 0.25 && speed <= 4) rate = parseFloat(speed).toFixed(2);\n  const videos = [...state.videos];\n  videos[currentVideo] = { ...state.videos[currentVideo] };\n  videos[currentVideo].speed = rate;\n  wavesurfers.setCurrentSpeed(rate);\n  return ({\n    ...state,\n    videos,\n  });\n};\n\nexport const setVideoZoom = (state, data) => {\n  const { zoom } = data;\n  const { wavesurfers, currentVideo } = state;\n  let rate = 1;\n  if (zoom < 1) rate = 1;\n  else if (zoom > 1000) rate = 1000;\n  // eslint-disable-next-line radix\n  else if (zoom >= 1 && zoom <= 1000) rate = parseInt(zoom);\n  const videos = [...state.videos];\n  videos[currentVideo] = { ...state.videos[currentVideo] };\n  videos[currentVideo].zoom = rate;\n  wavesurfers.setCurrentZoom(rate);\n  return ({\n    ...state,\n    videos,\n  });\n};\n\nexport const showHideGuider = (state) => {\n  const { isGuiding } = state;\n  return ({\n    ...state,\n    isGuiding: !isGuiding,\n  });\n};\n\nexport const setMeasurement = (state, data) => {\n  const { selectedMeasurement } = data;\n  return { ...state, selectedMeasurement };\n};\n\nexport const updateVideoInfo = (state, data) => {\n  const { index, duration } = data;\n  const videos = [...state.videos];\n  videos[index] = {\n    ...state.videos[index],\n    duration,\n  };\n  return { ...state, videos };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}