{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/translation/components/TranslationList.tsx\";\nimport React, { useEffect, useRef, useMemo } from 'react';\nimport { Button } from 'antd';\nimport { CellMeasurer, CellMeasurerCache, List, AutoSizer } from 'react-virtualized';\nimport TranslationItem from './TranslationItem';\nimport formatMessage from '../locales';\nimport './TranslationList.scss';\nconst cache = new CellMeasurerCache({\n  defaultHeight: 46,\n  fixedWidth: true\n});\nconst TranslationList = ({\n  editable,\n  reviewable,\n  subtitles,\n  current,\n  marks,\n  searchResults,\n  currentResult,\n  replaceActive,\n  onCurrentChange,\n  onSubtitleChange,\n  onSubtitlePlay,\n  onMarkToggle,\n  onMarkDelete\n}) => {\n  const listRef = useRef(null);\n  const results = useMemo(() => searchResults.map((item, index) => ({\n    ...item,\n    active: index === currentResult\n  })), [searchResults, currentResult]);\n  useEffect(() => {\n    if (listRef && listRef.current && (current >= 0 || currentResult >= 0)) {\n      const index = current >= 0 ? current : (results[currentResult] || {}).rowIndex;\n      if (index >= 0) {\n        listRef.current.scrollToRow(index);\n        setTimeout(() => {\n          var _listRef$current;\n          return (_listRef$current = listRef.current) === null || _listRef$current === void 0 ? void 0 : _listRef$current.scrollToRow(index);\n        }, 0); // scroll again because first scroll to not correct\n      }\n    }\n  }, [current, currentResult, searchResults[currentResult]]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"translation-list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"translation-list-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: current - 1 < 0,\n    onClick: () => onCurrentChange(current - 1),\n    style: {\n      marginRight: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, formatMessage('PREV_ROW', {\n    values: {\n      hotkey: 'Shift + Tab'\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    disabled: current + 1 >= subtitles.length,\n    onClick: () => onCurrentChange(current + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, formatMessage('NEXT_ROW', {\n    values: {\n      hotkey: 'Tab'\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"translation-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AutoSizer, {\n    onResize: () => cache.clearAll(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, ({\n    width,\n    height\n  }) => /*#__PURE__*/React.createElement(List, {\n    ref: listRef,\n    style: {\n      outline: 'none'\n    },\n    width: width,\n    height: height,\n    deferredMeasurementCache: cache,\n    rowCount: subtitles.length,\n    rowHeight: cache.rowHeight,\n    rowRenderer: ({\n      index,\n      key,\n      parent,\n      style\n    }) => /*#__PURE__*/React.createElement(CellMeasurer, {\n      cache: cache,\n      columnIndex: 0,\n      key: key,\n      parent: parent,\n      rowIndex: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TranslationItem, {\n      index: index,\n      editable: editable,\n      reviewable: reviewable,\n      source: subtitles[index].source,\n      target: subtitles[index].target,\n      pretranslation: subtitles[index].pretranslation,\n      selected: index === current,\n      marked: marks.includes(index),\n      searchResults: !replaceActive ? [] : results.filter(i => i.rowIndex === index).map(({\n        start,\n        end,\n        active\n      }) => ({\n        start,\n        end,\n        active\n      })),\n      onSelect: () => onCurrentChange(index),\n      onPlay: () => onSubtitlePlay(index),\n      onChange: (...args) => onSubtitleChange(index, ...args),\n      onMarkToggle: () => onMarkToggle(index),\n      onMarkDelete: () => onMarkDelete(index),\n      onUpdate: () => cache.clear(index, 0),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }))));\n};\nexport default TranslationList;","map":{"version":3,"names":["React","useEffect","useRef","useMemo","Button","CellMeasurer","CellMeasurerCache","List","AutoSizer","TranslationItem","formatMessage","cache","defaultHeight","fixedWidth","TranslationList","editable","reviewable","subtitles","current","marks","searchResults","currentResult","replaceActive","onCurrentChange","onSubtitleChange","onSubtitlePlay","onMarkToggle","onMarkDelete","listRef","results","map","item","index","active","rowIndex","scrollToRow","setTimeout","_listRef$current","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","disabled","onClick","style","marginRight","values","hotkey","length","onResize","clearAll","width","height","ref","outline","deferredMeasurementCache","rowCount","rowHeight","rowRenderer","key","parent","columnIndex","source","target","pretranslation","selected","marked","includes","filter","i","start","end","onSelect","onPlay","onChange","args","onUpdate","clear"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/translation/components/TranslationList.tsx"],"sourcesContent":["import React, { useEffect, useRef, useMemo } from 'react';\nimport { Button } from 'antd';\nimport { CellMeasurer, CellMeasurerCache, List, AutoSizer } from 'react-virtualized';\nimport TranslationItem from './TranslationItem';\nimport { Subtitle, SearchResult } from '../types';\nimport formatMessage from '../locales';\nimport './TranslationList.scss';\n\nconst cache = new CellMeasurerCache({\n  defaultHeight: 46,\n  fixedWidth: true,\n});\n\ninterface TranslationListProps {\n  editable: boolean;\n  reviewable: boolean;\n  subtitles: Subtitle[];\n  current: number;\n  marks: number[];\n  searchResults: SearchResult[];\n  currentResult: number;\n  replaceActive: boolean;\n  onCurrentChange: (current: number) => void;\n  onSubtitleChange: (index: number, target: string, lastAnchor: number, currAnchor: number, lastTarget?: string, skipSave?: boolean) => void;\n  onSubtitlePlay: (index: number) => void;\n  onMarkToggle: (index: number) => void;\n  onMarkDelete: (index: number) => void;\n}\n\nconst TranslationList: React.FC<TranslationListProps> = ({\n  editable,\n  reviewable,\n  subtitles,\n  current,\n  marks,\n  searchResults,\n  currentResult,\n  replaceActive,\n  onCurrentChange,\n  onSubtitleChange,\n  onSubtitlePlay,\n  onMarkToggle,\n  onMarkDelete,\n}) => {\n  const listRef = useRef<List>(null);\n  const results = useMemo(() => (\n    searchResults.map((item, index) => ({ ...item, active: index === currentResult }))\n  ), [searchResults, currentResult]);\n\n  useEffect(() => {\n    if (listRef && listRef.current && (current >= 0 || currentResult >= 0)) {\n      const index = current >= 0 ? current : (results[currentResult] || {}).rowIndex;\n      if (index >= 0) {\n        listRef.current.scrollToRow(index);\n        setTimeout(() => listRef.current?.scrollToRow(index), 0); // scroll again because first scroll to not correct\n      }\n    }\n  }, [current, currentResult, searchResults[currentResult]]);\n\n  return (\n    <div className=\"translation-list-container\">\n      <div className=\"translation-list-header\">\n        <div>\n          {/* <Button onClick={loadPretranslation}>\n            {formatMessage('LOAD_PRETRANSLATION')}\n          </Button> */}\n        </div>\n        <div>\n          <Button\n            disabled={current - 1 < 0}\n            onClick={() => onCurrentChange(current - 1)}\n            style={{ marginRight: 12 }}\n          >\n            {formatMessage('PREV_ROW', { values: { hotkey: 'Shift + Tab' } })}\n          </Button>\n          <Button\n            disabled={current + 1 >= subtitles.length}\n            onClick={() => onCurrentChange(current + 1)}\n          >\n            {formatMessage('NEXT_ROW', { values: { hotkey: 'Tab' } })}\n          </Button>\n        </div>\n      </div>\n      <div className=\"translation-list\">\n        <AutoSizer onResize={() => cache.clearAll()}>\n          {({ width, height }) => (\n            <List\n              ref={listRef}\n              style={{ outline: 'none' }}\n              width={width}\n              height={height}\n              deferredMeasurementCache={cache}\n              rowCount={subtitles.length}\n              rowHeight={cache.rowHeight}\n              rowRenderer={({ index, key, parent, style }) => (\n                <CellMeasurer\n                  cache={cache}\n                  columnIndex={0}\n                  key={key}\n                  parent={parent}\n                  rowIndex={index}\n                >\n                  <div style={style}>\n                    <TranslationItem\n                      index={index}\n                      editable={editable}\n                      reviewable={reviewable}\n                      source={subtitles[index].source}\n                      target={subtitles[index].target}\n                      pretranslation={subtitles[index].pretranslation}\n                      selected={index === current}\n                      marked={marks.includes(index)}\n                      searchResults={\n                        !replaceActive ? [] : results\n                          .filter((i) => i.rowIndex === index)\n                          .map(({ start, end, active }) => ({ start, end, active }))\n                      }\n                      onSelect={() => onCurrentChange(index)}\n                      onPlay={() => onSubtitlePlay(index)}\n                      onChange={(...args) => onSubtitleChange(index, ...args)}\n                      onMarkToggle={() => onMarkToggle(index)}\n                      onMarkDelete={() => onMarkDelete(index)}\n                      onUpdate={() => cache.clear(index, 0)}\n                    />\n                  </div>\n                </CellMeasurer>\n              )}\n            />\n          )}\n        </AutoSizer>\n      </div>\n    </div>\n  );\n};\n\nexport default TranslationList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}