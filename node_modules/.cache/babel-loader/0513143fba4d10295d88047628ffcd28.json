{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking2/components/toolbar/ViewMode.tsx\";\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport cx from 'classnames';\nimport store from '../../store/RootStore';\nimport i18n from '../../locales';\nimport { ViewMode } from '../../types';\nconst ViewModeRadio = observer(() => {\n  if (store.frame.frameCount <= 1) {\n    return null;\n  }\n  const {\n    viewMode,\n    setViewMode\n  } = store.config;\n  const isGridView = viewMode === ViewMode.GRID;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"view-mode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx({\n      checked: !isGridView\n    }),\n    onClick: () => setViewMode(ViewMode.DEFAULT),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, i18n.translate('VIEW_MODE_DEFAULT')), /*#__PURE__*/React.createElement(\"div\", {\n    className: cx({\n      checked: isGridView\n    }),\n    onClick: () => setViewMode(ViewMode.GRID),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, i18n.translate('VIEW_MODE_GRID')));\n});\nexport default ViewModeRadio;","map":{"version":3,"names":["React","observer","cx","store","i18n","ViewMode","ViewModeRadio","frame","frameCount","viewMode","setViewMode","config","isGridView","GRID","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","checked","onClick","DEFAULT","translate"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking2/components/toolbar/ViewMode.tsx"],"sourcesContent":["import React from 'react';\nimport { observer } from 'mobx-react';\nimport cx from 'classnames';\nimport store from '../../store/RootStore';\nimport i18n from '../../locales';\nimport { ViewMode } from '../../types';\n\nconst ViewModeRadio = observer(() => {\n  if (store.frame.frameCount <= 1) {\n    return null;\n  }\n\n  const { viewMode, setViewMode } = store.config;\n  const isGridView = viewMode === ViewMode.GRID;\n  return (\n    <div className=\"view-mode\">\n      <div className={cx({ checked: !isGridView })} onClick={() => setViewMode(ViewMode.DEFAULT)}>\n        {i18n.translate('VIEW_MODE_DEFAULT')}\n      </div>\n      <div className={cx({ checked: isGridView })} onClick={() => setViewMode(ViewMode.GRID)}>\n        {i18n.translate('VIEW_MODE_GRID')}\n      </div>\n    </div>\n  );\n});\n\nexport default ViewModeRadio;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,YAAY;AACrC,OAAOC,EAAE,MAAM,YAAY;AAC3B,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,IAAI,MAAM,eAAe;AAChC,SAASC,QAAQ,QAAQ,aAAa;AAEtC,MAAMC,aAAa,GAAGL,QAAQ,CAAC,MAAM;EACnC,IAAIE,KAAK,CAACI,KAAK,CAACC,UAAU,IAAI,CAAC,EAAE;IAC/B,OAAO,IAAI;EACb;EAEA,MAAM;IAAEC,QAAQ;IAAEC;EAAY,CAAC,GAAGP,KAAK,CAACQ,MAAM;EAC9C,MAAMC,UAAU,GAAGH,QAAQ,KAAKJ,QAAQ,CAACQ,IAAI;EAC7C,oBACEb,KAAA,CAAAc,aAAA;IAAKC,SAAS,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxBrB,KAAA,CAAAc,aAAA;IAAKC,SAAS,EAAEb,EAAE,CAAC;MAAEoB,OAAO,EAAE,CAACV;IAAW,CAAC,CAAE;IAACW,OAAO,EAAEA,CAAA,KAAMb,WAAW,CAACL,QAAQ,CAACmB,OAAO,CAAE;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACxFjB,IAAI,CAACqB,SAAS,CAAC,mBAAmB,CAChC,CAAC,eACNzB,KAAA,CAAAc,aAAA;IAAKC,SAAS,EAAEb,EAAE,CAAC;MAAEoB,OAAO,EAAEV;IAAW,CAAC,CAAE;IAACW,OAAO,EAAEA,CAAA,KAAMb,WAAW,CAACL,QAAQ,CAACQ,IAAI,CAAE;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACpFjB,IAAI,CAACqB,SAAS,CAAC,gBAAgB,CAC7B,CACF,CAAC;AAEV,CAAC,CAAC;AAEF,eAAenB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}