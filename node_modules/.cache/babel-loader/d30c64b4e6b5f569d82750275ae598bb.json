{"ast":null,"code":"import{Point}from'pixi.js';import Cursor from'../../Cursor';import Control from'./Control';import{computedAngle}from'../../../../utils/math';/**\n * Rotation Control\n * @class\n */export default class ControlRotation extends Control{/**\n   * update control point position\n   * @param point\n   */move(nowPoint){if(this._mousePoint){const center=new Point(this.position.x,this.position.y);const radius=computedAngle(center,this._mousePoint,nowPoint);this.onRotationChange(radius);this._mousePoint=nowPoint;}}constructor(_ref){let{container,position,rotation,size,scale,color,cursor,onFinish,onRotationChange}=_ref;super({position,container,size,scale,color,cursor:cursor||Cursor.ROTATE,onFinish});/**\n   * control rotation\n   */this.rotation=0;/**\n   * when control mousedown\n   */this.onRotationChange=void 0;this.rotation=rotation;this.onRotationChange=onRotationChange;}/**\n   * draw control\n   */drawControl(){this.control.clear();const pivot=new Point(this.position.x,this.position.y);const rotationRectSize=10/this.scale;this.control.interactive=true;this.control.lineStyle(1/this.scale,this.color);this.control.moveTo(pivot.x,pivot.y);this.control.lineTo(pivot.x,this.size);this.control.beginFill(this.color);this.control.drawRect(pivot.x-rotationRectSize/2,this.size-rotationRectSize/2,rotationRectSize,rotationRectSize);this.control.endFill();this.control.pivot.set(pivot.x,pivot.y);this.control.position.set(pivot.x,pivot.y);this.control.rotation=this.rotation;}}","map":{"version":3,"names":["Point","Cursor","Control","computedAngle","ControlRotation","move","nowPoint","_mousePoint","center","position","x","y","radius","onRotationChange","constructor","_ref","container","rotation","size","scale","color","cursor","onFinish","ROTATE","drawControl","control","clear","pivot","rotationRectSize","interactive","lineStyle","moveTo","lineTo","beginFill","drawRect","endFill","set"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/common/shapes/controls/ControlRotation.ts"],"sourcesContent":["import { Point } from 'pixi.js';\nimport Cursor from '../../Cursor';\nimport Control, { ControlOptions } from './Control';\nimport { computedAngle } from '../../../../utils/math';\n\nexport interface ControlRotationOptions extends ControlOptions {\n  rotation: number;\n  onRotationChange: (angle: number) => void;\n}\n\n/**\n * Rotation Control\n * @class\n */\nexport default class ControlRotation extends Control {\n  /**\n   * control rotation\n   */\n  rotation = 0;\n\n  /**\n   * when control mousedown\n   */\n  onRotationChange: (angle: number) => void;\n\n  /**\n   * update control point position\n   * @param point\n   */\n  move(nowPoint:Point) {\n    if (this._mousePoint) {\n      const center = new Point(this.position.x, this.position.y);\n      const radius = computedAngle(center, this._mousePoint, nowPoint);\n      this.onRotationChange(radius);\n      this._mousePoint = nowPoint;\n    }\n  }\n\n  constructor({ container, position, rotation, size, scale, color, cursor, onFinish, onRotationChange }: ControlRotationOptions) {\n    super({ position, container, size, scale, color, cursor: cursor || Cursor.ROTATE, onFinish });\n    this.rotation = rotation;\n    this.onRotationChange = onRotationChange;\n  }\n\n  /**\n   * draw control\n   */\n  drawControl() {\n    this.control.clear();\n    const pivot = new Point(this.position.x, this.position.y);\n    const rotationRectSize = 10 / this.scale;\n    this.control.interactive = true;\n    this.control.lineStyle(1 / this.scale, this.color);\n    this.control.moveTo(pivot.x, pivot.y);\n    this.control.lineTo(pivot.x, this.size);\n    this.control.beginFill(this.color);\n    this.control.drawRect(pivot.x - rotationRectSize / 2, this.size - rotationRectSize / 2, rotationRectSize, rotationRectSize);\n    this.control.endFill();\n    this.control.pivot.set(pivot.x, pivot.y);\n    this.control.position.set(pivot.x, pivot.y);\n    this.control.rotation = this.rotation;\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}