{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/SegmentDetail/QAReasonSelect/QAReasonSelect.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './QAReasonSelect.scss';\nimport { Select } from 'antd';\nimport { translate } from '../../../constants';\nimport { setSegmentQAReason } from '../../../redux/action';\nconst QAReasonSelect = props => {\n  const {\n    currentVideo,\n    currentSegment,\n    results,\n    issueTypes\n  } = props;\n  const segment = results[currentVideo][currentSegment];\n  const handleSelectChange = e => {\n    props.setSegmentQAReason({\n      qaReason: e\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"qa-reason-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"qa-reason-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, `${translate('reason')}:`), /*#__PURE__*/React.createElement(Select, {\n    className: \"task-select\",\n    value: segment.qaReason,\n    onChange: e => handleSelectChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, issueTypes.map((issue, index) => /*#__PURE__*/React.createElement(Select.Option, {\n    // eslint-disable-next-line react/no-array-index-key\n    key: `qa-reson-select-item-${index}`,\n    value: issue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, issue))));\n};\nQAReasonSelect.propTypes = {};\nconst mapStateToProps = state => ({\n  results: state.results,\n  currentVideo: state.currentVideo,\n  currentSegment: state.currentSegment,\n  issueTypes: state.issueTypes\n});\nconst mapDispatchToProps = {\n  setSegmentQAReason\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(QAReasonSelect);","map":{"version":3,"names":["React","connect","Select","translate","setSegmentQAReason","QAReasonSelect","props","currentVideo","currentSegment","results","issueTypes","segment","handleSelectChange","e","qaReason","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","map","issue","index","Option","key","propTypes","mapStateToProps","state","mapDispatchToProps"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/SegmentDetail/QAReasonSelect/QAReasonSelect.js"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport './QAReasonSelect.scss';\nimport { Select } from 'antd';\nimport { translate } from '../../../constants';\nimport { setSegmentQAReason } from '../../../redux/action';\n\nconst QAReasonSelect = (props) => {\n  const { currentVideo, currentSegment, results, issueTypes } = props;\n  const segment = results[currentVideo][currentSegment];\n  const handleSelectChange = (e) => {\n    props.setSegmentQAReason({ qaReason: e });\n  };\n  return (\n    <div className=\"qa-reason-container\">\n      <div className=\"qa-reason-title\">{`${translate('reason')}:`}</div>\n      <Select\n        className=\"task-select\"\n        value={segment.qaReason}\n        onChange={(e) => handleSelectChange(e)}\n      >\n        {issueTypes.map((issue, index) => (\n          <Select.Option\n            // eslint-disable-next-line react/no-array-index-key\n            key={`qa-reson-select-item-${index}`}\n            value={issue}\n          >\n            {issue}\n          </Select.Option>\n        ))}\n        {/*<Select.Option\n          value={null}\n        >\n          other issue\n        </Select.Option>*/}\n      </Select>\n    </div>\n  );\n};\n\nQAReasonSelect.propTypes = {\n};\n\nconst mapStateToProps = (state) => ({\n  results: state.results,\n  currentVideo: state.currentVideo,\n  currentSegment: state.currentSegment,\n  issueTypes: state.issueTypes,\n});\nconst mapDispatchToProps = {\n  setSegmentQAReason,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(QAReasonSelect);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAO,uBAAuB;AAC9B,SAASC,MAAM,QAAQ,MAAM;AAC7B,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,kBAAkB,QAAQ,uBAAuB;AAE1D,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAChC,MAAM;IAAEC,YAAY;IAAEC,cAAc;IAAEC,OAAO;IAAEC;EAAW,CAAC,GAAGJ,KAAK;EACnE,MAAMK,OAAO,GAAGF,OAAO,CAACF,YAAY,CAAC,CAACC,cAAc,CAAC;EACrD,MAAMI,kBAAkB,GAAIC,CAAC,IAAK;IAChCP,KAAK,CAACF,kBAAkB,CAAC;MAAEU,QAAQ,EAAED;IAAE,CAAC,CAAC;EAC3C,CAAC;EACD,oBACEb,KAAA,CAAAe,aAAA;IAAKC,SAAS,EAAC,qBAAqB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClCtB,KAAA,CAAAe,aAAA;IAAKC,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAE,GAAGnB,SAAS,CAAC,QAAQ,CAAC,GAAS,CAAC,eAClEH,KAAA,CAAAe,aAAA,CAACb,MAAM;IACLc,SAAS,EAAC,aAAa;IACvBO,KAAK,EAAEZ,OAAO,CAACG,QAAS;IACxBU,QAAQ,EAAGX,CAAC,IAAKD,kBAAkB,CAACC,CAAC,CAAE;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEtCZ,UAAU,CAACe,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC3B3B,KAAA,CAAAe,aAAA,CAACb,MAAM,CAAC0B,MAAM;IACZ;IACAC,GAAG,EAAE,wBAAwBF,KAAK,EAAG;IACrCJ,KAAK,EAAEG,KAAM;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEZI,KACY,CAChB,CAMK,CACL,CAAC;AAEV,CAAC;AAEDrB,cAAc,CAACyB,SAAS,GAAG,CAC3B,CAAC;AAED,MAAMC,eAAe,GAAIC,KAAK,KAAM;EAClCvB,OAAO,EAAEuB,KAAK,CAACvB,OAAO;EACtBF,YAAY,EAAEyB,KAAK,CAACzB,YAAY;EAChCC,cAAc,EAAEwB,KAAK,CAACxB,cAAc;EACpCE,UAAU,EAAEsB,KAAK,CAACtB;AACpB,CAAC,CAAC;AACF,MAAMuB,kBAAkB,GAAG;EACzB7B;AACF,CAAC;AACD,eAAeH,OAAO,CAAC8B,eAAe,EAAEE,kBAAkB,CAAC,CAAC5B,cAAc,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}