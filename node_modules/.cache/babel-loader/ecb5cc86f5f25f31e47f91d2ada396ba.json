{"ast":null,"code":"export let Operator=/*#__PURE__*/function(Operator){Operator[\"EQUAL\"]=\"equal_to\";Operator[\"GREATER\"]=\"greater_than\";Operator[\"LESS\"]=\"less_than\";return Operator;}({});export let ReviewMode=/*#__PURE__*/function(ReviewMode){ReviewMode[\"LABELING\"]=\"labeling\";ReviewMode[\"REVIEW\"]=\"review\";return ReviewMode;}({});export let ValidationType=/*#__PURE__*/function(ValidationType){ValidationType[\"SCRIPT\"]=\"script\";return ValidationType;}({});","map":{"version":3,"names":["Operator","ReviewMode","ValidationType"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/question-answering/types.ts"],"sourcesContent":["import JobProxy from '../../libs/JobProxy';\nimport { Content, LLMModel, Rank } from '../common/llm/types';\n\nexport interface Payload {\n  jobProxy: JobProxy;\n  locale?: string;\n  tool_mode?: string;\n  issue_types?: string;\n  // config\n  subjects?: string;\n  attributes_config?: string;\n  item_attributes_config?: string;\n  ranking?: string | boolean;\n  ranking_type?: string;\n  ranking_options?: string;\n  sortable?: string | boolean;\n  editable?: string | boolean;\n  addible?: string | boolean;\n  add_model?: string;\n  // data\n  review_from?: string;\n  // simple input\n  question?: string;\n}\n\nexport enum Operator {\n  EQUAL = 'equal_to',\n  GREATER = 'greater_than',\n  LESS = 'less_than',\n}\n\nexport interface Answer {\n  id: string;\n  original: boolean; // is provided by original data\n  value: Content;\n  originalValue?: Content;\n  rank?: Rank;\n  attributes?: any;\n  model?: LLMModel; // model used to generate\n  sourceModelId?: string;\n}\n\nexport enum ReviewMode {\n  LABELING = 'labeling',\n  REVIEW = 'review',\n}\nexport interface Result {\n  id: string;\n  message: string;\n  info: {\n    title: string\n  };\n  blockSubmit?: boolean;\n  type: string;\n}\n\nexport enum ValidationType {\n  SCRIPT = 'script',\n}\n"],"mappings":"AAyBA,UAAY,CAAAA,QAAQ,uBAARA,QAAQ,EAARA,QAAQ,qBAARA,QAAQ,2BAARA,QAAQ,2BAAR,CAAAA,QAAQ,OAiBpB,UAAY,CAAAC,UAAU,uBAAVA,UAAU,EAAVA,UAAU,wBAAVA,UAAU,0BAAV,CAAAA,UAAU,OActB,UAAY,CAAAC,cAAc,uBAAdA,cAAc,EAAdA,cAAc,0BAAd,CAAAA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}