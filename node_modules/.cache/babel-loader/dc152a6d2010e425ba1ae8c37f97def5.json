{"ast":null,"code":"import _applyDecoratedDescriptor from \"/Users/qzheng/Documents/webroot/annotation_tools/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nvar _class,\n  _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/phonetic-transcription/components/Helper/Ruler.tsx\";\nimport React from 'react';\nimport { makeObservable, reaction, computed } from 'mobx';\nimport rootStore from '../../store/RootStore';\nimport { AnnotationType, Align, Style } from '../../types';\nimport { wrapText } from '../../utils';\nconst pitchRange = {\n  min: 75,\n  max: 500\n};\nconst intensityRange = {\n  min: 50,\n  max: 100\n};\nlet Ruler = (_class = class Ruler extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ratio = 1;\n    this.lineWidth = 1;\n    this.canvasRef = React.createRef();\n    this.ctx = null;\n    /**\n     * reaction disposer\n     */\n    this.reactionDisposer = void 0;\n    this.setupRulerCanvas = () => {\n      const canvas = this.canvasRef.current;\n      const rect = canvas.getBoundingClientRect();\n      this.ratio = window.devicePixelRatio;\n      rootStore.setting.setRatio(this.ratio);\n      canvas.width = rect.width * this.ratio;\n      canvas.height = rect.height * this.ratio;\n      this.ctx = canvas.getContext('2d');\n    };\n    this.updateRuler = () => {\n      const canvas = this.canvasRef.current;\n      const rect = canvas.getBoundingClientRect();\n      canvas.width = rect.width * this.ratio;\n      canvas.height = rect.height * this.ratio;\n      if (this.props.ratioPlacement.atlasWidth > 0) {\n        this.drawCoordinates();\n        this.drawTierLabel();\n      }\n    };\n    this.drawCoordinates = () => {\n      if (!this.ctx) return;\n      const {\n        amplitude,\n        sampleRate,\n        visible\n      } = rootStore.analyse;\n      const {\n        margin,\n        timelineHeight,\n        atlasHeight,\n        atlasWidth\n      } = this.props.ratioPlacement;\n      const fontSize = Style.FONTSIZE * this.ratio;\n\n      // draw start x\n      const leftStart = margin - 6;\n      const halfFont = fontSize / 2;\n      // waveform curve coordinates\n      if (amplitude.max !== 0) {\n        wrapText(this.ctx, amplitude.max.toFixed(6), leftStart, timelineHeight + halfFont, Align.RIGHT);\n        wrapText(this.ctx, '0', leftStart, timelineHeight + atlasHeight / 4 + halfFont, Align.RIGHT);\n        wrapText(this.ctx, amplitude.min.toFixed(6), leftStart, timelineHeight + atlasHeight / 2 - halfFont, Align.RIGHT);\n      }\n\n      /**\n       * spectrogram curve coordinates\n       */\n      if (visible.spectrogram) {\n        wrapText(this.ctx, `${sampleRate / 2} Hz`, leftStart, timelineHeight + atlasHeight / 2 + 10 * this.ratio, Align.RIGHT);\n        wrapText(this.ctx, '0 Hz', leftStart, timelineHeight + atlasHeight - 3, Align.RIGHT);\n      }\n\n      /**\n       * pitch curve coordinates\n       */\n      if (visible.pitch) {\n        wrapText(this.ctx, `${pitchRange.max} Hz`, leftStart + atlasWidth + fontSize, timelineHeight + atlasHeight / 2 + 10 * this.ratio, Align.LEFT, Style.PITCH);\n        wrapText(this.ctx, `${pitchRange.min} Hz`, leftStart + atlasWidth + fontSize, timelineHeight + atlasHeight - halfFont, Align.LEFT, Style.PITCH);\n      }\n\n      /**\n       * intensity curve coordinates\n       */\n      if (visible.intensity) {\n        const align = visible.pitch ? Align.RIGHT : Align.LEFT;\n        const offsetX = visible.pitch ? 0 : fontSize;\n        wrapText(this.ctx, `${intensityRange.max} dB`, leftStart + atlasWidth + offsetX, timelineHeight + atlasHeight / 2 + 10 * this.ratio, align, Style.INTENSITY);\n        wrapText(this.ctx, `${intensityRange.min} dB`, leftStart + atlasWidth + offsetX, timelineHeight + atlasHeight - halfFont, align, Style.INTENSITY);\n      }\n    };\n    this.drawTierLabel = () => {\n      const {\n        categories,\n        selectedCategoryName\n      } = rootStore.ontology;\n      const {\n        selectedInstance,\n        selectedNumber,\n        categoryInstancesMap\n      } = rootStore.instance;\n      const {\n        margin,\n        tierHeight,\n        timelineHeight,\n        atlasWidth,\n        atlasHeight\n      } = this.props.ratioPlacement;\n      const fontSize = Style.FONTSIZE * this.ratio;\n      const halfFont = fontSize / 2;\n      const leftStart = margin - halfFont;\n      let y = timelineHeight + atlasHeight;\n      for (let i = 0; i < categories.length; i += 1) {\n        var _categoryInstancesMap;\n        const {\n          className,\n          displayName,\n          type\n        } = categories[i];\n        y += tierHeight / categories.length / (i === 0 ? 2 : 1);\n        const isPoint = type === AnnotationType.TIMING;\n        const color = selectedCategoryName === className ? Style.ACTIVE : Style.FILL;\n        if (isPoint) {\n          wrapText(this.ctx, `Tier ${i + 1}`, leftStart, y - halfFont * 3 / 2, Align.RIGHT, color);\n          wrapText(this.ctx, '(point tier)', leftStart, y + halfFont * 3 / 2, Align.RIGHT, color);\n        } else {\n          wrapText(this.ctx, `Tier ${i + 1}`, leftStart, y + halfFont / 2, Align.RIGHT, color);\n        }\n        wrapText(this.ctx, displayName, leftStart + atlasWidth + fontSize, y - halfFont * 3 / 2, Align.LEFT, color);\n        let label = '(';\n        if ((selectedInstance === null || selectedInstance === void 0 ? void 0 : selectedInstance.category) === className) {\n          label += `${selectedNumber}/`;\n        }\n        label += `${((_categoryInstancesMap = categoryInstancesMap[className]) === null || _categoryInstancesMap === void 0 ? void 0 : _categoryInstancesMap.length) || 0})`;\n        wrapText(this.ctx, label, leftStart + atlasWidth + fontSize, y + halfFont * 3 / 2, Align.LEFT, color);\n      }\n    };\n    makeObservable(this, {});\n    this.reactionDisposer = reaction(() => this.changeData, () => {\n      this.updateRuler();\n    });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  get changeData() {\n    return {\n      amplitude: rootStore.analyse.amplitude,\n      placement: rootStore.analyse.placement,\n      visible: rootStore.analyse.visible,\n      selectedCategoryName: rootStore.ontology.selectedCategoryName,\n      selectedInstance: rootStore.instance.selectedInstance\n    };\n  }\n  componentDidMount() {\n    this.setupRulerCanvas();\n    this.updateRuler();\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: this.canvasRef,\n      style: {\n        pointerEvents: 'none'\n      },\n      className: \"absoluteTopLeftZeroW100H100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }\n    });\n  }\n}, _applyDecoratedDescriptor(_class.prototype, \"changeData\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"changeData\"), _class.prototype), _class);\n;\nexport default Ruler;","map":{"version":3,"names":["React","makeObservable","reaction","computed","rootStore","AnnotationType","Align","Style","wrapText","pitchRange","min","max","intensityRange","Ruler","_class","Component","constructor","props","ratio","lineWidth","canvasRef","createRef","ctx","reactionDisposer","setupRulerCanvas","canvas","current","rect","getBoundingClientRect","window","devicePixelRatio","setting","setRatio","width","height","getContext","updateRuler","ratioPlacement","atlasWidth","drawCoordinates","drawTierLabel","amplitude","sampleRate","visible","analyse","margin","timelineHeight","atlasHeight","fontSize","FONTSIZE","leftStart","halfFont","toFixed","RIGHT","spectrogram","pitch","LEFT","PITCH","intensity","align","offsetX","INTENSITY","categories","selectedCategoryName","ontology","selectedInstance","selectedNumber","categoryInstancesMap","instance","tierHeight","y","i","length","_categoryInstancesMap","className","displayName","type","isPoint","TIMING","color","ACTIVE","FILL","label","category","changeData","placement","componentDidMount","render","createElement","ref","style","pointerEvents","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","_applyDecoratedDescriptor","prototype","Object","getOwnPropertyDescriptor"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/phonetic-transcription/components/Helper/Ruler.tsx"],"sourcesContent":["import React from 'react';\nimport { makeObservable, reaction, IReactionDisposer, computed } from 'mobx';\nimport rootStore from '../../store/RootStore';\nimport { AnnotationType, Align, Style } from '../../types';\nimport { wrapText } from '../../utils';\n\nconst pitchRange = { min: 75, max: 500 };\nconst intensityRange = { min: 50, max: 100 };\n\ninterface RuleProps {\n  ratioPlacement: {[key: string]: number};\n}\n\nclass Ruler extends React.Component<RuleProps> {\n  ratio = 1;\n\n  lineWidth = 1;\n\n  canvasRef: React.RefObject<HTMLCanvasElement> = React.createRef();\n\n  ctx: CanvasRenderingContext2D | null = null;\n\n  /**\n   * reaction disposer\n   */\n  reactionDisposer: IReactionDisposer;\n\n  constructor(props: RuleProps) {\n    super(props);\n    makeObservable(this, {});\n\n    this.reactionDisposer = reaction(\n      () => this.changeData,\n      () => {\n        this.updateRuler();\n      },\n    );\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  @computed get changeData() {\n    return {\n      amplitude: rootStore.analyse.amplitude,\n      placement: rootStore.analyse.placement,\n      visible: rootStore.analyse.visible,\n      selectedCategoryName: rootStore.ontology.selectedCategoryName,\n      selectedInstance: rootStore.instance.selectedInstance\n    };\n  }\n\n  componentDidMount() {\n    this.setupRulerCanvas();\n    this.updateRuler();\n  }\n\n  setupRulerCanvas = () => {\n    const canvas = this.canvasRef.current! as HTMLCanvasElement;\n    const rect = canvas.getBoundingClientRect();\n    this.ratio = window.devicePixelRatio;\n    rootStore.setting.setRatio(this.ratio);\n    canvas.width = rect.width * this.ratio;\n    canvas.height = rect.height * this.ratio;\n    this.ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n  };\n\n  updateRuler = () => {\n    const canvas = this.canvasRef.current! as HTMLCanvasElement;\n    const rect = canvas.getBoundingClientRect();\n    canvas.width = rect.width * this.ratio;\n    canvas.height = rect.height * this.ratio;\n    if (this.props.ratioPlacement.atlasWidth > 0) {\n      this.drawCoordinates();\n      this.drawTierLabel();\n    }\n  };\n\n  drawCoordinates = () => {\n    if (!this.ctx) return;\n    const {\n      amplitude,\n      sampleRate,\n      visible\n    } = rootStore.analyse;\n    const { margin, timelineHeight, atlasHeight, atlasWidth } = this.props.ratioPlacement;\n    const fontSize = Style.FONTSIZE * this.ratio;\n\n    // draw start x\n    const leftStart = margin - 6;\n    const halfFont = fontSize / 2;\n    // waveform curve coordinates\n    if (amplitude.max !== 0) {\n      wrapText(this.ctx, amplitude.max.toFixed(6), leftStart, timelineHeight + halfFont, Align.RIGHT);\n      wrapText(this.ctx, '0', leftStart, timelineHeight + atlasHeight / 4 + halfFont, Align.RIGHT);\n      wrapText(this.ctx, amplitude.min.toFixed(6), leftStart, timelineHeight + atlasHeight / 2 - halfFont, Align.RIGHT);\n    }\n\n    /**\n     * spectrogram curve coordinates\n     */\n    if (visible.spectrogram) {\n      wrapText(this.ctx, `${sampleRate / 2} Hz`, leftStart, timelineHeight + atlasHeight / 2 + 10 * this.ratio, Align.RIGHT);\n      wrapText(this.ctx, '0 Hz', leftStart, timelineHeight + atlasHeight - 3, Align.RIGHT);\n    }\n\n    /**\n     * pitch curve coordinates\n     */\n    if (visible.pitch) {\n      wrapText(this.ctx, `${pitchRange.max} Hz`, leftStart + atlasWidth + fontSize, timelineHeight + atlasHeight / 2 + 10 * this.ratio, Align.LEFT, Style.PITCH);\n      wrapText(this.ctx, `${pitchRange.min} Hz`, leftStart + atlasWidth + fontSize, timelineHeight + atlasHeight - halfFont, Align.LEFT, Style.PITCH);\n    }\n\n    /**\n     * intensity curve coordinates\n     */\n    if (visible.intensity) {\n      const align = visible.pitch ? Align.RIGHT : Align.LEFT;\n      const offsetX = visible.pitch ? 0 : fontSize;\n      wrapText(this.ctx, `${intensityRange.max} dB`, leftStart + atlasWidth + offsetX, timelineHeight + atlasHeight / 2 + 10 * this.ratio, align, Style.INTENSITY);\n      wrapText(this.ctx, `${intensityRange.min} dB`, leftStart + atlasWidth + offsetX, timelineHeight + atlasHeight - halfFont, align, Style.INTENSITY);\n    }\n  };\n\n  drawTierLabel = () => {\n    const { categories, selectedCategoryName } = rootStore.ontology;\n    const { selectedInstance, selectedNumber, categoryInstancesMap } = rootStore.instance;\n    const { margin, tierHeight, timelineHeight, atlasWidth, atlasHeight } = this.props.ratioPlacement;\n    const fontSize = Style.FONTSIZE * this.ratio;\n    const halfFont = fontSize / 2;\n    const leftStart = margin - halfFont;\n    let y = timelineHeight + atlasHeight;\n    for (let i = 0; i < categories.length; i += 1) {\n      const { className, displayName, type } = categories[i];\n      y += (tierHeight / categories.length) / (i === 0 ? 2 : 1);\n      const isPoint = type === AnnotationType.TIMING;\n      const color = selectedCategoryName === className ? Style.ACTIVE : Style.FILL;\n\n      if (isPoint) {\n        wrapText(this.ctx, `Tier ${i + 1}`, leftStart, y - (halfFont * 3) / 2, Align.RIGHT, color);\n        wrapText(this.ctx, '(point tier)', leftStart, y + (halfFont * 3) / 2, Align.RIGHT, color);\n      } else {\n        wrapText(this.ctx, `Tier ${i + 1}`, leftStart, y + halfFont / 2, Align.RIGHT, color);\n      }\n      wrapText(this.ctx, displayName, leftStart + atlasWidth + fontSize, y - (halfFont * 3) / 2, Align.LEFT, color);\n      let label = '(';\n      if (selectedInstance?.category === className) {\n        label += `${selectedNumber}/`;\n      }\n      label += `${categoryInstancesMap[className]?.length || 0})`;\n      wrapText(this.ctx, label, leftStart + atlasWidth + fontSize, y + (halfFont * 3) / 2, Align.LEFT, color);\n    }\n  };\n\n  render() {\n    return (\n      <canvas\n        ref={this.canvasRef}\n        style={{ pointerEvents: 'none' }}\n        className=\"absoluteTopLeftZeroW100H100\"\n      />\n    );\n  }\n};\n\nexport default Ruler;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}