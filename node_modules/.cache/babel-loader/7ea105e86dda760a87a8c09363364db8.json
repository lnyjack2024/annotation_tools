{"ast":null,"code":"import{makeAutoObservable}from'mobx';import{cloneDeep}from'lodash';import FrameData from'./FrameData';import{getLastKeyFrames,getNextKeyFrames,getShapeFromFrames,predictShapeData}from'../utils';/**\n * camera data\n * @class\n */export default class CameraData{/**\n   * shape frame status (keyframe or not)\n   * @getter\n   */get frameStatus(){const status={};Object.values(this.frames).forEach(_ref=>{let{frameIndex,isKeyFrame}=_ref;status[frameIndex]=isKeyFrame;});return status;}/**\n   * no frame\n   * @getter\n   */get isEmpty(){return Object.keys(this.frames).length<=0;}constructor(_ref2){let{camera,frames=[],instanceItem,getNextShapeOrder}=_ref2;/**\n   * camera name\n   * @member\n   */this.camera=void 0;this.instanceItem=void 0;/**\n   * shape frame data\n   * @member\n   */this.frames={};/**\n   * get next shape order\n   * @member\n   */this.getNextShapeOrder=void 0;makeAutoObservable(this,{camera:false,isEmpty:false,getNextShapeOrder:false},{autoBind:true});this.instanceItem=instanceItem;this.getNextShapeOrder=getNextShapeOrder;this.camera=camera;frames.forEach(frame=>this.createFrameFromData(frame));}/**\n   * create frame from structured frame data\n   * @param frameData\n   */createFrameFromData(_ref3){let{frameIndex,isKeyFrame,shapeType,shape,order,attributes}=_ref3;const frame=new FrameData({frameIndex,isKeyFrame,shapeType,shape,order,attributes});this.frames[frameIndex]=frame;}/**\n   * update frames from structured data\n   * @param frames\n   */updateFramesFromData(frames){const prevFrames={};const currFrames={};frames.forEach((_ref4,i)=>{let{frameIndex,isKeyFrame,shapeType,shape,order,attributes}=_ref4;if(this.frames[frameIndex]&&!prevFrames[frameIndex]){prevFrames[frameIndex]=this.frames[frameIndex].toJSON();}this.createFrameFromData({frameIndex,isKeyFrame,shapeType,shape,order,attributes});const isRangeStart=i===0||i>0&&frames[i].frameIndex-frames[i-1].frameIndex>1;const isRangeEnd=i===frames.length-1||i<frames.length-1&&frames[i+1].frameIndex-frames[i].frameIndex>1;if(isRangeStart||isRangeEnd){this.frames[frameIndex].isKeyFrame=true;if(isRangeStart&&this.frames[frameIndex-1]){if(!prevFrames[frameIndex-1]){prevFrames[frameIndex-1]=this.frames[frameIndex-1].toJSON();}this.frames[frameIndex-1].isKeyFrame=true;currFrames[frameIndex-1]=this.frames[frameIndex-1].toJSON();}if(isRangeEnd&&this.frames[frameIndex+1]){if(!prevFrames[frameIndex+1]){prevFrames[frameIndex+1]=this.frames[frameIndex+1].toJSON();}this.frames[frameIndex+1].isKeyFrame=true;currFrames[frameIndex+1]=this.frames[frameIndex+1].toJSON();}}currFrames[frameIndex]=this.frames[frameIndex].toJSON();});return this.formatChangedState(Object.values(prevFrames),Object.values(currFrames));}/**\n   * set attributes in frame\n   * @param frames\n   * @param attributes with ocr text\n   */setAttributes(frames,_ref5){let{attributes}=_ref5;const prevState=[];const currState=[];frames.forEach(frameIndex=>{if(this.frames[frameIndex]){prevState.push(this.frames[frameIndex].toJSON());if(attributes){this.frames[frameIndex].attributes=cloneDeep(attributes);}currState.push(this.frames[frameIndex].toJSON());}});return this.formatChangedState(prevState,currState);}/**\n   * set attributes by frame\n   * @param frameAttributesMap\n   */setAttributesByFrame(frameAttributesMap){const prevState=[];const currState=[];Object.keys(frameAttributesMap).forEach(key=>{const frameIndex=Number(key);const{attributes}=frameAttributesMap[frameIndex];if(this.frames[frameIndex]){prevState.push(this.frames[frameIndex].toJSON());if(attributes){this.frames[frameIndex].attributes=cloneDeep(attributes);}currState.push(this.frames[frameIndex].toJSON());}});return this.formatChangedState(prevState,currState);}/**\n   * add shape in frame\n   * @param frameIndex\n   * @param interpolation\n   * @param shapeType\n   * @param shapeData\n   * @param order\n   */addShape(frameIndex,interpolation,shapeType,shapeData,order,attributes){this.createFrameFromData({frameIndex,isKeyFrame:true,shapeType,shape:shapeData,order,attributes});const keyFrame=this.getNearestKeyFrame(frameIndex);if(keyFrame>=0){var _instance$dynamicAttr,_instance$dynamicAttr2,_instance$dynamicAttr3;this.frames[frameIndex].attributes=cloneDeep(this.frames[keyFrame].attributes);const{instance}=this.instanceItem;const keyFrameDynamicAttributes=(_instance$dynamicAttr=instance.dynamicAttributes)===null||_instance$dynamicAttr===void 0?void 0:(_instance$dynamicAttr2=_instance$dynamicAttr[this.camera])===null||_instance$dynamicAttr2===void 0?void 0:(_instance$dynamicAttr3=_instance$dynamicAttr2[keyFrame])===null||_instance$dynamicAttr3===void 0?void 0:_instance$dynamicAttr3.attributes;instance.setDynamicAttributesByCamera(this.camera,[{frameIndex,attributes:keyFrameDynamicAttributes}]);}let prevState=[];let currState=[this.frames[frameIndex].toJSON()];if(interpolation){const affectedState=this.interpolate(frameIndex,true);prevState=[...prevState,...affectedState.prevState];currState=[...currState,...affectedState.currState];}return this.formatChangedState(prevState,currState);}/**\n   * update shape in frame\n   * @param frameIndex\n   * @param interpolation\n   * @param shapeType\n   * @param shapeData\n   * @param order\n   * @param attributes\n   */updateShape(frameIndex,interpolation,shapeType,shapeData,order,attributes){if(this.frames[frameIndex]){// update\nlet prevState=[this.frames[frameIndex].toJSON()];this.frames[frameIndex].isKeyFrame=true;this.frames[frameIndex].shapeType=shapeType;this.frames[frameIndex].shape=shapeData;if(order!==undefined){this.frames[frameIndex].order=order;}if(attributes){this.frames[frameIndex].attributes=cloneDeep(attributes);}let currState=[this.frames[frameIndex].toJSON()];if(interpolation){const affectedState=this.interpolate(frameIndex);prevState=[...prevState,...affectedState.prevState];currState=[...currState,...affectedState.currState];}return this.formatChangedState(prevState,currState);}// add\nreturn this.addShape(frameIndex,interpolation,shapeType,shapeData,order,attributes);}/**\n   * predict shape\n   * @param frameIndex\n   * @param imageBounds\n   * @param useNearest\n   */predictShape(frameIndex,imageBounds){let useNearest=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;let shapeInfo=predictShapeData(frameIndex,this.frames,imageBounds);if(useNearest&&!shapeInfo){const nearestFrame=this.getNearestKeyFrame(frameIndex);if(nearestFrame>=0){const{shapeType,shape}=this.frames[nearestFrame];shapeInfo={shapeType,shape};}}return shapeInfo;}/**\n   * interpolation\n   * @param frameIndex\n   * @param shouldInsert\n   */interpolate(frameIndex){let shouldInsert=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;const prevState=[];const currState=[];const{shapeType}=this.frames[frameIndex];const[lastKeyFrame]=getLastKeyFrames(1,frameIndex,this.frames);const[nextKeyFrame]=getNextKeyFrames(1,frameIndex,this.frames);const updateFrameData=(frame,shape,insert,frameData)=>{if(this.frames[frame]){prevState.push(this.frames[frame].toJSON());this.frames[frame].isKeyFrame=false;this.frames[frame].shape=shape;this.frames[frame].shapeType=shapeType;currState.push(this.frames[frame].toJSON());}else if(insert){this.createFrameFromData({frameIndex:frame,isKeyFrame:false,shapeType,shape,...(this.getNextShapeOrder&&{order:this.getNextShapeOrder(frame,this.camera)}),...(frameData&&frameData.attributes&&{attributes:frameData.attributes})});currState.push(this.frames[frame].toJSON());}};const updateInstanceDynamicAttributes=(frameStart,frameEnd,insert,keyFrameDynamicAttributes)=>{if(insert){const updateArr=[];for(let index=frameStart;index<frameEnd;index+=1){updateArr.push({frameIndex:index,attributes:keyFrameDynamicAttributes});}const{instance}=this.instanceItem;instance.setDynamicAttributesByCamera(this.camera,updateArr);}};const{instance}=this.instanceItem;if(lastKeyFrame!==undefined&&this.frames[lastKeyFrame].shapeType===shapeType){var _instance$dynamicAttr4,_instance$dynamicAttr5,_instance$dynamicAttr6;for(let i=lastKeyFrame+1;i<frameIndex;i+=1){const{shape}=getShapeFromFrames(this.frames,lastKeyFrame,frameIndex,lastKeyFrame,i);updateFrameData(i,shape,shouldInsert,this.frames[lastKeyFrame]);}const keyFrameDynamicAttributes=(_instance$dynamicAttr4=instance.dynamicAttributes)===null||_instance$dynamicAttr4===void 0?void 0:(_instance$dynamicAttr5=_instance$dynamicAttr4[this.camera])===null||_instance$dynamicAttr5===void 0?void 0:(_instance$dynamicAttr6=_instance$dynamicAttr5[lastKeyFrame])===null||_instance$dynamicAttr6===void 0?void 0:_instance$dynamicAttr6.attributes;if(instance.categoryRef.labelConfigDynamic&&keyFrameDynamicAttributes){updateInstanceDynamicAttributes(lastKeyFrame+1,frameIndex,shouldInsert,keyFrameDynamicAttributes);}}if(nextKeyFrame!==undefined&&this.frames[nextKeyFrame].shapeType===shapeType){for(let i=frameIndex+1;i<nextKeyFrame;i+=1){const{shape}=getShapeFromFrames(this.frames,frameIndex,nextKeyFrame,frameIndex,i);updateFrameData(i,shape,false);}}return{prevState,currState};}/**\n   * remove from frames\n   * @param frames\n   */remove(frames){const prevFrames={};const currFrames={};for(let i=0;i<frames.length;i+=1){const deleteFrame=frames[i];const prevFrame=deleteFrame-1;const nextFrame=deleteFrame+1;// delete\nif(this.frames[deleteFrame]&&!prevFrames[deleteFrame]){prevFrames[deleteFrame]=this.frames[deleteFrame].toJSON();}delete this.frames[deleteFrame];delete currFrames[deleteFrame];const{instance}=this.instanceItem;instance.deleteDynamicAttributesByCamera(this.camera,frames,this.instanceItem.id);// set prev & next frame to key frame\nif(this.frames[prevFrame]){if(!prevFrames[prevFrame]){prevFrames[prevFrame]=this.frames[prevFrame].toJSON();}this.frames[prevFrame].isKeyFrame=true;currFrames[prevFrame]=this.frames[prevFrame].toJSON();}if(this.frames[nextFrame]){if(!prevFrames[nextFrame]){prevFrames[nextFrame]=this.frames[nextFrame].toJSON();}this.frames[nextFrame].isKeyFrame=true;currFrames[nextFrame]=this.frames[nextFrame].toJSON();}}return this.formatChangedState(Object.values(prevFrames),Object.values(currFrames));}/**\n   * get nearest key frame index\n   * @param frameIndex\n   */getNearestKeyFrame(frameIndex){const[lastKeyFrame]=getLastKeyFrames(1,frameIndex,this.frames);if(lastKeyFrame!==undefined){return lastKeyFrame;}const[nextKeyFrame]=getNextKeyFrames(1,frameIndex,this.frames);if(nextKeyFrame!==undefined){return nextKeyFrame;}return-1;}/**\n   * return structured data\n   */toJSON(){return{camera:this.camera,frames:Object.values(this.frames).map(frame=>frame.toJSON())};}/**\n   * format changed state\n   * @param prevState\n   * @param currState\n   */formatChangedState(prevState,currState){return{...(prevState.length>0&&{prevState:{camera:this.camera,frames:[...prevState]}}),...(currState.length>0&&{currState:{camera:this.camera,frames:[...currState]}})};}}","map":{"version":3,"names":["makeAutoObservable","cloneDeep","FrameData","getLastKeyFrames","getNextKeyFrames","getShapeFromFrames","predictShapeData","CameraData","frameStatus","status","Object","values","frames","forEach","_ref","frameIndex","isKeyFrame","isEmpty","keys","length","constructor","_ref2","camera","instanceItem","getNextShapeOrder","autoBind","frame","createFrameFromData","_ref3","shapeType","shape","order","attributes","updateFramesFromData","prevFrames","currFrames","_ref4","i","toJSON","isRangeStart","isRangeEnd","formatChangedState","setAttributes","_ref5","prevState","currState","push","setAttributesByFrame","frameAttributesMap","key","Number","addShape","interpolation","shapeData","keyFrame","getNearestKeyFrame","_instance$dynamicAttr","_instance$dynamicAttr2","_instance$dynamicAttr3","instance","keyFrameDynamicAttributes","dynamicAttributes","setDynamicAttributesByCamera","affectedState","interpolate","updateShape","undefined","predictShape","imageBounds","useNearest","arguments","shapeInfo","nearestFrame","shouldInsert","lastKeyFrame","nextKeyFrame","updateFrameData","insert","frameData","updateInstanceDynamicAttributes","frameStart","frameEnd","updateArr","index","_instance$dynamicAttr4","_instance$dynamicAttr5","_instance$dynamicAttr6","categoryRef","labelConfigDynamic","remove","deleteFrame","prevFrame","nextFrame","deleteDynamicAttributesByCamera","id","map"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking2/model/CameraData.ts"],"sourcesContent":["import { makeAutoObservable } from 'mobx';\nimport { cloneDeep } from 'lodash';\nimport FrameData from './FrameData';\nimport { getLastKeyFrames, getNextKeyFrames, getShapeFromFrames, predictShapeData } from '../utils';\nimport { CameraData as ICameraData, FrameData as IFrameData } from '../types';\nimport { ShapeData, ShapeType } from '../../common/shapes/types';\nimport InstanceItem from './InstanceItem';\n\ninterface ChangedState {\n  prevState?: ICameraData;\n  currState?: ICameraData;\n}\n\ninterface CameraDataOptions extends ICameraData {\n  instanceItem: InstanceItem;\n  getNextShapeOrder?: (frameIndex: number, camera: string) => number;\n}\n\n/**\n * camera data\n * @class\n */\nexport default class CameraData {\n  /**\n   * camera name\n   * @member\n   */\n  camera: string;\n\n  instanceItem: InstanceItem;\n\n  /**\n   * shape frame data\n   * @member\n   */\n  frames: { [frameIndex: number]: FrameData } = {};\n\n  /**\n   * get next shape order\n   * @member\n   */\n  getNextShapeOrder?: (frameIndex: number, camera: string) => number;\n\n  /**\n   * shape frame status (keyframe or not)\n   * @getter\n   */\n  get frameStatus() {\n    const status: { [frameIndex: number]: boolean } = {};\n    Object.values(this.frames).forEach(({ frameIndex, isKeyFrame }) => {\n      status[frameIndex] = isKeyFrame;\n    });\n    return status;\n  }\n\n  /**\n   * no frame\n   * @getter\n   */\n  get isEmpty() {\n    return Object.keys(this.frames).length <= 0;\n  }\n\n  constructor({ camera, frames = [], instanceItem, getNextShapeOrder }: CameraDataOptions) {\n    makeAutoObservable(this, {\n      camera: false,\n      isEmpty: false,\n      getNextShapeOrder: false,\n    }, {\n      autoBind: true,\n    });\n    this.instanceItem = instanceItem;\n    this.getNextShapeOrder = getNextShapeOrder;\n    this.camera = camera;\n    frames.forEach((frame) => this.createFrameFromData(frame));\n  }\n\n  /**\n   * create frame from structured frame data\n   * @param frameData\n   */\n  createFrameFromData({ frameIndex, isKeyFrame, shapeType, shape, order, attributes }: IFrameData) {\n    const frame = new FrameData({\n      frameIndex,\n      isKeyFrame,\n      shapeType,\n      shape,\n      order,\n      attributes,\n    });\n    this.frames[frameIndex] = frame;\n  }\n\n  /**\n   * update frames from structured data\n   * @param frames\n   */\n  updateFramesFromData(frames: IFrameData[]) {\n    const prevFrames: { [frameIndex: number]: IFrameData } = {};\n    const currFrames: { [frameIndex: number]: IFrameData } = {};\n    frames.forEach(({ frameIndex, isKeyFrame, shapeType, shape, order, attributes }, i) => {\n      if (this.frames[frameIndex] && !prevFrames[frameIndex]) {\n        prevFrames[frameIndex] = this.frames[frameIndex].toJSON();\n      }\n      this.createFrameFromData({ frameIndex, isKeyFrame, shapeType, shape, order, attributes });\n\n      const isRangeStart = i === 0 || (i > 0 && frames[i].frameIndex - frames[i - 1].frameIndex > 1);\n      const isRangeEnd = i === frames.length - 1 || (i < frames.length - 1 && frames[i + 1].frameIndex - frames[i].frameIndex > 1);\n      if (isRangeStart || isRangeEnd) {\n        this.frames[frameIndex].isKeyFrame = true;\n        if (isRangeStart && this.frames[frameIndex - 1]) {\n          if (!prevFrames[frameIndex - 1]) {\n            prevFrames[frameIndex - 1] = this.frames[frameIndex - 1].toJSON();\n          }\n          this.frames[frameIndex - 1].isKeyFrame = true;\n          currFrames[frameIndex - 1] = this.frames[frameIndex - 1].toJSON();\n        }\n        if (isRangeEnd && this.frames[frameIndex + 1]) {\n          if (!prevFrames[frameIndex + 1]) {\n            prevFrames[frameIndex + 1] = this.frames[frameIndex + 1].toJSON();\n          }\n          this.frames[frameIndex + 1].isKeyFrame = true;\n          currFrames[frameIndex + 1] = this.frames[frameIndex + 1].toJSON();\n        }\n      }\n\n      currFrames[frameIndex] = this.frames[frameIndex].toJSON();\n    });\n    return this.formatChangedState(Object.values(prevFrames), Object.values(currFrames));\n  }\n\n  /**\n   * set attributes in frame\n   * @param frames\n   * @param attributes with ocr text\n   */\n  setAttributes(frames: number[], { attributes }: { attributes?: any }) {\n    const prevState: IFrameData[] = [];\n    const currState: IFrameData[] = [];\n    frames.forEach((frameIndex) => {\n      if (this.frames[frameIndex]) {\n        prevState.push(this.frames[frameIndex].toJSON());\n        if (attributes) {\n          this.frames[frameIndex].attributes = cloneDeep(attributes);\n        }\n        currState.push(this.frames[frameIndex].toJSON());\n      }\n    });\n    return this.formatChangedState(prevState, currState);\n  }\n\n  /**\n   * set attributes by frame\n   * @param frameAttributesMap\n   */\n  setAttributesByFrame(frameAttributesMap: { [frameIndex: number]: { attributes?: any } }) {\n    const prevState: IFrameData[] = [];\n    const currState: IFrameData[] = [];\n    Object.keys(frameAttributesMap).forEach((key) => {\n      const frameIndex = Number(key);\n      const { attributes } = frameAttributesMap[frameIndex];\n      if (this.frames[frameIndex]) {\n        prevState.push(this.frames[frameIndex].toJSON());\n        if (attributes) {\n          this.frames[frameIndex].attributes = cloneDeep(attributes);\n        }\n        currState.push(this.frames[frameIndex].toJSON());\n      }\n    });\n    return this.formatChangedState(prevState, currState);\n  }\n\n  /**\n   * add shape in frame\n   * @param frameIndex\n   * @param interpolation\n   * @param shapeType\n   * @param shapeData\n   * @param order\n   */\n  addShape(frameIndex: number, interpolation: boolean, shapeType: ShapeType, shapeData: ShapeData, order?: number, attributes?: any): ChangedState {\n    this.createFrameFromData({\n      frameIndex,\n      isKeyFrame: true,\n      shapeType,\n      shape: shapeData,\n      order,\n      attributes,\n    });\n\n    const keyFrame = this.getNearestKeyFrame(frameIndex);\n    if (keyFrame >= 0) {\n      this.frames[frameIndex].attributes = cloneDeep(this.frames[keyFrame].attributes);\n      const { instance } = this.instanceItem;\n      const keyFrameDynamicAttributes = instance.dynamicAttributes?.[this.camera]?.[keyFrame]?.attributes;\n      instance.setDynamicAttributesByCamera(this.camera, [{ frameIndex, attributes: keyFrameDynamicAttributes }]);\n    }\n\n    let prevState: IFrameData[] = [];\n    let currState: IFrameData[] = [this.frames[frameIndex].toJSON()];\n    if (interpolation) {\n      const affectedState = this.interpolate(frameIndex, true);\n      prevState = [...prevState, ...affectedState.prevState];\n      currState = [...currState, ...affectedState.currState];\n    }\n    return this.formatChangedState(prevState, currState);\n  }\n\n  /**\n   * update shape in frame\n   * @param frameIndex\n   * @param interpolation\n   * @param shapeType\n   * @param shapeData\n   * @param order\n   * @param attributes\n   */\n  updateShape(frameIndex: number, interpolation: boolean, shapeType: ShapeType, shapeData: ShapeData, order?: number, attributes?: any) {\n    if (this.frames[frameIndex]) {\n      // update\n      let prevState: IFrameData[] = [this.frames[frameIndex].toJSON()];\n      this.frames[frameIndex].isKeyFrame = true;\n      this.frames[frameIndex].shapeType = shapeType;\n      this.frames[frameIndex].shape = shapeData;\n      if (order !== undefined) {\n        this.frames[frameIndex].order = order;\n      }\n      if (attributes) {\n        this.frames[frameIndex].attributes = cloneDeep(attributes);\n      }\n      let currState: IFrameData[] = [this.frames[frameIndex].toJSON()];\n\n      if (interpolation) {\n        const affectedState = this.interpolate(frameIndex);\n        prevState = [...prevState, ...affectedState.prevState];\n        currState = [...currState, ...affectedState.currState];\n      }\n      return this.formatChangedState(prevState, currState);\n    }\n\n    // add\n    return this.addShape(frameIndex, interpolation, shapeType, shapeData, order, attributes);\n  }\n\n  /**\n   * predict shape\n   * @param frameIndex\n   * @param imageBounds\n   * @param useNearest\n   */\n  predictShape(frameIndex: number, imageBounds?: { top: number; right: number; bottom: number; left: number }, useNearest = false) {\n    let shapeInfo = predictShapeData(frameIndex, this.frames, imageBounds);\n    if (useNearest && !shapeInfo) {\n      const nearestFrame = this.getNearestKeyFrame(frameIndex);\n      if (nearestFrame >= 0) {\n        const { shapeType, shape } = this.frames[nearestFrame];\n        shapeInfo = { shapeType, shape };\n      }\n    }\n    return shapeInfo;\n  }\n\n  /**\n   * interpolation\n   * @param frameIndex\n   * @param shouldInsert\n   */\n  interpolate(frameIndex: number, shouldInsert = false) {\n    const prevState: IFrameData[] = [];\n    const currState: IFrameData[] = [];\n\n    const { shapeType } = this.frames[frameIndex];\n    const [lastKeyFrame] = getLastKeyFrames(1, frameIndex, this.frames);\n    const [nextKeyFrame] = getNextKeyFrames(1, frameIndex, this.frames);\n    const updateFrameData = (frame: number, shape: ShapeData, insert: boolean, frameData?: FrameData) => {\n      if (this.frames[frame]) {\n        prevState.push(this.frames[frame].toJSON());\n        this.frames[frame].isKeyFrame = false;\n        this.frames[frame].shape = shape;\n        this.frames[frame].shapeType = shapeType;\n        currState.push(this.frames[frame].toJSON());\n      } else if (insert) {\n        this.createFrameFromData({\n          frameIndex: frame,\n          isKeyFrame: false,\n          shapeType,\n          shape,\n          ...this.getNextShapeOrder && { order: this.getNextShapeOrder(frame, this.camera) },\n          ...(frameData && frameData.attributes && { attributes: frameData.attributes }),\n        });\n        currState.push(this.frames[frame].toJSON());\n      }\n    };\n\n    const updateInstanceDynamicAttributes = (frameStart: number, frameEnd: number, insert: boolean, keyFrameDynamicAttributes?: any) => {\n      if (insert) {\n        const updateArr = [];\n        for (let index = frameStart; index < frameEnd; index += 1) {\n          updateArr.push({\n            frameIndex: index,\n            attributes: keyFrameDynamicAttributes\n          });\n        }\n        const { instance } = this.instanceItem;\n        instance.setDynamicAttributesByCamera(this.camera, updateArr);\n      }\n    };\n    const { instance } = this.instanceItem;\n    if (lastKeyFrame !== undefined && this.frames[lastKeyFrame].shapeType === shapeType) {\n      for (let i = lastKeyFrame + 1; i < frameIndex; i += 1) {\n        const { shape } = getShapeFromFrames(this.frames, lastKeyFrame, frameIndex, lastKeyFrame, i);\n        updateFrameData(i, shape, shouldInsert, this.frames[lastKeyFrame]);\n      }\n      const keyFrameDynamicAttributes = instance.dynamicAttributes?.[this.camera]?.[lastKeyFrame]?.attributes;\n      if (instance.categoryRef.labelConfigDynamic && keyFrameDynamicAttributes) {\n        updateInstanceDynamicAttributes(lastKeyFrame + 1, frameIndex, shouldInsert, keyFrameDynamicAttributes);\n      }\n    }\n    if (nextKeyFrame !== undefined && this.frames[nextKeyFrame].shapeType === shapeType) {\n      for (let i = frameIndex + 1; i < nextKeyFrame; i += 1) {\n        const { shape } = getShapeFromFrames(this.frames, frameIndex, nextKeyFrame, frameIndex, i);\n        updateFrameData(i, shape, false);\n      }\n    }\n\n    return { prevState, currState };\n  }\n\n  /**\n   * remove from frames\n   * @param frames\n   */\n  remove(frames: number[]) {\n    const prevFrames: { [frameIndex: number]: IFrameData } = {};\n    const currFrames: { [frameIndex: number]: IFrameData } = {};\n    for (let i = 0; i < frames.length; i += 1) {\n      const deleteFrame = frames[i];\n      const prevFrame = deleteFrame - 1;\n      const nextFrame = deleteFrame + 1;\n\n      // delete\n      if (this.frames[deleteFrame] && !prevFrames[deleteFrame]) {\n        prevFrames[deleteFrame] = this.frames[deleteFrame].toJSON();\n      }\n      delete this.frames[deleteFrame];\n      delete currFrames[deleteFrame];\n\n      const { instance } = this.instanceItem;\n      instance.deleteDynamicAttributesByCamera(this.camera, frames, this.instanceItem.id);\n\n      // set prev & next frame to key frame\n      if (this.frames[prevFrame]) {\n        if (!prevFrames[prevFrame]) {\n          prevFrames[prevFrame] = this.frames[prevFrame].toJSON();\n        }\n        this.frames[prevFrame].isKeyFrame = true;\n        currFrames[prevFrame] = this.frames[prevFrame].toJSON();\n      }\n      if (this.frames[nextFrame]) {\n        if (!prevFrames[nextFrame]) {\n          prevFrames[nextFrame] = this.frames[nextFrame].toJSON();\n        }\n        this.frames[nextFrame].isKeyFrame = true;\n        currFrames[nextFrame] = this.frames[nextFrame].toJSON();\n      }\n    }\n    return this.formatChangedState(Object.values(prevFrames), Object.values(currFrames));\n  }\n\n  /**\n   * get nearest key frame index\n   * @param frameIndex\n   */\n  getNearestKeyFrame(frameIndex: number) {\n    const [lastKeyFrame] = getLastKeyFrames(1, frameIndex, this.frames);\n    if (lastKeyFrame !== undefined) {\n      return lastKeyFrame;\n    }\n    const [nextKeyFrame] = getNextKeyFrames(1, frameIndex, this.frames);\n    if (nextKeyFrame !== undefined) {\n      return nextKeyFrame;\n    }\n    return -1;\n  }\n\n  /**\n   * return structured data\n   */\n  toJSON(): ICameraData {\n    return {\n      camera: this.camera,\n      frames: Object.values(this.frames).map((frame) => frame.toJSON()),\n    };\n  }\n\n  /**\n   * format changed state\n   * @param prevState\n   * @param currState\n   */\n  formatChangedState(prevState: IFrameData[], currState: IFrameData[]): ChangedState {\n    return {\n      ...prevState.length > 0 && {\n        prevState: { camera: this.camera, frames: [...prevState] },\n      },\n      ...currState.length > 0 && {\n        currState: { camera: this.camera, frames: [...currState] },\n      },\n    };\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}