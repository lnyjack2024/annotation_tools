{"ast":null,"code":"import{Base64}from'js-base64';import{cloneDeep,isEqual}from'lodash';import*as toWav from'audiobuffer-to-wav';import{notification}from'antd';import{createSegment}from'./segmentController';import{defaultColor,translate,tagType,SegmentMode,ValidDurationMode,StyleConfigMode}from'../../constants';import{store,lawToWav,getFileExtension}from'../../../../utils';import{isAnnotationReadonly}from'../../../../utils/tool-mode';const decode=str=>{try{return JSON.parse(Base64.decode(str));}catch(e){return null;}};const AUDIO_KEY_ATTRIBUTE='audio_key_attribute';const AUDIO_ROLE_ATTRIBUTE='role';export const handleLawToWav=(alawUrl,tail,index)=>new Promise(async(resolve,reject)=>{try{const buffer=await fetch(alawUrl).then(res=>res.arrayBuffer());const audioBuffer=lawToWav(buffer,tail);const wav=toWav(audioBuffer);const blob=new Blob([wav],{type:'audio/wav'});resolve(window.URL.createObjectURL(blob));}catch(error){notification.error({message:\"\".concat(translate('AUDIO_ERROR'),\" \").concat(index+1)});return false;}});const parseVideos=(audio,result)=>new Promise(async(resolve,reject)=>{const{audios=[]}=result||{};const array=audio.split(',');const videos=[];const videoTypes='asf,avi,wmv,mkv,mp4,mov,rm,3gp,flv,mpg,rmvb,mpeg'.split(',');for(let index=0;index<array.length;index+=1){const src=array[index];let video=src;if(video){const tail=getFileExtension(video);if((tail==='alaw'||tail==='ulaw')&&index===0){video=await handleLawToWav(src,tail,index);}if(video){const savedAudio=audios[index];videos.push({url:video,source:src,loaded:tail!=='alaw'&&tail!=='ulaw'?true:index===0,ready:false,zoom:1,speed:1,checked:!index,type:videoTypes.indexOf(tail)<0?'none-video':'video',...(savedAudio&&savedAudio.duration&&{duration:savedAudio.duration}),...(savedAudio&&savedAudio.attributes!==undefined&&{attributes:cloneDeep(savedAudio.attributes),originAttributes:cloneDeep(savedAudio.attributes)// save original saved attributes\n})});}}}resolve(videos);});const parseLableConfig=labelConfig=>{try{const keys=[AUDIO_KEY_ATTRIBUTE,AUDIO_ROLE_ATTRIBUTE];const obj=decode(labelConfig)||{fields:[]};obj.fields=obj.fields||[];obj.fields.forEach(value=>{// if (value.type.toUpperCase() !== 'RADIO'\n//     && value.type.toUpperCase() !== 'TEXTAREA'\n//     && value.type.toUpperCase() !== 'TEXT') {\n//   throw new Error(`${translate('PAYLOAD_ERROR_INVALID_ATTRIBUTE_TYPE')}: ${value.type}`);\n// }\nif(value.name&&keys.indexOf(value.name.toLowerCase())>=0){throw new Error(\"\".concat(translate('PAYLOAD_ERROR_DUPLICATED_ATTRIBUTE_NAME'),\": \").concat(value.name));}keys.push(value.name.toLowerCase());});return obj;}catch(error){notification.error({message:error.message});return{fields:[]};}};const parseOntology=function(){let ontology=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];try{const newOntology=new Map();newOntology.set('none',defaultColor.darkGray);ontology.forEach((value,index)=>{if(!newOntology.has(value.class_name))newOntology.set(value.class_name,value.display_color);else throw new Error(\"\".concat(translate('PAYLOAD_ERROR_DUPLICATED_ONTOLOGY'),\": \").concat(value.class_name));});return newOntology;}catch(error){notification.error({message:error.message});return new Map();}};const parseResults=(results,unitId,videos,ontology,lineConfig,segmentConfig,segmentMode)=>{// eslint-disable-next-line no-param-reassign\n// console.log(store.getStorage('long-audio', 'review_from'));\nconst cache=store.getStorage('long-audio',unitId);results=cache&&cache.results?cache.results:results;if(!results||!results.length)results=[];videos.forEach((video,index)=>{if(!results[index]||!results[index].length){if(segmentMode===SegmentMode.individual){results[index]=[];}else{results[index]=[createSegment(0,null,segmentConfig,lineConfig)];}}});return results;};const parseKeyAttribute=config=>{const options=[];if(config&&typeof config==='string'){try{// e.g. valid:a,b,c|invalid:x,y,z\nconst splits=config.split('|');splits.forEach(s=>{const parts=s.split(':');if(parts.length!==2){throw new Error('invalid config');}const part1=parts[0].toLowerCase();const part2=parts[1];if(part1==='valid'||part1==='invalid'){const values=part2.split(',').filter(p=>p.trim().length>0);values.forEach(v=>{options.push({value:v,label:v,isValid:part1==='valid'});});}else{throw new Error('invalid config');}});}catch(e){notification.error({message:\"\".concat(translate('PAYLOAD_ERROR_INVALID_KEY_ATTRIBUTE'),\" \").concat(config)});}}return{name:AUDIO_KEY_ATTRIBUTE,label:\"\".concat(translate('KEY_ATTRIBUTE_FILED_NAME')),type:'RADIO',options};};const parseMinLength=length=>{const min=Number.parseFloat(length);return Number.isNaN(min)?0.05:min;};export const parseSegments=(state,data)=>{const{videoIndex,segments}=data;const results=[...state.results];results[videoIndex]=segments;return{...state,results};};export const parseTagGroup=data=>{try{const tagGroup=decode(data)||[];const shortcuts={};tagGroup.forEach(group=>{if(!group.tags){throw new Error(\"\".concat(translate('PAYLOAD_ERROR_INVALID_TAG_CONFIG'),\" \").concat(JSON.stringify(group)));}if(group.type===tagType.tag){group.tags.forEach(tag=>{if(typeof tag.prefix!=='string'||typeof tag.suffix!=='string'){throw new Error(\"\".concat(translate('PAYLOAD_ERROR_INVALID_TAG_CONFIG'),\" \").concat(JSON.stringify(tag)));}if(shortcuts[tag.shortcut]){throw new Error(\"\".concat(translate('PAYLOAD_ERROR_DUPLICATE_SHORTCUT'),\" \").concat(tag.shortcut));}else{shortcuts[tag.shortcut]=tag.shortcut;}});}else if(group.type===tagType.standalone){group.tags.forEach(tag=>{if(typeof tag.text!=='string'){throw new Error(\"\".concat(translate('PAYLOAD_ERROR_INVALID_TAG_CONFIG'),\" \").concat(JSON.stringify(tag)));}if(shortcuts[tag.shortcut]){throw new Error(\"\".concat(translate('PAYLOAD_ERROR_DUPLICATE_SHORTCUT'),\" \").concat(tag.shortcut));}else{shortcuts[tag.shortcut]=tag.shortcut;}});}else{throw new Error(\"\".concat(translate('PAYLOAD_ERROR_INVALID_TAG_TYPE'),\" \").concat(group.type));}});return tagGroup;}catch(error){notification.error({message:error.message});return[];}};export const setWordTimestamps=(state,data)=>({...state,wordTimestamps:data.wordTimestamps});export const initPayload=(state,data)=>new Promise(async(resolve,reject)=>{var _data$word_timestamps,_data$jobProxy;const videos=await parseVideos(data.audio,data.result);const ontology=parseOntology(data.ontology);const globalConfig=parseLableConfig(data.global_config);if(globalConfig&&Array.isArray(globalConfig.fields)&&globalConfig.fields.length>0){const defaultValues={};globalConfig.fields.forEach(f=>{if(f.defaultValue!==undefined){defaultValues[f.name]=f.defaultValue;}});if(Object.keys(defaultValues).length>0){// has default values\nvideos.forEach(video=>{video.defaultAttributes=cloneDeep(defaultValues);// save default attributes\nif(!isAnnotationReadonly(data.mode)){// update attributes if not readonly\nif(!video.attributes){video.attributes={};}Object.keys(defaultValues).forEach(key=>{if(video.attributes[key]===undefined){video.attributes[key]=defaultValues[key];}});}});}}const invalidAnnotatable=data.invalid_annotatable!=='false'&&data.invalid_annotatable!==false;const annotateDisabled=!invalidAnnotatable&&videos[state.currentVideo].attributes&&videos[state.currentVideo].attributes.is_valid==='invalid';const segmentConfig=parseLableConfig(data.label_config_segment);const lineConfig=parseLableConfig(data.label_config);const segmentFieldMap={};const lineFieldMap={};segmentConfig.fields.forEach(s=>{segmentFieldMap[s.name]=s;});lineConfig.fields.forEach(s=>{lineFieldMap[s.name]=s;});const issueTypes=data.issue_types?data.issue_types.split(','):['issue type'];const segmentMode=Object.values(SegmentMode).includes(data.segment_mode)?data.segment_mode:SegmentMode.continuous;const results=parseResults(data.review_from,data.unit_id,videos,ontology,lineConfig,segmentConfig,segmentMode);const tagGroup=parseTagGroup(data.tag_group);const jobId=data.job_id;const overlap=data.overlap==='true'||data.overlap===true;const keyAttribute=parseKeyAttribute(data.key_attribute);const client=data.client||'';const wordTimestampUrls=((_data$word_timestamps=data.word_timestamps)===null||_data$word_timestamps===void 0?void 0:_data$word_timestamps.split(','))||[];const minLength=parseMinLength(data.min_length);let spaceLine=0;if(data.space_line){const num=Number(data.space_line);if(!Number.isNaN(num)&&num>0){spaceLine=num;}}const measurements=[];if(data.measurement_box){data.measurement_box.split(',').forEach(item=>{const size=Number(item);if(!Number.isNaN(size)&&size>0&&!measurements.includes(size)){measurements.push(size);}});}const segmentOverlap=data.segment_overlap!=='false'&&data.segment_overlap!==false;const adjustmentStep=0.1;// parse style config\nconst styleConfig=decode(data.style_config)||{mode:StyleConfigMode.segment,groups:[]};const scriptCheck=data.script_check==='true'||data.script_check===true;const submitCheck=data.submit_check!=='false'&&data.submit_check!==false;const validDuration=Object.values(ValidDurationMode).includes(data.valid_duration)?data.valid_duration:ValidDurationMode.attributes;const lastResults=JSON.parse(JSON.stringify(results)).map(v=>{const map={};(v||[]).forEach(item=>{delete item.qaChecked;delete item.qaComment;delete item.qaReason;delete item.qaWorkerName;map[item.id]=item;});return map;});const newState={videos,ontology,results,lastResults,globalConfig,invalidAnnotatable,annotateDisabled,segmentConfig,lineConfig,issueTypes,unitId:data.unit_id,toolMode:data.mode,reviews:data._reviews,tagGroup,jobId,overlap,keyAttribute,client,wordTimestampUrls,minSegmentLength:minLength,segmentMode,currentSegment:segmentMode===SegmentMode.individual?-1:0,spaceLine,measurements,selectedMeasurement:measurements[0]||-1,segmentOverlap,adjustmentStep,scriptCheck,submitCheck,validDuration,segmentFieldMap,lineFieldMap,styleConfig,jobProxy:data.jobProxy,workerName:(_data$jobProxy=data.jobProxy)===null||_data$jobProxy===void 0?void 0:_data$jobProxy.advanceWorkerName};resolve(newState);});export const initPayloadState=(state,data)=>({...state,...data});export const saveData=state=>{const data={results:state.results,videos:state.videos};store.setStorage('long-audio',state.unitId,data);};export const setVideoLoaded=(state,data)=>{const videos=[...state.videos];videos.forEach((v,i)=>{v.url=data.videos[i].url;v.loaded=true;});return{...state,videos,isLoadedAlaw:true};};export const setLoading=(state,data)=>({...state,loading:data});export const setVideoValid=(state,data)=>{const{index}=data;const videos=[...state.videos];videos[index]={...state.videos[index]};videos[index].ready=true;return{...state,videos};};export const setVideoAttributes=(state,data)=>{const{index,attributes}=data;const{videos}=state;videos[index].attributes={...videos[index].attributes,...attributes};return{...state,annotateDisabled:!state.invalidAnnotatable&&videos[index].attributes&&videos[index].attributes.is_valid==='invalid'};};export const setAttributeFocusInfo=function(state){let data=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(!isEqual(state.focusAttribute,data)){return{...state,focusAttribute:{...data,videoIndex:state.currentVideo}};}return state;};export const setLoadReviewEnabled=(state,enabled)=>({...state,loadReviewEnabled:enabled});export const setResults=(state,data)=>({...state,results:data.results});","map":{"version":3,"names":["Base64","cloneDeep","isEqual","toWav","notification","createSegment","defaultColor","translate","tagType","SegmentMode","ValidDurationMode","StyleConfigMode","store","lawToWav","getFileExtension","isAnnotationReadonly","decode","str","JSON","parse","e","AUDIO_KEY_ATTRIBUTE","AUDIO_ROLE_ATTRIBUTE","handleLawToWav","alawUrl","tail","index","Promise","resolve","reject","buffer","fetch","then","res","arrayBuffer","audioBuffer","wav","blob","Blob","type","window","URL","createObjectURL","error","message","concat","parseVideos","audio","result","audios","array","split","videos","videoTypes","length","src","video","savedAudio","push","url","source","loaded","ready","zoom","speed","checked","indexOf","duration","attributes","undefined","originAttributes","parseLableConfig","labelConfig","keys","obj","fields","forEach","value","name","toLowerCase","Error","parseOntology","ontology","arguments","newOntology","Map","set","darkGray","has","class_name","display_color","parseResults","results","unitId","lineConfig","segmentConfig","segmentMode","cache","getStorage","individual","parseKeyAttribute","config","options","splits","s","parts","part1","part2","values","filter","p","trim","v","label","isValid","parseMinLength","min","Number","parseFloat","isNaN","parseSegments","state","data","videoIndex","segments","parseTagGroup","tagGroup","shortcuts","group","tags","stringify","tag","prefix","suffix","shortcut","standalone","text","setWordTimestamps","wordTimestamps","initPayload","_data$word_timestamps","_data$jobProxy","globalConfig","global_config","Array","isArray","defaultValues","f","defaultValue","Object","defaultAttributes","mode","key","invalidAnnotatable","invalid_annotatable","annotateDisabled","currentVideo","is_valid","label_config_segment","label_config","segmentFieldMap","lineFieldMap","issueTypes","issue_types","includes","segment_mode","continuous","review_from","unit_id","tag_group","jobId","job_id","overlap","keyAttribute","key_attribute","client","wordTimestampUrls","word_timestamps","minLength","min_length","spaceLine","space_line","num","measurements","measurement_box","item","size","segmentOverlap","segment_overlap","adjustmentStep","styleConfig","style_config","segment","groups","scriptCheck","script_check","submitCheck","submit_check","validDuration","valid_duration","lastResults","map","qaChecked","qaComment","qaReason","qaWorkerName","id","newState","toolMode","reviews","_reviews","minSegmentLength","currentSegment","selectedMeasurement","jobProxy","workerName","advanceWorkerName","initPayloadState","saveData","setStorage","setVideoLoaded","i","isLoadedAlaw","setLoading","loading","setVideoValid","setVideoAttributes","setAttributeFocusInfo","focusAttribute","setLoadReviewEnabled","enabled","loadReviewEnabled","setResults"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/redux/reducer/connectController.js"],"sourcesContent":["import { Base64 } from 'js-base64';\nimport { cloneDeep, isEqual } from 'lodash';\nimport * as toWav from 'audiobuffer-to-wav';\nimport { notification } from 'antd';\nimport { createSegment } from './segmentController';\nimport { defaultColor, translate, tagType, SegmentMode, ValidDurationMode, StyleConfigMode } from '../../constants';\nimport { store, lawToWav, getFileExtension } from '../../../../utils';\nimport { isAnnotationReadonly } from '../../../../utils/tool-mode';\n\nconst decode = (str) => {\n  try { return JSON.parse(Base64.decode(str)); } catch (e) { return null; }\n};\n\nconst AUDIO_KEY_ATTRIBUTE = 'audio_key_attribute';\nconst AUDIO_ROLE_ATTRIBUTE = 'role';\n\nexport const handleLawToWav = (alawUrl, tail, index) => new Promise(async (resolve, reject) => {\n  try {\n    const buffer = await fetch(alawUrl).then((res) => res.arrayBuffer());\n    const audioBuffer = lawToWav(buffer, tail);\n    const wav = toWav(audioBuffer);\n    const blob = new Blob([wav], { type: 'audio/wav' });\n    resolve(window.URL.createObjectURL(blob));\n  } catch (error) {\n    notification.error({ message: `${translate('AUDIO_ERROR')} ${index + 1}` });\n    return false;\n  }\n});\n\nconst parseVideos = (audio, result) => new Promise(async (resolve, reject) => {\n  const { audios = [] } = result || {};\n  const array = audio.split(',');\n  const videos = [];\n  const videoTypes = 'asf,avi,wmv,mkv,mp4,mov,rm,3gp,flv,mpg,rmvb,mpeg'.split(',');\n  for (let index = 0; index < array.length; index += 1) {\n    const src = array[index];\n    let video = src;\n    if (video) {\n      const tail = getFileExtension(video);\n      if ((tail === 'alaw' || tail === 'ulaw') && index === 0) {\n        video = await handleLawToWav(src, tail, index);\n      }\n      if (video) {\n        const savedAudio = audios[index];\n        videos.push({\n          url: video,\n          source: src,\n          loaded: (tail !== 'alaw' && tail !== 'ulaw') ? true : index === 0,\n          ready: false,\n          zoom: 1,\n          speed: 1,\n          checked: !index,\n          type: videoTypes.indexOf(tail) < 0 ? 'none-video' : 'video',\n          ...savedAudio && savedAudio.duration && {\n            duration: savedAudio.duration\n          },\n          ...savedAudio && savedAudio.attributes !== undefined && {\n            attributes: cloneDeep(savedAudio.attributes),\n            originAttributes: cloneDeep(savedAudio.attributes), // save original saved attributes\n          },\n        });\n      }\n    }\n  }\n  resolve(videos);\n});\n\nconst parseLableConfig = (labelConfig) => {\n  try {\n    const keys = [AUDIO_KEY_ATTRIBUTE, AUDIO_ROLE_ATTRIBUTE];\n    const obj = decode(labelConfig) || { fields: [] };\n    obj.fields = obj.fields || [];\n    obj.fields.forEach((value) => {\n      // if (value.type.toUpperCase() !== 'RADIO'\n      //     && value.type.toUpperCase() !== 'TEXTAREA'\n      //     && value.type.toUpperCase() !== 'TEXT') {\n      //   throw new Error(`${translate('PAYLOAD_ERROR_INVALID_ATTRIBUTE_TYPE')}: ${value.type}`);\n      // }\n      if (value.name && keys.indexOf(value.name.toLowerCase()) >= 0) {\n        throw new Error(`${translate('PAYLOAD_ERROR_DUPLICATED_ATTRIBUTE_NAME')}: ${value.name}`);\n      }\n      keys.push(value.name.toLowerCase());\n    });\n    return obj;\n  } catch (error) {\n    notification.error({ message: error.message });\n    return { fields: [] };\n  }\n};\n\nconst parseOntology = (ontology = []) => {\n  try {\n    const newOntology = new Map();\n    newOntology.set('none', defaultColor.darkGray);\n    ontology.forEach((value, index) => {\n      if (!newOntology.has(value.class_name)) newOntology.set(value.class_name, value.display_color);\n      else throw new Error(`${translate('PAYLOAD_ERROR_DUPLICATED_ONTOLOGY')}: ${value.class_name}`);\n    });\n    return newOntology;\n  } catch (error) {\n    notification.error({ message: error.message });\n    return new Map();\n  }\n};\n\nconst parseResults = (results, unitId, videos, ontology, lineConfig, segmentConfig, segmentMode) => {\n  // eslint-disable-next-line no-param-reassign\n  // console.log(store.getStorage('long-audio', 'review_from'));\n  const cache = store.getStorage('long-audio', unitId);\n  results = cache && cache.results ? cache.results : results;\n  if (!results || !results.length) results = [];\n  videos.forEach((video, index) => {\n    if (!results[index] || !results[index].length) {\n      if (segmentMode === SegmentMode.individual) {\n        results[index] = [];\n      } else {\n        results[index] = [createSegment(0, null, segmentConfig, lineConfig)];\n      }\n    }\n  });\n  return results;\n};\n\nconst parseKeyAttribute = (config) => {\n  const options = [];\n  if (config && typeof config === 'string') {\n    try {\n      // e.g. valid:a,b,c|invalid:x,y,z\n      const splits = config.split('|');\n      splits.forEach((s) => {\n        const parts = s.split(':');\n        if (parts.length !== 2) {\n          throw new Error('invalid config');\n        }\n        const part1 = parts[0].toLowerCase();\n        const part2 = parts[1];\n        if (part1 === 'valid' || part1 === 'invalid') {\n          const values = part2.split(',').filter((p) => p.trim().length > 0);\n          values.forEach((v) => {\n            options.push({\n              value: v,\n              label: v,\n              isValid: part1 === 'valid'\n            });\n          });\n        } else {\n          throw new Error('invalid config');\n        }\n      });\n    } catch (e) {\n      notification.error({ message: `${translate('PAYLOAD_ERROR_INVALID_KEY_ATTRIBUTE')} ${config}` });\n    }\n  }\n\n  return {\n    name: AUDIO_KEY_ATTRIBUTE,\n    label: `${translate('KEY_ATTRIBUTE_FILED_NAME')}`,\n    type: 'RADIO',\n    options,\n  };\n};\n\nconst parseMinLength = (length) => {\n  const min = Number.parseFloat(length);\n  return Number.isNaN(min) ? 0.05 : min;\n};\n\nexport const parseSegments = (state, data) => {\n  const { videoIndex, segments } = data;\n  const results = [...state.results];\n  results[videoIndex] = segments;\n  return {\n    ...state,\n    results,\n  };\n};\n\nexport const parseTagGroup = (data) => {\n  try {\n    const tagGroup = decode(data) || [];\n    const shortcuts = {};\n    tagGroup.forEach((group) => {\n      if (!group.tags) {\n        throw new Error(`${translate('PAYLOAD_ERROR_INVALID_TAG_CONFIG')} ${JSON.stringify(group)}`);\n      }\n      if (group.type === tagType.tag) {\n        group.tags.forEach((tag) => {\n          if (typeof tag.prefix !== 'string' || typeof tag.suffix !== 'string') {\n            throw new Error(`${translate('PAYLOAD_ERROR_INVALID_TAG_CONFIG')} ${JSON.stringify(tag)}`);\n          }\n          if (shortcuts[tag.shortcut]) {\n            throw new Error(`${translate('PAYLOAD_ERROR_DUPLICATE_SHORTCUT')} ${tag.shortcut}`);\n          } else {\n            shortcuts[tag.shortcut] = tag.shortcut;\n          }\n        });\n      } else if (group.type === tagType.standalone) {\n        group.tags.forEach((tag) => {\n          if (typeof tag.text !== 'string') {\n            throw new Error(`${translate('PAYLOAD_ERROR_INVALID_TAG_CONFIG')} ${JSON.stringify(tag)}`);\n          }\n          if (shortcuts[tag.shortcut]) {\n            throw new Error(`${translate('PAYLOAD_ERROR_DUPLICATE_SHORTCUT')} ${tag.shortcut}`);\n          } else {\n            shortcuts[tag.shortcut] = tag.shortcut;\n          }\n        });\n      } else {\n        throw new Error(`${translate('PAYLOAD_ERROR_INVALID_TAG_TYPE')} ${group.type}`);\n      }\n    });\n    return tagGroup;\n  } catch (error) {\n    notification.error({ message: error.message });\n    return [];\n  }\n};\n\nexport const setWordTimestamps = (state, data) => ({\n  ...state,\n  wordTimestamps: data.wordTimestamps,\n});\n\nexport const initPayload = (state, data) => new Promise(async (resolve, reject) => {\n  const videos = await parseVideos(data.audio, data.result);\n  const ontology = parseOntology(data.ontology);\n  const globalConfig = parseLableConfig(data.global_config);\n  if (globalConfig && Array.isArray(globalConfig.fields) && globalConfig.fields.length > 0) {\n    const defaultValues = {};\n    globalConfig.fields.forEach((f) => {\n      if (f.defaultValue !== undefined) {\n        defaultValues[f.name] = f.defaultValue;\n      }\n    });\n    if (Object.keys(defaultValues).length > 0) { // has default values\n      videos.forEach((video) => {\n        video.defaultAttributes = cloneDeep(defaultValues); // save default attributes\n        if (!isAnnotationReadonly(data.mode)) {\n          // update attributes if not readonly\n          if (!video.attributes) {\n            video.attributes = {};\n          }\n          Object.keys(defaultValues).forEach((key) => {\n            if (video.attributes[key] === undefined) {\n              video.attributes[key] = defaultValues[key];\n            }\n          });\n        }\n      });\n    }\n  }\n  const invalidAnnotatable = data.invalid_annotatable !== 'false' && data.invalid_annotatable !== false;\n  const annotateDisabled = !invalidAnnotatable && videos[state.currentVideo].attributes && videos[state.currentVideo].attributes.is_valid === 'invalid';\n  const segmentConfig = parseLableConfig(data.label_config_segment);\n  const lineConfig = parseLableConfig(data.label_config);\n  const segmentFieldMap = {};\n  const lineFieldMap = {};\n  segmentConfig.fields\n    .forEach((s) => {\n      segmentFieldMap[s.name] = s;\n    });\n  lineConfig.fields\n    .forEach((s) => {\n      lineFieldMap[s.name] = s;\n    });\n\n  const issueTypes = data.issue_types ? data.issue_types.split(',') : ['issue type'];\n  const segmentMode = Object.values(SegmentMode).includes(data.segment_mode) ? data.segment_mode : SegmentMode.continuous;\n  const results = parseResults(data.review_from, data.unit_id, videos, ontology, lineConfig, segmentConfig, segmentMode);\n  const tagGroup = parseTagGroup(data.tag_group);\n  const jobId = data.job_id;\n  const overlap = data.overlap === 'true' || data.overlap === true;\n  const keyAttribute = parseKeyAttribute(data.key_attribute);\n  const client = data.client || '';\n  const wordTimestampUrls = data.word_timestamps?.split(',') || [];\n  const minLength = parseMinLength(data.min_length);\n  let spaceLine = 0;\n  if (data.space_line) {\n    const num = Number(data.space_line);\n    if (!Number.isNaN(num) && num > 0) {\n      spaceLine = num;\n    }\n  }\n  const measurements = [];\n  if (data.measurement_box) {\n    data.measurement_box.split(',').forEach((item) => {\n      const size = Number(item);\n      if (!Number.isNaN(size) && size > 0 && !measurements.includes(size)) {\n        measurements.push(size);\n      }\n    });\n  }\n  const segmentOverlap = data.segment_overlap !== 'false' && data.segment_overlap !== false;\n  const adjustmentStep = 0.1;\n\n  // parse style config\n  const styleConfig = decode(data.style_config) || {\n    mode: StyleConfigMode.segment,\n    groups: [],\n  };\n\n  const scriptCheck = data.script_check === 'true' || data.script_check === true;\n  const submitCheck = data.submit_check !== 'false' && data.submit_check !== false;\n  const validDuration = Object.values(ValidDurationMode).includes(data.valid_duration) ? data.valid_duration : ValidDurationMode.attributes;\n  const lastResults = JSON.parse(JSON.stringify(results)).map((v) => {\n    const map = {};\n    (v || []).forEach((item) => {\n      delete item.qaChecked;\n      delete item.qaComment;\n      delete item.qaReason;\n      delete item.qaWorkerName;\n      map[item.id] = item;\n    });\n    return map;\n  });\n  const newState = {\n    videos,\n    ontology,\n    results,\n    lastResults,\n    globalConfig,\n    invalidAnnotatable,\n    annotateDisabled,\n    segmentConfig,\n    lineConfig,\n    issueTypes,\n    unitId: data.unit_id,\n    toolMode: data.mode,\n    reviews: data._reviews,\n    tagGroup,\n    jobId,\n    overlap,\n    keyAttribute,\n    client,\n    wordTimestampUrls,\n    minSegmentLength: minLength,\n    segmentMode,\n    currentSegment: segmentMode === SegmentMode.individual ? -1 : 0,\n    spaceLine,\n    measurements,\n    selectedMeasurement: measurements[0] || -1,\n    segmentOverlap,\n    adjustmentStep,\n    scriptCheck,\n    submitCheck,\n    validDuration,\n    segmentFieldMap,\n    lineFieldMap,\n    styleConfig,\n    jobProxy: data.jobProxy,\n    workerName: data.jobProxy?.advanceWorkerName\n  };\n  resolve(newState);\n});\n\nexport const initPayloadState = (state, data) => ({\n  ...state,\n  ...data,\n});\n\nexport const saveData = (state) => {\n  const data = {\n    results: state.results,\n    videos: state.videos,\n  };\n  store.setStorage('long-audio', state.unitId, data);\n};\n\nexport const setVideoLoaded = (state, data) => {\n  const videos = [...state.videos];\n  videos.forEach((v, i) => {\n    v.url = data.videos[i].url;\n    v.loaded = true;\n  });\n  return {\n    ...state,\n    videos,\n    isLoadedAlaw: true,\n  };\n};\n\nexport const setLoading = (state, data) => ({\n  ...state,\n  loading: data,\n});\n\nexport const setVideoValid = (state, data) => {\n  const { index } = data;\n  const videos = [...state.videos];\n  videos[index] = { ...state.videos[index] };\n  videos[index].ready = true;\n  return {\n    ...state,\n    videos,\n  };\n};\n\nexport const setVideoAttributes = (state, data) => {\n  const { index, attributes } = data;\n  const { videos } = state;\n  videos[index].attributes = { ...videos[index].attributes, ...attributes };\n\n  return {\n    ...state,\n    annotateDisabled: !state.invalidAnnotatable && videos[index].attributes && videos[index].attributes.is_valid === 'invalid',\n  };\n};\n\nexport const setAttributeFocusInfo = (state, data = {}) => {\n  if (!isEqual(state.focusAttribute, data)) {\n    return { ...state, focusAttribute: { ...data, videoIndex: state.currentVideo } };\n  }\n  return state;\n};\n\nexport const setLoadReviewEnabled = (state, enabled) => ({\n  ...state,\n  loadReviewEnabled: enabled,\n});\n\nexport const setResults = (state, data) => ({\n  ...state,\n  results: data.results,\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}