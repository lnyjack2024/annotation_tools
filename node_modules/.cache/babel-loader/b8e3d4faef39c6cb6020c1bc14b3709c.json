{"ast":null,"code":"/*\r\n * alawmulaw: A-Law and mu-Law codecs in JavaScript.\r\n * https://github.com/rochars/alawmulaw\r\n *\r\n * Copyright (c) 2018-2019 Rafael da Silva Rocha.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\n\n/**\r\n * @fileoverview mu-Law codec.\r\n */\n\n/** @module alawmulaw/mulaw */\n\n/**\r\n * @type {number}\r\n * @private\r\n */\nconst BIAS = 0x84;\n/**\r\n * @type {number}\r\n * @private\r\n */\nconst CLIP = 32635;\n/**\r\n * @type {Array<number>}\r\n * @private\r\n */\nconst encodeTable = [0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7];\n/**\r\n * @type {Array<number>}\r\n * @private\r\n */\nconst decodeTable = [0, 132, 396, 924, 1980, 4092, 8316, 16764];\n\n/**\r\n * Encode a 16-bit linear PCM sample as 8-bit mu-Law.\r\n * @param {number} sample A 16-bit PCM sample\r\n * @return {number}\r\n */\nexport function encodeSample(sample) {\n  /** @type {number} */\n  let sign;\n  /** @type {number} */\n  let exponent;\n  /** @type {number} */\n  let mantissa;\n  /** @type {number} */\n  let muLawSample;\n  /** get the sample into sign-magnitude **/\n  sign = sample >> 8 & 0x80;\n  if (sign != 0) sample = -sample;\n  /** convert from 16 bit linear to ulaw **/\n  sample = sample + BIAS;\n  if (sample > CLIP) sample = CLIP;\n  exponent = encodeTable[sample >> 7 & 0xFF];\n  mantissa = sample >> exponent + 3 & 0x0F;\n  muLawSample = ~(sign | exponent << 4 | mantissa);\n  /** return the result **/\n  return muLawSample;\n}\n\n/**\r\n * Decode a 8-bit mu-Law sample as 16-bit PCM.\r\n * @param {number} muLawSample The 8-bit mu-Law sample\r\n * @return {number}\r\n */\nexport function decodeSample(muLawSample) {\n  /** @type {number} */\n  let sign;\n  /** @type {number} */\n  let exponent;\n  /** @type {number} */\n  let mantissa;\n  /** @type {number} */\n  let sample;\n  muLawSample = ~muLawSample;\n  sign = muLawSample & 0x80;\n  exponent = muLawSample >> 4 & 0x07;\n  mantissa = muLawSample & 0x0F;\n  sample = decodeTable[exponent] + (mantissa << exponent + 3);\n  if (sign != 0) sample = -sample;\n  return sample;\n}\n\n/**\r\n * Encode 16-bit linear PCM samples into 8-bit mu-Law samples.\r\n * @param {!Int16Array} samples A array of 16-bit PCM samples.\r\n * @return {!Uint8Array}\r\n */\nexport function encode(samples) {\n  /** @type {!Uint8Array} */\n  let muLawSamples = new Uint8Array(samples.length);\n  for (let i = 0; i < samples.length; i++) {\n    muLawSamples[i] = encodeSample(samples[i]);\n  }\n  return muLawSamples;\n}\n\n/**\r\n * Decode 8-bit mu-Law samples into 16-bit PCM samples.\r\n * @param {!Uint8Array} samples A array of 8-bit mu-Law samples.\r\n * @return {!Int16Array}\r\n */\nexport function decode(samples) {\n  /** @type {!Int16Array} */\n  let pcmSamples = new Int16Array(samples.length);\n  for (let i = 0; i < samples.length; i++) {\n    pcmSamples[i] = decodeSample(samples[i]);\n  }\n  return pcmSamples;\n}","map":{"version":3,"names":["BIAS","CLIP","encodeTable","decodeTable","encodeSample","sample","sign","exponent","mantissa","muLawSample","decodeSample","encode","samples","muLawSamples","Uint8Array","length","i","decode","pcmSamples","Int16Array"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/node_modules/alawmulaw/lib/mulaw.js"],"sourcesContent":["/*\r\n * alawmulaw: A-Law and mu-Law codecs in JavaScript.\r\n * https://github.com/rochars/alawmulaw\r\n *\r\n * Copyright (c) 2018-2019 Rafael da Silva Rocha.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n/**\r\n * @fileoverview mu-Law codec.\r\n */\r\n\r\n/** @module alawmulaw/mulaw */\r\n\r\n/**\r\n * @type {number}\r\n * @private\r\n */\r\nconst BIAS = 0x84;\r\n/**\r\n * @type {number}\r\n * @private\r\n */\r\nconst CLIP = 32635;\r\n/**\r\n * @type {Array<number>}\r\n * @private\r\n */\r\nconst encodeTable = [\r\n    0,0,1,1,2,2,2,2,3,3,3,3,3,3,3,3,\r\n    4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,\r\n    5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\r\n    5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\r\n    6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,\r\n    6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,\r\n    6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,\r\n    6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,\r\n    7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,\r\n    7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,\r\n    7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,\r\n    7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,\r\n    7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,\r\n    7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,\r\n    7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,\r\n    7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7];\r\n/**\r\n * @type {Array<number>}\r\n * @private\r\n */\r\nconst decodeTable = [0,132,396,924,1980,4092,8316,16764];\r\n\r\n/**\r\n * Encode a 16-bit linear PCM sample as 8-bit mu-Law.\r\n * @param {number} sample A 16-bit PCM sample\r\n * @return {number}\r\n */\r\nexport function encodeSample(sample) {\r\n  /** @type {number} */\r\n  let sign;\r\n  /** @type {number} */\r\n  let exponent;\r\n  /** @type {number} */\r\n  let mantissa;\r\n  /** @type {number} */\r\n  let muLawSample;\r\n  /** get the sample into sign-magnitude **/\r\n  sign = (sample >> 8) & 0x80;\r\n  if (sign != 0) sample = -sample;\r\n  /** convert from 16 bit linear to ulaw **/\r\n  sample = sample + BIAS;\r\n  if (sample > CLIP) sample = CLIP;\r\n  exponent = encodeTable[(sample>>7) & 0xFF];\r\n  mantissa = (sample >> (exponent+3)) & 0x0F;\r\n  muLawSample = ~(sign | (exponent << 4) | mantissa);\r\n  /** return the result **/\r\n  return muLawSample;\r\n}\r\n\r\n/**\r\n * Decode a 8-bit mu-Law sample as 16-bit PCM.\r\n * @param {number} muLawSample The 8-bit mu-Law sample\r\n * @return {number}\r\n */\r\nexport function decodeSample(muLawSample) {\r\n  /** @type {number} */\r\n  let sign;\r\n  /** @type {number} */\r\n  let exponent;\r\n  /** @type {number} */\r\n  let mantissa;\r\n  /** @type {number} */\r\n  let sample;\r\n  muLawSample = ~muLawSample;\r\n  sign = (muLawSample & 0x80);\r\n  exponent = (muLawSample >> 4) & 0x07;\r\n  mantissa = muLawSample & 0x0F;\r\n  sample = decodeTable[exponent] + (mantissa << (exponent+3));\r\n  if (sign != 0) sample = -sample;\r\n  return sample;\r\n}\r\n\r\n/**\r\n * Encode 16-bit linear PCM samples into 8-bit mu-Law samples.\r\n * @param {!Int16Array} samples A array of 16-bit PCM samples.\r\n * @return {!Uint8Array}\r\n */\r\nexport function encode(samples) {\r\n  /** @type {!Uint8Array} */\r\n  let muLawSamples = new Uint8Array(samples.length);\r\n  for (let i=0; i<samples.length; i++) {\r\n    muLawSamples[i] = encodeSample(samples[i]);\r\n  }\r\n  return muLawSamples;\r\n}\r\n\r\n/**\r\n * Decode 8-bit mu-Law samples into 16-bit PCM samples.\r\n * @param {!Uint8Array} samples A array of 8-bit mu-Law samples.\r\n * @return {!Int16Array}\r\n */\r\nexport function decode(samples) {\r\n  /** @type {!Int16Array} */\r\n  let pcmSamples = new Int16Array(samples.length);\r\n  for (let i=0; i<samples.length; i++) {\r\n    pcmSamples[i] = decodeSample(samples[i]);\r\n  }\r\n  return pcmSamples;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}