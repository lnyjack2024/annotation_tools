{"ast":null,"code":"import { Graphics } from 'pixi.js';\nimport Cursor from '../../../common/Cursor';\nimport { AnnotationType, MoveType } from '../../types';\nimport store from '../../store/RootStore';\nexport default class ControlBar {\n  /**\n   * get selected\n   * @getter\n   */\n  get selected() {\n    return this._selected;\n  }\n\n  /**\n   * set selected\n   * @setter\n   */\n  set selected(selected) {\n    const shouldUpdate = this._selected !== selected;\n    this._selected = selected;\n    if (shouldUpdate) {\n      this.drawControl();\n    }\n  }\n\n  /**\n   * set selectedStart\n   */\n  set selectedStart(selected) {\n    const shouldUpdate = this._selectedStart !== selected;\n    this._selectedStart = selected;\n    if (shouldUpdate) {\n      this.drawControl();\n    }\n  }\n\n  /**\n   * get selectedStart\n   */\n  get selectedStart() {\n    return this._selectedStart;\n  }\n  constructor(props) {\n    /**\n     * control position\n     */\n    this.position = void 0;\n    /**\n    * cursor\n    */\n    this.cursor = Cursor.COL_RESIZE;\n    /**\n     * control instance\n     * @member {PIXI.Graphics}\n     */\n    this.control = new Graphics();\n    /**\n     * shapeType\n     */\n    this.shapeType = void 0;\n    /**\n     * control container\n     * @member {PIXI.Container}\n     */\n    this.container = void 0;\n    /**\n     * is selected\n     * @private {boolean}\n     */\n    this._selected = false;\n    /**\n     * is selected start time\n     */\n    this._selectedStart = false;\n    /**\n    * control position when mouse down\n    * @private {PIXI.Point}\n    */\n    this._mousePoint = null;\n    /**\n     * is control dragged\n     * @private {boolean}\n     */\n    this._dragged = false;\n    this.width = 3;\n    this.selectedWidth = 2;\n    this.color = 0x000000;\n    this.selectedColor = 0x0060FF;\n    this.bgColor = 0xffffff;\n    this.selectedBgColor = 0xFFE477;\n    /**\n     * height\n     */\n    this.height = void 0;\n    /**\n     * move distance\n     */\n    this.moveDistance = 0;\n    this.onClick = void 0;\n    this.onPositionChange = void 0;\n    this.finishPositionChange = void 0;\n    /**\n     * control pointer down\n     * @private\n     * @param event\n     */\n    this.processPointerDown = event => {\n      if (event.data.button === 2) {\n        return;\n      }\n      if (store.review.drawMode) {\n        this._dragged = true;\n        const point = event.data.getLocalPosition(this.container);\n        this._mousePoint = point;\n      }\n      this.onClick();\n    };\n    /**\n     * control pointer up\n     * @private\n     * @param event\n     */\n    this.processPointerUp = () => {\n      this._dragged = false;\n      this._mousePoint = null;\n      this.finishPositionChange();\n    };\n    /**\n     * control pointer move\n     * @private\n     * @param event\n     */\n    this.processPointerMove = event => {\n      if (this._dragged && this._mousePoint) {\n        const {\n          data: {\n            originalEvent: {\n              shiftKey\n            }\n          }\n        } = event;\n        const point = event.data.getLocalPosition(this.container);\n        const moveDistance = point.x - this._mousePoint.x;\n        this._mousePoint = point;\n        this.onPositionChange(moveDistance, shiftKey ? MoveType.MULTIPLE : MoveType.SINGLE);\n      }\n    };\n    const {\n      shapeType,\n      height,\n      color,\n      selected,\n      container,\n      position,\n      onClick,\n      onPositionChange,\n      finishPositionChange\n    } = props;\n    this.shapeType = shapeType;\n    this.height = height;\n    if (color) {\n      this.color = color;\n    }\n    if (selected) {\n      this.selected = selected;\n    }\n    this.position = position;\n    this.control.x = position.x;\n    this.control.y = position.y;\n    this.control.interactive = true;\n    this.control.zIndex = 999;\n    this.onClick = onClick;\n    this.onPositionChange = onPositionChange;\n    this.finishPositionChange = finishPositionChange;\n    this.control.cursor = this.cursor;\n    this.control.on('pointerdown', this.processPointerDown);\n    this.control.on('pointerup', this.processPointerUp);\n    this.control.on('pointerupoutside', this.processPointerUp);\n    this.control.on('pointermove', this.processPointerMove);\n    this.container = container;\n    this.container.addChild(this.control);\n    this.drawControl();\n  }\n  init(params) {\n    const {\n      shapeType,\n      height,\n      color,\n      selected,\n      position\n    } = params;\n    this.shapeType = shapeType;\n    this.height = height;\n    if (color) {\n      this.color = color;\n    } else {\n      this.color = 0x000000;\n    }\n    if (selected) {\n      this.selected = selected;\n    }\n    this.position = position;\n    this.control.x = position.x;\n    this.control.y = position.y;\n    this.container.addChild(this.control);\n    this.drawControl();\n  }\n\n  /**\n   * remove\n   */\n  remove() {\n    this.control.clear();\n    this.container.removeChild(this.control);\n  }\n  drawControl() {\n    if (!this.container) return;\n    const selected = this.selected || this._selectedStart;\n    if (selected) {\n      this.container.zIndex = 999;\n    } else {\n      this.container.zIndex = 99;\n    }\n    this.control.clear();\n    const borderWidth = selected ? this.selectedWidth : this.width;\n    const start = selected ? -1.5 : 0;\n    this.control.beginFill(selected ? this.selectedBgColor : this.color);\n    const bgWidth = selected ? this.selectedWidth * 2 : this.width;\n    if (this.shapeType === AnnotationType.SEGMENT) {\n      this.control.drawRect(start - 1, 0, bgWidth, this.height);\n    } else {\n      this.control.drawRect(start - 1, 0, bgWidth, this.height / 4);\n      this.control.drawRect(start - 1, this.height * (3 / 4), bgWidth, this.height / 4);\n    }\n    this.control.endFill();\n    if (!selected) {\n      this.control.lineStyle(borderWidth, this.color);\n      if (this.shapeType === AnnotationType.SEGMENT) {\n        this.control.moveTo(start, 0);\n        this.control.lineTo(start, this.height);\n      } else {\n        this.control.moveTo(start, 0);\n        this.control.lineTo(start, this.height / 4);\n        this.control.moveTo(start, this.height * (3 / 4));\n        this.control.lineTo(start, this.height);\n      }\n    } else if (selected) {\n      const gap = 3;\n      const selectedColor = this.selected ? this.selectedColor : this.color;\n      this.control.lineStyle(borderWidth, selectedColor);\n      if (this.shapeType === AnnotationType.SEGMENT) {\n        this.control.moveTo(start, 0);\n        this.control.lineTo(start, this.height);\n        this.control.moveTo(start + gap, 0);\n        this.control.lineTo(start + gap, this.height);\n      } else {\n        this.control.moveTo(start, 0);\n        this.control.lineTo(start, this.height / 4);\n        this.control.moveTo(start + gap, 0);\n        this.control.lineTo(start + gap, this.height / 4);\n        this.control.moveTo(start, this.height * (3 / 4));\n        this.control.lineTo(start, this.height);\n        this.control.moveTo(start + gap, this.height * (3 / 4));\n        this.control.lineTo(start + gap, this.height);\n      }\n    }\n  }\n}","map":{"version":3,"names":["Graphics","Cursor","AnnotationType","MoveType","store","ControlBar","selected","_selected","shouldUpdate","drawControl","selectedStart","_selectedStart","constructor","props","position","cursor","COL_RESIZE","control","shapeType","container","_mousePoint","_dragged","width","selectedWidth","color","selectedColor","bgColor","selectedBgColor","height","moveDistance","onClick","onPositionChange","finishPositionChange","processPointerDown","event","data","button","review","drawMode","point","getLocalPosition","processPointerUp","processPointerMove","originalEvent","shiftKey","x","MULTIPLE","SINGLE","y","interactive","zIndex","on","addChild","init","params","remove","clear","removeChild","borderWidth","start","beginFill","bgWidth","SEGMENT","drawRect","endFill","lineStyle","moveTo","lineTo","gap"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/phonetic-transcription/common/controls/ControlBar.ts"],"sourcesContent":["import { Point, Graphics, InteractionEvent, Container } from 'pixi.js';\nimport Cursor from '../../../common/Cursor';\nimport { AnnotationType, MoveType } from '../../types';\nimport store from '../../store/RootStore';\n\nexport interface ControlProps {\n  shapeType: AnnotationType;\n}\ninterface ControlBarOptions {\n  shapeType: AnnotationType;\n  height: number;\n  color?: number;\n  selected?: boolean;\n  container: Container;\n  position: {\n    x: number;\n    y: number;\n  };\n  onPositionChange: (distance: number, type: MoveType) => void;\n  onClick: () => void;\n  finishPositionChange: () => void;\n}\nexport default class ControlBar {\n  /**\n   * control position\n   */\n  position: {x: number; y: number};\n\n  /**\n  * cursor\n  */\n  cursor = Cursor.COL_RESIZE;\n\n  /**\n   * control instance\n   * @member {PIXI.Graphics}\n   */\n  control = new Graphics();\n\n  /**\n   * shapeType\n   */\n  shapeType: AnnotationType;\n\n  /**\n   * control container\n   * @member {PIXI.Container}\n   */\n  container: Container;\n\n  /**\n   * is selected\n   * @private {boolean}\n   */\n  private _selected = false;\n\n  /**\n   * is selected start time\n   */\n  private _selectedStart = false;\n\n  /**\n  * control position when mouse down\n  * @private {PIXI.Point}\n  */\n  protected _mousePoint: Point | null = null;\n\n  /**\n   * is control dragged\n   * @private {boolean}\n   */\n  private _dragged = false;\n\n  width = 3;\n\n  selectedWidth = 2;\n\n  color = 0x000000;\n\n  selectedColor = 0x0060FF;\n\n  bgColor = 0xffffff;\n\n  selectedBgColor = 0xFFE477;\n\n  /**\n   * height\n   */\n  height: number;\n\n  /**\n   * move distance\n   */\n  moveDistance = 0;\n\n  /**\n   * get selected\n   * @getter\n   */\n  get selected() {\n    return this._selected;\n  }\n\n  /**\n   * set selected\n   * @setter\n   */\n  set selected(selected: boolean) {\n    const shouldUpdate = this._selected !== selected;\n    this._selected = selected;\n    if (shouldUpdate) {\n      this.drawControl();\n    }\n  }\n\n  /**\n   * set selectedStart\n   */\n  set selectedStart(selected: boolean) {\n    const shouldUpdate = this._selectedStart !== selected;\n    this._selectedStart = selected;\n    if (shouldUpdate) {\n      this.drawControl();\n    }\n  }\n\n  /**\n   * get selectedStart\n   */\n  get selectedStart() {\n    return this._selectedStart;\n  }\n\n  onClick: () => void;\n\n  onPositionChange: (distance: number, type: MoveType) => void;\n\n  finishPositionChange: () => void;\n\n  constructor(props: ControlBarOptions) {\n    const {\n      shapeType, height, color, selected, container, position,\n      onClick, onPositionChange, finishPositionChange,\n    } = props;\n    this.shapeType = shapeType;\n    this.height = height;\n    if (color) {\n      this.color = color;\n    }\n    if (selected) {\n      this.selected = selected;\n    }\n    this.position = position;\n    this.control.x = position.x;\n    this.control.y = position.y;\n    this.control.interactive = true;\n    this.control.zIndex = 999;\n    this.onClick = onClick;\n    this.onPositionChange = onPositionChange;\n    this.finishPositionChange = finishPositionChange;\n    this.control.cursor = this.cursor;\n\n    this.control.on('pointerdown', this.processPointerDown);\n    this.control.on('pointerup', this.processPointerUp);\n    this.control.on('pointerupoutside', this.processPointerUp);\n    this.control.on('pointermove', this.processPointerMove);\n    this.container = container;\n    this.container.addChild(this.control);\n    this.drawControl();\n  }\n\n  init(params: {\n    shapeType: AnnotationType;\n    height: number;\n    color?: number;\n    selected?: boolean;\n    position: {\n      x: number;\n      y: number;\n    };\n  }) {\n    const { shapeType, height, color, selected, position } = params;\n    this.shapeType = shapeType;\n    this.height = height;\n    if (color) {\n      this.color = color;\n    } else {\n      this.color = 0x000000;\n    }\n    if (selected) {\n      this.selected = selected;\n    }\n    this.position = position;\n    this.control.x = position.x;\n    this.control.y = position.y;\n    this.container.addChild(this.control);\n    this.drawControl();\n  }\n\n  /**\n   * remove\n   */\n  remove() {\n    this.control.clear();\n    this.container.removeChild(this.control);\n  }\n\n  drawControl() {\n    if (!this.container) return;\n    const selected = this.selected || this._selectedStart;\n    if (selected) {\n      this.container.zIndex = 999;\n    } else {\n      this.container.zIndex = 99;\n    }\n    this.control.clear();\n\n    const borderWidth = selected ? this.selectedWidth : this.width;\n    const start = selected ? -1.5 : 0;\n\n    this.control.beginFill(selected ? this.selectedBgColor : this.color);\n    const bgWidth = selected ? this.selectedWidth * 2 : this.width;\n    if (this.shapeType === AnnotationType.SEGMENT) {\n      this.control.drawRect(start - 1, 0, bgWidth, this.height);\n    } else {\n      this.control.drawRect(start - 1, 0, bgWidth, this.height / 4);\n      this.control.drawRect(start - 1, this.height * (3 / 4), bgWidth, this.height / 4);\n    }\n    this.control.endFill();\n    if (!selected) {\n      this.control.lineStyle(borderWidth, this.color);\n      if (this.shapeType === AnnotationType.SEGMENT) {\n        this.control.moveTo(start, 0);\n        this.control.lineTo(start, this.height);\n      } else {\n        this.control.moveTo(start, 0);\n        this.control.lineTo(start, this.height / 4);\n\n        this.control.moveTo(start, this.height * (3 / 4));\n        this.control.lineTo(start, this.height);\n      }\n    } else if (selected) {\n      const gap = 3;\n      const selectedColor = this.selected ? this.selectedColor : this.color;\n      this.control.lineStyle(borderWidth, selectedColor);\n      if (this.shapeType === AnnotationType.SEGMENT) {\n        this.control.moveTo(start, 0);\n        this.control.lineTo(start, this.height);\n        this.control.moveTo(start + gap, 0);\n        this.control.lineTo(start + gap, this.height);\n      } else {\n        this.control.moveTo(start, 0);\n        this.control.lineTo(start, this.height / 4);\n        this.control.moveTo(start + gap, 0);\n        this.control.lineTo(start + gap, this.height / 4);\n\n        this.control.moveTo(start, this.height * (3 / 4));\n        this.control.lineTo(start, this.height);\n        this.control.moveTo(start + gap, this.height * (3 / 4));\n        this.control.lineTo(start + gap, this.height);\n      }\n    }\n  }\n\n  /**\n   * control pointer down\n   * @private\n   * @param event\n   */\n  private processPointerDown = (event: InteractionEvent) => {\n    if (event.data.button === 2) {\n      return;\n    }\n    if (store.review.drawMode) {\n      this._dragged = true;\n      const point = event.data.getLocalPosition(this.container);\n      this._mousePoint = point;\n    }\n    this.onClick();\n  };\n\n  /**\n   * control pointer up\n   * @private\n   * @param event\n   */\n  private processPointerUp = () => {\n    this._dragged = false;\n    this._mousePoint = null;\n    this.finishPositionChange();\n  };\n\n  /**\n   * control pointer move\n   * @private\n   * @param event\n   */\n  private processPointerMove = (event: InteractionEvent) => {\n    if (this._dragged && this._mousePoint) {\n      const { data: { originalEvent: { shiftKey } } } = event;\n      const point = event.data.getLocalPosition(this.container);\n      const moveDistance = point.x - this._mousePoint.x;\n      this._mousePoint = point;\n      this.onPositionChange(moveDistance, shiftKey ? MoveType.MULTIPLE : MoveType.SINGLE);\n    }\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}