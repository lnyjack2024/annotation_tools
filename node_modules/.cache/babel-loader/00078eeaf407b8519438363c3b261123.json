{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/phonetic-transcription/components/Helper/Region.tsx\";\nimport React from 'react';\nimport { makeObservable, reaction } from 'mobx';\nimport rootStore from '../../store/RootStore';\nimport { Align, Style } from '../../types';\nimport { wrapText } from '../../utils';\nimport eventBus, { EventAction } from '../../utils/event';\nimport Cursor from '../../../common/Cursor';\nclass Region extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ratio = 1;\n    this.lineWidth = 1;\n    this.canvasRef = React.createRef();\n    this.ctx = null;\n    /**\n     * reaction disposer\n     */\n    this.reactionDisposer = void 0;\n    this.setupRegionCanvas = () => {\n      this.ctx = this.canvasRef.current.getContext('2d');\n    };\n    this.drawRegion = () => {\n      const {\n        displayBuffer: {\n          start,\n          precent\n        }\n      } = rootStore.analyse;\n      this.updateRegion(start, precent);\n    };\n    this.updateRegion = (start, precent) => {\n      const canvas = this.canvasRef.current;\n      this.ratio = window.devicePixelRatio;\n      const rect = canvas.getBoundingClientRect();\n      canvas.width = rect.width * this.ratio;\n      canvas.height = rect.height * this.ratio;\n      this.drawSelectedRegion(start, precent);\n    };\n    this.drawSelectedRegion = (start, precent) => {\n      if (this.ctx) {\n        this.ctx.beginPath();\n        this.ctx.setLineDash([]);\n        this.ctx.strokeStyle = Style.STROKE;\n        this.ctx.lineWidth = this.lineWidth * this.ratio;\n        const {\n          analyse: {\n            selectedTime,\n            selectedRegion,\n            placement: {\n              atlasHeight\n            }\n          }\n        } = rootStore;\n        const {\n          atlasWidth,\n          margin,\n          timelineHeight,\n          duration\n        } = this.props.ratioPlacement;\n        const lineHeight = atlasHeight * this.ratio + timelineHeight;\n        const halfFontSize = Style.FONTSIZE * this.ratio / 2;\n        const accuracy = this.lineWidth * this.ratio;\n        let startX;\n        let isStartVisible = false;\n        if (((selectedRegion === null || selectedRegion === void 0 ? void 0 : selectedRegion.start) || (selectedRegion === null || selectedRegion === void 0 ? void 0 : selectedRegion.start) === 0) && (selectedRegion === null || selectedRegion === void 0 ? void 0 : selectedRegion.end)) {\n          startX = atlasWidth * ((selectedRegion.start / duration - start) / precent) + margin;\n          const endX = atlasWidth * ((selectedRegion.end / duration - start) / precent) + margin;\n          isStartVisible = startX >= margin - accuracy && startX < margin + atlasWidth + accuracy;\n          const isEndVisible = endX > margin - accuracy && endX <= margin + atlasWidth + accuracy;\n          if (isStartVisible || isEndVisible || startX < margin && endX > margin + atlasWidth) {\n            if (isStartVisible) {\n              this.ctx.moveTo(startX, 0);\n              this.ctx.lineTo(startX, lineHeight);\n              wrapText(this.ctx, selectedRegion.start.toFixed(6), startX - 5, timelineHeight - halfFontSize, Align.RIGHT, Style.STROKE, 14);\n            }\n            if (isEndVisible) {\n              wrapText(this.ctx, selectedRegion.end.toFixed(6), endX + 5, timelineHeight - halfFontSize, Align.LEFT, Style.STROKE, 14);\n            }\n            const rectStartX = isStartVisible ? startX : margin;\n            const rectEndX = isEndVisible ? endX : margin + atlasWidth;\n            wrapText(this.ctx, (selectedRegion.end - selectedRegion.start).toFixed(6), (rectEndX + rectStartX) / 2, timelineHeight - halfFontSize, Align.CENTER, Style.STROKE, 14);\n          }\n        }\n        if (selectedTime) {\n          startX = atlasWidth * ((selectedTime / duration - start) / precent) + margin;\n          if (startX > margin - accuracy && startX < atlasWidth + margin + accuracy) {\n            isStartVisible = true;\n            this.ctx.moveTo(startX, 0);\n            this.ctx.lineTo(startX, lineHeight);\n            wrapText(this.ctx, selectedTime.toFixed(6), startX + 5, timelineHeight - halfFontSize, Align.LEFT, Style.STROKE, 14);\n          }\n        }\n        this.ctx.stroke();\n        if (startX !== undefined && isStartVisible) {\n          this.ctx.beginPath();\n          this.ctx.moveTo(startX - 6 * this.ratio, 0);\n          this.ctx.lineTo(startX + 6 * this.ratio, 0);\n          this.ctx.lineTo(startX, timelineHeight / 5);\n          this.ctx.closePath();\n          this.ctx.fillStyle = Style.STROKE;\n          this.ctx.fill();\n        }\n      }\n    };\n    makeObservable(this, {});\n    this.reactionDisposer = reaction(() => [rootStore.analyse.placement, rootStore.analyse.selectedRegion, rootStore.analyse.selectedTime], () => {\n      this.drawRegion();\n    });\n  }\n  componentDidMount() {\n    this.setupRegionCanvas();\n    this.drawRegion();\n    eventBus.on(EventAction.DISPLAY_CHANGE, ({\n      start,\n      end\n    }) => {\n      const {\n        isPlaying,\n        selectedRegion\n      } = rootStore.analyse;\n      if (!isPlaying || selectedRegion) {\n        this.updateRegion(start, end - start);\n      }\n    });\n  }\n  componentWillUnmount() {\n    this.reactionDisposer();\n  }\n  render() {\n    const {\n      isDragTimeline\n    } = this.props;\n    const {\n      atlasWidth,\n      margin\n    } = rootStore.analyse.placement;\n    return /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: this.canvasRef,\n      style: {\n        pointerEvents: isDragTimeline ? 'auto' : 'none',\n        cursor: isDragTimeline ? Cursor.COL_RESIZE : Cursor.DEFAULT,\n        width: `${margin * 2 + atlasWidth}px`\n      },\n      className: \"absoluteTopLeftZeroW100H100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }\n    });\n  }\n}\n;\nexport default Region;","map":{"version":3,"names":["React","makeObservable","reaction","rootStore","Align","Style","wrapText","eventBus","EventAction","Cursor","Region","Component","constructor","props","ratio","lineWidth","canvasRef","createRef","ctx","reactionDisposer","setupRegionCanvas","current","getContext","drawRegion","displayBuffer","start","precent","analyse","updateRegion","canvas","window","devicePixelRatio","rect","getBoundingClientRect","width","height","drawSelectedRegion","beginPath","setLineDash","strokeStyle","STROKE","selectedTime","selectedRegion","placement","atlasHeight","atlasWidth","margin","timelineHeight","duration","ratioPlacement","lineHeight","halfFontSize","FONTSIZE","accuracy","startX","isStartVisible","end","endX","isEndVisible","moveTo","lineTo","toFixed","RIGHT","LEFT","rectStartX","rectEndX","CENTER","stroke","undefined","closePath","fillStyle","fill","componentDidMount","on","DISPLAY_CHANGE","isPlaying","componentWillUnmount","render","isDragTimeline","createElement","ref","style","pointerEvents","cursor","COL_RESIZE","DEFAULT","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/phonetic-transcription/components/Helper/Region.tsx"],"sourcesContent":["import React from 'react';\nimport { makeObservable, reaction, IReactionDisposer } from 'mobx';\nimport rootStore from '../../store/RootStore';\nimport { Align, Style } from '../../types';\nimport { wrapText } from '../../utils';\nimport eventBus, { EventAction } from '../../utils/event';\nimport Cursor from '../../../common/Cursor';\n\ninterface RegionProps {\n  ratioPlacement: {[key: string]: number};\n  isDragTimeline: boolean;\n}\n\nclass Region extends React.Component<RegionProps> {\n  ratio = 1;\n\n  lineWidth = 1;\n\n  canvasRef: React.RefObject<HTMLCanvasElement> = React.createRef();\n\n  ctx: CanvasRenderingContext2D | null = null;\n\n  /**\n   * reaction disposer\n   */\n  reactionDisposer: IReactionDisposer;\n\n  constructor(props: RegionProps) {\n    super(props);\n    makeObservable(this, {});\n\n    this.reactionDisposer = reaction(\n      () => [\n        rootStore.analyse.placement,\n        rootStore.analyse.selectedRegion,\n        rootStore.analyse.selectedTime,\n      ],\n      () => {\n        this.drawRegion();\n      },\n    );\n  }\n\n  componentDidMount() {\n    this.setupRegionCanvas();\n    this.drawRegion();\n    eventBus.on(EventAction.DISPLAY_CHANGE, ({ start, end }) => {\n      const { isPlaying, selectedRegion } = rootStore.analyse;\n      if (!isPlaying || selectedRegion) {\n        this.updateRegion(start, end - start);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.reactionDisposer();\n  }\n\n  setupRegionCanvas = () => {\n    this.ctx = this.canvasRef.current!.getContext('2d') as CanvasRenderingContext2D;\n  };\n\n  drawRegion = () => {\n    const { displayBuffer: { start, precent } } = rootStore.analyse;\n    this.updateRegion(start, precent);\n  };\n\n  updateRegion = (start: number, precent: number) => {\n    const canvas = this.canvasRef.current! as HTMLCanvasElement;\n    this.ratio = window.devicePixelRatio;\n    const rect = canvas.getBoundingClientRect();\n    canvas.width = rect.width * this.ratio;\n    canvas.height = rect.height * this.ratio;\n    this.drawSelectedRegion(start, precent);\n  };\n\n  drawSelectedRegion = (start: number, precent: number) => {\n    if (this.ctx) {\n      this.ctx.beginPath();\n      this.ctx.setLineDash([]);\n      this.ctx.strokeStyle = Style.STROKE;\n      this.ctx.lineWidth = this.lineWidth * this.ratio;\n      const { analyse: { selectedTime, selectedRegion, placement: { atlasHeight } } } = rootStore;\n      const { atlasWidth, margin, timelineHeight, duration } = this.props.ratioPlacement;\n      const lineHeight = atlasHeight * this.ratio + timelineHeight;\n      const halfFontSize = (Style.FONTSIZE * this.ratio) / 2;\n      const accuracy = this.lineWidth * this.ratio;\n      let startX: undefined | number;\n      let isStartVisible = false;\n      if ((selectedRegion?.start || selectedRegion?.start === 0) && selectedRegion?.end) {\n        startX = atlasWidth * ((selectedRegion.start / duration - start) / precent) + margin;\n        const endX = atlasWidth * ((selectedRegion.end / duration - start) / precent) + margin;\n        isStartVisible = startX >= margin - accuracy && startX < margin + atlasWidth + accuracy;\n        const isEndVisible = endX > margin - accuracy && endX <= margin + atlasWidth + accuracy;\n        if (isStartVisible || isEndVisible || (startX < margin && endX > margin + atlasWidth)) {\n          if (isStartVisible) {\n            this.ctx.moveTo(startX, 0);\n            this.ctx.lineTo(startX, lineHeight);\n            wrapText(this.ctx, selectedRegion.start.toFixed(6), startX - 5, timelineHeight - halfFontSize, Align.RIGHT, Style.STROKE, 14);\n          }\n          if (isEndVisible) {\n            wrapText(this.ctx, selectedRegion.end.toFixed(6), endX + 5, timelineHeight - halfFontSize, Align.LEFT, Style.STROKE, 14);\n          }\n          const rectStartX = isStartVisible ? startX : margin;\n          const rectEndX = isEndVisible ? endX : (margin + atlasWidth);\n          wrapText(this.ctx, (selectedRegion.end - selectedRegion.start).toFixed(6), (rectEndX + rectStartX) / 2, timelineHeight - halfFontSize, Align.CENTER, Style.STROKE, 14);\n        }\n      }\n      if (selectedTime) {\n        startX = atlasWidth * ((selectedTime / duration - start) / precent) + margin;\n        if (startX > margin - accuracy && startX < atlasWidth + margin + accuracy) {\n          isStartVisible = true;\n          this.ctx.moveTo(startX, 0);\n          this.ctx.lineTo(startX, lineHeight);\n          wrapText(this.ctx, selectedTime.toFixed(6), startX + 5, timelineHeight - halfFontSize, Align.LEFT, Style.STROKE, 14);\n        }\n      }\n      this.ctx.stroke();\n      if (startX !== undefined && isStartVisible) {\n        this.ctx.beginPath();\n        this.ctx.moveTo(startX - 6 * this.ratio, 0);\n        this.ctx.lineTo(startX + 6 * this.ratio, 0);\n        this.ctx.lineTo(startX, timelineHeight / 5);\n        this.ctx.closePath();\n        this.ctx.fillStyle = Style.STROKE;\n        this.ctx.fill();\n      }\n    }\n  };\n\n  render() {\n    const { isDragTimeline } = this.props;\n    const { atlasWidth, margin } = rootStore.analyse.placement;\n    return (\n      <canvas\n        ref={this.canvasRef}\n        style={{\n          pointerEvents: isDragTimeline ? 'auto' : 'none',\n          cursor: isDragTimeline ? Cursor.COL_RESIZE : Cursor.DEFAULT,\n          width: `${margin * 2 + atlasWidth}px`,\n        }}\n        className=\"absoluteTopLeftZeroW100H100\"\n      />\n    );\n  }\n};\n\nexport default Region;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}