{"ast":null,"code":"export let ToolMode = /*#__PURE__*/function (ToolMode) {\n  ToolMode[\"LABELING\"] = \"LABELING\";\n  ToolMode[\"REWORK\"] = \"REWORK\";\n  ToolMode[\"QA_RO\"] = \"QA_RO\";\n  ToolMode[\"QA_RW\"] = \"QA_RW\";\n  ToolMode[\"AUDIT\"] = \"AUDIT\";\n  ToolMode[\"AUDIT_RW\"] = \"AUDIT_RW\";\n  ToolMode[\"PREVIEW\"] = \"PREVIEW\";\n  ToolMode[\"TEMPLATE_PREVIEW\"] = \"TEMPLATE_PREVIEW\";\n  return ToolMode;\n}({});\nexport function isLabel(mode) {\n  return mode === ToolMode.LABELING || mode === ToolMode.REWORK;\n}\nexport function isQA(mode) {\n  return mode === ToolMode.QA_RO || mode === ToolMode.QA_RW;\n}\nexport function isReviewEditable(mode) {\n  return isQA(mode) || mode === ToolMode.AUDIT;\n}\nexport function isAnnotationReadonly(mode) {\n  return mode === ToolMode.QA_RO || mode === ToolMode.AUDIT || mode === ToolMode.PREVIEW;\n}\nexport function isRework(mode) {\n  return mode === ToolMode.REWORK;\n}\nexport function isPreview(mode) {\n  return mode === ToolMode.PREVIEW;\n}\nexport function isTemplatePreview(mode) {\n  return mode === ToolMode.TEMPLATE_PREVIEW;\n}","map":{"version":3,"names":["ToolMode","isLabel","mode","LABELING","REWORK","isQA","QA_RO","QA_RW","isReviewEditable","AUDIT","isAnnotationReadonly","PREVIEW","isRework","isPreview","isTemplatePreview","TEMPLATE_PREVIEW"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/utils/tool-mode.ts"],"sourcesContent":["export enum ToolMode {\n  LABELING = 'LABELING',\n  REWORK = 'REWORK',\n  QA_RO = 'QA_RO',\n  QA_RW = 'QA_RW',\n  AUDIT = 'AUDIT',\n  AUDIT_RW = 'AUDIT_RW',\n  PREVIEW = 'PREVIEW',\n  TEMPLATE_PREVIEW = 'TEMPLATE_PREVIEW',\n}\n\nexport function isLabel(mode: ToolMode) {\n  return mode === ToolMode.LABELING || mode === ToolMode.REWORK;\n}\n\nexport function isQA(mode: ToolMode) {\n  return mode === ToolMode.QA_RO || mode === ToolMode.QA_RW;\n}\n\nexport function isReviewEditable(mode: ToolMode) {\n  return isQA(mode) || mode === ToolMode.AUDIT;\n}\n\nexport function isAnnotationReadonly(mode: ToolMode) {\n  return mode === ToolMode.QA_RO || mode === ToolMode.AUDIT || mode === ToolMode.PREVIEW;\n}\n\nexport function isRework(mode: ToolMode) {\n  return mode === ToolMode.REWORK;\n}\n\nexport function isPreview(mode: ToolMode) {\n  return mode === ToolMode.PREVIEW;\n}\n\nexport function isTemplatePreview(mode: ToolMode) {\n  return mode === ToolMode.TEMPLATE_PREVIEW;\n}\n"],"mappings":"AAAA,WAAYA,QAAQ,0BAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAAA,OAARA,QAAQ;AAAA;AAWpB,OAAO,SAASC,OAAOA,CAACC,IAAc,EAAE;EACtC,OAAOA,IAAI,KAAKF,QAAQ,CAACG,QAAQ,IAAID,IAAI,KAAKF,QAAQ,CAACI,MAAM;AAC/D;AAEA,OAAO,SAASC,IAAIA,CAACH,IAAc,EAAE;EACnC,OAAOA,IAAI,KAAKF,QAAQ,CAACM,KAAK,IAAIJ,IAAI,KAAKF,QAAQ,CAACO,KAAK;AAC3D;AAEA,OAAO,SAASC,gBAAgBA,CAACN,IAAc,EAAE;EAC/C,OAAOG,IAAI,CAACH,IAAI,CAAC,IAAIA,IAAI,KAAKF,QAAQ,CAACS,KAAK;AAC9C;AAEA,OAAO,SAASC,oBAAoBA,CAACR,IAAc,EAAE;EACnD,OAAOA,IAAI,KAAKF,QAAQ,CAACM,KAAK,IAAIJ,IAAI,KAAKF,QAAQ,CAACS,KAAK,IAAIP,IAAI,KAAKF,QAAQ,CAACW,OAAO;AACxF;AAEA,OAAO,SAASC,QAAQA,CAACV,IAAc,EAAE;EACvC,OAAOA,IAAI,KAAKF,QAAQ,CAACI,MAAM;AACjC;AAEA,OAAO,SAASS,SAASA,CAACX,IAAc,EAAE;EACxC,OAAOA,IAAI,KAAKF,QAAQ,CAACW,OAAO;AAClC;AAEA,OAAO,SAASG,iBAAiBA,CAACZ,IAAc,EAAE;EAChD,OAAOA,IAAI,KAAKF,QAAQ,CAACe,gBAAgB;AAC3C","ignoreList":[]},"metadata":{},"sourceType":"module"}