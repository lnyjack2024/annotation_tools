{"ast":null,"code":"import React from'react';import{RankingType}from'../types';import ScoreRank from'./ScoreRank';import MarkRank from'./MarkRank';const RankItem=_ref=>{let{rankingType,rankingOptions,rankEditable,rankEditing,onRankEdit,rank,onRankChange}=_ref;if(rankingType===RankingType.SCORE){return/*#__PURE__*/React.createElement(ScoreRank,{options:rankingOptions,editable:rankEditable,editing:rankEditing,onEdit:onRankEdit,value:rank===null||rank===void 0?void 0:rank.scores,onChange:scores=>{if(onRankChange){onRankChange({...rank,scores});}}});}if(rankingType===RankingType.MARK){return/*#__PURE__*/React.createElement(MarkRank,{options:rankingOptions,editable:rankEditable,editing:rankEditing,onEdit:onRankEdit,value:rank===null||rank===void 0?void 0:rank.marks,onChange:marks=>{if(onRankChange){onRankChange({...rank,marks});}}});}return null;};export default RankItem;","map":{"version":3,"names":["React","RankingType","ScoreRank","MarkRank","RankItem","_ref","rankingType","rankingOptions","rankEditable","rankEditing","onRankEdit","rank","onRankChange","SCORE","createElement","options","editable","editing","onEdit","value","scores","onChange","MARK","marks"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/common/llm/chat/RankItem.tsx"],"sourcesContent":["import React from 'react';\nimport { Rank, RankingType } from '../types';\nimport ScoreRank from './ScoreRank';\nimport MarkRank from './MarkRank';\n\ninterface RankItemProps {\n  rankingType: RankingType;\n  rankingOptions: string[];\n  rankEditable: boolean;\n  rankEditing: boolean;\n  onRankEdit?: () => void;\n  rank?: Rank;\n  onRankChange?: (rank: Rank) => void;\n}\n\nconst RankItem: React.FC<RankItemProps> = ({\n  rankingType,\n  rankingOptions,\n  rankEditable,\n  rankEditing,\n  onRankEdit,\n  rank,\n  onRankChange,\n}) => {\n  if (rankingType === RankingType.SCORE) {\n    return (\n      <ScoreRank\n        options={rankingOptions}\n        editable={rankEditable}\n        editing={rankEditing}\n        onEdit={onRankEdit}\n        value={rank?.scores}\n        onChange={(scores) => {\n          if (onRankChange) {\n            onRankChange({ ...rank, scores });\n          }\n        }}\n      />\n    );\n  }\n\n  if (rankingType === RankingType.MARK) {\n    return (\n      <MarkRank\n        options={rankingOptions}\n        editable={rankEditable}\n        editing={rankEditing}\n        onEdit={onRankEdit}\n        value={rank?.marks}\n        onChange={(marks) => {\n          if (onRankChange) {\n            onRankChange({ ...rank, marks });\n          }\n        }}\n      />\n    );\n  }\n\n  return null;\n};\n\nexport default RankItem;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAAeC,WAAW,KAAQ,UAAU,CAC5C,MAAO,CAAAC,SAAS,KAAM,aAAa,CACnC,MAAO,CAAAC,QAAQ,KAAM,YAAY,CAYjC,KAAM,CAAAC,QAAiC,CAAGC,IAAA,EAQpC,IARqC,CACzCC,WAAW,CACXC,cAAc,CACdC,YAAY,CACZC,WAAW,CACXC,UAAU,CACVC,IAAI,CACJC,YACF,CAAC,CAAAP,IAAA,CACC,GAAIC,WAAW,GAAKL,WAAW,CAACY,KAAK,CAAE,CACrC,mBACEb,KAAA,CAAAc,aAAA,CAACZ,SAAS,EACRa,OAAO,CAAER,cAAe,CACxBS,QAAQ,CAAER,YAAa,CACvBS,OAAO,CAAER,WAAY,CACrBS,MAAM,CAAER,UAAW,CACnBS,KAAK,CAAER,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAES,MAAO,CACpBC,QAAQ,CAAGD,MAAM,EAAK,CACpB,GAAIR,YAAY,CAAE,CAChBA,YAAY,CAAC,CAAE,GAAGD,IAAI,CAAES,MAAO,CAAC,CAAC,CACnC,CACF,CAAE,CACH,CAAC,CAEN,CAEA,GAAId,WAAW,GAAKL,WAAW,CAACqB,IAAI,CAAE,CACpC,mBACEtB,KAAA,CAAAc,aAAA,CAACX,QAAQ,EACPY,OAAO,CAAER,cAAe,CACxBS,QAAQ,CAAER,YAAa,CACvBS,OAAO,CAAER,WAAY,CACrBS,MAAM,CAAER,UAAW,CACnBS,KAAK,CAAER,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEY,KAAM,CACnBF,QAAQ,CAAGE,KAAK,EAAK,CACnB,GAAIX,YAAY,CAAE,CAChBA,YAAY,CAAC,CAAE,GAAGD,IAAI,CAAEY,KAAM,CAAC,CAAC,CAClC,CACF,CAAE,CACH,CAAC,CAEN,CAEA,MAAO,KAAI,CACb,CAAC,CAED,cAAe,CAAAnB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}