{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/phonetic-transcription/components/Atlas/index.tsx\";\nimport React from 'react';\nimport { cloneDeep } from 'lodash';\nimport { reaction, makeObservable, when, toJS } from 'mobx';\nimport { observer } from 'mobx-react';\nimport { notification } from 'antd';\nimport { v4 as uuidv4 } from 'uuid';\nimport Wave from '../../common/Wave/index';\nimport { formatTimeCallback, timeInterval } from '../../utils/index';\nimport eventBus, { EventAction } from '../../utils/event';\nimport rootStore from '../../store/RootStore';\nimport i18n from '../../locales';\nimport { getAnalyseData } from '../../request';\nimport { Style, MediaModes } from '../../types';\nimport './index.scss';\nnotification.config({\n  top: 60\n});\nconst style = {\n  defaultAlpha: 0.5,\n  darkGray: '#2D2A34FF',\n  defaultGray: '#FFFFFF35',\n  defaultRed: '#FF0000FF',\n  defaultGreen: '#00FF00FF',\n  defaultWhite: '#FFFFFF99',\n  defaultBlue: '#0000FFFF',\n  timelineColor: '#8B8B8B',\n  cursorColor: '#0060FF',\n  transparent: 'rgba(0,0,0,0)'\n};\nclass Atlas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.waveformRef = React.createRef();\n    this.timeline = React.createRef();\n    this.waveSurfer = void 0;\n    this.audioCtx = void 0;\n    this.dataArray = new Uint8Array();\n    this.cursorTime = 0;\n    // audio duration\n    this.duration = 0;\n    // waveform peaks\n    this.peaks = [];\n    this.selectedMeasurement = -1;\n    this.audioData = new Float32Array();\n    this.selectedRegion = null;\n    this.region = null;\n    this.catchDisplay = null;\n    // operate the audio playback by user\n    this.isOperation = false;\n    /**\n     * reaction disposer\n     */\n    this.reactionDisposers = [];\n    /**\n     * redraw\n     */\n    this.redraw = height => {\n      if (this.waveSurfer) {\n        if (height) {\n          this.waveSurfer.setHeight(height);\n        }\n        this.waveSurfer.fireEvent('redraw');\n        this.startDrawAnalyse();\n      }\n    };\n    this.handleScroll = (start, end) => {\n      var _this$waveSurfer;\n      (_this$waveSurfer = this.waveSurfer) === null || _this$waveSurfer === void 0 ? void 0 : _this$waveSurfer.scroll({\n        start,\n        end\n      });\n      this.drawAnalyse(start, end);\n    };\n    this.waveformZoom = () => {\n      if (this.waveformRef.current) {\n        var _this$waveSurfer2;\n        const {\n          analyse: {\n            displayBuffer: {\n              start,\n              end\n            },\n            placement: {\n              margin\n            }\n          },\n          setting: {\n            zoom\n          }\n        } = rootStore;\n        const cursorPrecent = (this.props.mousePosition.x - margin) / this.waveformRef.current.clientWidth * (end - start) + start;\n        (_this$waveSurfer2 = this.waveSurfer) === null || _this$waveSurfer2 === void 0 ? void 0 : _this$waveSurfer2.zoom(zoom, cursorPrecent);\n      }\n    };\n    this.wavesurferListen = () => {\n      if (this.waveSurfer) {\n        this.waveSurfer.on('ready', () => {\n          var _this$waveSurfer3;\n          (_this$waveSurfer3 = this.waveSurfer) === null || _this$waveSurfer3 === void 0 ? void 0 : _this$waveSurfer3.pause();\n          this.loadAnalyse(rootStore.url);\n        });\n        this.waveSurfer.on('create_end', region => this.handlePlay(region.start, region.end));\n        this.waveSurfer.on('update_region', region => this.handleRegionUpdate(region));\n        this.waveSurfer.on('remove_region', (e, region) => this.handleRegionRemove(region));\n        this.waveSurfer.on('click_region', (e, region) => this.handleRegionClick(e, region));\n        this.waveSurfer.on('mousemove', ({\n          cursorTime\n        }) => {\n          this.cursorTime = cursorTime;\n          rootStore.analyse.setCursorTime(cursorTime);\n        });\n        this.waveSurfer.on('zoom', ({\n          start,\n          end\n        }) => {\n          rootStore.analyse.setDisplayBuffer({\n            start,\n            end,\n            precent: end - start\n          });\n          eventBus.emit(EventAction.ZOOM, {\n            start,\n            end\n          });\n        });\n        this.waveSurfer.on('error', () => {\n          var _this$waveSurfer4;\n          (_this$waveSurfer4 = this.waveSurfer) === null || _this$waveSurfer4 === void 0 ? void 0 : _this$waveSurfer4.destroy();\n        });\n        this.waveSurfer.on('change-time', time => {\n          rootStore.analyse.setCurrentTime(time);\n        });\n        this.waveSurfer.on('audioprocess', time => {\n          const {\n            selectedTime,\n            loop\n          } = rootStore.analyse;\n          rootStore.analyse.setCurrentTime(time);\n          if (selectedTime !== null) {\n            rootStore.analyse.setSelectedTime(time, loop === null || loop === void 0 ? void 0 : loop.end);\n          }\n        });\n        this.waveSurfer.on('pause', () => {\n          this.handlePause();\n        });\n        this.waveSurfer.on('play', () => {\n          rootStore.analyse.setIsPlaying(true);\n        });\n      }\n    };\n    this.loadAnalyse = url => {\n      fetch(url).then(res => res.blob()).then(async audio => {\n        var _this$waveSurfer5;\n        const analysePlugin = (_this$waveSurfer5 = this.waveSurfer) === null || _this$waveSurfer5 === void 0 ? void 0 : _this$waveSurfer5.plugins.analyse;\n        const {\n          code,\n          data\n        } = await getAnalyseData(audio, `${rootStore.analyse.sampleRate / 2}`);\n        rootStore.setting.setLoading(false);\n        if (code === 0) {\n          const {\n            pitches,\n            dbs,\n            formants,\n            spectrograms\n          } = data;\n          analysePlugin.setAnalyseData(pitches, dbs, formants, spectrograms);\n        } else {\n          eventBus.emit(EventAction.ANALYSE_DRAW_END);\n          notification.error({\n            message: i18n.translate('ANALYSE_LOAD_ERROR')\n          });\n        }\n      }).catch(error => {\n        notification.error({\n          message: i18n.translate('ANALYSE_LOAD_ERROR')\n        });\n        console.log('load anlyse error ==>', error);\n        rootStore.setting.setLoading(false);\n      });\n    };\n    this.listen = () => {\n      eventBus.on(EventAction.FREQUENCIES_DRAW, () => {\n        this.startDrawAnalyse();\n      });\n      eventBus.on(EventAction.ANALYSE_DRAW_START, () => {\n        rootStore.analyse.setIsDrawAtlasEnd(false);\n      });\n      eventBus.on(EventAction.ANALYSE_DRAW_END, () => {\n        rootStore.analyse.setIsDrawAtlasEnd(true);\n      });\n      eventBus.on(EventAction.SCALER_SEL, () => {\n        const {\n          selectedRegion\n        } = rootStore.analyse;\n        if (selectedRegion) {\n          this.catchDisplay = toJS(rootStore.analyse.displayBuffer);\n          const {\n            start,\n            end\n          } = selectedRegion;\n          this.cursorTime = start;\n          const zoom = Number((this.duration / (end - start)).toFixed(2));\n          rootStore.setting.setZoom(zoom);\n        }\n      });\n      eventBus.on(EventAction.SCALER_BAK, () => {\n        if (this.catchDisplay) {\n          const {\n            start,\n            precent\n          } = this.catchDisplay;\n          this.cursorTime = start * this.duration;\n          const zoom = Math.ceil(1 / precent);\n          rootStore.analyse.setDisplayBuffer(this.catchDisplay);\n          this.catchDisplay = null;\n          rootStore.setting.setZoom(zoom);\n        }\n      });\n      eventBus.on(EventAction.SCALER_RESIZE, () => {\n        rootStore.setting.setZoom(1);\n      });\n      eventBus.on(EventAction.DISPLAY_CHANGE, ({\n        start,\n        end\n      }) => {\n        this.handleScroll(start, end);\n      });\n    };\n    this.startDrawAnalyse = () => {\n      const {\n        start,\n        end\n      } = this.props.display;\n      this.drawAnalyse(start, end);\n    };\n    this.handleRegionUpdate = region => {\n      var _this$waveSurfer7;\n      if (this.props.isDragTimeline) return;\n      if (this.selectedRegion && this.selectedRegion.id !== region.id) {\n        var _this$waveSurfer6;\n        ((_this$waveSurfer6 = this.waveSurfer) === null || _this$waveSurfer6 === void 0 ? void 0 : _this$waveSurfer6.plugins.region).updateRegion(this.selectedRegion.id);\n      }\n      this.selectedRegion = region;\n      const {\n        start,\n        end\n      } = region;\n      const {\n        selectedRegion\n      } = rootStore.analyse;\n      if (((_this$waveSurfer7 = this.waveSurfer) === null || _this$waveSurfer7 === void 0 ? void 0 : _this$waveSurfer7.isPlaying()) && selectedRegion && selectedRegion.start < end && selectedRegion.end !== end) {\n        this.waveSurfer.setPlayEnd(end);\n      }\n      rootStore.analyse.setSelectedRegion({\n        start,\n        end\n      });\n    };\n    this.handleRegionRemove = region => {\n      rootStore.analyse.setSelectedTime(region.start);\n    };\n    // resize current region\n    this.updateSelectedRegion = () => {\n      const {\n        placement,\n        selectedRegion,\n        cursorTime\n      } = rootStore.analyse;\n      if (selectedRegion) {\n        const {\n          margin,\n          atlasWidth,\n          timelineHeight,\n          atlasHeight\n        } = placement;\n        let {\n          start,\n          end\n        } = selectedRegion;\n        const {\n          x,\n          y\n        } = this.props.mousePosition;\n        if (x > margin && x < margin + atlasWidth && y > timelineHeight && y < timelineHeight + atlasHeight && cursorTime !== start && cursorTime !== end) {\n          if (cursorTime < start) {\n            start = cursorTime;\n          } else {\n            end = cursorTime;\n          }\n          rootStore.analyse.setSelectedRegion({\n            start,\n            end\n          });\n        }\n      }\n    };\n    this.triggerPlay = () => {\n      const {\n        loop,\n        currentTime,\n        selectedRegion\n      } = rootStore.analyse;\n      if (this.waveSurfer) {\n        if (!this.waveSurfer.isPlaying()) {\n          const start = loop !== null ? loop.start : currentTime;\n          this.play(start, selectedRegion ? loop === null || loop === void 0 ? void 0 : loop.end : undefined);\n        } else {\n          this.isOperation = true;\n          this.waveSurfer.pause();\n        }\n      }\n    };\n    this.handlePlay = (_start, _end) => {\n      const {\n        currentTime,\n        loop,\n        placement: {\n          duration\n        }\n      } = rootStore.analyse;\n      const start = _start !== undefined ? _start : (loop === null || loop === void 0 ? void 0 : loop.start) || currentTime;\n      const end = _end || (loop === null || loop === void 0 ? void 0 : loop.end) || duration;\n      this.play(start, end);\n    };\n    this.play = (start, end) => {\n      var _this$waveSurfer8;\n      if (start !== undefined && end !== undefined && end - start <= 0.01) return;\n      (_this$waveSurfer8 = this.waveSurfer) === null || _this$waveSurfer8 === void 0 ? void 0 : _this$waveSurfer8.play(start, end);\n    };\n    makeObservable(this, {});\n  }\n  async componentDidMount() {\n    this.audioCtx = new window.AudioContext({\n      sampleRate: rootStore.analyse.sampleRate\n    });\n    when(() => !!rootStore.url && rootStore.analyse.placement.analyserHeight > 0, () => {\n      if (this.waveformRef.current) {\n        this.initWaveSurfer();\n        this.listen();\n      }\n    });\n    this.reactionDisposers.push(reaction(() => rootStore.analyse.placement, () => {\n      this.redraw(rootStore.analyse.placement.atlasHeight / 2);\n    }));\n    this.reactionDisposers.push(reaction(() => rootStore.setting.zoom, () => {\n      this.waveformZoom();\n    }));\n    this.reactionDisposers.push(reaction(() => rootStore.analyse.visible, () => {\n      this.startDrawAnalyse();\n    }));\n    this.reactionDisposers.push(reaction(() => rootStore.analyse.playAction, () => {\n      this.triggerPlay();\n    }));\n  }\n  componentWillUnmount() {\n    this.reactionDisposers.forEach(disposer => disposer());\n  }\n  componentDidUpdate(prevProps) {\n    if (!this.props.selectedRegion && this.selectedRegion || this.props.selectedRegion && !this.selectedRegion || this.props.selectedRegion && this.selectedRegion && (this.props.selectedRegion.start !== this.selectedRegion.start || this.props.selectedRegion.end !== this.selectedRegion.end)) {\n      this.setSelectedRegion(this.props.selectedRegion);\n    }\n    if (JSON.stringify(this.props.display) !== JSON.stringify(prevProps.display)) {\n      eventBus.emit(EventAction.DISPLAY_CHANGE, {\n        ...this.props.display\n      });\n    }\n  }\n  initWaveSurfer() {\n    const {\n      placement: {\n        atlasHeight,\n        timelineHeight\n      },\n      frequency\n    } = rootStore.analyse;\n    this.waveSurfer = new Wave({\n      container: this.waveformRef.current,\n      audioContext: this.audioCtx,\n      pixelRatio: window.devicePixelRatio,\n      channels: [{\n        label: '',\n        color: '#000000'\n      }],\n      splitChannels: false,\n      height: atlasHeight / 2,\n      plugins: {\n        timeline: {\n          container: this.timeline.current,\n          fontSize: 10,\n          height: timelineHeight,\n          notchPercentHeight: 10,\n          tickPercentHeight: 40,\n          primaryFontColor: style.timelineColor,\n          secondaryFontColor: style.timelineColor,\n          primaryColor: style.timelineColor,\n          secondaryColor: style.timelineColor,\n          timeInterval,\n          formatTimeCallback\n        },\n        region: {\n          container: this.waveformRef.current,\n          disabled: true,\n          dragEnable: false,\n          colors: [Style.STROKE]\n        },\n        analyse: {\n          container: this.waveformRef.current,\n          height: atlasHeight / 2,\n          maxFrequency: frequency\n        }\n      }\n    });\n    this.wavesurferListen();\n    if (rootStore.analyse.audioBuffer) {\n      this.waveSurfer.loadAudioBuffer(rootStore.analyse.audioBuffer);\n    }\n  }\n  setSelectedRegion(region) {\n    if (this.waveSurfer) {\n      if (this.selectedRegion) {\n        this.waveSurfer.plugins.region.updateRegion(this.selectedRegion.id);\n        this.selectedRegion = null;\n      }\n      if (region) {\n        const {\n          start,\n          end\n        } = region;\n        this.selectedRegion = {\n          id: uuidv4(),\n          channelIndex: 0,\n          start,\n          end,\n          color: Style.STROKE,\n          audition: true\n        };\n        this.waveSurfer.plugins.region.updateRegion(this.selectedRegion.id, cloneDeep(this.selectedRegion));\n      }\n    }\n  }\n  // eslint-disable-next-line class-methods-use-this\n  drawAnalyse(start, end) {\n    eventBus.emit(EventAction.DRAW_ANALYSE, {\n      start,\n      end\n    });\n  }\n  handleRegionClick(e, region) {\n    if (region && e.ctrlKey) {\n      this.handlePlay(this.cursorTime);\n    } else {\n      var _this$waveSurfer9, _this$waveSurfer0;\n      rootStore.analyse.setSelectedTime(this.cursorTime);\n      if ((_this$waveSurfer9 = this.waveSurfer) === null || _this$waveSurfer9 === void 0 ? void 0 : _this$waveSurfer9.isPlaying()) {\n        this.triggerPlay();\n      }\n      (_this$waveSurfer0 = this.waveSurfer) === null || _this$waveSurfer0 === void 0 ? void 0 : _this$waveSurfer0.setCurrentTime(this.cursorTime);\n    }\n  }\n  handlePause() {\n    const {\n      analyse,\n      instance\n    } = rootStore;\n    const {\n      playMode,\n      currentTime,\n      loop\n    } = analyse;\n    const isPlayOver = Math.abs(currentTime - this.duration) < 0.02;\n    if (playMode === MediaModes.REGION_LOOP && loop && !this.isOperation) {\n      this.play(loop.start, loop.end);\n      return;\n    }\n    if (playMode === MediaModes.OVERALL && !isPlayOver && !this.isOperation) {\n      this.play(currentTime);\n      return;\n    }\n    analyse.setIsPlaying(false);\n    if (this.isOperation) {\n      this.isOperation = false;\n      if (loop) {\n        var _this$waveSurfer1;\n        analyse.setSelectedRegion({\n          start: currentTime,\n          end: loop.end\n        });\n        (_this$waveSurfer1 = this.waveSurfer) === null || _this$waveSurfer1 === void 0 ? void 0 : _this$waveSurfer1.setCurrentTime(currentTime);\n      }\n    } else if (loop) {\n      var _this$waveSurfer10;\n      (_this$waveSurfer10 = this.waveSurfer) === null || _this$waveSurfer10 === void 0 ? void 0 : _this$waveSurfer10.setCurrentTime(loop.end);\n    } else {\n      const nextInstance = instance.getNextInstance(currentTime);\n      if (nextInstance && nextInstance.start - currentTime < 0.025) {\n        var _this$waveSurfer11;\n        (_this$waveSurfer11 = this.waveSurfer) === null || _this$waveSurfer11 === void 0 ? void 0 : _this$waveSurfer11.setCurrentTime(nextInstance.start);\n      }\n    }\n  }\n  render() {\n    const {\n      timelineHeight,\n      atlasHeight,\n      margin\n    } = rootStore.analyse.placement;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"audio-waveform-container\",\n      style: {\n        height: `${timelineHeight + atlasHeight}px`,\n        padding: `0 ${margin}px`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"audio-waveform-timeline\",\n      ref: this.timeline,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"audio-waveform\",\n      ref: this.waveformRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 9\n      }\n    }));\n  }\n}\nexport default observer(Atlas);","map":{"version":3,"names":["React","cloneDeep","reaction","makeObservable","when","toJS","observer","notification","v4","uuidv4","Wave","formatTimeCallback","timeInterval","eventBus","EventAction","rootStore","i18n","getAnalyseData","Style","MediaModes","config","top","style","defaultAlpha","darkGray","defaultGray","defaultRed","defaultGreen","defaultWhite","defaultBlue","timelineColor","cursorColor","transparent","Atlas","Component","constructor","props","waveformRef","createRef","timeline","waveSurfer","audioCtx","dataArray","Uint8Array","cursorTime","duration","peaks","selectedMeasurement","audioData","Float32Array","selectedRegion","region","catchDisplay","isOperation","reactionDisposers","redraw","height","setHeight","fireEvent","startDrawAnalyse","handleScroll","start","end","_this$waveSurfer","scroll","drawAnalyse","waveformZoom","current","_this$waveSurfer2","analyse","displayBuffer","placement","margin","setting","zoom","cursorPrecent","mousePosition","x","clientWidth","wavesurferListen","on","_this$waveSurfer3","pause","loadAnalyse","url","handlePlay","handleRegionUpdate","e","handleRegionRemove","handleRegionClick","setCursorTime","setDisplayBuffer","precent","emit","ZOOM","_this$waveSurfer4","destroy","time","setCurrentTime","selectedTime","loop","setSelectedTime","handlePause","setIsPlaying","fetch","then","res","blob","audio","_this$waveSurfer5","analysePlugin","plugins","code","data","sampleRate","setLoading","pitches","dbs","formants","spectrograms","setAnalyseData","ANALYSE_DRAW_END","error","message","translate","catch","console","log","listen","FREQUENCIES_DRAW","ANALYSE_DRAW_START","setIsDrawAtlasEnd","SCALER_SEL","Number","toFixed","setZoom","SCALER_BAK","Math","ceil","SCALER_RESIZE","DISPLAY_CHANGE","display","_this$waveSurfer7","isDragTimeline","id","_this$waveSurfer6","updateRegion","isPlaying","setPlayEnd","setSelectedRegion","updateSelectedRegion","atlasWidth","timelineHeight","atlasHeight","y","triggerPlay","currentTime","play","undefined","_start","_end","_this$waveSurfer8","componentDidMount","window","AudioContext","analyserHeight","initWaveSurfer","push","visible","playAction","componentWillUnmount","forEach","disposer","componentDidUpdate","prevProps","JSON","stringify","frequency","container","audioContext","pixelRatio","devicePixelRatio","channels","label","color","splitChannels","fontSize","notchPercentHeight","tickPercentHeight","primaryFontColor","secondaryFontColor","primaryColor","secondaryColor","disabled","dragEnable","colors","STROKE","maxFrequency","audioBuffer","loadAudioBuffer","channelIndex","audition","DRAW_ANALYSE","ctrlKey","_this$waveSurfer9","_this$waveSurfer0","instance","playMode","isPlayOver","abs","REGION_LOOP","OVERALL","_this$waveSurfer1","_this$waveSurfer10","nextInstance","getNextInstance","_this$waveSurfer11","render","createElement","className","padding","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ref"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/phonetic-transcription/components/Atlas/index.tsx"],"sourcesContent":["import React from 'react';\nimport { cloneDeep } from 'lodash';\nimport { reaction, makeObservable, when, toJS, IReactionDisposer } from 'mobx';\nimport { observer } from 'mobx-react';\nimport { notification } from 'antd';\nimport { v4 as uuidv4 } from 'uuid';\nimport Wave from '../../common/Wave/index';\nimport { Region } from '../../common/Wave/types';\nimport { formatTimeCallback, timeInterval } from '../../utils/index';\nimport AnalysePlugin from '../../common/Wave/Analyse';\nimport RegionPlugion from '../../common/Wave/Region';\nimport eventBus, { EventAction } from '../../utils/event';\nimport rootStore from '../../store/RootStore';\nimport i18n from '../../locales';\nimport { getAnalyseData } from '../../request';\nimport { DisplayBuffer, Style, MediaModes } from '../../types';\nimport './index.scss';\n\nnotification.config({ top: 60 });\n\nconst style = {\n  defaultAlpha: 0.5,\n  darkGray: '#2D2A34FF',\n  defaultGray: '#FFFFFF35',\n  defaultRed: '#FF0000FF',\n  defaultGreen: '#00FF00FF',\n  defaultWhite: '#FFFFFF99',\n  defaultBlue: '#0000FFFF',\n  timelineColor: '#8B8B8B',\n  cursorColor: '#0060FF',\n  transparent: 'rgba(0,0,0,0)',\n};\n\ninterface AtlasProps {\n  selectedRegion: null | { start: number; end: number; };\n  display: DisplayBuffer;\n  mousePosition: { x:number; y:number; mousedown: boolean; };\n  isDragTimeline: boolean;\n}\nclass Atlas extends React.Component<AtlasProps> {\n  waveformRef: React.RefObject<HTMLDivElement> = React.createRef();\n\n  timeline: React.RefObject<HTMLDivElement> = React.createRef();\n\n  waveSurfer?: Wave;\n\n  audioCtx?: AudioContext;\n\n  dataArray: Uint8Array = new Uint8Array();\n\n  cursorTime = 0;\n\n  // audio duration\n  duration = 0;\n\n  // waveform peaks\n  peaks:number[] = [];\n\n  selectedMeasurement = -1;\n\n  audioData: Float32Array = new Float32Array();\n\n  selectedRegion: Region | null = null;\n\n  region: Region | null = null;\n\n  catchDisplay: null | DisplayBuffer = null;\n\n  // operate the audio playback by user\n  isOperation = false;\n\n  /**\n   * reaction disposer\n   */\n  reactionDisposers: IReactionDisposer[] = [];\n\n  constructor(props: any) {\n    super(props);\n\n    makeObservable(this, {});\n  }\n\n  async componentDidMount() {\n    this.audioCtx = new window.AudioContext({ sampleRate: rootStore.analyse.sampleRate });\n\n    when(\n      () => !!rootStore.url && rootStore.analyse.placement.analyserHeight > 0,\n      () => {\n        if (this.waveformRef.current) {\n          this.initWaveSurfer();\n          this.listen();\n        }\n      }\n    );\n\n    this.reactionDisposers.push(reaction(\n      () => rootStore.analyse.placement,\n      () => {\n        this.redraw(rootStore.analyse.placement.atlasHeight / 2);\n      },\n    ));\n\n    this.reactionDisposers.push(reaction(\n      () => rootStore.setting.zoom,\n      () => {\n        this.waveformZoom();\n      },\n    ));\n\n    this.reactionDisposers.push(reaction(\n      () => rootStore.analyse.visible,\n      () => {\n        this.startDrawAnalyse();\n      },\n    ));\n\n    this.reactionDisposers.push(reaction(\n      () => rootStore.analyse.playAction,\n      () => {\n        this.triggerPlay();\n      },\n    ));\n  }\n\n  componentWillUnmount() {\n    this.reactionDisposers.forEach((disposer) => disposer());\n  }\n\n  componentDidUpdate(prevProps: AtlasProps) {\n    if (\n      (!this.props.selectedRegion && this.selectedRegion) ||\n      (this.props.selectedRegion && !this.selectedRegion) ||\n      (\n        this.props.selectedRegion && this.selectedRegion &&\n        (this.props.selectedRegion.start !== this.selectedRegion.start ||\n        this.props.selectedRegion.end !== this.selectedRegion.end)\n      )\n    ) {\n      this.setSelectedRegion(this.props.selectedRegion);\n    }\n\n    if (JSON.stringify(this.props.display) !== JSON.stringify(prevProps.display)) {\n      eventBus.emit(EventAction.DISPLAY_CHANGE, { ...this.props.display });\n    }\n  }\n\n  initWaveSurfer() {\n    const { placement: { atlasHeight, timelineHeight }, frequency } = rootStore.analyse;\n    this.waveSurfer = new Wave({\n      container: this.waveformRef.current!,\n      audioContext: this.audioCtx!,\n      pixelRatio: window.devicePixelRatio,\n      channels: [{ label: '', color: '#000000' }],\n      splitChannels: false,\n      height: atlasHeight / 2,\n      plugins: {\n        timeline: {\n          container: this.timeline.current!,\n          fontSize: 10,\n          height: timelineHeight,\n          notchPercentHeight: 10,\n          tickPercentHeight: 40,\n          primaryFontColor: style.timelineColor,\n          secondaryFontColor: style.timelineColor,\n          primaryColor: style.timelineColor,\n          secondaryColor: style.timelineColor,\n          timeInterval,\n          formatTimeCallback,\n        },\n        region: {\n          container: this.waveformRef.current!,\n          disabled: true,\n          dragEnable: false,\n          colors: [Style.STROKE as string],\n        },\n        analyse: {\n          container: this.waveformRef.current!,\n          height: atlasHeight / 2,\n          maxFrequency: frequency,\n        }\n      }\n    });\n    this.wavesurferListen();\n    if (rootStore.analyse.audioBuffer) {\n      this.waveSurfer.loadAudioBuffer(rootStore.analyse.audioBuffer);\n    }\n  }\n\n  /**\n   * redraw\n   */\n  redraw = (height?:number) => {\n    if (this.waveSurfer) {\n      if (height) {\n        this.waveSurfer.setHeight(height);\n      }\n      this.waveSurfer.fireEvent('redraw');\n      this.startDrawAnalyse();\n    }\n  };\n\n  handleScroll = (start: number, end: number) => {\n    this.waveSurfer?.scroll({ start, end });\n    this.drawAnalyse(start, end);\n  };\n\n  waveformZoom = () => {\n    if (this.waveformRef.current) {\n      const { analyse: { displayBuffer: { start, end }, placement: { margin } }, setting: { zoom } } = rootStore;\n      const cursorPrecent = ((this.props.mousePosition.x - margin) / this.waveformRef.current.clientWidth) * (end - start) + start;\n      this.waveSurfer?.zoom(zoom, cursorPrecent);\n    }\n  };\n\n  wavesurferListen = () => {\n    if (this.waveSurfer) {\n      this.waveSurfer.on('ready', () => {\n        this.waveSurfer?.pause();\n        this.loadAnalyse(rootStore.url!);\n      });\n      this.waveSurfer.on('create_end', (region: Region) => this.handlePlay(region.start, region.end));\n      this.waveSurfer.on('update_region', (region: Region) => this.handleRegionUpdate(region));\n      this.waveSurfer.on('remove_region', (e: MouseEvent, region: Region) => this.handleRegionRemove(region));\n      this.waveSurfer.on('click_region', (e: MouseEvent, region?: Region) => this.handleRegionClick(e, region));\n      this.waveSurfer.on('mousemove', ({ cursorTime }: {\n        cursorTime: number;\n        mouse: {x: number; y: number},\n        channelIndex: number\n      }) => {\n        this.cursorTime = cursorTime;\n        rootStore.analyse.setCursorTime(cursorTime);\n      });\n      this.waveSurfer.on('zoom', ({ start, end }: {start: number, end: number}) => {\n        rootStore.analyse.setDisplayBuffer({ start, end, precent: end - start });\n        eventBus.emit(EventAction.ZOOM, { start, end });\n      });\n      this.waveSurfer.on('error', () => {\n        this.waveSurfer?.destroy();\n      });\n      this.waveSurfer.on('change-time', (time: number) => {\n        rootStore.analyse.setCurrentTime(time);\n      });\n      this.waveSurfer.on('audioprocess', (time: number) => {\n        const { selectedTime, loop } = rootStore.analyse;\n        rootStore.analyse.setCurrentTime(time);\n        if (selectedTime !== null) {\n          rootStore.analyse.setSelectedTime(time, loop?.end);\n        }\n      });\n      this.waveSurfer.on('pause', () => {\n        this.handlePause();\n      });\n      this.waveSurfer.on('play', () => {\n        rootStore.analyse.setIsPlaying(true);\n      });\n    }\n  };\n\n  loadAnalyse = (url: string) => {\n    fetch(url)\n      .then((res) => res.blob())\n      .then(async (audio) => {\n        const analysePlugin = ((this.waveSurfer?.plugins.analyse as unknown) as AnalysePlugin)!;\n        const { code, data } = await getAnalyseData(audio, `${rootStore.analyse.sampleRate / 2}`);\n        rootStore.setting.setLoading(false);\n        if (code === 0) {\n          const { pitches, dbs, formants, spectrograms } = data;\n          analysePlugin.setAnalyseData(pitches, dbs, formants, spectrograms);\n        } else {\n          eventBus.emit(EventAction.ANALYSE_DRAW_END);\n          notification.error({ message: i18n.translate('ANALYSE_LOAD_ERROR') });\n        }\n      }).catch((error) => {\n        notification.error({ message: i18n.translate('ANALYSE_LOAD_ERROR') });\n        console.log('load anlyse error ==>', error);\n        rootStore.setting.setLoading(false);\n      });\n  };\n\n  setSelectedRegion(region: {start: number; end: number} | null) {\n    if (this.waveSurfer) {\n      if (this.selectedRegion) {\n        (this.waveSurfer.plugins.region as unknown as RegionPlugion).updateRegion(this.selectedRegion.id);\n        this.selectedRegion = null;\n      }\n      if (region) {\n        const { start, end } = region;\n        this.selectedRegion = {\n          id: uuidv4(),\n          channelIndex: 0,\n          start,\n          end,\n          color: Style.STROKE as string,\n          audition: true,\n        };\n        (this.waveSurfer.plugins.region as unknown as RegionPlugion).updateRegion(this.selectedRegion.id, cloneDeep(this.selectedRegion));\n      }\n    }\n  }\n\n  listen = () => {\n    eventBus.on(EventAction.FREQUENCIES_DRAW, () => {\n      this.startDrawAnalyse();\n    });\n\n    eventBus.on(EventAction.ANALYSE_DRAW_START, () => {\n      rootStore.analyse.setIsDrawAtlasEnd(false);\n    });\n\n    eventBus.on(EventAction.ANALYSE_DRAW_END, () => {\n      rootStore.analyse.setIsDrawAtlasEnd(true);\n    });\n\n    eventBus.on(EventAction.SCALER_SEL, () => {\n      const { selectedRegion } = rootStore.analyse;\n      if (selectedRegion) {\n        this.catchDisplay = toJS(rootStore.analyse.displayBuffer);\n        const { start, end } = selectedRegion;\n        this.cursorTime = start;\n        const zoom = Number((this.duration / (end - start)).toFixed(2));\n        rootStore.setting.setZoom(zoom);\n      }\n    });\n\n    eventBus.on(EventAction.SCALER_BAK, () => {\n      if (this.catchDisplay) {\n        const { start, precent } = this.catchDisplay;\n        this.cursorTime = start * this.duration;\n        const zoom = Math.ceil(1 / precent);\n        rootStore.analyse.setDisplayBuffer(this.catchDisplay);\n        this.catchDisplay = null;\n        rootStore.setting.setZoom(zoom);\n      }\n    });\n\n    eventBus.on(EventAction.SCALER_RESIZE, () => {\n      rootStore.setting.setZoom(1);\n    });\n\n    eventBus.on(EventAction.DISPLAY_CHANGE, ({ start, end }) => {\n      this.handleScroll(start, end);\n    });\n  };\n\n  startDrawAnalyse = () => {\n    const { start, end } = this.props.display;\n    this.drawAnalyse(start, end);\n  };\n\n  // eslint-disable-next-line class-methods-use-this\n  drawAnalyse(start: number, end: number) {\n    eventBus.emit(EventAction.DRAW_ANALYSE, { start, end });\n  }\n\n  handleRegionUpdate = (region: Region) => {\n    if (this.props.isDragTimeline) return;\n    if (this.selectedRegion && this.selectedRegion.id !== region.id) {\n      (this.waveSurfer?.plugins.region as unknown as RegionPlugion).updateRegion(this.selectedRegion.id);\n    }\n    this.selectedRegion = region;\n    const { start, end } = region;\n    const { selectedRegion } = rootStore.analyse;\n    if (\n      this.waveSurfer?.isPlaying() &&\n      selectedRegion &&\n      selectedRegion.start < end &&\n      selectedRegion.end !== end\n    ) {\n      this.waveSurfer.setPlayEnd(end);\n    }\n    rootStore.analyse.setSelectedRegion({ start, end });\n  };\n\n  handleRegionRemove = (region: Region) => {\n    rootStore.analyse.setSelectedTime(region.start);\n  };\n\n  handleRegionClick(e: MouseEvent, region?: Region) {\n    if (region && e.ctrlKey) {\n      this.handlePlay(this.cursorTime);\n    } else {\n      rootStore.analyse.setSelectedTime(this.cursorTime);\n      if (this.waveSurfer?.isPlaying()) {\n        this.triggerPlay();\n      }\n      this.waveSurfer?.setCurrentTime(this.cursorTime);\n    }\n  }\n\n  // resize current region\n  updateSelectedRegion = () => {\n    const { placement, selectedRegion, cursorTime } = rootStore.analyse;\n    if (selectedRegion) {\n      const { margin, atlasWidth, timelineHeight, atlasHeight } = placement;\n      let { start, end } = selectedRegion;\n      const { x, y } = this.props.mousePosition;\n      if (\n        (\n          (x > margin && x < margin + atlasWidth) &&\n          (y > timelineHeight && y < timelineHeight + atlasHeight)\n        ) &&\n        (cursorTime !== start && cursorTime !== end)\n      ) {\n        if (cursorTime < start) {\n          start = cursorTime;\n        } else {\n          end = cursorTime;\n        }\n        rootStore.analyse.setSelectedRegion({\n          start,\n          end,\n        });\n      }\n    }\n  };\n\n  triggerPlay = () => {\n    const { loop, currentTime, selectedRegion } = rootStore.analyse;\n    if (this.waveSurfer) {\n      if (!this.waveSurfer.isPlaying()) {\n        const start = loop !== null ? loop.start : currentTime;\n        this.play(start, selectedRegion ? loop?.end : undefined);\n      } else {\n        this.isOperation = true;\n        this.waveSurfer.pause();\n      }\n    }\n  };\n\n  handlePause() {\n    const { analyse, instance } = rootStore;\n    const { playMode, currentTime, loop } = analyse;\n    const isPlayOver = Math.abs(currentTime - this.duration) < 0.02;\n    if (playMode === MediaModes.REGION_LOOP && loop && !this.isOperation) {\n      this.play(loop.start, loop.end);\n      return;\n    }\n    if (playMode === MediaModes.OVERALL && !isPlayOver && !this.isOperation) {\n      this.play(currentTime);\n      return;\n    }\n    analyse.setIsPlaying(false);\n    if (this.isOperation) {\n      this.isOperation = false;\n      if (loop) {\n        analyse.setSelectedRegion({ start: currentTime, end: loop.end });\n        this.waveSurfer?.setCurrentTime(currentTime);\n      }\n    } else if (loop) {\n      this.waveSurfer?.setCurrentTime(loop.end);\n    } else {\n      const nextInstance = instance.getNextInstance(currentTime);\n      if (nextInstance && nextInstance.start - currentTime < 0.025) {\n        this.waveSurfer?.setCurrentTime(nextInstance.start);\n      }\n    }\n  }\n\n  handlePlay = (_start?: number, _end?: number) => {\n    const { currentTime, loop, placement: { duration } } = rootStore.analyse;\n    const start = _start !== undefined ? _start : loop?.start || currentTime;\n    const end = _end || loop?.end || duration;\n    this.play(start, end);\n  };\n\n  play = (start?: number, end?: number) => {\n    if (start !== undefined && end !== undefined && (end - start) <= 0.01) return;\n    this.waveSurfer?.play(start, end);\n  };\n\n  render() {\n    const { timelineHeight, atlasHeight, margin } = rootStore.analyse.placement;\n    return (\n      <div\n        className=\"audio-waveform-container\"\n        style={{ height: `${timelineHeight + atlasHeight}px`, padding: `0 ${margin}px` }}\n      >\n        <div className=\"audio-waveform-timeline\" ref={this.timeline} />\n        <div className=\"audio-waveform\" ref={this.waveformRef} />\n      </div>\n    );\n  }\n}\nexport default observer(Atlas);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}