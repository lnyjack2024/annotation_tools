{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/advertisement-annotation/AnnotationCanvas.jsx\";\nimport React from 'react';\nimport { Slider, Button, Popover, notification } from 'antd';\nimport { CaretRightOutlined, AudioOutlined, PauseOutlined } from '@ant-design/icons';\nimport { formatSecond, formatMinute, simpleClone, formatHour, getResizeAction, clamp, sortPosition } from './util';\nimport { FPS, UNDEFINED_COLOR, MIN_SEGMENT_LENGTH } from './AnnotationForm';\nimport { isAnnotationReadonly } from '../../utils/tool-mode';\nnotification.config({\n  top: 60,\n  getContainer: () => document.getElementById('root')\n});\nexport const getDeltaTime = rate => 1 / FPS * rate;\nconst DEVIATION = 0.014;\nclass AnnotationCanvas extends React.Component {\n  constructor() {\n    super();\n    this.currentFrame = null;\n    this.state = {\n      startX: null,\n      startY: null,\n      endX: null,\n      endY: null,\n      canvasWidth: 800,\n      canvasHeight: 450,\n      videoWidth: 800,\n      videoHeight: 450\n    };\n    this.downX = null;\n    this.downY = null;\n    this.width = null;\n    this.height = null;\n    this.resizeAction = null;\n    this.rectOn = null;\n    this.snapshot = null;\n    this.active = false;\n    this.generateSnapshot = this.generateSnapshot.bind(this);\n  }\n  componentDidMount() {\n    this.svg.addEventListener('resize', () => {\n      this.forceUpdate();\n    });\n    window.addEventListener('mousemove', e => {\n      this.handleMouseMove(e);\n    });\n    window.addEventListener('mouseup', e => {\n      if (this.active) this.handleMouseUp(e);\n    });\n    this.video.addEventListener('seeked', this.generateSnapshot);\n  }\n  componentWillUnmount() {\n    this.video.removeEventListener('seeked', this.generateSnapshot);\n  }\n  getRectMouseOn(x, y, deviation) {\n    const {\n      results,\n      currentTime\n    } = this.props;\n    let rect = null;\n    let rectNearby = null;\n    results.some((result, index) => {\n      const {\n        position,\n        start,\n        end\n      } = result;\n      // only select rect in a range of time\n      if (start != null && end != null && (currentTime < start || currentTime > end)) return false;\n      // only compare rect is not empty\n      if (!position || !position.length) return false;\n      let [xS, yS, xE, yE] = position;\n      // swap position to ensure xS and yS is the smallest number\n      if (xS > xE) [xE, xS] = [xS, xE];\n      if (yS > yE) [yE, yS] = [yS, yE];\n      if (x >= xS && x <= xE && y >= yS && y <= yE) {\n        rect = result.key;\n        return true;\n      }\n      if (x >= xS - deviation && x <= xE + deviation && y >= yS - deviation && y <= yE + deviation) {\n        const distance = position.map((p, i) => {\n          if (i % 2 === 0) return Math.abs(p - x);\n          return Math.abs(p - y);\n        });\n        rectNearby = {\n          key: result.key,\n          distance\n        };\n      }\n      return false;\n    });\n    return {\n      on: rect,\n      nearyby: rectNearby\n    };\n  }\n  handleMouseDown(e) {\n    const {\n      clientX,\n      clientY\n    } = e;\n    const {\n      x,\n      y,\n      width,\n      height\n    } = this.video.getBoundingClientRect();\n    // move rect or resize\n    if (this.props.currentMode === 'edit' && this.rectOn != null) {\n      this.downX = (clientX - x) / width;\n      this.downY = (clientY - y) / height;\n      this.props.setCurrentIndex(this.rectOn);\n    } else {\n      // draw rect\n      const startX = (clientX - x) / width;\n      const startY = (clientY - y) / height;\n      this.setState({\n        startX,\n        startY\n      });\n    }\n    this.active = true;\n  }\n  getResult(results, index) {\n    return results.find(r => r.key === index);\n  }\n\n  // used to move or resize selected area\n  handleMouseMove(e) {\n    var _this$getResult;\n    const {\n      currentMode,\n      currentIndex,\n      results,\n      handleResultsChange,\n      toolMode\n    } = this.props;\n    const {\n      clientX,\n      clientY\n    } = e;\n    const {\n      resizeAction\n    } = this;\n    if (isAnnotationReadonly(toolMode)) return;\n    const {\n      x,\n      y,\n      width,\n      height\n    } = this.video.getBoundingClientRect();\n    // if there is no click recorded and is not in paint mode, monitor the mouse position to change cursor style\n    if (currentMode === 'edit' && this.downX == null && this.downY == null) {\n      const left = (clientX - x) / width;\n      const top = (clientY - y) / height;\n      const {\n        on,\n        nearyby\n      } = this.getRectMouseOn(left, top, DEVIATION);\n      if (on != null) {\n        // if mouse in rect use move mode\n        document.body.style.cursor = 'move';\n        this.rectOn = on;\n        this.resizeAction = null;\n      } else if (nearyby) {\n        // if mouse is somewhere nearby rect's boundry use resize mode\n        const {\n          key,\n          distance\n        } = nearyby;\n        this.resizeAction = getResizeAction(distance, DEVIATION);\n        if (this.resizeAction.length === 1) {\n          if (this.resizeAction[0] === 0 || this.resizeAction[0] === 2) {\n            document.body.style.cursor = 'e-resize';\n          } else {\n            document.body.style.cursor = 'n-resize';\n          }\n        } else {\n          const [first, second] = this.resizeAction;\n          if (first + second === 1 || first + second === 5) {\n            // left-top or right-bottom\n            document.body.style.cursor = 'nwse-resize';\n          } else {\n            document.body.style.cursor = 'nesw-resize';\n          }\n        }\n        this.rectOn = key;\n      } else {\n        document.body.style.cursor = 'default';\n      }\n    } else if (currentMode === 'edit' && currentIndex != null && ((_this$getResult = this.getResult(results, currentIndex)) === null || _this$getResult === void 0 ? void 0 : _this$getResult.position.length) && this.downX && this.downY) {\n      // if in edit mode, and there is click recorded, then use move/resize mode\n      const resultsCopy = simpleClone(results);\n      const {\n        position\n      } = this.getResult(resultsCopy, currentIndex);\n      const displacement = [(clientX - x) / width - this.downX, (clientY - y) / height - this.downY];\n      if (resizeAction) {\n        // if there is resize action then use resize mode\n        resizeAction.forEach(action => {\n          position[action] = clamp(position[action] + displacement[action % 2], 0, 1);\n        });\n      } else {\n        // if there is no action then use move mode\n        const [moveX, moveY] = displacement;\n\n        // check whether selected area out of boundary in x axis, if not, move it in x axis\n        if (moveX > 0 && position[2] + moveX <= 1 || moveX < 0 && position[0] + moveX >= 0) {\n          position[0] += moveX;\n          position[2] += moveX;\n        }\n\n        // check whether selected area out of boundary in y axis, if not, move it in y axis\n        if (moveY > 0 && position[3] + moveY <= 1 || moveY < 0 && position[1] + moveY >= 0) {\n          // if move up\n          position[1] += moveY;\n          position[3] += moveY;\n        }\n      }\n      this.downX = (clientX - x) / width;\n      this.downY = (clientY - y) / height;\n      handleResultsChange(resultsCopy);\n    } else if (this.props.currentMode === 'paint') {\n      const endX = clamp((clientX - x) / width, 0, 1);\n      const endY = clamp((clientY - y) / height, 0, 1);\n      this.setState({\n        endX,\n        endY\n      });\n    }\n  }\n  async handleMouseUp(e) {\n    this.active = false;\n    const {\n      currentTime,\n      results,\n      currentIndex,\n      currentMode,\n      toolMode\n    } = this.props;\n    const {\n      startX,\n      startY,\n      endX,\n      endY\n    } = this.state;\n    this.setState({\n      startX: null,\n      startY: null,\n      endX: null,\n      endY: null\n    });\n    if (isAnnotationReadonly(toolMode)) return;\n    const resultsCopy = simpleClone(results);\n    const currentItem = this.getResult(resultsCopy, currentIndex);\n    if (currentItem) {\n      // resultsCopy[currentIndex].snapshot = this.genSnapshot(currentIndex, results);\n      this.props.focusItemInRightSide(currentItem.key);\n      sortPosition(currentItem.position);\n    }\n    if (currentMode === 'edit' || currentIndex == null) {\n      this.downX = null;\n      this.downY = null;\n      this.rectOn = null;\n      this.props.handleResultsChange(resultsCopy);\n      return;\n    }\n    currentItem.position = [startX, startY, endX, endY];\n    sortPosition(currentItem.position);\n    const item = currentItem;\n    if (item.start == null) {\n      item.start = currentTime;\n      if (item.end != null && item.end < currentTime + MIN_SEGMENT_LENGTH) item.end = null;\n      const imageUrl = await this.generateImageUrl(currentTime);\n      item.snapshot = imageUrl;\n    }\n    this.props.handleResultsChange(resultsCopy);\n  }\n  async generateSnapshot() {\n    const timestamp = this.video.currentTime;\n    this.generateSnapshotWithTimestamp(timestamp);\n  }\n\n  // for seeked event, we should check the start time for all items and update the results\n  async generateSnapshotWithTimestamp(timestamp) {\n    const resultsCopy = simpleClone(this.props.results);\n    let imageUrl;\n    let needUpdate = false;\n    for (let i = 0; i < resultsCopy.length; i = i + 1) {\n      const r = resultsCopy[i];\n      if (r.start === timestamp) {\n        if (!r.snapshot || !r.snapshot.endsWith(`_${timestamp}.jpg`)) {\n          if (!imageUrl) {\n            imageUrl = await this.generateImageUrl(timestamp);\n          }\n          r.snapshot = imageUrl;\n          r.start = timestamp;\n          needUpdate = true;\n        }\n      }\n    }\n    ;\n    if (needUpdate) {\n      this.props.handleResultsChange(resultsCopy);\n    }\n  }\n  async generateImageUrl(timestamp) {\n    let imageUrl;\n    const w = this.video.videoWidth;\n    const h = this.video.videoHeight;\n    this.snapshot.width = w;\n    this.snapshot.height = h;\n    const ctx = this.snapshot.getContext('2d');\n    ctx.clearRect(0, 0, w, h);\n    ctx.drawImage(this.video, 0, 0, w, h);\n    const dataUrl = this.snapshot.toDataURL('image/jpeg', 0.3);\n    const filename = `video_ads/${this.props.jobId}.${this.props.taskId}.${this.props.recordId}.${this.props.toolMode}_${timestamp}.jpg`;\n    try {\n      imageUrl = await this.props.saveContent(dataUrl, 'image/jpeg', filename, this.props.jobId);\n    } catch (e) {\n      notification.warn({\n        message: '生成截图失败，请重试'\n      });\n    }\n    return imageUrl;\n  }\n  render() {\n    var _this$getResult2;\n    const {\n      startX,\n      startY,\n      endX,\n      endY,\n      canvasHeight,\n      canvasWidth\n    } = this.state;\n    const {\n      width,\n      height\n    } = this;\n    const {\n      currentIndex,\n      results,\n      currentTime,\n      currentPlayBackRate,\n      advertisementNameMap\n    } = this.props;\n    if (this.container) {\n      this.width = this.svg.getBoundingClientRect().width;\n      this.height = this.svg.getBoundingClientRect().height;\n    }\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"annotation-canvas-container\",\n      ref: r => {\n        this.container = r;\n      },\n      style: {\n        width: `${canvasWidth}px`,\n        height: `${canvasHeight}px`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: r => {\n        this.snapshot = r;\n      },\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"annotation-canvas-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      className: \"annotation-canvas\",\n      ref: r => {\n        this.svg = r;\n      },\n      onMouseDown: e => this.handleMouseDown(e),\n      width: this.state.videoWidth,\n      height: this.state.videoHeight\n      // onMouseMove={(e) => this.handleMouseMove(e)}\n      // onMouseUp={(e) => this.handleMouseUp(e)}\n      ,\n      version: \"1.1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }\n    }, startX == null || startY == null || endX == null || endY == null || currentIndex == null ? null : /*#__PURE__*/React.createElement(\"rect\", {\n      x: Math.min(startX, endX) * width,\n      y: Math.min(startY, endY) * height,\n      width: Math.abs(endX - startX) * width,\n      height: Math.abs(endY - startY) * height,\n      stroke: advertisementNameMap.get((_this$getResult2 = this.getResult(results, currentIndex)) === null || _this$getResult2 === void 0 ? void 0 : _this$getResult2.name) || UNDEFINED_COLOR,\n      fill: \"rgba(0,0,0,0)\",\n      strokeDasharray: \"5, 5\",\n      strokeWidth: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 19\n      }\n    }), results.map(item => (item.start == null || item.end == null || item.start <= currentTime + getDeltaTime(currentPlayBackRate) && item.end >= currentTime - getDeltaTime(currentPlayBackRate)) && item.position != null && item.position[0] != null && item.position[1] != null && item.position[2] != null && item.position[3] != null ?\n    /*#__PURE__*/\n    // eslint-disable-next-line react/no-array-index-key\n    React.createElement(\"g\", {\n      key: item.key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"rect\", {\n      x: Math.min(item.position[0], item.position[2]) * width,\n      y: Math.min(item.position[1], item.position[3]) * height,\n      width: Math.abs(item.position[2] - item.position[0]) * width,\n      height: Math.abs(item.position[3] - item.position[1]) * height,\n      stroke: advertisementNameMap.get(item.name) || UNDEFINED_COLOR,\n      strokeDasharray: item.start == null || item.end == null ? '5, 5' : null,\n      fill:\n      // eslint-disable-next-line no-nested-ternary\n      currentIndex === item.key ? advertisementNameMap.get(item.name) ? `${advertisementNameMap.get(item.name)}40` : `${UNDEFINED_COLOR}40` : 'rgba(0,0,0,0)',\n      strokeWidth: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"rect\", {\n      x: Math.min(item.position[0], item.position[2]) * width,\n      y: Math.min(item.position[1], item.position[3]) * height - 10,\n      rx: \"5\",\n      ry: \"5\",\n      width: \"80\",\n      height: \"20\",\n      stroke: advertisementNameMap.get(item.name) || UNDEFINED_COLOR,\n      fill: advertisementNameMap.get(item.name) || UNDEFINED_COLOR,\n      strokeWidth: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"text\", {\n      x: Math.min(item.position[0], item.position[2]) * width + 5,\n      y: Math.min(item.position[1], item.position[3]) * height + 5,\n      fill: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 21\n      }\n    }, `${item.name || '未标识'}[${item.key}]`)) : null)), /*#__PURE__*/React.createElement(\"video\", {\n      src: this.props.video,\n      ref: r => {\n        this.video = r;\n      },\n      controlsList: \"nodownload\"\n      // controls={currentMode === 'edit'}\n      ,\n      tabIndex: -1,\n      crossOrigin: \"Anonymous\",\n      onLoadedData: e => this.setState({\n        videoWidth: this.video.getBoundingClientRect().width,\n        videoHeight: this.video.getBoundingClientRect().height\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"track\", {\n      default: true,\n      kind: \"captions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"annotation-video-controll-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"text\",\n      onClick: () => {\n        if (this.video && this.video.paused) this.video.play();else if (this.video && this.video.played) this.video.pause();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 13\n      }\n    }, this.video && this.video.paused ? /*#__PURE__*/React.createElement(CaretRightOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 51\n      }\n    }) : /*#__PURE__*/React.createElement(PauseOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 76\n      }\n    })), /*#__PURE__*/React.createElement(Slider, {\n      style: {\n        flex: '1'\n      },\n      max: this.video ? this.video.duration : 0,\n      tipFormatter: v => `${formatHour(v) === '00' ? '' : `${formatHour(v)}:`}${formatMinute(v)}:${formatSecond(v)}`,\n      getTooltipPopupContainer: () => document.getElementById('root'),\n      step: 0.01,\n      value: this.video ? this.video.currentTime : 0,\n      onChange: v => {\n        if (this.video) this.video.currentTime = v;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Popover, {\n      content: /*#__PURE__*/React.createElement(Slider, {\n        vertical: true,\n        style: {\n          height: '50px'\n        },\n        value: this.video ? this.video.volume * 100 : 0,\n        onChange: v => {\n          if (this.video) this.video.volume = v / 100;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 17\n        }\n      }),\n      trigger: \"click\",\n      getPopupContainer: () => document.getElementById('root'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(AudioOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 17\n      }\n    }))))));\n  }\n}\nexport default AnnotationCanvas;","map":{"version":3,"names":["React","Slider","Button","Popover","notification","CaretRightOutlined","AudioOutlined","PauseOutlined","formatSecond","formatMinute","simpleClone","formatHour","getResizeAction","clamp","sortPosition","FPS","UNDEFINED_COLOR","MIN_SEGMENT_LENGTH","isAnnotationReadonly","config","top","getContainer","document","getElementById","getDeltaTime","rate","DEVIATION","AnnotationCanvas","Component","constructor","currentFrame","state","startX","startY","endX","endY","canvasWidth","canvasHeight","videoWidth","videoHeight","downX","downY","width","height","resizeAction","rectOn","snapshot","active","generateSnapshot","bind","componentDidMount","svg","addEventListener","forceUpdate","window","e","handleMouseMove","handleMouseUp","video","componentWillUnmount","removeEventListener","getRectMouseOn","x","y","deviation","results","currentTime","props","rect","rectNearby","some","result","index","position","start","end","length","xS","yS","xE","yE","key","distance","map","p","i","Math","abs","on","nearyby","handleMouseDown","clientX","clientY","getBoundingClientRect","currentMode","setCurrentIndex","setState","getResult","find","r","_this$getResult","currentIndex","handleResultsChange","toolMode","left","body","style","cursor","first","second","resultsCopy","displacement","forEach","action","moveX","moveY","currentItem","focusItemInRightSide","item","imageUrl","generateImageUrl","timestamp","generateSnapshotWithTimestamp","needUpdate","endsWith","w","h","ctx","getContext","clearRect","drawImage","dataUrl","toDataURL","filename","jobId","taskId","recordId","saveContent","warn","message","render","_this$getResult2","currentPlayBackRate","advertisementNameMap","container","createElement","className","ref","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","display","onMouseDown","version","min","stroke","get","name","fill","strokeDasharray","strokeWidth","rx","ry","src","controlsList","tabIndex","crossOrigin","onLoadedData","default","kind","type","onClick","paused","play","played","pause","flex","max","duration","tipFormatter","v","getTooltipPopupContainer","step","value","onChange","content","vertical","volume","trigger","getPopupContainer"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/advertisement-annotation/AnnotationCanvas.jsx"],"sourcesContent":["import React from 'react';\nimport {Slider, Button, Popover, notification} from 'antd';\nimport { CaretRightOutlined, AudioOutlined, PauseOutlined } from '@ant-design/icons';\nimport { formatSecond, formatMinute, simpleClone, formatHour, getResizeAction, clamp, sortPosition } from './util';\nimport { FPS, UNDEFINED_COLOR, MIN_SEGMENT_LENGTH } from './AnnotationForm';\nimport { isAnnotationReadonly } from '../../utils/tool-mode';\n\nnotification.config({ top: 60, getContainer: () => document.getElementById('root') });\n\nexport const getDeltaTime = (rate) => (1 / FPS) * rate;\nconst DEVIATION = 0.014;\n\nclass AnnotationCanvas extends React.Component {\n  constructor() {\n    super();\n    this.currentFrame = null;\n    this.state = {\n      startX: null,\n      startY: null,\n      endX: null,\n      endY: null,\n      canvasWidth: 800,\n      canvasHeight: 450,\n      videoWidth: 800,\n      videoHeight: 450,\n    };\n    this.downX = null;\n    this.downY = null;\n    this.width = null;\n    this.height = null;\n    this.resizeAction = null;\n    this.rectOn = null;\n    this.snapshot = null;\n    this.active = false;\n    this.generateSnapshot = this.generateSnapshot.bind(this);\n  }\n\n  componentDidMount() {\n    this.svg.addEventListener('resize', () => {\n      this.forceUpdate();\n    });\n    window.addEventListener('mousemove', (e) => {\n      this.handleMouseMove(e);\n    });\n    window.addEventListener('mouseup', (e) => {\n      if (this.active) this.handleMouseUp(e);\n    });\n    this.video.addEventListener('seeked', this.generateSnapshot);\n  }\n\n  componentWillUnmount() {\n    this.video.removeEventListener('seeked', this.generateSnapshot);\n  }\n\n  getRectMouseOn(x, y, deviation) {\n    const { results, currentTime } = this.props;\n    let rect = null;\n    let rectNearby = null;\n    results.some((result, index) => {\n      const { position, start, end } = result;\n      // only select rect in a range of time\n      if ((start != null && end != null) && (currentTime < start || currentTime > end)) return false;\n      // only compare rect is not empty\n      if (!position || !position.length) return false;\n      let [xS, yS, xE, yE] = position;\n      // swap position to ensure xS and yS is the smallest number\n      if (xS > xE) [xE, xS] = [xS, xE];\n      if (yS > yE) [yE, yS] = [yS, yE];\n      if (x >= xS && x <= xE && y >= yS && y <= yE) {\n        rect = result.key;\n        return true;\n      }\n      if (x >= xS - deviation && x <= xE + deviation && y >= yS - deviation && y <= yE + deviation) {\n        const distance = position.map((p, i) => {\n          if (i % 2 === 0) return Math.abs(p - x);\n          return Math.abs(p - y);\n        });\n        rectNearby = { key: result.key, distance };\n      }\n      return false;\n    });\n    return { on: rect, nearyby: rectNearby };\n  }\n\n  handleMouseDown(e) {\n    const { clientX, clientY } = e;\n    const { x, y, width, height } = this.video.getBoundingClientRect();\n    // move rect or resize\n    if (this.props.currentMode === 'edit' && this.rectOn != null) {\n      this.downX = (clientX - x) / width;\n      this.downY = (clientY - y) / height;\n      this.props.setCurrentIndex(this.rectOn);\n    } else { // draw rect\n      const startX = (clientX - x) / width;\n      const startY = (clientY - y) / height;\n      this.setState({ startX, startY });\n    }\n    this.active = true;\n  }\n\n  getResult(results, index) {\n    return results.find(r => r.key  === index);\n  }\n\n  // used to move or resize selected area\n  handleMouseMove(e) {\n    const { currentMode, currentIndex, results, handleResultsChange, toolMode } = this.props;\n    const { clientX, clientY } = e;\n    const { resizeAction } = this;\n\n    if (isAnnotationReadonly(toolMode)) return;\n    const { x, y, width, height } = this.video.getBoundingClientRect();\n    // if there is no click recorded and is not in paint mode, monitor the mouse position to change cursor style\n    if (currentMode === 'edit' && this.downX == null && this.downY == null) {\n      const left = (clientX - x) / width;\n      const top = (clientY - y) / height;\n      const { on, nearyby } = this.getRectMouseOn(left, top, DEVIATION);\n      if (on != null) { // if mouse in rect use move mode\n        document.body.style.cursor = 'move';\n        this.rectOn = on;\n        this.resizeAction = null;\n      } else if (nearyby) { // if mouse is somewhere nearby rect's boundry use resize mode\n        const { key, distance } = nearyby;\n        this.resizeAction = getResizeAction(distance, DEVIATION);\n        if (this.resizeAction.length === 1) {\n          if (this.resizeAction[0] === 0 || this.resizeAction[0] === 2) {\n            document.body.style.cursor = 'e-resize';\n          } else {\n            document.body.style.cursor = 'n-resize';\n          }\n        } else {\n          const [first, second] = this.resizeAction;\n          if ((first + second === 1) || (first + second === 5)) { // left-top or right-bottom\n            document.body.style.cursor = 'nwse-resize';\n          } else {\n            document.body.style.cursor = 'nesw-resize';\n          }\n        }\n        this.rectOn = key;\n      } else {\n        document.body.style.cursor = 'default';\n      }\n    } else if (currentMode === 'edit' && currentIndex != null && this.getResult(results, currentIndex)?.position.length && this.downX && this.downY) {\n      // if in edit mode, and there is click recorded, then use move/resize mode\n      const resultsCopy = simpleClone(results);\n      const { position } = this.getResult(resultsCopy, currentIndex);\n      const displacement = [(clientX - x) / width - this.downX, (clientY - y) / height - this.downY];\n      if (resizeAction) { // if there is resize action then use resize mode\n        resizeAction.forEach((action) => {\n          position[action] = clamp(position[action] + displacement[action % 2], 0, 1);\n        });\n      } else { // if there is no action then use move mode\n        const [moveX, moveY] = displacement;\n\n        // check whether selected area out of boundary in x axis, if not, move it in x axis\n        if ((moveX > 0 && position[2] + moveX <= 1) || (moveX < 0 && position[0] + moveX >= 0)) {\n          position[0] += moveX;\n          position[2] += moveX;\n        }\n\n        // check whether selected area out of boundary in y axis, if not, move it in y axis\n        if ((moveY > 0 && position[3] + moveY <= 1) || (moveY < 0 && position[1] + moveY >= 0)) { // if move up\n          position[1] += moveY;\n          position[3] += moveY;\n        }\n      }\n      this.downX = (clientX - x) / width;\n      this.downY = (clientY - y) / height;\n      handleResultsChange(resultsCopy);\n    } else if (this.props.currentMode === 'paint') {\n      const endX = clamp((clientX - x) / width, 0, 1);\n      const endY = clamp((clientY - y) / height, 0, 1);\n      this.setState({ endX, endY });\n    }\n  }\n\n  async handleMouseUp(e) {\n    this.active = false;\n    const { currentTime, results, currentIndex, currentMode, toolMode } = this.props;\n    const { startX, startY, endX, endY } = this.state;\n    this.setState({\n      startX: null,\n      startY: null,\n      endX: null,\n      endY: null,\n    });\n    if (isAnnotationReadonly(toolMode)) return;\n\n    const resultsCopy = simpleClone(results);\n    const currentItem = this.getResult(resultsCopy, currentIndex);\n    if (currentItem) {\n      // resultsCopy[currentIndex].snapshot = this.genSnapshot(currentIndex, results);\n      this.props.focusItemInRightSide(currentItem.key);\n      sortPosition(currentItem.position);\n    }\n\n    if (currentMode === 'edit' || currentIndex == null) {\n      this.downX = null;\n      this.downY = null;\n      this.rectOn = null;\n      this.props.handleResultsChange(resultsCopy);\n      return;\n    }\n    currentItem.position = [startX, startY, endX, endY];\n    sortPosition(currentItem.position);\n    const item = currentItem;\n    if (item.start == null) {\n      item.start = currentTime;\n      if (item.end != null && item.end < currentTime + MIN_SEGMENT_LENGTH) item.end = null;\n      const imageUrl = await this.generateImageUrl(currentTime);\n      item.snapshot = imageUrl;\n    }\n    this.props.handleResultsChange(resultsCopy);\n  }\n\n  async generateSnapshot() {\n    const timestamp = this.video.currentTime;\n    this.generateSnapshotWithTimestamp(timestamp);\n  }\n\n  // for seeked event, we should check the start time for all items and update the results\n  async generateSnapshotWithTimestamp(timestamp) {\n    const resultsCopy = simpleClone(this.props.results);\n    let imageUrl;\n    let needUpdate = false;\n    for (let i = 0; i < resultsCopy.length; i = i + 1) {\n      const r = resultsCopy[i];\n      if (r.start === timestamp) {\n        if (!r.snapshot || !r.snapshot.endsWith(`_${timestamp}.jpg`)) {\n          if (!imageUrl) {\n            imageUrl = await this.generateImageUrl(timestamp);\n          }\n          r.snapshot = imageUrl;\n          r.start = timestamp;\n          needUpdate = true;\n        }\n      }\n    };\n    if (needUpdate) {\n      this.props.handleResultsChange(resultsCopy);\n    }\n  }\n\n  async generateImageUrl(timestamp) {\n    let imageUrl;\n    const w = this.video.videoWidth;\n    const h = this.video.videoHeight;\n    this.snapshot.width = w;\n    this.snapshot.height = h;\n    const ctx = this.snapshot.getContext('2d');\n    ctx.clearRect(0, 0, w, h);\n    ctx.drawImage(this.video, 0, 0, w, h);\n    const dataUrl = this.snapshot.toDataURL('image/jpeg', 0.3);\n    const filename = `video_ads/${this.props.jobId}.${this.props.taskId}.${this.props.recordId}.${this.props.toolMode}_${timestamp}.jpg`;\n    try {\n      imageUrl = await this.props.saveContent(dataUrl, 'image/jpeg', filename, this.props.jobId);\n    } catch (e) {\n      notification.warn({ message: '生成截图失败，请重试' });\n    }\n    return imageUrl;\n  }\n\n  render() {\n    const { startX, startY, endX, endY, canvasHeight, canvasWidth } = this.state;\n    const { width, height } = this;\n    const {\n      currentIndex,\n      results,\n      currentTime,\n      currentPlayBackRate,\n      advertisementNameMap\n    } = this.props;\n\n    if (this.container) {\n      this.width = this.svg.getBoundingClientRect().width;\n      this.height = this.svg.getBoundingClientRect().height;\n    }\n\n    return (\n      <div\n        className=\"annotation-canvas-container\"\n        ref={(r) => { this.container = r; }}\n        style={{ width: `${canvasWidth}px`, height: `${canvasHeight}px` }}\n      >\n        <canvas ref={(r) => { this.snapshot = r; }} style={{ display: 'none' }} />\n        <div className=\"annotation-canvas-wrapper\">\n          <svg\n            className=\"annotation-canvas\"\n            ref={(r) => { this.svg = r; }}\n            onMouseDown={(e) => this.handleMouseDown(e)}\n            width={this.state.videoWidth}\n            height={this.state.videoHeight}\n            // onMouseMove={(e) => this.handleMouseMove(e)}\n            // onMouseUp={(e) => this.handleMouseUp(e)}\n            version=\"1.1\"\n          >\n            {\n              startX == null || startY == null || endX == null || endY == null || currentIndex == null\n                ? null\n                : (\n                  <rect\n                    x={Math.min(startX, endX) * width}\n                    y={Math.min(startY, endY) * height}\n                    width={Math.abs(endX - startX) * width}\n                    height={Math.abs(endY - startY) * height}\n                    stroke={advertisementNameMap.get(this.getResult(results, currentIndex)?.name) || UNDEFINED_COLOR}\n                    fill=\"rgba(0,0,0,0)\"\n                    strokeDasharray=\"5, 5\"\n                    strokeWidth={1}\n                  />\n                )\n            }\n            {\n              results.map((item) => (\n                ((item.start == null || item.end == null) || (item.start <= currentTime + getDeltaTime(currentPlayBackRate) && item.end >= currentTime - getDeltaTime(currentPlayBackRate))) &&\n                item.position != null && item.position[0] != null && item.position[1] != null &&\n                item.position[2] != null && item.position[3] != null ? (\n                  // eslint-disable-next-line react/no-array-index-key\n                  <g key={item.key}>\n                    <rect\n                      x={Math.min(item.position[0], item.position[2]) * width}\n                      y={Math.min(item.position[1], item.position[3]) * height}\n                      width={Math.abs(item.position[2] - item.position[0]) * width}\n                      height={Math.abs(item.position[3] - item.position[1]) * height}\n                      stroke={advertisementNameMap.get(item.name) || UNDEFINED_COLOR}\n                      strokeDasharray={(item.start == null || item.end == null) ? '5, 5' : null}\n                      fill={\n                        // eslint-disable-next-line no-nested-ternary\n                        currentIndex === item.key\n                          ? (advertisementNameMap.get(item.name)\n                            ? `${advertisementNameMap.get(item.name)}40`\n                            : `${UNDEFINED_COLOR}40`) : 'rgba(0,0,0,0)'\n                      }\n                      strokeWidth={1}\n                    />\n                    <rect\n                      x={Math.min(item.position[0], item.position[2]) * width}\n                      y={Math.min(item.position[1], item.position[3]) * height - 10}\n                      rx=\"5\"\n                      ry=\"5\"\n                      width=\"80\"\n                      height=\"20\"\n                      stroke={advertisementNameMap.get(item.name) || UNDEFINED_COLOR}\n                      fill={advertisementNameMap.get(item.name) || UNDEFINED_COLOR}\n                      strokeWidth={1}\n                    />\n                    <text\n                      x={Math.min(item.position[0], item.position[2]) * width + 5}\n                      y={Math.min(item.position[1], item.position[3]) * height + 5}\n                      fill=\"white\"\n                    >\n                      {`${item.name || '未标识'}[${item.key}]`}\n                    </text>\n                  </g>\n                  ) : null\n              ))\n            }\n          </svg>\n          <video\n            src={this.props.video}\n            ref={(r) => { this.video = r; }}\n            controlsList=\"nodownload\"\n            // controls={currentMode === 'edit'}\n            tabIndex={-1}\n            crossOrigin=\"Anonymous\"\n            onLoadedData={(e) => this.setState({videoWidth: this.video.getBoundingClientRect().width, videoHeight:this.video.getBoundingClientRect().height})}\n          >\n            <track default kind=\"captions\" />\n          </video>\n          <div className=\"annotation-video-controll-bar\">\n            <Button\n              type=\"text\"\n              onClick={() => {\n                if (this.video && this.video.paused) this.video.play();\n                else if (this.video && this.video.played) this.video.pause();\n              }}\n            >\n              {\n                this.video && this.video.paused ? <CaretRightOutlined /> : <PauseOutlined />\n              }\n            </Button>\n            <Slider\n              style={{ flex: '1' }}\n              max={this.video ? this.video.duration : 0}\n              tipFormatter={(v) => `${formatHour(v) === '00' ? '' : `${formatHour(v)}:`}${formatMinute(v)}:${formatSecond(v)}`}\n              getTooltipPopupContainer={() => document.getElementById('root')}\n              step={0.01}\n              value={this.video ? this.video.currentTime : 0}\n              onChange={(v) => {\n                if (this.video) this.video.currentTime = v;\n              }}\n            />\n            <Popover\n              content={(\n                <Slider\n                  vertical\n                  style={{ height: '50px' }}\n                  value={this.video ? this.video.volume * 100 : 0}\n                  onChange={(v) => {\n                    if (this.video) this.video.volume = v / 100;\n                  }}\n                />\n              )}\n              trigger=\"click\"\n              getPopupContainer={() => document.getElementById('root')}\n            >\n              <Button type=\"text\">\n                <AudioOutlined />\n              </Button>\n            </Popover>\n          </div>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default AnnotationCanvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}