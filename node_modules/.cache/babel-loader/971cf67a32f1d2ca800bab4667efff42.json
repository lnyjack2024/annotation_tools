{"ast":null,"code":"import { Reaction, _allowStateChanges, _allowStateReadsStart, _allowStateReadsEnd, $mobx, createAtom, untracked, isObservableMap, isObservableObject, isObservableArray, observable } from 'mobx';\nimport React__default, { PureComponent, Component, forwardRef, memo, createElement } from 'react';\nimport { isUsingStaticRendering, Observer, observer as observer$1 } from 'mobx-react-lite';\nexport { Observer, enableStaticRendering, isUsingStaticRendering, observerBatching, useAsObservableSource, useLocalObservable, useLocalStore, useObserver, useStaticRendering } from 'mobx-react-lite';\nvar symbolId = 0;\nfunction createSymbol(name) {\n  if (typeof Symbol === \"function\") {\n    return Symbol(name);\n  }\n  var symbol = \"__$mobx-react \" + name + \" (\" + symbolId + \")\";\n  symbolId++;\n  return symbol;\n}\nvar createdSymbols = {};\nfunction newSymbol(name) {\n  if (!createdSymbols[name]) {\n    createdSymbols[name] = createSymbol(name);\n  }\n  return createdSymbols[name];\n}\nfunction shallowEqual(objA, objB) {\n  //From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n  if (is(objA, objB)) return true;\n  if (typeof objA !== \"object\" || objA === null || typeof objB !== \"object\" || objB === null) {\n    return false;\n  }\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n  if (keysA.length !== keysB.length) return false;\n  for (var i = 0; i < keysA.length; i++) {\n    if (!Object.hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction is(x, y) {\n  // From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n  if (x === y) {\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n} // based on https://github.com/mridgway/hoist-non-react-statics/blob/master/src/index.js\n\nvar hoistBlackList = {\n  $$typeof: 1,\n  render: 1,\n  compare: 1,\n  type: 1,\n  childContextTypes: 1,\n  contextType: 1,\n  contextTypes: 1,\n  defaultProps: 1,\n  getDefaultProps: 1,\n  getDerivedStateFromError: 1,\n  getDerivedStateFromProps: 1,\n  mixins: 1,\n  displayName: 1,\n  propTypes: 1\n};\nfunction copyStaticProperties(base, target) {\n  var protoProps = Object.getOwnPropertyNames(Object.getPrototypeOf(base));\n  Object.getOwnPropertyNames(base).forEach(function (key) {\n    if (!hoistBlackList[key] && protoProps.indexOf(key) === -1) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(base, key));\n    }\n  });\n}\n/**\r\n * Helper to set `prop` to `this` as non-enumerable (hidden prop)\r\n * @param target\r\n * @param prop\r\n * @param value\r\n */\n\nfunction setHiddenProp(target, prop, value) {\n  if (!Object.hasOwnProperty.call(target, prop)) {\n    Object.defineProperty(target, prop, {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: value\n    });\n  } else {\n    target[prop] = value;\n  }\n}\n/**\r\n * Utilities for patching componentWillUnmount, to make sure @disposeOnUnmount works correctly icm with user defined hooks\r\n * and the handler provided by mobx-react\r\n */\n\nvar mobxMixins = /*#__PURE__*/newSymbol(\"patchMixins\");\nvar mobxPatchedDefinition = /*#__PURE__*/newSymbol(\"patchedDefinition\");\nfunction getMixins(target, methodName) {\n  var mixins = target[mobxMixins] = target[mobxMixins] || {};\n  var methodMixins = mixins[methodName] = mixins[methodName] || {};\n  methodMixins.locks = methodMixins.locks || 0;\n  methodMixins.methods = methodMixins.methods || [];\n  return methodMixins;\n}\nfunction wrapper(realMethod, mixins) {\n  var _this = this;\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  // locks are used to ensure that mixins are invoked only once per invocation, even on recursive calls\n  mixins.locks++;\n  try {\n    var retVal;\n    if (realMethod !== undefined && realMethod !== null) {\n      retVal = realMethod.apply(this, args);\n    }\n    return retVal;\n  } finally {\n    mixins.locks--;\n    if (mixins.locks === 0) {\n      mixins.methods.forEach(function (mx) {\n        mx.apply(_this, args);\n      });\n    }\n  }\n}\nfunction wrapFunction(realMethod, mixins) {\n  var fn = function fn() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    wrapper.call.apply(wrapper, [this, realMethod, mixins].concat(args));\n  };\n  return fn;\n}\nfunction patch(target, methodName, mixinMethod) {\n  var mixins = getMixins(target, methodName);\n  if (mixins.methods.indexOf(mixinMethod) < 0) {\n    mixins.methods.push(mixinMethod);\n  }\n  var oldDefinition = Object.getOwnPropertyDescriptor(target, methodName);\n  if (oldDefinition && oldDefinition[mobxPatchedDefinition]) {\n    // already patched definition, do not repatch\n    return;\n  }\n  var originalMethod = target[methodName];\n  var newDefinition = createDefinition(target, methodName, oldDefinition ? oldDefinition.enumerable : undefined, mixins, originalMethod);\n  Object.defineProperty(target, methodName, newDefinition);\n}\nfunction createDefinition(target, methodName, enumerable, mixins, originalMethod) {\n  var _ref;\n  var wrappedFunc = wrapFunction(originalMethod, mixins);\n  return _ref = {}, _ref[mobxPatchedDefinition] = true, _ref.get = function get() {\n    return wrappedFunc;\n  }, _ref.set = function set(value) {\n    if (this === target) {\n      wrappedFunc = wrapFunction(value, mixins);\n    } else {\n      // when it is an instance of the prototype/a child prototype patch that particular case again separately\n      // since we need to store separate values depending on wether it is the actual instance, the prototype, etc\n      // e.g. the method for super might not be the same as the method for the prototype which might be not the same\n      // as the method for the instance\n      var newDefinition = createDefinition(this, methodName, enumerable, mixins, value);\n      Object.defineProperty(this, methodName, newDefinition);\n    }\n  }, _ref.configurable = true, _ref.enumerable = enumerable, _ref;\n}\nvar mobxAdminProperty = $mobx || \"$mobx\";\nvar mobxObserverProperty = /*#__PURE__*/newSymbol(\"isMobXReactObserver\");\nvar mobxIsUnmounted = /*#__PURE__*/newSymbol(\"isUnmounted\");\nvar skipRenderKey = /*#__PURE__*/newSymbol(\"skipRender\");\nvar isForcingUpdateKey = /*#__PURE__*/newSymbol(\"isForcingUpdate\");\nfunction makeClassComponentObserver(componentClass) {\n  var target = componentClass.prototype;\n  if (componentClass[mobxObserverProperty]) {\n    var displayName = getDisplayName(target);\n    console.warn(\"The provided component class (\" + displayName + \") \\n                has already been declared as an observer component.\");\n  } else {\n    componentClass[mobxObserverProperty] = true;\n  }\n  if (target.componentWillReact) throw new Error(\"The componentWillReact life-cycle event is no longer supported\");\n  if (componentClass[\"__proto__\"] !== PureComponent) {\n    if (!target.shouldComponentUpdate) target.shouldComponentUpdate = observerSCU;else if (target.shouldComponentUpdate !== observerSCU)\n      // n.b. unequal check, instead of existence check, as @observer might be on superclass as well\n      throw new Error(\"It is not allowed to use shouldComponentUpdate in observer based components.\");\n  } // this.props and this.state are made observable, just to make sure @computed fields that\n  // are defined inside the component, and which rely on state or props, re-compute if state or props change\n  // (otherwise the computed wouldn't update and become stale on props change, since props are not observable)\n  // However, this solution is not without it's own problems: https://github.com/mobxjs/mobx-react/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3Aobservable-props-or-not+\n\n  makeObservableProp(target, \"props\");\n  makeObservableProp(target, \"state\");\n  var baseRender = target.render;\n  target.render = function () {\n    return makeComponentReactive.call(this, baseRender);\n  };\n  patch(target, \"componentWillUnmount\", function () {\n    var _this$render$mobxAdmi;\n    if (isUsingStaticRendering() === true) return;\n    (_this$render$mobxAdmi = this.render[mobxAdminProperty]) == null ? void 0 : _this$render$mobxAdmi.dispose();\n    this[mobxIsUnmounted] = true;\n    if (!this.render[mobxAdminProperty]) {\n      // Render may have been hot-swapped and/or overriden by a subclass.\n      var _displayName = getDisplayName(this);\n      console.warn(\"The reactive render of an observer class component (\" + _displayName + \") \\n                was overriden after MobX attached. This may result in a memory leak if the \\n                overriden reactive render was not properly disposed.\");\n    }\n  });\n  return componentClass;\n} // Generates a friendly name for debugging\n\nfunction getDisplayName(comp) {\n  return comp.displayName || comp.name || comp.constructor && (comp.constructor.displayName || comp.constructor.name) || \"<component>\";\n}\nfunction makeComponentReactive(render) {\n  var _this = this;\n  if (isUsingStaticRendering() === true) return render.call(this);\n  /**\r\n   * If props are shallowly modified, react will render anyway,\r\n   * so atom.reportChanged() should not result in yet another re-render\r\n   */\n\n  setHiddenProp(this, skipRenderKey, false);\n  /**\r\n   * forceUpdate will re-assign this.props. We don't want that to cause a loop,\r\n   * so detect these changes\r\n   */\n\n  setHiddenProp(this, isForcingUpdateKey, false);\n  var initialName = getDisplayName(this);\n  var baseRender = render.bind(this);\n  var isRenderingPending = false;\n  var reaction = new Reaction(initialName + \".render()\", function () {\n    if (!isRenderingPending) {\n      // N.B. Getting here *before mounting* means that a component constructor has side effects (see the relevant test in misc.js)\n      // This unidiomatic React usage but React will correctly warn about this so we continue as usual\n      // See #85 / Pull #44\n      isRenderingPending = true;\n      if (_this[mobxIsUnmounted] !== true) {\n        var hasError = true;\n        try {\n          setHiddenProp(_this, isForcingUpdateKey, true);\n          if (!_this[skipRenderKey]) Component.prototype.forceUpdate.call(_this);\n          hasError = false;\n        } finally {\n          setHiddenProp(_this, isForcingUpdateKey, false);\n          if (hasError) reaction.dispose();\n        }\n      }\n    }\n  });\n  reaction[\"reactComponent\"] = this;\n  reactiveRender[mobxAdminProperty] = reaction;\n  this.render = reactiveRender;\n  function reactiveRender() {\n    isRenderingPending = false;\n    var exception = undefined;\n    var rendering = undefined;\n    reaction.track(function () {\n      try {\n        rendering = _allowStateChanges(false, baseRender);\n      } catch (e) {\n        exception = e;\n      }\n    });\n    if (exception) {\n      throw exception;\n    }\n    return rendering;\n  }\n  return reactiveRender.call(this);\n}\nfunction observerSCU(nextProps, nextState) {\n  if (isUsingStaticRendering()) {\n    console.warn(\"[mobx-react] It seems that a re-rendering of a React component is triggered while in static (server-side) mode. Please make sure components are rendered only once server-side.\");\n  } // update on any state changes (as is the default)\n\n  if (this.state !== nextState) {\n    return true;\n  } // update if props are shallowly not equal, inspired by PureRenderMixin\n  // we could return just 'false' here, and avoid the `skipRender` checks etc\n  // however, it is nicer if lifecycle events are triggered like usually,\n  // so we return true here if props are shallowly modified.\n\n  return !shallowEqual(this.props, nextProps);\n}\nfunction makeObservableProp(target, propName) {\n  var valueHolderKey = newSymbol(\"reactProp_\" + propName + \"_valueHolder\");\n  var atomHolderKey = newSymbol(\"reactProp_\" + propName + \"_atomHolder\");\n  function getAtom() {\n    if (!this[atomHolderKey]) {\n      setHiddenProp(this, atomHolderKey, createAtom(\"reactive \" + propName));\n    }\n    return this[atomHolderKey];\n  }\n  Object.defineProperty(target, propName, {\n    configurable: true,\n    enumerable: true,\n    get: function get() {\n      var prevReadState = false;\n      if (_allowStateReadsStart && _allowStateReadsEnd) {\n        prevReadState = _allowStateReadsStart(true);\n      }\n      getAtom.call(this).reportObserved();\n      if (_allowStateReadsStart && _allowStateReadsEnd) {\n        _allowStateReadsEnd(prevReadState);\n      }\n      return this[valueHolderKey];\n    },\n    set: function set(v) {\n      if (!this[isForcingUpdateKey] && !shallowEqual(this[valueHolderKey], v)) {\n        setHiddenProp(this, valueHolderKey, v);\n        setHiddenProp(this, skipRenderKey, true);\n        getAtom.call(this).reportChanged();\n        setHiddenProp(this, skipRenderKey, false);\n      } else {\n        setHiddenProp(this, valueHolderKey, v);\n      }\n    }\n  });\n}\nvar hasSymbol = typeof Symbol === \"function\" && Symbol[\"for\"]; // Using react-is had some issues (and operates on elements, not on types), see #608 / #609\n\nvar ReactForwardRefSymbol = hasSymbol ? /*#__PURE__*/Symbol[\"for\"](\"react.forward_ref\") : typeof forwardRef === \"function\" && /*#__PURE__*/forwardRef(function (props) {\n  return null;\n})[\"$$typeof\"];\nvar ReactMemoSymbol = hasSymbol ? /*#__PURE__*/Symbol[\"for\"](\"react.memo\") : typeof memo === \"function\" && /*#__PURE__*/memo(function (props) {\n  return null;\n})[\"$$typeof\"];\n/**\r\n * Observer function / decorator\r\n */\n\nfunction observer(component) {\n  if (component[\"isMobxInjector\"] === true) {\n    console.warn(\"Mobx observer: You are trying to use 'observer' on a component that already has 'inject'. Please apply 'observer' before applying 'inject'\");\n  }\n  if (ReactMemoSymbol && component[\"$$typeof\"] === ReactMemoSymbol) {\n    throw new Error(\"Mobx observer: You are trying to use 'observer' on a function component wrapped in either another observer or 'React.memo'. The observer already applies 'React.memo' for you.\");\n  } // Unwrap forward refs into `<Observer>` component\n  // we need to unwrap the render, because it is the inner render that needs to be tracked,\n  // not the ForwardRef HoC\n\n  if (ReactForwardRefSymbol && component[\"$$typeof\"] === ReactForwardRefSymbol) {\n    var baseRender = component[\"render\"];\n    if (typeof baseRender !== \"function\") throw new Error(\"render property of ForwardRef was not a function\");\n    return forwardRef(function ObserverForwardRef() {\n      var args = arguments;\n      return createElement(Observer, null, function () {\n        return baseRender.apply(undefined, args);\n      });\n    });\n  } // Function component\n\n  if (typeof component === \"function\" && (!component.prototype || !component.prototype.render) && !component[\"isReactClass\"] && !Object.prototype.isPrototypeOf.call(Component, component)) {\n    return observer$1(component);\n  }\n  return makeClassComponentObserver(component);\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nvar MobXProviderContext = /*#__PURE__*/React__default.createContext({});\nfunction Provider(props) {\n  var children = props.children,\n    stores = _objectWithoutPropertiesLoose(props, [\"children\"]);\n  var parentValue = React__default.useContext(MobXProviderContext);\n  var mutableProviderRef = React__default.useRef(_extends({}, parentValue, stores));\n  var value = mutableProviderRef.current;\n  if (process.env.NODE_ENV !== \"production\") {\n    var newValue = _extends({}, value, stores); // spread in previous state for the context based stores\n\n    if (!shallowEqual(value, newValue)) {\n      throw new Error(\"MobX Provider: The set of provided stores has changed. See: https://github.com/mobxjs/mobx-react#the-set-of-provided-stores-has-changed-error.\");\n    }\n  }\n  return React__default.createElement(MobXProviderContext.Provider, {\n    value: value\n  }, children);\n}\nProvider.displayName = \"MobXProvider\";\n\n/**\r\n * Store Injection\r\n */\n\nfunction createStoreInjector(grabStoresFn, component, injectNames, makeReactive) {\n  // Support forward refs\n  var Injector = React__default.forwardRef(function (props, ref) {\n    var newProps = _extends({}, props);\n    var context = React__default.useContext(MobXProviderContext);\n    Object.assign(newProps, grabStoresFn(context || {}, newProps) || {});\n    if (ref) {\n      newProps.ref = ref;\n    }\n    return React__default.createElement(component, newProps);\n  });\n  if (makeReactive) Injector = observer(Injector);\n  Injector[\"isMobxInjector\"] = true; // assigned late to suppress observer warning\n  // Static fields from component should be visible on the generated Injector\n\n  copyStaticProperties(component, Injector);\n  Injector[\"wrappedComponent\"] = component;\n  Injector.displayName = getInjectName(component, injectNames);\n  return Injector;\n}\nfunction getInjectName(component, injectNames) {\n  var displayName;\n  var componentName = component.displayName || component.name || component.constructor && component.constructor.name || \"Component\";\n  if (injectNames) displayName = \"inject-with-\" + injectNames + \"(\" + componentName + \")\";else displayName = \"inject(\" + componentName + \")\";\n  return displayName;\n}\nfunction grabStoresByName(storeNames) {\n  return function (baseStores, nextProps) {\n    storeNames.forEach(function (storeName) {\n      if (storeName in nextProps // prefer props over stores\n      ) return;\n      if (!(storeName in baseStores)) throw new Error(\"MobX injector: Store '\" + storeName + \"' is not available! Make sure it is provided by some Provider\");\n      nextProps[storeName] = baseStores[storeName];\n    });\n    return nextProps;\n  };\n}\n/**\r\n * higher order component that injects stores to a child.\r\n * takes either a varargs list of strings, which are stores read from the context,\r\n * or a function that manually maps the available stores from the context to props:\r\n * storesToProps(mobxStores, props, context) => newProps\r\n */\n\nfunction inject() {\n  for (var _len = arguments.length, storeNames = new Array(_len), _key = 0; _key < _len; _key++) {\n    storeNames[_key] = arguments[_key];\n  }\n  if (typeof arguments[0] === \"function\") {\n    var grabStoresFn = arguments[0];\n    return function (componentClass) {\n      return createStoreInjector(grabStoresFn, componentClass, grabStoresFn.name, true);\n    };\n  } else {\n    return function (componentClass) {\n      return createStoreInjector(grabStoresByName(storeNames), componentClass, storeNames.join(\"-\"), false);\n    };\n  }\n}\nvar protoStoreKey = /*#__PURE__*/newSymbol(\"disposeOnUnmountProto\");\nvar instStoreKey = /*#__PURE__*/newSymbol(\"disposeOnUnmountInst\");\nfunction runDisposersOnWillUnmount() {\n  var _this = this;\n  [].concat(this[protoStoreKey] || [], this[instStoreKey] || []).forEach(function (propKeyOrFunction) {\n    var prop = typeof propKeyOrFunction === \"string\" ? _this[propKeyOrFunction] : propKeyOrFunction;\n    if (prop !== undefined && prop !== null) {\n      if (Array.isArray(prop)) prop.map(function (f) {\n        return f();\n      });else prop();\n    }\n  });\n}\nfunction disposeOnUnmount(target, propertyKeyOrFunction) {\n  if (Array.isArray(propertyKeyOrFunction)) {\n    return propertyKeyOrFunction.map(function (fn) {\n      return disposeOnUnmount(target, fn);\n    });\n  }\n  var c = Object.getPrototypeOf(target).constructor;\n  var c2 = Object.getPrototypeOf(target.constructor); // Special case for react-hot-loader\n\n  var c3 = Object.getPrototypeOf(Object.getPrototypeOf(target));\n  if (!(c === React__default.Component || c === React__default.PureComponent || c2 === React__default.Component || c2 === React__default.PureComponent || c3 === React__default.Component || c3 === React__default.PureComponent)) {\n    throw new Error(\"[mobx-react] disposeOnUnmount only supports direct subclasses of React.Component or React.PureComponent.\");\n  }\n  if (typeof propertyKeyOrFunction !== \"string\" && typeof propertyKeyOrFunction !== \"function\" && !Array.isArray(propertyKeyOrFunction)) {\n    throw new Error(\"[mobx-react] disposeOnUnmount only works if the parameter is either a property key or a function.\");\n  } // decorator's target is the prototype, so it doesn't have any instance properties like props\n\n  var isDecorator = typeof propertyKeyOrFunction === \"string\"; // add property key / function we want run (disposed) to the store\n\n  var componentWasAlreadyModified = !!target[protoStoreKey] || !!target[instStoreKey];\n  var store = isDecorator ?\n  // decorators are added to the prototype store\n  target[protoStoreKey] || (target[protoStoreKey] = []) :\n  // functions are added to the instance store\n  target[instStoreKey] || (target[instStoreKey] = []);\n  store.push(propertyKeyOrFunction); // tweak the component class componentWillUnmount if not done already\n\n  if (!componentWasAlreadyModified) {\n    patch(target, \"componentWillUnmount\", runDisposersOnWillUnmount);\n  } // return the disposer as is if invoked as a non decorator\n\n  if (typeof propertyKeyOrFunction !== \"string\") {\n    return propertyKeyOrFunction;\n  }\n}\nfunction createChainableTypeChecker(validator) {\n  function checkType(isRequired, props, propName, componentName, location, propFullName) {\n    for (var _len = arguments.length, rest = new Array(_len > 6 ? _len - 6 : 0), _key = 6; _key < _len; _key++) {\n      rest[_key - 6] = arguments[_key];\n    }\n    return untracked(function () {\n      componentName = componentName || \"<<anonymous>>\";\n      propFullName = propFullName || propName;\n      if (props[propName] == null) {\n        if (isRequired) {\n          var actual = props[propName] === null ? \"null\" : \"undefined\";\n          return new Error(\"The \" + location + \" `\" + propFullName + \"` is marked as required \" + \"in `\" + componentName + \"`, but its value is `\" + actual + \"`.\");\n        }\n        return null;\n      } else {\n        // @ts-ignore rest arg is necessary for some React internals - fails tests otherwise\n        return validator.apply(void 0, [props, propName, componentName, location, propFullName].concat(rest));\n      }\n    });\n  }\n  var chainedCheckType = checkType.bind(null, false); // Add isRequired to satisfy Requirable\n\n  chainedCheckType.isRequired = checkType.bind(null, true);\n  return chainedCheckType;\n} // Copied from React.PropTypes\n\nfunction isSymbol(propType, propValue) {\n  // Native Symbol.\n  if (propType === \"symbol\") {\n    return true;\n  } // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n\n  if (propValue[\"@@toStringTag\"] === \"Symbol\") {\n    return true;\n  } // Fallback for non-spec compliant Symbols which are polyfilled.\n\n  if (typeof Symbol === \"function\" && propValue instanceof Symbol) {\n    return true;\n  }\n  return false;\n} // Copied from React.PropTypes\n\nfunction getPropType(propValue) {\n  var propType = typeof propValue;\n  if (Array.isArray(propValue)) {\n    return \"array\";\n  }\n  if (propValue instanceof RegExp) {\n    // Old webkits (at least until Android 4.0) return 'function' rather than\n    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n    // passes PropTypes.object.\n    return \"object\";\n  }\n  if (isSymbol(propType, propValue)) {\n    return \"symbol\";\n  }\n  return propType;\n} // This handles more types than `getPropType`. Only used for error messages.\n// Copied from React.PropTypes\n\nfunction getPreciseType(propValue) {\n  var propType = getPropType(propValue);\n  if (propType === \"object\") {\n    if (propValue instanceof Date) {\n      return \"date\";\n    } else if (propValue instanceof RegExp) {\n      return \"regexp\";\n    }\n  }\n  return propType;\n}\nfunction createObservableTypeCheckerCreator(allowNativeType, mobxType) {\n  return createChainableTypeChecker(function (props, propName, componentName, location, propFullName) {\n    return untracked(function () {\n      if (allowNativeType) {\n        if (getPropType(props[propName]) === mobxType.toLowerCase()) return null;\n      }\n      var mobxChecker;\n      switch (mobxType) {\n        case \"Array\":\n          mobxChecker = isObservableArray;\n          break;\n        case \"Object\":\n          mobxChecker = isObservableObject;\n          break;\n        case \"Map\":\n          mobxChecker = isObservableMap;\n          break;\n        default:\n          throw new Error(\"Unexpected mobxType: \" + mobxType);\n      }\n      var propValue = props[propName];\n      if (!mobxChecker(propValue)) {\n        var preciseType = getPreciseType(propValue);\n        var nativeTypeExpectationMessage = allowNativeType ? \" or javascript `\" + mobxType.toLowerCase() + \"`\" : \"\";\n        return new Error(\"Invalid prop `\" + propFullName + \"` of type `\" + preciseType + \"` supplied to\" + \" `\" + componentName + \"`, expected `mobx.Observable\" + mobxType + \"`\" + nativeTypeExpectationMessage + \".\");\n      }\n      return null;\n    });\n  });\n}\nfunction createObservableArrayOfTypeChecker(allowNativeType, typeChecker) {\n  return createChainableTypeChecker(function (props, propName, componentName, location, propFullName) {\n    for (var _len2 = arguments.length, rest = new Array(_len2 > 5 ? _len2 - 5 : 0), _key2 = 5; _key2 < _len2; _key2++) {\n      rest[_key2 - 5] = arguments[_key2];\n    }\n    return untracked(function () {\n      if (typeof typeChecker !== \"function\") {\n        return new Error(\"Property `\" + propFullName + \"` of component `\" + componentName + \"` has \" + \"invalid PropType notation.\");\n      } else {\n        var error = createObservableTypeCheckerCreator(allowNativeType, \"Array\")(props, propName, componentName, location, propFullName);\n        if (error instanceof Error) return error;\n        var propValue = props[propName];\n        for (var i = 0; i < propValue.length; i++) {\n          error = typeChecker.apply(void 0, [propValue, i, componentName, location, propFullName + \"[\" + i + \"]\"].concat(rest));\n          if (error instanceof Error) return error;\n        }\n        return null;\n      }\n    });\n  });\n}\nvar observableArray = /*#__PURE__*/createObservableTypeCheckerCreator(false, \"Array\");\nvar observableArrayOf = /*#__PURE__*/createObservableArrayOfTypeChecker.bind(null, false);\nvar observableMap = /*#__PURE__*/createObservableTypeCheckerCreator(false, \"Map\");\nvar observableObject = /*#__PURE__*/createObservableTypeCheckerCreator(false, \"Object\");\nvar arrayOrObservableArray = /*#__PURE__*/createObservableTypeCheckerCreator(true, \"Array\");\nvar arrayOrObservableArrayOf = /*#__PURE__*/createObservableArrayOfTypeChecker.bind(null, true);\nvar objectOrObservableObject = /*#__PURE__*/createObservableTypeCheckerCreator(true, \"Object\");\nvar PropTypes = {\n  observableArray: observableArray,\n  observableArrayOf: observableArrayOf,\n  observableMap: observableMap,\n  observableObject: observableObject,\n  arrayOrObservableArray: arrayOrObservableArray,\n  arrayOrObservableArrayOf: arrayOrObservableArrayOf,\n  objectOrObservableObject: objectOrObservableObject\n};\nif (!Component) throw new Error(\"mobx-react requires React to be available\");\nif (!observable) throw new Error(\"mobx-react requires mobx to be available\");\nexport { MobXProviderContext, PropTypes, Provider, disposeOnUnmount, inject, observer };","map":{"version":3,"sources":["../src/utils/utils.ts","../src/observerClass.ts","../src/observer.tsx","../src/Provider.tsx","../src/inject.ts","../src/disposeOnUnmount.ts","../src/propTypes.ts","../src/index.ts"],"names":["symbolId","createSymbol","name","Symbol","symbol","createdSymbols","newSymbol","shallowEqual","objA","objB","is","keysA","Object","keys","keysB","length","i","hasOwnProperty","call","x","y","hoistBlackList","$$typeof","render","compare","type","childContextTypes","contextType","contextTypes","defaultProps","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","displayName","propTypes","copyStaticProperties","base","target","protoProps","getOwnPropertyNames","getPrototypeOf","forEach","key","indexOf","defineProperty","getOwnPropertyDescriptor","setHiddenProp","prop","value","enumerable","configurable","writable","mobxMixins","mobxPatchedDefinition","getMixins","methodName","methodMixins","locks","methods","wrapper","realMethod","args","retVal","undefined","apply","mx","wrapFunction","fn","patch","mixinMethod","push","oldDefinition","originalMethod","newDefinition","createDefinition","wrappedFunc","get","set","mobxAdminProperty","$mobx","mobxObserverProperty","mobxIsUnmounted","skipRenderKey","isForcingUpdateKey","makeClassComponentObserver","componentClass","prototype","getDisplayName","console","warn","componentWillReact","Error","PureComponent","shouldComponentUpdate","observerSCU","makeObservableProp","baseRender","makeComponentReactive","isUsingStaticRendering","dispose","comp","constructor","initialName","bind","isRenderingPending","reaction","Reaction","hasError","Component","forceUpdate","reactiveRender","exception","rendering","track","_allowStateChanges","e","nextProps","nextState","state","props","propName","valueHolderKey","atomHolderKey","getAtom","createAtom","prevReadState","_allowStateReadsStart","_allowStateReadsEnd","reportObserved","v","reportChanged","hasSymbol","ReactForwardRefSymbol","React","ReactMemoSymbol","observer","component","ObserverForwardRef","arguments","Observer","isPrototypeOf","observerLite","MobXProviderContext","createContext","Provider","children","stores","parentValue","useContext","mutableProviderRef","useRef","current","newValue","createStoreInjector","grabStoresFn","injectNames","makeReactive","Injector","forwardRef","ref","newProps","context","assign","createElement","getInjectName","componentName","grabStoresByName","storeNames","baseStores","storeName","inject","join","protoStoreKey","instStoreKey","runDisposersOnWillUnmount","propKeyOrFunction","Array","isArray","map","f","disposeOnUnmount","propertyKeyOrFunction","c","c2","c3","isDecorator","componentWasAlreadyModified","store","createChainableTypeChecker","validator","checkType","isRequired","location","propFullName","rest","untracked","actual","chainedCheckType","isSymbol","propType","propValue","getPropType","RegExp","getPreciseType","Date","createObservableTypeCheckerCreator","allowNativeType","mobxType","toLowerCase","mobxChecker","isObservableArray","isObservableObject","isObservableMap","preciseType","nativeTypeExpectationMessage","createObservableArrayOfTypeChecker","typeChecker","error","observableArray","observableArrayOf","observableMap","observableObject","arrayOrObservableArray","arrayOrObservableArrayOf","objectOrObservableObject","PropTypes","observable"],"mappings":"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","sourcesContent":["let symbolId = 0\nfunction createSymbol(name: string): symbol | string {\n    if (typeof Symbol === \"function\") {\n        return Symbol(name)\n    }\n    const symbol = `__$mobx-react ${name} (${symbolId})`\n    symbolId++\n    return symbol\n}\n\nconst createdSymbols = {}\nexport function newSymbol(name: string): symbol | string {\n    if (!createdSymbols[name]) {\n        createdSymbols[name] = createSymbol(name)\n    }\n    return createdSymbols[name]\n}\n\nexport function shallowEqual(objA: any, objB: any): boolean {\n    //From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n    if (is(objA, objB)) return true\n    if (typeof objA !== \"object\" || objA === null || typeof objB !== \"object\" || objB === null) {\n        return false\n    }\n    const keysA = Object.keys(objA)\n    const keysB = Object.keys(objB)\n    if (keysA.length !== keysB.length) return false\n    for (let i = 0; i < keysA.length; i++) {\n        if (!Object.hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n            return false\n        }\n    }\n    return true\n}\n\nfunction is(x: any, y: any): boolean {\n    // From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n    if (x === y) {\n        return x !== 0 || 1 / x === 1 / y\n    } else {\n        return x !== x && y !== y\n    }\n}\n\n// based on https://github.com/mridgway/hoist-non-react-statics/blob/master/src/index.js\nconst hoistBlackList = {\n    $$typeof: 1,\n    render: 1,\n    compare: 1,\n    type: 1,\n    childContextTypes: 1,\n    contextType: 1,\n    contextTypes: 1,\n    defaultProps: 1,\n    getDefaultProps: 1,\n    getDerivedStateFromError: 1,\n    getDerivedStateFromProps: 1,\n    mixins: 1,\n    displayName: 1,\n    propTypes: 1\n}\n\nexport function copyStaticProperties(base: object, target: object): void {\n    const protoProps = Object.getOwnPropertyNames(Object.getPrototypeOf(base))\n    Object.getOwnPropertyNames(base).forEach(key => {\n        if (!hoistBlackList[key] && protoProps.indexOf(key) === -1) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(base, key)!)\n        }\n    })\n}\n\n/**\n * Helper to set `prop` to `this` as non-enumerable (hidden prop)\n * @param target\n * @param prop\n * @param value\n */\nexport function setHiddenProp(target: object, prop: any, value: any): void {\n    if (!Object.hasOwnProperty.call(target, prop)) {\n        Object.defineProperty(target, prop, {\n            enumerable: false,\n            configurable: true,\n            writable: true,\n            value\n        })\n    } else {\n        target[prop] = value\n    }\n}\n\n/**\n * Utilities for patching componentWillUnmount, to make sure @disposeOnUnmount works correctly icm with user defined hooks\n * and the handler provided by mobx-react\n */\nconst mobxMixins = newSymbol(\"patchMixins\")\nconst mobxPatchedDefinition = newSymbol(\"patchedDefinition\")\n\nexport interface Mixins extends Record<string, any> {\n    locks: number\n    methods: Array<Function>\n}\n\nfunction getMixins(target: object, methodName: string): Mixins {\n    const mixins = (target[mobxMixins] = target[mobxMixins] || {})\n    const methodMixins = (mixins[methodName] = mixins[methodName] || {})\n    methodMixins.locks = methodMixins.locks || 0\n    methodMixins.methods = methodMixins.methods || []\n    return methodMixins\n}\n\nfunction wrapper(realMethod: Function, mixins: Mixins, ...args: Array<any>) {\n    // locks are used to ensure that mixins are invoked only once per invocation, even on recursive calls\n    mixins.locks++\n\n    try {\n        let retVal\n        if (realMethod !== undefined && realMethod !== null) {\n            retVal = realMethod.apply(this, args)\n        }\n\n        return retVal\n    } finally {\n        mixins.locks--\n        if (mixins.locks === 0) {\n            mixins.methods.forEach(mx => {\n                mx.apply(this, args)\n            })\n        }\n    }\n}\n\nfunction wrapFunction(realMethod: Function, mixins: Mixins): (...args: Array<any>) => any {\n    const fn = function (...args: Array<any>) {\n        wrapper.call(this, realMethod, mixins, ...args)\n    }\n    return fn\n}\n\nexport function patch(target: object, methodName: string, mixinMethod: Function): void {\n    const mixins = getMixins(target, methodName)\n\n    if (mixins.methods.indexOf(mixinMethod) < 0) {\n        mixins.methods.push(mixinMethod)\n    }\n\n    const oldDefinition = Object.getOwnPropertyDescriptor(target, methodName)\n    if (oldDefinition && oldDefinition[mobxPatchedDefinition]) {\n        // already patched definition, do not repatch\n        return\n    }\n\n    const originalMethod = target[methodName]\n    const newDefinition = createDefinition(\n        target,\n        methodName,\n        oldDefinition ? oldDefinition.enumerable : undefined,\n        mixins,\n        originalMethod\n    )\n\n    Object.defineProperty(target, methodName, newDefinition)\n}\n\nfunction createDefinition(\n    target: object,\n    methodName: string,\n    enumerable: any,\n    mixins: Mixins,\n    originalMethod: Function\n): PropertyDescriptor {\n    let wrappedFunc = wrapFunction(originalMethod, mixins)\n\n    return {\n        [mobxPatchedDefinition]: true,\n        get: function () {\n            return wrappedFunc\n        },\n        set: function (value) {\n            if (this === target) {\n                wrappedFunc = wrapFunction(value, mixins)\n            } else {\n                // when it is an instance of the prototype/a child prototype patch that particular case again separately\n                // since we need to store separate values depending on wether it is the actual instance, the prototype, etc\n                // e.g. the method for super might not be the same as the method for the prototype which might be not the same\n                // as the method for the instance\n                const newDefinition = createDefinition(this, methodName, enumerable, mixins, value)\n                Object.defineProperty(this, methodName, newDefinition)\n            }\n        },\n        configurable: true,\n        enumerable: enumerable\n    }\n}\n","import { PureComponent, Component } from \"react\"\nimport {\n    createAtom,\n    _allowStateChanges,\n    Reaction,\n    $mobx,\n    _allowStateReadsStart,\n    _allowStateReadsEnd\n} from \"mobx\"\nimport { isUsingStaticRendering } from \"mobx-react-lite\"\n\nimport { newSymbol, shallowEqual, setHiddenProp, patch } from \"./utils/utils\"\n\nconst mobxAdminProperty = $mobx || \"$mobx\"\nconst mobxObserverProperty = newSymbol(\"isMobXReactObserver\")\nconst mobxIsUnmounted = newSymbol(\"isUnmounted\")\nconst skipRenderKey = newSymbol(\"skipRender\")\nconst isForcingUpdateKey = newSymbol(\"isForcingUpdate\")\n\nexport function makeClassComponentObserver(\n    componentClass: React.ComponentClass<any, any>\n): React.ComponentClass<any, any> {\n    const target = componentClass.prototype\n\n    if (componentClass[mobxObserverProperty]) {\n        const displayName = getDisplayName(target)\n        console.warn(\n            `The provided component class (${displayName}) \n                has already been declared as an observer component.`\n        )\n    } else {\n        componentClass[mobxObserverProperty] = true\n    }\n\n    if (target.componentWillReact)\n        throw new Error(\"The componentWillReact life-cycle event is no longer supported\")\n    if (componentClass[\"__proto__\"] !== PureComponent) {\n        if (!target.shouldComponentUpdate) target.shouldComponentUpdate = observerSCU\n        else if (target.shouldComponentUpdate !== observerSCU)\n            // n.b. unequal check, instead of existence check, as @observer might be on superclass as well\n            throw new Error(\n                \"It is not allowed to use shouldComponentUpdate in observer based components.\"\n            )\n    }\n\n    // this.props and this.state are made observable, just to make sure @computed fields that\n    // are defined inside the component, and which rely on state or props, re-compute if state or props change\n    // (otherwise the computed wouldn't update and become stale on props change, since props are not observable)\n    // However, this solution is not without it's own problems: https://github.com/mobxjs/mobx-react/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3Aobservable-props-or-not+\n    makeObservableProp(target, \"props\")\n    makeObservableProp(target, \"state\")\n\n    const baseRender = target.render\n    target.render = function () {\n        return makeComponentReactive.call(this, baseRender)\n    }\n    patch(target, \"componentWillUnmount\", function () {\n        if (isUsingStaticRendering() === true) return\n        this.render[mobxAdminProperty]?.dispose()\n        this[mobxIsUnmounted] = true\n\n        if (!this.render[mobxAdminProperty]) {\n            // Render may have been hot-swapped and/or overriden by a subclass.\n            const displayName = getDisplayName(this)\n            console.warn(\n                `The reactive render of an observer class component (${displayName}) \n                was overriden after MobX attached. This may result in a memory leak if the \n                overriden reactive render was not properly disposed.`\n            )\n        }\n    })\n    return componentClass\n}\n\n// Generates a friendly name for debugging\nfunction getDisplayName(comp: any) {\n    return (\n        comp.displayName ||\n        comp.name ||\n        (comp.constructor && (comp.constructor.displayName || comp.constructor.name)) ||\n        \"<component>\"\n    )\n}\n\nfunction makeComponentReactive(render: any) {\n    if (isUsingStaticRendering() === true) return render.call(this)\n\n    /**\n     * If props are shallowly modified, react will render anyway,\n     * so atom.reportChanged() should not result in yet another re-render\n     */\n    setHiddenProp(this, skipRenderKey, false)\n    /**\n     * forceUpdate will re-assign this.props. We don't want that to cause a loop,\n     * so detect these changes\n     */\n    setHiddenProp(this, isForcingUpdateKey, false)\n\n    const initialName = getDisplayName(this)\n    const baseRender = render.bind(this)\n\n    let isRenderingPending = false\n\n    const reaction = new Reaction(`${initialName}.render()`, () => {\n        if (!isRenderingPending) {\n            // N.B. Getting here *before mounting* means that a component constructor has side effects (see the relevant test in misc.js)\n            // This unidiomatic React usage but React will correctly warn about this so we continue as usual\n            // See #85 / Pull #44\n            isRenderingPending = true\n            if (this[mobxIsUnmounted] !== true) {\n                let hasError = true\n                try {\n                    setHiddenProp(this, isForcingUpdateKey, true)\n                    if (!this[skipRenderKey]) Component.prototype.forceUpdate.call(this)\n                    hasError = false\n                } finally {\n                    setHiddenProp(this, isForcingUpdateKey, false)\n                    if (hasError) reaction.dispose()\n                }\n            }\n        }\n    })\n\n    reaction[\"reactComponent\"] = this\n    reactiveRender[mobxAdminProperty] = reaction\n    this.render = reactiveRender\n\n    function reactiveRender() {\n        isRenderingPending = false\n        let exception = undefined\n        let rendering = undefined\n        reaction.track(() => {\n            try {\n                rendering = _allowStateChanges(false, baseRender)\n            } catch (e) {\n                exception = e\n            }\n        })\n        if (exception) {\n            throw exception\n        }\n        return rendering\n    }\n\n    return reactiveRender.call(this)\n}\n\nfunction observerSCU(nextProps: React.Props<any>, nextState: any): boolean {\n    if (isUsingStaticRendering()) {\n        console.warn(\n            \"[mobx-react] It seems that a re-rendering of a React component is triggered while in static (server-side) mode. Please make sure components are rendered only once server-side.\"\n        )\n    }\n    // update on any state changes (as is the default)\n    if (this.state !== nextState) {\n        return true\n    }\n    // update if props are shallowly not equal, inspired by PureRenderMixin\n    // we could return just 'false' here, and avoid the `skipRender` checks etc\n    // however, it is nicer if lifecycle events are triggered like usually,\n    // so we return true here if props are shallowly modified.\n    return !shallowEqual(this.props, nextProps)\n}\n\nfunction makeObservableProp(target: any, propName: string): void {\n    const valueHolderKey = newSymbol(`reactProp_${propName}_valueHolder`)\n    const atomHolderKey = newSymbol(`reactProp_${propName}_atomHolder`)\n    function getAtom() {\n        if (!this[atomHolderKey]) {\n            setHiddenProp(this, atomHolderKey, createAtom(\"reactive \" + propName))\n        }\n        return this[atomHolderKey]\n    }\n    Object.defineProperty(target, propName, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            let prevReadState = false\n\n            if (_allowStateReadsStart && _allowStateReadsEnd) {\n                prevReadState = _allowStateReadsStart(true)\n            }\n            getAtom.call(this).reportObserved()\n\n            if (_allowStateReadsStart && _allowStateReadsEnd) {\n                _allowStateReadsEnd(prevReadState)\n            }\n\n            return this[valueHolderKey]\n        },\n        set: function set(v) {\n            if (!this[isForcingUpdateKey] && !shallowEqual(this[valueHolderKey], v)) {\n                setHiddenProp(this, valueHolderKey, v)\n                setHiddenProp(this, skipRenderKey, true)\n                getAtom.call(this).reportChanged()\n                setHiddenProp(this, skipRenderKey, false)\n            } else {\n                setHiddenProp(this, valueHolderKey, v)\n            }\n        }\n    })\n}\n","import * as React from \"react\"\nimport { observer as observerLite, Observer } from \"mobx-react-lite\"\n\nimport { makeClassComponentObserver } from \"./observerClass\"\nimport { IReactComponent } from \"./types/IReactComponent\"\n\nconst hasSymbol = typeof Symbol === \"function\" && Symbol.for\n\n// Using react-is had some issues (and operates on elements, not on types), see #608 / #609\nconst ReactForwardRefSymbol = hasSymbol\n    ? Symbol.for(\"react.forward_ref\")\n    : typeof React.forwardRef === \"function\" && React.forwardRef((props: any) => null)[\"$$typeof\"]\n\nconst ReactMemoSymbol = hasSymbol\n    ? Symbol.for(\"react.memo\")\n    : typeof React.memo === \"function\" && React.memo((props: any) => null)[\"$$typeof\"]\n\n/**\n * Observer function / decorator\n */\nexport function observer<T extends IReactComponent>(component: T): T {\n    if (component[\"isMobxInjector\"] === true) {\n        console.warn(\n            \"Mobx observer: You are trying to use 'observer' on a component that already has 'inject'. Please apply 'observer' before applying 'inject'\"\n        )\n    }\n\n    if (ReactMemoSymbol && component[\"$$typeof\"] === ReactMemoSymbol) {\n        throw new Error(\n            \"Mobx observer: You are trying to use 'observer' on a function component wrapped in either another observer or 'React.memo'. The observer already applies 'React.memo' for you.\"\n        )\n    }\n\n    // Unwrap forward refs into `<Observer>` component\n    // we need to unwrap the render, because it is the inner render that needs to be tracked,\n    // not the ForwardRef HoC\n    if (ReactForwardRefSymbol && component[\"$$typeof\"] === ReactForwardRefSymbol) {\n        const baseRender = component[\"render\"]\n        if (typeof baseRender !== \"function\")\n            throw new Error(\"render property of ForwardRef was not a function\")\n        return React.forwardRef(function ObserverForwardRef() {\n            const args = arguments\n            return <Observer>{() => baseRender.apply(undefined, args)}</Observer>\n        }) as T\n    }\n\n    // Function component\n    if (\n        typeof component === \"function\" &&\n        (!component.prototype || !component.prototype.render) &&\n        !component[\"isReactClass\"] &&\n        !Object.prototype.isPrototypeOf.call(React.Component, component)\n    ) {\n        return observerLite(component as React.StatelessComponent<any>) as T\n    }\n\n    return makeClassComponentObserver(component as React.ComponentClass<any, any>) as T\n}\n","import React from \"react\"\nimport { shallowEqual } from \"./utils/utils\"\nimport { IValueMap } from \"./types/IValueMap\"\n\nexport const MobXProviderContext = React.createContext<IValueMap>({})\n\nexport interface ProviderProps extends IValueMap {\n    children: React.ReactNode\n}\n\nexport function Provider(props: ProviderProps) {\n    const { children, ...stores } = props\n    const parentValue = React.useContext(MobXProviderContext)\n    const mutableProviderRef = React.useRef({ ...parentValue, ...stores })\n    const value = mutableProviderRef.current\n\n    if (__DEV__) {\n        const newValue = { ...value, ...stores } // spread in previous state for the context based stores\n        if (!shallowEqual(value, newValue)) {\n            throw new Error(\n                \"MobX Provider: The set of provided stores has changed. See: https://github.com/mobxjs/mobx-react#the-set-of-provided-stores-has-changed-error.\"\n            )\n        }\n    }\n\n    return <MobXProviderContext.Provider value={value}>{children}</MobXProviderContext.Provider>\n}\n\nProvider.displayName = \"MobXProvider\"\n","import React from \"react\"\nimport { observer } from \"./observer\"\nimport { copyStaticProperties } from \"./utils/utils\"\nimport { MobXProviderContext } from \"./Provider\"\nimport { IReactComponent } from \"./types/IReactComponent\"\nimport { IValueMap } from \"./types/IValueMap\"\nimport { IWrappedComponent } from \"./types/IWrappedComponent\"\nimport { IStoresToProps } from \"./types/IStoresToProps\"\n\n/**\n * Store Injection\n */\nfunction createStoreInjector(\n    grabStoresFn: IStoresToProps,\n    component: IReactComponent<any>,\n    injectNames: string,\n    makeReactive: boolean\n): IReactComponent<any> {\n    // Support forward refs\n    let Injector: IReactComponent<any> = React.forwardRef((props, ref) => {\n        const newProps = { ...props }\n        const context = React.useContext(MobXProviderContext)\n        Object.assign(newProps, grabStoresFn(context || {}, newProps) || {})\n\n        if (ref) {\n            newProps.ref = ref\n        }\n\n        return React.createElement(component, newProps)\n    })\n\n    if (makeReactive) Injector = observer(Injector)\n    Injector[\"isMobxInjector\"] = true // assigned late to suppress observer warning\n\n    // Static fields from component should be visible on the generated Injector\n    copyStaticProperties(component, Injector)\n    Injector[\"wrappedComponent\"] = component\n    Injector.displayName = getInjectName(component, injectNames)\n    return Injector\n}\n\nfunction getInjectName(component: IReactComponent<any>, injectNames: string): string {\n    let displayName\n    const componentName =\n        component.displayName ||\n        component.name ||\n        (component.constructor && component.constructor.name) ||\n        \"Component\"\n    if (injectNames) displayName = \"inject-with-\" + injectNames + \"(\" + componentName + \")\"\n    else displayName = \"inject(\" + componentName + \")\"\n    return displayName\n}\n\nfunction grabStoresByName(\n    storeNames: Array<string>\n): (baseStores: IValueMap, nextProps: React.Props<any>) => React.PropsWithRef<any> | undefined {\n    return function (baseStores, nextProps) {\n        storeNames.forEach(function (storeName) {\n            if (\n                storeName in nextProps // prefer props over stores\n            )\n                return\n            if (!(storeName in baseStores))\n                throw new Error(\n                    \"MobX injector: Store '\" +\n                        storeName +\n                        \"' is not available! Make sure it is provided by some Provider\"\n                )\n            nextProps[storeName] = baseStores[storeName]\n        })\n        return nextProps\n    }\n}\n\nexport function inject(\n    ...stores: Array<string>\n): <T extends IReactComponent<any>>(\n    target: T\n) => T & (T extends IReactComponent<infer P> ? IWrappedComponent<P> : never)\nexport function inject<S, P, I, C>(\n    fn: IStoresToProps<S, P, I, C>\n): <T extends IReactComponent>(target: T) => T & IWrappedComponent<P>\n\n/**\n * higher order component that injects stores to a child.\n * takes either a varargs list of strings, which are stores read from the context,\n * or a function that manually maps the available stores from the context to props:\n * storesToProps(mobxStores, props, context) => newProps\n */\nexport function inject(/* fn(stores, nextProps) or ...storeNames */ ...storeNames: Array<any>) {\n    if (typeof arguments[0] === \"function\") {\n        let grabStoresFn = arguments[0]\n        return (componentClass: React.ComponentClass<any, any>) =>\n            createStoreInjector(grabStoresFn, componentClass, grabStoresFn.name, true)\n    } else {\n        return (componentClass: React.ComponentClass<any, any>) =>\n            createStoreInjector(\n                grabStoresByName(storeNames),\n                componentClass,\n                storeNames.join(\"-\"),\n                false\n            )\n    }\n}\n","import React from \"react\"\nimport { patch, newSymbol } from \"./utils/utils\"\n\ntype Disposer = () => void\n\nconst protoStoreKey = newSymbol(\"disposeOnUnmountProto\")\nconst instStoreKey = newSymbol(\"disposeOnUnmountInst\")\n\nfunction runDisposersOnWillUnmount() {\n    ;[...(this[protoStoreKey] || []), ...(this[instStoreKey] || [])].forEach(propKeyOrFunction => {\n        const prop =\n            typeof propKeyOrFunction === \"string\" ? this[propKeyOrFunction] : propKeyOrFunction\n        if (prop !== undefined && prop !== null) {\n            if (Array.isArray(prop)) prop.map(f => f())\n            else prop()\n        }\n    })\n}\n\nexport function disposeOnUnmount(target: React.Component<any, any>, propertyKey: PropertyKey): void\nexport function disposeOnUnmount<TF extends Disposer | Array<Disposer>>(\n    target: React.Component<any, any>,\n    fn: TF\n): TF\n\nexport function disposeOnUnmount(\n    target: React.Component<any, any>,\n    propertyKeyOrFunction: PropertyKey | Disposer | Array<Disposer>\n): PropertyKey | Disposer | Array<Disposer> | void {\n    if (Array.isArray(propertyKeyOrFunction)) {\n        return propertyKeyOrFunction.map(fn => disposeOnUnmount(target, fn))\n    }\n\n    const c = Object.getPrototypeOf(target).constructor\n    const c2 = Object.getPrototypeOf(target.constructor)\n    // Special case for react-hot-loader\n    const c3 = Object.getPrototypeOf(Object.getPrototypeOf(target))\n    if (\n        !(\n            c === React.Component ||\n            c === React.PureComponent ||\n            c2 === React.Component ||\n            c2 === React.PureComponent ||\n            c3 === React.Component ||\n            c3 === React.PureComponent\n        )\n    ) {\n        throw new Error(\n            \"[mobx-react] disposeOnUnmount only supports direct subclasses of React.Component or React.PureComponent.\"\n        )\n    }\n\n    if (\n        typeof propertyKeyOrFunction !== \"string\" &&\n        typeof propertyKeyOrFunction !== \"function\" &&\n        !Array.isArray(propertyKeyOrFunction)\n    ) {\n        throw new Error(\n            \"[mobx-react] disposeOnUnmount only works if the parameter is either a property key or a function.\"\n        )\n    }\n\n    // decorator's target is the prototype, so it doesn't have any instance properties like props\n    const isDecorator = typeof propertyKeyOrFunction === \"string\"\n\n    // add property key / function we want run (disposed) to the store\n    const componentWasAlreadyModified = !!target[protoStoreKey] || !!target[instStoreKey]\n    const store = isDecorator\n        ? // decorators are added to the prototype store\n          target[protoStoreKey] || (target[protoStoreKey] = [])\n        : // functions are added to the instance store\n          target[instStoreKey] || (target[instStoreKey] = [])\n\n    store.push(propertyKeyOrFunction)\n\n    // tweak the component class componentWillUnmount if not done already\n    if (!componentWasAlreadyModified) {\n        patch(target, \"componentWillUnmount\", runDisposersOnWillUnmount)\n    }\n\n    // return the disposer as is if invoked as a non decorator\n    if (typeof propertyKeyOrFunction !== \"string\") {\n        return propertyKeyOrFunction\n    }\n}\n","import { isObservableArray, isObservableObject, isObservableMap, untracked } from \"mobx\"\n\n// Copied from React.PropTypes\nfunction createChainableTypeChecker(validator: React.Validator<any>): React.Requireable<any> {\n    function checkType(\n        isRequired: boolean,\n        props: any,\n        propName: string,\n        componentName: string,\n        location: string,\n        propFullName: string,\n        ...rest: any[]\n    ) {\n        return untracked(() => {\n            componentName = componentName || \"<<anonymous>>\"\n            propFullName = propFullName || propName\n            if (props[propName] == null) {\n                if (isRequired) {\n                    const actual = props[propName] === null ? \"null\" : \"undefined\"\n                    return new Error(\n                        \"The \" +\n                            location +\n                            \" `\" +\n                            propFullName +\n                            \"` is marked as required \" +\n                            \"in `\" +\n                            componentName +\n                            \"`, but its value is `\" +\n                            actual +\n                            \"`.\"\n                    )\n                }\n                return null\n            } else {\n                // @ts-ignore rest arg is necessary for some React internals - fails tests otherwise\n                return validator(props, propName, componentName, location, propFullName, ...rest)\n            }\n        })\n    }\n\n    const chainedCheckType: any = checkType.bind(null, false)\n    // Add isRequired to satisfy Requirable\n    chainedCheckType.isRequired = checkType.bind(null, true)\n    return chainedCheckType\n}\n\n// Copied from React.PropTypes\nfunction isSymbol(propType: any, propValue: any): boolean {\n    // Native Symbol.\n    if (propType === \"symbol\") {\n        return true\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue[\"@@toStringTag\"] === \"Symbol\") {\n        return true\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === \"function\" && propValue instanceof Symbol) {\n        return true\n    }\n\n    return false\n}\n\n// Copied from React.PropTypes\nfunction getPropType(propValue: any): string {\n    const propType = typeof propValue\n    if (Array.isArray(propValue)) {\n        return \"array\"\n    }\n    if (propValue instanceof RegExp) {\n        // Old webkits (at least until Android 4.0) return 'function' rather than\n        // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n        // passes PropTypes.object.\n        return \"object\"\n    }\n    if (isSymbol(propType, propValue)) {\n        return \"symbol\"\n    }\n    return propType\n}\n\n// This handles more types than `getPropType`. Only used for error messages.\n// Copied from React.PropTypes\nfunction getPreciseType(propValue: any): string {\n    const propType = getPropType(propValue)\n    if (propType === \"object\") {\n        if (propValue instanceof Date) {\n            return \"date\"\n        } else if (propValue instanceof RegExp) {\n            return \"regexp\"\n        }\n    }\n    return propType\n}\n\nfunction createObservableTypeCheckerCreator(\n    allowNativeType: any,\n    mobxType: any\n): React.Requireable<any> {\n    return createChainableTypeChecker((props, propName, componentName, location, propFullName) => {\n        return untracked(() => {\n            if (allowNativeType) {\n                if (getPropType(props[propName]) === mobxType.toLowerCase()) return null\n            }\n            let mobxChecker\n            switch (mobxType) {\n                case \"Array\":\n                    mobxChecker = isObservableArray\n                    break\n                case \"Object\":\n                    mobxChecker = isObservableObject\n                    break\n                case \"Map\":\n                    mobxChecker = isObservableMap\n                    break\n                default:\n                    throw new Error(`Unexpected mobxType: ${mobxType}`)\n            }\n            const propValue = props[propName]\n            if (!mobxChecker(propValue)) {\n                const preciseType = getPreciseType(propValue)\n                const nativeTypeExpectationMessage = allowNativeType\n                    ? \" or javascript `\" + mobxType.toLowerCase() + \"`\"\n                    : \"\"\n                return new Error(\n                    \"Invalid prop `\" +\n                        propFullName +\n                        \"` of type `\" +\n                        preciseType +\n                        \"` supplied to\" +\n                        \" `\" +\n                        componentName +\n                        \"`, expected `mobx.Observable\" +\n                        mobxType +\n                        \"`\" +\n                        nativeTypeExpectationMessage +\n                        \".\"\n                )\n            }\n            return null\n        })\n    })\n}\n\nfunction createObservableArrayOfTypeChecker(\n    allowNativeType: boolean,\n    typeChecker: React.Validator<any>\n) {\n    return createChainableTypeChecker(\n        (props, propName, componentName, location, propFullName, ...rest) => {\n            return untracked(() => {\n                if (typeof typeChecker !== \"function\") {\n                    return new Error(\n                        \"Property `\" +\n                            propFullName +\n                            \"` of component `\" +\n                            componentName +\n                            \"` has \" +\n                            \"invalid PropType notation.\"\n                    )\n                } else {\n                    let error = createObservableTypeCheckerCreator(allowNativeType, \"Array\")(\n                        props,\n                        propName,\n                        componentName,\n                        location,\n                        propFullName\n                    )\n\n                    if (error instanceof Error) return error\n                    const propValue = props[propName]\n                    for (let i = 0; i < propValue.length; i++) {\n                        error = (typeChecker as React.Validator<any>)(\n                            propValue,\n                            i as any,\n                            componentName,\n                            location,\n                            propFullName + \"[\" + i + \"]\",\n                            ...rest\n                        )\n                        if (error instanceof Error) return error\n                    }\n\n                    return null\n                }\n            })\n        }\n    )\n}\n\nconst observableArray = createObservableTypeCheckerCreator(false, \"Array\")\nconst observableArrayOf = createObservableArrayOfTypeChecker.bind(null, false)\nconst observableMap = createObservableTypeCheckerCreator(false, \"Map\")\nconst observableObject = createObservableTypeCheckerCreator(false, \"Object\")\nconst arrayOrObservableArray = createObservableTypeCheckerCreator(true, \"Array\")\nconst arrayOrObservableArrayOf = createObservableArrayOfTypeChecker.bind(null, true)\nconst objectOrObservableObject = createObservableTypeCheckerCreator(true, \"Object\")\n\nexport const PropTypes = {\n    observableArray,\n    observableArrayOf,\n    observableMap,\n    observableObject,\n    arrayOrObservableArray,\n    arrayOrObservableArrayOf,\n    objectOrObservableObject\n}\n","import { observable } from \"mobx\"\nimport { Component } from \"react\"\n\nif (!Component) throw new Error(\"mobx-react requires React to be available\")\nif (!observable) throw new Error(\"mobx-react requires mobx to be available\")\n\nexport {\n    Observer,\n    useObserver,\n    useAsObservableSource,\n    useLocalStore,\n    isUsingStaticRendering,\n    useStaticRendering,\n    enableStaticRendering,\n    observerBatching,\n    useLocalObservable\n} from \"mobx-react-lite\"\n\nexport { observer } from \"./observer\"\n\nexport { MobXProviderContext, Provider, ProviderProps } from \"./Provider\"\nexport { inject } from \"./inject\"\nexport { disposeOnUnmount } from \"./disposeOnUnmount\"\nexport { PropTypes } from \"./propTypes\"\nexport { IWrappedComponent } from \"./types/IWrappedComponent\"\n"]},"metadata":{},"sourceType":"module"}