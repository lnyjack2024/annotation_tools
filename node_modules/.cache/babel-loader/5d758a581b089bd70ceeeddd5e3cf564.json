{"ast":null,"code":"export let Tool = /*#__PURE__*/function (Tool) {\n  Tool[\"RECTANGLE\"] = \"rectangle\";\n  Tool[\"SQUARE\"] = \"square\";\n  Tool[\"FOUR_DOTS_RECTANGLE\"] = \"four-dots-rectangle\";\n  Tool[\"CENTERLINE_RECTANGLE\"] = \"centerline-rectangle\";\n  Tool[\"POLYGON\"] = \"polygon\";\n  Tool[\"PARALLELOGRAM\"] = \"parallelogram\";\n  Tool[\"ELLIPSE\"] = \"ellipse\";\n  Tool[\"CIRCLE\"] = \"circle\";\n  Tool[\"CUBOID\"] = \"cuboid\";\n  Tool[\"LSHAPE\"] = \"l-shape\";\n  Tool[\"QUAD_PRISM\"] = \"quad-prism\";\n  Tool[\"ORIENTED_QUAD_PRISM\"] = \"oriented-quad-prism\";\n  Tool[\"LINE\"] = \"line\";\n  Tool[\"CURVE\"] = \"curve\";\n  Tool[\"CURVE_PAIR\"] = \"curve-pair\";\n  Tool[\"DOT\"] = \"dot\";\n  Tool[\"GRID\"] = \"grid\";\n  Tool[\"PIXEL\"] = \"pixel\";\n  Tool[\"ARROW\"] = \"arrow\";\n  Tool[\"FLEX_LINE\"] = \"flex-line\";\n  Tool[\"TWO_SIDES_CUBOID\"] = \"two-sides-cuboid\";\n  Tool[\"KEYPOINTS\"] = \"keypoints\";\n  Tool[\"OCR\"] = \"ocr\";\n  Tool[\"OCR_POLYGON\"] = \"ocr-polygon\";\n  Tool[\"FORMULA_POLYGON\"] = \"formula-polygon\";\n  Tool[\"RECOGNITION\"] = \"recognition\";\n  return Tool;\n}({});\nexport let PolygonCreateMethod = /*#__PURE__*/function (PolygonCreateMethod) {\n  PolygonCreateMethod[\"DEFAULT\"] = \"polygon-default\";\n  PolygonCreateMethod[\"RECT\"] = \"polygon-rect\";\n  return PolygonCreateMethod;\n}({});\nexport let LineCreateMethod = /*#__PURE__*/function (LineCreateMethod) {\n  LineCreateMethod[\"DEFAULT\"] = \"line-default\";\n  return LineCreateMethod;\n}({});\nexport let RectangleCreateMethod = /*#__PURE__*/function (RectangleCreateMethod) {\n  RectangleCreateMethod[\"DEFAULT\"] = \"rectangle-default\";\n  return RectangleCreateMethod;\n}({});\nexport let PixelCreateMethod = /*#__PURE__*/function (PixelCreateMethod) {\n  PixelCreateMethod[\"BRUSH\"] = \"brush\";\n  PixelCreateMethod[\"PIXEL_SELECTOR\"] = \"pixel-selector\";\n  PixelCreateMethod[\"POLYGON\"] = \"polygon\";\n  PixelCreateMethod[\"RECOGNITION\"] = \"recognition\";\n  PixelCreateMethod[\"RECOGNITION_RECT\"] = \"recognition-rect\";\n  return PixelCreateMethod;\n}({});\nexport let CVModel = /*#__PURE__*/function (CVModel) {\n  CVModel[\"DEFAULT\"] = \"default\";\n  // legacy model (for polygon & rectangles)\n  CVModel[\"TRAFFIC_SIGN\"] = \"traffic-sign\";\n  // specific models\n  CVModel[\"SEGMENTATION\"] = \"segmentation\";\n  CVModel[\"OBJECT_DETECTION\"] = \"object-detection\";\n  CVModel[\"OBJECT_DETECTION_MULTI\"] = \"object-detection-multi\";\n  return CVModel;\n}({});\nexport let TrafficSignModelMappingType = /*#__PURE__*/function (TrafficSignModelMappingType) {\n  TrafficSignModelMappingType[\"INSTANCE\"] = \"instance\";\n  TrafficSignModelMappingType[\"ITEM\"] = \"instance-item\";\n  return TrafficSignModelMappingType;\n}({});\nexport let LabelItem = /*#__PURE__*/function (LabelItem) {\n  LabelItem[\"CATEGORY\"] = \"category\";\n  // instance category\n  LabelItem[\"NUMBER\"] = \"number\";\n  // instance number\n  LabelItem[\"ATTRIBUTE_KEYS\"] = \"attribute-keys\";\n  // instance attribute key\n  LabelItem[\"ATTRIBUTE_VALUES\"] = \"attribute-values\";\n  // instance attribute value\n  LabelItem[\"ITEM_NAME\"] = \"item-name\";\n  // instance item name\n  LabelItem[\"ITEM_NUMBER\"] = \"item-number\";\n  // instance item number\n  LabelItem[\"ITEM_ATTRIBUTE_KEYS\"] = \"item-attribute-keys\";\n  // instance item attribute key\n  LabelItem[\"ITEM_ATTRIBUTE_VALUES\"] = \"item-attribute-values\";\n  // instance item attribute value\n  LabelItem[\"TOOL_NAME\"] = \"tool-name\";\n  // shape type\n  LabelItem[\"SHAPE_AREA\"] = \"shape-area\"; // shape area\n  return LabelItem;\n}({});\nexport let LabelStyle = /*#__PURE__*/function (LabelStyle) {\n  LabelStyle[\"DEFAULT\"] = \"default\";\n  LabelStyle[\"TRANSPARENT\"] = \"transparent\";\n  return LabelStyle;\n}({});\nexport let LabelFormat = /*#__PURE__*/function (LabelFormat) {\n  LabelFormat[\"DEFAULT\"] = \"default\";\n  LabelFormat[\"COMPRESSED\"] = \"compressed\";\n  return LabelFormat;\n}({});\nexport let InspectLabelParams = /*#__PURE__*/function (InspectLabelParams) {\n  InspectLabelParams[\"INSTANCE_ID\"] = \"instanceId\";\n  return InspectLabelParams;\n}({});\nexport let ShapeInfoItem = /*#__PURE__*/function (ShapeInfoItem) {\n  ShapeInfoItem[\"AREA\"] = \"area\";\n  return ShapeInfoItem;\n}({});\n\n/**\n * 1st: size & position (including shape delete)\n * 2nd: category (& number)\n * 3rd: attributes\n * 4th?: number (if not provided, use 2nd)\n * 5th?: delete (if not provided, use 1st)\n */\n\nexport let DisplayValidationType = /*#__PURE__*/function (DisplayValidationType) {\n  // default\n  DisplayValidationType[\"INVALID_SHAPE\"] = \"invalid_shape\";\n  DisplayValidationType[\"OUT_OF_BOUNDARY\"] = \"out_of_boundary\";\n  // config\n  DisplayValidationType[\"EMPTY_AREA\"] = \"empty_area\";\n  DisplayValidationType[\"FULLY_COVERED\"] = \"fully_covered\";\n  DisplayValidationType[\"ITEM_COUNT\"] = \"item_count\";\n  DisplayValidationType[\"ATTR_VALID\"] = \"attr_valid\";\n  DisplayValidationType[\"FRAME_ATTR_VALID\"] = \"frame_attr_valid\";\n  DisplayValidationType[\"FRAME_COMMON_ATTR_VALID\"] = \"frame_common_attr_valid\";\n  // script\n  DisplayValidationType[\"CUSTOM\"] = \"custom\";\n  DisplayValidationType[\"SCRIPT\"] = \"script\";\n  return DisplayValidationType;\n}({});\nexport let ValidationType = /*#__PURE__*/function (ValidationType) {\n  ValidationType[\"INVALID_SHAPE\"] = \"invalid_shape\";\n  ValidationType[\"OUT_OF_BOUNDARY\"] = \"out_of_boundary\";\n  ValidationType[\"EMPTY_AREA\"] = \"empty_area\";\n  ValidationType[\"FULLY_COVERED\"] = \"fully_covered\";\n  ValidationType[\"ITEM_COUNT\"] = \"item_count\";\n  ValidationType[\"ATTR_VALID\"] = \"attr_valid\";\n  ValidationType[\"FRAME_ATTR_VALID\"] = \"frame_attr_valid\";\n  ValidationType[\"FRAME_COMMON_ATTR_VALID\"] = \"frame_common_attr_valid\";\n  ValidationType[\"CUSTOM\"] = \"custom\";\n  ValidationType[\"SCRIPT\"] = \"script\";\n  // extends\n  ValidationType[\"KEYPOINTS_FINISH\"] = \"keypoints_finish\";\n  // INVALID_SHAPE\n  ValidationType[\"FRAME_VALID_ANNOTATE\"] = \"frame_valid_annotate\";\n  // FRAME_ATTR_VALID\n  ValidationType[\"FRAME_COMMON_VALID_ANNOTATE\"] = \"frame_common_valid_annotate\";\n  // FRAME_COMMON_ATTR_VALID\n  ValidationType[\"MIN_AREA\"] = \"min_area\"; // INVALID_SHAPE\n  return ValidationType;\n}({});\nexport let ValidationInfoType = /*#__PURE__*/function (ValidationInfoType) {\n  ValidationInfoType[\"HIGHLIGHT\"] = \"highlight\";\n  return ValidationInfoType;\n}({});\nexport let ContinuousModeType = /*#__PURE__*/function (ContinuousModeType) {\n  ContinuousModeType[\"DEFAULT\"] = \"default\";\n  ContinuousModeType[\"IN_INSTANCE\"] = \"in_instance\";\n  return ContinuousModeType;\n}({});\nexport let ViewMode = /*#__PURE__*/function (ViewMode) {\n  ViewMode[\"DEFAULT\"] = \"default\";\n  ViewMode[\"GRID\"] = \"grid\";\n  return ViewMode;\n}({});\nexport let ReviewMode = /*#__PURE__*/function (ReviewMode) {\n  ReviewMode[\"LABELING\"] = \"labeling\";\n  ReviewMode[\"REVIEW\"] = \"review\";\n  return ReviewMode;\n}({});\nexport let AttributesMode = /*#__PURE__*/function (AttributesMode) {\n  AttributesMode[\"HIDE\"] = \"hide\";\n  AttributesMode[\"HOVER\"] = \"hover\";\n  AttributesMode[\"ALWAYS\"] = \"always\";\n  return AttributesMode;\n}({});\nexport let SoloMode = /*#__PURE__*/function (SoloMode) {\n  SoloMode[\"INSTANCE\"] = \"instance\";\n  SoloMode[\"ITEM\"] = \"item\";\n  return SoloMode;\n}({});\nexport let PredictiveMode = /*#__PURE__*/function (PredictiveMode) {\n  PredictiveMode[\"SELECTED_INSTANCE\"] = \"selected_instance\";\n  PredictiveMode[\"SELECTED_ITEM\"] = \"selected_item\";\n  PredictiveMode[\"NONE\"] = \"none\";\n  return PredictiveMode;\n}({});\nexport let ReviewResult = /*#__PURE__*/function (ReviewResult) {\n  ReviewResult[\"APPROVE\"] = \"approve\";\n  ReviewResult[\"REJECT\"] = \"reject\";\n  ReviewResult[\"SUSPEND\"] = \"suspend\";\n  return ReviewResult;\n}({});\nexport let ShapeModifyType = /*#__PURE__*/function (ShapeModifyType) {\n  ShapeModifyType[\"CREATE\"] = \"create\";\n  ShapeModifyType[\"UPDATE\"] = \"update\";\n  ShapeModifyType[\"DELETE\"] = \"delete\";\n  return ShapeModifyType;\n}({});\n;\nexport let CameraLayout = /*#__PURE__*/function (CameraLayout) {\n  CameraLayout[\"COL2\"] = \"col-2\";\n  CameraLayout[\"COL3\"] = \"col-3\";\n  CameraLayout[\"THUMBNAIL\"] = \"thumbnail\";\n  return CameraLayout;\n}({});\nexport let DraggableType = /*#__PURE__*/function (DraggableType) {\n  DraggableType[\"INSTANCE\"] = \"instance\";\n  DraggableType[\"ITEM\"] = \"instance-item\";\n  return DraggableType;\n}({});\nexport let ShapeFocusMode = /*#__PURE__*/function (ShapeFocusMode) {\n  ShapeFocusMode[\"ZOOM\"] = \"zoom\";\n  ShapeFocusMode[\"ZOOM_KEEP\"] = \"zoom-keep\";\n  return ShapeFocusMode;\n}({});\nexport let PixelToolMode = /*#__PURE__*/function (PixelToolMode) {\n  PixelToolMode[\"PLUS\"] = \"plus\";\n  PixelToolMode[\"MINUS\"] = \"minus\";\n  PixelToolMode[\"NONE\"] = \"none\";\n  return PixelToolMode;\n}({});\nexport let NumberingMode = /*#__PURE__*/function (NumberingMode) {\n  NumberingMode[\"GLOBAL\"] = \"global\";\n  NumberingMode[\"BY_CATEGORY\"] = \"by_category\";\n  return NumberingMode;\n}({});\nexport let InstanceItemNumberingMode = /*#__PURE__*/function (InstanceItemNumberingMode) {\n  InstanceItemNumberingMode[\"GLOBAL\"] = \"global\";\n  InstanceItemNumberingMode[\"BY_INSTANCE\"] = \"by_instance\";\n  return InstanceItemNumberingMode;\n}({});\nexport let MeasurerType = /*#__PURE__*/function (MeasurerType) {\n  MeasurerType[\"DISTANCE\"] = \"distance\";\n  MeasurerType[\"AREA\"] = \"area\";\n  return MeasurerType;\n}({});\nexport let FilterDisplayMode = /*#__PURE__*/function (FilterDisplayMode) {\n  FilterDisplayMode[\"LIST\"] = \"list\";\n  FilterDisplayMode[\"SNAPSHOT\"] = \"snapshot\";\n  return FilterDisplayMode;\n}({});\nexport let FilterDisplayRange = /*#__PURE__*/function (FilterDisplayRange) {\n  FilterDisplayRange[\"ALL\"] = \"all\";\n  FilterDisplayRange[\"SELECTED\"] = \"selected\";\n  return FilterDisplayRange;\n}({});","map":{"version":3,"names":["Tool","PolygonCreateMethod","LineCreateMethod","RectangleCreateMethod","PixelCreateMethod","CVModel","TrafficSignModelMappingType","LabelItem","LabelStyle","LabelFormat","InspectLabelParams","ShapeInfoItem","DisplayValidationType","ValidationType","ValidationInfoType","ContinuousModeType","ViewMode","ReviewMode","AttributesMode","SoloMode","PredictiveMode","ReviewResult","ShapeModifyType","CameraLayout","DraggableType","ShapeFocusMode","PixelToolMode","NumberingMode","InstanceItemNumberingMode","MeasurerType","FilterDisplayMode","FilterDisplayRange"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking2/types.ts"],"sourcesContent":["import { Application } from 'pixi.js';\nimport { Field, Condition, Effect, Rule, FieldControlType, FieldOption, FieldValue } from '@appen-china/easy-form/es/types';\nimport { ShapeType, ShapeData } from '../common/shapes/types';\nimport { ShapeRotateHandleMode, ShapeRotateMode } from '../common/shapes/Shape';\nimport JobProxy from '../../libs/JobProxy';\nimport PixelsData, { RLE } from '../../utils/pixels';\n\nexport enum Tool {\n  RECTANGLE = 'rectangle',\n  SQUARE = 'square',\n  FOUR_DOTS_RECTANGLE = 'four-dots-rectangle',\n  CENTERLINE_RECTANGLE = 'centerline-rectangle',\n  POLYGON = 'polygon',\n  PARALLELOGRAM = 'parallelogram',\n  ELLIPSE = 'ellipse',\n  CIRCLE = 'circle',\n  CUBOID = 'cuboid',\n  LSHAPE = 'l-shape',\n  QUAD_PRISM = 'quad-prism',\n  ORIENTED_QUAD_PRISM = 'oriented-quad-prism',\n  LINE = 'line',\n  CURVE = 'curve',\n  CURVE_PAIR = 'curve-pair',\n  DOT = 'dot',\n  GRID = 'grid',\n  PIXEL = 'pixel',\n  ARROW = 'arrow',\n  FLEX_LINE = 'flex-line',\n  TWO_SIDES_CUBOID = 'two-sides-cuboid',\n  KEYPOINTS = 'keypoints',\n  OCR = 'ocr',\n  OCR_POLYGON = 'ocr-polygon',\n  FORMULA_POLYGON = 'formula-polygon',\n  RECOGNITION = 'recognition',\n}\n\nexport type ToolCreateMethod = PolygonCreateMethod | LineCreateMethod | RectangleCreateMethod;\nexport enum PolygonCreateMethod {\n  DEFAULT = 'polygon-default',\n  RECT = 'polygon-rect',\n}\nexport enum LineCreateMethod {\n  DEFAULT = 'line-default',\n}\nexport enum RectangleCreateMethod {\n  DEFAULT = 'rectangle-default',\n}\nexport enum PixelCreateMethod {\n  BRUSH = 'brush',\n  PIXEL_SELECTOR = 'pixel-selector',\n  POLYGON = 'polygon',\n  RECOGNITION = 'recognition',\n  RECOGNITION_RECT = 'recognition-rect',\n}\n\nexport interface Payload {\n  locale?: string;\n  issue_types?: string;\n  tools?: Tool[]; // legacy data\n  ontology: Ontology[];\n  resource_proxy?: string;\n  interpolate_proxy?: string;\n  predict_proxy?: string;\n  pre_annotation?: string;\n  base_url?: string;\n  frames?: string;\n  embeddings?: string;\n  camera_layout?: string;\n  layers?: string;\n  label_config?: string; // legacy data\n  frame_config?: string;\n  frame_config_validity?: string;\n  frame_config_common?: string;\n  frame_config_common_validity?: string;\n  image_filters_preset_config?: string;\n  shape_label_visibility?: string | boolean;\n  label_mode?: string;\n  label_item?: string;\n  label_style?: string;\n  label_format?: string;\n  point_label_mode?: string;\n  point_label_item?: string;\n  inspect_label?: string;\n  shape_info_item?: string;\n  is_fill?: string | boolean; // is default shape fill\n  fill_opacity?: string | number; // default shape fill opacity\n  border_opacity?: string | number; // default shape border opacity\n  border_width?: string | number; // default shape border width\n  dot_size?: string | number; // default dot shape size\n  show_side_length?: string | boolean; // default show shape side length\n  show_direction?: string | boolean; // default show shape direction\n  show_vertex?: string | boolean; // default show shape vertexes\n  show_vertex_order?: string | boolean; // default show shape vertex's order\n  vertex_size?: string | number; // default shape vertex size\n  vertex_start?: string | number; // default shape vertex start number\n  grid_gap?: string | number;\n  measurement_box?: string;\n  auxiliary_lines?: string;\n  ocr_tag_group?: string;\n  formula_template?: string;\n  auto_ocr?: string | boolean;\n  auto_interpolation?: string | boolean;\n  auto_tracking?: string | boolean;\n  model_prediction?: string | boolean;\n  predictive_mode?: string;\n  boundary_check?: string | boolean;\n  min_area?: string | number;\n  data_precision?: string | number;\n  view_rotatable?: string | boolean;\n  draggable?: string | boolean;\n  rotatable?: string | boolean;\n  auto_snap?: string | boolean;\n  auto_snap_point?: string | boolean;\n  custom_check?: string;\n  script_check?: string | boolean;\n  empty_area_check?: string | boolean;\n  fully_covered_check?: string | boolean;\n  attr_valid_check?: string | boolean;\n  attr_valid_check_submit?: string | boolean;\n  frame_attr_valid_check?: string | boolean;\n  frame_attr_valid_check_submit?: string | boolean;\n  frame_common_attr_valid_check?: string | boolean;\n  frame_common_attr_valid_check_submit?: string | boolean;\n  item_count_check?: string | boolean;\n  item_count_check_submit?: string | boolean;\n  keypoints_finish_check?: string | boolean;\n  keypoints_finish_check_submit?: string | boolean;\n  frame_valid_annotate_check?: string | boolean;\n  frame_valid_annotate_check_submit?: string | boolean;\n  frame_common_valid_annotate_check?: string | boolean;\n  frame_common_valid_annotate_check_submit?: string | boolean;\n  min_area_submit?: string | boolean;\n  submit_check?: string | boolean;\n  skip_check_for_invalid_data?: string | boolean;\n  hotkeys?: string;\n  relationships?: string;\n  relationship_mode?: string;\n  numbering_mode?: string;\n  numbering_mode_item?: string;\n  minify?: string | boolean;\n  default_issue_type?: string | boolean;\n  instructions_url?: string;\n  model_urls?: any;\n  app: Application;\n  jobProxy: JobProxy;\n}\n\nexport type CameraName = string;\nexport type ImageName = string;\nexport type Frame = number;\n\nexport interface Camera {\n  camera: CameraName;\n  // all images for each frame\n  images: Record<ImageName, string>[];\n  // extra data\n  data?: any;\n  // embeddings for recognition\n  embeddings?: Record<ImageName, string>[];\n  // calibrations for projection\n  calibrations?: any;\n}\n\nexport interface Styles {\n  fill_color?: string;\n  point_color?: string;\n  point_type?: string;\n  edge_color?: string;\n  edge_type?: string;\n  edge_bold?: boolean | string;\n  points_color?: string[];\n  points_type?: string[];\n  edges_color?: string[];\n  edges_type?: string[];\n  edges_bold?: boolean[] | string[];\n}\n\nexport interface Ontology {\n  class_name: string;\n  display_name?: string;\n  display_color?: string;\n  label_config?: string;\n  label_config_dynamic?: string;\n  shortcut?: string;\n  description?: string;\n  children?: {\n    name: string;\n    display_name?: string;\n    display_color?: string;\n    count?: number | null;\n    min_count?: number | null;\n    max_count?: number | null;\n    label_config?: string;\n    label_config_point?: string;\n    label_config_groups?: ({\n      attributes: any;\n    } & Styles)[];\n    label_config_point_groups?: ({\n      attributes: any;\n    } & Styles)[];\n    // legacy tool config\n    type?: string;\n    edges?: number | null;\n    // current tool config\n    tools?: ({\n      type: string;\n      snapshot?: boolean | string;\n      bbox?: boolean | string;\n      edges?: number | null;\n      models?: string | string[] | boolean;\n      methods?: string | string[];\n      config?: any; // custom config for differnet tools\n      modelConfig?: Record<string, any>; // config for different models\n    } & Styles)[];\n  }[];\n}\n\nexport interface Category {\n  className: string;\n  displayName: string;\n  displayColor: string;\n  labelConfig?: LabelConfig;\n  labelConfigDynamic?: LabelConfig;\n  shortcut?: CategoryHotkey;\n  children: CategoryItem[];\n  description?: string;\n}\n\nexport interface CategoryHotkey {\n  key: string;\n  shiftKey: boolean;\n  ctrlKey: boolean;\n  altKey: boolean;\n}\n\nexport interface ColorConfig {\n  fillColor?: number;\n  pointColor?: number;\n  edgeColor?: number;\n  color: string;\n}\n\nexport interface CategoryItem {\n  name: string;\n  displayName: string;\n  displayColor: string;\n  count?: number;\n  minCount?: number;\n  maxCount?: number;\n  labelConfig?: LabelConfig;\n  pointLabelConfig?: LabelConfig;\n  labelConfigGroups?: ({\n    attributes: any;\n  } & ToolStyles)[];\n  pointLabelConfigGroups?: ({\n    attributes: any;\n  } & ToolStyles)[];\n  tools: ToolItem[];\n  edges?: number;\n}\n\nexport interface ToolItem extends ToolStyles {\n  type: Tool;\n  snapshot?: boolean;\n  bbox?: boolean;\n  edges?: number;\n  models?: CVModel[];\n  methods?: ToolCreateMethod[];\n  config?: ToolConfig;\n  modelConfig?: {\n    [CVModel.TRAFFIC_SIGN]?: TrafficSignModelConfig;\n  };\n}\n\nexport interface ToolStyles {\n  fillColor?: string;\n  pointColor?: string;\n  pointType?: string;\n  edgeColor?: string;\n  edgeType?: string;\n  edgeBold?: boolean;\n  pointsColor?: string[];\n  pointsType?: string[];\n  edgesColor?: string[];\n  edgesType?: string[];\n  edgesBold?: boolean[];\n}\n\nexport enum CVModel {\n  DEFAULT = 'default', // legacy model (for polygon & rectangles)\n  TRAFFIC_SIGN = 'traffic-sign',\n  // specific models\n  SEGMENTATION = 'segmentation',\n  OBJECT_DETECTION = 'object-detection',\n  OBJECT_DETECTION_MULTI = 'object-detection-multi',\n}\nexport type TrafficSignModelConfig = TrafficSignModelMapping[];\nexport interface TrafficSignModelMapping {\n  type: TrafficSignModelMappingType;\n  field: string;\n  options: {\n    value: FieldValue;\n    data: TrafficSignModelData[];\n  }[];\n}\nexport enum TrafficSignModelMappingType {\n  INSTANCE = 'instance',\n  ITEM = 'instance-item',\n}\nexport interface TrafficSignModelData {\n  category: string;\n  main_class: string;\n  sub_class: string;\n}\n\nexport interface RectangleConfig {\n  ratio?: number;\n  auxiliaryLines?: {\n    type: 'vertical' | 'horizonal';\n    color: string;\n    value: number;\n    start: number;\n    end: number;\n  }[];\n}\nexport interface OrientedQuadPrismToolConfig {\n  displayIndexes?: (string | undefined)[];\n  upright?: boolean;\n}\nexport interface KeypointsConfig {\n  groups: {\n    name: string;\n    range: [number, number];\n  }[];\n  lines: {\n    points: number[];\n    color?: string;\n    type?: string;\n  }[];\n}\nexport type ToolConfig = RectangleConfig | OrientedQuadPrismToolConfig | KeypointsConfig;\n\nexport interface LabelConfig {\n  fields: Field[];\n  conditions?: Condition[];\n  effects?: Effect[];\n  rules?: Rule[];\n}\n\nexport interface FieldConfig {\n  name: string;\n  type: FieldControlType;\n  label?: string;\n  options?: FieldOption[];\n}\n\nexport enum LabelItem {\n  CATEGORY = 'category', // instance category\n  NUMBER = 'number', // instance number\n  ATTRIBUTE_KEYS = 'attribute-keys', // instance attribute key\n  ATTRIBUTE_VALUES = 'attribute-values', // instance attribute value\n  ITEM_NAME = 'item-name', // instance item name\n  ITEM_NUMBER = 'item-number', // instance item number\n  ITEM_ATTRIBUTE_KEYS = 'item-attribute-keys', // instance item attribute key\n  ITEM_ATTRIBUTE_VALUES = 'item-attribute-values', // instance item attribute value\n  TOOL_NAME = 'tool-name', // shape type\n  SHAPE_AREA = 'shape-area', // shape area\n}\n\nexport enum LabelStyle {\n  DEFAULT = 'default',\n  TRANSPARENT = 'transparent'\n}\n\nexport enum LabelFormat {\n  DEFAULT = 'default',\n  COMPRESSED = 'compressed',\n}\n\nexport interface InspectLabel {\n  fields: string[];\n  extraParams: InspectLabelParams[];\n  style: InspectLabelStyle;\n}\n\nexport enum InspectLabelParams {\n  INSTANCE_ID = 'instanceId'\n}\n\nexport interface InspectLabelStyle {\n  fontSize: number;\n  color: InspectLabelColor;\n}\n\nexport type InspectLabelColor = string | 'BY_SHAPE';\n\nexport enum ShapeInfoItem {\n  AREA = 'area',\n}\n\nexport interface Instance {\n  id: string;\n  category: string;\n  categoryName?: string;\n  categoryColor?: string;\n  number: number;\n  attributes?: any;\n  dynamicAttributes?: InstanceDynamicAttributes[];\n  children: InstanceItem[];\n}\n\nexport interface InstanceDynamicAttributes {\n  camera: CameraName;\n  frames: DynamicAttributes[];\n}\n\nexport interface DynamicAttributes {\n  frameIndex: Frame;\n  attributes?: any;\n}\n\nexport interface InstanceItem {\n  id: string;\n  name: string;\n  number: number;\n  cameras: CameraData[];\n}\n\nexport interface CameraData {\n  camera: CameraName;\n  frames: FrameData[];\n}\n\nexport interface FrameData {\n  frameIndex: Frame;\n  isKeyFrame: boolean;\n  isRaw?: boolean;\n  isLocked?: boolean;\n  shapeType: ShapeType;\n  shape: ShapeData;\n  layer: number;\n  order?: number;\n  attributes?: any;\n  isOCR?: boolean;\n  OCRText?: string;\n  isFormula?: boolean;\n  formulaText?: string;\n  preAnnotationData?: IPreAnnotationData;\n  createWorker: string;\n  createWorkerName: string;\n  createTime: number;\n  updateWorker: string;\n  updateWorkerName: string;\n  updateTime: number;\n}\n\nexport interface IPreAnnotationData {\n  editMode?: EditMode;\n}\n\n/**\n * 1st: size & position (including shape delete)\n * 2nd: category (& number)\n * 3rd: attributes\n * 4th?: number (if not provided, use 2nd)\n * 5th?: delete (if not provided, use 1st)\n */\nexport type EditMode =\n  '000' | '001' | '010' | '100' | '011' | '101' | '110' | '111' |\n  '0000' | '0010' | '0100' | '1000' | '0110' | '1010' | '1100' | '1110' |\n  '0001' | '0011' | '0101' | '1001' | '0111' | '1011' | '1101' | '1111' |\n  '00000' | '00100' | '01000' | '10000' | '01100' | '10100' | '11000' | '11100' |\n  '00010' | '00110' | '01010' | '10010' | '01110' | '10110' | '11010' | '11110' |\n  '00001' | '00101' | '01001' | '10001' | '01101' | '10101' | '11001' | '11101' |\n  '00011' | '00111' | '01011' | '10011' | '01111' | '10111' | '11011' | '11111';\n\nexport enum DisplayValidationType {\n  // default\n  INVALID_SHAPE = 'invalid_shape',\n  OUT_OF_BOUNDARY = 'out_of_boundary',\n  // config\n  EMPTY_AREA = 'empty_area',\n  FULLY_COVERED = 'fully_covered',\n  ITEM_COUNT = 'item_count',\n  ATTR_VALID = 'attr_valid',\n  FRAME_ATTR_VALID = 'frame_attr_valid',\n  FRAME_COMMON_ATTR_VALID = 'frame_common_attr_valid',\n  // script\n  CUSTOM = 'custom',\n  SCRIPT = 'script',\n}\nexport enum ValidationType {\n  INVALID_SHAPE = 'invalid_shape',\n  OUT_OF_BOUNDARY = 'out_of_boundary',\n  EMPTY_AREA = 'empty_area',\n  FULLY_COVERED = 'fully_covered',\n  ITEM_COUNT = 'item_count',\n  ATTR_VALID = 'attr_valid',\n  FRAME_ATTR_VALID = 'frame_attr_valid',\n  FRAME_COMMON_ATTR_VALID = 'frame_common_attr_valid',\n  CUSTOM = 'custom',\n  SCRIPT = 'script',\n  // extends\n  KEYPOINTS_FINISH = 'keypoints_finish', // INVALID_SHAPE\n  FRAME_VALID_ANNOTATE = 'frame_valid_annotate', // FRAME_ATTR_VALID\n  FRAME_COMMON_VALID_ANNOTATE = 'frame_common_valid_annotate', // FRAME_COMMON_ATTR_VALID\n  MIN_AREA = 'min_area', // INVALID_SHAPE\n}\n\nexport interface ValidationResult {\n  type: DisplayValidationType;\n  actualType: ValidationType;\n  id: string;\n  message: string;\n  frames: number[];\n  info?: {\n    instanceId?: string;\n    instanceItemId?: string;\n    camera?: string;\n    type?: ValidationInfoType;\n    pixels?: RLE;\n    pixelsData?: PixelsData;\n    pixelsVisible?: boolean;\n    [key: string]: any;\n  };\n  blockSubmit?: boolean;\n}\n\nexport enum ValidationInfoType {\n  HIGHLIGHT = 'highlight',\n}\n\nexport interface HotkeyItem {\n  key: string;\n  affected: string;\n  type: string;\n  color?: string;\n  shape?: string;\n  attributes: {\n    [attr: string]: any;\n  };\n}\n\nexport enum ContinuousModeType {\n  DEFAULT = 'default',\n  IN_INSTANCE = 'in_instance',\n}\n\nexport enum ViewMode {\n  DEFAULT = 'default',\n  GRID = 'grid',\n}\n\nexport enum ReviewMode {\n  LABELING = 'labeling',\n  REVIEW = 'review',\n}\n\nexport interface CanvasConfig {\n  gridVisible: boolean;\n  gap?: number;\n}\n\nexport enum AttributesMode {\n  HIDE = 'hide',\n  HOVER = 'hover',\n  ALWAYS = 'always',\n}\nexport enum SoloMode {\n  INSTANCE = 'instance',\n  ITEM = 'item',\n}\n\nexport enum PredictiveMode {\n  SELECTED_INSTANCE = 'selected_instance',\n  SELECTED_ITEM = 'selected_item',\n  NONE = 'none',\n}\n\nexport interface TagProps {\n  name: string;\n  prefix?: string;\n  suffix?: string;\n  shortcut?: string;\n  text?: string;\n}\n\nexport interface TagGroupProps {\n  name: string;\n  type: string;\n  tags: TagProps[];\n}\n\nexport enum ReviewResult {\n  APPROVE = 'approve',\n  REJECT = 'reject',\n  SUSPEND = 'suspend',\n}\n\nexport interface Summary {\n  ids: string[]\n  category: string;\n  shape?: Tool;\n  count: number;\n  distinctCount: number;\n}\n\nexport interface Element {\n  id: string;\n  shape?: Tool;\n  frame: Frame;\n  category: string;\n  label?: { [key: string]: string };\n}\n\nexport enum ShapeModifyType {\n  CREATE = 'create',\n  UPDATE = 'update',\n  DELETE = 'delete',\n}\n\nexport interface ModifiedStat {\n  shape?: Tool;\n  count: number;\n  create: number;\n  update: number;\n  delete: number;\n}\n\nexport interface Statistic {\n  elements: Element[];\n  categories: string[];\n  shapes: Set<any>;\n  summary: { [key: string]: Summary };\n  frameCount: number;\n  validFrames: Set<any>;\n  annotatedFrames: Set<any>;\n  instanceCount: number;\n  distinctInstanceCount: number;\n  pixelCount: number;\n  pixelInnerPolygonCount: number;\n  pixelOuterPolygonCount: number;\n}\n\nexport interface Review {\n  id: string;\n  camera: CameraName;\n  frameIndex: Frame;\n  result: ReviewResult;\n  type?: string[];\n  comment?: string;\n  instanceId?: string; // related instance\n  instanceItemId?: string; // related instance item\n  position: {\n    x: number;\n    y: number;\n  };\n  workerName?: string;\n}\n\nexport interface FrameAttributes {\n  frameIndex: Frame;\n  imageUrl?: string;\n  imageUrls?: string[];\n  imageWidth?: number;\n  imageHeight?: number;\n  valid: boolean;\n  originValid?: boolean;\n  rotation: number;\n  attributes?: any;\n}\n\nexport interface CameraFrameAttributes {\n  camera: CameraName;\n  frames: FrameAttributes[];\n}\n\nexport interface CommonFrameAttributes {\n  frameIndex: Frame;\n  attributes?: any;\n}\n\nexport interface CommonFrameAttributesResult extends CommonFrameAttributes {\n  valid: boolean;\n}\n\nexport interface RelationshipOption {\n  name: string;\n  color?: string;\n  labelConfig?: string;\n}\n\nexport interface RelationshipItem {\n  instance: string;\n  child: string;\n  camera: CameraName;\n}\n\nexport interface RelationshipFrame {\n  frameIndex: Frame;\n  attributes?: any;\n}\n\nexport interface Relationship {\n  id: string;\n  from: RelationshipItem;\n  to: RelationshipItem;\n  relationship: string;\n  frames?: RelationshipFrame[];\n}\n\nexport interface Attributes {\n  frames?: CommonFrameAttributesResult[];\n}\n\nexport interface AuxiliaryLineConfig {\n  positionType: 'percentage' | 'px';\n  positionValue: number;\n  color: number;\n}\n\nexport interface AuxiliaryLines {\n  left: AuxiliaryLineConfig[];\n  top: AuxiliaryLineConfig[];\n  right: AuxiliaryLineConfig[];\n  bottom: AuxiliaryLineConfig[];\n}\n\nexport interface ImageFilters {\n  brightness?: number;\n  contrast?: number;\n  saturation?: number;\n  gamma?: number;\n}\n\nexport interface ImageFiltersPresets {\n  name: string;\n  brightness?: number;\n  contrast?: number;\n  saturation?: number;\n  gamma?: number;\n};\nexport interface CameraFilters {\n  [camera: CameraName]: {\n    keep?: boolean;\n    global?: ImageFilters;\n    frames: {\n      [frameIndex: Frame]: ImageFilters;\n    }\n  }\n}\n\nexport enum CameraLayout {\n  COL2 = 'col-2',\n  COL3 = 'col-3',\n  THUMBNAIL = 'thumbnail'\n}\n\nexport enum DraggableType {\n  INSTANCE = 'instance',\n  ITEM = 'instance-item',\n}\n\nexport enum ShapeFocusMode {\n  ZOOM = 'zoom',\n  ZOOM_KEEP = 'zoom-keep',\n}\n\nexport interface FormulaTemplate {\n  global?: FormulaTemplateItem[];\n  categories?: {\n    [category: string]: FormulaTemplateItem[];\n  };\n}\nexport interface FormulaTemplateItem {\n  name?: string;\n  value: string;\n}\n\nexport interface PreferencesConfig {\n  zoomStep?: number;\n  zoomTogether?: boolean;\n  crossLineVisible?: boolean;\n  continuousMode?: boolean;\n  showCurrPosition?: boolean;\n  dblclickFinish?: boolean;\n  shapeRotateMode?: ShapeRotateMode;\n  shapeRotateHandleMode?: ShapeRotateHandleMode;\n  shapeFocusMode?: ShapeFocusMode;\n  showShapeAuxiliaryLines?: boolean;\n  showPixelShapeBounds?: boolean;\n  autoOpenAttributesModal?: boolean;\n  autoSnapTolerance?: number;\n  [key: string]: unknown;\n}\n\nexport enum PixelToolMode {\n  PLUS = 'plus',\n  MINUS = 'minus',\n  NONE = 'none',\n}\n\nexport enum NumberingMode {\n  GLOBAL = 'global',\n  BY_CATEGORY = 'by_category',\n}\n\nexport enum InstanceItemNumberingMode {\n  GLOBAL = 'global',\n  BY_INSTANCE = 'by_instance',\n}\n\nexport enum MeasurerType {\n  DISTANCE = 'distance',\n  AREA = 'area',\n}\n\nexport interface LabelResult {\n  auditId: string;\n  statistics: string;\n  instances: Instance[];\n  frames: CameraFrameAttributes[];\n  relationships: Relationship[];\n  attributes: Attributes;\n  // other info. eg. templateConfig\n  [key: string]: any;\n}\n\nexport interface TrackingStatsData {\n  elementStats: CommonStatsData;\n}\n\ninterface CommonStatsData {\n  totalCnt: number;\n  modifiedCnt: number;\n  createdCnt: number;\n  deletedCnt: number;\n}\n\nexport enum FilterDisplayMode {\n  LIST = 'list',\n  SNAPSHOT = 'snapshot',\n}\n\nexport enum FilterDisplayRange {\n  ALL = 'all',\n  SELECTED = 'selected',\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}