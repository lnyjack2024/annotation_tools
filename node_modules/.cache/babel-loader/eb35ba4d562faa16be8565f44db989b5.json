{"ast":null,"code":"import { action, makeObservable, observable } from 'mobx';\nimport { cloneDeep } from 'lodash';\nimport OntologyStore from './OntologyStore';\nimport ConfigStore from './ConfigStore';\nimport FrameStore from './FrameStore';\nimport InstanceStore from './InstanceStore';\nimport ShapeStore from './ShapeStore';\nimport UndoStore from './UndoStore';\nimport ReviewsStore from './ReviewStore';\nimport i18n from '../locales';\nimport { loadInstancesFromResult, getToolTypeFromFrameData } from '../utils';\nimport { ReviewMode } from '../types';\nimport { isAnnotationReadonly, isReviewEditable, isRework, isPreview, isTemplatePreview, ToolMode } from '../../../utils/tool-mode';\n\n/**\n * root store\n * @class\n */\nclass RootStore {\n  /**\n   * is tool readonly (annotate not allowed)\n   */\n  get readonly() {\n    return isAnnotationReadonly(this.jobProxy.toolMode) || this.config.reviewMode === ReviewMode.REVIEW;\n  }\n\n  /**\n   * is tool annotate allowed\n   */\n  get annotatable() {\n    return !isAnnotationReadonly(this.jobProxy.toolMode);\n  }\n\n  /**\n   * is tool review enabled\n   */\n  get reviewable() {\n    return isReviewEditable(this.jobProxy.toolMode);\n  }\n\n  /**\n   * is tool in labeling mode or template preview mode\n   */\n  get isLabeling() {\n    return this.jobProxy.toolMode === ToolMode.LABELING || this.isTemplatePreview;\n  }\n\n  /**\n   * is tool in rework mode\n   */\n  get isRework() {\n    return isRework(this.jobProxy.toolMode);\n  }\n\n  /**\n   * is tool in preview mode\n   */\n  get isPreview() {\n    return isPreview(this.jobProxy.toolMode);\n  }\n\n  /**\n   * is tool in template preview mode\n   */\n  get isTemplatePreview() {\n    return isTemplatePreview(this.jobProxy.toolMode);\n  }\n  constructor() {\n    this.ontology = void 0;\n    this.config = void 0;\n    this.frame = void 0;\n    this.instance = void 0;\n    this.shape = void 0;\n    this.undo = void 0;\n    this.review = void 0;\n    /**\n     * job proxy\n     */\n    this.jobProxy = void 0;\n    /**\n     * initial data copy\n     */\n    this.initialData = null;\n    /**\n     * is tool initialized\n     */\n    this.initialized = false;\n    /**\n     * when screenfull requested\n     */\n    this.fullscreenRequested = false;\n    /**\n     * get instance statistics\n     */\n    this.getInstanceStatistics = () => {\n      const {\n        categories\n      } = this.ontology;\n      const data = {\n        elements: [],\n        categories: categories.map(({\n          className\n        }) => className),\n        shapes: new Set(),\n        summary: {},\n        frameCount: this.frame.frameCount,\n        validFrames: new Set(),\n        annotatedFrames: new Set(),\n        instanceCount: 0,\n        distinctInstanceCount: 0\n      };\n      const instances = Object.values(this.instance.instances);\n      for (let i = 0; i < instances.length; i += 1) {\n        const {\n          id,\n          category,\n          items: objItems,\n          attributes\n        } = instances[i];\n        const items = Object.values(objItems);\n        const instanceFrames = new Set();\n        for (let j = 0; j < items.length; j += 1) {\n          const item = items[j];\n          const cameras = Object.values(item.cameras);\n          for (let k = 0; k < cameras.length; k += 1) {\n            const camera = cameras[k];\n            const frames = Object.values(camera.frames);\n            for (let l = 0; l < frames.length; l += 1) {\n              const frame = frames[l];\n              const shape = getToolTypeFromFrameData(frame);\n              data.shapes.add(shape);\n              const key = `${shape}_${category}`;\n              if (!data.summary[key]) {\n                data.summary[key] = {\n                  ids: [id],\n                  category,\n                  shape,\n                  count: 1,\n                  distinctCount: 0\n                };\n              } else {\n                data.summary[key].count += 1;\n                if (!data.summary[key].ids.includes(id)) {\n                  data.summary[key].distinctCount += 1;\n                  data.summary[key].ids.push(id);\n                }\n              }\n              instanceFrames.add(frame.frameIndex);\n              data.annotatedFrames.add(frame.frameIndex);\n              data.elements.push({\n                id,\n                shape,\n                frame: frame.frameIndex + 1,\n                category,\n                label: attributes\n              });\n            }\n          }\n        }\n        data.instanceCount += instanceFrames.size;\n        data.distinctInstanceCount += 1;\n      }\n      return {\n        ...data,\n        shapes: Array.from(data.shapes),\n        summary: Object.values(data.summary).map(({\n          category,\n          shape,\n          count,\n          distinctCount\n        }) => ({\n          category,\n          shape,\n          count,\n          distinctCount\n        })),\n        annotatedFrames: Array.from(data.annotatedFrames),\n        annotatedFrameCount: data.annotatedFrames.size,\n        validFrameCount: data.validFrames.size\n      };\n    };\n    /**\n     * save file\n     * @param file\n     */\n    this.saveFile = file => this.jobProxy.saveFile(file);\n    /**\n     * delete selected shape point or instance if possible\n     */\n    this.delete = () => {\n      if (this.readonly || this.config.isAnyModalOpened || this.shape.isDrawing) {\n        return;\n      }\n      this.shape.delete();\n    };\n    /**\n     * add instance item to current frame\n     * @param instanceItem\n     * @param camera\n     */\n    this.addToCurrentFrame = (instanceItem, camera = this.frame.currentCamera) => {\n      this.shape.addShapeToInstanceItem(instanceItem, camera);\n    };\n    /**\n     * move shape up\n     * @param toTop\n     */\n    this.moveFront = (toTop = false) => {\n      if (this.readonly || this.config.isAnyModalOpened || this.shape.isDrawing || !this.instance.isSingleSelected) {\n        return;\n      }\n      this.shape.moveFront(toTop);\n    };\n    /**\n     * move shape down\n     * @param toBottom\n     */\n    this.moveBack = (toBottom = false) => {\n      if (this.readonly || this.config.isAnyModalOpened || this.shape.isDrawing || !this.instance.isSingleSelected) {\n        return;\n      }\n      this.shape.moveBack(toBottom);\n    };\n    this.toggleAddMode = () => {\n      if (this.config.reviewMode === ReviewMode.LABELING) {\n        this.config.setAddMode(!this.config.addMode);\n      } else {\n        this.review.setAddMode(!this.review.addMode);\n      }\n    };\n    this.activateTool = num => {\n      if (this.config.reviewMode === ReviewMode.LABELING) {\n        this.ontology.activateCategoryItemByIndex(num === 0 ? 9 : num - 1);\n      } else {\n        this.review.activateReviewByHotkey(num);\n      }\n    };\n    this.openAttributesModal = () => {\n      if (this.readonly || this.shape.isDrawing) {\n        return;\n      }\n\n      // open point attributes modal\n      const {\n        selectedShapes,\n        selectedPointIndex,\n        shapes\n      } = this.shape;\n      if (selectedShapes.length === 1 && selectedPointIndex >= 0) {\n        const selectedShape = selectedShapes[0];\n        const {\n          instanceItem\n        } = shapes[selectedShape.uid];\n        const frameData = instanceItem.cameras[this.frame.currentCamera].frames[this.frame.currentFrame];\n        const {\n          pointLabelConfig\n        } = instanceItem.categoryItemRef;\n        if (frameData && pointLabelConfig) {\n          this.config.setPointAttributesModalVisible(true);\n          return;\n        }\n      }\n\n      // open instance & items attributes modal\n      if (this.instance.selectedInstanceAttributesEnabled) {\n        this.config.setAttributesModalVisible(true);\n      }\n    };\n    this.ontology = new OntologyStore(this);\n    this.config = new ConfigStore(this);\n    this.frame = new FrameStore(this);\n    this.instance = new InstanceStore(this);\n    this.shape = new ShapeStore(this);\n    this.undo = new UndoStore(this);\n    this.review = new ReviewsStore(this);\n    makeObservable(this, {\n      initialized: observable,\n      init: action\n    });\n  }\n  async init(payload) {\n    let initError = '';\n    const appendError = msg => {\n      initError = `${initError ? '; ' : ''}${msg}`;\n    };\n\n    // init common stores\n    this.ontology.init(payload);\n    this.config.init(payload);\n\n    // load frames\n    await this.frame.init(payload);\n\n    // load result & init instances\n    try {\n      await this.loadResult();\n    } catch (e) {\n      appendError(i18n.translate('ANNOTATION_DATA_LOAD_ERROR'));\n    }\n\n    // load & init reviews\n    try {\n      await this.loadReviews(payload);\n    } catch (e) {\n      appendError(i18n.translate('REVIEW_DATA_LOAD_ERROR'));\n    }\n\n    // init shapes\n    this.shape.init(payload);\n    this.initialized = true;\n\n    // throw error\n    if (initError) {\n      throw new Error(initError);\n    }\n  }\n\n  /**\n   * load annotation result\n   */\n  async loadResult() {\n    const savedResult = await this.jobProxy.loadSavedResult();\n    const reviewFromResult = await this.jobProxy.loadReviewFrom();\n\n    // copy initial data\n    if (reviewFromResult) {\n      this.initialData = cloneDeep({\n        instances: reviewFromResult.instances,\n        frames: reviewFromResult.frames\n      });\n    }\n    const result = savedResult || reviewFromResult;\n    if (!result) {\n      return;\n    }\n    if (result.auditId) {\n      this.jobProxy.setAuditId(result.auditId);\n    }\n    // set frame attributes\n    this.frame.initAttributes(result);\n    // load instance\n    this.instance.init(loadInstancesFromResult(result));\n  }\n\n  /**\n   * save annotation result\n   */\n  async saveResult(submit = false) {\n    const statData = this.getInstanceStatistics();\n    const statistics = await this.jobProxy.saveResultStat(statData);\n    const instances = this.instance.instancesJSON();\n    const frames = this.frame.framesJSON();\n    return this.jobProxy.saveResult({\n      auditId: this.jobProxy.auditId,\n      instances,\n      frames,\n      statistics,\n      templateConfig: this.jobProxy.templateConfig\n    }, submit);\n  }\n\n  /**\n   * load reviews result\n   * @param payload\n   */\n  async loadReviews(payload) {\n    const result = await this.jobProxy.loadReviews();\n    this.review.init(payload, (result === null || result === void 0 ? void 0 : result.reviews) || result);\n  }\n\n  /**\n   * save review result\n   */\n  async saveReviews(submit = false) {\n    const reviews = this.review.reviewsJSON();\n    const statData = this.review.getReviewStatistics();\n    const statistics = await this.jobProxy.saveReviewStat(statData);\n    return this.jobProxy.saveReviews({\n      reviews,\n      review_statistics: statistics\n    }, submit);\n  }\n}\nconst rootStore = new RootStore();\nexport default rootStore;","map":{"version":3,"names":["action","makeObservable","observable","cloneDeep","OntologyStore","ConfigStore","FrameStore","InstanceStore","ShapeStore","UndoStore","ReviewsStore","i18n","loadInstancesFromResult","getToolTypeFromFrameData","ReviewMode","isAnnotationReadonly","isReviewEditable","isRework","isPreview","isTemplatePreview","ToolMode","RootStore","readonly","jobProxy","toolMode","config","reviewMode","REVIEW","annotatable","reviewable","isLabeling","LABELING","constructor","ontology","frame","instance","shape","undo","review","initialData","initialized","fullscreenRequested","getInstanceStatistics","categories","data","elements","map","className","shapes","Set","summary","frameCount","validFrames","annotatedFrames","instanceCount","distinctInstanceCount","instances","Object","values","i","length","id","category","items","objItems","attributes","instanceFrames","j","item","cameras","k","camera","frames","l","add","key","ids","count","distinctCount","includes","push","frameIndex","label","size","Array","from","annotatedFrameCount","validFrameCount","saveFile","file","delete","isAnyModalOpened","isDrawing","addToCurrentFrame","instanceItem","currentCamera","addShapeToInstanceItem","moveFront","toTop","isSingleSelected","moveBack","toBottom","toggleAddMode","setAddMode","addMode","activateTool","num","activateCategoryItemByIndex","activateReviewByHotkey","openAttributesModal","selectedShapes","selectedPointIndex","selectedShape","uid","frameData","currentFrame","pointLabelConfig","categoryItemRef","setPointAttributesModalVisible","selectedInstanceAttributesEnabled","setAttributesModalVisible","init","payload","initError","appendError","msg","loadResult","e","translate","loadReviews","Error","savedResult","loadSavedResult","reviewFromResult","loadReviewFrom","result","auditId","setAuditId","initAttributes","saveResult","submit","statData","statistics","saveResultStat","instancesJSON","framesJSON","templateConfig","reviews","saveReviews","reviewsJSON","getReviewStatistics","saveReviewStat","review_statistics","rootStore"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking2/store/RootStore.ts"],"sourcesContent":["import { action, makeObservable, observable } from 'mobx';\nimport { cloneDeep } from 'lodash';\nimport OntologyStore from './OntologyStore';\nimport ConfigStore from './ConfigStore';\nimport FrameStore from './FrameStore';\nimport InstanceStore from './InstanceStore';\nimport ShapeStore from './ShapeStore';\nimport UndoStore from './UndoStore';\nimport ReviewsStore from './ReviewStore';\nimport InstanceItem from '../model/InstanceItem';\nimport i18n from '../locales';\nimport { loadInstancesFromResult, getToolTypeFromFrameData } from '../utils';\nimport { Payload, Statistic, ReviewMode } from '../types';\nimport JobProxy from '../../../libs/JobProxy';\nimport { isAnnotationReadonly, isReviewEditable, isRework, isPreview, isTemplatePreview, ToolMode } from '../../../utils/tool-mode';\n\n/**\n * root store\n * @class\n */\nclass RootStore {\n  ontology: OntologyStore;\n\n  config: ConfigStore;\n\n  frame: FrameStore;\n\n  instance: InstanceStore;\n\n  shape: ShapeStore;\n\n  undo: UndoStore;\n\n  review: ReviewsStore;\n\n  /**\n   * job proxy\n   */\n  jobProxy?: JobProxy;\n\n  /**\n   * initial data copy\n   */\n  initialData: any = null;\n\n  /**\n   * is tool initialized\n   */\n  initialized = false;\n\n  /**\n   * when screenfull requested\n   */\n  fullscreenRequested = false;\n\n  /**\n   * is tool readonly (annotate not allowed)\n   */\n  get readonly() {\n    return isAnnotationReadonly(this.jobProxy!.toolMode) || this.config.reviewMode === ReviewMode.REVIEW;\n  }\n\n  /**\n   * is tool annotate allowed\n   */\n  get annotatable() {\n    return !isAnnotationReadonly(this.jobProxy!.toolMode);\n  }\n\n  /**\n   * is tool review enabled\n   */\n  get reviewable() {\n    return isReviewEditable(this.jobProxy!.toolMode);\n  }\n\n  /**\n   * is tool in labeling mode or template preview mode\n   */\n  get isLabeling() {\n    return this.jobProxy!.toolMode === ToolMode.LABELING || this.isTemplatePreview;\n  }\n\n  /**\n   * is tool in rework mode\n   */\n  get isRework() {\n    return isRework(this.jobProxy!.toolMode);\n  }\n\n  /**\n   * is tool in preview mode\n   */\n  get isPreview() {\n    return isPreview(this.jobProxy!.toolMode);\n  }\n\n  /**\n   * is tool in template preview mode\n   */\n  get isTemplatePreview() {\n    return isTemplatePreview(this.jobProxy!.toolMode);\n  }\n\n  constructor() {\n    this.ontology = new OntologyStore(this);\n    this.config = new ConfigStore(this);\n    this.frame = new FrameStore(this);\n    this.instance = new InstanceStore(this);\n    this.shape = new ShapeStore(this);\n    this.undo = new UndoStore(this);\n    this.review = new ReviewsStore(this);\n\n    makeObservable(this, {\n      initialized: observable,\n      init: action,\n    });\n  }\n\n  async init(payload: Payload) {\n    let initError = '';\n    const appendError = (msg: string) => {\n      initError = `${initError ? '; ' : ''}${msg}`;\n    };\n\n    // init common stores\n    this.ontology.init(payload);\n    this.config.init(payload);\n\n    // load frames\n    await this.frame.init(payload);\n\n    // load result & init instances\n    try {\n      await this.loadResult();\n    } catch (e) {\n      appendError(i18n.translate('ANNOTATION_DATA_LOAD_ERROR'));\n    }\n\n    // load & init reviews\n    try {\n      await this.loadReviews(payload);\n    } catch (e) {\n      appendError(i18n.translate('REVIEW_DATA_LOAD_ERROR'));\n    }\n\n    // init shapes\n    this.shape.init(payload);\n    this.initialized = true;\n\n    // throw error\n    if (initError) {\n      throw new Error(initError);\n    }\n  }\n\n  /**\n   * load annotation result\n   */\n  async loadResult() {\n    const savedResult = await this.jobProxy!.loadSavedResult();\n    const reviewFromResult = await this.jobProxy!.loadReviewFrom();\n\n    // copy initial data\n    if (reviewFromResult) {\n      this.initialData = cloneDeep({\n        instances: reviewFromResult.instances,\n        frames: reviewFromResult.frames,\n      });\n    }\n\n    const result = savedResult || reviewFromResult;\n    if (!result) {\n      return;\n    }\n    if (result.auditId) {\n      this.jobProxy!.setAuditId(result.auditId);\n    }\n    // set frame attributes\n    this.frame.initAttributes(result);\n    // load instance\n    this.instance.init(loadInstancesFromResult(result));\n  }\n\n  /**\n   * save annotation result\n   */\n  async saveResult(submit = false) {\n    const statData = this.getInstanceStatistics();\n    const statistics = await this.jobProxy!.saveResultStat(statData);\n    const instances = this.instance.instancesJSON();\n    const frames = this.frame.framesJSON();\n    return this.jobProxy!.saveResult({\n      auditId: this.jobProxy!.auditId,\n      instances,\n      frames,\n      statistics,\n      templateConfig: this.jobProxy!.templateConfig,\n    }, submit);\n  }\n\n  /**\n   * load reviews result\n   * @param payload\n   */\n  async loadReviews(payload: Payload) {\n    const result = await this.jobProxy!.loadReviews();\n    this.review.init(payload, result?.reviews || result);\n  }\n\n  /**\n   * save review result\n   */\n  async saveReviews(submit = false) {\n    const reviews = this.review.reviewsJSON();\n    const statData = this.review.getReviewStatistics();\n    const statistics = await this.jobProxy!.saveReviewStat(statData);\n    return this.jobProxy!.saveReviews({\n      reviews,\n      review_statistics: statistics,\n    }, submit);\n  }\n\n  /**\n   * get instance statistics\n   */\n  getInstanceStatistics = () => {\n    const { categories } = this.ontology;\n    const data: Statistic = {\n      elements: [],\n      categories: categories.map(({ className }) => className),\n      shapes: new Set(),\n      summary: {},\n      frameCount: this.frame.frameCount,\n      validFrames: new Set(),\n      annotatedFrames: new Set(),\n      instanceCount: 0,\n      distinctInstanceCount: 0,\n    };\n\n    const instances = Object.values(this.instance.instances);\n    for (let i = 0; i < instances.length; i += 1) {\n      const { id, category, items: objItems, attributes } = instances[i];\n      const items = Object.values(objItems);\n      const instanceFrames = new Set();\n      for (let j = 0; j < items.length; j += 1) {\n        const item = items[j];\n        const cameras = Object.values(item.cameras);\n        for (let k = 0; k < cameras.length; k += 1) {\n          const camera = cameras[k];\n          const frames = Object.values(camera.frames);\n          for (let l = 0; l < frames.length; l += 1) {\n            const frame = frames[l];\n            const shape = getToolTypeFromFrameData(frame);\n            data.shapes.add(shape);\n            const key = `${shape}_${category}`;\n            if (!data.summary[key]) {\n              data.summary[key] = {\n                ids: [id],\n                category,\n                shape,\n                count: 1,\n                distinctCount: 0,\n              };\n            } else {\n              data.summary[key].count += 1;\n              if (!data.summary[key].ids.includes(id)) {\n                data.summary[key].distinctCount += 1;\n                data.summary[key].ids.push(id);\n              }\n            }\n            instanceFrames.add(frame.frameIndex);\n            data.annotatedFrames.add(frame.frameIndex);\n            data.elements.push({\n              id,\n              shape,\n              frame: frame.frameIndex + 1,\n              category,\n              label: attributes,\n            });\n          }\n        }\n      }\n      data.instanceCount += instanceFrames.size;\n      data.distinctInstanceCount += 1;\n    }\n\n    return {\n      ...data,\n      shapes: Array.from(data.shapes),\n      summary: Object.values(data.summary).map(({ category, shape, count, distinctCount }) => ({\n        category,\n        shape,\n        count,\n        distinctCount,\n      })),\n      annotatedFrames: Array.from(data.annotatedFrames),\n      annotatedFrameCount: data.annotatedFrames.size,\n      validFrameCount: data.validFrames.size,\n    };\n  };\n\n  /**\n   * save file\n   * @param file\n   */\n  saveFile = (file: File) => this.jobProxy!.saveFile(file);\n\n  /**\n   * delete selected shape point or instance if possible\n   */\n  delete = () => {\n    if (this.readonly || this.config.isAnyModalOpened || this.shape.isDrawing) {\n      return;\n    }\n    this.shape.delete();\n  };\n\n  /**\n   * add instance item to current frame\n   * @param instanceItem\n   * @param camera\n   */\n  addToCurrentFrame = (instanceItem: InstanceItem, camera = this.frame.currentCamera) => {\n    this.shape.addShapeToInstanceItem(instanceItem, camera);\n  };\n\n  /**\n   * move shape up\n   * @param toTop\n   */\n  moveFront = (toTop = false) => {\n    if (\n      this.readonly ||\n      this.config.isAnyModalOpened ||\n      this.shape.isDrawing ||\n      !this.instance.isSingleSelected\n    ) {\n      return;\n    }\n    this.shape.moveFront(toTop);\n  };\n\n  /**\n   * move shape down\n   * @param toBottom\n   */\n  moveBack = (toBottom = false) => {\n    if (\n      this.readonly ||\n      this.config.isAnyModalOpened ||\n      this.shape.isDrawing ||\n      !this.instance.isSingleSelected\n    ) {\n      return;\n    }\n    this.shape.moveBack(toBottom);\n  };\n\n  toggleAddMode = () => {\n    if (this.config.reviewMode === ReviewMode.LABELING) {\n      this.config.setAddMode(!this.config.addMode);\n    } else {\n      this.review.setAddMode(!this.review.addMode);\n    }\n  };\n\n  activateTool = (num: number) => {\n    if (this.config.reviewMode === ReviewMode.LABELING) {\n      this.ontology.activateCategoryItemByIndex(num === 0 ? 9 : num - 1);\n    } else {\n      this.review.activateReviewByHotkey(num);\n    }\n  };\n\n  openAttributesModal = () => {\n    if (this.readonly || this.shape.isDrawing) {\n      return;\n    }\n\n    // open point attributes modal\n    const { selectedShapes, selectedPointIndex, shapes } = this.shape;\n    if (selectedShapes.length === 1 && selectedPointIndex >= 0) {\n      const selectedShape = selectedShapes[0];\n      const { instanceItem } = shapes[selectedShape.uid];\n      const frameData = instanceItem.cameras[this.frame.currentCamera].frames[this.frame.currentFrame];\n      const { pointLabelConfig } = instanceItem.categoryItemRef;\n      if (frameData && pointLabelConfig) {\n        this.config.setPointAttributesModalVisible(true);\n        return;\n      }\n    }\n\n    // open instance & items attributes modal\n    if (this.instance.selectedInstanceAttributesEnabled) {\n      this.config.setAttributesModalVisible(true);\n    }\n  };\n}\n\nconst rootStore = new RootStore();\nexport default rootStore;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}