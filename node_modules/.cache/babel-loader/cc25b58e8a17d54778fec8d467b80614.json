{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/question-answering/components/answers/Answer.tsx\";\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { toJS } from 'mobx';\nimport cx from 'classnames';\nimport ChatItem, { ChatItemType } from '../../../common/llm/chat/ChatItem';\nimport { Sortable } from '../../../common/icons';\nimport store from '../../store';\nconst Answer = observer(({\n  draggableProvided,\n  draggableSnapshot,\n  index,\n  answer\n}) => {\n  var _store$selectedAnswer;\n  const selected = answer.id === ((_store$selectedAnswer = store.selectedAnswer) === null || _store$selectedAnswer === void 0 ? void 0 : _store$selectedAnswer.id);\n  const valueEditable = !store.readonly && (!answer.original || store.editable);\n  const rankEditable = !store.readonly && store.ranking;\n  return /*#__PURE__*/React.createElement(ChatItem, {\n    dragging: store.isDraggingAnswer,\n    draggableProvided: draggableProvided,\n    draggableSnapshot: draggableSnapshot,\n    type: ChatItemType.A,\n    label: \"A\",\n    value: toJS(answer.value),\n    onValueChange: value => store.updateAnswer(answer, value),\n    originalValue: toJS(answer.originalValue),\n    error: selected && store.hasError,\n    selected: selected,\n    onSelect: () => store.selectAnswer(answer),\n    valueEditable: valueEditable,\n    valueEditing: selected && store.isEditingAnswer,\n    onValueEdit: () => store.editAnswer(answer),\n    rankingType: store.rankingType,\n    rankingOptions: toJS(store.rankingOptions),\n    rankEditable: rankEditable,\n    rankEditing: selected && store.isRankingAnswer,\n    onRankEdit: () => store.rankAnswer(answer),\n    rank: toJS(answer.rank),\n    onRankChange: rank => store.saveRank(answer, rank),\n    attributesEditable: !store.readonly,\n    itemAttributesConfig: store.itemAttributesConfig,\n    attributesEditing: selected && store.isItemAttributesEditing,\n    attributes: toJS(answer.attributes),\n    onItemAttributesEdit: () => store.onItemAttributesEdit(answer),\n    onItemAttributesChange: attributes => store.saveItemAttributes(answer, attributes),\n    onItemAttributesDelete: () => store.deleteItemAttributes(answer),\n    prefix: /*#__PURE__*/React.createElement(\"div\", Object.assign({}, draggableProvided.dragHandleProps, {\n      className: cx('chat-item-sorter', {\n        sortable: store.sortable\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }), store.sortable && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat-item-sorter-handle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Sortable, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, `A ${index + 1}`)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  });\n});\nexport default Answer;","map":{"version":3,"names":["React","observer","toJS","cx","ChatItem","ChatItemType","Sortable","store","Answer","draggableProvided","draggableSnapshot","index","answer","_store$selectedAnswer","selected","id","selectedAnswer","valueEditable","readonly","original","editable","rankEditable","ranking","createElement","dragging","isDraggingAnswer","type","A","label","value","onValueChange","updateAnswer","originalValue","error","hasError","onSelect","selectAnswer","valueEditing","isEditingAnswer","onValueEdit","editAnswer","rankingType","rankingOptions","rankEditing","isRankingAnswer","onRankEdit","rankAnswer","rank","onRankChange","saveRank","attributesEditable","itemAttributesConfig","attributesEditing","isItemAttributesEditing","attributes","onItemAttributesEdit","onItemAttributesChange","saveItemAttributes","onItemAttributesDelete","deleteItemAttributes","prefix","Object","assign","dragHandleProps","className","sortable","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/question-answering/components/answers/Answer.tsx"],"sourcesContent":["import React from 'react';\nimport { observer } from 'mobx-react';\nimport { toJS } from 'mobx';\nimport cx from 'classnames';\nimport type { DraggableProvided, DraggableStateSnapshot } from 'react-beautiful-dnd';\nimport ChatItem, { ChatItemType } from '../../../common/llm/chat/ChatItem';\nimport { Sortable } from '../../../common/icons';\nimport MAnswer from '../../models/Answer';\nimport store from '../../store';\n\ninterface AnswerProps {\n  draggableProvided: DraggableProvided;\n  draggableSnapshot: DraggableStateSnapshot;\n  index: number;\n  answer: MAnswer;\n}\n\nconst Answer: React.FC<AnswerProps> = observer(({\n  draggableProvided,\n  draggableSnapshot,\n  index,\n  answer,\n}) => {\n  const selected = answer.id === store.selectedAnswer?.id;\n  const valueEditable = !store.readonly && (!answer.original || store.editable);\n  const rankEditable = !store.readonly && store.ranking;\n\n  return (\n    <ChatItem\n      dragging={store.isDraggingAnswer}\n      draggableProvided={draggableProvided}\n      draggableSnapshot={draggableSnapshot}\n      type={ChatItemType.A}\n      label=\"A\"\n      value={toJS(answer.value)}\n      onValueChange={(value) => store.updateAnswer(answer, value)}\n      originalValue={toJS(answer.originalValue)}\n      error={selected && store.hasError}\n      selected={selected}\n      onSelect={() => store.selectAnswer(answer)}\n      valueEditable={valueEditable}\n      valueEditing={selected && store.isEditingAnswer}\n      onValueEdit={() => store.editAnswer(answer)}\n      rankingType={store.rankingType}\n      rankingOptions={toJS(store.rankingOptions)}\n      rankEditable={rankEditable}\n      rankEditing={selected && store.isRankingAnswer}\n      onRankEdit={() => store.rankAnswer(answer)}\n      rank={toJS(answer.rank)}\n      onRankChange={(rank) => store.saveRank(answer, rank)}\n      attributesEditable={!store.readonly}\n      itemAttributesConfig={store.itemAttributesConfig}\n      attributesEditing={selected && store.isItemAttributesEditing}\n      attributes={toJS(answer.attributes)}\n      onItemAttributesEdit={() => store.onItemAttributesEdit(answer)}\n      onItemAttributesChange={(attributes) => store.saveItemAttributes(answer, attributes)}\n      onItemAttributesDelete={() => store.deleteItemAttributes(answer)}\n      prefix={(\n        <div\n          {...draggableProvided.dragHandleProps}\n          className={cx('chat-item-sorter', {\n            sortable: store.sortable,\n          })}\n        >\n          {store.sortable && (\n            <div className=\"chat-item-sorter-handle\">\n              <Sortable />\n            </div>\n          )}\n          <div>\n            {`A ${index + 1}`}\n          </div>\n        </div>\n      )}\n    />\n  );\n});\n\nexport default Answer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}