{"ast":null,"code":"/*:: import type {CellDataGetterParams} from './types';*/\n/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref /*:: */) {\n  var dataKey = _ref /*:: */.dataKey,\n    rowData = _ref /*:: */.rowData;\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}","map":{"version":3,"names":["defaultCellDataGetter","_ref","dataKey","rowData","get"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js"],"sourcesContent":["/*:: import type {CellDataGetterParams} from './types';*/\n/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref /*:: */) {\n  var dataKey = _ref /*:: */.dataKey,\n    rowData = _ref /*:: */.rowData;\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,qBAAqBA,CAACC,IAAI,CAAC,SAAS;EAC1D,IAAIC,OAAO,GAAGD,IAAI,CAAC,QAAQC,OAAO;IAChCC,OAAO,GAAGF,IAAI,CAAC,QAAQE,OAAO;EAChC,IAAI,OAAOA,OAAO,CAACC,GAAG,KAAK,UAAU,EAAE;IACrC,OAAOD,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;EAC7B,CAAC,MAAM;IACL,OAAOC,OAAO,CAACD,OAAO,CAAC;EACzB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module"}