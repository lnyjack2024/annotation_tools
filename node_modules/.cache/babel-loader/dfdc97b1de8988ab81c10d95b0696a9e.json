{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/common/shapes/wrapper/AppWrapper.tsx\";\nimport React from 'react';\nimport { BitmapFont } from 'pixi.js';\nimport { Application } from 'pixi.js-legacy';\nexport let RendererType = /*#__PURE__*/function (RendererType) {\n  RendererType[\"WEBGL\"] = \"webgl\";\n  RendererType[\"CANVAS\"] = \"canvas\";\n  return RendererType;\n}({});\nconst contextTypeStoreOneTimeKey = 'renderer-context-type';\nfunction getRendererType() {\n  const type = localStorage.getItem(contextTypeStoreOneTimeKey);\n  if (Object.values(RendererType).includes(type)) {\n    // remove stored key\n    localStorage.removeItem(contextTypeStoreOneTimeKey);\n    return type;\n  }\n  return RendererType.WEBGL;\n}\nexport function setRendererType(type) {\n  localStorage.setItem(contextTypeStoreOneTimeKey, type);\n  window.location.reload();\n}\nconst AppWrapper = (WrappedComponent, options) => class App extends React.Component {\n  constructor(props) {\n    super(props);\n    /**\n     * component ref\n     */\n    this.ref = React.createRef();\n    /**\n     * PIXI application\n     */\n    this.app = void 0;\n    this.updateResolution = () => {\n      this.app.renderer.resolution = window.devicePixelRatio;\n      this.app.renderer.plugins.interaction.resolution = window.devicePixelRatio;\n      this.app.renderer.emit('resolution-changed');\n    };\n    const type = getRendererType();\n    const forceCanvas = type === RendererType.CANVAS;\n    this.app = new Application({\n      forceCanvas,\n      antialias: true,\n      // autoDensity: true,\n      resolution: window.devicePixelRatio,\n      backgroundAlpha: 0\n    });\n  }\n  componentDidMount() {\n    if (options) {\n      const {\n        mappingMethods\n      } = options;\n      if (mappingMethods) {\n        mappingMethods.forEach(methodName => {\n          this[methodName] = this.ref.current[methodName];\n        });\n      }\n    }\n    window.matchMedia('screen and (min-resolution: 2dppx)').addEventListener('change', this.updateResolution);\n    // set scale mode to nearest (pixel based)\n    // settings.SCALE_MODE = SCALE_MODES.NEAREST;\n    // load default bitmap font\n    BitmapFont.from('ALPHA_NUMERIC', {\n      fontFamily: 'Arial',\n      fontSize: 12,\n      lineHeight: 14,\n      fill: '#FFFFFF',\n      dropShadow: true,\n      dropShadowAlpha: 0.8,\n      dropShadowBlur: 2,\n      dropShadowDistance: 1\n    });\n  }\n  componentWillUnmount() {\n    this.app.destroy(true, {\n      children: true,\n      texture: true,\n      baseTexture: true\n    });\n    window.matchMedia('screen and (min-resolution: 2dppx)').removeEventListener('change', this.updateResolution);\n  }\n  setCursor(cursor) {\n    this.app.view.style.cursor = cursor;\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(WrappedComponent, Object.assign({\n      ref: this.ref\n    }, this.props, {\n      app: this.app,\n      setCursor: this.setCursor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }));\n  }\n};\nexport default AppWrapper;","map":{"version":3,"names":["React","BitmapFont","Application","RendererType","contextTypeStoreOneTimeKey","getRendererType","type","localStorage","getItem","Object","values","includes","removeItem","WEBGL","setRendererType","setItem","window","location","reload","AppWrapper","WrappedComponent","options","App","Component","constructor","props","ref","createRef","app","updateResolution","renderer","resolution","devicePixelRatio","plugins","interaction","emit","forceCanvas","CANVAS","antialias","backgroundAlpha","componentDidMount","mappingMethods","forEach","methodName","current","matchMedia","addEventListener","from","fontFamily","fontSize","lineHeight","fill","dropShadow","dropShadowAlpha","dropShadowBlur","dropShadowDistance","componentWillUnmount","destroy","children","texture","baseTexture","removeEventListener","setCursor","cursor","view","style","render","createElement","assign","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/common/shapes/wrapper/AppWrapper.tsx"],"sourcesContent":["import React from 'react';\nimport { BitmapFont, settings, SCALE_MODES } from 'pixi.js';\nimport { Application } from 'pixi.js-legacy';\nimport Cursor from '../../Cursor';\n\nexport enum RendererType {\n  WEBGL = 'webgl',\n  CANVAS = 'canvas',\n}\nconst contextTypeStoreOneTimeKey = 'renderer-context-type';\nfunction getRendererType() {\n  const type = localStorage.getItem(contextTypeStoreOneTimeKey);\n  if (Object.values(RendererType).includes(type as RendererType)) {\n    // remove stored key\n    localStorage.removeItem(contextTypeStoreOneTimeKey);\n    return type;\n  }\n  return RendererType.WEBGL;\n}\nexport function setRendererType(type: RendererType) {\n  localStorage.setItem(contextTypeStoreOneTimeKey, type);\n  window.location.reload();\n}\n\ninterface Options {\n  mappingMethods?: string[];\n}\n\nconst AppWrapper = (WrappedComponent: any, options?: Options) => class App extends React.Component {\n  /**\n   * component ref\n   */\n  ref = React.createRef<any>();\n\n  /**\n   * PIXI application\n   */\n  app: Application;\n\n  [param: string]: any;\n\n  constructor(props: any) {\n    super(props);\n\n    const type = getRendererType();\n    const forceCanvas = type === RendererType.CANVAS;\n    this.app = new Application({\n      forceCanvas,\n      antialias: true,\n      // autoDensity: true,\n      resolution: window.devicePixelRatio,\n      backgroundAlpha: 0,\n    });\n  }\n\n  componentDidMount() {\n    if (options) {\n      const { mappingMethods } = options;\n      if (mappingMethods) {\n        mappingMethods.forEach((methodName: string) => {\n          this[methodName] = this.ref.current[methodName];\n        });\n      }\n    }\n    window.matchMedia('screen and (min-resolution: 2dppx)').addEventListener('change', this.updateResolution);\n    // set scale mode to nearest (pixel based)\n    // settings.SCALE_MODE = SCALE_MODES.NEAREST;\n    // load default bitmap font\n    BitmapFont.from('ALPHA_NUMERIC', {\n      fontFamily: 'Arial',\n      fontSize: 12,\n      lineHeight: 14,\n      fill: '#FFFFFF',\n      dropShadow: true,\n      dropShadowAlpha: 0.8,\n      dropShadowBlur: 2,\n      dropShadowDistance: 1,\n    });\n  }\n\n  componentWillUnmount() {\n    this.app.destroy(true, {\n      children: true,\n      texture: true,\n      baseTexture: true,\n    });\n    window.matchMedia('screen and (min-resolution: 2dppx)').removeEventListener('change', this.updateResolution);\n  }\n\n  updateResolution = () => {\n    this.app.renderer.resolution = window.devicePixelRatio;\n    this.app.renderer.plugins.interaction.resolution = window.devicePixelRatio;\n    this.app.renderer.emit('resolution-changed');\n  };\n\n  setCursor(cursor: Cursor) {\n    this.app.view.style.cursor = cursor;\n  }\n\n  render() {\n    return (\n      <WrappedComponent\n        ref={this.ref}\n        {...this.props}\n        app={this.app}\n        setCursor={this.setCursor}\n      />\n    );\n  }\n};\n\nexport default AppWrapper;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}