{"ast":null,"code":"import React from'react';import cx from'classnames';import{observer}from'mobx-react';import formatMessage from'../locales';import{CategoryPathShape}from'../types';import'./Sidebar.scss';import rootStore from'../store/RootStore';const SideBar=_ref=>{let{categories=[],selectedShapeStatus,categoryPathShapes={},points={},selectedPoint,readonly,groupReviewsMap,setSelectedPoint}=_ref;const renderCategory=pointCategory=>{const{name,range=[],keys=[]}=pointCategory;if(range.length<2){return null;}const allPoints=Array.from({length:range[1]-range[0]+1}).map((_,index)=>range[0]+index);return/*#__PURE__*/React.createElement(\"div\",{key:name,className:\"pointCategory\"},/*#__PURE__*/React.createElement(\"div\",{className:\"name\"},name,categoryPathShapes[\"\".concat(selectedShapeStatus===null||selectedShapeStatus===void 0?void 0:selectedShapeStatus.frameIndex,\"_\").concat(selectedShapeStatus===null||selectedShapeStatus===void 0?void 0:selectedShapeStatus.instanceId,\"_\").concat(selectedShapeStatus===null||selectedShapeStatus===void 0?void 0:selectedShapeStatus.groupName,\"_\").concat(name)]===CategoryPathShape.CIRCLE?\"(\".concat(formatMessage('CATEGORY_CIRCLE'),\")\"):''),/*#__PURE__*/React.createElement(\"div\",{className:\"points-container\"},allPoints.map(p=>/*#__PURE__*/React.createElement(\"div\",{key:p,className:cx('point-box',groupReviewsMap&&groupReviewsMap[p])},/*#__PURE__*/React.createElement(\"div\",{className:cx('point',{'point--key':keys.includes(p),'point--empty':!points[p]||!points[p].position,'point--selected':p===selectedPoint||rootStore.shape.selectedShapes.includes(p),'point--invisible':points[p]&&points[p].visible===false,'point--disabeld':!rootStore.review.drawMode&&(!points[p]||!points[p].position)}),onClick:()=>{if(!readonly){// Empty point cannot be clicked in non-drawing mode\nif(!rootStore.review.drawMode&&(!points[p]||!points[p].position))return;setSelectedPoint(p);}}},p)))));};return/*#__PURE__*/React.createElement(\"div\",{className:\"sidebar\"},categories.map(c=>renderCategory(c)));};export default observer(SideBar);","map":{"version":3,"names":["React","cx","observer","formatMessage","CategoryPathShape","rootStore","SideBar","_ref","categories","selectedShapeStatus","categoryPathShapes","points","selectedPoint","readonly","groupReviewsMap","setSelectedPoint","renderCategory","pointCategory","name","range","keys","length","allPoints","Array","from","map","_","index","createElement","key","className","concat","frameIndex","instanceId","groupName","CIRCLE","p","includes","position","shape","selectedShapes","visible","review","drawMode","onClick","c"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/keypoint/components/Sidebar.tsx"],"sourcesContent":["import React from 'react';\nimport cx from 'classnames';\nimport { observer } from 'mobx-react';\nimport formatMessage from '../locales';\nimport { CategoryItem, CategoryPathShape, Point, ShapeInfo } from '../types';\nimport './Sidebar.scss';\nimport rootStore from '../store/RootStore';\nimport { PointReviewResult } from '../store/ReviewsStore';\n\ninterface Props {\n  categories: CategoryItem[];\n  selectedShapeStatus: ShapeInfo | undefined;\n  categoryPathShapes: {[categoryKey: string]: CategoryPathShape};\n  points: {\n    [index: number]: Point;\n  };\n  selectedPoint: number;\n  readonly: boolean;\n  groupReviewsMap?: PointReviewResult;\n  setSelectedPoint: (point: number) => void;\n}\n\nconst SideBar = ({\n  categories = [],\n  selectedShapeStatus,\n  categoryPathShapes = {},\n  points = {},\n  selectedPoint,\n  readonly,\n  groupReviewsMap,\n  setSelectedPoint,\n}: Props) => {\n  const renderCategory = (pointCategory: CategoryItem) => {\n    const { name, range = [], keys = [] } = pointCategory;\n    if (range.length < 2) {\n      return null;\n    }\n    const allPoints = Array.from({ length: range[1] - range[0] + 1 }).map((_, index) => range[0] + index);\n    return (\n      <div key={name} className=\"pointCategory\">\n        <div className=\"name\">\n          {name}\n          {categoryPathShapes[`${selectedShapeStatus?.frameIndex}_${selectedShapeStatus?.instanceId}_${selectedShapeStatus?.groupName}_${name}`] === CategoryPathShape.CIRCLE ? `(${formatMessage('CATEGORY_CIRCLE')})` : ''}\n        </div>\n        <div className=\"points-container\">\n          {allPoints.map((p) => (\n            <div\n              key={p}\n              className={cx('point-box', groupReviewsMap && groupReviewsMap[p])}\n            >\n              <div\n                className={cx('point', {\n                  'point--key': keys.includes(p),\n                  'point--empty': !points[p] || !points[p].position,\n                  'point--selected': p === selectedPoint || (rootStore.shape.selectedShapes as number[]).includes(p),\n                  'point--invisible': points[p] && points[p].visible === false,\n                  'point--disabeld': !rootStore.review.drawMode && (!points[p] || !points[p].position),\n                })}\n                onClick={() => {\n                  if (!readonly) {\n                    // Empty point cannot be clicked in non-drawing mode\n                    if (!rootStore.review.drawMode && (!points[p] || !points[p].position)) return;\n                    setSelectedPoint(p);\n                  }\n                }}\n              >\n                {p}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"sidebar\">\n      {categories.map((c) => renderCategory(c))}\n    </div>\n  );\n};\n\nexport default observer(SideBar);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}