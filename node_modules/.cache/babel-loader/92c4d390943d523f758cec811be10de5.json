{"ast":null,"code":"import{action,makeObservable,observable}from'mobx';import{ToolMode,isAnnotationReadonly,isPreview,isReviewEditable,isRework,isTemplatePreview}from'src/utils/tool-mode';import{ReviewItemResult}from'../types';import ConfigStore from'./ConfigStore';import ValidationStore from'./ValidationStore';import OntologyStore from'./OntologyStore';import ReviewStore from'./ReviewStore';/**\n * root store\n * @class\n */class RootStore{/**\n   * is tool readonly (annotate not allowed)\n   */get readonly(){return isAnnotationReadonly(this.jobProxy.toolMode);}/**\n   * is tool annotate allowed\n   */get annotatable(){return!isAnnotationReadonly(this.jobProxy.toolMode);}/**\n   * is tool review enabled\n   */get reviewable(){return isReviewEditable(this.jobProxy.toolMode);}/**\n   * is tool in labeling mode or template preview mode\n   */get isLabeling(){return this.jobProxy.toolMode===ToolMode.LABELING||this.isTemplatePreview;}/**\n   * is tool in rework mode\n   */get isRework(){return isRework(this.jobProxy.toolMode);}/**\n   * is tool in preview mode\n   */get isPreview(){return isPreview(this.jobProxy.toolMode);}/**\n   * is tool in template preview mode\n   */get isTemplatePreview(){return isTemplatePreview(this.jobProxy.toolMode);}constructor(){/**\n   * is tool initialized\n   */this.initialized=false;/**\n   * ontology from payload\n   */this.ontology=void 0;/**\n   * review from payload\n   */this.review=void 0;/**\n   * config from payload\n   */this.config=void 0;/**\n   * results contain label results and reviews and text\n   */ // data = new DataProxy();\n/**\n   * validation\n   */this.validation=void 0;/**\n   * job proxy\n   */this.jobProxy=void 0;/**\n* get tag statistics\n*/this.getTagStatistics=()=>{const data={totalCount:0,summary:[]};data.summary=[];this.ontology.getOntologiesStatusMap().forEach((value,key)=>{if(key===ReviewItemResult.MISSING){return;}if(value.tagCount){data.totalCount+=value.tagCount;data.summary.push({count:value.tagCount,shape:key,keys:value.keys});}});return{...data};};/**\n   * get audit statistics\n   */this.getAuditStatistics=()=>{// all shapes\nconst objects={total:0,approved:0,rejected:0,missed:0,actualApproved:0};// based on different shape types\nconst shapes={};this.ontology.updateOntologiesStatusMap();this.ontology.getOntologiesStatusMap().forEach((value,key)=>{if(key===ReviewItemResult.MISSING){objects.missed=value.tagCount;return;}if(!shapes[key]){shapes[key]={total:0,approved:0,rejected:0,actualApproved:0};}if(value.tagCount){objects.total+=value.tagCount;shapes[key].total=value.tagCount;}let hasRejected=false;if(value.rejectCount){objects.rejected+=value.rejectCount;shapes[key].rejected=value.rejectCount;hasRejected=true;}if(hasRejected){objects.approved+=value.tagCount-value.rejectCount;shapes[key].approved=value.tagCount-value.rejectCount;}else{objects.approved+=value.tagCount;shapes[key].approved=value.tagCount;}if(value.approveCount){objects.actualApproved+=value.approveCount;shapes[key].actualApproved=value.approveCount;}else{shapes[key].actualApproved=0;}});return{objects,shapes};};this.ontology=new OntologyStore(this);this.review=new ReviewStore(this);this.config=new ConfigStore(this);this.validation=new ValidationStore(this);makeObservable(this,{initialized:observable,init:action});}async init(payload){// init common stores\nthis.ontology.init(payload);this.review.init(payload);this.config.init(payload);this.initialized=true;// this.data.text = payload.content;\n}async saveResult(){var _this$jobProxy;let isSubmit=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;return(_this$jobProxy=this.jobProxy)===null||_this$jobProxy===void 0?void 0:_this$jobProxy.saveResult({content:this.ontology.text,results:this.ontology.getResults(false),auditId:this.jobProxy.auditId},isSubmit);}getReviewStatistics(){// all shapes\nconst objects={total:0,approved:0,rejected:0,missed:0,actualApproved:0};const summary=[];const approvedEleMap={};const rejectedEleMap={};this.ontology.updateOntologiesStatusMap();this.ontology.getOntologiesStatusMap().forEach((value,key)=>{if(key===ReviewItemResult.MISSING){objects.missed=value.tagCount;return;}if(value.tagCount){objects.total+=value.tagCount;summary.push({count:value.tagCount,shape:key,keys:value.keys});}let hasRejected=false;if(value.rejectCount){objects.rejected+=value.rejectCount;rejectedEleMap[key]=value.rejectCount;hasRejected=true;}if(hasRejected){objects.approved+=value.tagCount-value.rejectCount;}else{objects.approved+=value.tagCount;}if(value.approveCount){objects.actualApproved+=value.approveCount;approvedEleMap[key]=value.approveCount;}});return{elements:{approved:{...approvedEleMap},rejected:{...rejectedEleMap}},summary,objects};}/**\n * save review result\n */async saveReviews(){let submit=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;const reviews=this.review.getReviews();const statData=this.getReviewStatistics();return this.jobProxy.saveReviews({reviews},submit);}}const rootStore=new RootStore();export default rootStore;","map":{"version":3,"names":["action","makeObservable","observable","ToolMode","isAnnotationReadonly","isPreview","isReviewEditable","isRework","isTemplatePreview","ReviewItemResult","ConfigStore","ValidationStore","OntologyStore","ReviewStore","RootStore","readonly","jobProxy","toolMode","annotatable","reviewable","isLabeling","LABELING","constructor","initialized","ontology","review","config","validation","getTagStatistics","data","totalCount","summary","getOntologiesStatusMap","forEach","value","key","MISSING","tagCount","push","count","shape","keys","getAuditStatistics","objects","total","approved","rejected","missed","actualApproved","shapes","updateOntologiesStatusMap","hasRejected","rejectCount","approveCount","init","payload","saveResult","_this$jobProxy","isSubmit","arguments","length","undefined","content","text","results","getResults","auditId","getReviewStatistics","approvedEleMap","rejectedEleMap","elements","saveReviews","submit","reviews","getReviews","statData","rootStore"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/editable-text/store/RootStore.ts"],"sourcesContent":["import { action, makeObservable, observable } from 'mobx';\nimport { ToolMode, isAnnotationReadonly, isPreview, isReviewEditable, isRework, isTemplatePreview } from 'src/utils/tool-mode';\nimport { AuditStatistics, Payload, ReviewItemResult, ReviewStatistics, Statistics, SummaryItem } from '../types';\nimport JobProxy from '../../../libs/JobProxy';\nimport ConfigStore from './ConfigStore';\nimport ValidationStore from './ValidationStore';\nimport OntologyStore from './OntologyStore';\nimport ReviewStore from './ReviewStore';\n\n/**\n * root store\n * @class\n */\nclass RootStore {\n  /**\n   * is tool initialized\n   */\n  initialized = false;\n\n  /**\n   * ontology from payload\n   */\n  ontology: OntologyStore;\n\n  /**\n   * review from payload\n   */\n  review: ReviewStore;\n\n  /**\n   * config from payload\n   */\n  config: ConfigStore;\n\n  /**\n   * results contain label results and reviews and text\n   */\n  // data = new DataProxy();\n\n  /**\n   * validation\n   */\n  validation: ValidationStore;\n\n  /**\n   * job proxy\n   */\n  jobProxy?: JobProxy;\n\n  /**\n   * is tool readonly (annotate not allowed)\n   */\n  get readonly() {\n    return isAnnotationReadonly(this.jobProxy!.toolMode);\n  }\n\n  /**\n   * is tool annotate allowed\n   */\n  get annotatable() {\n    return !isAnnotationReadonly(this.jobProxy!.toolMode);\n  }\n\n  /**\n   * is tool review enabled\n   */\n  get reviewable() {\n    return isReviewEditable(this.jobProxy!.toolMode);\n  }\n\n  /**\n   * is tool in labeling mode or template preview mode\n   */\n  get isLabeling() {\n    return this.jobProxy!.toolMode === ToolMode.LABELING || this.isTemplatePreview;\n  }\n\n  /**\n   * is tool in rework mode\n   */\n  get isRework() {\n    return isRework(this.jobProxy!.toolMode);\n  }\n\n  /**\n   * is tool in preview mode\n   */\n  get isPreview() {\n    return isPreview(this.jobProxy!.toolMode);\n  }\n\n  /**\n   * is tool in template preview mode\n   */\n  get isTemplatePreview() {\n    return isTemplatePreview(this.jobProxy!.toolMode);\n  }\n\n  constructor() {\n    this.ontology = new OntologyStore(this);\n    this.review = new ReviewStore(this);\n    this.config = new ConfigStore(this);\n    this.validation = new ValidationStore(this);\n\n    makeObservable(this, {\n      initialized: observable,\n      init: action,\n    });\n  }\n\n  async init(payload: Payload) {\n    // init common stores\n    this.ontology.init(payload);\n    this.review.init(payload);\n    this.config.init(payload);\n    this.initialized = true;\n    // this.data.text = payload.content;\n  }\n\n  /**\n* get tag statistics\n*/\n  getTagStatistics = () => {\n    const data: Statistics = {\n      totalCount: 0,\n      summary: [],\n    };\n    data.summary = [];\n    this.ontology.getOntologiesStatusMap().forEach((value, key) => {\n      if (key === ReviewItemResult.MISSING) {\n        return;\n      }\n      if (value.tagCount) {\n        data.totalCount += value.tagCount;\n        data.summary.push({\n          count: value.tagCount,\n          shape: key,\n          keys: value.keys\n        });\n      }\n    });\n\n    return {\n      ...data,\n\n    };\n  };\n\n  async saveResult(isSubmit = false) {\n    return this.jobProxy?.saveResult({\n      content: this.ontology.text,\n      results: this.ontology.getResults(false),\n      auditId: this.jobProxy.auditId,\n    }, isSubmit);\n\n  }\n\n  getReviewStatistics(): ReviewStatistics {\n    // all shapes\n    const objects = { total: 0, approved: 0, rejected: 0, missed: 0, actualApproved: 0 };\n    const summary: SummaryItem[] = [];\n    const approvedEleMap: {\n      [type: string]: number;\n    } = {};\n    const rejectedEleMap: {\n      [type: string]: number;\n    } = {};\n    this.ontology.updateOntologiesStatusMap();\n    this.ontology.getOntologiesStatusMap().forEach((value, key) => {\n      if (key === ReviewItemResult.MISSING) {\n        objects.missed = value.tagCount;\n        return;\n      }\n      if (value.tagCount) {\n        objects.total += value.tagCount;\n        summary.push({\n          count: value.tagCount,\n          shape: key,\n          keys: value.keys\n        });\n      }\n      let hasRejected = false;\n\n      if (value.rejectCount) {\n        objects.rejected += value.rejectCount;\n        rejectedEleMap[key] = value.rejectCount;\n        hasRejected = true;\n      }\n      if (hasRejected) {\n        objects.approved += (value.tagCount - value.rejectCount!);\n      } else {\n        objects.approved += value.tagCount;\n      }\n      if (value.approveCount) {\n        objects.actualApproved += value.approveCount;\n        approvedEleMap[key] = value.approveCount;\n      }\n    });\n\n    return {\n      elements: {\n        approved: { ...approvedEleMap },\n        rejected: { ...rejectedEleMap },\n      },\n      summary,\n      objects,\n    };\n  }\n\n  /**\n * save review result\n */\n  async saveReviews(submit = false) {\n    const reviews = this.review.getReviews();\n    const statData = this.getReviewStatistics();\n    return this.jobProxy!.saveReviews({\n      reviews,\n    }, submit);\n  }\n\n  /**\n   * get audit statistics\n   */\n  getAuditStatistics = (): AuditStatistics => {\n    // all shapes\n    const objects = { total: 0, approved: 0, rejected: 0, missed: 0, actualApproved: 0 };\n    // based on different shape types\n    const shapes: {\n      [shape: string]: { total: number; approved: number; rejected: number; actualApproved: number };\n    } = {};\n    this.ontology.updateOntologiesStatusMap();\n    this.ontology.getOntologiesStatusMap().forEach((value, key) => {\n      if (key === ReviewItemResult.MISSING) {\n        objects.missed = value.tagCount;\n        return;\n      }\n      if (!shapes[key]) {\n        shapes[key] = { total: 0, approved: 0, rejected: 0, actualApproved: 0 };\n      }\n      if (value.tagCount) {\n        objects.total += value.tagCount;\n        shapes[key].total = value.tagCount;\n      }\n      let hasRejected = false;\n      if (value.rejectCount) {\n        objects.rejected += value.rejectCount;\n        shapes[key].rejected = value.rejectCount;\n        hasRejected = true;\n      }\n      if (hasRejected) {\n        objects.approved += (value.tagCount - value.rejectCount!);\n        shapes[key].approved = value.tagCount - value.rejectCount!;\n      } else {\n        objects.approved += value.tagCount;\n        shapes[key].approved = value.tagCount;\n      }\n      if (value.approveCount) {\n        objects.actualApproved += value.approveCount;\n        shapes[key].actualApproved = value.approveCount;\n      } else {\n        shapes[key].actualApproved = 0;\n      }\n    });\n    return {\n      objects,\n      shapes,\n    };\n  };\n}\n\nconst rootStore = new RootStore();\nexport default rootStore;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}