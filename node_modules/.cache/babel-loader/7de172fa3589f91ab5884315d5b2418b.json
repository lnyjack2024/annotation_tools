{"ast":null,"code":"import React from'react';import PropTypes from'prop-types';import{connect}from'react-redux';import hexToRgba from'hex-to-rgba';import{Input,Popover}from'antd';import{isEqual}from'lodash';import LineAbstractItem from'../LineAbstractItem/LineAbstractItem';import{defaultColor,formatTimestamp,translate,attributeType}from'../../../constants';import QAAcceptIcon from'../../common/Icons/QAAcceptIcon';import QARejectIcon from'../../common/Icons/QARejectIcon';import{isRework,isQA}from'../../../../../utils/tool-mode';import{setAttributeFocusInfo}from'../../../redux/action';import{getFieldDisplayLabel}from'../../../../../utils/form';import'./SegmentAbstractItem.scss';class SegmentAbstractItem extends React.Component{constructor(props){super(props);this.getRowHeight=()=>{var _this$segmentAbstract;const height=(_this$segmentAbstract=this.segmentAbstractItemBox)===null||_this$segmentAbstract===void 0?void 0:_this$segmentAbstract.offsetHeight;this.props.onUpdate(height);};this.handleContainerClick=e=>{this.props.setCurrentSegment({index:this.props.segmentIndex});};this.handleAttributeClick=(e,key)=>{e.stopPropagation();this.props.setCurrentSegment({index:this.props.segmentIndex});this.props.setAttributeFocusInfo({segmentIndex:this.props.segmentIndex,type:attributeType.segment,key});};this.rowRef=React.createRef();}componentDidMount(){this.getRowHeight();}componentDidUpdate(prevProps){var _prevProps$segment,_this$props$segment,_prevProps$segment2,_this$props$segment2;if(!isEqual((_prevProps$segment=prevProps.segment)===null||_prevProps$segment===void 0?void 0:_prevProps$segment.content,(_this$props$segment=this.props.segment)===null||_this$props$segment===void 0?void 0:_this$props$segment.content)||!isEqual((_prevProps$segment2=prevProps.segment)===null||_prevProps$segment2===void 0?void 0:_prevProps$segment2.attributes,(_this$props$segment2=this.props.segment)===null||_this$props$segment2===void 0?void 0:_this$props$segment2.attributes)){this.getRowHeight();}}render(){const{currentSegment,ontology,segmentConfig,segmentFieldMap,segment,segmentIndex,toolMode,setCurrentSegment}=this.props;const color=ontology.get(segment.content[0].role)?hexToRgba(ontology.get(segment.content[0].role),defaultColor.defaultAlpha):'transparent';const validConfig=segmentConfig.fields.map(value=>value.name);return/*#__PURE__*/ (// eslint-disable-next-line react/jsx-filename-extension\nReact.createElement(\"div\",{onClick:e=>this.handleContainerClick(e),className:\"segment-abstract-item-container \".concat(currentSegment===segmentIndex?'segment-abstract-item-container-current':''),id:\"segment-abstract-item-\".concat(segmentIndex),ref:r=>{this.segmentAbstractItemBox=r;}},/*#__PURE__*/React.createElement(\"div\",{className:\"segment-abstract-item\",style:{borderLeft:\"6px solid \".concat(color)}},/*#__PURE__*/React.createElement(\"div\",{className:\"segment-abstract-item-index\"},segmentIndex+1),this.props.client!=='hw-translation'&&/*#__PURE__*/React.createElement(\"div\",{className:\"segment-abstract-item-timestamp\"},\"\".concat((segment.end-segment.start).toFixed(3),\"s (\").concat(formatTimestamp(segment.start),\"~\").concat(formatTimestamp(segment.end),\")\")),/*#__PURE__*/React.createElement(\"div\",{className:\"segment-abstract-item-qa-state\"},segment.qaChecked===undefined||!(isQA(toolMode)||isRework(toolMode))?null:/*#__PURE__*/React.createElement(Popover,{overlayStyle:{maxWidth:'30%'},mouseEnterDelay:0,mouseLeaveDelay:0,trigger:\"hover\",color:\"#2D2A34FF\",content:segment.qaChecked===false?/*#__PURE__*/React.createElement(\"div\",{style:{fontSize:'15px',color:'white'}},/*#__PURE__*/React.createElement(\"span\",{style:{fontSize:'18px',color:'white',fontWeight:'bolder'}},translate('qaReject')),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{style:{fontWeight:'bolder'}},\"\".concat(translate('reason'),\": \")),/*#__PURE__*/React.createElement(\"span\",null,segment.qaReason||''),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{style:{fontWeight:'bolder'}},\"\".concat(translate('comment'),\": \")),/*#__PURE__*/React.createElement(\"span\",null,segment.qaComment||'')):/*#__PURE__*/React.createElement(\"div\",{style:{fontSize:'15px',color:'white'}},translate('qaAccept'))},segment.qaChecked===true?/*#__PURE__*/React.createElement(QAAcceptIcon,{style:{width:'22px',cursor:'pointer'}}):/*#__PURE__*/React.createElement(QARejectIcon,{style:{width:'22px',cursor:'pointer'}})))),/*#__PURE__*/React.createElement(\"div\",{className:\"segment-abstract-attributes segment-abstract-row\",style:{borderLeft:\"6px solid \".concat(color)}},this.props.client!=='hw-translation'?/*#__PURE__*/React.createElement(React.Fragment,null,Object.keys(segment.attributes).map((key,index)=>(validConfig.indexOf(key)>=0||this.props.keyAttribute.name===key)&&segment.attributes[key]!==undefined?/*#__PURE__*/React.createElement(\"div\",{className:\"segment-abstract-attributes-item\"/* eslint-disable-next-line react/no-array-index-key */,key:\"segment-abstract-item-attributes\".concat(index),onClick:e=>{this.handleAttributeClick(e,key);}},/*#__PURE__*/React.createElement(\"p\",{className:\"text\"},getFieldDisplayLabel(segment.attributes[key],segmentFieldMap[key])||' - ')):null)):/*#__PURE__*/React.createElement(Input.TextArea,{className:\"segment-abstract-item-attributes-hw\",value:segment.attributes.source,disabled:true,autoComplete:\"off\",autoSize:{minRows:1}})),segment.content.map((value,index)=>/*#__PURE__*/React.createElement(LineAbstractItem/* eslint-disable-next-line react/no-array-index-key */,{key:\"lineAbstractItem\".concat(index),line:value,lineIndex:index,segmentIndex:segmentIndex,setCurrentSegment:setCurrentSegment,existRole:this.props.ontology&&this.props.ontology.size>0}))));}};SegmentAbstractItem.protoTypes={ontology:PropTypes.arrayOf(PropTypes.object),segmentConfig:PropTypes.arrayOf(PropTypes.object),lineConfig:PropTypes.arrayOf(PropTypes.object),currentSegment:PropTypes.number,segment:PropTypes.object,segmentIndex:PropTypes.number};const mapStateToProps=state=>({ontology:state.ontology,segmentConfig:state.segmentConfig,lineConfig:state.lineConfig,currentSegment:state.currentSegment,toolMode:state.toolMode,keyAttribute:state.keyAttribute,client:state.client,segmentFieldMap:state.segmentFieldMap,loadReviewEnabled:state.loadReviewEnabled});const mapDispatchToProps={// setCurrentSegment,\nsetAttributeFocusInfo};export default connect(mapStateToProps,mapDispatchToProps,null,{forwardRef:true})(SegmentAbstractItem);","map":{"version":3,"names":["React","PropTypes","connect","hexToRgba","Input","Popover","isEqual","LineAbstractItem","defaultColor","formatTimestamp","translate","attributeType","QAAcceptIcon","QARejectIcon","isRework","isQA","setAttributeFocusInfo","getFieldDisplayLabel","SegmentAbstractItem","Component","constructor","props","getRowHeight","_this$segmentAbstract","height","segmentAbstractItemBox","offsetHeight","onUpdate","handleContainerClick","e","setCurrentSegment","index","segmentIndex","handleAttributeClick","key","stopPropagation","type","segment","rowRef","createRef","componentDidMount","componentDidUpdate","prevProps","_prevProps$segment","_this$props$segment","_prevProps$segment2","_this$props$segment2","content","attributes","render","currentSegment","ontology","segmentConfig","segmentFieldMap","toolMode","color","get","role","defaultAlpha","validConfig","fields","map","value","name","createElement","onClick","className","concat","id","ref","r","style","borderLeft","client","end","start","toFixed","qaChecked","undefined","overlayStyle","maxWidth","mouseEnterDelay","mouseLeaveDelay","trigger","fontSize","fontWeight","qaReason","qaComment","width","cursor","Fragment","Object","keys","indexOf","keyAttribute","TextArea","source","disabled","autoComplete","autoSize","minRows","line","lineIndex","existRole","size","protoTypes","arrayOf","object","lineConfig","number","mapStateToProps","state","loadReviewEnabled","mapDispatchToProps","forwardRef"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/SegmentAbstract/SegmentAbstractItem/SegmentAbstractItem.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport hexToRgba from 'hex-to-rgba';\nimport { Input, Popover } from 'antd';\nimport { isEqual } from 'lodash';\nimport LineAbstractItem from '../LineAbstractItem/LineAbstractItem';\nimport { defaultColor, formatTimestamp, translate, attributeType } from '../../../constants';\nimport QAAcceptIcon from '../../common/Icons/QAAcceptIcon';\nimport QARejectIcon from '../../common/Icons/QARejectIcon';\nimport { isRework, isQA } from '../../../../../utils/tool-mode';\nimport { setAttributeFocusInfo } from '../../../redux/action';\nimport { getFieldDisplayLabel } from '../../../../../utils/form';\nimport './SegmentAbstractItem.scss';\n\nclass SegmentAbstractItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.rowRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.getRowHeight();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      !isEqual(prevProps.segment?.content, this.props.segment?.content) ||\n      !isEqual(prevProps.segment?.attributes, this.props.segment?.attributes)\n    ) {\n      this.getRowHeight();\n    }\n  }\n\n  getRowHeight = () => {\n    const height = this.segmentAbstractItemBox?.offsetHeight;\n    this.props.onUpdate(height);\n  };\n\n  handleContainerClick = (e) => {\n    this.props.setCurrentSegment({ index: this.props.segmentIndex });\n  };\n\n  handleAttributeClick = (e, key) => {\n    e.stopPropagation();\n    this.props.setCurrentSegment({ index: this.props.segmentIndex });\n    this.props.setAttributeFocusInfo({\n      segmentIndex: this.props.segmentIndex,\n      type: attributeType.segment,\n      key,\n    });\n  };\n\n  render() {\n    const { currentSegment, ontology, segmentConfig, segmentFieldMap, segment, segmentIndex, toolMode, setCurrentSegment } = this.props;\n    const color = ontology.get(segment.content[0].role)\n      ? hexToRgba(ontology.get(segment.content[0].role), defaultColor.defaultAlpha)\n      : 'transparent';\n    const validConfig = segmentConfig.fields.map((value) => value.name);\n\n    return (\n      // eslint-disable-next-line react/jsx-filename-extension\n      <div\n        onClick={(e) => this.handleContainerClick(e)}\n        className={`segment-abstract-item-container ${currentSegment === segmentIndex ? 'segment-abstract-item-container-current' : ''}`}\n        id={`segment-abstract-item-${segmentIndex}`}\n        ref={(r) => { this.segmentAbstractItemBox = r; }}\n      >\n        <div className=\"segment-abstract-item\" style={{ borderLeft: `6px solid ${color}` }}>\n          {/* <div\n            style={{ background: color }}\n            className=\"segment-abstract-item-color\"\n          /> */}\n          <div className=\"segment-abstract-item-index\">{segmentIndex + 1}</div>\n          {this.props.client !== 'hw-translation' && (\n            <div className=\"segment-abstract-item-timestamp\">{`${(segment.end - segment.start).toFixed(3)}s (${formatTimestamp(segment.start)}~${formatTimestamp(segment.end)})`}</div>\n          )}\n          <div className=\"segment-abstract-item-qa-state\">\n            {(segment.qaChecked === undefined || !(isQA(toolMode) || isRework(toolMode))) ? null : (\n              <Popover\n                overlayStyle={{\n                  maxWidth: '30%'\n                }}\n                mouseEnterDelay={0}\n                mouseLeaveDelay={0}\n                trigger=\"hover\"\n                color=\"#2D2A34FF\"\n                content={\n                  segment.qaChecked === false ?\n                    (\n                      <div style={{ fontSize: '15px', color: 'white' }}>\n                        <span style={{ fontSize: '18px', color: 'white', fontWeight: 'bolder' }}>{translate('qaReject')}</span>\n                        <br />\n                        <span style={{ fontWeight: 'bolder' }}>{`${translate('reason')}: `}</span>\n                        <span>{segment.qaReason || ''}</span>\n                        <br />\n                        <span style={{ fontWeight: 'bolder' }}>{`${translate('comment')}: `}</span>\n                        <span>{segment.qaComment || ''}</span>\n                      </div>\n                    ) : <div style={{ fontSize: '15px', color: 'white' }}>{translate('qaAccept')}</div>\n                }\n              >\n                {segment.qaChecked === true ? <QAAcceptIcon style={{ width: '22px', cursor: 'pointer' }} /> : <QARejectIcon style={{ width: '22px', cursor: 'pointer' }} />}\n              </Popover>\n            )}\n          </div>\n        </div>\n        <div\n          className=\"segment-abstract-attributes segment-abstract-row\"\n          style={{ borderLeft: `6px solid ${color}` }}\n        >\n          {\n            this.props.client !== 'hw-translation' ? (\n              <>\n                {Object.keys(segment.attributes).map((key, index) => (\n                  (\n                    (validConfig.indexOf(key) >= 0 || this.props.keyAttribute.name === key) &&\n                    segment.attributes[key] !== undefined\n                  )\n                    ? (\n                      <div\n                        className=\"segment-abstract-attributes-item\"\n                        /* eslint-disable-next-line react/no-array-index-key */\n                        key={`segment-abstract-item-attributes${index}`}\n                        onClick={(e) => { this.handleAttributeClick(e, key); }}\n                      >\n                        <p className=\"text\">\n                          {getFieldDisplayLabel(segment.attributes[key], segmentFieldMap[key]) || ' - '}\n                        </p>\n                      </div>\n                    ) : null\n                ))}\n              </>\n            ) : (\n              <Input.TextArea\n                className=\"segment-abstract-item-attributes-hw\"\n                value={segment.attributes.source}\n                disabled\n                autoComplete=\"off\"\n                autoSize={{ minRows: 1 }}\n              />\n            )\n          }\n        </div>\n        {segment.content.map((value, index) => (\n          <LineAbstractItem\n            /* eslint-disable-next-line react/no-array-index-key */\n            key={`lineAbstractItem${index}`}\n            line={value}\n            lineIndex={index}\n            segmentIndex={segmentIndex}\n            setCurrentSegment={setCurrentSegment}\n            existRole={this.props.ontology && this.props.ontology.size > 0}\n          />\n        ))}\n      </div>\n    );\n  }\n};\n\nSegmentAbstractItem.protoTypes = {\n  ontology: PropTypes.arrayOf(PropTypes.object),\n  segmentConfig: PropTypes.arrayOf(PropTypes.object),\n  lineConfig: PropTypes.arrayOf(PropTypes.object),\n  currentSegment: PropTypes.number,\n  segment: PropTypes.object,\n  segmentIndex: PropTypes.number,\n};\n\nconst mapStateToProps = (state) => ({\n  ontology: state.ontology,\n  segmentConfig: state.segmentConfig,\n  lineConfig: state.lineConfig,\n  currentSegment: state.currentSegment,\n  toolMode: state.toolMode,\n  keyAttribute: state.keyAttribute,\n  client: state.client,\n  segmentFieldMap: state.segmentFieldMap,\n  loadReviewEnabled: state.loadReviewEnabled,\n});\nconst mapDispatchToProps = {\n  // setCurrentSegment,\n  setAttributeFocusInfo,\n};\nexport default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(SegmentAbstractItem);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}