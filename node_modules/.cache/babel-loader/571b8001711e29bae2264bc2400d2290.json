{"ast":null,"code":"import { Circle } from 'pixi.js';\nimport Control from './Control';\nimport { drawVertex } from '../utils';\n\n/**\n * Control Point\n * @class\n */\nexport default class ControlPoint extends Control {\n  /**\n   * set scale\n   * @setter\n   */\n  set scale(scale) {\n    this.control.scale.set(1 / scale, 1 / scale);\n  }\n  constructor(options) {\n    super(options);\n    this.control.hitArea = new Circle(0, 0, this.size * 3);\n  }\n\n  /**\n   * draw point control\n   */\n  drawControl() {\n    this.control.clear();\n    this.control.lineStyle(1, this.color);\n    this.control.beginFill(this.selected ? this.color : 0x222222);\n    drawVertex(this.control, 0, 0, this.size);\n    this.control.endFill();\n  }\n\n  /**\n   * update control point position\n   * @param point\n   */\n  move(point) {\n    this.control.x = point.x;\n    this.control.y = point.y;\n  }\n}","map":{"version":3,"names":["Circle","Control","drawVertex","ControlPoint","scale","control","set","constructor","options","hitArea","size","drawControl","clear","lineStyle","color","beginFill","selected","endFill","move","point","x","y"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/common/shapes/controls/ControlPoint.ts"],"sourcesContent":["import { Point, Circle } from 'pixi.js';\nimport Control, { ControlOptions } from './Control';\nimport { drawVertex } from '../utils';\n\n/**\n * Control Point\n * @class\n */\nexport default class ControlPoint extends Control {\n  /**\n   * set scale\n   * @setter\n   */\n  set scale(scale: number) {\n    this.control.scale.set(1 / scale, 1 / scale);\n  }\n\n  constructor(options: ControlOptions) {\n    super(options);\n\n    this.control.hitArea = new Circle(0, 0, this.size * 3);\n  }\n\n  /**\n   * draw point control\n   */\n  drawControl() {\n    this.control.clear();\n    this.control.lineStyle(1, this.color);\n    this.control.beginFill(this.selected ? this.color : 0x222222);\n    drawVertex(this.control, 0, 0, this.size);\n    this.control.endFill();\n  }\n\n  /**\n   * update control point position\n   * @param point\n   */\n  move(point: Point) {\n    this.control.x = point.x;\n    this.control.y = point.y;\n  }\n}\n"],"mappings":"AAAA,SAAgBA,MAAM,QAAQ,SAAS;AACvC,OAAOC,OAAO,MAA0B,WAAW;AACnD,SAASC,UAAU,QAAQ,UAAU;;AAErC;AACA;AACA;AACA;AACA,eAAe,MAAMC,YAAY,SAASF,OAAO,CAAC;EAChD;AACF;AACA;AACA;EACE,IAAIG,KAAKA,CAACA,KAAa,EAAE;IACvB,IAAI,CAACC,OAAO,CAACD,KAAK,CAACE,GAAG,CAAC,CAAC,GAAGF,KAAK,EAAE,CAAC,GAAGA,KAAK,CAAC;EAC9C;EAEAG,WAAWA,CAACC,OAAuB,EAAE;IACnC,KAAK,CAACA,OAAO,CAAC;IAEd,IAAI,CAACH,OAAO,CAACI,OAAO,GAAG,IAAIT,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAACU,IAAI,GAAG,CAAC,CAAC;EACxD;;EAEA;AACF;AACA;EACEC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACN,OAAO,CAACO,KAAK,CAAC,CAAC;IACpB,IAAI,CAACP,OAAO,CAACQ,SAAS,CAAC,CAAC,EAAE,IAAI,CAACC,KAAK,CAAC;IACrC,IAAI,CAACT,OAAO,CAACU,SAAS,CAAC,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACF,KAAK,GAAG,QAAQ,CAAC;IAC7DZ,UAAU,CAAC,IAAI,CAACG,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAACK,IAAI,CAAC;IACzC,IAAI,CAACL,OAAO,CAACY,OAAO,CAAC,CAAC;EACxB;;EAEA;AACF;AACA;AACA;EACEC,IAAIA,CAACC,KAAY,EAAE;IACjB,IAAI,CAACd,OAAO,CAACe,CAAC,GAAGD,KAAK,CAACC,CAAC;IACxB,IAAI,CAACf,OAAO,CAACgB,CAAC,GAAGF,KAAK,CAACE,CAAC;EAC1B;AACF","ignoreList":[]},"metadata":{},"sourceType":"module"}