{"ast":null,"code":"import{EditorState,Modifier,RichUtils}from'draft-js';import{CODE_BLOCK_TYPE,UNSTYLED_TYPE}from'../constants';export default function splitBlockCallback(updatedEditorState){const currentContent=updatedEditorState.getCurrentContent();const selection=updatedEditorState.getSelection();const selectionKey=selection.getAnchorKey();const currBlock=currentContent.getBlockForKey(selectionKey);if((currBlock===null||currBlock===void 0?void 0:currBlock.getType())===CODE_BLOCK_TYPE){const lastBlock=currentContent.getBlockBefore(selectionKey);if((lastBlock===null||lastBlock===void 0?void 0:lastBlock.getType())===CODE_BLOCK_TYPE){// last block is code block\nif(!currBlock.getText()&&!lastBlock.getText()){// curr & last is empty line\nconst nextBlock=currentContent.getBlockAfter(selectionKey);const preLastBlock=currentContent.getBlockBefore(lastBlock.getKey());if((nextBlock===null||nextBlock===void 0?void 0:nextBlock.getType())!==CODE_BLOCK_TYPE&&(preLastBlock===null||preLastBlock===void 0?void 0:preLastBlock.getType())===CODE_BLOCK_TYPE&&!preLastBlock.getText()){// two empty lines break code block\nreturn RichUtils.toggleBlockType(updatedEditorState,UNSTYLED_TYPE);}}const language=lastBlock.getData().get('language');if(language){const currBlockData=currBlock.getData().merge({language});const newContent=Modifier.setBlockData(currentContent,selection,currBlockData);return EditorState.set(updatedEditorState,{currentContent:newContent});}}}return updatedEditorState;}","map":{"version":3,"names":["EditorState","Modifier","RichUtils","CODE_BLOCK_TYPE","UNSTYLED_TYPE","splitBlockCallback","updatedEditorState","currentContent","getCurrentContent","selection","getSelection","selectionKey","getAnchorKey","currBlock","getBlockForKey","getType","lastBlock","getBlockBefore","getText","nextBlock","getBlockAfter","preLastBlock","getKey","toggleBlockType","language","getData","get","currBlockData","merge","newContent","setBlockData","set"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/common/llm/input/callbacks/split-block-callback.ts"],"sourcesContent":["import { EditorState, Modifier, RichUtils } from 'draft-js';\nimport { CODE_BLOCK_TYPE, UNSTYLED_TYPE } from '../constants';\n\nexport default function splitBlockCallback(updatedEditorState: EditorState) {\n  const currentContent = updatedEditorState.getCurrentContent();\n  const selection = updatedEditorState.getSelection();\n  const selectionKey = selection.getAnchorKey();\n  const currBlock = currentContent.getBlockForKey(selectionKey);\n  if (currBlock?.getType() === CODE_BLOCK_TYPE) {\n    const lastBlock = currentContent.getBlockBefore(selectionKey);\n    if (lastBlock?.getType() === CODE_BLOCK_TYPE) {\n      // last block is code block\n      if (!currBlock.getText() && !lastBlock.getText()) {\n        // curr & last is empty line\n        const nextBlock = currentContent.getBlockAfter(selectionKey);\n        const preLastBlock = currentContent.getBlockBefore(lastBlock.getKey());\n        if (nextBlock?.getType() !== CODE_BLOCK_TYPE\n          && preLastBlock?.getType() === CODE_BLOCK_TYPE\n          && !preLastBlock.getText()) {\n          // two empty lines break code block\n          return RichUtils.toggleBlockType(updatedEditorState, UNSTYLED_TYPE);\n        }\n      }\n      const language = lastBlock.getData().get('language');\n      if (language) {\n        const currBlockData = currBlock.getData().merge({ language });\n        const newContent = Modifier.setBlockData(currentContent, selection, currBlockData);\n        return EditorState.set(updatedEditorState, {\n          currentContent: newContent,\n        });\n      }\n    }\n  }\n  return updatedEditorState;\n}\n"],"mappings":"AAAA,OAASA,WAAW,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,UAAU,CAC3D,OAASC,eAAe,CAAEC,aAAa,KAAQ,cAAc,CAE7D,cAAe,SAAS,CAAAC,kBAAkBA,CAACC,kBAA+B,CAAE,CAC1E,KAAM,CAAAC,cAAc,CAAGD,kBAAkB,CAACE,iBAAiB,CAAC,CAAC,CAC7D,KAAM,CAAAC,SAAS,CAAGH,kBAAkB,CAACI,YAAY,CAAC,CAAC,CACnD,KAAM,CAAAC,YAAY,CAAGF,SAAS,CAACG,YAAY,CAAC,CAAC,CAC7C,KAAM,CAAAC,SAAS,CAAGN,cAAc,CAACO,cAAc,CAACH,YAAY,CAAC,CAC7D,GAAI,CAAAE,SAAS,SAATA,SAAS,iBAATA,SAAS,CAAEE,OAAO,CAAC,CAAC,IAAKZ,eAAe,CAAE,CAC5C,KAAM,CAAAa,SAAS,CAAGT,cAAc,CAACU,cAAc,CAACN,YAAY,CAAC,CAC7D,GAAI,CAAAK,SAAS,SAATA,SAAS,iBAATA,SAAS,CAAED,OAAO,CAAC,CAAC,IAAKZ,eAAe,CAAE,CAC5C;AACA,GAAI,CAACU,SAAS,CAACK,OAAO,CAAC,CAAC,EAAI,CAACF,SAAS,CAACE,OAAO,CAAC,CAAC,CAAE,CAChD;AACA,KAAM,CAAAC,SAAS,CAAGZ,cAAc,CAACa,aAAa,CAACT,YAAY,CAAC,CAC5D,KAAM,CAAAU,YAAY,CAAGd,cAAc,CAACU,cAAc,CAACD,SAAS,CAACM,MAAM,CAAC,CAAC,CAAC,CACtE,GAAI,CAAAH,SAAS,SAATA,SAAS,iBAATA,SAAS,CAAEJ,OAAO,CAAC,CAAC,IAAKZ,eAAe,EACvC,CAAAkB,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAEN,OAAO,CAAC,CAAC,IAAKZ,eAAe,EAC3C,CAACkB,YAAY,CAACH,OAAO,CAAC,CAAC,CAAE,CAC5B;AACA,MAAO,CAAAhB,SAAS,CAACqB,eAAe,CAACjB,kBAAkB,CAAEF,aAAa,CAAC,CACrE,CACF,CACA,KAAM,CAAAoB,QAAQ,CAAGR,SAAS,CAACS,OAAO,CAAC,CAAC,CAACC,GAAG,CAAC,UAAU,CAAC,CACpD,GAAIF,QAAQ,CAAE,CACZ,KAAM,CAAAG,aAAa,CAAGd,SAAS,CAACY,OAAO,CAAC,CAAC,CAACG,KAAK,CAAC,CAAEJ,QAAS,CAAC,CAAC,CAC7D,KAAM,CAAAK,UAAU,CAAG5B,QAAQ,CAAC6B,YAAY,CAACvB,cAAc,CAAEE,SAAS,CAAEkB,aAAa,CAAC,CAClF,MAAO,CAAA3B,WAAW,CAAC+B,GAAG,CAACzB,kBAAkB,CAAE,CACzCC,cAAc,CAAEsB,UAClB,CAAC,CAAC,CACJ,CACF,CACF,CACA,MAAO,CAAAvB,kBAAkB,CAC3B","ignoreList":[]},"metadata":{},"sourceType":"module"}