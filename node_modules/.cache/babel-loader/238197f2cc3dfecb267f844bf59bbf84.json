{"ast":null,"code":"import React from'react';import{Tooltip}from'antd';import screenfull from'screenfull';import{isAppenCloud}from'src/utils';import ReviewMode from'./ReviewMode';import UndoRedo from'./UndoRedo';import MeasurementBox from'./MeasurementBox';import DisplaySettings from'./DisplaySettings';import Save from'./Save';import Guide from'./Guide';import AppenLogo from'../../../common/AppenLogo';import{Fullscreen}from'../../../common/icons';import store from'../../store/RootStore';import i18n from'../../locales';import'./Toolbar.scss';class Toolbar extends React.Component{constructor(){super(...arguments);this.handleScreenFull=()=>{if(screenfull.isEnabled){screenfull.toggle().then(()=>{store.fullscreenRequested=true;});}};}render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"toolbar\"},/*#__PURE__*/React.createElement(\"div\",null,isAppenCloud()&&/*#__PURE__*/React.createElement(\"div\",{className:\"logo\"},/*#__PURE__*/React.createElement(AppenLogo,null)),/*#__PURE__*/React.createElement(ReviewMode,null),/*#__PURE__*/React.createElement(UndoRedo,null),/*#__PURE__*/React.createElement(Guide,null)),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(MeasurementBox,null),/*#__PURE__*/React.createElement(DisplaySettings,null),/*#__PURE__*/React.createElement(Save,{onSave:this.props.onSave}),/*#__PURE__*/React.createElement(\"div\",{className:\"divider\"}),/*#__PURE__*/React.createElement(Tooltip,{placement:\"bottom\",title:i18n.translate('TOOLBAR_TIP_FULLSCREEN')},/*#__PURE__*/React.createElement(\"div\",{className:\"icon-button\",onClick:this.handleScreenFull},/*#__PURE__*/React.createElement(Fullscreen,null)))));}}export default Toolbar;","map":{"version":3,"names":["React","Tooltip","screenfull","isAppenCloud","ReviewMode","UndoRedo","MeasurementBox","DisplaySettings","Save","Guide","AppenLogo","Fullscreen","store","i18n","Toolbar","Component","constructor","arguments","handleScreenFull","isEnabled","toggle","then","fullscreenRequested","render","createElement","className","onSave","props","placement","title","translate","onClick"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking2/components/toolbar/Toolbar.tsx"],"sourcesContent":["import React from 'react';\nimport { Tooltip } from 'antd';\nimport screenfull from 'screenfull';\nimport { isAppenCloud } from 'src/utils';\nimport ReviewMode from './ReviewMode';\nimport UndoRedo from './UndoRedo';\nimport MeasurementBox from './MeasurementBox';\nimport DisplaySettings from './DisplaySettings';\nimport Save from './Save';\nimport Guide from './Guide';\nimport AppenLogo from '../../../common/AppenLogo';\nimport {\n  Fullscreen,\n} from '../../../common/icons';\nimport store from '../../store/RootStore';\nimport i18n from '../../locales';\nimport './Toolbar.scss';\n\ninterface ToolbarProps {\n  onSave: () => void;\n}\n\nclass Toolbar extends React.Component<ToolbarProps> {\n  handleScreenFull = () => {\n    if (screenfull.isEnabled) {\n      screenfull.toggle().then(() => {\n        store.fullscreenRequested = true;\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"toolbar\">\n        <div>\n          {isAppenCloud() && (\n            <div className=\"logo\">\n              <AppenLogo />\n            </div>\n          )}\n          <ReviewMode />\n          <UndoRedo />\n          <Guide />\n        </div>\n        <div>\n          <MeasurementBox />\n          <DisplaySettings />\n          <Save onSave={this.props.onSave} />\n          <div className=\"divider\" />\n          <Tooltip placement=\"bottom\" title={i18n.translate('TOOLBAR_TIP_FULLSCREEN')}>\n            <div className=\"icon-button\" onClick={this.handleScreenFull}>\n              <Fullscreen />\n            </div>\n          </Tooltip>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Toolbar;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,OAAO,KAAQ,MAAM,CAC9B,MAAO,CAAAC,UAAU,KAAM,YAAY,CACnC,OAASC,YAAY,KAAQ,WAAW,CACxC,MAAO,CAAAC,UAAU,KAAM,cAAc,CACrC,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,MAAO,CAAAC,cAAc,KAAM,kBAAkB,CAC7C,MAAO,CAAAC,eAAe,KAAM,mBAAmB,CAC/C,MAAO,CAAAC,IAAI,KAAM,QAAQ,CACzB,MAAO,CAAAC,KAAK,KAAM,SAAS,CAC3B,MAAO,CAAAC,SAAS,KAAM,2BAA2B,CACjD,OACEC,UAAU,KACL,uBAAuB,CAC9B,MAAO,CAAAC,KAAK,KAAM,uBAAuB,CACzC,MAAO,CAAAC,IAAI,KAAM,eAAe,CAChC,MAAO,gBAAgB,CAMvB,KAAM,CAAAC,OAAO,QAAS,CAAAd,KAAK,CAACe,SAAwB,CAAAC,YAAA,WAAAC,SAAA,OAClDC,gBAAgB,CAAG,IAAM,CACvB,GAAIhB,UAAU,CAACiB,SAAS,CAAE,CACxBjB,UAAU,CAACkB,MAAM,CAAC,CAAC,CAACC,IAAI,CAAC,IAAM,CAC7BT,KAAK,CAACU,mBAAmB,CAAG,IAAI,CAClC,CAAC,CAAC,CACJ,CACF,CAAC,EAEDC,MAAMA,CAAA,CAAG,CACP,mBACEvB,KAAA,CAAAwB,aAAA,QAAKC,SAAS,CAAC,SAAS,eACtBzB,KAAA,CAAAwB,aAAA,YACGrB,YAAY,CAAC,CAAC,eACbH,KAAA,CAAAwB,aAAA,QAAKC,SAAS,CAAC,MAAM,eACnBzB,KAAA,CAAAwB,aAAA,CAACd,SAAS,KAAE,CACT,CACN,cACDV,KAAA,CAAAwB,aAAA,CAACpB,UAAU,KAAE,CAAC,cACdJ,KAAA,CAAAwB,aAAA,CAACnB,QAAQ,KAAE,CAAC,cACZL,KAAA,CAAAwB,aAAA,CAACf,KAAK,KAAE,CACL,CAAC,cACNT,KAAA,CAAAwB,aAAA,yBACExB,KAAA,CAAAwB,aAAA,CAAClB,cAAc,KAAE,CAAC,cAClBN,KAAA,CAAAwB,aAAA,CAACjB,eAAe,KAAE,CAAC,cACnBP,KAAA,CAAAwB,aAAA,CAAChB,IAAI,EAACkB,MAAM,CAAE,IAAI,CAACC,KAAK,CAACD,MAAO,CAAE,CAAC,cACnC1B,KAAA,CAAAwB,aAAA,QAAKC,SAAS,CAAC,SAAS,CAAE,CAAC,cAC3BzB,KAAA,CAAAwB,aAAA,CAACvB,OAAO,EAAC2B,SAAS,CAAC,QAAQ,CAACC,KAAK,CAAEhB,IAAI,CAACiB,SAAS,CAAC,wBAAwB,CAAE,eAC1E9B,KAAA,CAAAwB,aAAA,QAAKC,SAAS,CAAC,aAAa,CAACM,OAAO,CAAE,IAAI,CAACb,gBAAiB,eAC1DlB,KAAA,CAAAwB,aAAA,CAACb,UAAU,KAAE,CACV,CACE,CACN,CACF,CAAC,CAEV,CACF,CAEA,cAAe,CAAAG,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}