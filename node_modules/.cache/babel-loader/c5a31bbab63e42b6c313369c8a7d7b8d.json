{"ast":null,"code":"import{makeAutoObservable}from'mobx';import{isReviewEditable}from'src/utils/tool-mode';import{ReviewMode}from'../types';/**\n * store for config\n * @class\n */export default class ConfigStore{constructor(rootStore){/**\n   * root store\n   */this.rootStore=void 0;/**\n   * readonly from payload only control text editable\n   */this.contentReadyOnly=false;/**\n   * review mode\n   */this.reviewMode=ReviewMode.LABELING;/**\n * add mode, true means adding active\n */this.addMode=false;/**\n   * validation config\n   */this.validationConfig={script:false};/**\n   * submit check\n   */this.submitCheck=false;/**\n    * skip submit check for invalid data\n    */this.skipCheckForInvalidData=false;makeAutoObservable(this,{rootStore:false},{autoBind:true});this.rootStore=rootStore;}/**\n   * init from paylod\n   * @param payload\n   */init(payload){// set default review mode\nthis.reviewMode=isReviewEditable(payload.jobProxy.toolMode)?ReviewMode.REVIEW:ReviewMode.LABELING;// parse skip check for invalid data\nthis.skipCheckForInvalidData=payload.skip_check_for_invalid_data==='true'||payload.skip_check_for_invalid_data===true;// read_only\nthis.contentReadyOnly=payload.read_only==='true'||payload.read_only===true;}/**\n * set review mode\n * @param reviewMode\n */setReviewMode(reviewMode){if(this.reviewMode!==reviewMode){this.setAddMode(false);this.reviewMode=reviewMode;}}/**\n * set add mode\n * @param addMode\n * @param shouldPredict\n */setAddMode(addMode){if(this.rootStore.readonly){return;}this.addMode=addMode;}}","map":{"version":3,"names":["makeAutoObservable","isReviewEditable","ReviewMode","ConfigStore","constructor","rootStore","contentReadyOnly","reviewMode","LABELING","addMode","validationConfig","script","submitCheck","skipCheckForInvalidData","autoBind","init","payload","jobProxy","toolMode","REVIEW","skip_check_for_invalid_data","read_only","setReviewMode","setAddMode","readonly"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/editable-text/store/ConfigStore.ts"],"sourcesContent":["import { makeAutoObservable } from 'mobx';\nimport { isReviewEditable } from 'src/utils/tool-mode';\nimport RootStore from './RootStore';\nimport { Payload, ReviewMode } from '../types';\n/**\n * store for config\n * @class\n */\nexport default class ConfigStore {\n  /**\n   * root store\n   */\n  rootStore;\n\n  /**\n   * readonly from payload only control text editable\n   */\n  contentReadyOnly = false;\n\n  /**\n   * review mode\n   */\n  reviewMode = ReviewMode.LABELING;\n\n  /**\n * add mode, true means adding active\n */\n  addMode = false;\n\n  /**\n   * validation config\n   */\n  validationConfig = { script: false };\n\n  /**\n   * submit check\n   */\n  submitCheck = false;\n\n  /**\n    * skip submit check for invalid data\n    */\n  skipCheckForInvalidData = false;\n\n  constructor(rootStore: typeof RootStore) {\n    makeAutoObservable(this, {\n      rootStore: false,\n    }, {\n      autoBind: true,\n    });\n\n    this.rootStore = rootStore;\n  }\n\n  /**\n   * init from paylod\n   * @param payload\n   */\n  init(payload: Payload) {\n    // set default review mode\n    this.reviewMode = isReviewEditable(payload.jobProxy.toolMode) ? ReviewMode.REVIEW : ReviewMode.LABELING;\n\n\n    // parse skip check for invalid data\n    this.skipCheckForInvalidData = payload.skip_check_for_invalid_data === 'true' || payload.skip_check_for_invalid_data === true;\n\n    // read_only\n    this.contentReadyOnly = payload.read_only === 'true' || payload.read_only === true;\n  }\n\n  /**\n * set review mode\n * @param reviewMode\n */\n  setReviewMode(reviewMode: ReviewMode) {\n    if (this.reviewMode !== reviewMode) {\n      this.setAddMode(false);\n      this.reviewMode = reviewMode;\n    }\n  }\n\n  /**\n * set add mode\n * @param addMode\n * @param shouldPredict\n */\n  setAddMode(addMode: boolean) {\n    if (this.rootStore.readonly) {\n      return;\n    }\n\n    this.addMode = addMode;\n  };\n}\n"],"mappings":"AAAA,OAASA,kBAAkB,KAAQ,MAAM,CACzC,OAASC,gBAAgB,KAAQ,qBAAqB,CAEtD,OAAkBC,UAAU,KAAQ,UAAU,CAC9C;AACA;AACA;AACA,GACA,cAAe,MAAM,CAAAC,WAAY,CAoC/BC,WAAWA,CAACC,SAA2B,CAAE,CAnCzC;AACF;AACA,KAFE,KAGAA,SAAS,QAET;AACF;AACA,KAFE,KAGAC,gBAAgB,CAAG,KAAK,CAExB;AACF;AACA,KAFE,KAGAC,UAAU,CAAGL,UAAU,CAACM,QAAQ,CAEhC;AACF;AACA,GAFE,KAGAC,OAAO,CAAG,KAAK,CAEf;AACF;AACA,KAFE,KAGAC,gBAAgB,CAAG,CAAEC,MAAM,CAAE,KAAM,CAAC,CAEpC;AACF;AACA,KAFE,KAGAC,WAAW,CAAG,KAAK,CAEnB;AACF;AACA,MAFE,KAGAC,uBAAuB,CAAG,KAAK,CAG7Bb,kBAAkB,CAAC,IAAI,CAAE,CACvBK,SAAS,CAAE,KACb,CAAC,CAAE,CACDS,QAAQ,CAAE,IACZ,CAAC,CAAC,CAEF,IAAI,CAACT,SAAS,CAAGA,SAAS,CAC5B,CAEA;AACF;AACA;AACA,KACEU,IAAIA,CAACC,OAAgB,CAAE,CACrB;AACA,IAAI,CAACT,UAAU,CAAGN,gBAAgB,CAACe,OAAO,CAACC,QAAQ,CAACC,QAAQ,CAAC,CAAGhB,UAAU,CAACiB,MAAM,CAAGjB,UAAU,CAACM,QAAQ,CAGvG;AACA,IAAI,CAACK,uBAAuB,CAAGG,OAAO,CAACI,2BAA2B,GAAK,MAAM,EAAIJ,OAAO,CAACI,2BAA2B,GAAK,IAAI,CAE7H;AACA,IAAI,CAACd,gBAAgB,CAAGU,OAAO,CAACK,SAAS,GAAK,MAAM,EAAIL,OAAO,CAACK,SAAS,GAAK,IAAI,CACpF,CAEA;AACF;AACA;AACA,GACEC,aAAaA,CAACf,UAAsB,CAAE,CACpC,GAAI,IAAI,CAACA,UAAU,GAAKA,UAAU,CAAE,CAClC,IAAI,CAACgB,UAAU,CAAC,KAAK,CAAC,CACtB,IAAI,CAAChB,UAAU,CAAGA,UAAU,CAC9B,CACF,CAEA;AACF;AACA;AACA;AACA,GACEgB,UAAUA,CAACd,OAAgB,CAAE,CAC3B,GAAI,IAAI,CAACJ,SAAS,CAACmB,QAAQ,CAAE,CAC3B,OACF,CAEA,IAAI,CAACf,OAAO,CAAGA,OAAO,CACxB,CACF","ignoreList":[]},"metadata":{},"sourceType":"module"}