{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/SegmentAbstract/SegmentAbstract.jsx\";\nimport React, { createRef } from 'react';\nimport { connect } from 'react-redux';\nimport { CellMeasurer, CellMeasurerCache, List, AutoSizer } from 'react-virtualized';\nimport SegmentAbstractItem from './SegmentAbstractItem/SegmentAbstractItem';\nimport './SegmentAbstract.scss';\nconst cache = new CellMeasurerCache({\n  // defaultHeight: 72,\n  fixedWidth: true\n});\nclass SegmentAbstract extends React.Component {\n  constructor(props) {\n    super(props);\n    this.rowHeights = {};\n    this.getRowHeight = ({\n      index\n    }) => this.rowHeights[index] || 72;\n    this.onUpdate = (index, rowHeight) => {\n      cache.clear(index, 0);\n      this.rowHeights[index] = rowHeight;\n      // this.listRef?.recomputeRowHeights(index);\n    };\n    this.listRef = createRef();\n  }\n  // TODO: slider bar\n  render() {\n    this.segmentAbstractItems = [];\n    const {\n      currentVideo,\n      results,\n      setCurrentSegment,\n      loading\n    } = this.props;\n    if (loading) {\n      return null;\n    }\n    return (\n      /*#__PURE__*/\n      // eslint-disable-next-line react/jsx-filename-extension\n      React.createElement(\"div\", {\n        className: \"segment-abstract-container\",\n        id: \"segment-abstract-container\",\n        ref: r => {\n          this.segmentAbstractBox = r;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(AutoSizer, {\n        onResize: () => cache.clearAll(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }, ({\n        width,\n        height\n      }) => /*#__PURE__*/React.createElement(List, {\n        ref: r => {\n          this.listRef = r;\n        },\n        style: {\n          outline: 'none'\n        },\n        width: width,\n        height: height,\n        deferredMeasurementCache: cache,\n        rowCount: results[currentVideo].length,\n        rowHeight: this.getRowHeight,\n        rowRenderer: ({\n          index,\n          key,\n          parent,\n          style\n        }) => /*#__PURE__*/React.createElement(CellMeasurer, {\n          cache: cache,\n          columnIndex: 0,\n          key: key,\n          parent: parent,\n          rowIndex: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: style,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(SegmentAbstractItem, {\n          ref: r => {\n            this.segmentAbstractItems[index] = r;\n          },\n          segmentIndex: index,\n          segment: results[currentVideo][index],\n          setCurrentSegment: setCurrentSegment,\n          onUpdate: rowHeight => {\n            this.onUpdate(index, rowHeight);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }\n        }))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      })))\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  results: state.results,\n  ontology: state.ontology,\n  segmentConfig: state.segmentConfig,\n  lineConfig: state.lineConfig,\n  currentVideo: state.currentVideo,\n  currentSegment: state.currentSegment,\n  videos: state.videos,\n  loading: state.loading\n});\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps, null, {\n  forwardRef: true\n})(SegmentAbstract);","map":{"version":3,"names":["React","createRef","connect","CellMeasurer","CellMeasurerCache","List","AutoSizer","SegmentAbstractItem","cache","fixedWidth","SegmentAbstract","Component","constructor","props","rowHeights","getRowHeight","index","onUpdate","rowHeight","clear","listRef","render","segmentAbstractItems","currentVideo","results","setCurrentSegment","loading","createElement","className","id","ref","r","segmentAbstractBox","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onResize","clearAll","width","height","style","outline","deferredMeasurementCache","rowCount","length","rowRenderer","key","parent","columnIndex","rowIndex","segmentIndex","segment","mapStateToProps","state","ontology","segmentConfig","lineConfig","currentSegment","videos","mapDispatchToProps","forwardRef"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/SegmentAbstract/SegmentAbstract.jsx"],"sourcesContent":["import React, { createRef } from 'react';\nimport { connect } from 'react-redux';\nimport { CellMeasurer, CellMeasurerCache, List, AutoSizer } from 'react-virtualized';\nimport SegmentAbstractItem from './SegmentAbstractItem/SegmentAbstractItem';\nimport './SegmentAbstract.scss';\n\nconst cache = new CellMeasurerCache({\n  // defaultHeight: 72,\n  fixedWidth: true,\n});\n\nclass SegmentAbstract extends React.Component {\n  constructor(props) {\n    super(props);\n    this.listRef = createRef();\n  }\n\n  rowHeights = {};\n\n  getRowHeight = ({ index }) => this.rowHeights[index] || 72;\n\n  onUpdate = (index, rowHeight) => {\n    cache.clear(index, 0);\n    this.rowHeights[index] = rowHeight;\n    // this.listRef?.recomputeRowHeights(index);\n  };\n\n  // TODO: slider bar\n  render() {\n    this.segmentAbstractItems = [];\n    const { currentVideo, results, setCurrentSegment, loading } = this.props;\n\n    if (loading) {\n      return null;\n    }\n\n    return (\n      // eslint-disable-next-line react/jsx-filename-extension\n      <div\n        className=\"segment-abstract-container\"\n        id=\"segment-abstract-container\"\n        ref={(r) => { this.segmentAbstractBox = r; }}\n      >\n        <AutoSizer onResize={() => cache.clearAll()}>\n          {({ width, height }) => (\n            <List\n              ref={(r) => { this.listRef = r; }}\n              style={{ outline: 'none' }}\n              width={width}\n              height={height}\n              deferredMeasurementCache={cache}\n              rowCount={results[currentVideo].length}\n              rowHeight={this.getRowHeight}\n              rowRenderer={({ index, key, parent, style }) => (\n                <CellMeasurer\n                  cache={cache}\n                  columnIndex={0}\n                  key={key}\n                  parent={parent}\n                  rowIndex={index}\n                >\n                  <div style={style}>\n                    <SegmentAbstractItem\n                      ref={(r) => { this.segmentAbstractItems[index] = r; }}\n                      segmentIndex={index}\n                      segment={results[currentVideo][index]}\n                      setCurrentSegment={setCurrentSegment}\n                      onUpdate={(rowHeight) => { this.onUpdate(index, rowHeight); }}\n                    />\n                  </div>\n                </CellMeasurer>\n              )}\n            />\n          )}\n        </AutoSizer>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  results: state.results,\n  ontology: state.ontology,\n  segmentConfig: state.segmentConfig,\n  lineConfig: state.lineConfig,\n  currentVideo: state.currentVideo,\n  currentSegment: state.currentSegment,\n  videos: state.videos,\n  loading: state.loading,\n});\nconst mapDispatchToProps = {\n};\nexport default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(SegmentAbstract);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}