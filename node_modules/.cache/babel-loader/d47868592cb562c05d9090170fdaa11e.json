{"ast":null,"code":"import React,{useMemo}from'react';import cx from'classnames';import{PlusSquareOutlined,MinusSquareOutlined}from'@ant-design/icons';import{observer}from'mobx-react';import{generateConfigKeyByKeys}from'../../utils/helper';import ToolItem from'./toolItem';const ToolGroupItem=observer(_ref=>{let{ontologyItem,ontologiesStatusMap,updateOntologiesCollapseStatus,customClassName='',isChild=false,deep=1,needBorderLeft=false,isLast=false,...restProps}=_ref;const isLeaf=useMemo(()=>!(ontologyItem.children&&ontologyItem.children.length>0),[ontologyItem]);const isCollapsed=useMemo(()=>{var _ontologiesStatusMap$,_ontologiesStatusMap$2;const configKey=generateConfigKeyByKeys(ontologyItem.keys);return(_ontologiesStatusMap$=(_ontologiesStatusMap$2=ontologiesStatusMap.get(configKey))===null||_ontologiesStatusMap$2===void 0?void 0:_ontologiesStatusMap$2.isCollapse)!==null&&_ontologiesStatusMap$!==void 0?_ontologiesStatusMap$:true;},[ontologiesStatusMap,ontologyItem]);return/*#__PURE__*/React.createElement(\"div\",{className:cx('tool-group-item',customClassName)},/*#__PURE__*/React.createElement(\"div\",{className:\"tool-item-wrapper\"},isChild&&/*#__PURE__*/React.createElement(\"div\",{className:cx('connecting-line',{isLast})},/*#__PURE__*/React.createElement(\"span\",{className:\"connecting-line-l\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"tool-item-content\",style:{marginLeft:isChild?6:0}},!isLeaf&&/*#__PURE__*/React.createElement(\"div\",{className:\"indent\"},isCollapsed?/*#__PURE__*/React.createElement(\"div\",{onClick:()=>{updateOntologiesCollapseStatus(ontologyItem.keys,false);}},/*#__PURE__*/React.createElement(PlusSquareOutlined,null)):/*#__PURE__*/React.createElement(\"div\",{className:cx('indent-expand-icon',{isChild}),onClick:()=>{updateOntologiesCollapseStatus(ontologyItem.keys,true);}},/*#__PURE__*/React.createElement(MinusSquareOutlined,null))),isChild&&isLeaf&&/*#__PURE__*/React.createElement(\"div\",{className:\"indent\"},/*#__PURE__*/React.createElement(\"div\",{className:\"line\"})),/*#__PURE__*/React.createElement(ToolItem,Object.assign({ontologyItem:ontologyItem,ontologiesStatusMap:ontologiesStatusMap},restProps)))),!isCollapsed&&ontologyItem.children&&ontologyItem.children.length>0&&/*#__PURE__*/React.createElement(\"div\",{className:cx('tool-item-wrapper-children',{'need-border-left':needBorderLeft}),style:{paddingLeft:6*Math.min(2,deep)}},ontologyItem.children.map((ontologyChild,index)=>/*#__PURE__*/React.createElement(ToolGroupItem,Object.assign({isChild:true,isLast:index+1===ontologyItem.children.length,customClassName:\"tool-group-item-child\",deep:deep+1,needBorderLeft:index<ontologyItem.children.length-1,ontologyItem:ontologyChild,key:generateConfigKeyByKeys(ontologyChild.keys),ontologiesStatusMap:ontologiesStatusMap,updateOntologiesCollapseStatus:updateOntologiesCollapseStatus},restProps)))));});export default ToolGroupItem;","map":{"version":3,"names":["React","useMemo","cx","PlusSquareOutlined","MinusSquareOutlined","observer","generateConfigKeyByKeys","ToolItem","ToolGroupItem","_ref","ontologyItem","ontologiesStatusMap","updateOntologiesCollapseStatus","customClassName","isChild","deep","needBorderLeft","isLast","restProps","isLeaf","children","length","isCollapsed","_ontologiesStatusMap$","_ontologiesStatusMap$2","configKey","keys","get","isCollapse","createElement","className","style","marginLeft","onClick","Object","assign","paddingLeft","Math","min","map","ontologyChild","index","key"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/editable-text/components/toolBar/toolGroupItem.jsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport cx from 'classnames';\nimport { PlusSquareOutlined, MinusSquareOutlined } from '@ant-design/icons';\nimport { observer } from 'mobx-react';\nimport { generateConfigKeyByKeys } from '../../utils/helper';\nimport ToolItem from './toolItem';\n\nconst ToolGroupItem = observer(({ ontologyItem, ontologiesStatusMap, updateOntologiesCollapseStatus, customClassName = '', isChild = false, deep = 1, needBorderLeft = false, isLast = false, ...restProps }) => {\n  const isLeaf = useMemo(() => !(ontologyItem.children && ontologyItem.children.length > 0), [ontologyItem]);\n  const isCollapsed = useMemo(() => {\n    const configKey = generateConfigKeyByKeys(ontologyItem.keys);\n    return ontologiesStatusMap.get(configKey)?.isCollapse ?? true;\n  },\n  [ontologiesStatusMap, ontologyItem]);\n\n  return (\n    <div className={cx('tool-group-item', customClassName)}>\n      <div className=\"tool-item-wrapper\">\n        {isChild && (\n          <div className={cx('connecting-line', { isLast })}>\n            <span className=\"connecting-line-l\" />\n          </div>\n        )}\n        <div className=\"tool-item-content\" style={{ marginLeft: isChild ? 6 : 0 }}>\n          {!isLeaf && (\n            <div className=\"indent\">\n              {isCollapsed ? (\n                <div\n                  onClick={() => {\n                    updateOntologiesCollapseStatus(ontologyItem.keys, false);\n                  }}\n                >\n                  <PlusSquareOutlined />\n                </div>\n              ) : (\n                <div\n                  className={cx('indent-expand-icon', { isChild })}\n                  onClick={() => {\n                    updateOntologiesCollapseStatus(ontologyItem.keys, true);\n                  }}\n                >\n                  <MinusSquareOutlined />\n                </div>\n              )}\n            </div>\n          )}\n\n          {isChild && isLeaf && (\n          <div className=\"indent\">\n            <div className=\"line\" />\n          </div>\n          )}\n          <ToolItem ontologyItem={ontologyItem} ontologiesStatusMap={ontologiesStatusMap} {...restProps} />\n        </div>\n      </div>\n      { !isCollapsed && ontologyItem.children && ontologyItem.children.length > 0 && (\n        <div className={cx('tool-item-wrapper-children', { 'need-border-left': needBorderLeft })} style={{ paddingLeft: 6 * Math.min(2, deep) }}>\n          {\n            ontologyItem.children.map((ontologyChild, index) => (\n              <ToolGroupItem\n                isChild\n                isLast={index + 1 === ontologyItem.children.length}\n                customClassName=\"tool-group-item-child\"\n                deep={deep + 1}\n                needBorderLeft={index < ontologyItem.children.length - 1}\n                ontologyItem={ontologyChild}\n                key={generateConfigKeyByKeys(ontologyChild.keys)}\n                ontologiesStatusMap={ontologiesStatusMap}\n                updateOntologiesCollapseStatus={updateOntologiesCollapseStatus}\n                {...restProps}\n              />\n            ))\n          }\n        </div>\n      )}\n    </div>\n  );\n});\nexport default ToolGroupItem;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}