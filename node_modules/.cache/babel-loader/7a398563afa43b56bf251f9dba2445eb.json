{"ast":null,"code":"import { Language } from '../../../utils/constants';\nimport CN from './zh-CN';\nimport US from './en-US';\nimport JP from './ja-JP';\nimport KR from './ko-KR';\nclass I18n {\n  constructor() {\n    this.locale = Language.EN_US;\n    this.setLocale = locale => {\n      const languages = Object.values(Language);\n      if (locale !== undefined) {\n        // get from props\n        if (languages.includes(locale)) {\n          this.locale = locale;\n        }\n      } else if (navigator.language) {\n        // get from browser\n        const language = languages.find(l => l.slice(0, 2) === navigator.language.slice(0, 2));\n        if (language) {\n          this.locale = language;\n        }\n      }\n    };\n    this.translate = word => {\n      let translated;\n      switch (this.locale) {\n        case Language.ZH_CN:\n          translated = CN[word];\n          break;\n        case Language.JA_JP:\n          translated = JP[word];\n          break;\n        case Language.KO_KR:\n          translated = KR[word];\n          break;\n        default:\n          translated = US[word];\n          break;\n      }\n      return translated;\n    };\n  }\n  get isUS() {\n    return this.locale === Language.EN_US;\n  }\n}\nexport const i18n = new I18n();\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport default function formatMessage(key, options = {}) {\n  const message = i18n.translate(key);\n  if (message) {\n    let msg = message;\n    if (options.values) {\n      Object.keys(options.values).forEach(k => {\n        msg = msg.replace(new RegExp(`{${k}}`, 'g'), options.values[k]);\n      });\n    }\n    return msg;\n  }\n  return key;\n}","map":{"version":3,"names":["Language","CN","US","JP","KR","I18n","constructor","locale","EN_US","setLocale","languages","Object","values","undefined","includes","navigator","language","find","l","slice","translate","word","translated","ZH_CN","JA_JP","KO_KR","isUS","i18n","formatMessage","key","options","message","msg","keys","forEach","k","replace","RegExp"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/keypoint/locales/index.ts"],"sourcesContent":["import { Language } from '../../../utils/constants';\nimport CN from './zh-CN';\nimport US from './en-US';\nimport JP from './ja-JP';\nimport KR from './ko-KR';\n\nclass I18n {\n  locale = Language.EN_US;\n\n  get isUS() {\n    return this.locale === Language.EN_US;\n  }\n\n  setLocale = (locale?: string) => {\n    const languages = Object.values(Language);\n    if (locale !== undefined) {\n      // get from props\n      if (languages.includes(locale as Language)) {\n        this.locale = locale as Language;\n      }\n    } else if (navigator.language) {\n      // get from browser\n      const language = languages.find((l) => l.slice(0, 2) === navigator.language.slice(0, 2));\n      if (language) {\n        this.locale = language;\n      }\n    }\n  };\n\n  translate = (word: string) => {\n    let translated;\n    switch (this.locale) {\n      case Language.ZH_CN:\n        translated = CN[word];\n        break;\n      case Language.JA_JP:\n        translated = JP[word];\n        break;\n      case Language.KO_KR:\n        translated = KR[word];\n        break;\n      default:\n        translated = US[word];\n        break;\n    }\n    return translated;\n  };\n}\n\nexport const i18n = new I18n();\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport default function formatMessage(key: string, options: any = {}) {\n  const message = i18n.translate(key);\n  if (message) {\n    let msg = message;\n    if (options.values) {\n      Object.keys(options.values).forEach((k) => {\n        msg = msg.replace(new RegExp(`{${k}}`, 'g'), options.values[k]);\n      });\n    }\n    return msg;\n  }\n  return key;\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,0BAA0B;AACnD,OAAOC,EAAE,MAAM,SAAS;AACxB,OAAOC,EAAE,MAAM,SAAS;AACxB,OAAOC,EAAE,MAAM,SAAS;AACxB,OAAOC,EAAE,MAAM,SAAS;AAExB,MAAMC,IAAI,CAAC;EAAAC,YAAA;IAAA,KACTC,MAAM,GAAGP,QAAQ,CAACQ,KAAK;IAAA,KAMvBC,SAAS,GAAIF,MAAe,IAAK;MAC/B,MAAMG,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACZ,QAAQ,CAAC;MACzC,IAAIO,MAAM,KAAKM,SAAS,EAAE;QACxB;QACA,IAAIH,SAAS,CAACI,QAAQ,CAACP,MAAkB,CAAC,EAAE;UAC1C,IAAI,CAACA,MAAM,GAAGA,MAAkB;QAClC;MACF,CAAC,MAAM,IAAIQ,SAAS,CAACC,QAAQ,EAAE;QAC7B;QACA,MAAMA,QAAQ,GAAGN,SAAS,CAACO,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAKJ,SAAS,CAACC,QAAQ,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACxF,IAAIH,QAAQ,EAAE;UACZ,IAAI,CAACT,MAAM,GAAGS,QAAQ;QACxB;MACF;IACF,CAAC;IAAA,KAEDI,SAAS,GAAIC,IAAY,IAAK;MAC5B,IAAIC,UAAU;MACd,QAAQ,IAAI,CAACf,MAAM;QACjB,KAAKP,QAAQ,CAACuB,KAAK;UACjBD,UAAU,GAAGrB,EAAE,CAACoB,IAAI,CAAC;UACrB;QACF,KAAKrB,QAAQ,CAACwB,KAAK;UACjBF,UAAU,GAAGnB,EAAE,CAACkB,IAAI,CAAC;UACrB;QACF,KAAKrB,QAAQ,CAACyB,KAAK;UACjBH,UAAU,GAAGlB,EAAE,CAACiB,IAAI,CAAC;UACrB;QACF;UACEC,UAAU,GAAGpB,EAAE,CAACmB,IAAI,CAAC;UACrB;MACJ;MACA,OAAOC,UAAU;IACnB,CAAC;EAAA;EArCD,IAAII,IAAIA,CAAA,EAAG;IACT,OAAO,IAAI,CAACnB,MAAM,KAAKP,QAAQ,CAACQ,KAAK;EACvC;AAoCF;AAEA,OAAO,MAAMmB,IAAI,GAAG,IAAItB,IAAI,CAAC,CAAC;;AAE9B;AACA,eAAe,SAASuB,aAAaA,CAACC,GAAW,EAAEC,OAAY,GAAG,CAAC,CAAC,EAAE;EACpE,MAAMC,OAAO,GAAGJ,IAAI,CAACP,SAAS,CAACS,GAAG,CAAC;EACnC,IAAIE,OAAO,EAAE;IACX,IAAIC,GAAG,GAAGD,OAAO;IACjB,IAAID,OAAO,CAAClB,MAAM,EAAE;MAClBD,MAAM,CAACsB,IAAI,CAACH,OAAO,CAAClB,MAAM,CAAC,CAACsB,OAAO,CAAEC,CAAC,IAAK;QACzCH,GAAG,GAAGA,GAAG,CAACI,OAAO,CAAC,IAAIC,MAAM,CAAE,IAAGF,CAAE,GAAE,EAAE,GAAG,CAAC,EAAEL,OAAO,CAAClB,MAAM,CAACuB,CAAC,CAAC,CAAC;MACjE,CAAC,CAAC;IACJ;IACA,OAAOH,GAAG;EACZ;EACA,OAAOH,GAAG;AACZ","ignoreList":[]},"metadata":{},"sourceType":"module"}