{"ast":null,"code":"import OntologyStore from './OntologyStore';\nimport UndoStore from './UndoStore';\nimport SettingsStore from './SettingsStore';\nimport ReviewsStore from './ReviewsStore';\n/**\n * root store\n * @class\n */\nclass RootStore {\n  constructor() {\n    this.ontology = void 0;\n    this.undo = void 0;\n    this.review = void 0;\n    this.setting = void 0;\n    this.ontology = new OntologyStore(this);\n    this.undo = new UndoStore(this);\n    this.review = new ReviewsStore(this);\n    this.setting = new SettingsStore(this);\n  }\n  async init(payload) {\n    this.ontology.setOntology(payload.ontology);\n    this.setting.initPayload(payload);\n    this.review.init(payload.jobProxy.toolMode, payload.issue_types);\n    const reviews = await payload.jobProxy.loadReviews();\n    this.review.setInitialData(reviews);\n  }\n}\nconst rootStore = new RootStore();\nexport default rootStore;","map":{"version":3,"names":["OntologyStore","UndoStore","SettingsStore","ReviewsStore","RootStore","constructor","ontology","undo","review","setting","init","payload","setOntology","initPayload","jobProxy","toolMode","issue_types","reviews","loadReviews","setInitialData","rootStore"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/keypoint/store/RootStore.ts"],"sourcesContent":["import OntologyStore from './OntologyStore';\nimport UndoStore from './UndoStore';\nimport SettingsStore from './SettingsStore';\nimport ReviewsStore from './ReviewsStore';\nimport { Payload } from '../types';\n\n/**\n * root store\n * @class\n */\nclass RootStore {\n  ontology: OntologyStore;\n\n  undo: UndoStore;\n\n  review: ReviewsStore;\n\n  setting: SettingsStore;\n\n  constructor() {\n    this.ontology = new OntologyStore(this);\n    this.undo = new UndoStore(this);\n    this.review = new ReviewsStore(this);\n    this.setting = new SettingsStore(this);\n  }\n\n  async init(payload: Payload) {\n    this.ontology.setOntology(payload.ontology);\n    this.setting.initPayload(payload);\n    this.review.init(payload.jobProxy.toolMode, payload.issue_types);\n\n    const reviews = await payload.jobProxy.loadReviews();\n    this.review.setInitialData(reviews);\n  }\n}\nconst rootStore = new RootStore();\n\nexport type RootStoreType = typeof rootStore;\n\nexport default rootStore;\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,YAAY,MAAM,gBAAgB;AAGzC;AACA;AACA;AACA;AACA,MAAMC,SAAS,CAAC;EASdC,WAAWA,CAAA,EAAG;IAAA,KARdC,QAAQ;IAAA,KAERC,IAAI;IAAA,KAEJC,MAAM;IAAA,KAENC,OAAO;IAGL,IAAI,CAACH,QAAQ,GAAG,IAAIN,aAAa,CAAC,IAAI,CAAC;IACvC,IAAI,CAACO,IAAI,GAAG,IAAIN,SAAS,CAAC,IAAI,CAAC;IAC/B,IAAI,CAACO,MAAM,GAAG,IAAIL,YAAY,CAAC,IAAI,CAAC;IACpC,IAAI,CAACM,OAAO,GAAG,IAAIP,aAAa,CAAC,IAAI,CAAC;EACxC;EAEA,MAAMQ,IAAIA,CAACC,OAAgB,EAAE;IAC3B,IAAI,CAACL,QAAQ,CAACM,WAAW,CAACD,OAAO,CAACL,QAAQ,CAAC;IAC3C,IAAI,CAACG,OAAO,CAACI,WAAW,CAACF,OAAO,CAAC;IACjC,IAAI,CAACH,MAAM,CAACE,IAAI,CAACC,OAAO,CAACG,QAAQ,CAACC,QAAQ,EAAEJ,OAAO,CAACK,WAAW,CAAC;IAEhE,MAAMC,OAAO,GAAG,MAAMN,OAAO,CAACG,QAAQ,CAACI,WAAW,CAAC,CAAC;IACpD,IAAI,CAACV,MAAM,CAACW,cAAc,CAACF,OAAO,CAAC;EACrC;AACF;AACA,MAAMG,SAAS,GAAG,IAAIhB,SAAS,CAAC,CAAC;AAIjC,eAAegB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}