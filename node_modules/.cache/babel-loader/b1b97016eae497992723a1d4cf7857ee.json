{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/phonetic-transcription/components/Validator/index.tsx\";\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport CommonValidator, { Theme } from '../../../common/tabs-menu/Validator';\nimport i18n from '../../locales';\nimport rootStore from '../../store/RootStore';\nimport { ValidationType, ReviewResult } from '../../types';\nimport './index.scss';\nclass Validator extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.handleSync = async () => {\n      await this.props.triggerValidation();\n    };\n    this.handleAction = warning => {\n      const {\n        id,\n        message,\n        comment,\n        warningType\n      } = warning;\n      const instance = rootStore.instance.getInstanceById(id);\n      if (instance) {\n        const {\n          start: iStart\n        } = instance;\n        const {\n          placement: {\n            duration\n          },\n          displayBuffer: {\n            start,\n            end,\n            precent\n          }\n        } = rootStore.analyse;\n        if (iStart <= start * duration || iStart >= end * duration) {\n          const visibleDuration = precent * duration;\n          let newStart = iStart - visibleDuration / 4;\n          newStart = newStart >= 0 ? newStart : 0;\n          rootStore.analyse.setDisplayBuffer({\n            start: newStart / duration,\n            end: (newStart + visibleDuration) / duration,\n            precent\n          });\n        }\n        rootStore.analyse.setSelectedTime(iStart);\n        rootStore.instance.setSelectedInstance(instance);\n        if (warningType === ValidationType.QUALITY) {\n          rootStore.review.setCurrentReview({\n            instanceId: id,\n            result: ReviewResult.REJECT,\n            type: message.split(','),\n            comment,\n            validationType: warningType\n          });\n        } else {\n          const review = rootStore.review.reviewsResult.find(({\n            instanceId\n          }) => instanceId === id);\n          rootStore.review.setCurrentReview(review);\n        }\n      }\n    };\n    this.warningMoreHandleAction = (key, warning) => {\n      if (key === ReviewResult.REJECT) return;\n      const {\n        id\n      } = warning;\n      const review = {\n        instanceId: id,\n        result: key\n      };\n      const {\n        currentReview\n      } = rootStore.review;\n      const updatedReviews = {};\n      if (key === 'delete') {\n        rootStore.review.deleteReviewByInstance(id);\n        updatedReviews[id] = undefined;\n      } else if (id === (currentReview === null || currentReview === void 0 ? void 0 : currentReview.instanceId)) {\n        rootStore.review.setCurrentReview(review);\n      } else {\n        updatedReviews[id] = review;\n        rootStore.review.setReview(review);\n      }\n      rootStore.review.setUpdatedReviews(updatedReviews);\n    };\n  }\n  // eslint-disable-next-line class-methods-use-this\n  getCategoryByWarning(warning) {\n    const {\n      id\n    } = warning;\n    const instance = rootStore.instance.getInstanceById(id);\n    const {\n      categories\n    } = rootStore.ontology;\n    return instance && categories.find(c => c.className === instance.category);\n  }\n  // eslint-disable-next-line class-methods-use-this\n  renderWarningTitle(warning) {\n    const {\n      id\n    } = warning;\n    const instance = rootStore.instance.getInstanceById(id);\n    if (instance) {\n      const {\n        category\n      } = instance;\n      const {\n        categoryInstancesMap,\n        getCurrentSplitInstance\n      } = rootStore.instance;\n      let instanceNum;\n      const categoryInstances = categoryInstancesMap[category];\n      const prevInstance = getCurrentSplitInstance(instance.category, instance.start);\n      if (prevInstance) {\n        const index = categoryInstances.findIndex(i => i.start === prevInstance.start);\n        instanceNum = index + 2;\n      } else {\n        instanceNum = 1;\n      }\n      return `${category} ${instanceNum}`;\n    }\n    return '';\n  }\n  render() {\n    const ValidationTypeTitle = {\n      [ValidationType.ATTR_EMPTY]: i18n.translate('VALIDATION_TYPE_ATTR_EMPTY'),\n      [ValidationType.CUSTOM]: i18n.translate('VALIDATION_TYPE_CUSTOM'),\n      [ValidationType.QUALITY]: i18n.translate('VALIDATION_TYPE_QUALITY')\n    };\n    return /*#__PURE__*/React.createElement(CommonValidator, {\n      isEnabled: rootStore.review.isEnabled,\n      theme: Theme.LIGHT,\n      validationTypes: ValidationTypeTitle,\n      warnings: rootStore.review.warnings,\n      errors: rootStore.review.errors,\n      containerWidth: \"286px\",\n      titleFormatter: count => i18n.translate('VALIDATION_TITLE', {\n        values: {\n          count\n        }\n      }),\n      checkingMsgFormatter: () => i18n.translate('VALIDATION_CHECKING'),\n      onValidate: this.handleSync,\n      renderWarningTitle: warning => this.renderWarningTitle(warning),\n      showWarningAction: warning => !!this.getCategoryByWarning(warning),\n      onWarningAction: warning => this.handleAction(warning),\n      onMoreHandleAction: this.warningMoreHandleAction,\n      formatMessage: i18n.translate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    });\n  }\n}\nexport default observer(Validator);","map":{"version":3,"names":["React","observer","CommonValidator","Theme","i18n","rootStore","ValidationType","ReviewResult","Validator","Component","constructor","args","handleSync","props","triggerValidation","handleAction","warning","id","message","comment","warningType","instance","getInstanceById","start","iStart","placement","duration","displayBuffer","end","precent","analyse","visibleDuration","newStart","setDisplayBuffer","setSelectedTime","setSelectedInstance","QUALITY","review","setCurrentReview","instanceId","result","REJECT","type","split","validationType","reviewsResult","find","warningMoreHandleAction","key","currentReview","updatedReviews","deleteReviewByInstance","undefined","setReview","setUpdatedReviews","getCategoryByWarning","categories","ontology","c","className","category","renderWarningTitle","categoryInstancesMap","getCurrentSplitInstance","instanceNum","categoryInstances","prevInstance","index","findIndex","i","render","ValidationTypeTitle","ATTR_EMPTY","translate","CUSTOM","createElement","isEnabled","theme","LIGHT","validationTypes","warnings","errors","containerWidth","titleFormatter","count","values","checkingMsgFormatter","onValidate","showWarningAction","onWarningAction","onMoreHandleAction","formatMessage","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/phonetic-transcription/components/Validator/index.tsx"],"sourcesContent":["import React from 'react';\nimport { observer } from 'mobx-react';\nimport CommonValidator, { IWarning, Theme } from '../../../common/tabs-menu/Validator';\nimport i18n from '../../locales';\nimport rootStore from '../../store/RootStore';\nimport { ValidationType, ReviewResult, Review, Instance } from '../../types';\nimport './index.scss';\n\ninterface ValidatorProps {\n  instances: {[instanceId: string]: Instance};\n  triggerValidation: () => Promise<boolean>;\n}\n\nclass Validator extends React.Component<ValidatorProps> {\n  // eslint-disable-next-line class-methods-use-this\n  getCategoryByWarning(warning: IWarning) {\n    const { id } = warning;\n    const instance = rootStore.instance.getInstanceById(id);\n    const { categories } = rootStore.ontology;\n    return instance &&\n      categories.find((c) => c.className === instance.category);\n  }\n\n  handleSync = async () => {\n    await this.props.triggerValidation();\n  };\n\n  handleAction = (warning: IWarning) => {\n    const { id, message, comment, warningType } = warning;\n    const instance = rootStore.instance.getInstanceById(id);\n    if (instance) {\n      const { start: iStart } = instance;\n      const { placement: { duration }, displayBuffer: { start, end, precent } } = rootStore.analyse;\n      if (iStart <= start * duration || iStart >= end * duration) {\n        const visibleDuration = precent * duration;\n        let newStart = iStart - visibleDuration / 4;\n        newStart = newStart >= 0 ? newStart : 0;\n        rootStore.analyse.setDisplayBuffer({\n          start: newStart / duration,\n          end: (newStart + visibleDuration) / duration,\n          precent\n        });\n      }\n      rootStore.analyse.setSelectedTime(iStart);\n      rootStore.instance.setSelectedInstance(instance);\n      if (warningType === ValidationType.QUALITY) {\n        rootStore.review.setCurrentReview({ instanceId: id, result: ReviewResult.REJECT, type: message.split(','), comment, validationType: warningType as ValidationType });\n      } else {\n        const review = rootStore.review.reviewsResult.find(({ instanceId }) => instanceId === id);\n        rootStore.review.setCurrentReview(review);\n      }\n    }\n  };\n\n  // eslint-disable-next-line class-methods-use-this\n  renderWarningTitle(warning: IWarning) {\n    const { id } = warning;\n    const instance = rootStore.instance.getInstanceById(id);\n    if (instance) {\n      const { category } = instance;\n      const { categoryInstancesMap, getCurrentSplitInstance } = rootStore.instance;\n\n      let instanceNum:number|undefined;\n      const categoryInstances = categoryInstancesMap[category];\n      const prevInstance = getCurrentSplitInstance(instance.category, instance.start);\n      if (prevInstance) {\n        const index = categoryInstances.findIndex((i) => i.start === prevInstance.start);\n        instanceNum = index + 2;\n      } else {\n        instanceNum = 1;\n      }\n      return `${category} ${instanceNum}`;\n    }\n    return '';\n  }\n\n  warningMoreHandleAction = (key: string, warning: IWarning) => {\n    if (key === ReviewResult.REJECT) return;\n    const { id } = warning;\n    const review: Review = {\n      instanceId: id,\n      result: key as ReviewResult\n    };\n    const { currentReview } = rootStore.review;\n    const updatedReviews: {[id: string]: Review | undefined } = {};\n    if (key === 'delete') {\n      rootStore.review.deleteReviewByInstance(id);\n      updatedReviews[id] = undefined;\n    } else if (id === currentReview?.instanceId) {\n      rootStore.review.setCurrentReview(review);\n    } else {\n      updatedReviews[id] = review;\n      rootStore.review.setReview(review);\n    }\n    rootStore.review.setUpdatedReviews(updatedReviews);\n  };\n\n  render() {\n    const ValidationTypeTitle = {\n      [ValidationType.ATTR_EMPTY]: i18n.translate('VALIDATION_TYPE_ATTR_EMPTY'),\n      [ValidationType.CUSTOM]: i18n.translate('VALIDATION_TYPE_CUSTOM'),\n      [ValidationType.QUALITY]: i18n.translate('VALIDATION_TYPE_QUALITY'),\n    };\n    return (\n      <CommonValidator\n        isEnabled={rootStore.review.isEnabled}\n        theme={Theme.LIGHT}\n        validationTypes={ValidationTypeTitle}\n        warnings={rootStore.review.warnings as IWarning[]}\n        errors={rootStore.review.errors}\n        containerWidth=\"286px\"\n        titleFormatter={(count) => i18n.translate('VALIDATION_TITLE', { values: { count } })}\n        checkingMsgFormatter={() => i18n.translate('VALIDATION_CHECKING')}\n        onValidate={this.handleSync}\n        renderWarningTitle={(warning) => this.renderWarningTitle(warning as IWarning)}\n        showWarningAction={(warning) => !!this.getCategoryByWarning(warning)}\n        onWarningAction={(warning) => this.handleAction(warning as IWarning)}\n        onMoreHandleAction={this.warningMoreHandleAction}\n        formatMessage={i18n.translate}\n      />\n    );\n  }\n}\n\nexport default observer(Validator);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}