{"ast":null,"code":"import{makeObservable,observable,toJS}from'mobx';import{cloneDeep}from'lodash';export default class Answer{constructor(_ref){let{id,original,value,originalValue,rank,attributes,model,sourceModelId}=_ref;this.id=void 0;this.original=void 0;this.value=void 0;this.originalValue=void 0;this.rank=void 0;this.attributes=void 0;this.model=void 0;this.sourceModelId=void 0;makeObservable(this,{value:observable.ref,rank:observable,attributes:observable});this.id=id;this.original=original;this.value=cloneDeep(value);this.originalValue=cloneDeep(originalValue);this.rank=cloneDeep(rank);this.attributes=cloneDeep(attributes);this.model=model;this.sourceModelId=sourceModelId;}toJSON(){return{id:this.id,original:this.original,value:cloneDeep(toJS(this.value)),originalValue:cloneDeep(toJS(this.originalValue)),rank:cloneDeep(toJS(this.rank)),attributes:cloneDeep(toJS(this.attributes)),model:this.model,sourceModelId:this.sourceModelId};}}","map":{"version":3,"names":["makeObservable","observable","toJS","cloneDeep","Answer","constructor","_ref","id","original","value","originalValue","rank","attributes","model","sourceModelId","ref","toJSON"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/question-answering/models/Answer.ts"],"sourcesContent":["import { makeObservable, observable, toJS } from 'mobx';\nimport { cloneDeep } from 'lodash';\nimport { Answer as IAnswer } from '../types';\nimport { Content, LLMModel, Rank } from '../../common/llm/types';\n\nexport default class Answer {\n  id: string;\n\n  original: boolean;\n\n  value: Content;\n\n  originalValue?: Content;\n\n  rank?: Rank;\n\n  attributes?: any;\n\n  model?: LLMModel;\n\n  sourceModelId?: string;\n\n  constructor({ id, original, value, originalValue, rank, attributes, model, sourceModelId }: IAnswer) {\n    makeObservable(this, {\n      value: observable.ref,\n      rank: observable,\n      attributes: observable,\n    });\n\n    this.id = id;\n    this.original = original;\n    this.value = cloneDeep(value);\n    this.originalValue = cloneDeep(originalValue);\n    this.rank = cloneDeep(rank);\n    this.attributes = cloneDeep(attributes);\n    this.model = model;\n    this.sourceModelId = sourceModelId;\n  }\n\n  toJSON() {\n    return {\n      id: this.id,\n      original: this.original,\n      value: cloneDeep(toJS(this.value)),\n      originalValue: cloneDeep(toJS(this.originalValue)),\n      rank: cloneDeep(toJS(this.rank)),\n      attributes: cloneDeep(toJS(this.attributes)),\n      model: this.model,\n      sourceModelId: this.sourceModelId,\n    };\n  }\n}\n"],"mappings":"AAAA,OAASA,cAAc,CAAEC,UAAU,CAAEC,IAAI,KAAQ,MAAM,CACvD,OAASC,SAAS,KAAQ,QAAQ,CAIlC,cAAe,MAAM,CAAAC,MAAO,CAiB1BC,WAAWA,CAAAC,IAAA,CAA0F,IAAzF,CAAEC,EAAE,CAAEC,QAAQ,CAAEC,KAAK,CAAEC,aAAa,CAAEC,IAAI,CAAEC,UAAU,CAAEC,KAAK,CAAEC,aAAuB,CAAC,CAAAR,IAAA,MAhBnGC,EAAE,aAEFC,QAAQ,aAERC,KAAK,aAELC,aAAa,aAEbC,IAAI,aAEJC,UAAU,aAEVC,KAAK,aAELC,aAAa,QAGXd,cAAc,CAAC,IAAI,CAAE,CACnBS,KAAK,CAAER,UAAU,CAACc,GAAG,CACrBJ,IAAI,CAAEV,UAAU,CAChBW,UAAU,CAAEX,UACd,CAAC,CAAC,CAEF,IAAI,CAACM,EAAE,CAAGA,EAAE,CACZ,IAAI,CAACC,QAAQ,CAAGA,QAAQ,CACxB,IAAI,CAACC,KAAK,CAAGN,SAAS,CAACM,KAAK,CAAC,CAC7B,IAAI,CAACC,aAAa,CAAGP,SAAS,CAACO,aAAa,CAAC,CAC7C,IAAI,CAACC,IAAI,CAAGR,SAAS,CAACQ,IAAI,CAAC,CAC3B,IAAI,CAACC,UAAU,CAAGT,SAAS,CAACS,UAAU,CAAC,CACvC,IAAI,CAACC,KAAK,CAAGA,KAAK,CAClB,IAAI,CAACC,aAAa,CAAGA,aAAa,CACpC,CAEAE,MAAMA,CAAA,CAAG,CACP,MAAO,CACLT,EAAE,CAAE,IAAI,CAACA,EAAE,CACXC,QAAQ,CAAE,IAAI,CAACA,QAAQ,CACvBC,KAAK,CAAEN,SAAS,CAACD,IAAI,CAAC,IAAI,CAACO,KAAK,CAAC,CAAC,CAClCC,aAAa,CAAEP,SAAS,CAACD,IAAI,CAAC,IAAI,CAACQ,aAAa,CAAC,CAAC,CAClDC,IAAI,CAAER,SAAS,CAACD,IAAI,CAAC,IAAI,CAACS,IAAI,CAAC,CAAC,CAChCC,UAAU,CAAET,SAAS,CAACD,IAAI,CAAC,IAAI,CAACU,UAAU,CAAC,CAAC,CAC5CC,KAAK,CAAE,IAAI,CAACA,KAAK,CACjBC,aAAa,CAAE,IAAI,CAACA,aACtB,CAAC,CACH,CACF","ignoreList":[]},"metadata":{},"sourceType":"module"}