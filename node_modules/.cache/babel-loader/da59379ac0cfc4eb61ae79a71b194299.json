{"ast":null,"code":"import React from'react';import{connect}from'react-redux';import'./QAReasonSelect.scss';import{Select}from'antd';import{translate}from'../../../constants';import{setSegmentQAReason}from'../../../redux/action';const QAReasonSelect=props=>{var _segment$qaReason;const{currentVideo,currentSegment,results,issueTypes}=props;const segment=results[currentVideo][currentSegment];const handleSelectChange=e=>{props.setSegmentQAReason({qaReason:e.join(',')});};return/*#__PURE__*/React.createElement(\"div\",{className:\"qa-reason-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"qa-reason-title\"},\"\".concat(translate('reason'),\":\")),/*#__PURE__*/React.createElement(Select,{className:\"task-select\",mode:\"multiple\",value:((_segment$qaReason=segment.qaReason)===null||_segment$qaReason===void 0?void 0:_segment$qaReason.length)>0?segment.qaReason.split(','):[],onChange:e=>handleSelectChange(e)},issueTypes.map((issue,index)=>/*#__PURE__*/React.createElement(Select.Option,{// eslint-disable-next-line react/no-array-index-key\nkey:\"qa-reson-select-item-\".concat(index),value:issue},issue))));};const mapStateToProps=state=>({results:state.results,currentVideo:state.currentVideo,currentSegment:state.currentSegment,issueTypes:state.issueTypes});const mapDispatchToProps={setSegmentQAReason};export default connect(mapStateToProps,mapDispatchToProps)(QAReasonSelect);","map":{"version":3,"names":["React","connect","Select","translate","setSegmentQAReason","QAReasonSelect","props","_segment$qaReason","currentVideo","currentSegment","results","issueTypes","segment","handleSelectChange","e","qaReason","join","createElement","className","concat","mode","value","length","split","onChange","map","issue","index","Option","key","mapStateToProps","state","mapDispatchToProps"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/SegmentDetail/QAReasonSelect/QAReasonSelect.jsx"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport './QAReasonSelect.scss';\nimport { Select } from 'antd';\nimport { translate } from '../../../constants';\nimport { setSegmentQAReason } from '../../../redux/action';\n\nconst QAReasonSelect = (props) => {\n  const { currentVideo, currentSegment, results, issueTypes } = props;\n  const segment = results[currentVideo][currentSegment];\n  const handleSelectChange = (e) => {\n    props.setSegmentQAReason({ qaReason: e.join(',') });\n  };\n  return (\n    <div className=\"qa-reason-container\">\n      <div className=\"qa-reason-title\">{`${translate('reason')}:`}</div>\n      <Select\n        className=\"task-select\"\n        mode=\"multiple\"\n        value={segment.qaReason?.length > 0 ? segment.qaReason.split(',') : []}\n        onChange={(e) => handleSelectChange(e)}\n      >\n        {issueTypes.map((issue, index) => (\n          <Select.Option\n            // eslint-disable-next-line react/no-array-index-key\n            key={`qa-reson-select-item-${index}`}\n            value={issue}\n          >\n            {issue}\n          </Select.Option>\n        ))}\n      </Select>\n    </div>\n  );\n};\n\nQAReasonSelect.propTypes = {\n};\n\nconst mapStateToProps = (state) => ({\n  results: state.results,\n  currentVideo: state.currentVideo,\n  currentSegment: state.currentSegment,\n  issueTypes: state.issueTypes,\n});\nconst mapDispatchToProps = {\n  setSegmentQAReason,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(QAReasonSelect);\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,OAAO,KAAQ,aAAa,CACrC,MAAO,uBAAuB,CAC9B,OAASC,MAAM,KAAQ,MAAM,CAC7B,OAASC,SAAS,KAAQ,oBAAoB,CAC9C,OAASC,kBAAkB,KAAQ,uBAAuB,CAE1D,KAAM,CAAAC,cAAc,CAAIC,KAAK,EAAK,KAAAC,iBAAA,CAChC,KAAM,CAAEC,YAAY,CAAEC,cAAc,CAAEC,OAAO,CAAEC,UAAW,CAAC,CAAGL,KAAK,CACnE,KAAM,CAAAM,OAAO,CAAGF,OAAO,CAACF,YAAY,CAAC,CAACC,cAAc,CAAC,CACrD,KAAM,CAAAI,kBAAkB,CAAIC,CAAC,EAAK,CAChCR,KAAK,CAACF,kBAAkB,CAAC,CAAEW,QAAQ,CAAED,CAAC,CAACE,IAAI,CAAC,GAAG,CAAE,CAAC,CAAC,CACrD,CAAC,CACD,mBACEhB,KAAA,CAAAiB,aAAA,QAAKC,SAAS,CAAC,qBAAqB,eAClClB,KAAA,CAAAiB,aAAA,QAAKC,SAAS,CAAC,iBAAiB,KAAAC,MAAA,CAAKhB,SAAS,CAAC,QAAQ,CAAC,KAAS,CAAC,cAClEH,KAAA,CAAAiB,aAAA,CAACf,MAAM,EACLgB,SAAS,CAAC,aAAa,CACvBE,IAAI,CAAC,UAAU,CACfC,KAAK,CAAE,EAAAd,iBAAA,CAAAK,OAAO,CAACG,QAAQ,UAAAR,iBAAA,iBAAhBA,iBAAA,CAAkBe,MAAM,EAAG,CAAC,CAAGV,OAAO,CAACG,QAAQ,CAACQ,KAAK,CAAC,GAAG,CAAC,CAAG,EAAG,CACvEC,QAAQ,CAAGV,CAAC,EAAKD,kBAAkB,CAACC,CAAC,CAAE,EAEtCH,UAAU,CAACc,GAAG,CAAC,CAACC,KAAK,CAAEC,KAAK,gBAC3B3B,KAAA,CAAAiB,aAAA,CAACf,MAAM,CAAC0B,MAAM,EACZ;AACAC,GAAG,yBAAAV,MAAA,CAA0BQ,KAAK,CAAG,CACrCN,KAAK,CAAEK,KAAM,EAEZA,KACY,CAChB,CACK,CACL,CAAC,CAEV,CAAC,CAKD,KAAM,CAAAI,eAAe,CAAIC,KAAK,GAAM,CAClCrB,OAAO,CAAEqB,KAAK,CAACrB,OAAO,CACtBF,YAAY,CAAEuB,KAAK,CAACvB,YAAY,CAChCC,cAAc,CAAEsB,KAAK,CAACtB,cAAc,CACpCE,UAAU,CAAEoB,KAAK,CAACpB,UACpB,CAAC,CAAC,CACF,KAAM,CAAAqB,kBAAkB,CAAG,CACzB5B,kBACF,CAAC,CACD,cAAe,CAAAH,OAAO,CAAC6B,eAAe,CAAEE,kBAAkB,CAAC,CAAC3B,cAAc,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}