{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/phonetic-transcription/components/Validator/index.tsx\";\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport CommonValidator, { Theme } from '../../../common/tabs-menu/Validator';\nimport i18n from '../../locales';\nimport rootStore from '../../store/RootStore';\nimport { ValidationType, ReviewResult } from '../../types';\nimport './index.scss';\nclass Validator extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.handleSync = async () => {\n      await this.props.triggerValidation();\n    };\n    this.handleAction = warning => {\n      const {\n        id,\n        message,\n        comment,\n        warningType\n      } = warning;\n      const instance = rootStore.instance.getInstanceById(id);\n      if (instance) {\n        const {\n          start: iStart\n        } = instance;\n        const {\n          placement: {\n            duration\n          },\n          displayBuffer: {\n            start,\n            end,\n            precent\n          }\n        } = rootStore.analyse;\n        if (iStart <= start * duration || iStart >= end * duration) {\n          const visibleDuration = precent * duration;\n          let newStart = iStart - visibleDuration / 4;\n          newStart = newStart >= 0 ? newStart : 0;\n          rootStore.analyse.setDisplayBuffer({\n            start: newStart / duration,\n            end: (newStart + visibleDuration) / duration,\n            precent\n          });\n        }\n        rootStore.analyse.setSelectedTime(iStart);\n        rootStore.instance.setSelectedInstance(instance);\n        const updatedReviews = {};\n        if (warningType === ValidationType.QUALITY) {\n          updatedReviews[id] = {\n            instanceId: id,\n            result: ReviewResult.REJECT,\n            type: message.split(','),\n            comment,\n            validationType: warningType\n          };\n        } else {\n          const review = rootStore.review.reviewsResult.find(({\n            instanceId\n          }) => instanceId === id);\n          updatedReviews[id] = review;\n        }\n        rootStore.review.setUpdatedReviews(updatedReviews);\n      }\n    };\n    this.warningMoreHandleAction = (key, warning) => {\n      if (key === ReviewResult.REJECT) return;\n      const {\n        id\n      } = warning;\n      const review = {\n        instanceId: id,\n        result: key\n      };\n      const updatedReviews = {};\n      if (key === 'delete') {\n        rootStore.review.deleteReviewByInstance(id);\n        updatedReviews[id] = undefined;\n      } else {\n        updatedReviews[id] = review;\n        rootStore.review.setReview(review);\n      }\n      rootStore.review.setUpdatedReviews(updatedReviews);\n    };\n  }\n  // eslint-disable-next-line class-methods-use-this\n  getCategoryByWarning(warning) {\n    const {\n      id\n    } = warning;\n    const instance = rootStore.instance.getInstanceById(id);\n    const {\n      categories\n    } = rootStore.ontology;\n    return instance && categories.find(c => c.className === instance.category);\n  }\n  // eslint-disable-next-line class-methods-use-this\n  renderWarningTitle(warning) {\n    const {\n      id\n    } = warning;\n    const instance = rootStore.instance.getInstanceById(id);\n    if (instance) {\n      const {\n        category\n      } = instance;\n      const {\n        categoryInstancesMap,\n        getCurrentSplitInstance\n      } = rootStore.instance;\n      let instanceNum;\n      const categoryInstances = categoryInstancesMap[category];\n      const prevInstance = getCurrentSplitInstance(instance.category, instance.start);\n      if (prevInstance) {\n        const index = categoryInstances.findIndex(i => i.start === prevInstance.start);\n        instanceNum = index + 2;\n      } else {\n        instanceNum = 1;\n      }\n      return `${category} ${instanceNum}`;\n    }\n    return i18n.translate('VALIDATION_NO_INSTANCE');\n  }\n  render() {\n    const ValidationTypeTitle = {\n      [ValidationType.ATTR_EMPTY]: i18n.translate('VALIDATION_TYPE_ATTR_EMPTY'),\n      [ValidationType.CUSTOM]: i18n.translate('VALIDATION_TYPE_CUSTOM'),\n      [ValidationType.QUALITY]: i18n.translate('VALIDATION_TYPE_QUALITY'),\n      [ValidationType.SCRIPT]: i18n.translate('VALIDATION_TYPE_SCRIPT')\n    };\n    return /*#__PURE__*/React.createElement(CommonValidator, {\n      isEnabled: rootStore.review.isEnabled,\n      theme: Theme.LIGHT,\n      validationTypes: ValidationTypeTitle,\n      warnings: rootStore.review.warnings,\n      errors: rootStore.review.errors,\n      containerWidth: \"286px\",\n      titleFormatter: count => i18n.translate('VALIDATION_TITLE', {\n        values: {\n          count\n        }\n      }),\n      checkingMsgFormatter: () => i18n.translate('VALIDATION_CHECKING'),\n      onValidate: this.handleSync,\n      renderWarningTitle: warning => this.renderWarningTitle(warning),\n      showWarningAction: warning => !!this.getCategoryByWarning(warning),\n      onWarningAction: warning => this.handleAction(warning),\n      onMoreHandleAction: this.warningMoreHandleAction,\n      formatMessage: i18n.translate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }\n    });\n  }\n}\nexport default observer(Validator);","map":{"version":3,"names":["React","observer","CommonValidator","Theme","i18n","rootStore","ValidationType","ReviewResult","Validator","Component","constructor","args","handleSync","props","triggerValidation","handleAction","warning","id","message","comment","warningType","instance","getInstanceById","start","iStart","placement","duration","displayBuffer","end","precent","analyse","visibleDuration","newStart","setDisplayBuffer","setSelectedTime","setSelectedInstance","updatedReviews","QUALITY","instanceId","result","REJECT","type","split","validationType","review","reviewsResult","find","setUpdatedReviews","warningMoreHandleAction","key","deleteReviewByInstance","undefined","setReview","getCategoryByWarning","categories","ontology","c","className","category","renderWarningTitle","categoryInstancesMap","getCurrentSplitInstance","instanceNum","categoryInstances","prevInstance","index","findIndex","i","translate","render","ValidationTypeTitle","ATTR_EMPTY","CUSTOM","SCRIPT","createElement","isEnabled","theme","LIGHT","validationTypes","warnings","errors","containerWidth","titleFormatter","count","values","checkingMsgFormatter","onValidate","showWarningAction","onWarningAction","onMoreHandleAction","formatMessage","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/phonetic-transcription/components/Validator/index.tsx"],"sourcesContent":["import React from 'react';\nimport { observer } from 'mobx-react';\nimport CommonValidator, { IWarning, Theme } from '../../../common/tabs-menu/Validator';\nimport i18n from '../../locales';\nimport rootStore from '../../store/RootStore';\nimport { ValidationType, ReviewResult, Review, Instance } from '../../types';\nimport './index.scss';\n\ninterface ValidatorProps {\n  instances: {[instanceId: string]: Instance};\n  triggerValidation: () => Promise<boolean>;\n}\n\nclass Validator extends React.Component<ValidatorProps> {\n  // eslint-disable-next-line class-methods-use-this\n  getCategoryByWarning(warning: IWarning) {\n    const { id } = warning;\n    const instance = rootStore.instance.getInstanceById(id);\n    const { categories } = rootStore.ontology;\n    return instance &&\n      categories.find((c) => c.className === instance.category);\n  }\n\n  handleSync = async () => {\n    await this.props.triggerValidation();\n  };\n\n  handleAction = (warning: IWarning) => {\n    const { id, message, comment, warningType } = warning;\n    const instance = rootStore.instance.getInstanceById(id);\n    if (instance) {\n      const { start: iStart } = instance;\n      const { placement: { duration }, displayBuffer: { start, end, precent } } = rootStore.analyse;\n      if (iStart <= start * duration || iStart >= end * duration) {\n        const visibleDuration = precent * duration;\n        let newStart = iStart - visibleDuration / 4;\n        newStart = newStart >= 0 ? newStart : 0;\n        rootStore.analyse.setDisplayBuffer({\n          start: newStart / duration,\n          end: (newStart + visibleDuration) / duration,\n          precent\n        });\n      }\n      rootStore.analyse.setSelectedTime(iStart);\n      rootStore.instance.setSelectedInstance(instance);\n      const updatedReviews: { [id: string]: Review | undefined } = {};\n      if (warningType === ValidationType.QUALITY) {\n        updatedReviews[id] = {\n          instanceId: id,\n          result: ReviewResult.REJECT,\n          type: message.split(','),\n          comment,\n          validationType: warningType as ValidationType\n        };\n      } else {\n        const review = rootStore.review.reviewsResult.find(({ instanceId }) => instanceId === id);\n        updatedReviews[id] = review;\n      }\n\n      rootStore.review.setUpdatedReviews(updatedReviews);\n    }\n  };\n\n  // eslint-disable-next-line class-methods-use-this\n  renderWarningTitle(warning: IWarning) {\n    const { id } = warning;\n    const instance = rootStore.instance.getInstanceById(id);\n    if (instance) {\n      const { category } = instance;\n      const { categoryInstancesMap, getCurrentSplitInstance } = rootStore.instance;\n\n      let instanceNum:number|undefined;\n      const categoryInstances = categoryInstancesMap[category];\n      const prevInstance = getCurrentSplitInstance(instance.category, instance.start);\n      if (prevInstance) {\n        const index = categoryInstances.findIndex((i) => i.start === prevInstance.start);\n        instanceNum = index + 2;\n      } else {\n        instanceNum = 1;\n      }\n      return `${category} ${instanceNum}`;\n    }\n    return i18n.translate('VALIDATION_NO_INSTANCE');\n  }\n\n  warningMoreHandleAction = (key: string, warning: IWarning) => {\n    if (key === ReviewResult.REJECT) return;\n    const { id } = warning;\n    const review: Review = {\n      instanceId: id,\n      result: key as ReviewResult\n    };\n    const updatedReviews: {[id: string]: Review | undefined } = {};\n    if (key === 'delete') {\n      rootStore.review.deleteReviewByInstance(id);\n      updatedReviews[id] = undefined;\n    } else {\n      updatedReviews[id] = review;\n      rootStore.review.setReview(review);\n    }\n    rootStore.review.setUpdatedReviews(updatedReviews);\n  };\n\n  render() {\n    const ValidationTypeTitle = {\n      [ValidationType.ATTR_EMPTY]: i18n.translate('VALIDATION_TYPE_ATTR_EMPTY'),\n      [ValidationType.CUSTOM]: i18n.translate('VALIDATION_TYPE_CUSTOM'),\n      [ValidationType.QUALITY]: i18n.translate('VALIDATION_TYPE_QUALITY'),\n      [ValidationType.SCRIPT]: i18n.translate('VALIDATION_TYPE_SCRIPT'),\n    };\n    return (\n      <CommonValidator\n        isEnabled={rootStore.review.isEnabled}\n        theme={Theme.LIGHT}\n        validationTypes={ValidationTypeTitle}\n        warnings={rootStore.review.warnings as IWarning[]}\n        errors={rootStore.review.errors}\n        containerWidth=\"286px\"\n        titleFormatter={(count) => i18n.translate('VALIDATION_TITLE', { values: { count } })}\n        checkingMsgFormatter={() => i18n.translate('VALIDATION_CHECKING')}\n        onValidate={this.handleSync}\n        renderWarningTitle={(warning) => this.renderWarningTitle(warning as IWarning)}\n        showWarningAction={(warning) => !!this.getCategoryByWarning(warning)}\n        onWarningAction={(warning) => this.handleAction(warning as IWarning)}\n        onMoreHandleAction={this.warningMoreHandleAction}\n        formatMessage={i18n.translate}\n      />\n    );\n  }\n}\n\nexport default observer(Validator);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}