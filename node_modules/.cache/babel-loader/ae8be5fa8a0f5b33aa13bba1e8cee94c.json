{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/multi-channel/components/Sidebar/index.tsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport { CellMeasurer, CellMeasurerCache, List, AutoSizer } from 'react-virtualized';\nimport { debounce } from 'lodash';\nimport { observer } from 'mobx-react';\nimport InstanceItem from './InstanceItem';\nimport store from '../../store/RootStore';\nimport i18n from '../../locales';\nimport './index.scss';\nconst cache = new CellMeasurerCache({\n  fixedWidth: true\n});\nconst rowHeights = {};\nconst SideBar = () => {\n  const {\n    instance: {\n      allInstances,\n      displayInstances: instances,\n      selectedInstanceId\n    },\n    waveform: {\n      hideChannels,\n      currentTime\n    }\n  } = store;\n  const [hide, setHide] = useState(0);\n  const [isVisible, setIsVisible] = useState(true);\n  const listRef = useRef(null);\n  const instancesRef = useRef(null);\n  const resizeObserver = new ResizeObserver(entries => {\n    entries.forEach(entry => {\n      const index = Number(entry.target.dataset.index);\n      const offsetHeight = entry.target.offsetHeight;\n      if (!Number.isNaN(index)) {\n        updateRowHeight(index, offsetHeight);\n      }\n    });\n  });\n  const observeItem = (element, index) => {\n    element.dataset.index = `${index}`;\n    resizeObserver.observe(element);\n  };\n  const unobserveItem = element => {\n    resizeObserver.unobserve(element);\n  };\n  useEffect(() => {\n    let intersectionObserver = null;\n    if (instancesRef.current) {\n      intersectionObserver = new IntersectionObserver(([enter]) => {\n        setIsVisible(enter.isIntersecting);\n      });\n      intersectionObserver.observe(instancesRef.current);\n    }\n    return () => {\n      if (intersectionObserver) {\n        intersectionObserver.disconnect();\n      }\n    };\n  }, []);\n  useEffect(() => {\n    setHide(allInstances.length - instances.length);\n  }, [allInstances, instances]);\n  useEffect(() => {\n    const index = instances.findIndex(i => i.id === selectedInstanceId);\n    if (index >= 0 && listRef.current) {\n      var _listRef$current;\n      (_listRef$current = listRef.current) === null || _listRef$current === void 0 ? void 0 : _listRef$current.scrollToRow(index);\n    }\n  }, [selectedInstanceId]);\n  const getRowHeight = ({\n    index\n  }) => rowHeights[index] || 82;\n  const resizeList = debounce(() => {\n    var _listRef$current2;\n    (_listRef$current2 = listRef.current) === null || _listRef$current2 === void 0 ? void 0 : _listRef$current2.recomputeRowHeights();\n  }, 50);\n  const updateRowHeight = (index, height) => {\n    if (rowHeights[index] !== height) {\n      cache.clear(index, 0);\n      rowHeights[index] = height;\n      resizeList();\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"side-menus-container\",\n    onContextMenu: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"side-tip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, i18n.translate('MENU_SENTENCE_TIP', {\n    values: {\n      channels: hideChannels.length,\n      count: hide\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"side-instances-container\",\n    ref: instancesRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AutoSizer, {\n    onResize: () => cache.clearAll(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, ({\n    width,\n    height\n  }) => /*#__PURE__*/React.createElement(List, {\n    className: \"side-instances\",\n    ref: listRef,\n    style: {\n      outline: 'none'\n    },\n    width: width,\n    height: height,\n    deferredMeasurementCache: cache,\n    rowCount: instances.length,\n    rowHeight: getRowHeight,\n    rowRenderer: ({\n      index,\n      key,\n      parent,\n      style\n    }) => /*#__PURE__*/React.createElement(CellMeasurer, {\n      cache: cache,\n      columnIndex: 0,\n      key: key,\n      parent: parent,\n      rowIndex: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 19\n      }\n    }, isVisible && /*#__PURE__*/React.createElement(InstanceItem, {\n      key: instances[index].id,\n      index: index,\n      instance: instances[index],\n      selectedInstanceId: selectedInstanceId,\n      currentTime: currentTime,\n      observeItem: observeItem,\n      unobserveItem: unobserveItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 23\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }))));\n};\nexport default observer(SideBar);","map":{"version":3,"names":["React","useState","useEffect","useRef","ResizeObserver","CellMeasurer","CellMeasurerCache","List","AutoSizer","debounce","observer","InstanceItem","store","i18n","cache","fixedWidth","rowHeights","SideBar","instance","allInstances","displayInstances","instances","selectedInstanceId","waveform","hideChannels","currentTime","hide","setHide","isVisible","setIsVisible","listRef","instancesRef","resizeObserver","entries","forEach","entry","index","Number","target","dataset","offsetHeight","isNaN","updateRowHeight","observeItem","element","observe","unobserveItem","unobserve","intersectionObserver","current","IntersectionObserver","enter","isIntersecting","disconnect","length","findIndex","i","id","_listRef$current","scrollToRow","getRowHeight","resizeList","_listRef$current2","recomputeRowHeights","height","clear","createElement","className","onContextMenu","e","preventDefault","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","translate","values","channels","count","ref","onResize","clearAll","width","style","outline","deferredMeasurementCache","rowCount","rowHeight","rowRenderer","key","parent","columnIndex","rowIndex"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/multi-channel/components/Sidebar/index.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport { CellMeasurer, CellMeasurerCache, List, AutoSizer } from 'react-virtualized';\nimport { debounce } from 'lodash';\nimport { observer } from 'mobx-react';\nimport InstanceItem from './InstanceItem';\nimport store from '../../store/RootStore';\nimport i18n from '../../locales';\nimport { Instance } from '../../types';\nimport './index.scss';\n\nexport interface SideBarProps {\n  allInstances: Instance[];\n  instances: Instance[];\n  hideChannels: number[];\n  selectedInstanceId?: string;\n  currentTime: number;\n}\n\nconst cache = new CellMeasurerCache({\n  fixedWidth: true,\n});\n\nconst rowHeights: { [index: number]: number | undefined } = {};\n\nconst SideBar = () => {\n  const {\n    instance: { allInstances, displayInstances: instances, selectedInstanceId },\n    waveform: { hideChannels, currentTime }\n  } = store;\n\n  const [hide, setHide] = useState<number>(0);\n  const [isVisible, setIsVisible] = useState(true);\n  const listRef = useRef<List>(null);\n  const instancesRef = useRef<HTMLDivElement>(null);\n\n  const resizeObserver = new ResizeObserver((entries) => {\n    entries.forEach((entry) => {\n      const index = Number((entry.target as HTMLDivElement).dataset.index);\n      const offsetHeight = (entry.target as HTMLDivElement).offsetHeight;\n      if (!Number.isNaN(index)) {\n        updateRowHeight(index, offsetHeight);\n      }\n    });\n  });\n\n  const observeItem = (element: HTMLDivElement, index: number) => {\n    element.dataset.index = `${index}`;\n    resizeObserver.observe(element);\n  };\n\n  const unobserveItem = (element: HTMLDivElement) => {\n    resizeObserver.unobserve(element);\n  };\n\n  useEffect(() => {\n    let intersectionObserver: IntersectionObserver | null = null;\n    if (instancesRef.current) {\n      intersectionObserver = new IntersectionObserver(([enter]) => {\n        setIsVisible(enter.isIntersecting);\n      });\n      intersectionObserver.observe(instancesRef.current);\n    }\n    return () => {\n      if (intersectionObserver) {\n        intersectionObserver.disconnect();\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    setHide(allInstances.length - instances.length);\n  }, [allInstances, instances]);\n\n  useEffect(() => {\n    const index = instances.findIndex((i) => i.id === selectedInstanceId);\n    if (index >= 0 && listRef.current) {\n      listRef.current?.scrollToRow(index);\n    }\n  }, [selectedInstanceId]);\n\n  const getRowHeight = ({ index }: { index: number }) => rowHeights[index] || 82;\n\n  const resizeList = debounce(() => {\n    listRef.current?.recomputeRowHeights();\n  }, 50);\n\n  const updateRowHeight = (index: number, height?: number) => {\n    if (rowHeights[index] !== height) {\n      cache.clear(index, 0);\n      rowHeights[index] = height;\n      resizeList();\n    }\n  };\n\n  return (\n    <div\n      className=\"side-menus-container\"\n      onContextMenu={(e) => e.preventDefault()}\n    >\n      <div className=\"side-tip\">{i18n.translate('MENU_SENTENCE_TIP', { values: { channels: hideChannels.length, count: hide } })}</div>\n      <div className=\"side-instances-container\" ref={instancesRef}>\n        <AutoSizer onResize={() => cache.clearAll()}>\n          {({ width, height }) => (\n            <List\n              className=\"side-instances\"\n              ref={listRef}\n              style={{ outline: 'none' }}\n              width={width}\n              height={height}\n              deferredMeasurementCache={cache}\n              rowCount={instances.length}\n              rowHeight={getRowHeight}\n              rowRenderer={({ index, key, parent, style }) => (\n                <CellMeasurer\n                  cache={cache}\n                  columnIndex={0}\n                  key={key}\n                  parent={parent}\n                  rowIndex={index}\n                >\n                  <div style={style}>\n                    {isVisible && (\n                      <InstanceItem\n                        key={instances[index].id}\n                        index={index}\n                        instance={instances[index]}\n                        selectedInstanceId={selectedInstanceId}\n                        currentTime={currentTime}\n                        observeItem={observeItem}\n                        unobserveItem={unobserveItem}\n                      />\n                    )}\n                  </div>\n                </CellMeasurer>\n              )}\n            />\n          )}\n        </AutoSizer>\n      </div>\n    </div>\n  );\n};\n\nexport default observer(SideBar);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}