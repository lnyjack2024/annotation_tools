{"ast":null,"code":"import _initializerDefineProperty from \"/Users/qzheng/Documents/webroot/annotation_tools/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/qzheng/Documents/webroot/annotation_tools/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/qzheng/Documents/webroot/annotation_tools/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\nvar _class,\n  _class2,\n  _descriptor,\n  _descriptor2,\n  _descriptor3,\n  _descriptor4,\n  _descriptor5,\n  _descriptor6,\n  _descriptor7,\n  _descriptor8,\n  _descriptor9,\n  _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/translation/index.tsx\";\nimport React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { observable, computed, toJS, makeObservable } from 'mobx';\nimport { observer } from 'mobx-react';\nimport { message } from 'antd';\nimport Toolbar from './components/Toolbar';\nimport Video from './components/Video';\nimport Navigator from './components/Navigator';\nimport TranslationList from './components/TranslationList';\nimport { StatusType } from './types';\nimport { ACTIVE_TEXTAREA_ID } from './constants';\nimport formatMessage, { setLocale } from './locales';\nimport AutoSaver from '../common/AutoSaver';\nimport { isPreview, isAnnotationReadonly, isReviewEditable } from '../../utils/tool-mode';\nimport './index.scss';\nlet Translation = observer(_class = (_class2 = class Translation extends React.Component {\n  constructor(props) {\n    super(props);\n    /**\n     * video component reference\n     */\n    this.video = React.createRef();\n    /**\n     * saved status used for undo & redo\n     */\n    this.savedStatus = [];\n    /**\n     * saved search key\n     */\n    this.searchKey = '';\n    /**\n     * undo & redo pointer\n     */\n    _initializerDefineProperty(this, \"pointer\", _descriptor, this);\n    /**\n     * loading\n     */\n    _initializerDefineProperty(this, \"loading\", _descriptor2, this);\n    /**\n     * subtitle items\n     */\n    _initializerDefineProperty(this, \"subtitles\", _descriptor3, this);\n    /**\n     * selected subtitle index\n     */\n    _initializerDefineProperty(this, \"current\", _descriptor4, this);\n    /**\n     * marked subtitle index list\n     */\n    _initializerDefineProperty(this, \"marks\", _descriptor5, this);\n    /**\n     * search results\n     */\n    _initializerDefineProperty(this, \"searchResults\", _descriptor6, this);\n    /**\n     * current focused search result\n     */\n    _initializerDefineProperty(this, \"currentResult\", _descriptor7, this);\n    /**\n     * is replace modal active\n     */\n    _initializerDefineProperty(this, \"replaceActive\", _descriptor8, this);\n    /**\n     * review list\n     */\n    _initializerDefineProperty(this, \"reviews\", _descriptor9, this);\n    this.keyboardListener = event => {\n      switch (event.key.toLowerCase()) {\n        case 'tab':\n          event.preventDefault();\n          if (event.shiftKey && this.current - 1 >= 0) {\n            // prev row\n            this.current -= 1;\n          } else if (!event.shiftKey && this.current + 1 < this.subtitles.length) {\n            // next row\n            this.current += 1;\n          }\n          break;\n        case 'z':\n          if (event.ctrlKey || event.metaKey) {\n            event.preventDefault();\n            if (event.shiftKey) {\n              this.redo();\n            } else {\n              this.undo();\n            }\n          }\n          break;\n        case 'y':\n          if (event.ctrlKey || event.metaKey) {\n            event.preventDefault();\n            this.redo();\n          }\n          break;\n        default:\n      }\n    };\n    this.onSave = async () => {\n      const {\n        toolMode\n      } = this.props.jobProxy;\n      if (isPreview(toolMode)) {\n        return;\n      }\n      const promises = [this.saveResult('temp')]; // always save because marks should be saved all the time\n      // if (isReviewEditable(toolMode)) {\n      //   promises.push(this.saveReview());\n      // }\n\n      try {\n        await Promise.all(promises);\n        message.success(formatMessage('SAVE_SUCCESS'));\n      } catch (e) {\n        message.error(formatMessage('SAVE_FAIL'));\n      }\n    };\n    this.saveResult = (type = 'submit') => {\n      if (this.loading) {\n        throw new Error(formatMessage('LOADING_ALERT'));\n      }\n      return this.props.jobProxy.saveResult({\n        auditId: this.props.jobProxy.auditFileId,\n        subtitles: toJS(this.subtitles),\n        ...(type !== 'submit' && {\n          marks: toJS(this.marks)\n        })\n      }, type === 'submit');\n    };\n    this.saveReview = (type = 'submit') => {\n      if (this.loading) {\n        throw new Error(formatMessage('LOADING_ALERT'));\n      }\n      return this.props.jobProxy.saveReviews(toJS(this.reviews), type === 'submit');\n    };\n    this.undo = () => {\n      if (this.pointer > 0) {\n        this.pointer -= 1;\n        const {\n          type,\n          before,\n          after\n        } = this.savedStatus[this.pointer];\n        this.updateStatus(type, before, after);\n      }\n    };\n    this.redo = () => {\n      if (this.pointer < this.savedStatus.length) {\n        const {\n          type,\n          before,\n          after\n        } = this.savedStatus[this.pointer];\n        this.pointer += 1;\n        this.updateStatus(type, after, before);\n      }\n    };\n    /**\n     * dummy search cancel function, will be overwritten in search\n     */\n    this.cancelSearch = () => {};\n    this.search = key => {\n      this.searchResults = [];\n      this.currentResult = -1;\n      this.cancelSearch(); // always cancel previous search\n      if (key) {\n        this.searchKey = key;\n        const cancelPromise = new Promise(resolve => {\n          this.cancelSearch = resolve;\n        });\n        const searchPromise = new Promise(resolve => {\n          const results = [];\n          this.subtitles.forEach((subtitle, rowIndex) => {\n            const {\n              target = ''\n            } = subtitle;\n            let fromIndex = 0;\n            while (fromIndex >= 0 && fromIndex < target.length) {\n              const index = target.indexOf(key, fromIndex);\n              if (index >= 0) {\n                const start = index;\n                const end = index + key.length;\n                results.push({\n                  rowIndex,\n                  start,\n                  end,\n                  text: target\n                });\n                fromIndex = end;\n              } else {\n                fromIndex = -1;\n              }\n            }\n          });\n          resolve(results);\n        });\n        Promise.race([searchPromise, cancelPromise]).then(res => {\n          if (res) {\n            this.searchResults = res;\n            if (this.searchResults.length > 0) {\n              this.currentResult = 0;\n            }\n          }\n        });\n      }\n    };\n    this.replace = key => {\n      if (this.searchResults.length <= 0 || this.currentResult < 0) {\n        return;\n      }\n      const {\n        rowIndex,\n        start,\n        end\n      } = this.searchResults[this.currentResult];\n      const {\n        target = ''\n      } = this.subtitles[rowIndex];\n      const newTarget = `${target.substring(0, start)}${key}${target.substring(end)}`;\n      this.subtitles[rowIndex].target = newTarget;\n      this.searchResults.splice(this.currentResult, 1);\n      const beforeStatus = [{\n        index: rowIndex,\n        content: target\n      }];\n      const afterStatus = [{\n        index: rowIndex,\n        content: newTarget\n      }];\n      this.saveStatus(StatusType.REPLACE, beforeStatus, afterStatus);\n    };\n    this.replaceAll = key => {\n      if (this.searchResults.length <= 0 || this.currentResult < 0) {\n        return;\n      }\n      const beforeStatus = [];\n      const afterStatus = [];\n      this.searchResults.forEach(({\n        rowIndex,\n        start,\n        end\n      }) => {\n        const {\n          target = ''\n        } = this.subtitles[rowIndex];\n        const newTarget = `${target.substring(0, start)}${key}${target.substring(end)}`;\n        this.subtitles[rowIndex].target = newTarget;\n        if (beforeStatus.findIndex(bs => bs.index === rowIndex) < 0) {\n          beforeStatus.push({\n            index: rowIndex,\n            content: target\n          }); // only push once\n        }\n        const afterIndex = afterStatus.findIndex(as => as.index === rowIndex);\n        if (afterIndex < 0) {\n          afterStatus.push({\n            index: rowIndex,\n            content: newTarget\n          });\n        } else {\n          afterStatus.splice(afterIndex, 1, {\n            index: rowIndex,\n            content: newTarget\n          });\n        }\n      });\n      this.searchResults = [];\n      this.currentResult = -1;\n      this.saveStatus(StatusType.REPLACE, beforeStatus, afterStatus);\n    };\n    this.findNext = () => {\n      if (this.currentResult < this.searchResults.length - 1) {\n        this.currentResult += 1;\n      } else {\n        this.currentResult = 0;\n      }\n    };\n    this.focusResult = index => {\n      this.currentResult = index;\n    };\n    this.targetSubtitleByTime = time => this.subtitles.findIndex(s => time >= s.start && time < s.end);\n    this.getSubtitleByIndex = index => toJS(this.subtitles[index]);\n    this.handleCurrentChange = current => {\n      if (this.subtitles[this.current] && !this.subtitles[this.current].target && this.marks.includes(this.current)) {\n        // delete mark if clear the translation\n        const index = this.marks.indexOf(this.current);\n        this.marks.splice(index, 1);\n      }\n      this.current = current;\n    };\n    this.handleSubtitleChange = (index, target, lastAnchor, currAnchor, lastTarget, skipSave = false) => {\n      const beforeStatus = [{\n        index,\n        anchor: lastAnchor,\n        content: lastTarget || this.subtitles[index].target\n      }];\n      const afterStatus = [{\n        index,\n        anchor: currAnchor,\n        content: target\n      }];\n      this.subtitles[index].target = target;\n      if (!skipSave) {\n        this.saveStatus(StatusType.TRANSLATION, beforeStatus, afterStatus);\n      }\n    };\n    this.handleSubtitlePlay = index => {\n      var _this$video$current;\n      const {\n        start\n      } = this.subtitles[index];\n      (_this$video$current = this.video.current) === null || _this$video$current === void 0 ? void 0 : _this$video$current.playAt(start);\n    };\n    this.handleToggleMark = index => {\n      if (this.subtitles[index] && this.subtitles[index].target) {\n        const beforeStatus = [];\n        const afterStatus = [];\n        const markIndex = this.marks.indexOf(index);\n        if (markIndex < 0) {\n          // mark\n          this.marks.push(index);\n          afterStatus.push({\n            index\n          });\n        } else {\n          // delete mark\n          this.marks.splice(markIndex, 1);\n          beforeStatus.push({\n            index\n          });\n        }\n        this.saveStatus(StatusType.MARK, beforeStatus, afterStatus);\n      }\n    };\n    this.handleMarkDelete = index => {\n      const markIndex = this.marks.indexOf(index);\n      if (markIndex >= 0) {\n        this.marks.splice(markIndex, 1);\n      }\n    };\n    this.handleBatchMark = (start, end, mark) => {\n      let s = start;\n      let e = end;\n      if (start > end) {\n        s = end;\n        e = start;\n      }\n      const beforeStatus = [];\n      const afterStatus = [];\n      for (let i = s - 1; i < e; i += 1) {\n        const subtitle = this.subtitles[i];\n        if (subtitle && subtitle.target) {\n          const index = this.marks.indexOf(i);\n          if (mark && index < 0) {\n            this.marks.push(i);\n            afterStatus.push({\n              index: i\n            });\n          } else if (!mark && index >= 0) {\n            this.marks.splice(index, 1);\n            beforeStatus.push({\n              index: i\n            });\n          }\n        }\n      }\n      if (beforeStatus.length > 0 || afterStatus.length > 0) {\n        this.saveStatus(StatusType.MARK, beforeStatus, afterStatus);\n      }\n    };\n    this.handleActivateReplace = active => {\n      this.replaceActive = active;\n      if (active) {\n        this.handleCurrentChange(-1);\n      }\n    };\n    setLocale(props.locale);\n    makeObservable(this);\n  }\n\n  /**\n   * is undo disabled\n   */\n  get undoDisabled() {\n    return this.pointer <= 0;\n  }\n\n  /**\n   * is redo disabled\n   */\n  get redoDisabled() {\n    return this.pointer >= this.savedStatus.length;\n  }\n  componentDidMount() {\n    this.init();\n    window.addEventListener('keydown', this.keyboardListener, false);\n  }\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.keyboardListener, false);\n  }\n  saveStatus(type, before, after) {\n    this.savedStatus = this.savedStatus.slice(0, this.pointer);\n    this.savedStatus.push({\n      type,\n      before,\n      after\n    });\n    if (this.savedStatus.length > 200) {\n      // max stack length is 100\n      this.savedStatus.shift();\n    } else {\n      this.pointer += 1;\n    }\n  }\n  updateStatus(type, curr, prev) {\n    switch (type) {\n      case StatusType.TRANSLATION:\n        curr.forEach(item => {\n          this.subtitles[item.index].target = item.content;\n        });\n        if (curr.length === 1) {\n          if (curr[0].index !== this.current) {\n            this.current = curr[0].index;\n          }\n          setTimeout(() => {\n            // set right anchor after the textarea changes\n            const activeInput = document.getElementById(ACTIVE_TEXTAREA_ID);\n            const {\n              anchor\n            } = curr[0];\n            activeInput.setSelectionRange(anchor, anchor);\n          }, 0);\n        }\n        break;\n      case StatusType.MARK:\n        prev.forEach(item => {\n          const index = this.marks.indexOf(item.index);\n          if (index >= 0) {\n            this.marks.splice(index, 1);\n          }\n        });\n        curr.forEach(item => {\n          const index = this.marks.indexOf(item.index);\n          if (index < 0) {\n            this.marks.push(item.index);\n          }\n        });\n        break;\n      case StatusType.REPLACE:\n        curr.forEach(item => {\n          this.subtitles[item.index].target = item.content;\n        });\n        this.search(this.searchKey);\n        break;\n      default:\n    }\n  }\n  async init() {\n    const reviewFrom = await this.props.jobProxy.loadResult();\n    if (Array.isArray(reviewFrom)) {\n      this.subtitles = [...reviewFrom];\n    } else if (reviewFrom) {\n      if (reviewFrom.auditId) {\n        this.props.jobProxy.setAuditId(reviewFrom.auditId);\n      }\n      if (reviewFrom.subtitles) {\n        this.subtitles = [...reviewFrom.subtitles];\n      }\n      if (reviewFrom.marks) {\n        this.marks = [...reviewFrom.marks];\n      }\n    }\n\n    // fix subtitles\n    this.subtitles.forEach(subtitle => {\n      if (!subtitle.id) {\n        // eslint-disable-next-line no-param-reassign\n        subtitle.id = uuidv4();\n      }\n      if (subtitle.target === undefined && subtitle.pretranslation) {\n        // when init, if target not provided, use pretranslation instead\n        // eslint-disable-next-line no-param-reassign\n        subtitle.target = subtitle.pretranslation;\n      }\n    });\n    // fix marks\n    this.marks = this.marks.filter(m => m >= 0 && m < this.subtitles.length);\n\n    // render complete\n    this.props.renderComplete();\n    this.loading = false;\n  }\n  render() {\n    return !this.loading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"translation-app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AutoSaver, {\n      leaveCheck: true,\n      data: {\n        subtitles: toJS(this.subtitles),\n        marks: toJS(this.marks)\n      },\n      save: () => this.saveResult('temp'),\n      onSaved: () => message.success(formatMessage('AUTO_SAVE_SUCCESS')),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Toolbar, {\n      current: this.current,\n      undoDisabled: this.undoDisabled,\n      redoDisabled: this.redoDisabled,\n      undo: this.undo,\n      redo: this.redo,\n      searchResults: toJS(this.searchResults),\n      currentResult: this.currentResult,\n      search: this.search,\n      replace: this.replace,\n      replaceAll: this.replaceAll,\n      findNext: this.findNext,\n      focusResult: this.focusResult,\n      activateReplace: this.handleActivateReplace,\n      mark: (start, end) => this.handleBatchMark(start, end, true),\n      unmark: (start, end) => this.handleBatchMark(start, end, false),\n      save: this.onSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fixed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Video, {\n      ref: this.video,\n      url: this.props.video_url,\n      targetCurrent: this.handleCurrentChange,\n      targetSubtitle: this.targetSubtitleByTime,\n      getSubtitleByIndex: this.getSubtitleByIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Navigator, {\n      subtitles: toJS(this.subtitles),\n      current: this.current,\n      marks: toJS(this.marks),\n      onCurrentChange: this.handleCurrentChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TranslationList, {\n      editable: !isAnnotationReadonly(this.props.jobProxy.toolMode) && !isPreview(this.props.jobProxy.toolMode),\n      reviewable: isReviewEditable(this.props.jobProxy.toolMode),\n      subtitles: toJS(this.subtitles),\n      current: this.current,\n      marks: toJS(this.marks),\n      searchResults: toJS(this.searchResults),\n      currentResult: this.currentResult,\n      replaceActive: this.replaceActive,\n      onCurrentChange: this.handleCurrentChange,\n      onSubtitleChange: this.handleSubtitleChange,\n      onSubtitlePlay: this.handleSubtitlePlay,\n      onMarkToggle: this.handleToggleMark,\n      onMarkDelete: this.handleMarkDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 13\n      }\n    }))));\n  }\n}, _descriptor = _applyDecoratedDescriptor(_class2.prototype, \"pointer\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return 0;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"loading\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return true;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, \"subtitles\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, \"current\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return -1;\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, \"marks\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, \"searchResults\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, \"currentResult\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return -1;\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, \"replaceActive\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, \"reviews\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return {};\n  }\n}), _applyDecoratedDescriptor(_class2.prototype, \"undoDisabled\", [computed], Object.getOwnPropertyDescriptor(_class2.prototype, \"undoDisabled\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"redoDisabled\", [computed], Object.getOwnPropertyDescriptor(_class2.prototype, \"redoDisabled\"), _class2.prototype), _class2)) || _class;\nexport default Translation;","map":{"version":3,"names":["React","v4","uuidv4","observable","computed","toJS","makeObservable","observer","message","Toolbar","Video","Navigator","TranslationList","StatusType","ACTIVE_TEXTAREA_ID","formatMessage","setLocale","AutoSaver","isPreview","isAnnotationReadonly","isReviewEditable","Translation","_class","_class2","Component","constructor","props","video","createRef","savedStatus","searchKey","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","keyboardListener","event","key","toLowerCase","preventDefault","shiftKey","current","subtitles","length","ctrlKey","metaKey","redo","undo","onSave","toolMode","jobProxy","promises","saveResult","Promise","all","success","e","error","type","loading","Error","auditId","auditFileId","marks","saveReview","saveReviews","reviews","pointer","before","after","updateStatus","cancelSearch","search","searchResults","currentResult","cancelPromise","resolve","searchPromise","results","forEach","subtitle","rowIndex","target","fromIndex","index","indexOf","start","end","push","text","race","then","res","replace","newTarget","substring","splice","beforeStatus","content","afterStatus","saveStatus","REPLACE","replaceAll","findIndex","bs","afterIndex","as","findNext","focusResult","targetSubtitleByTime","time","s","getSubtitleByIndex","handleCurrentChange","includes","handleSubtitleChange","lastAnchor","currAnchor","lastTarget","skipSave","anchor","TRANSLATION","handleSubtitlePlay","_this$video$current","playAt","handleToggleMark","markIndex","MARK","handleMarkDelete","handleBatchMark","mark","i","handleActivateReplace","active","replaceActive","locale","undoDisabled","redoDisabled","componentDidMount","init","window","addEventListener","componentWillUnmount","removeEventListener","slice","shift","curr","prev","item","setTimeout","activeInput","document","getElementById","setSelectionRange","reviewFrom","loadResult","Array","isArray","setAuditId","id","undefined","pretranslation","filter","m","renderComplete","render","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","leaveCheck","data","save","onSaved","activateReplace","unmark","ref","url","video_url","targetCurrent","targetSubtitle","onCurrentChange","editable","reviewable","onSubtitleChange","onSubtitlePlay","onMarkToggle","onMarkDelete","_applyDecoratedDescriptor","prototype","configurable","enumerable","writable","initializer","Object","getOwnPropertyDescriptor"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/translation/index.tsx"],"sourcesContent":["import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { observable, computed, toJS, makeObservable } from 'mobx';\nimport { observer } from 'mobx-react';\nimport { message } from 'antd';\nimport Toolbar from './components/Toolbar';\nimport Video from './components/Video';\nimport Navigator from './components/Navigator';\nimport TranslationList from './components/TranslationList';\nimport { Subtitle, Status, StatusType, StatusItem, SubtitleStatus, MarkStatus, SearchResult, ReviewItem, ReplaceStatus } from './types';\nimport { ACTIVE_TEXTAREA_ID } from './constants';\nimport formatMessage, { setLocale } from './locales';\nimport AutoSaver from '../common/AutoSaver';\nimport JobProxy from '../../libs/JobProxy';\nimport { isPreview, isAnnotationReadonly, isReviewEditable } from '../../utils/tool-mode';\nimport './index.scss';\n\ninterface TranslationProps {\n  jobProxy: JobProxy;\n  video_url: string;\n  locale?: string;\n  renderComplete: () => Promise<void>;\n}\n\n@observer\nclass Translation extends React.Component<TranslationProps> {\n  /**\n   * video component reference\n   */\n  video = React.createRef<Video>();\n\n  /**\n   * saved status used for undo & redo\n   */\n  savedStatus: Status[] = [];\n\n  /**\n   * saved search key\n   */\n  searchKey = '';\n\n  /**\n   * undo & redo pointer\n   */\n  @observable pointer = 0;\n\n  /**\n   * loading\n   */\n  @observable loading = true;\n\n  /**\n   * subtitle items\n   */\n  @observable subtitles: Subtitle[] = [];\n\n  /**\n   * selected subtitle index\n   */\n  @observable current = -1;\n\n  /**\n   * marked subtitle index list\n   */\n  @observable marks: number[] = [];\n\n  /**\n   * search results\n   */\n  @observable searchResults: SearchResult[] = [];\n\n  /**\n   * current focused search result\n   */\n  @observable currentResult = -1;\n\n  /**\n   * is replace modal active\n   */\n  @observable replaceActive = false;\n\n  /**\n   * review list\n   */\n  @observable reviews: {[id: string]: ReviewItem} = {};\n\n  constructor(props: TranslationProps) {\n    super(props);\n    setLocale(props.locale);\n    makeObservable(this);\n  }\n\n  /**\n   * is undo disabled\n   */\n  @computed get undoDisabled() {\n    return this.pointer <= 0;\n  }\n\n  /**\n   * is redo disabled\n   */\n  @computed get redoDisabled() {\n    return this.pointer >= this.savedStatus.length;\n  }\n\n  componentDidMount() {\n    this.init();\n    window.addEventListener('keydown', this.keyboardListener, false);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.keyboardListener, false);\n  }\n\n  saveStatus(type: StatusType, before: StatusItem[], after: StatusItem[]) {\n    this.savedStatus = this.savedStatus.slice(0, this.pointer);\n    this.savedStatus.push({ type, before, after });\n    if (this.savedStatus.length > 200) { // max stack length is 100\n      this.savedStatus.shift();\n    } else {\n      this.pointer += 1;\n    }\n  }\n\n  updateStatus(type: StatusType, curr: StatusItem[], prev: StatusItem[]) {\n    switch (type) {\n      case StatusType.TRANSLATION:\n        (curr as SubtitleStatus[]).forEach((item) => {\n          this.subtitles[item.index].target = item.content;\n        });\n        if (curr.length === 1) {\n          if (curr[0].index !== this.current) {\n            this.current = curr[0].index;\n          }\n          setTimeout(() => {\n            // set right anchor after the textarea changes\n            const activeInput = document.getElementById(ACTIVE_TEXTAREA_ID) as HTMLTextAreaElement;\n            const { anchor } = curr[0] as SubtitleStatus;\n            activeInput.setSelectionRange(anchor, anchor);\n          }, 0);\n        }\n        break;\n      case StatusType.MARK:\n        (prev as MarkStatus[]).forEach((item) => {\n          const index = this.marks.indexOf(item.index);\n          if (index >= 0) {\n            this.marks.splice(index, 1);\n          }\n        });\n        (curr as MarkStatus[]).forEach((item) => {\n          const index = this.marks.indexOf(item.index);\n          if (index < 0) {\n            this.marks.push(item.index);\n          }\n        });\n        break;\n      case StatusType.REPLACE:\n        (curr as SubtitleStatus[]).forEach((item) => {\n          this.subtitles[item.index].target = item.content;\n        });\n        this.search(this.searchKey);\n        break;\n      default:\n    }\n  }\n\n  async init() {\n    const reviewFrom = await this.props.jobProxy.loadResult();\n    if (Array.isArray(reviewFrom)) {\n      this.subtitles = [...reviewFrom];\n    } else if (reviewFrom) {\n      if (reviewFrom.auditId) {\n        this.props.jobProxy.setAuditId(reviewFrom.auditId);\n      }\n      if (reviewFrom.subtitles) {\n        this.subtitles = [...reviewFrom.subtitles];\n      }\n      if (reviewFrom.marks) {\n        this.marks = [...reviewFrom.marks];\n      }\n    }\n\n    // fix subtitles\n    this.subtitles.forEach((subtitle) => {\n      if (!subtitle.id) {\n        // eslint-disable-next-line no-param-reassign\n        subtitle.id = uuidv4();\n      }\n      if (subtitle.target === undefined && subtitle.pretranslation) {\n        // when init, if target not provided, use pretranslation instead\n        // eslint-disable-next-line no-param-reassign\n        subtitle.target = subtitle.pretranslation;\n      }\n    });\n    // fix marks\n    this.marks = this.marks.filter((m) => m >= 0 && m < this.subtitles.length);\n\n    // render complete\n    this.props.renderComplete();\n    this.loading = false;\n  }\n\n  keyboardListener = (event: KeyboardEvent) => {\n    switch (event.key.toLowerCase()) {\n      case 'tab':\n        event.preventDefault();\n        if (event.shiftKey && this.current - 1 >= 0) {\n          // prev row\n          this.current -= 1;\n        } else if (!event.shiftKey && this.current + 1 < this.subtitles.length) {\n          // next row\n          this.current += 1;\n        }\n        break;\n      case 'z':\n        if (event.ctrlKey || event.metaKey) {\n          event.preventDefault();\n          if (event.shiftKey) {\n            this.redo();\n          } else {\n            this.undo();\n          }\n        }\n        break;\n      case 'y':\n        if (event.ctrlKey || event.metaKey) {\n          event.preventDefault();\n          this.redo();\n        }\n        break;\n      default:\n    }\n  };\n\n  onSave = async () => {\n    const { toolMode } = this.props.jobProxy;\n    if (isPreview(toolMode)) {\n      return;\n    }\n\n    const promises = [this.saveResult('temp')]; // always save because marks should be saved all the time\n    // if (isReviewEditable(toolMode)) {\n    //   promises.push(this.saveReview());\n    // }\n\n    try {\n      await Promise.all(promises);\n      message.success(formatMessage('SAVE_SUCCESS'));\n    } catch (e) {\n      message.error(formatMessage('SAVE_FAIL'));\n    }\n  };\n\n  saveResult = (type = 'submit') => {\n    if (this.loading) {\n      throw new Error(formatMessage('LOADING_ALERT'));\n    }\n    return this.props.jobProxy.saveResult({\n      auditId: this.props.jobProxy.auditFileId,\n      subtitles: toJS(this.subtitles),\n      ...(type !== 'submit' && { marks: toJS(this.marks) }),\n    }, type === 'submit');\n  };\n\n  saveReview = (type = 'submit') => {\n    if (this.loading) {\n      throw new Error(formatMessage('LOADING_ALERT'));\n    }\n    return this.props.jobProxy.saveReviews(toJS(this.reviews), type === 'submit');\n  };\n\n  undo = () => {\n    if (this.pointer > 0) {\n      this.pointer -= 1;\n      const { type, before, after } = this.savedStatus[this.pointer];\n      this.updateStatus(type, before, after);\n    }\n  };\n\n  redo = () => {\n    if (this.pointer < this.savedStatus.length) {\n      const { type, before, after } = this.savedStatus[this.pointer];\n      this.pointer += 1;\n      this.updateStatus(type, after, before);\n    }\n  };\n\n  /**\n   * dummy search cancel function, will be overwritten in search\n   */\n  cancelSearch = () => {};\n\n  search = (key: string) => {\n    this.searchResults = [];\n    this.currentResult = -1;\n    this.cancelSearch(); // always cancel previous search\n    if (key) {\n      this.searchKey = key;\n      const cancelPromise = new Promise((resolve) => {\n        this.cancelSearch = resolve as () => void;\n      });\n      const searchPromise = new Promise((resolve) => {\n        const results: SearchResult[] = [];\n        this.subtitles.forEach((subtitle, rowIndex) => {\n          const { target = '' } = subtitle;\n          let fromIndex = 0;\n          while (fromIndex >= 0 && fromIndex < target.length) {\n            const index = target.indexOf(key, fromIndex);\n            if (index >= 0) {\n              const start = index;\n              const end = index + key.length;\n              results.push({ rowIndex, start, end, text: target });\n              fromIndex = end;\n            } else {\n              fromIndex = -1;\n            }\n          }\n        });\n        resolve(results);\n      });\n\n      Promise.race([searchPromise, cancelPromise]).then((res) => {\n        if (res) {\n          this.searchResults = res as SearchResult[];\n          if (this.searchResults.length > 0) {\n            this.currentResult = 0;\n          }\n        }\n      });\n    }\n  };\n\n  replace = (key: string) => {\n    if (this.searchResults.length <= 0 || this.currentResult < 0) {\n      return;\n    }\n    const { rowIndex, start, end } = this.searchResults[this.currentResult];\n    const { target = '' } = this.subtitles[rowIndex];\n    const newTarget = `${target.substring(0, start)}${key}${target.substring(end)}`;\n    this.subtitles[rowIndex].target = newTarget;\n    this.searchResults.splice(this.currentResult, 1);\n\n    const beforeStatus: ReplaceStatus[] = [{\n      index: rowIndex,\n      content: target,\n    }];\n    const afterStatus: ReplaceStatus[] = [{\n      index: rowIndex,\n      content: newTarget,\n    }];\n    this.saveStatus(StatusType.REPLACE, beforeStatus, afterStatus);\n  };\n\n  replaceAll = (key: string) => {\n    if (this.searchResults.length <= 0 || this.currentResult < 0) {\n      return;\n    }\n    const beforeStatus: ReplaceStatus[] = [];\n    const afterStatus: ReplaceStatus[] = [];\n    this.searchResults.forEach(({ rowIndex, start, end }) => {\n      const { target = '' } = this.subtitles[rowIndex];\n      const newTarget = `${target.substring(0, start)}${key}${target.substring(end)}`;\n      this.subtitles[rowIndex].target = newTarget;\n\n      if (beforeStatus.findIndex((bs) => bs.index === rowIndex) < 0) {\n        beforeStatus.push({ index: rowIndex, content: target }); // only push once\n      }\n      const afterIndex = afterStatus.findIndex((as) => as.index === rowIndex);\n      if (afterIndex < 0) {\n        afterStatus.push({ index: rowIndex, content: newTarget });\n      } else {\n        afterStatus.splice(afterIndex, 1, { index: rowIndex, content: newTarget });\n      }\n    });\n    this.searchResults = [];\n    this.currentResult = -1;\n    this.saveStatus(StatusType.REPLACE, beforeStatus, afterStatus);\n  };\n\n  findNext = () => {\n    if (this.currentResult < this.searchResults.length - 1) {\n      this.currentResult += 1;\n    } else {\n      this.currentResult = 0;\n    }\n  };\n\n  focusResult = (index: number) => {\n    this.currentResult = index;\n  };\n\n  targetSubtitleByTime = (time: number) => this.subtitles.findIndex((s) => time >= s.start && time < s.end);\n\n  getSubtitleByIndex = (index: number) => toJS(this.subtitles[index]);\n\n  handleCurrentChange = (current: number) => {\n    if (this.subtitles[this.current] && !this.subtitles[this.current].target && this.marks.includes(this.current)) {\n      // delete mark if clear the translation\n      const index = this.marks.indexOf(this.current);\n      this.marks.splice(index, 1);\n    }\n    this.current = current;\n  };\n\n  handleSubtitleChange = (index: number, target: string, lastAnchor: number, currAnchor: number, lastTarget?: string, skipSave = false) => {\n    const beforeStatus: SubtitleStatus[] = [{\n      index,\n      anchor: lastAnchor,\n      content: lastTarget || this.subtitles[index].target,\n    }];\n    const afterStatus: SubtitleStatus[] = [{\n      index,\n      anchor: currAnchor,\n      content: target,\n    }];\n    this.subtitles[index].target = target;\n    if (!skipSave) {\n      this.saveStatus(StatusType.TRANSLATION, beforeStatus, afterStatus);\n    }\n  };\n\n  handleSubtitlePlay = (index: number) => {\n    const { start } = this.subtitles[index];\n    this.video.current?.playAt(start);\n  };\n\n  handleToggleMark = (index: number) => {\n    if (this.subtitles[index] && this.subtitles[index].target) {\n      const beforeStatus: MarkStatus[] = [];\n      const afterStatus: MarkStatus[] = [];\n      const markIndex = this.marks.indexOf(index);\n      if (markIndex < 0) {\n        // mark\n        this.marks.push(index);\n        afterStatus.push({ index });\n      } else {\n        // delete mark\n        this.marks.splice(markIndex, 1);\n        beforeStatus.push({ index });\n      }\n      this.saveStatus(StatusType.MARK, beforeStatus, afterStatus);\n    }\n  };\n\n  handleMarkDelete = (index: number) => {\n    const markIndex = this.marks.indexOf(index);\n    if (markIndex >= 0) {\n      this.marks.splice(markIndex, 1);\n    }\n  };\n\n  handleBatchMark = (start: number, end: number, mark: boolean) => {\n    let s = start;\n    let e = end;\n    if (start > end) {\n      s = end;\n      e = start;\n    }\n    const beforeStatus: MarkStatus[] = [];\n    const afterStatus: MarkStatus[] = [];\n    for (let i = s - 1; i < e; i += 1) {\n      const subtitle = this.subtitles[i];\n      if (subtitle && subtitle.target) {\n        const index = this.marks.indexOf(i);\n        if (mark && index < 0) {\n          this.marks.push(i);\n          afterStatus.push({ index: i });\n        } else if (!mark && index >= 0) {\n          this.marks.splice(index, 1);\n          beforeStatus.push({ index: i });\n        }\n      }\n    }\n    if (beforeStatus.length > 0 || afterStatus.length > 0) {\n      this.saveStatus(StatusType.MARK, beforeStatus, afterStatus);\n    }\n  };\n\n  handleActivateReplace = (active: boolean) => {\n    this.replaceActive = active;\n    if (active) {\n      this.handleCurrentChange(-1);\n    }\n  };\n\n  render() {\n    return !this.loading && (\n      <div className=\"translation-app\">\n        <AutoSaver\n          leaveCheck\n          data={{ subtitles: toJS(this.subtitles), marks: toJS(this.marks) }}\n          save={() => this.saveResult('temp')}\n          onSaved={() => message.success(formatMessage('AUTO_SAVE_SUCCESS'))}\n        />\n        <Toolbar\n          current={this.current}\n          undoDisabled={this.undoDisabled}\n          redoDisabled={this.redoDisabled}\n          undo={this.undo}\n          redo={this.redo}\n          searchResults={toJS(this.searchResults)}\n          currentResult={this.currentResult}\n          search={this.search}\n          replace={this.replace}\n          replaceAll={this.replaceAll}\n          findNext={this.findNext}\n          focusResult={this.focusResult}\n          activateReplace={this.handleActivateReplace}\n          mark={(start, end) => this.handleBatchMark(start, end, true)}\n          unmark={(start, end) => this.handleBatchMark(start, end, false)}\n          save={this.onSave}\n        />\n        <div className=\"container\">\n          <div className=\"fixed\">\n            <Video\n              ref={this.video}\n              url={this.props.video_url}\n              targetCurrent={this.handleCurrentChange}\n              targetSubtitle={this.targetSubtitleByTime}\n              getSubtitleByIndex={this.getSubtitleByIndex}\n            />\n            <Navigator\n              subtitles={toJS(this.subtitles)}\n              current={this.current}\n              marks={toJS(this.marks)}\n              onCurrentChange={this.handleCurrentChange}\n            />\n          </div>\n          <div className=\"flex\">\n            <TranslationList\n              editable={!isAnnotationReadonly(this.props.jobProxy.toolMode) && !isPreview(this.props.jobProxy.toolMode)}\n              reviewable={isReviewEditable(this.props.jobProxy.toolMode)}\n              subtitles={toJS(this.subtitles)}\n              current={this.current}\n              marks={toJS(this.marks)}\n              searchResults={toJS(this.searchResults)}\n              currentResult={this.currentResult}\n              replaceActive={this.replaceActive}\n              onCurrentChange={this.handleCurrentChange}\n              onSubtitleChange={this.handleSubtitleChange}\n              onSubtitlePlay={this.handleSubtitlePlay}\n              onMarkToggle={this.handleToggleMark}\n              onMarkDelete={this.handleMarkDelete}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Translation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}