{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/editable-text/components/toolBar/index.jsx\";\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { observer } from 'mobx-react';\nimport { toJS } from 'mobx';\nimport { CheckCircleFilled, CloseCircleFilled, DownOutlined, RightOutlined, SearchOutlined } from '@ant-design/icons';\nimport { cloneDeep, debounce } from 'lodash';\nimport cx from 'classnames';\nimport { Input } from 'antd';\nimport { generateConfigKeyByKeys } from '../../utils/helper';\nimport localMessage from '../../locale';\nimport ToolGroup from './toolGroup';\nimport store from '../../store/RootStore';\nimport { MISSING_LABEL } from '../../store/constant';\nconst Toolbar = observer(props => {\n  const {\n    currentBrush,\n    setCurrentBrush,\n    contentReadyOnly,\n    inputEnable\n  } = props;\n  const [scrollTop, setScrollTop] = useState(0);\n  const [isFocus, setIsFocus] = useState(false);\n  const [filterValue, setFilterValue] = useState();\n  const [typeSet, setTypeSet] = useState(new Set());\n  const [filteredOntologies, setFilteredOntologies] = useState();\n  useEffect(() => {\n    setFilteredOntologies(cloneDeep(store.ontology.ontologies));\n  }, [store.ontology.ontologies]);\n  useEffect(() => {\n    if (filteredOntologies) {\n      const set = new Set();\n      Object.entries(filteredOntologies).forEach(([key]) => {\n        if (!set.has(key)) set.add(key);\n      });\n      setTypeSet(set);\n    }\n  }, [filteredOntologies]);\n  const filterOntologiesBySearch = (arr, value) => {\n    const newChildren = [];\n    arr === null || arr === void 0 ? void 0 : arr.forEach(item => {\n      if ((item.displayName || item.text).includes(value)) {\n        newChildren.push(item);\n      } else {\n        const children = filterOntologiesBySearch(item.children, value);\n        if (children) {\n          item.children = cloneDeep(children);\n          newChildren.push(item);\n        }\n      }\n    });\n    return newChildren.length > 0 ? newChildren : undefined;\n  };\n  const handleSearch = value => {\n    if (value) {\n      const newFilteredOntologies = {};\n      if (store.ontology.ontologies && typeSet.size !== 0) {\n        Array.from(typeSet).forEach(type => {\n          newFilteredOntologies[type] = filterOntologiesBySearch(store.ontology.ontologies[type], value);\n        });\n      }\n      setFilteredOntologies(newFilteredOntologies);\n    } else {\n      setFilteredOntologies(store.ontology.ontologies);\n    }\n  };\n  const filteredResultEmpty = useMemo(() => {\n    if (filteredOntologies && Object.keys(filteredOntologies).length > 0) {\n      return !Object.values(filteredOntologies).some(item => item && item.length > 0);\n    }\n    return true;\n  }, [filteredOntologies]);\n  const toggleCollapseAll = collapseStatus => {\n    store.ontology.updateOntologiesCollapseStatusAll(collapseStatus);\n  };\n  const onChange = e => {\n    setFilterValue(e.target.value);\n    onInputChange(e.target.value);\n  };\n  const onInputChange = debounce(value => {\n    handleSearch(value);\n  }, 100);\n  const isCollapseAll = useMemo(() => {\n    if (!store.ontology.ontologiesStatusMap || store.ontology.ontologiesStatusMap.size === 0) {\n      return true;\n    }\n    const missKeys = generateConfigKeyByKeys(MISSING_LABEL.keys);\n    // eslint-disable-next-line no-restricted-syntax\n    for (const [key, value] of store.ontology.ontologiesStatusMap) {\n      if (key !== missKeys) {\n        if (!value.isCollapse) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }, [toJS(store.ontology.ontologiesStatusMap)]);\n  const currentFixedText = useMemo(() => {\n    if (currentBrush) {\n      const keys = currentBrush.keys.reduce((prev, cur, index) => {\n        let key = generateConfigKeyByKeys([cur]);\n        if (prev.length > 0) {\n          const last = prev[prev.length - 1];\n          key = generateConfigKeyByKeys([last, cur]);\n        }\n        prev.push(key);\n        return prev;\n      }, []);\n      return keys.map(key => {\n        const item = store.ontology.ontologyConfigMap.get(key);\n        return {\n          color: item.color,\n          text: item.displayName || item.text\n        };\n      });\n    }\n    return '';\n  }, [currentBrush]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tool-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }, contentReadyOnly ? null : /*#__PURE__*/React.createElement(\"button\", {\n    className: `edit-trigger ${currentBrush === null && inputEnable ? 'tool-item-focus' : ''}`,\n    onClick: () => setCurrentBrush(null, !inputEnable),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, localMessage('EDIT_TEXT')), /*#__PURE__*/React.createElement(\"div\", {\n    className: cx('filter-container', {\n      isFocus\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onFocus: () => setIsFocus(true),\n    onBlur: () => setIsFocus(false),\n    value: filterValue,\n    className: \"filter-input\",\n    placeholder: localMessage('COMMON_SEARCH'),\n    prefix: /*#__PURE__*/React.createElement(SearchOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }\n    }),\n    allowClear: true,\n    onPressEnter: () => {\n      handleSearch(filterValue);\n    },\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  })), filterValue && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-result-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, filteredResultEmpty ? `${localMessage('COMMON_SEARCH__NO_RESULT')}` : `${localMessage('COMMON_SEARCH_RESULT')}`), !filteredResultEmpty && /*#__PURE__*/React.createElement(React.Fragment, null, store.reviewable && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"review-info-tips\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CheckCircleFilled, {\n    style: {\n      color: '#51CD44',\n      marginRight: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }), `${localMessage('REVIEW_APPROVE_TIP')}`), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CloseCircleFilled, {\n    style: {\n      color: '#D45058',\n      marginRight: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }), `${localMessage('REVIEW_REJECT_TIP')}`)), (typeSet === null || typeSet === void 0 ? void 0 : typeSet.has('labels_qa')) && filteredOntologies.labels_qa && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tag-container-review\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ToolGroup, {\n    type: \"labels_qa\",\n    filteredOntologies: filteredOntologies,\n    setCurrentBrush: setCurrentBrush,\n    currentBrush: currentBrush,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"collapse-button\",\n    onClick: () => toggleCollapseAll(!isCollapseAll),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, isCollapseAll ? /*#__PURE__*/React.createElement(RightOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 28\n    }\n  }) : /*#__PURE__*/React.createElement(DownOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 48\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginLeft: 6\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, isCollapseAll ? localMessage('EXPAND_ALL') : localMessage('COLLAPSE_ALL'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tag-container-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, currentBrush && scrollTop > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tool-group-fixed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, currentFixedText.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item-left\",\n    key: item.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"item-left-color\",\n    style: {\n      background: item.color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"item-left-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, item.text), index + 1 !== currentFixedText.length && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"item-left-split\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 60\n    }\n  }, \"/\")))), filteredOntologies && typeSet.size !== 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tag-container\",\n    onScroll: e => setScrollTop(e.target.scrollTop),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, Array.from(typeSet).map(type => {\n    if (!filteredOntologies[type] || type === 'labels_qa') {\n      return null;\n    }\n    return /*#__PURE__*/React.createElement(ToolGroup, {\n      key: type,\n      type: type,\n      filteredOntologies: filteredOntologies,\n      setCurrentBrush: setCurrentBrush,\n      currentBrush: currentBrush,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 19\n      }\n    });\n  })))));\n});\nexport default Toolbar;","map":{"version":3,"names":["React","useEffect","useState","useMemo","observer","toJS","CheckCircleFilled","CloseCircleFilled","DownOutlined","RightOutlined","SearchOutlined","cloneDeep","debounce","cx","Input","generateConfigKeyByKeys","localMessage","ToolGroup","store","MISSING_LABEL","Toolbar","props","currentBrush","setCurrentBrush","contentReadyOnly","inputEnable","scrollTop","setScrollTop","isFocus","setIsFocus","filterValue","setFilterValue","typeSet","setTypeSet","Set","filteredOntologies","setFilteredOntologies","ontology","ontologies","set","Object","entries","forEach","key","has","add","filterOntologiesBySearch","arr","value","newChildren","item","displayName","text","includes","push","children","length","undefined","handleSearch","newFilteredOntologies","size","Array","from","type","filteredResultEmpty","keys","values","some","toggleCollapseAll","collapseStatus","updateOntologiesCollapseStatusAll","onChange","e","target","onInputChange","isCollapseAll","ontologiesStatusMap","missKeys","isCollapse","currentFixedText","reduce","prev","cur","index","last","map","ontologyConfigMap","get","color","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onFocus","onBlur","placeholder","prefix","allowClear","onPressEnter","Fragment","reviewable","style","marginRight","labels_qa","marginLeft","background","onScroll"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/editable-text/components/toolBar/index.jsx"],"sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\nimport { observer } from 'mobx-react';\nimport { toJS } from 'mobx';\nimport { CheckCircleFilled, CloseCircleFilled, DownOutlined, RightOutlined, SearchOutlined } from '@ant-design/icons';\nimport { cloneDeep, debounce } from 'lodash';\nimport cx from 'classnames';\nimport { Input } from 'antd';\nimport { generateConfigKeyByKeys } from '../../utils/helper';\nimport localMessage from '../../locale';\nimport ToolGroup from './toolGroup';\nimport store from '../../store/RootStore';\nimport { MISSING_LABEL } from '../../store/constant';\n\nconst Toolbar = observer((props) => {\n  const {\n    currentBrush,\n    setCurrentBrush,\n    contentReadyOnly,\n    inputEnable,\n  } = props;\n  const [scrollTop, setScrollTop] = useState(0);\n  const [isFocus, setIsFocus] = useState(false);\n  const [filterValue, setFilterValue] = useState();\n  const [typeSet, setTypeSet] = useState(new Set());\n\n  const [filteredOntologies, setFilteredOntologies] = useState();\n  useEffect(() => {\n    setFilteredOntologies(cloneDeep(store.ontology.ontologies));\n  }, [store.ontology.ontologies]);\n\n  useEffect(() => {\n    if (filteredOntologies) {\n      const set = new Set();\n      Object.entries(filteredOntologies).forEach(([key]) => {\n        if (!set.has(key)) set.add(key);\n      });\n      setTypeSet(set);\n    }\n  }, [filteredOntologies]);\n\n  const filterOntologiesBySearch = (arr, value) => {\n    const newChildren = [];\n    arr?.forEach((item) => {\n      if ((item.displayName || item.text).includes(value)) {\n        newChildren.push(item);\n      } else {\n        const children = filterOntologiesBySearch(item.children, value);\n        if (children) {\n          item.children = cloneDeep(children);\n          newChildren.push(item);\n        }\n      }\n    });\n    return newChildren.length > 0 ? newChildren : undefined;\n  };\n\n  const handleSearch = (value) => {\n    if (value) {\n      const newFilteredOntologies = {};\n      if (store.ontology.ontologies && typeSet.size !== 0) {\n        Array.from(typeSet).forEach((type) => {\n          newFilteredOntologies[type] = filterOntologiesBySearch(store.ontology.ontologies[type], value);\n        });\n      }\n      setFilteredOntologies(newFilteredOntologies);\n    } else {\n      setFilteredOntologies(store.ontology.ontologies);\n    }\n  };\n\n  const filteredResultEmpty = useMemo(() => {\n    if (filteredOntologies && Object.keys(filteredOntologies).length > 0) {\n      return !(Object.values(filteredOntologies).some((item) => item && item.length > 0));\n    }\n    return true;\n  }, [filteredOntologies]);\n\n  const toggleCollapseAll = (collapseStatus) => {\n    store.ontology.updateOntologiesCollapseStatusAll(collapseStatus);\n  };\n\n  const onChange = (e) => {\n    setFilterValue(e.target.value);\n    onInputChange(e.target.value);\n  };\n\n  const onInputChange = debounce((value) => {\n    handleSearch(value);\n  }, 100);\n\n  const isCollapseAll = useMemo(() => {\n    if (!store.ontology.ontologiesStatusMap || store.ontology.ontologiesStatusMap.size === 0) {\n      return true;\n    }\n    const missKeys = generateConfigKeyByKeys(MISSING_LABEL.keys);\n    // eslint-disable-next-line no-restricted-syntax\n    for (const [key, value] of store.ontology.ontologiesStatusMap) {\n      if (key !== missKeys) {\n        if (!value.isCollapse) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }, [toJS(store.ontology.ontologiesStatusMap)]);\n\n  const currentFixedText = useMemo(() => {\n    if (currentBrush) {\n      const keys = currentBrush.keys.reduce((prev, cur, index) => {\n        let key = generateConfigKeyByKeys([cur]);\n        if (prev.length > 0) {\n          const last = prev[prev.length - 1];\n          key = generateConfigKeyByKeys([last, cur]);\n        }\n        prev.push(key);\n        return prev;\n      }, []);\n      return keys.map((key) => {\n        const item = store.ontology.ontologyConfigMap.get(key);\n        return {\n          color: item.color,\n          text: item.displayName || item.text\n        };\n      });\n    }\n    return '';\n  }, [currentBrush]);\n  return (\n    <div className=\"tool-wrapper\">\n      { contentReadyOnly ? null : (\n        <button\n          className={`edit-trigger ${(currentBrush === null && inputEnable) ? 'tool-item-focus' : ''}`}\n          onClick={() => setCurrentBrush(null, !inputEnable)}\n        >\n          {localMessage('EDIT_TEXT')}\n        </button>\n      )}\n      <div className={cx('filter-container', { isFocus })}>\n        <Input\n          onFocus={() => setIsFocus(true)}\n          onBlur={() => setIsFocus(false)}\n          value={filterValue}\n          className=\"filter-input\"\n          placeholder={localMessage('COMMON_SEARCH')}\n          prefix={<SearchOutlined />}\n          allowClear\n          onPressEnter={() => {\n            handleSearch(filterValue);\n          }}\n          onChange={onChange}\n        />\n      </div>\n      {filterValue && (\n      <div className=\"filter-result-title\">\n        {filteredResultEmpty ? `${localMessage('COMMON_SEARCH__NO_RESULT')}` : `${localMessage('COMMON_SEARCH_RESULT')}` }\n      </div>\n      )}\n      {!filteredResultEmpty && (\n      <>\n        {store.reviewable && (\n        <div className=\"review-info-tips\">\n          <div>\n            <CheckCircleFilled style={{ color: '#51CD44', marginRight: 4 }} />\n            {`${localMessage('REVIEW_APPROVE_TIP')}`}\n          </div>\n          <div>\n            <CloseCircleFilled style={{ color: '#D45058', marginRight: 4 }} />\n            {`${localMessage('REVIEW_REJECT_TIP')}`}\n          </div>\n        </div>\n        )}\n        { typeSet?.has('labels_qa') && filteredOntologies.labels_qa && (\n        <div className=\"tag-container-review\">\n          <ToolGroup type=\"labels_qa\" filteredOntologies={filteredOntologies} setCurrentBrush={setCurrentBrush} currentBrush={currentBrush} />\n        </div>\n      )}\n        <div\n          className=\"collapse-button\"\n          onClick={() => toggleCollapseAll(!isCollapseAll)}\n        >\n          {isCollapseAll ? <RightOutlined /> : <DownOutlined /> }\n          <span style={{ marginLeft: 6 }}>\n            {isCollapseAll ? localMessage('EXPAND_ALL') : localMessage('COLLAPSE_ALL')}\n          </span>\n        </div>\n        <div className=\"tag-container-wrapper\">\n          {currentBrush && scrollTop > 0 && (\n          <div className=\"tool-group-fixed\">\n            {currentFixedText.map((item, index) => (\n              <div className=\"item-left\" key={item.text}>\n                <span className=\"item-left-color\" style={{ background: item.color }} />\n                <span className=\"item-left-text\">\n                  {item.text}\n                </span>\n                {index + 1 !== currentFixedText.length && (<span className=\"item-left-split\">/</span>)}\n              </div>\n            ))}\n          </div>\n          )}\n          {\n          filteredOntologies && typeSet.size !== 0 && (\n            <div className=\"tag-container\" onScroll={(e) => setScrollTop(e.target.scrollTop)}>\n              { Array.from(typeSet).map((type) => {\n                if (!filteredOntologies[type] || type === 'labels_qa') {\n                  return null;\n                }\n                return (\n                  <ToolGroup key={type} type={type} filteredOntologies={filteredOntologies} setCurrentBrush={setCurrentBrush} currentBrush={currentBrush} />\n                );\n              })}\n            </div>\n          )\n        }\n        </div>\n      </>\n      )}\n    </div>\n  );\n});\n\nexport default Toolbar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}