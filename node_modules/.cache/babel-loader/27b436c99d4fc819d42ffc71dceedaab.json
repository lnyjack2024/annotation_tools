{"ast":null,"code":"import en from './en-US';\nimport cn from './zh-CN';\nclass Internationalization {\n  constructor() {\n    this.locale = 'en-US';\n  }\n  get isCN() {\n    return this.locale === 'zh-CN';\n  }\n  setLocale(locale) {\n    if (locale !== undefined) {\n      // get from props\n      if (locale === 'zh-CN') {\n        this.locale = 'zh-CN';\n      }\n    } else if (navigator.language && navigator.language.startsWith('zh')) {\n      // get from browser\n      this.locale = 'zh-CN';\n    }\n  }\n  translate(key, options) {\n    const message = this.isCN ? cn[key] : en[key];\n    if (message) {\n      let msg = message;\n      if (options && options.values) {\n        Object.keys(options.values).forEach(k => {\n          msg = msg.replace(new RegExp(`{${k}}`, 'g'), options.values[k]);\n        });\n      }\n      return msg;\n    }\n    return key;\n  }\n}\nexport default new Internationalization();","map":{"version":3,"names":["en","cn","Internationalization","constructor","locale","isCN","setLocale","undefined","navigator","language","startsWith","translate","key","options","message","msg","values","Object","keys","forEach","k","replace","RegExp"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking/locales/index.ts"],"sourcesContent":["import en from './en-US';\nimport cn from './zh-CN';\n\nclass Internationalization {\n  locale: 'zh-CN' | 'en-US' = 'en-US';\n\n  get isCN() {\n    return this.locale === 'zh-CN';\n  }\n\n  setLocale(locale?: string) {\n    if (locale !== undefined) {\n      // get from props\n      if (locale === 'zh-CN') {\n        this.locale = 'zh-CN';\n      }\n    } else if (navigator.language && navigator.language.startsWith('zh')) {\n      // get from browser\n      this.locale = 'zh-CN';\n    }\n  }\n\n  translate(key: string, options?: any) {\n    const message = this.isCN ? cn[key] : en[key];\n    if (message) {\n      let msg = message;\n      if (options && options.values) {\n        Object.keys(options.values).forEach((k) => {\n          msg = msg.replace(new RegExp(`{${k}}`, 'g'), options.values[k]);\n        });\n      }\n      return msg;\n    }\n    return key;\n  }\n}\n\nexport default new Internationalization();\n"],"mappings":"AAAA,OAAOA,EAAE,MAAM,SAAS;AACxB,OAAOC,EAAE,MAAM,SAAS;AAExB,MAAMC,oBAAoB,CAAC;EAAAC,YAAA;IAAA,KACzBC,MAAM,GAAsB,OAAO;EAAA;EAEnC,IAAIC,IAAIA,CAAA,EAAG;IACT,OAAO,IAAI,CAACD,MAAM,KAAK,OAAO;EAChC;EAEAE,SAASA,CAACF,MAAe,EAAE;IACzB,IAAIA,MAAM,KAAKG,SAAS,EAAE;MACxB;MACA,IAAIH,MAAM,KAAK,OAAO,EAAE;QACtB,IAAI,CAACA,MAAM,GAAG,OAAO;MACvB;IACF,CAAC,MAAM,IAAII,SAAS,CAACC,QAAQ,IAAID,SAAS,CAACC,QAAQ,CAACC,UAAU,CAAC,IAAI,CAAC,EAAE;MACpE;MACA,IAAI,CAACN,MAAM,GAAG,OAAO;IACvB;EACF;EAEAO,SAASA,CAACC,GAAW,EAAEC,OAAa,EAAE;IACpC,MAAMC,OAAO,GAAG,IAAI,CAACT,IAAI,GAAGJ,EAAE,CAACW,GAAG,CAAC,GAAGZ,EAAE,CAACY,GAAG,CAAC;IAC7C,IAAIE,OAAO,EAAE;MACX,IAAIC,GAAG,GAAGD,OAAO;MACjB,IAAID,OAAO,IAAIA,OAAO,CAACG,MAAM,EAAE;QAC7BC,MAAM,CAACC,IAAI,CAACL,OAAO,CAACG,MAAM,CAAC,CAACG,OAAO,CAAEC,CAAC,IAAK;UACzCL,GAAG,GAAGA,GAAG,CAACM,OAAO,CAAC,IAAIC,MAAM,CAAC,IAAIF,CAAC,GAAG,EAAE,GAAG,CAAC,EAAEP,OAAO,CAACG,MAAM,CAACI,CAAC,CAAC,CAAC;QACjE,CAAC,CAAC;MACJ;MACA,OAAOL,GAAG;IACZ;IACA,OAAOH,GAAG;EACZ;AACF;AAEA,eAAe,IAAIV,oBAAoB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}