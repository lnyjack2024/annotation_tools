{"ast":null,"code":"import { multiply } from 'mathjs';\nimport VehicleHelper from './VehicleHelper';\nimport { isVehicleProjectModel, parseCalibrations } from './utils';\nimport { ProjectModel } from './types';\n\n/**\n * cameras mapping\n * @class\n */\nexport default class CamerasMapping {\n  constructor() {\n    /**\n     * project enabled\n     */\n    this.projectEnabled = false;\n    /**\n     * calibration data\n     */\n    this.calibrations = {};\n    /**\n     * vehicle points => camera points helper\n     */\n    this.vehicleHelper = void 0;\n  }\n  /**\n   * set calibration for camera\n   * @param camera\n   * @param calibrations\n   */\n  setCalibrations(camera, calibrations) {\n    const calibs = parseCalibrations(calibrations);\n    this.calibrations[camera] = calibs;\n\n    // has valid calibrations, project is enabled\n    if (Array.isArray(calibs) ? calibs.some(calib => calib !== null) : calibs !== null) {\n      this.projectEnabled = true;\n      const allCalibs = Array.isArray(calibs) ? calibs : [calibs];\n      if (allCalibs.some(calib => isVehicleProjectModel(calib))) {\n        // is vehicle projection\n        if (!this.vehicleHelper) {\n          this.vehicleHelper = new VehicleHelper();\n        }\n        this.vehicleHelper.setCalibrations(camera, calibs);\n      }\n    }\n  }\n\n  /**\n   * set camera size\n   * @param camera\n   * @param frameIndex\n   * @param width\n   * @param height\n   */\n  setCameraSize(camera, frameIndex, width, height) {\n    var _this$vehicleHelper;\n    (_this$vehicleHelper = this.vehicleHelper) === null || _this$vehicleHelper === void 0 ? void 0 : _this$vehicleHelper.setCameraSize(camera, frameIndex, width, height);\n  }\n\n  /**\n   * set frame index\n   * @param frameIndex\n   */\n  setFrame(frameIndex) {\n    var _this$vehicleHelper2;\n    (_this$vehicleHelper2 = this.vehicleHelper) === null || _this$vehicleHelper2 === void 0 ? void 0 : _this$vehicleHelper2.setFrame(frameIndex);\n  }\n\n  /**\n   * is camera points cached\n   * @param frameIndex\n   */\n  isProjectAvailable(frameIndex) {\n    return !this.vehicleHelper || this.vehicleHelper.isCameraPointsCached(frameIndex);\n  }\n\n  /**\n   * project point from base camera to camera\n   * @param point\n   * @param frameIndex\n   * @param baseCamera\n   * @param toCamera\n   */\n  async projectPoint(point, frameIndex, baseCamera, toCamera) {\n    if (this.vehicleHelper) {\n      var _this$vehicleHelper3;\n      return (_this$vehicleHelper3 = this.vehicleHelper) === null || _this$vehicleHelper3 === void 0 ? void 0 : _this$vehicleHelper3.projectPoint(point, frameIndex, baseCamera, toCamera);\n    }\n    // default\n    const calibs = this.calibrations[baseCamera];\n    const calib = Array.isArray(calibs) ? calibs[frameIndex] : calibs;\n    if (calib && calib.model === ProjectModel.DEFAULT) {\n      const h = Array.isArray(calib.homography) ? calib.homography : calib.homography[toCamera];\n      const matrix = [[h[0], h[1], h[2]], [h[3], h[4], h[5]], [h[6], h[7], h[8]]];\n      const [x, y] = multiply(matrix, [point[0], point[1], 1]);\n      return [x, y];\n    }\n    return undefined;\n  }\n\n  /**\n   * project points\n   * @param points\n   * @param frameIndex\n   * @param baseCamera\n   * @param toCamera\n   * @returns\n   */\n  async projectPoints(points, frameIndex, baseCamera, toCamera) {\n    if (!this.projectEnabled) {\n      return [];\n    }\n    const projectedPoints = await Promise.all(points.map(i => this.projectPoint(i, frameIndex, baseCamera, toCamera)));\n    return projectedPoints.filter(i => i !== undefined);\n  }\n}","map":{"version":3,"names":["multiply","VehicleHelper","isVehicleProjectModel","parseCalibrations","ProjectModel","CamerasMapping","constructor","projectEnabled","calibrations","vehicleHelper","setCalibrations","camera","calibs","Array","isArray","some","calib","allCalibs","setCameraSize","frameIndex","width","height","_this$vehicleHelper","setFrame","_this$vehicleHelper2","isProjectAvailable","isCameraPointsCached","projectPoint","point","baseCamera","toCamera","_this$vehicleHelper3","model","DEFAULT","h","homography","matrix","x","y","undefined","projectPoints","points","projectedPoints","Promise","all","map","i","filter"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking2/cameras-mapping/CamerasMapping.ts"],"sourcesContent":["import { multiply } from 'mathjs';\nimport VehicleHelper from './VehicleHelper';\nimport { isVehicleProjectModel, parseCalibrations } from './utils';\nimport { CameraCalibrations, Point2D, ProjectModel } from './types';\n\n/**\n * cameras mapping\n * @class\n */\nexport default class CamerasMapping {\n  /**\n   * project enabled\n   */\n  projectEnabled = false;\n\n  /**\n   * calibration data\n   */\n  calibrations: Record<string, CameraCalibrations> = {};\n\n  /**\n   * vehicle points => camera points helper\n   */\n  vehicleHelper?: VehicleHelper;\n\n  /**\n   * set calibration for camera\n   * @param camera\n   * @param calibrations\n   */\n  setCalibrations(camera: string, calibrations: unknown) {\n    const calibs = parseCalibrations(calibrations);\n    this.calibrations[camera] = calibs;\n\n    // has valid calibrations, project is enabled\n    if (Array.isArray(calibs) ? calibs.some((calib) => calib !== null) : calibs !== null) {\n      this.projectEnabled = true;\n\n      const allCalibs = Array.isArray(calibs) ? calibs : [calibs];\n      if (allCalibs.some((calib) => isVehicleProjectModel(calib))) {\n        // is vehicle projection\n        if (!this.vehicleHelper) {\n          this.vehicleHelper = new VehicleHelper();\n        }\n        this.vehicleHelper.setCalibrations(camera, calibs);\n      }\n    }\n  }\n\n  /**\n   * set camera size\n   * @param camera\n   * @param frameIndex\n   * @param width\n   * @param height\n   */\n  setCameraSize(camera: string, frameIndex: number, width: number, height: number) {\n    this.vehicleHelper?.setCameraSize(camera, frameIndex, width, height);\n  }\n\n  /**\n   * set frame index\n   * @param frameIndex\n   */\n  setFrame(frameIndex: number) {\n    this.vehicleHelper?.setFrame(frameIndex);\n  }\n\n  /**\n   * is camera points cached\n   * @param frameIndex\n   */\n  isProjectAvailable(frameIndex: number) {\n    return !this.vehicleHelper || this.vehicleHelper.isCameraPointsCached(frameIndex);\n  }\n\n  /**\n   * project point from base camera to camera\n   * @param point\n   * @param frameIndex\n   * @param baseCamera\n   * @param toCamera\n   */\n  async projectPoint(point: Point2D, frameIndex: number, baseCamera: string, toCamera: string): Promise<Point2D | undefined> {\n    if (this.vehicleHelper) {\n      return this.vehicleHelper?.projectPoint(point, frameIndex, baseCamera, toCamera);\n    }\n    // default\n    const calibs = this.calibrations[baseCamera];\n    const calib = Array.isArray(calibs) ? calibs[frameIndex] : calibs;\n    if (calib && calib.model === ProjectModel.DEFAULT) {\n      const h = Array.isArray(calib.homography) ? calib.homography : calib.homography[toCamera];\n      const matrix = [\n        [h[0], h[1], h[2]],\n        [h[3], h[4], h[5]],\n        [h[6], h[7], h[8]],\n      ];\n      const [x, y] = multiply(matrix, [point[0], point[1], 1]);\n      return [x, y];\n    }\n    return undefined;\n  }\n\n  /**\n   * project points\n   * @param points\n   * @param frameIndex\n   * @param baseCamera\n   * @param toCamera\n   * @returns\n   */\n  async projectPoints(points: Point2D[], frameIndex: number, baseCamera: string, toCamera: string): Promise<Point2D[]> {\n    if (!this.projectEnabled) {\n      return [];\n    }\n    const projectedPoints = await Promise.all(\n      points.map((i) => this.projectPoint(i, frameIndex, baseCamera, toCamera)),\n    );\n    return projectedPoints.filter((i) => i !== undefined) as Point2D[];\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}