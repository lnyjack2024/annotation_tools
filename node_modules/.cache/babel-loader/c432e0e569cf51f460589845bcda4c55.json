{"ast":null,"code":"import { makeAutoObservable, runInAction, toJS } from 'mobx';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Modal, message } from 'antd';\nimport { validate as validateForm } from '@appen-china/easy-form/es/utils';\nimport { Base64 } from 'js-base64';\nimport i18n from './locales';\nimport MAnswer from './models/Answer';\nimport ValidationStore from './validationStore';\nimport { ReviewMode } from './types';\nimport { ContentItemType, LLMModel, RankingType } from '../common/llm/types';\nimport { contentToPlainText, isContentEmpty, parseContent } from '../common/llm/helper';\nimport { InputType } from '../common/llm/input/InputWrapper';\nimport { ToolMode, isAnnotationReadonly, isPreview, isReviewEditable, isRework, isTemplatePreview } from '../../utils/tool-mode';\nclass Store {\n  get hasError() {\n    return this._hasError || this.hasRankError || this.hasItemAttrError;\n  }\n  set hasError(val) {\n    this._hasError = val;\n    if (!val) {\n      this.hasRankError = val;\n      this.hasItemAttrError = val;\n    }\n  }\n\n  /**\n   * item rank has error\n   */\n\n  /**\n   * can add answer\n   */\n  get canAddAnswer() {\n    if (this.readonly || !this.addible) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * is tool readonly (annotate not allowed)\n   */\n  get readonly() {\n    return isAnnotationReadonly(this.jobProxy.toolMode) || this.reviewMode === ReviewMode.REVIEW;\n  }\n\n  /**\n   * is tool annotate allowed\n   */\n  get annotatable() {\n    return !isAnnotationReadonly(this.jobProxy.toolMode);\n  }\n\n  /**\n   * is tool review enabled\n   */\n  get reviewable() {\n    return isReviewEditable(this.jobProxy.toolMode);\n  }\n\n  /**\n   * is tool in labeling mode or template preview mode\n   */\n  get isLabeling() {\n    return this.jobProxy.toolMode === ToolMode.LABELING || this.isTemplatePreview;\n  }\n\n  /**\n   * is tool in rework mode\n   */\n  get isRework() {\n    return isRework(this.jobProxy.toolMode);\n  }\n\n  /**\n   * is tool in preview mode\n   */\n  get isPreview() {\n    return isPreview(this.jobProxy.toolMode);\n  }\n\n  /**\n   * is tool in template preview mode\n   */\n  get isTemplatePreview() {\n    return isTemplatePreview(this.jobProxy.toolMode);\n  }\n  isOriginalAnswer(val, forceToolModeCheck = false) {\n    if (forceToolModeCheck && this.isLabeling) {\n      return true;\n    }\n    return typeof val === 'boolean' ? val : this.isLabeling;\n  }\n  constructor() {\n    /**\n     * job proxy\n     */\n    this.jobProxy = void 0;\n    /**\n     * is tool initialized\n     */\n    this.initialized = false;\n    /**\n     * labeling or review mode\n     */\n    this.reviewMode = ReviewMode.LABELING;\n    /**\n     * instruction\n     */\n    this.instruction = [];\n    /**\n     * question\n     */\n    this.question = [];\n    /**\n     * answers\n     */\n    this.answers = [];\n    /**\n     * subject\n     */\n    this.subject = void 0;\n    /**\n     * [config] global rank\n     */\n    this.attributes = void 0;\n    /**\n     * [config] global rank config\n     */\n    this.attributesConfig = '';\n    /**\n     * [config] item attributes  config\n     */\n    this.itemAttributesConfig = void 0;\n    /**\n     * current selected answer\n     */\n    this.selectedAnswer = void 0;\n    /**\n     * is editing answer\n     */\n    this.isEditingAnswer = false;\n    /**\n     * is adding answer\n     */\n    this.isAddingAnswer = false;\n    /**\n     * is adding answer by real-time api\n     */\n    this.isAddingAnswerByAPI = false;\n    /**\n     * is ranking answer\n     */\n    this.isRankingAnswer = false;\n    /**\n     * is dragging answer\n     */\n    this.isDraggingAnswer = false;\n    /**\n     * is attributes editing\n     */\n    this.isItemAttributesEditing = false;\n    /**\n     * has error\n     */\n    this._hasError = false;\n    this.hasRankError = false;\n    /**\n     * item attributes has error\n     */\n    this.hasItemAttrError = false;\n    /**\n     * [config] options for subject selection\n     */\n    this.subjectOptions = [];\n    /**\n     * [config] answers rank\n     */\n    this.ranking = false;\n    /**\n     * [config] ranking type (score / mark)\n     */\n    this.rankingType = RankingType.SCORE;\n    /**\n     * [config] options for ranking\n     */\n    this.rankingOptions = [];\n    /**\n     * [config] answers sortable\n     */\n    this.sortable = false;\n    /**\n     * [config] answers editable (only control original answers)\n     */\n    this.editable = false;\n    /**\n     * [config] can add new answers\n     */\n    this.addible = false;\n    /**\n     * [config] model used when add answer\n     */\n    this.addModel = LLMModel.NONUSE;\n    /**\n     * validation\n     */\n    this.validation = void 0;\n    /**\n    * validation config\n    */\n    this.validationConfig = {\n      script: false\n    };\n    /**\n     * submit check\n     */\n    this.submitCheck = false;\n    /**\n     * editor types\n     */\n    this.editorTypes = [InputType.DEFAULT];\n    this.validateResult = () => {\n      // 1) check answer value\n      // 2) check answer rank\n      // 3) check answer item attributes\n      // 4) check answer limit\n      let newlyAddedAnswersCount = 0;\n      this.answers.forEach(answer => {\n        if (!answer.original) {\n          newlyAddedAnswersCount += 1;\n          if (isContentEmpty(answer.value)) {\n            this.selectedAnswer = answer;\n            this.isEditingAnswer = true;\n            this.hasError = true;\n            throw new Error(i18n.translate('CHAT_ITEM_EMPTY_ERROR'));\n          }\n        }\n        if (this.ranking && this.rankingType === RankingType.SCORE && this.rankingOptions.some(o => {\n          var _answer$rank, _answer$rank$scores;\n          return ((_answer$rank = answer.rank) === null || _answer$rank === void 0 ? void 0 : (_answer$rank$scores = _answer$rank.scores) === null || _answer$rank$scores === void 0 ? void 0 : _answer$rank$scores[o]) === undefined;\n        })) {\n          this.selectedAnswer = answer;\n          this.isRankingAnswer = true;\n          this.hasError = true;\n          throw new Error(i18n.translate('CHAT_ITEM_RANK_EMPTY_ERROR'));\n        }\n        if (this.itemAttributesConfig) {\n          const {\n            attributes\n          } = answer;\n          if (attributes) {\n            const validateRes = validateForm(this.itemAttributesConfig, attributes);\n            if (!validateRes) {\n              this.selectedAnswer = answer;\n              this.isItemAttributesEditing = true;\n              this.hasItemAttrError = true;\n              throw new Error(i18n.translate('CHAT_ITEM_ATTR_EMPTY_ERROR'));\n            }\n          }\n        }\n      });\n    };\n    this.setSubject = subject => {\n      this.subject = subject;\n    };\n    this.setAttributesConfig = attributes => {\n      this.attributes = attributes;\n    };\n    this.validate = () => {\n      if (this.isAddingAnswer || this.isAddingAnswerByAPI) {\n        this.catchSaveError();\n        throw new Error('should finish adding');\n      }\n      if (this.selectedAnswer) {\n        if (this.isRankingAnswer && this.rankingType === RankingType.SCORE && this.rankingOptions.some(o => {\n          var _this$selectedAnswer, _this$selectedAnswer$, _this$selectedAnswer$2;\n          return ((_this$selectedAnswer = this.selectedAnswer) === null || _this$selectedAnswer === void 0 ? void 0 : (_this$selectedAnswer$ = _this$selectedAnswer.rank) === null || _this$selectedAnswer$ === void 0 ? void 0 : (_this$selectedAnswer$2 = _this$selectedAnswer$.scores) === null || _this$selectedAnswer$2 === void 0 ? void 0 : _this$selectedAnswer$2[o]) === undefined;\n        })) {\n          this.catchRankError();\n          throw new Error('should finish ranking');\n        }\n        if (this.isItemAttributesEditing && this.itemAttributesConfig) {\n          const {\n            attributes\n          } = this.selectedAnswer;\n          if (attributes) {\n            const validateRes = validateForm(this.itemAttributesConfig, attributes);\n            if (!validateRes) {\n              this.catchItemAttributesError();\n              throw new Error('should finish the item attributes form');\n            }\n          }\n        }\n      }\n    };\n    this.validateItem = () => {\n      try {\n        this.validate();\n        this.hasError = false;\n        this.isRankingAnswer = false;\n        this.isItemAttributesEditing = false;\n      } catch (e) {\n        // validate failed\n      }\n    };\n    this.selectAnswer = answer => {\n      var _this$selectedAnswer2;\n      if (((_this$selectedAnswer2 = this.selectedAnswer) === null || _this$selectedAnswer2 === void 0 ? void 0 : _this$selectedAnswer2.id) === answer.id) {\n        return;\n      }\n      try {\n        this.validate();\n        this.hasError = false;\n        this.selectedAnswer = answer;\n        this.isEditingAnswer = false;\n        this.isRankingAnswer = false;\n        this.isItemAttributesEditing = false;\n      } catch (e) {\n        // validate failed\n      }\n    };\n    this.getQuestionItemContent = () => {\n      if (this.question) {\n        const content = contentToPlainText(this.question);\n        return [{\n          role: 'user',\n          content\n        }];\n      }\n      return null;\n    };\n    // addAnswerByAPI = () => {\n    //   if (this.readonly || !this.canAddAnswer) {\n    //     return;\n    //   }\n    //   try {\n    //     this.validate();\n    //     this.hasError = false;\n    //     this.selectedAnswer = undefined;\n    //     this.isEditingAnswer = false;\n    //     this.isRankingAnswer = false;\n    //     this.isItemAttributesEditing = false;\n    //     this.isAddingAnswerByAPI = true;\n    //   } catch (e) {\n    //     // validate failed\n    //   }\n    //   const messages = this.getQuestionItemContent();\n    //   if (!messages) {\n    //     message.error(i18n.translate('CHAT_ITEM_GENERATE_NO_QUESTION'));\n    //     return;\n    //   }\n    //   const data = {\n    //     messages,\n    //     stream: false,\n    //     temperature: 0.5,\n    //     presence_penalty: 0,\n    //     frequency_penalty: 0,\n    //   };\n    //   const apiForwardType = {\n    //     [LLMModel.CHAT_GPT]: APIForwardType.CHAT_GPT,\n    //     [LLMModel.CHAT_GPT_4]: APIForwardType.CHAT_GPT_4,\n    //   };\n    //   this.jobProxy?.forwardAPI(apiForwardType[(this.addModel as LLMModel.CHAT_GPT | LLMModel.CHAT_GPT_4)], data).then((res) => {\n    //     if (!res || res.error) {\n    //       message.error(res?.msg || i18n.translate('CHAT_ITEM_GENERATE_FAIL'));\n    //       this.cancelSaveAnswerByAPI();\n    //       return;\n    //     }\n    //     if (res && Array.isArray(res) && res.length > 0) {\n    //       this.generateAnswerItem(res[0].message.content);\n    //     }\n    //   });\n    // };\n    this.generateAnswerItem = value => {\n      if (this.readonly) {\n        return;\n      }\n      this.hasError = false;\n      if (this.isAddingAnswerByAPI) {\n        // add new answer\n        const newAnswer = new MAnswer({\n          id: uuidv4(),\n          original: false,\n          value: [{\n            type: ContentItemType.UNSTYLED,\n            content: value\n          }],\n          originalValue: [{\n            type: ContentItemType.UNSTYLED,\n            content: value\n          }],\n          model: this.addModel\n        });\n        this.answers.push(newAnswer);\n        this.selectedAnswer = newAnswer;\n        if (!this.readonly && this.ranking) {\n          this.isRankingAnswer = true;\n        }\n      }\n      this.cancelSaveAnswerByAPI();\n    };\n    this.cancelSaveAnswerByAPI = () => {\n      this.isAddingAnswerByAPI = false;\n    };\n    this.addAnswer = () => {\n      if (this.readonly || !this.canAddAnswer) {\n        return;\n      }\n      try {\n        this.validate();\n        this.hasError = false;\n        this.selectedAnswer = undefined;\n        this.isEditingAnswer = false;\n        this.isRankingAnswer = false;\n        this.isItemAttributesEditing = false;\n        this.isAddingAnswer = true;\n      } catch (e) {\n        // validate failed\n      }\n    };\n    this.editAnswer = answer => {\n      var _this$selectedAnswer3;\n      if (this.readonly || answer.original && !this.editable) {\n        return;\n      }\n      if (((_this$selectedAnswer3 = this.selectedAnswer) === null || _this$selectedAnswer3 === void 0 ? void 0 : _this$selectedAnswer3.id) === answer.id) {\n        this.isEditingAnswer = true;\n        return;\n      }\n      try {\n        this.validate();\n        this.hasError = false;\n        this.selectedAnswer = answer;\n        this.isRankingAnswer = false;\n        this.isItemAttributesEditing = false;\n        this.isEditingAnswer = true;\n      } catch (e) {\n        // validate failed\n      }\n    };\n    this.saveAnswer = value => {\n      if (this.readonly) {\n        return;\n      }\n      if (this.isAddingAnswer) {\n        // add new answer\n        const newAnswer = new MAnswer({\n          id: uuidv4(),\n          original: false,\n          value\n        });\n        this.answers.push(newAnswer);\n        this.selectedAnswer = newAnswer;\n        if (!this.readonly && this.ranking) {\n          this.isRankingAnswer = true;\n        }\n      } else if (this.isEditingAnswer && this.selectedAnswer) {\n        // update answer\n        this.selectedAnswer.value = value;\n      }\n      this.cancelSaveAnswer();\n    };\n    this.updateAnswer = (answer, value) => {\n      if (this.readonly || this.isAddingAnswer || this.isEditingAnswer) {\n        return;\n      }\n      answer.value = value;\n    };\n    this.cancelSaveAnswer = () => {\n      this.isEditingAnswer = false;\n      this.isAddingAnswer = false;\n    };\n    this.catchSaveError = msg => {\n      this.hasError = true;\n      message.error(msg || i18n.translate('CHAT_ITEM_EMPTY_ERROR'));\n    };\n    this.rankAnswer = answer => {\n      if (this.readonly || !this.ranking) {\n        return;\n      }\n      try {\n        var _this$selectedAnswer4;\n        this.validate();\n        this.hasError = false;\n        if (((_this$selectedAnswer4 = this.selectedAnswer) === null || _this$selectedAnswer4 === void 0 ? void 0 : _this$selectedAnswer4.id) !== answer.id) {\n          this.isItemAttributesEditing = false;\n        }\n        this.selectedAnswer = answer;\n        this.isEditingAnswer = false;\n        this.isRankingAnswer = true;\n      } catch (e) {\n        // validate failed\n      }\n    };\n    this.saveRank = (answer, rank) => {\n      var _this$selectedAnswer5;\n      if (this.readonly) {\n        return;\n      }\n      if (((_this$selectedAnswer5 = this.selectedAnswer) === null || _this$selectedAnswer5 === void 0 ? void 0 : _this$selectedAnswer5.id) !== answer.id) {\n        try {\n          this.validate();\n          this.hasError = false;\n          this.isItemAttributesEditing = false;\n        } catch (e) {\n          // validate failed\n          return;\n        }\n      }\n      this.isRankingAnswer = true;\n      this.selectedAnswer = answer;\n      this.selectedAnswer.rank = rank;\n    };\n    this.catchRankError = msg => {\n      this.hasRankError = true;\n      message.error(msg || i18n.translate('CHAT_ITEM_RANK_EMPTY_ERROR'));\n    };\n    this.onItemAttributesEdit = answer => {\n      var _this$selectedAnswer6;\n      if (this.readonly || !this.itemAttributesConfig) {\n        return;\n      }\n      try {\n        this.validate();\n        this.hasError = false;\n      } catch (e) {\n        // validate failed\n        return;\n      }\n      if (((_this$selectedAnswer6 = this.selectedAnswer) === null || _this$selectedAnswer6 === void 0 ? void 0 : _this$selectedAnswer6.id) !== answer.id) {\n        this.isRankingAnswer = false;\n      }\n      this.selectedAnswer = answer;\n      this.isEditingAnswer = false;\n      this.isItemAttributesEditing = true;\n    };\n    this.setItemAttributes = (answer, attributes) => {\n      var _this$selectedAnswer7;\n      if (this.readonly) {\n        return;\n      }\n      if (((_this$selectedAnswer7 = this.selectedAnswer) === null || _this$selectedAnswer7 === void 0 ? void 0 : _this$selectedAnswer7.id) !== answer.id) {\n        try {\n          this.validate();\n          this.hasError = false;\n        } catch (e) {\n          // validate failed\n          return;\n        }\n      }\n      this.selectedAnswer = answer;\n      this.selectedAnswer.attributes = attributes;\n    };\n    this.deleteItemAttributes = answer => {\n      Modal.confirm({\n        title: i18n.translate('CHAT_ITEM_DEL_TITLE'),\n        okText: i18n.translate('CHAT_ITEM_DEL_OK'),\n        cancelText: i18n.translate('CHAT_ITEM_DEL_CANCEL'),\n        onOk: () => {\n          this.setItemAttributes(answer, undefined);\n          this.isItemAttributesEditing = false;\n        }\n      });\n    };\n    this.saveItemAttributes = (answer, attributes) => {\n      this.setItemAttributes(answer, attributes);\n      this.isItemAttributesEditing = true;\n    };\n    this.catchItemAttributesError = msg => {\n      this.hasItemAttrError = true;\n      message.error(msg || i18n.translate('CHAT_ITEM_ATTR_EMPTY_ERROR'));\n    };\n    this.updateAnswerOrder = (source, destination) => {\n      if (destination === undefined) {\n        return;\n      }\n      const currIndex = this.answers.findIndex(i => i.id === source);\n      if (currIndex < 0 || currIndex === destination) {\n        return;\n      }\n      const currAnswer = this.answers[currIndex];\n      this.answers.splice(currIndex, 1);\n      this.answers.splice(destination, 0, currAnswer);\n      this.isDraggingAnswer = false;\n    };\n    makeAutoObservable(this, {\n      jobProxy: false\n    });\n  }\n  async init(payload) {\n    this.initConfig(payload);\n    this.initValidate();\n    try {\n      await this.loadResult();\n    } catch (e) {\n      // load error\n    }\n    runInAction(() => {\n      if (this.question.length === 0 && payload.question) {\n        // no question loaded, try get question from payload\n        this.question = [{\n          type: ContentItemType.UNSTYLED,\n          content: payload.question\n        }];\n      }\n      this.initialized = true;\n    });\n  }\n  initValidate() {\n    this.validation = new ValidationStore(this);\n  }\n  initConfig(payload) {\n    // subject\n    if (typeof payload.subjects === 'string') {\n      const subjectsSplits = payload.subjects.split(',').map(i => i.trim()).filter(i => !!i);\n      if (subjectsSplits.length > 0) {\n        this.subjectOptions = Array.from(new Set(subjectsSplits));\n      }\n    }\n\n    // attributes_config\n    if (typeof payload.attributes_config === 'string') {\n      this.attributesConfig = payload.attributes_config;\n    }\n\n    // item_attributes_config\n    if (typeof payload.item_attributes_config === 'string') {\n      const configStr = Base64.decode(payload.item_attributes_config || '');\n      if (configStr) {\n        try {\n          const parsedConfig = JSON.parse(configStr);\n          this.itemAttributesConfig = parsedConfig;\n        } catch (error) {\n          // parse error\n        }\n      }\n    }\n\n    // ranking\n    this.ranking = payload.ranking === true || payload.ranking === 'true';\n    if (this.ranking) {\n      if (Object.values(RankingType).includes(payload.ranking_type)) {\n        this.rankingType = payload.ranking_type;\n      }\n      if (typeof payload.ranking_options === 'string') {\n        const optionsSplits = payload.ranking_options.split(',').map(i => i.trim()).filter(i => !!i);\n        if (optionsSplits.length > 0) {\n          this.rankingOptions = [...optionsSplits];\n        }\n      }\n    }\n\n    // sortable\n    this.sortable = payload.sortable === true || payload.sortable === 'true';\n\n    // editable\n    this.editable = payload.editable === true || payload.editable === 'true';\n\n    // addible\n    this.addible = payload.addible === true || payload.addible === 'true';\n    if (this.addible) {\n      if (Object.values(LLMModel).includes(payload.add_model)) {\n        this.addModel = payload.add_model;\n      }\n    }\n  }\n  async loadResult() {\n    const savedResult = await this.jobProxy.loadSavedResult();\n    const reviewFromResult = await this.jobProxy.loadReviewFrom();\n    const result = savedResult || reviewFromResult;\n    if (!result) {\n      return;\n    }\n    if (result.auditId) {\n      this.jobProxy.setAuditId(result.auditId);\n    }\n\n    // parse result\n    const {\n      desc,\n      input,\n      output,\n      attributes,\n      instruction\n    } = result;\n    if (typeof desc === 'string' && desc) {\n      this.subject = desc;\n    }\n    if (attributes) {\n      this.attributes = attributes;\n    }\n    this.instruction = parseContent(instruction);\n    this.question = parseContent(input);\n    if (Array.isArray(output) && output.length > 0) {\n      const answers = [];\n      output.forEach(o => {\n        if (typeof o === 'string') {\n          answers.push(new MAnswer({\n            id: uuidv4(),\n            original: this.isLabeling,\n            value: [{\n              type: ContentItemType.UNSTYLED,\n              content: o\n            }],\n            ...(this.isLabeling && {\n              originalValue: [{\n                type: ContentItemType.UNSTYLED,\n                content: o\n              }]\n            })\n          }));\n        } else if (typeof o === 'object') {\n          const original = this.isOriginalAnswer(o.original, !savedResult);\n          const value = parseContent(o.value);\n          let originalValue;\n          if (o.originalValue) {\n            originalValue = parseContent(o.originalValue);\n          } else if (original) {\n            originalValue = value;\n          }\n          answers.push(new MAnswer({\n            id: o.id || uuidv4(),\n            original,\n            value,\n            originalValue,\n            rank: o.rank,\n            attributes: o.attributes,\n            model: o.model,\n            sourceModelId: o.sourceModelId\n          }));\n        }\n      });\n      this.answers = answers;\n    }\n  }\n  async saveResult(submit = false) {\n    if (submit && this.annotatable) {\n      this.validateResult();\n    }\n    return this.jobProxy.saveResult({\n      instruction: toJS(this.instruction),\n      attributes: toJS(this.attributes),\n      desc: this.subject,\n      input: toJS(this.question),\n      output: this.answers.map(answer => answer.toJSON()),\n      modelInput: this.generateModelInput(),\n      auditId: this.jobProxy.auditId,\n      templateConfig: this.jobProxy.templateConfig\n    }, submit);\n  }\n  saveReviews(submit = false) {\n    // TODO:\n  }\n  generateModelInput() {\n    return {\n      desc: this.subject,\n      input: contentToPlainText(this.question),\n      output: this.answers.map(answer => ({\n        value: contentToPlainText(answer.value),\n        rank: toJS(answer.rank),\n        attributes: toJS(answer.attributes),\n        sourceModelId: answer.sourceModelId\n      }))\n    };\n  }\n}\nexport default new Store();","map":{"version":3,"names":["makeAutoObservable","runInAction","toJS","v4","uuidv4","Modal","message","validate","validateForm","Base64","i18n","MAnswer","ValidationStore","ReviewMode","ContentItemType","LLMModel","RankingType","contentToPlainText","isContentEmpty","parseContent","InputType","ToolMode","isAnnotationReadonly","isPreview","isReviewEditable","isRework","isTemplatePreview","Store","hasError","_hasError","hasRankError","hasItemAttrError","val","canAddAnswer","readonly","addible","jobProxy","toolMode","reviewMode","REVIEW","annotatable","reviewable","isLabeling","LABELING","isOriginalAnswer","forceToolModeCheck","constructor","initialized","instruction","question","answers","subject","attributes","attributesConfig","itemAttributesConfig","selectedAnswer","isEditingAnswer","isAddingAnswer","isAddingAnswerByAPI","isRankingAnswer","isDraggingAnswer","isItemAttributesEditing","subjectOptions","ranking","rankingType","SCORE","rankingOptions","sortable","editable","addModel","NONUSE","validation","validationConfig","script","submitCheck","editorTypes","DEFAULT","validateResult","newlyAddedAnswersCount","forEach","answer","original","value","Error","translate","some","o","_answer$rank","_answer$rank$scores","rank","scores","undefined","validateRes","setSubject","setAttributesConfig","catchSaveError","_this$selectedAnswer","_this$selectedAnswer$","_this$selectedAnswer$2","catchRankError","catchItemAttributesError","validateItem","e","selectAnswer","_this$selectedAnswer2","id","getQuestionItemContent","content","role","generateAnswerItem","newAnswer","type","UNSTYLED","originalValue","model","push","cancelSaveAnswerByAPI","addAnswer","editAnswer","_this$selectedAnswer3","saveAnswer","cancelSaveAnswer","updateAnswer","msg","error","rankAnswer","_this$selectedAnswer4","saveRank","_this$selectedAnswer5","onItemAttributesEdit","_this$selectedAnswer6","setItemAttributes","_this$selectedAnswer7","deleteItemAttributes","confirm","title","okText","cancelText","onOk","saveItemAttributes","updateAnswerOrder","source","destination","currIndex","findIndex","i","currAnswer","splice","init","payload","initConfig","initValidate","loadResult","length","subjects","subjectsSplits","split","map","trim","filter","Array","from","Set","attributes_config","item_attributes_config","configStr","decode","parsedConfig","JSON","parse","Object","values","includes","ranking_type","ranking_options","optionsSplits","add_model","savedResult","loadSavedResult","reviewFromResult","loadReviewFrom","result","auditId","setAuditId","desc","input","output","isArray","sourceModelId","saveResult","submit","toJSON","modelInput","generateModelInput","templateConfig","saveReviews"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/question-answering/store.ts"],"sourcesContent":["import { makeAutoObservable, runInAction, toJS } from 'mobx';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Modal, message } from 'antd';\nimport { validate as validateForm } from '@appen-china/easy-form/es/utils';\nimport { FormConfig } from '@appen-china/easy-form/es/types';\nimport { Base64 } from 'js-base64';\nimport i18n from './locales';\nimport MAnswer from './models/Answer';\nimport ValidationStore from './validationStore';\nimport { Payload, ReviewMode } from './types';\nimport { Content, ContentItemType, LLMModel, Rank, RankingType } from '../common/llm/types';\nimport { contentToPlainText, isContentEmpty, parseContent } from '../common/llm/helper';\nimport { InputType } from '../common/llm/input/InputWrapper';\nimport JobProxy from '../../libs/JobProxy';\nimport { ToolMode, isAnnotationReadonly, isPreview, isReviewEditable, isRework, isTemplatePreview } from '../../utils/tool-mode';\n\nclass Store {\n  /**\n   * job proxy\n   */\n  jobProxy?: JobProxy;\n\n  /**\n   * is tool initialized\n   */\n  initialized = false;\n\n  /**\n   * labeling or review mode\n   */\n  reviewMode = ReviewMode.LABELING;\n\n  /**\n   * instruction\n   */\n  instruction: Content = [];\n\n  /**\n   * question\n   */\n  question: Content = [];\n\n  /**\n   * answers\n   */\n  answers: MAnswer[] = [];\n\n  /**\n   * subject\n   */\n  subject?: string;\n\n  /**\n   * [config] global rank\n   */\n  attributes: { [key: string]: any; } | undefined;\n\n  /**\n   * [config] global rank config\n   */\n  attributesConfig = '';\n\n  /**\n   * [config] item attributes  config\n   */\n  itemAttributesConfig?: FormConfig;\n\n  /**\n   * current selected answer\n   */\n  selectedAnswer?: MAnswer;\n\n  /**\n   * is editing answer\n   */\n  isEditingAnswer = false;\n\n  /**\n   * is adding answer\n   */\n  isAddingAnswer = false;\n\n  /**\n   * is adding answer by real-time api\n   */\n  isAddingAnswerByAPI = false;\n\n  /**\n   * is ranking answer\n   */\n  isRankingAnswer = false;\n\n  /**\n   * is dragging answer\n   */\n  isDraggingAnswer = false;\n\n  /**\n   * is attributes editing\n   */\n  isItemAttributesEditing = false;\n\n  /**\n   * has error\n   */\n  _hasError = false;\n\n  get hasError() {\n    return this._hasError || this.hasRankError || this.hasItemAttrError;\n  }\n\n  set hasError(val: boolean) {\n    this._hasError = val;\n    if (!val) {\n      this.hasRankError = val;\n      this.hasItemAttrError = val;\n    }\n  }\n\n  /**\n   * item rank has error\n   */\n  hasRankError = false;\n\n  /**\n   * item attributes has error\n   */\n  hasItemAttrError = false;\n\n  /**\n   * [config] options for subject selection\n   */\n  subjectOptions: string[] = [];\n\n  /**\n   * [config] answers rank\n   */\n  ranking = false;\n\n  /**\n   * [config] ranking type (score / mark)\n   */\n  rankingType = RankingType.SCORE;\n\n  /**\n   * [config] options for ranking\n   */\n  rankingOptions: string[] = [];\n\n  /**\n   * [config] answers sortable\n   */\n  sortable = false;\n\n  /**\n   * [config] answers editable (only control original answers)\n   */\n  editable = false;\n\n  /**\n   * [config] can add new answers\n   */\n  addible = false;\n\n  /**\n   * [config] model used when add answer\n   */\n  addModel = LLMModel.NONUSE;\n\n  /**\n   * validation\n   */\n  validation: ValidationStore | undefined;\n\n  /**\n * validation config\n */\n  validationConfig = { script: false };\n\n  /**\n   * submit check\n   */\n  submitCheck = false;\n\n  /**\n   * editor types\n   */\n  editorTypes = [InputType.DEFAULT];\n\n  /**\n   * can add answer\n   */\n  get canAddAnswer() {\n    if (this.readonly || !this.addible) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * is tool readonly (annotate not allowed)\n   */\n  get readonly() {\n    return isAnnotationReadonly(this.jobProxy!.toolMode) || this.reviewMode === ReviewMode.REVIEW;\n  }\n\n  /**\n   * is tool annotate allowed\n   */\n  get annotatable() {\n    return !isAnnotationReadonly(this.jobProxy!.toolMode);\n  }\n\n  /**\n   * is tool review enabled\n   */\n  get reviewable() {\n    return isReviewEditable(this.jobProxy!.toolMode);\n  }\n\n  /**\n   * is tool in labeling mode or template preview mode\n   */\n  get isLabeling() {\n    return this.jobProxy!.toolMode === ToolMode.LABELING || this.isTemplatePreview;\n  }\n\n  /**\n   * is tool in rework mode\n   */\n  get isRework() {\n    return isRework(this.jobProxy!.toolMode);\n  }\n\n  /**\n   * is tool in preview mode\n   */\n  get isPreview() {\n    return isPreview(this.jobProxy!.toolMode);\n  }\n\n  /**\n   * is tool in template preview mode\n   */\n  get isTemplatePreview() {\n    return isTemplatePreview(this.jobProxy!.toolMode);\n  }\n\n  isOriginalAnswer(val: unknown, forceToolModeCheck = false) {\n    if (forceToolModeCheck && this.isLabeling) {\n      return true;\n    }\n    return typeof val === 'boolean' ? val : this.isLabeling;\n  }\n\n  constructor() {\n    makeAutoObservable(this, {\n      jobProxy: false,\n    });\n  }\n\n  async init(payload: Payload) {\n    this.initConfig(payload);\n    this.initValidate();\n    try {\n      await this.loadResult();\n    } catch (e) {\n      // load error\n    }\n\n    runInAction(() => {\n      if (this.question.length === 0 && payload.question) {\n        // no question loaded, try get question from payload\n        this.question = [{\n          type: ContentItemType.UNSTYLED,\n          content: payload.question,\n        }];\n      }\n      this.initialized = true;\n    });\n  }\n\n  initValidate() {\n    this.validation = new ValidationStore(this);\n  }\n\n  initConfig(payload: Payload) {\n    // subject\n    if (typeof payload.subjects === 'string') {\n      const subjectsSplits = payload.subjects.split(',').map((i) => i.trim()).filter((i) => !!i);\n      if (subjectsSplits.length > 0) {\n        this.subjectOptions = Array.from(new Set(subjectsSplits));\n      }\n    }\n\n    // attributes_config\n    if (typeof payload.attributes_config === 'string') {\n      this.attributesConfig = payload.attributes_config;\n    }\n\n    // item_attributes_config\n    if (typeof payload.item_attributes_config === 'string') {\n      const configStr = Base64.decode(payload.item_attributes_config || '');\n      if (configStr) {\n        try {\n          const parsedConfig = JSON.parse(configStr);\n          this.itemAttributesConfig = parsedConfig;\n        } catch (error) {\n          // parse error\n        }\n      }\n    }\n\n    // ranking\n    this.ranking = payload.ranking === true || payload.ranking === 'true';\n    if (this.ranking) {\n      if (Object.values(RankingType).includes(payload.ranking_type as RankingType)) {\n        this.rankingType = payload.ranking_type as RankingType;\n      }\n      if (typeof payload.ranking_options === 'string') {\n        const optionsSplits = payload.ranking_options.split(',').map((i) => i.trim()).filter((i) => !!i);\n        if (optionsSplits.length > 0) {\n          this.rankingOptions = [...optionsSplits];\n        }\n      }\n    }\n\n    // sortable\n    this.sortable = payload.sortable === true || payload.sortable === 'true';\n\n    // editable\n    this.editable = payload.editable === true || payload.editable === 'true';\n\n    // addible\n    this.addible = payload.addible === true || payload.addible === 'true';\n    if (this.addible) {\n      if (Object.values(LLMModel).includes(payload.add_model as LLMModel)) {\n        this.addModel = payload.add_model as LLMModel;\n      }\n    }\n  }\n\n  async loadResult() {\n    const savedResult = await this.jobProxy!.loadSavedResult();\n    const reviewFromResult = await this.jobProxy!.loadReviewFrom();\n\n    const result = savedResult || reviewFromResult;\n    if (!result) {\n      return;\n    }\n    if (result.auditId) {\n      this.jobProxy!.setAuditId(result.auditId);\n    }\n\n    // parse result\n    const { desc, input, output, attributes, instruction } = result;\n    if (typeof desc === 'string' && desc) {\n      this.subject = desc;\n    }\n\n    if (attributes) {\n      this.attributes = attributes;\n    }\n    this.instruction = parseContent(instruction);\n    this.question = parseContent(input);\n    if (Array.isArray(output) && output.length > 0) {\n      const answers: MAnswer[] = [];\n      output.forEach((o) => {\n        if (typeof o === 'string') {\n          answers.push(new MAnswer({\n            id: uuidv4(),\n            original: this.isLabeling,\n            value: [{\n              type: ContentItemType.UNSTYLED,\n              content: o,\n            }],\n            ...this.isLabeling && {\n              originalValue: [{\n                type: ContentItemType.UNSTYLED,\n                content: o,\n              }],\n            },\n          }));\n        } else if (typeof o === 'object') {\n          const original = this.isOriginalAnswer(o.original, !savedResult);\n          const value = parseContent(o.value);\n          let originalValue;\n          if (o.originalValue) {\n            originalValue = parseContent(o.originalValue);\n          } else if (original) {\n            originalValue = value;\n          }\n          answers.push(new MAnswer({\n            id: o.id || uuidv4(),\n            original,\n            value,\n            originalValue,\n            rank: o.rank,\n            attributes: o.attributes,\n            model: o.model,\n            sourceModelId: o.sourceModelId,\n          }));\n        }\n      });\n      this.answers = answers;\n    }\n  }\n\n  async saveResult(submit = false) {\n    if (submit && this.annotatable) {\n      this.validateResult();\n    }\n    return this.jobProxy!.saveResult({\n      instruction: toJS(this.instruction),\n      attributes: toJS(this.attributes),\n      desc: this.subject,\n      input: toJS(this.question),\n      output: this.answers.map((answer) => answer.toJSON()),\n      modelInput: this.generateModelInput(),\n      auditId: this.jobProxy!.auditId,\n      templateConfig: this.jobProxy!.templateConfig,\n    }, submit);\n  }\n\n  saveReviews(submit = false) {\n    // TODO:\n  }\n\n  generateModelInput() {\n    return {\n      desc: this.subject,\n      input: contentToPlainText(this.question),\n      output: this.answers.map((answer) => ({\n        value: contentToPlainText(answer.value),\n        rank: toJS(answer.rank),\n        attributes: toJS(answer.attributes),\n        sourceModelId: answer.sourceModelId,\n      })),\n    };\n  }\n\n  validateResult = () => {\n    // 1) check answer value\n    // 2) check answer rank\n    // 3) check answer item attributes\n    // 4) check answer limit\n    let newlyAddedAnswersCount = 0;\n    this.answers.forEach((answer) => {\n      if (!answer.original) {\n        newlyAddedAnswersCount += 1;\n        if (isContentEmpty(answer.value)) {\n          this.selectedAnswer = answer;\n          this.isEditingAnswer = true;\n          this.hasError = true;\n          throw new Error(i18n.translate('CHAT_ITEM_EMPTY_ERROR'));\n        }\n      }\n      if (this.ranking && this.rankingType === RankingType.SCORE\n        && this.rankingOptions.some((o) => answer.rank?.scores?.[o] === undefined)) {\n        this.selectedAnswer = answer;\n        this.isRankingAnswer = true;\n        this.hasError = true;\n        throw new Error(i18n.translate('CHAT_ITEM_RANK_EMPTY_ERROR'));\n      }\n      if (this.itemAttributesConfig) {\n        const { attributes } = answer;\n        if (attributes) {\n          const validateRes = validateForm(this.itemAttributesConfig, attributes);\n          if (!validateRes) {\n            this.selectedAnswer = answer;\n            this.isItemAttributesEditing = true;\n            this.hasItemAttrError = true;\n            throw new Error(i18n.translate('CHAT_ITEM_ATTR_EMPTY_ERROR'));\n          }\n        }\n      }\n    });\n  };\n\n  setSubject = (subject: string) => {\n    this.subject = subject;\n  };\n\n  setAttributesConfig = (attributes: any) => {\n    this.attributes = attributes;\n  };\n\n  validate = () => {\n    if (this.isAddingAnswer || this.isAddingAnswerByAPI) {\n      this.catchSaveError();\n      throw new Error('should finish adding');\n    }\n    if (this.selectedAnswer) {\n      if (this.isRankingAnswer && this.rankingType === RankingType.SCORE\n        && this.rankingOptions.some((o) => this.selectedAnswer?.rank?.scores?.[o] === undefined)) {\n        this.catchRankError();\n        throw new Error('should finish ranking');\n      }\n      if (this.isItemAttributesEditing && this.itemAttributesConfig) {\n        const { attributes } = this.selectedAnswer;\n        if (attributes) {\n          const validateRes = validateForm(this.itemAttributesConfig, attributes);\n          if (!validateRes) {\n            this.catchItemAttributesError();\n            throw new Error('should finish the item attributes form');\n          }\n        }\n      }\n    }\n  };\n\n  validateItem = () => {\n    try {\n      this.validate();\n      this.hasError = false;\n      this.isRankingAnswer = false;\n      this.isItemAttributesEditing = false;\n    } catch (e) {\n      // validate failed\n    }\n  };\n\n  selectAnswer = (answer: MAnswer) => {\n    if (this.selectedAnswer?.id === answer.id) {\n      return;\n    }\n    try {\n      this.validate();\n      this.hasError = false;\n      this.selectedAnswer = answer;\n      this.isEditingAnswer = false;\n      this.isRankingAnswer = false;\n      this.isItemAttributesEditing = false;\n    } catch (e) {\n      // validate failed\n    }\n  };\n\n  getQuestionItemContent = () => {\n    if (this.question) {\n      const content = contentToPlainText(this.question);\n      return [\n        {\n          role: 'user',\n          content,\n        }\n      ];\n    }\n    return null;\n  };\n\n  // addAnswerByAPI = () => {\n  //   if (this.readonly || !this.canAddAnswer) {\n  //     return;\n  //   }\n  //   try {\n  //     this.validate();\n  //     this.hasError = false;\n  //     this.selectedAnswer = undefined;\n  //     this.isEditingAnswer = false;\n  //     this.isRankingAnswer = false;\n  //     this.isItemAttributesEditing = false;\n  //     this.isAddingAnswerByAPI = true;\n  //   } catch (e) {\n  //     // validate failed\n  //   }\n  //   const messages = this.getQuestionItemContent();\n  //   if (!messages) {\n  //     message.error(i18n.translate('CHAT_ITEM_GENERATE_NO_QUESTION'));\n  //     return;\n  //   }\n  //   const data = {\n  //     messages,\n  //     stream: false,\n  //     temperature: 0.5,\n  //     presence_penalty: 0,\n  //     frequency_penalty: 0,\n  //   };\n  //   const apiForwardType = {\n  //     [LLMModel.CHAT_GPT]: APIForwardType.CHAT_GPT,\n  //     [LLMModel.CHAT_GPT_4]: APIForwardType.CHAT_GPT_4,\n  //   };\n  //   this.jobProxy?.forwardAPI(apiForwardType[(this.addModel as LLMModel.CHAT_GPT | LLMModel.CHAT_GPT_4)], data).then((res) => {\n  //     if (!res || res.error) {\n  //       message.error(res?.msg || i18n.translate('CHAT_ITEM_GENERATE_FAIL'));\n  //       this.cancelSaveAnswerByAPI();\n  //       return;\n  //     }\n  //     if (res && Array.isArray(res) && res.length > 0) {\n  //       this.generateAnswerItem(res[0].message.content);\n  //     }\n  //   });\n  // };\n\n  generateAnswerItem = (value: string) => {\n    if (this.readonly) {\n      return;\n    }\n    this.hasError = false;\n\n    if (this.isAddingAnswerByAPI) {\n      // add new answer\n      const newAnswer = new MAnswer({\n        id: uuidv4(),\n        original: false,\n        value: [{\n          type: ContentItemType.UNSTYLED,\n          content: value,\n        }],\n        originalValue: [{\n          type: ContentItemType.UNSTYLED,\n          content: value,\n        }],\n        model: this.addModel,\n      });\n      this.answers.push(newAnswer);\n      this.selectedAnswer = newAnswer;\n      if (!this.readonly && this.ranking) {\n        this.isRankingAnswer = true;\n      }\n    }\n    this.cancelSaveAnswerByAPI();\n  };\n\n  cancelSaveAnswerByAPI = () => {\n    this.isAddingAnswerByAPI = false;\n  };\n\n  addAnswer = () => {\n    if (this.readonly || !this.canAddAnswer) {\n      return;\n    }\n    try {\n      this.validate();\n      this.hasError = false;\n      this.selectedAnswer = undefined;\n      this.isEditingAnswer = false;\n      this.isRankingAnswer = false;\n      this.isItemAttributesEditing = false;\n      this.isAddingAnswer = true;\n    } catch (e) {\n      // validate failed\n    }\n  };\n\n  editAnswer = (answer: MAnswer) => {\n    if (this.readonly || (answer.original && !this.editable)) {\n      return;\n    }\n    if (this.selectedAnswer?.id === answer.id) {\n      this.isEditingAnswer = true;\n      return;\n    }\n    try {\n      this.validate();\n      this.hasError = false;\n      this.selectedAnswer = answer;\n      this.isRankingAnswer = false;\n      this.isItemAttributesEditing = false;\n      this.isEditingAnswer = true;\n    } catch (e) {\n      // validate failed\n    }\n  };\n\n  saveAnswer = (value: Content) => {\n    if (this.readonly) {\n      return;\n    }\n    if (this.isAddingAnswer) {\n      // add new answer\n      const newAnswer = new MAnswer({\n        id: uuidv4(),\n        original: false,\n        value,\n      });\n      this.answers.push(newAnswer);\n      this.selectedAnswer = newAnswer;\n      if (!this.readonly && this.ranking) {\n        this.isRankingAnswer = true;\n      }\n    } else if (this.isEditingAnswer && this.selectedAnswer) {\n      // update answer\n      this.selectedAnswer.value = value;\n    }\n    this.cancelSaveAnswer();\n  };\n\n  updateAnswer = (answer: MAnswer, value: Content) => {\n    if (this.readonly || this.isAddingAnswer || this.isEditingAnswer) {\n      return;\n    }\n    answer.value = value;\n  };\n\n  cancelSaveAnswer = () => {\n    this.isEditingAnswer = false;\n    this.isAddingAnswer = false;\n  };\n\n  catchSaveError = (msg?: string) => {\n    this.hasError = true;\n    message.error(msg || i18n.translate('CHAT_ITEM_EMPTY_ERROR'));\n  };\n\n  rankAnswer = (answer: MAnswer) => {\n    if (this.readonly || !this.ranking) {\n      return;\n    }\n    try {\n      this.validate();\n      this.hasError = false;\n      if (this.selectedAnswer?.id !== answer.id) {\n        this.isItemAttributesEditing = false;\n      }\n      this.selectedAnswer = answer;\n      this.isEditingAnswer = false;\n      this.isRankingAnswer = true;\n    } catch (e) {\n      // validate failed\n    }\n  };\n\n  saveRank = (answer: MAnswer, rank: Rank) => {\n    if (this.readonly) {\n      return;\n    }\n    if (this.selectedAnswer?.id !== answer.id) {\n      try {\n        this.validate();\n        this.hasError = false;\n        this.isItemAttributesEditing = false;\n      } catch (e) {\n        // validate failed\n        return;\n      }\n    }\n    this.isRankingAnswer = true;\n    this.selectedAnswer = answer;\n    this.selectedAnswer.rank = rank;\n  };\n\n  catchRankError = (msg?: string) => {\n    this.hasRankError = true;\n    message.error(msg || i18n.translate('CHAT_ITEM_RANK_EMPTY_ERROR'));\n  };\n\n  onItemAttributesEdit = (answer: MAnswer) => {\n    if (this.readonly || !this.itemAttributesConfig) {\n      return;\n    }\n    try {\n      this.validate();\n      this.hasError = false;\n    } catch (e) {\n      // validate failed\n      return;\n    }\n    if (this.selectedAnswer?.id !== answer.id) {\n      this.isRankingAnswer = false;\n    }\n    this.selectedAnswer = answer;\n    this.isEditingAnswer = false;\n    this.isItemAttributesEditing = true;\n  };\n\n  setItemAttributes = (answer: MAnswer, attributes: any) => {\n    if (this.readonly) {\n      return;\n    }\n    if (this.selectedAnswer?.id !== answer.id) {\n      try {\n        this.validate();\n        this.hasError = false;\n      } catch (e) {\n        // validate failed\n        return;\n      }\n    }\n    this.selectedAnswer = answer;\n    this.selectedAnswer.attributes = attributes;\n  };\n\n  deleteItemAttributes = (answer: MAnswer) => {\n    Modal.confirm({\n      title: i18n.translate('CHAT_ITEM_DEL_TITLE'),\n      okText: i18n.translate('CHAT_ITEM_DEL_OK'),\n      cancelText: i18n.translate('CHAT_ITEM_DEL_CANCEL'),\n      onOk: () => {\n        this.setItemAttributes(answer, undefined);\n        this.isItemAttributesEditing = false;\n      }\n    });\n  };\n\n  saveItemAttributes = (answer: MAnswer, attributes: any) => {\n    this.setItemAttributes(answer, attributes);\n    this.isItemAttributesEditing = true;\n  };\n\n  catchItemAttributesError = (msg?: string) => {\n    this.hasItemAttrError = true;\n    message.error(msg || i18n.translate('CHAT_ITEM_ATTR_EMPTY_ERROR'));\n  };\n\n  updateAnswerOrder = (source: string, destination?: number) => {\n    if (destination === undefined) {\n      return;\n    }\n\n    const currIndex = this.answers.findIndex((i) => i.id === source);\n    if (currIndex < 0 || currIndex === destination) {\n      return;\n    }\n\n    const currAnswer = this.answers[currIndex];\n    this.answers.splice(currIndex, 1);\n    this.answers.splice(destination, 0, currAnswer);\n\n    this.isDraggingAnswer = false;\n  };\n}\n\nexport default new Store();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}