{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/TaskNavigation/TaskNavigation.js\";\nimport React from 'react';\nimport screenfull from 'screenfull';\nimport { connect } from 'react-redux';\nimport { AiOutlineSave } from 'react-icons/ai';\nimport AppenLogo from '../common/Icons/AppenLogo';\nimport GuideIcon from '../common/Icons/GuideIcon';\nimport FullscreenIcon from '../common/Icons/FullscreenIcon';\nimport TaskSelect from './TaskSelect/TaskSelect';\nimport Guider from './Guider/Guider';\nimport Measurements from './Measurements/Measurements';\nimport './TaskNavigation.scss';\nimport { showHideGuider } from '../../redux/action';\nimport { translate } from '../../constants';\nimport version from '../../version';\nimport { isPreview } from '../../../../utils/tool-mode';\nconst TaskNavigation = props => {\n  const handleButtonClick = (e, type) => {\n    switch (type) {\n      case 'fullscreen':\n        if (screenfull.isEnabled) {\n          screenfull.toggle();\n        }\n        break;\n      case 'guider':\n        props.showHideGuider();\n        break;\n      case 'save':\n        props.onSave();\n        break;\n      default:\n        break;\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-navigation-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AppenLogo, {\n    className: \"appen-logo\",\n    style: {\n      height: '20px',\n      width: '100px'\n    },\n    viewBox: \"30 0 20 20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"appen-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Audio Segmentation Tool\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"version\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, translate('VERSION_LABEL'), ' ', version)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-navigation-button-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Measurements, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      opacity: props.isGuiding ? 1 : 0.6\n    },\n    className: \"guider-button\",\n    onClick: e => handleButtonClick(e, 'guider'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GuideIcon, {\n    style: {\n      height: '26px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"fullscreen-button\",\n    onClick: e => handleButtonClick(e, 'fullscreen'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FullscreenIcon, {\n    style: {\n      height: '26px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"save-button\",\n    disabled: isPreview(props.toolMode),\n    onClick: e => handleButtonClick(e, 'save'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AiOutlineSave, {\n    size: 26,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Guider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TaskSelect, {\n    className: \"task-select-wrapper\",\n    setCurrentSegment: props.setCurrentSegment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }));\n};\nTaskNavigation.prototype = {};\nconst mapStateToProps = state => ({\n  isGuiding: state.isGuiding,\n  toolMode: state.toolMode\n});\nconst mapDispatchToProps = {\n  showHideGuider\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskNavigation);","map":{"version":3,"names":["React","screenfull","connect","AiOutlineSave","AppenLogo","GuideIcon","FullscreenIcon","TaskSelect","Guider","Measurements","showHideGuider","translate","version","isPreview","TaskNavigation","props","handleButtonClick","e","type","isEnabled","toggle","onSave","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","height","width","viewBox","opacity","isGuiding","onClick","disabled","toolMode","size","setCurrentSegment","prototype","mapStateToProps","state","mapDispatchToProps"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/TaskNavigation/TaskNavigation.js"],"sourcesContent":["import React from 'react';\nimport screenfull from 'screenfull';\nimport { connect } from 'react-redux';\nimport { AiOutlineSave } from 'react-icons/ai';\nimport AppenLogo from '../common/Icons/AppenLogo';\nimport GuideIcon from '../common/Icons/GuideIcon';\nimport FullscreenIcon from '../common/Icons/FullscreenIcon';\nimport TaskSelect from './TaskSelect/TaskSelect';\nimport Guider from './Guider/Guider';\nimport Measurements from './Measurements/Measurements';\nimport './TaskNavigation.scss';\nimport { showHideGuider } from '../../redux/action';\nimport { translate } from '../../constants';\nimport version from '../../version';\nimport { isPreview } from '../../../../utils/tool-mode';\n\nconst TaskNavigation = ((props) => {\n  const handleButtonClick = (e, type) => {\n    switch (type) {\n      case 'fullscreen':\n        if (screenfull.isEnabled) {\n          screenfull.toggle();\n        }\n        break;\n      case 'guider':\n        props.showHideGuider();\n        break;\n      case 'save':\n        props.onSave();\n        break;\n      default:\n        break;\n    }\n  };\n  return (\n    <div className=\"task-navigation-container\">\n      <AppenLogo className=\"appen-logo\" style={{ height: '20px', width: '100px' }} viewBox=\"30 0 20 20\" />\n      <div className=\"appen-title\">\n        <span>Audio Segmentation Tool</span>\n        <span className=\"version\">\n          {translate('VERSION_LABEL')}\n          {' '}\n          {version}\n        </span>\n      </div>\n      <div className=\"task-navigation-button-list\">\n        <Measurements />\n        <button\n          style={{ opacity: props.isGuiding ? 1 : 0.6 }}\n          className=\"guider-button\"\n          onClick={(e) => handleButtonClick(e, 'guider')}\n        >\n          <GuideIcon style={{ height: '26px' }} />\n        </button>\n        <button\n          className=\"fullscreen-button\"\n          onClick={(e) => handleButtonClick(e, 'fullscreen')}\n        >\n          <FullscreenIcon style={{ height: '26px' }} />\n        </button>\n        <button\n          className=\"save-button\"\n          disabled={isPreview(props.toolMode)}\n          onClick={(e) => handleButtonClick(e, 'save')}\n        >\n          <AiOutlineSave size={26} />\n        </button>\n      </div>\n      <Guider />\n      <TaskSelect\n        className=\"task-select-wrapper\"\n        setCurrentSegment={props.setCurrentSegment}\n      />\n    </div>\n  );\n});\n\nTaskNavigation.prototype = {\n\n};\n\nconst mapStateToProps = (state) => ({\n  isGuiding: state.isGuiding,\n  toolMode: state.toolMode,\n});\nconst mapDispatchToProps = {\n  showHideGuider,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskNavigation);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}