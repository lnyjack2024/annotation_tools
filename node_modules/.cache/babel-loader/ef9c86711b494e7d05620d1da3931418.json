{"ast":null,"code":"import { Container } from 'pixi.js';\nimport ShapeGraphics from '../common/shapes/ShapeGraphics';\nimport { runCustomValidation } from '../../../utils';\nimport { ValidationType } from '../types';\nimport store from '../store/RootStore';\n/**\n * load instance from result\n * @param result\n */\nexport function loadInstancesFromResult(result, ontology) {\n  const instances = result.map(i => {\n    const categoryIndex = ontology.findIndex(o => i.category === o.class_name);\n    return {\n      ...i,\n      categoryIndex\n    };\n  });\n  return instances;\n}\nexport const timeInterval = pxPerSec => {\n  let retVal = 1;\n  if (pxPerSec >= 1000) {\n    retVal = 0.01;\n  } else if (pxPerSec >= 500) {\n    retVal = 0.02;\n  } else if (pxPerSec >= 100) {\n    retVal = 0.1;\n  } else if (pxPerSec >= 50) {\n    retVal = 0.2;\n  } else if (pxPerSec >= 10) {\n    retVal = 1;\n  } else if (pxPerSec >= 5) {\n    retVal = 12;\n  } else if (pxPerSec >= 1) {\n    retVal = 24;\n  } else if (pxPerSec >= 0.5) {\n    retVal = 120;\n  } else if (pxPerSec >= 0.01) {\n    retVal = 600;\n  } else {\n    retVal = Math.ceil(1 / pxPerSec) * 60;\n  }\n  return retVal;\n};\nexport const primaryLabelInterval = pxPerSec => {\n  return 5;\n  let retVal = 1;\n  if (pxPerSec >= 1000) {\n    retVal = 50; // 0.01;\n  } else if (pxPerSec >= 500) {\n    retVal = 10; // 0.02;\n  } else if (pxPerSec >= 100) {\n    retVal = 5; // 0.1;\n  } else if (pxPerSec >= 50) {\n    retVal = 5; // 0.2;\n  } else if (pxPerSec >= 10) {\n    retVal = 5; // 1;\n  } else if (pxPerSec >= 5) {\n    retVal = 5; // 20;\n  } else if (pxPerSec >= 1) {\n    retVal = 10; // 30;\n  } else if (pxPerSec >= 0.5) {\n    retVal = 10; // 120;\n  } else if (pxPerSec >= 0.01) {\n    retVal = 15; // 6000;\n  } else {\n    retVal = Math.ceil(1 / pxPerSec);\n  }\n  return retVal;\n};\nexport const formatTimeCallback = (secs, pxPerSec) => {\n  let seconds = Number(secs);\n  const minutes = Math.floor(seconds / 60);\n  seconds %= 60;\n\n  // fill up seconds with zeroes\n  let secondsStr = Math.round(seconds).toString();\n  if (pxPerSec >= 25 * 10) {\n    secondsStr = seconds.toFixed(2);\n  } else if (pxPerSec >= 25 * 1) {\n    secondsStr = seconds.toFixed(1);\n  }\n  if (minutes > 0) {\n    if (seconds < 10) {\n      secondsStr = `0${secondsStr}`;\n    }\n    return `${minutes}:${secondsStr}`;\n  }\n  return secondsStr;\n};\n\n/**\n * format in minutes:seconds:milliseconds, for example, 00:00:000\n * @param second\n * @returns {string}\n */\nexport const formatTimestamp = second => {\n  if (!second || Number.isNaN(second)) {\n    return '00.000';\n  }\n  const arr = [];\n  arr.push(`${Math.floor(second)}`.padStart(2, '0'));\n  second -= Number(arr[0]);\n  arr.push(second.toFixed(4).toString().slice(2));\n  return `${arr[0]}.${arr[1]}`;\n};\nexport function validate(customCheck, params) {\n  return new Promise(async resolve => {\n    const {\n      resultLink\n    } = params;\n    const results = [];\n    let hasCustomError = false;\n    if (customCheck) {\n      // custom check\n      const customResult = await runCustomValidation(customCheck, resultLink);\n      customResult.results.forEach(result => {\n        results.push({\n          ...result,\n          ...(result.info && result.info),\n          warningType: ValidationType.CUSTOM\n        });\n      });\n      hasCustomError = customResult.hasCustomError;\n    }\n    resolve({\n      results,\n      hasCustomError\n    });\n  });\n}\nexport function hitTesting(point, localPoint, rootChildren) {\n  const getIntersections = children => {\n    let shapes = [];\n    for (let i = 0; i < children.length; i += 1) {\n      const child = children[i];\n      if (child instanceof ShapeGraphics) {\n        if (child.interactive && child.containsPoint(point)) {\n          shapes.push(child);\n        }\n      } else if (child instanceof Container) {\n        shapes = [...shapes, ...getIntersections(child.children)];\n      }\n    }\n    return shapes;\n  };\n  const intersections = getIntersections(rootChildren);\n  return intersections[0];\n}\nexport const wrapText = (ctx, text, x, sy, align, color, fontSize) => {\n  if (ctx) {\n    ctx.textAlign = align;\n    ctx.font = `${(fontSize || 12) * store.setting.ratio}px sans-serif`;\n    ctx.fillStyle = color || '#363B44';\n    ctx.fillText(text, x, sy);\n    ctx.stroke();\n  }\n};","map":{"version":3,"names":["Container","ShapeGraphics","runCustomValidation","ValidationType","store","loadInstancesFromResult","result","ontology","instances","map","i","categoryIndex","findIndex","o","category","class_name","timeInterval","pxPerSec","retVal","Math","ceil","primaryLabelInterval","formatTimeCallback","secs","seconds","Number","minutes","floor","secondsStr","round","toString","toFixed","formatTimestamp","second","isNaN","arr","push","padStart","slice","validate","customCheck","params","Promise","resolve","resultLink","results","hasCustomError","customResult","forEach","info","warningType","CUSTOM","hitTesting","point","localPoint","rootChildren","getIntersections","children","shapes","length","child","interactive","containsPoint","intersections","wrapText","ctx","text","x","sy","align","color","fontSize","textAlign","font","setting","ratio","fillStyle","fillText","stroke"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/phonetic-transcription/utils/index.ts"],"sourcesContent":["import { Container, DisplayObject, Point } from 'pixi.js';\nimport ShapeGraphics from '../common/shapes/ShapeGraphics';\nimport { runCustomValidation } from '../../../utils';\nimport { ValidationType, Instance, InstanceItem, Ontology } from '../types';\nimport { IWarning } from '../../common/tabs-menu/Validator';\nimport store from '../store/RootStore';\n/**\n * load instance from result\n * @param result\n */\nexport function loadInstancesFromResult(result: InstanceItem[], ontology: Ontology[]) {\n  const instances: Instance[] = result.map((i) => {\n    const categoryIndex = ontology.findIndex((o) => i.category === o.class_name);\n    return {\n      ...i,\n      categoryIndex,\n    };\n  });\n  return instances;\n}\n\nexport const timeInterval = (pxPerSec: number) => {\n  let retVal = 1;\n  if (pxPerSec >= 1000) {\n    retVal = 0.01;\n  } else if (pxPerSec >= 500) {\n    retVal = 0.02;\n  } else if (pxPerSec >= 100) {\n    retVal = 0.1;\n  } else if (pxPerSec >= 50) {\n    retVal = 0.2;\n  } else if (pxPerSec >= 10) {\n    retVal = 1;\n  } else if (pxPerSec >= 5) {\n    retVal = 12;\n  } else if (pxPerSec >= 1) {\n    retVal = 24;\n  } else if (pxPerSec >= 0.5) {\n    retVal = 120;\n  } else if (pxPerSec >= 0.01) {\n    retVal = 600;\n  } else {\n    retVal = Math.ceil(1 / pxPerSec) * 60;\n  }\n  return retVal;\n};\n\nexport const primaryLabelInterval = (pxPerSec: number) => {\n  return 5;\n  let retVal = 1;\n  if (pxPerSec >= 1000) {\n    retVal = 50; // 0.01;\n  } else if (pxPerSec >= 500) {\n    retVal = 10; // 0.02;\n  } else if (pxPerSec >= 100) {\n    retVal = 5; // 0.1;\n  } else if (pxPerSec >= 50) {\n    retVal = 5; // 0.2;\n  } else if (pxPerSec >= 10) {\n    retVal = 5; // 1;\n  } else if (pxPerSec >= 5) {\n    retVal = 5; // 20;\n  } else if (pxPerSec >= 1) {\n    retVal = 10; // 30;\n  } else if (pxPerSec >= 0.5) {\n    retVal = 10; // 120;\n  } else if (pxPerSec >= 0.01) {\n    retVal = 15; // 6000;\n  } else {\n    retVal = Math.ceil(1 / pxPerSec);\n  }\n  return retVal;\n};\n\nexport const formatTimeCallback = (secs: number, pxPerSec: number) => {\n  let seconds = Number(secs);\n  const minutes = Math.floor(seconds / 60);\n  seconds %= 60;\n\n  // fill up seconds with zeroes\n  let secondsStr = Math.round(seconds).toString();\n  if (pxPerSec >= 25 * 10) {\n    secondsStr = seconds.toFixed(2);\n  } else if (pxPerSec >= 25 * 1) {\n    secondsStr = seconds.toFixed(1);\n  }\n\n  if (minutes > 0) {\n    if (seconds < 10) {\n      secondsStr = `0${secondsStr}`;\n    }\n    return `${minutes}:${secondsStr}`;\n  }\n  return secondsStr;\n};\n\n/**\n * format in minutes:seconds:milliseconds, for example, 00:00:000\n * @param second\n * @returns {string}\n */\nexport const formatTimestamp = (second: number) => {\n  if (!second || Number.isNaN(second)) {\n    return '00.000';\n  }\n  const arr = [];\n  arr.push(`${Math.floor(second)}`.padStart(2, '0'));\n  second -= Number(arr[0]);\n  arr.push(second.toFixed(4).toString().slice(2));\n  return `${arr[0]}.${arr[1]}`;\n};\n\nexport function validate(\n  customCheck: string[],\n  params: {\n    resultLink?: string;\n  },\n) {\n  return new Promise<{\n    results: IWarning[];\n    hasCustomError: boolean;\n  }>(async (resolve) => {\n    const { resultLink } = params;\n    const results: IWarning[] = [];\n    let hasCustomError = false;\n\n    if (customCheck) {\n      // custom check\n      const customResult = await runCustomValidation(customCheck, resultLink!);\n      customResult.results.forEach((result) => {\n        results.push({ ...result, ...result.info && result.info, warningType: ValidationType.CUSTOM });\n      });\n      hasCustomError = customResult.hasCustomError;\n    }\n\n    resolve({ results, hasCustomError });\n  });\n}\n\nexport function hitTesting(point: Point, localPoint: Point, rootChildren: DisplayObject[]) {\n  const getIntersections = (children: DisplayObject[]) => {\n    let shapes: ShapeGraphics<unknown>[] = [];\n    for (let i = 0; i < children.length; i += 1) {\n      const child = children[i];\n      if (child instanceof ShapeGraphics) {\n        if (child.interactive && child.containsPoint(point)) {\n          shapes.push(child);\n        }\n      } else if (child instanceof Container) {\n        shapes = [...shapes, ...getIntersections(child.children)];\n      }\n    }\n    return shapes;\n  };\n  const intersections = getIntersections(rootChildren);\n  return intersections[0];\n}\n\nexport const wrapText = (ctx: CanvasRenderingContext2D | null, text: string, x: number, sy: number, align: CanvasTextAlign, color?: string, fontSize?: number) => {\n  if (ctx) {\n    ctx.textAlign = align;\n    ctx.font = `${(fontSize || 12) * store.setting.ratio}px sans-serif`;\n    ctx.fillStyle = color || '#363B44';\n    ctx.fillText(text, x, sy);\n    ctx.stroke();\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}