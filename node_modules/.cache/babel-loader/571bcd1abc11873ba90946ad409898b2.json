{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import Input from'./Input';import{ContentItemType}from'../types';import'./Input.scss';export let InputType=/*#__PURE__*/function(InputType){InputType[\"DEFAULT\"]=\"default\";return InputType;}({});const InputWrapper=_ref=>{let{types=[InputType.DEFAULT],defaultValue,onSubmit,onCancel,onError}=_ref;const textRef=useRef(null);const cachedText=useRef('');const[type,setType]=useState();useEffect(()=>{setType(InputType.DEFAULT);},[]);useEffect(()=>{const newContent=[];if(cachedText.current){newContent.push({type:ContentItemType.UNSTYLED,content:cachedText.current});};if(newContent.length>0){if(type===InputType.DEFAULT){var _textRef$current;(_textRef$current=textRef.current)===null||_textRef$current===void 0?void 0:_textRef$current.setValue(newContent);}}},[type]);return type===InputType.DEFAULT?/*#__PURE__*/React.createElement(Input,{ref:textRef,defaultValue:defaultValue,onSubmit:onSubmit,onCancel:onCancel,onError:onError}):null;};export default InputWrapper;","map":{"version":3,"names":["React","useEffect","useRef","useState","Input","ContentItemType","InputType","InputWrapper","_ref","types","DEFAULT","defaultValue","onSubmit","onCancel","onError","textRef","cachedText","type","setType","newContent","current","push","UNSTYLED","content","length","_textRef$current","setValue","createElement","ref"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/common/llm/input/InputWrapper.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport Input, { InputHandle } from './Input';\nimport { Content, ContentItemType } from '../types';\nimport './Input.scss';\n\nexport enum InputType {\n  DEFAULT = 'default',\n}\n\ninterface InputWrapperProps {\n  types?: InputType[];\n  defaultValue?: Content;\n  onSubmit: (value: Content) => void;\n  onCancel: () => void;\n  onError: (msg?: string) => void;\n}\n\nconst InputWrapper: React.FC<InputWrapperProps> = ({\n  types = [InputType.DEFAULT],\n  defaultValue,\n  onSubmit,\n  onCancel,\n  onError,\n}) => {\n  const textRef = useRef<InputHandle>(null);\n  const cachedText = useRef('');\n  const [type, setType] = useState<InputType>();\n\n  useEffect(() => {\n    setType(InputType.DEFAULT);\n  }, []);\n\n  useEffect(() => {\n    const newContent: Content = [];\n    if (cachedText.current) {\n      newContent.push({\n        type: ContentItemType.UNSTYLED,\n        content: cachedText.current,\n      });\n    };\n    if (newContent.length > 0) {\n      if (type === InputType.DEFAULT) {\n        textRef.current?.setValue(newContent);\n      }\n    }\n  }, [type]);\n\n  return type === InputType.DEFAULT ? (\n    <Input\n      ref={textRef}\n      defaultValue={defaultValue}\n      onSubmit={onSubmit}\n      onCancel={onCancel}\n      onError={onError}\n    />\n  ) : null;\n};\n\nexport default InputWrapper;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,MAAM,CAAEC,QAAQ,KAAQ,OAAO,CAC1D,MAAO,CAAAC,KAAK,KAAuB,SAAS,CAC5C,OAAkBC,eAAe,KAAQ,UAAU,CACnD,MAAO,cAAc,CAErB,UAAY,CAAAC,SAAS,uBAATA,SAAS,EAATA,SAAS,4BAAT,CAAAA,SAAS,OAYrB,KAAM,CAAAC,YAAyC,CAAGC,IAAA,EAM5C,IAN6C,CACjDC,KAAK,CAAG,CAACH,SAAS,CAACI,OAAO,CAAC,CAC3BC,YAAY,CACZC,QAAQ,CACRC,QAAQ,CACRC,OACF,CAAC,CAAAN,IAAA,CACC,KAAM,CAAAO,OAAO,CAAGb,MAAM,CAAc,IAAI,CAAC,CACzC,KAAM,CAAAc,UAAU,CAAGd,MAAM,CAAC,EAAE,CAAC,CAC7B,KAAM,CAACe,IAAI,CAAEC,OAAO,CAAC,CAAGf,QAAQ,CAAY,CAAC,CAE7CF,SAAS,CAAC,IAAM,CACdiB,OAAO,CAACZ,SAAS,CAACI,OAAO,CAAC,CAC5B,CAAC,CAAE,EAAE,CAAC,CAENT,SAAS,CAAC,IAAM,CACd,KAAM,CAAAkB,UAAmB,CAAG,EAAE,CAC9B,GAAIH,UAAU,CAACI,OAAO,CAAE,CACtBD,UAAU,CAACE,IAAI,CAAC,CACdJ,IAAI,CAAEZ,eAAe,CAACiB,QAAQ,CAC9BC,OAAO,CAAEP,UAAU,CAACI,OACtB,CAAC,CAAC,CACJ,CAAC,CACD,GAAID,UAAU,CAACK,MAAM,CAAG,CAAC,CAAE,CACzB,GAAIP,IAAI,GAAKX,SAAS,CAACI,OAAO,CAAE,KAAAe,gBAAA,CAC9B,CAAAA,gBAAA,CAAAV,OAAO,CAACK,OAAO,UAAAK,gBAAA,iBAAfA,gBAAA,CAAiBC,QAAQ,CAACP,UAAU,CAAC,CACvC,CACF,CACF,CAAC,CAAE,CAACF,IAAI,CAAC,CAAC,CAEV,MAAO,CAAAA,IAAI,GAAKX,SAAS,CAACI,OAAO,cAC/BV,KAAA,CAAA2B,aAAA,CAACvB,KAAK,EACJwB,GAAG,CAAEb,OAAQ,CACbJ,YAAY,CAAEA,YAAa,CAC3BC,QAAQ,CAAEA,QAAS,CACnBC,QAAQ,CAAEA,QAAS,CACnBC,OAAO,CAAEA,OAAQ,CAClB,CAAC,CACA,IAAI,CACV,CAAC,CAED,cAAe,CAAAP,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module"}