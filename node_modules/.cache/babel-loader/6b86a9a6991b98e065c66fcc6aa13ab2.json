{"ast":null,"code":"import OntologyStore from './OntologyStore';\nimport UndoStore from './UndoStore';\nimport SettingsStore from './SettingsStore';\nimport ReviewsStore from './ReviewsStore';\nimport ShapeStore from './ShapeStore';\nimport HandleStore from './HandleStore';\n/**\n * root store\n * @class\n */\nclass RootStore {\n  constructor() {\n    this.ontology = void 0;\n    this.undo = void 0;\n    this.review = void 0;\n    this.setting = void 0;\n    this.shape = void 0;\n    this.handle = void 0;\n    this.ontology = new OntologyStore(this);\n    this.undo = new UndoStore(this);\n    this.review = new ReviewsStore(this);\n    this.setting = new SettingsStore(this);\n    this.shape = new ShapeStore(this);\n    this.handle = new HandleStore(this);\n  }\n  async init(payload) {\n    this.ontology.setOntology(payload.ontology);\n    this.setting.initPayload(payload);\n    this.review.init(payload.jobProxy.toolMode, payload.issue_types);\n    const reviews = await payload.jobProxy.loadReviews();\n    this.review.setInitialData(reviews);\n  }\n}\nconst rootStore = new RootStore();\nexport default rootStore;","map":{"version":3,"names":["OntologyStore","UndoStore","SettingsStore","ReviewsStore","ShapeStore","HandleStore","RootStore","constructor","ontology","undo","review","setting","shape","handle","init","payload","setOntology","initPayload","jobProxy","toolMode","issue_types","reviews","loadReviews","setInitialData","rootStore"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/keypoint/store/RootStore.ts"],"sourcesContent":["import OntologyStore from './OntologyStore';\nimport UndoStore from './UndoStore';\nimport SettingsStore from './SettingsStore';\nimport ReviewsStore from './ReviewsStore';\nimport ShapeStore from './ShapeStore';\nimport HandleStore from './HandleStore';\nimport { Payload } from '../types';\n\n/**\n * root store\n * @class\n */\nclass RootStore {\n  ontology: OntologyStore;\n\n  undo: UndoStore;\n\n  review: ReviewsStore;\n\n  setting: SettingsStore;\n\n  shape: ShapeStore;\n\n  handle: HandleStore;\n\n  constructor() {\n    this.ontology = new OntologyStore(this);\n    this.undo = new UndoStore(this);\n    this.review = new ReviewsStore(this);\n    this.setting = new SettingsStore(this);\n    this.shape = new ShapeStore(this);\n    this.handle = new HandleStore(this);\n  }\n\n  async init(payload: Payload) {\n    this.ontology.setOntology(payload.ontology);\n    this.setting.initPayload(payload);\n    this.review.init(payload.jobProxy.toolMode, payload.issue_types);\n\n    const reviews = await payload.jobProxy.loadReviews();\n    this.review.setInitialData(reviews);\n  }\n}\nconst rootStore = new RootStore();\n\nexport type RootStoreType = typeof rootStore;\n\nexport default rootStore;\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,WAAW,MAAM,eAAe;AAGvC;AACA;AACA;AACA;AACA,MAAMC,SAAS,CAAC;EAadC,WAAWA,CAAA,EAAG;IAAA,KAZdC,QAAQ;IAAA,KAERC,IAAI;IAAA,KAEJC,MAAM;IAAA,KAENC,OAAO;IAAA,KAEPC,KAAK;IAAA,KAELC,MAAM;IAGJ,IAAI,CAACL,QAAQ,GAAG,IAAIR,aAAa,CAAC,IAAI,CAAC;IACvC,IAAI,CAACS,IAAI,GAAG,IAAIR,SAAS,CAAC,IAAI,CAAC;IAC/B,IAAI,CAACS,MAAM,GAAG,IAAIP,YAAY,CAAC,IAAI,CAAC;IACpC,IAAI,CAACQ,OAAO,GAAG,IAAIT,aAAa,CAAC,IAAI,CAAC;IACtC,IAAI,CAACU,KAAK,GAAG,IAAIR,UAAU,CAAC,IAAI,CAAC;IACjC,IAAI,CAACS,MAAM,GAAG,IAAIR,WAAW,CAAC,IAAI,CAAC;EACrC;EAEA,MAAMS,IAAIA,CAACC,OAAgB,EAAE;IAC3B,IAAI,CAACP,QAAQ,CAACQ,WAAW,CAACD,OAAO,CAACP,QAAQ,CAAC;IAC3C,IAAI,CAACG,OAAO,CAACM,WAAW,CAACF,OAAO,CAAC;IACjC,IAAI,CAACL,MAAM,CAACI,IAAI,CAACC,OAAO,CAACG,QAAQ,CAACC,QAAQ,EAAEJ,OAAO,CAACK,WAAW,CAAC;IAEhE,MAAMC,OAAO,GAAG,MAAMN,OAAO,CAACG,QAAQ,CAACI,WAAW,CAAC,CAAC;IACpD,IAAI,CAACZ,MAAM,CAACa,cAAc,CAACF,OAAO,CAAC;EACrC;AACF;AACA,MAAMG,SAAS,GAAG,IAAIlB,SAAS,CAAC,CAAC;AAIjC,eAAekB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}