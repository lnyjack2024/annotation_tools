{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/phonetic-transcription/components/Atlas/index.tsx\";\nimport React from 'react';\nimport { cloneDeep } from 'lodash';\nimport { reaction, makeObservable, when, toJS } from 'mobx';\nimport { observer } from 'mobx-react';\nimport { notification } from 'antd';\nimport { v4 as uuidv4 } from 'uuid';\nimport Wave from '../../common/Wave/index';\nimport { formatTimeCallback, timeInterval } from '../../utils/index';\nimport eventBus, { EventAction } from '../../utils/event';\nimport rootStore from '../../store/RootStore';\nimport i18n from '../../locales';\nimport { getAnalyseData } from '../../request';\nimport './index.scss';\nnotification.config({\n  top: 60\n});\nconst style = {\n  defaultAlpha: 0.5,\n  darkGray: '#2D2A34FF',\n  defaultGray: '#FFFFFF35',\n  defaultRed: '#FF0000FF',\n  defaultGreen: '#00FF00FF',\n  defaultWhite: '#FFFFFF99',\n  defaultBlue: '#0000FFFF',\n  timelineColor: '#8B8B8B',\n  cursorColor: '#0060FF',\n  transparent: 'rgba(0,0,0,0)'\n};\nclass Atlas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.audioContainer = React.createRef();\n    this.waveformRef = React.createRef();\n    this.timeline = React.createRef();\n    this.waveSurfer = void 0;\n    this.audioCtx = void 0;\n    this.dataArray = new Uint8Array();\n    this.cursorTime = 0;\n    // audio duration\n    this.duration = 0;\n    // waveform peaks\n    this.peaks = [];\n    this.selectedMeasurement = -1;\n    this.audioData = new Float32Array();\n    this.selectedRegion = null;\n    this.region = null;\n    this.catchDisplay = null;\n    /**\n     * redraw\n     */\n    this.redraw = height => {\n      if (this.waveSurfer) {\n        if (height) {\n          var _ref;\n          this.waveSurfer.setHeight(height);\n          (_ref = this.waveSurfer.plugins.analyse) === null || _ref === void 0 ? void 0 : _ref.setHeight(height);\n        }\n        this.waveSurfer.fireEvent('redraw');\n        this.startDrawAnalyse();\n      }\n    };\n    this.handleScroll = (start, end) => {\n      var _this$waveSurfer;\n      (_this$waveSurfer = this.waveSurfer) === null || _this$waveSurfer === void 0 ? void 0 : _this$waveSurfer.scroll({\n        start,\n        end\n      });\n      this.drawAnalyse(start, end);\n    };\n    this.waveformZoom = () => {\n      if (this.waveformRef.current) {\n        var _this$waveSurfer2;\n        const {\n          analyse: {\n            displayBuffer: {\n              start,\n              end\n            },\n            placement: {\n              margin\n            }\n          },\n          setting: {\n            zoom\n          }\n        } = rootStore;\n        const cursorPrecent = (this.props.mousePosition.x - margin) / this.waveformRef.current.clientWidth * (end - start) + start;\n        (_this$waveSurfer2 = this.waveSurfer) === null || _this$waveSurfer2 === void 0 ? void 0 : _this$waveSurfer2.zoom(zoom, cursorPrecent);\n      }\n    };\n    this.wavesurferListen = () => {\n      if (this.waveSurfer) {\n        this.waveSurfer.on('ready', () => {\n          var _this$waveSurfer3;\n          (_this$waveSurfer3 = this.waveSurfer) === null || _this$waveSurfer3 === void 0 ? void 0 : _this$waveSurfer3.pause();\n          this.duration = this.waveSurfer.getDuration();\n          rootStore.analyse.setDuration(this.duration);\n          this.loadAnalyse(rootStore.urls[0]);\n        });\n        this.waveSurfer.on('update_region', region => this.handleRegionUpdate(region));\n        this.waveSurfer.on('click_region', (e, region) => this.handleRegionClick(e, region));\n        this.waveSurfer.on('mousemove', ({\n          cursorTime\n        }) => {\n          this.cursorTime = cursorTime;\n          rootStore.analyse.setCursorTime(cursorTime);\n        });\n        this.waveSurfer.on('zoom', ({\n          start,\n          end\n        }) => {\n          rootStore.analyse.setDisplayBuffer({\n            start,\n            end,\n            precent: end - start\n          });\n          eventBus.emit(EventAction.ZOOM, {\n            start,\n            end\n          });\n        });\n        this.waveSurfer.on('error', () => {\n          var _this$waveSurfer4;\n          (_this$waveSurfer4 = this.waveSurfer) === null || _this$waveSurfer4 === void 0 ? void 0 : _this$waveSurfer4.destroy();\n        });\n      }\n    };\n    this.loadAnalyse = url => {\n      fetch(url).then(res => res.blob()).then(async audio => {\n        var _this$waveSurfer5;\n        const formData = new FormData();\n        formData.append('audio', audio);\n        const analysePlugin = (_this$waveSurfer5 = this.waveSurfer) === null || _this$waveSurfer5 === void 0 ? void 0 : _this$waveSurfer5.plugins.analyse;\n        const {\n          code,\n          data\n        } = await getAnalyseData(audio);\n        rootStore.setting.setLoading(false);\n        if (code === 0) {\n          const {\n            pitches,\n            dbs,\n            formants,\n            spectrograms\n          } = data;\n          analysePlugin.setAnalyseData(pitches, dbs, formants, spectrograms);\n        } else {\n          eventBus.emit(EventAction.ANALYSE_DRAW_END);\n          notification.error({\n            message: i18n.translate('ANALYSE_LOAD_ERROR')\n          });\n        }\n      }).catch(error => {\n        notification.error({\n          message: i18n.translate('ANALYSE_LOAD_ERROR')\n        });\n        console.log('load anlyse error ==>', error);\n        rootStore.setting.setLoading(false);\n      });\n    };\n    this.listen = () => {\n      eventBus.on(EventAction.FREQUENCIES_DRAW, () => {\n        this.startDrawAnalyse();\n      });\n      eventBus.on(EventAction.GET_AUDIO_BUFFERF, async ({\n        buffer\n      }) => {\n        rootStore.analyse.setAudioBuffer(buffer);\n      });\n      eventBus.on(EventAction.ANALYSE_DRAW_START, () => {\n        rootStore.analyse.setIsDrawAtlasEnd(false);\n      });\n      eventBus.on(EventAction.ANALYSE_DRAW_END, () => {\n        rootStore.analyse.setIsDrawAtlasEnd(true);\n      });\n      eventBus.on(EventAction.SCALER_SEL, () => {\n        const {\n          selectedRegion\n        } = rootStore.analyse;\n        if (selectedRegion) {\n          this.catchDisplay = toJS(rootStore.analyse.displayBuffer);\n          const {\n            start,\n            end\n          } = selectedRegion;\n          this.cursorTime = start;\n          const zoom = Number((this.duration / (end - start)).toFixed(2));\n          rootStore.setting.setZoom(zoom);\n        }\n      });\n      eventBus.on(EventAction.SCALER_BAK, () => {\n        if (this.catchDisplay) {\n          const {\n            start,\n            precent\n          } = this.catchDisplay;\n          this.cursorTime = start * this.duration;\n          const zoom = Math.ceil(1 / precent);\n          rootStore.analyse.setDisplayBuffer(this.catchDisplay);\n          this.catchDisplay = null;\n          rootStore.setting.setZoom(zoom);\n        }\n      });\n      eventBus.on(EventAction.SCALER_RESIZE, () => {\n        rootStore.setting.setZoom(1);\n      });\n      eventBus.on(EventAction.DISPLAY_CHANGE, ({\n        start,\n        end\n      }) => {\n        this.handleScroll(start, end);\n      });\n    };\n    this.startDrawAnalyse = () => {\n      const {\n        start,\n        end\n      } = this.props.display;\n      this.drawAnalyse(start, end);\n    };\n    this.handleRegionUpdate = region => {\n      if (this.selectedRegion && this.selectedRegion.id !== region.id) {\n        var _this$waveSurfer6;\n        ((_this$waveSurfer6 = this.waveSurfer) === null || _this$waveSurfer6 === void 0 ? void 0 : _this$waveSurfer6.plugins.region).updateRegion(this.selectedRegion.id);\n      }\n      this.selectedRegion = region;\n      const {\n        start,\n        end\n      } = region;\n      rootStore.analyse.setSelectedRegion({\n        start,\n        end\n      });\n    };\n    // resize current region\n    this.updateSelectedRegion = () => {\n      const {\n        placement,\n        selectedRegion,\n        cursorTime\n      } = rootStore.analyse;\n      if (selectedRegion) {\n        const {\n          margin,\n          atlasWidth,\n          timelineHeight,\n          atlasHeight\n        } = placement;\n        let {\n          start,\n          end\n        } = selectedRegion;\n        const {\n          x,\n          y\n        } = this.props.mousePosition;\n        if (x > margin && x < margin + atlasWidth && y > timelineHeight && y < timelineHeight + atlasHeight && cursorTime !== start && cursorTime !== end) {\n          if (cursorTime < start) {\n            start = cursorTime;\n          } else {\n            end = cursorTime;\n          }\n          rootStore.analyse.setSelectedRegion({\n            start,\n            end\n          });\n        }\n      }\n    };\n    makeObservable(this, {});\n  }\n  async componentDidMount() {\n    this.audioCtx = new window.AudioContext({\n      sampleRate: rootStore.analyse.sampleRate\n    });\n    when(() => rootStore.urls.length > 0 && rootStore.analyse.placement.analyserHeight > 0, () => {\n      if (this.waveformRef.current) {\n        this.initWaveSurfer();\n        this.listen();\n      }\n    });\n    reaction(() => rootStore.analyse.placement, () => {\n      this.redraw(rootStore.analyse.placement.atlasHeight / 2);\n    });\n    reaction(() => rootStore.setting.zoom, () => {\n      this.waveformZoom();\n    });\n    reaction(() => rootStore.analyse.visible, () => {\n      this.startDrawAnalyse();\n    });\n  }\n  componentDidUpdate(prevProps) {\n    if (!this.props.selectedRegion && this.selectedRegion || this.props.selectedRegion && !this.selectedRegion || this.props.selectedRegion && this.selectedRegion && (this.props.selectedRegion.start !== this.selectedRegion.start || this.props.selectedRegion.end !== this.selectedRegion.end)) {\n      this.setSelectedRegion(this.props.selectedRegion);\n    }\n    if (JSON.stringify(this.props.seekto) !== JSON.stringify(prevProps.seekto)) {\n      this.playAudio();\n    }\n    if (JSON.stringify(this.props.display) !== JSON.stringify(prevProps.display)) {\n      eventBus.emit(EventAction.DISPLAY_CHANGE, {\n        ...this.props.display\n      });\n    }\n  }\n  initWaveSurfer() {\n    const {\n      atlasHeight\n    } = rootStore.analyse.placement;\n    this.waveSurfer = new Wave({\n      container: this.waveformRef.current,\n      source: rootStore.urls[0],\n      audioContext: this.audioCtx,\n      pixelRatio: window.devicePixelRatio,\n      channels: [{\n        label: '',\n        color: '#000000'\n      }],\n      splitChannels: false,\n      height: atlasHeight / 2,\n      plugins: {\n        timeline: {\n          container: this.timeline.current,\n          fontSize: 10,\n          notchPercentHeight: 30,\n          primaryFontColor: style.timelineColor,\n          secondaryFontColor: style.timelineColor,\n          primaryColor: style.timelineColor,\n          secondaryColor: style.timelineColor,\n          timeInterval,\n          formatTimeCallback\n        },\n        region: {\n          container: this.waveformRef.current,\n          disabled: true,\n          dragEnable: false\n        },\n        analyse: {\n          container: this.waveformRef.current,\n          height: atlasHeight / 2\n        }\n      }\n    });\n    this.wavesurferListen();\n  }\n  setSelectedRegion(region) {\n    if (this.waveSurfer) {\n      if (this.selectedRegion) {\n        this.waveSurfer.plugins.region.updateRegion(this.selectedRegion.id);\n        this.selectedRegion = null;\n      }\n      if (region) {\n        const {\n          start,\n          end\n        } = region;\n        this.selectedRegion = {\n          id: uuidv4(),\n          channelIndex: 0,\n          start,\n          end,\n          color: 'rgba(0,0,0,0)'\n        };\n        this.waveSurfer.plugins.region.updateRegion(this.selectedRegion.id, cloneDeep(this.selectedRegion));\n      }\n    }\n  }\n  // eslint-disable-next-line class-methods-use-this\n  drawAnalyse(start, end) {\n    eventBus.emit(EventAction.DRAW_ANALYSE, {\n      start,\n      end\n    });\n  }\n  handleRegionClick(e, region) {\n    const {\n      ctrlKey\n    } = e;\n    if (ctrlKey) {\n      this.updateSelectedRegion();\n    } else if (!region) {\n      rootStore.analyse.setSelectedTime(this.cursorTime);\n    }\n  }\n  playAudio() {\n    if (this.waveSurfer && this.props.seekto) {\n      if (this.waveSurfer.isPlaying() && !rootStore.analyse.selectedRegion) {\n        this.waveSurfer.pause();\n        const currentTime = this.waveSurfer.getCurrentTime();\n        rootStore.analyse.setSelectedTime(currentTime);\n      } else {\n        const {\n          start,\n          end\n        } = this.props.seekto;\n        this.waveSurfer.play(start, end);\n      }\n      rootStore.analyse.setSeekto(null);\n    }\n  }\n  render() {\n    const {\n      timelineHeight,\n      atlasHeight\n    } = rootStore.analyse.placement;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"audio-waveform-container\",\n      ref: this.audioContainer,\n      style: {\n        height: `${timelineHeight + atlasHeight}px`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"audio-waveform-timeline\",\n      ref: this.timeline,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"audio-waveform\",\n      ref: this.waveformRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }\n    }));\n  }\n}\nexport default observer(Atlas);","map":{"version":3,"names":["React","cloneDeep","reaction","makeObservable","when","toJS","observer","notification","v4","uuidv4","Wave","formatTimeCallback","timeInterval","eventBus","EventAction","rootStore","i18n","getAnalyseData","config","top","style","defaultAlpha","darkGray","defaultGray","defaultRed","defaultGreen","defaultWhite","defaultBlue","timelineColor","cursorColor","transparent","Atlas","Component","constructor","props","audioContainer","createRef","waveformRef","timeline","waveSurfer","audioCtx","dataArray","Uint8Array","cursorTime","duration","peaks","selectedMeasurement","audioData","Float32Array","selectedRegion","region","catchDisplay","redraw","height","_ref","setHeight","plugins","analyse","fireEvent","startDrawAnalyse","handleScroll","start","end","_this$waveSurfer","scroll","drawAnalyse","waveformZoom","current","_this$waveSurfer2","displayBuffer","placement","margin","setting","zoom","cursorPrecent","mousePosition","x","clientWidth","wavesurferListen","on","_this$waveSurfer3","pause","getDuration","setDuration","loadAnalyse","urls","handleRegionUpdate","e","handleRegionClick","setCursorTime","setDisplayBuffer","precent","emit","ZOOM","_this$waveSurfer4","destroy","url","fetch","then","res","blob","audio","_this$waveSurfer5","formData","FormData","append","analysePlugin","code","data","setLoading","pitches","dbs","formants","spectrograms","setAnalyseData","ANALYSE_DRAW_END","error","message","translate","catch","console","log","listen","FREQUENCIES_DRAW","GET_AUDIO_BUFFERF","buffer","setAudioBuffer","ANALYSE_DRAW_START","setIsDrawAtlasEnd","SCALER_SEL","Number","toFixed","setZoom","SCALER_BAK","Math","ceil","SCALER_RESIZE","DISPLAY_CHANGE","display","id","_this$waveSurfer6","updateRegion","setSelectedRegion","updateSelectedRegion","atlasWidth","timelineHeight","atlasHeight","y","componentDidMount","window","AudioContext","sampleRate","length","analyserHeight","initWaveSurfer","visible","componentDidUpdate","prevProps","JSON","stringify","seekto","playAudio","container","source","audioContext","pixelRatio","devicePixelRatio","channels","label","color","splitChannels","fontSize","notchPercentHeight","primaryFontColor","secondaryFontColor","primaryColor","secondaryColor","disabled","dragEnable","channelIndex","DRAW_ANALYSE","ctrlKey","setSelectedTime","isPlaying","currentTime","getCurrentTime","play","setSeekto","render","createElement","className","ref","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/phonetic-transcription/components/Atlas/index.tsx"],"sourcesContent":["import React from 'react';\nimport { cloneDeep } from 'lodash';\nimport { reaction, makeObservable, when, toJS } from 'mobx';\nimport { observer } from 'mobx-react';\nimport { notification } from 'antd';\nimport { v4 as uuidv4 } from 'uuid';\nimport Wave from '../../common/Wave/index';\nimport { Region } from '../../common/Wave/types';\nimport { formatTimeCallback, timeInterval } from '../../utils/index';\nimport AnalysePlugin from '../../common/Wave/Analyse';\nimport RegionPlugion from '../../common/Wave/Region';\nimport eventBus, { EventAction } from '../../utils/event';\nimport rootStore from '../../store/RootStore';\nimport i18n from '../../locales';\nimport { getAnalyseData } from '../../request';\nimport { DisplayBuffer } from '../../types';\nimport './index.scss';\n\nnotification.config({ top: 60 });\n\nconst style = {\n  defaultAlpha: 0.5,\n  darkGray: '#2D2A34FF',\n  defaultGray: '#FFFFFF35',\n  defaultRed: '#FF0000FF',\n  defaultGreen: '#00FF00FF',\n  defaultWhite: '#FFFFFF99',\n  defaultBlue: '#0000FFFF',\n  timelineColor: '#8B8B8B',\n  cursorColor: '#0060FF',\n  transparent: 'rgba(0,0,0,0)',\n};\n\ninterface AtlasProps {\n  selectedRegion: null | { start: number; end: number; };\n  seekto: null | { start: number; end?: number; };\n  display: DisplayBuffer;\n  mousePosition: { x:number; y:number; };\n}\nclass Atlas extends React.Component<AtlasProps> {\n  audioContainer: React.RefObject<HTMLDivElement> = React.createRef();\n\n  waveformRef: React.RefObject<HTMLDivElement> = React.createRef();\n\n  timeline: React.RefObject<HTMLDivElement> = React.createRef();\n\n  waveSurfer?: Wave;\n\n  audioCtx?: AudioContext;\n\n  dataArray: Uint8Array = new Uint8Array();\n\n  cursorTime = 0;\n\n  // audio duration\n  duration = 0;\n\n  // waveform peaks\n  peaks:number[] = [];\n\n  selectedMeasurement = -1;\n\n  audioData: Float32Array = new Float32Array();\n\n  selectedRegion: Region | null = null;\n\n  region: Region | null = null;\n\n  catchDisplay: null | DisplayBuffer = null;\n\n  constructor(props: any) {\n    super(props);\n\n    makeObservable(this, {});\n  }\n\n  async componentDidMount() {\n    this.audioCtx = new window.AudioContext({ sampleRate: rootStore.analyse.sampleRate });\n\n    when(\n      () => rootStore.urls.length > 0 && rootStore.analyse.placement.analyserHeight > 0,\n      () => {\n        if (this.waveformRef.current) {\n          this.initWaveSurfer();\n          this.listen();\n        }\n      }\n    );\n\n    reaction(\n      () => rootStore.analyse.placement,\n      () => {\n        this.redraw(rootStore.analyse.placement.atlasHeight / 2);\n      },\n    );\n\n    reaction(\n      () => rootStore.setting.zoom,\n      () => {\n        this.waveformZoom();\n      },\n    );\n\n    reaction(\n      () => rootStore.analyse.visible,\n      () => {\n        this.startDrawAnalyse();\n      },\n    );\n  }\n\n  componentDidUpdate(prevProps: AtlasProps) {\n    if (\n      (!this.props.selectedRegion && this.selectedRegion) ||\n      (this.props.selectedRegion && !this.selectedRegion) ||\n      (\n        this.props.selectedRegion && this.selectedRegion &&\n        (this.props.selectedRegion.start !== this.selectedRegion.start ||\n        this.props.selectedRegion.end !== this.selectedRegion.end)\n      )\n    ) {\n      this.setSelectedRegion(this.props.selectedRegion);\n    }\n\n    if (JSON.stringify(this.props.seekto) !== JSON.stringify(prevProps.seekto)) {\n      this.playAudio();\n    }\n\n    if (JSON.stringify(this.props.display) !== JSON.stringify(prevProps.display)) {\n      eventBus.emit(EventAction.DISPLAY_CHANGE, { ...this.props.display });\n    }\n  }\n\n  initWaveSurfer() {\n    const { atlasHeight } = rootStore.analyse.placement;\n    this.waveSurfer = new Wave({\n      container: this.waveformRef.current!,\n      source: rootStore.urls[0],\n      audioContext: this.audioCtx!,\n      pixelRatio: window.devicePixelRatio,\n      channels: [{ label: '', color: '#000000' }],\n      splitChannels: false,\n      height: atlasHeight / 2,\n      plugins: {\n        timeline: {\n          container: this.timeline.current!,\n          fontSize: 10,\n          notchPercentHeight: 30,\n          primaryFontColor: style.timelineColor,\n          secondaryFontColor: style.timelineColor,\n          primaryColor: style.timelineColor,\n          secondaryColor: style.timelineColor,\n          timeInterval,\n          formatTimeCallback,\n        },\n        region: {\n          container: this.waveformRef.current!,\n          disabled: true,\n          dragEnable: false,\n        },\n        analyse: {\n          container: this.waveformRef.current!,\n          height: atlasHeight / 2,\n        }\n      }\n    });\n    this.wavesurferListen();\n  }\n\n  /**\n   * redraw\n   */\n  redraw = (height?:number) => {\n    if (this.waveSurfer) {\n      if (height) {\n        this.waveSurfer.setHeight(height);\n        (this.waveSurfer.plugins.analyse as unknown as AnalysePlugin)?.setHeight(height);\n      }\n      this.waveSurfer.fireEvent('redraw');\n      this.startDrawAnalyse();\n    }\n  };\n\n  handleScroll = (start: number, end: number) => {\n    this.waveSurfer?.scroll({ start, end });\n    this.drawAnalyse(start, end);\n  };\n\n  waveformZoom = () => {\n    if (this.waveformRef.current) {\n      const { analyse: { displayBuffer: { start, end }, placement: { margin } }, setting: { zoom } } = rootStore;\n      const cursorPrecent = ((this.props.mousePosition.x - margin) / this.waveformRef.current.clientWidth) * (end - start) + start;\n      this.waveSurfer?.zoom(zoom, cursorPrecent);\n    }\n  };\n\n  wavesurferListen = () => {\n    if (this.waveSurfer) {\n      this.waveSurfer.on('ready', () => {\n        this.waveSurfer?.pause();\n        this.duration = this.waveSurfer!.getDuration();\n        rootStore.analyse.setDuration(this.duration);\n        this.loadAnalyse(rootStore.urls[0]);\n      });\n      this.waveSurfer.on('update_region', (region: Region) => this.handleRegionUpdate(region));\n      this.waveSurfer.on('click_region', (e: MouseEvent, region?: Region) => this.handleRegionClick(e, region));\n      this.waveSurfer.on('mousemove', ({ cursorTime }: {\n        cursorTime: number;\n        mouse: {x: number; y: number},\n        channelIndex: number\n      }) => {\n        this.cursorTime = cursorTime;\n        rootStore.analyse.setCursorTime(cursorTime);\n      });\n      this.waveSurfer.on('zoom', ({ start, end }: {start: number, end: number}) => {\n        rootStore.analyse.setDisplayBuffer({ start, end, precent: end - start });\n        eventBus.emit(EventAction.ZOOM, { start, end });\n      });\n      this.waveSurfer.on('error', () => {\n        this.waveSurfer?.destroy();\n      });\n    }\n  };\n\n  loadAnalyse = (url: string) => {\n    fetch(url)\n      .then((res) => res.blob())\n      .then(async (audio) => {\n        const formData = new FormData();\n        formData.append('audio', audio);\n        const analysePlugin = ((this.waveSurfer?.plugins.analyse as unknown) as AnalysePlugin)!;\n        const { code, data } = await getAnalyseData(audio);\n        rootStore.setting.setLoading(false);\n        if (code === 0) {\n          const { pitches, dbs, formants, spectrograms } = data;\n          analysePlugin.setAnalyseData(pitches, dbs, formants, spectrograms);\n        } else {\n          eventBus.emit(EventAction.ANALYSE_DRAW_END);\n          notification.error({ message: i18n.translate('ANALYSE_LOAD_ERROR') });\n        }\n      }).catch((error) => {\n        notification.error({ message: i18n.translate('ANALYSE_LOAD_ERROR') });\n        console.log('load anlyse error ==>', error);\n        rootStore.setting.setLoading(false);\n      });\n  };\n\n  setSelectedRegion(region: {start: number; end: number} | null) {\n    if (this.waveSurfer) {\n      if (this.selectedRegion) {\n        (this.waveSurfer.plugins.region as unknown as RegionPlugion).updateRegion(this.selectedRegion.id);\n        this.selectedRegion = null;\n      }\n      if (region) {\n        const { start, end } = region;\n        this.selectedRegion = {\n          id: uuidv4(),\n          channelIndex: 0,\n          start,\n          end,\n          color: 'rgba(0,0,0,0)',\n        };\n        (this.waveSurfer.plugins.region as unknown as RegionPlugion).updateRegion(this.selectedRegion.id, cloneDeep(this.selectedRegion));\n      }\n    }\n  }\n\n  listen = () => {\n    eventBus.on(EventAction.FREQUENCIES_DRAW, () => {\n      this.startDrawAnalyse();\n    });\n\n    eventBus.on(EventAction.GET_AUDIO_BUFFERF, async ({ buffer }) => {\n      rootStore.analyse.setAudioBuffer(buffer);\n    });\n\n    eventBus.on(EventAction.ANALYSE_DRAW_START, () => {\n      rootStore.analyse.setIsDrawAtlasEnd(false);\n    });\n\n    eventBus.on(EventAction.ANALYSE_DRAW_END, () => {\n      rootStore.analyse.setIsDrawAtlasEnd(true);\n    });\n\n    eventBus.on(EventAction.SCALER_SEL, () => {\n      const { selectedRegion } = rootStore.analyse;\n      if (selectedRegion) {\n        this.catchDisplay = toJS(rootStore.analyse.displayBuffer);\n        const { start, end } = selectedRegion;\n        this.cursorTime = start;\n        const zoom = Number((this.duration / (end - start)).toFixed(2));\n        rootStore.setting.setZoom(zoom);\n      }\n    });\n\n    eventBus.on(EventAction.SCALER_BAK, () => {\n      if (this.catchDisplay) {\n        const { start, precent } = this.catchDisplay;\n        this.cursorTime = start * this.duration;\n        const zoom = Math.ceil(1 / precent);\n        rootStore.analyse.setDisplayBuffer(this.catchDisplay);\n        this.catchDisplay = null;\n        rootStore.setting.setZoom(zoom);\n      }\n    });\n\n    eventBus.on(EventAction.SCALER_RESIZE, () => {\n      rootStore.setting.setZoom(1);\n    });\n\n    eventBus.on(EventAction.DISPLAY_CHANGE, ({ start, end }) => {\n      this.handleScroll(start, end);\n    });\n  };\n\n  startDrawAnalyse = () => {\n    const { start, end } = this.props.display;\n    this.drawAnalyse(start, end);\n  };\n\n  // eslint-disable-next-line class-methods-use-this\n  drawAnalyse(start: number, end: number) {\n    eventBus.emit(EventAction.DRAW_ANALYSE, { start, end });\n  }\n\n  handleRegionUpdate = (region: Region) => {\n    if (this.selectedRegion && this.selectedRegion.id !== region.id) {\n      (this.waveSurfer?.plugins.region as unknown as RegionPlugion).updateRegion(this.selectedRegion.id);\n    }\n    this.selectedRegion = region;\n    const { start, end } = region;\n    rootStore.analyse.setSelectedRegion({ start, end });\n  };\n\n  handleRegionClick(e: MouseEvent, region?: Region) {\n    const { ctrlKey } = e;\n    if (ctrlKey) {\n      this.updateSelectedRegion();\n    } else if (!region) {\n      rootStore.analyse.setSelectedTime(this.cursorTime);\n    }\n  }\n\n  // resize current region\n  updateSelectedRegion = () => {\n    const { placement, selectedRegion, cursorTime } = rootStore.analyse;\n    if (selectedRegion) {\n      const { margin, atlasWidth, timelineHeight, atlasHeight } = placement;\n      let { start, end } = selectedRegion;\n      const { x, y } = this.props.mousePosition;\n      if (\n        (\n          (x > margin && x < margin + atlasWidth) &&\n          (y > timelineHeight && y < timelineHeight + atlasHeight)\n        ) &&\n        (cursorTime !== start && cursorTime !== end)\n      ) {\n        if (cursorTime < start) {\n          start = cursorTime;\n        } else {\n          end = cursorTime;\n        }\n        rootStore.analyse.setSelectedRegion({\n          start,\n          end,\n        });\n      }\n    }\n  };\n\n  playAudio() {\n    if (this.waveSurfer && this.props.seekto) {\n      if (this.waveSurfer.isPlaying() && !rootStore.analyse.selectedRegion) {\n        this.waveSurfer.pause();\n        const currentTime = this.waveSurfer.getCurrentTime();\n        rootStore.analyse.setSelectedTime(currentTime);\n      } else {\n        const { start, end } = this.props.seekto;\n        this.waveSurfer.play(start, end);\n      }\n      rootStore.analyse.setSeekto(null);\n    }\n  }\n\n  render() {\n    const { timelineHeight, atlasHeight } = rootStore.analyse.placement;\n    return (\n      <div\n        className=\"audio-waveform-container\"\n        ref={this.audioContainer}\n        style={{ height: `${timelineHeight + atlasHeight}px` }}\n      >\n        <div className=\"audio-waveform-timeline\" ref={this.timeline} />\n        <div className=\"audio-waveform\" ref={this.waveformRef} />\n      </div>\n    );\n  }\n}\nexport default observer(Atlas);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}