{"ast":null,"code":"import OntologyStore from'./OntologyStore';import UndoStore from'./UndoStore';import SettingsStore from'./SettingsStore';import ReviewsStore from'./ReviewsStore';import ShapeStore from'./ShapeStore';import HandleStore from'./HandleStore';/**\n * root store\n * @class\n */class RootStore{constructor(){this.ontology=void 0;this.undo=void 0;this.review=void 0;this.setting=void 0;this.shape=void 0;this.handle=void 0;this.ontology=new OntologyStore(this);this.undo=new UndoStore(this);this.review=new ReviewsStore(this);this.setting=new SettingsStore(this);this.shape=new ShapeStore(this);this.handle=new HandleStore(this);}async init(payload){this.ontology.setOntology(payload.ontology);this.setting.initPayload(payload);this.review.init(payload.jobProxy.toolMode,payload.issue_types);const reviews=await payload.jobProxy.loadReviews();this.review.setInitialData(reviews);}}const rootStore=new RootStore();export default rootStore;","map":{"version":3,"names":["OntologyStore","UndoStore","SettingsStore","ReviewsStore","ShapeStore","HandleStore","RootStore","constructor","ontology","undo","review","setting","shape","handle","init","payload","setOntology","initPayload","jobProxy","toolMode","issue_types","reviews","loadReviews","setInitialData","rootStore"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/keypoint/store/RootStore.ts"],"sourcesContent":["import OntologyStore from './OntologyStore';\nimport UndoStore from './UndoStore';\nimport SettingsStore from './SettingsStore';\nimport ReviewsStore from './ReviewsStore';\nimport ShapeStore from './ShapeStore';\nimport HandleStore from './HandleStore';\nimport { Payload } from '../types';\n\n/**\n * root store\n * @class\n */\nclass RootStore {\n  ontology: OntologyStore;\n\n  undo: UndoStore;\n\n  review: ReviewsStore;\n\n  setting: SettingsStore;\n\n  shape: ShapeStore;\n\n  handle: HandleStore;\n\n  constructor() {\n    this.ontology = new OntologyStore(this);\n    this.undo = new UndoStore(this);\n    this.review = new ReviewsStore(this);\n    this.setting = new SettingsStore(this);\n    this.shape = new ShapeStore(this);\n    this.handle = new HandleStore(this);\n  }\n\n  async init(payload: Payload) {\n    this.ontology.setOntology(payload.ontology);\n    this.setting.initPayload(payload);\n    this.review.init(payload.jobProxy.toolMode, payload.issue_types);\n\n    const reviews = await payload.jobProxy.loadReviews();\n    this.review.setInitialData(reviews);\n  }\n}\nconst rootStore = new RootStore();\n\nexport type RootStoreType = typeof rootStore;\n\nexport default rootStore;\n"],"mappings":"AAAA,MAAO,CAAAA,aAAa,KAAM,iBAAiB,CAC3C,MAAO,CAAAC,SAAS,KAAM,aAAa,CACnC,MAAO,CAAAC,aAAa,KAAM,iBAAiB,CAC3C,MAAO,CAAAC,YAAY,KAAM,gBAAgB,CACzC,MAAO,CAAAC,UAAU,KAAM,cAAc,CACrC,MAAO,CAAAC,WAAW,KAAM,eAAe,CAGvC;AACA;AACA;AACA,GACA,KAAM,CAAAC,SAAU,CAadC,WAAWA,CAAA,CAAG,MAZdC,QAAQ,aAERC,IAAI,aAEJC,MAAM,aAENC,OAAO,aAEPC,KAAK,aAELC,MAAM,QAGJ,IAAI,CAACL,QAAQ,CAAG,GAAI,CAAAR,aAAa,CAAC,IAAI,CAAC,CACvC,IAAI,CAACS,IAAI,CAAG,GAAI,CAAAR,SAAS,CAAC,IAAI,CAAC,CAC/B,IAAI,CAACS,MAAM,CAAG,GAAI,CAAAP,YAAY,CAAC,IAAI,CAAC,CACpC,IAAI,CAACQ,OAAO,CAAG,GAAI,CAAAT,aAAa,CAAC,IAAI,CAAC,CACtC,IAAI,CAACU,KAAK,CAAG,GAAI,CAAAR,UAAU,CAAC,IAAI,CAAC,CACjC,IAAI,CAACS,MAAM,CAAG,GAAI,CAAAR,WAAW,CAAC,IAAI,CAAC,CACrC,CAEA,KAAM,CAAAS,IAAIA,CAACC,OAAgB,CAAE,CAC3B,IAAI,CAACP,QAAQ,CAACQ,WAAW,CAACD,OAAO,CAACP,QAAQ,CAAC,CAC3C,IAAI,CAACG,OAAO,CAACM,WAAW,CAACF,OAAO,CAAC,CACjC,IAAI,CAACL,MAAM,CAACI,IAAI,CAACC,OAAO,CAACG,QAAQ,CAACC,QAAQ,CAAEJ,OAAO,CAACK,WAAW,CAAC,CAEhE,KAAM,CAAAC,OAAO,CAAG,KAAM,CAAAN,OAAO,CAACG,QAAQ,CAACI,WAAW,CAAC,CAAC,CACpD,IAAI,CAACZ,MAAM,CAACa,cAAc,CAACF,OAAO,CAAC,CACrC,CACF,CACA,KAAM,CAAAG,SAAS,CAAG,GAAI,CAAAlB,SAAS,CAAC,CAAC,CAIjC,cAAe,CAAAkB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}