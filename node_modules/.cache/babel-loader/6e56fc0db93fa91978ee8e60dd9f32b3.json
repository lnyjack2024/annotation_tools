{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/common/dropdown/Dropdown.tsx\";\nimport React, { useRef, useState, useEffect, useMemo } from 'react';\nimport { CaretDownOutlined, CheckOutlined } from '@ant-design/icons';\nimport cx from 'classnames';\nimport './Dropdown.scss';\nexport let MenuItemType = /*#__PURE__*/function (MenuItemType) {\n  MenuItemType[\"ITEM\"] = \"item\";\n  MenuItemType[\"TITLE\"] = \"title\";\n  return MenuItemType;\n}({});\nconst Dropdown = ({\n  children,\n  className,\n  style,\n  menuStyle,\n  arrow,\n  showIcon,\n  closeAfterClick = true,\n  triggerArea = 'element',\n  disabled,\n  active,\n  menu,\n  onClick\n}) => {\n  const ref = useRef(null);\n  const [dropdownVisible, setDropdownVisible] = useState(false);\n  const menus = useMemo(() => {\n    if (typeof menu[0] === 'string') {\n      return menu.map(i => ({\n        label: i\n      }));\n    }\n    return menu.map(i => i);\n  }, [menu]);\n  useEffect(() => {\n    const mousedown = e => {\n      var _ref$current;\n      if ((_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.contains(e.target)) {\n        return;\n      }\n      setDropdownVisible(false);\n    };\n    window.addEventListener('mousedown', mousedown);\n    return () => {\n      window.removeEventListener('mousedown', mousedown);\n    };\n  }, []);\n  const openDropdown = e => {\n    if (!disabled) {\n      e.stopPropagation();\n      setDropdownVisible(!dropdownVisible);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    ref: ref,\n    style: style,\n    className: cx(className, 'dropdown-button', {\n      'dropdown-button--active': active,\n      'dropdown-button--disabled': disabled\n    })\n  }, triggerArea === 'element' && {\n    onClick: openDropdown\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }), children, arrow && /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: \"dropdown-icon\"\n  }, triggerArea === 'arrow' && {\n    onClick: openDropdown\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CaretDownOutlined, {\n    style: {\n      transform: dropdownVisible ? 'rotate(180deg)' : ''\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  })), dropdownVisible && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown-menu\",\n    style: menuStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, menus.map((m, i) => m.type === MenuItemType.TITLE ? /*#__PURE__*/React.createElement(\"div\", {\n    key: m.label,\n    className: \"dropdown-menu-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, m.render ? m.render(m.label, i, m) : m.label) : /*#__PURE__*/React.createElement(\"div\", {\n    key: m.value || m.label,\n    className: cx('dropdown-menu-item', {\n      active: m.active,\n      disabled: m.disabled\n    }),\n    onClick: e => {\n      if (!m.disabled) {\n        e.stopPropagation();\n        onClick(m.label, i, m);\n        if (closeAfterClick) {\n          setDropdownVisible(false);\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, showIcon && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"dropdown-menu-item-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, m.active && /*#__PURE__*/React.createElement(CheckOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 32\n    }\n  })), m.render ? m.render(m.label, i, m) : m.label))));\n};\nexport default Dropdown;","map":{"version":3,"names":["React","useRef","useState","useEffect","useMemo","CaretDownOutlined","CheckOutlined","cx","MenuItemType","Dropdown","children","className","style","menuStyle","arrow","showIcon","closeAfterClick","triggerArea","disabled","active","menu","onClick","ref","dropdownVisible","setDropdownVisible","menus","map","i","label","mousedown","e","_ref$current","current","contains","target","window","addEventListener","removeEventListener","openDropdown","stopPropagation","createElement","Object","assign","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","transform","m","type","TITLE","key","render","value"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/common/dropdown/Dropdown.tsx"],"sourcesContent":["import React, { useRef, useState, useEffect, useMemo } from 'react';\nimport { CaretDownOutlined, CheckOutlined } from '@ant-design/icons';\nimport cx from 'classnames';\nimport './Dropdown.scss';\n\nexport enum MenuItemType {\n  ITEM = 'item',\n  TITLE = 'title',\n}\n\nexport interface MenuItem {\n  label: string;\n  type?: MenuItemType;\n  value?: any;\n  disabled?: boolean;\n  active?: boolean;\n  render?: (label: string, index: number, item: MenuItem) => React.ReactNode;\n}\n\nconst Dropdown = ({ children, className, style, menuStyle, arrow, showIcon, closeAfterClick = true, triggerArea = 'element', disabled, active, menu, onClick }: {\n  children?: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n  menuStyle?: React.CSSProperties;\n  arrow?: boolean;\n  showIcon?: boolean;\n  closeAfterClick?: boolean;\n  triggerArea?: 'element' | 'arrow';\n  disabled?: boolean;\n  active?: boolean;\n  menu: string[] | MenuItem[];\n  onClick: (item: string, index: number, menuItem: MenuItem) => void;\n}) => {\n  const ref = useRef<HTMLDivElement>(null);\n  const [dropdownVisible, setDropdownVisible] = useState(false);\n  const menus = useMemo<MenuItem[]>(() => {\n    if (typeof menu[0] === 'string') {\n      return (menu as string[]).map((i) => ({ label: i } as MenuItem));\n    }\n    return (menu as MenuItem[]).map((i) => i);\n  }, [menu]);\n\n  useEffect(() => {\n    const mousedown = (e: MouseEvent) => {\n      if (ref.current?.contains(e.target as HTMLElement)) {\n        return;\n      }\n      setDropdownVisible(false);\n    };\n    window.addEventListener('mousedown', mousedown);\n    return () => {\n      window.removeEventListener('mousedown', mousedown);\n    };\n  }, []);\n\n  const openDropdown = (e: React.MouseEvent) => {\n    if (!disabled) {\n      e.stopPropagation();\n      setDropdownVisible(!dropdownVisible);\n    }\n  };\n\n  return (\n    <div\n      ref={ref}\n      style={style}\n      className={cx(className, 'dropdown-button', {\n        'dropdown-button--active': active,\n        'dropdown-button--disabled': disabled,\n      })}\n      {...triggerArea === 'element' && {\n        onClick: openDropdown,\n      }}\n    >\n      {children}\n      {arrow && (\n        <div\n          className=\"dropdown-icon\"\n          {...triggerArea === 'arrow' && {\n            onClick: openDropdown,\n          }}\n        >\n          <CaretDownOutlined\n            style={{\n              transform: dropdownVisible ? 'rotate(180deg)' : '',\n            }}\n          />\n        </div>\n      )}\n      {dropdownVisible && (\n        <div className=\"dropdown-menu\" style={menuStyle}>\n          {menus.map((m, i) => (m.type === MenuItemType.TITLE ? (\n            <div key={m.label} className=\"dropdown-menu-title\">\n              {m.render ? m.render(m.label, i, m) : m.label}\n            </div>\n          ) : (\n            <div\n              key={m.value || m.label}\n              className={cx('dropdown-menu-item', {\n                active: m.active,\n                disabled: m.disabled,\n              })}\n              onClick={(e) => {\n                if (!m.disabled) {\n                  e.stopPropagation();\n                  onClick(m.label, i, m);\n                  if (closeAfterClick) {\n                    setDropdownVisible(false);\n                  }\n                }\n              }}\n            >\n              {showIcon && (\n                <span className=\"dropdown-menu-item-icon\">\n                  {m.active && <CheckOutlined />}\n                </span>\n              )}\n              {m.render ? m.render(m.label, i, m) : m.label}\n            </div>\n          )))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dropdown;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}