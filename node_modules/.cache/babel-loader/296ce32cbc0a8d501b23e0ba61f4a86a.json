{"ast":null,"code":"import{makeAutoObservable,toJS}from'mobx';import{getShapeTypeByTool,parseLabelConfig}from'../utils';import{Tool}from'../types';import{ShapeType}from'../../common/shapes/types';/**\n * store for ontology\n * @class\n */export default class OntologyStore{/**\n   * selected category\n   * @getter\n   */get selectedCategory(){const currentCategory=this.getCategory(this.selectedCategoryName);return currentCategory||this.categories[0];}/**\n   * selected category item\n   * @getter\n   */get selectedCategoryItem(){const{children}=this.selectedCategory;const index=children.findIndex(c=>c.name===this.selectedCategoryItemName);return index>=0?children[index]:children[0];}/**\n   * current tool\n   * @getter\n   */get currentTool(){if(this.currentToolItem){return this.currentToolItem.type;}return Tool.RECTANGLE;}/**\n   * current shapeType by currentTool\n   * @getter\n   */get currentShapeType(){return getShapeTypeByTool(this.currentTool)||ShapeType.RECTANGLE;}constructor(rootStore){/**\n   * root store\n   */this.rootStore=void 0;/**\n   * categories\n   */this.categories=[];/**\n   * selected category name\n   */this.selectedCategoryName='';/**\n   * selected category item name\n   */this.selectedCategoryItemName='';/**\n   * selected tool item\n   */this.currentToolItem=null;makeAutoObservable(this,{rootStore:false},{autoBind:true});this.rootStore=rootStore;}/**\n   * init from paylod\n   * @param payload\n   */init(payload){var _this$categories$,_this$categories$2,_this$categories$2$ch,_this$categories$3,_this$categories$3$ch;const categories=[];const{ontology=[]}=payload;ontology.forEach(o=>{var _o$children;const items=[];(_o$children=o.children)===null||_o$children===void 0?void 0:_o$children.forEach(child=>{const{name,display_name,display_color,count,label_config,label_config_point,type='',tools}=child;// parse tools\nlet allTools=[];if(tools){tools.forEach(item=>{const itemType=[Tool.RECTANGLE,Tool.POLYGON,Tool.LINE,Tool.DOT].includes(item.type)?item.type:Tool.RECTANGLE;const tool={type:itemType};allTools.push(tool);});}else{// legacy config\nlet legacyEdges;allTools=type.split(',').map(i=>({type:i||Tool.RECTANGLE,edges:legacyEdges}));}const item={name,displayName:display_name||name,displayColor:display_color||o.display_color||'',tools:allTools};if(count!==undefined&&count!==null){item.count=Number(count);}if(label_config){item.labelConfig=parseLabelConfig(label_config);}if(label_config_point){item.pointLabelConfig=parseLabelConfig(label_config_point);}items.push(item);});let categoryColor='';if(items.length===1&&items[0].count===1){categoryColor=items[0].displayColor;}categories.push({className:o.class_name,displayName:o.display_name||o.class_name,displayColor:categoryColor,labelConfigDynamic:parseLabelConfig(o.label_config_dynamic),children:items});});this.categories=categories;this.selectedCategoryName=(_this$categories$=this.categories[0])===null||_this$categories$===void 0?void 0:_this$categories$.className;this.selectedCategoryItemName=(_this$categories$2=this.categories[0])===null||_this$categories$2===void 0?void 0:(_this$categories$2$ch=_this$categories$2.children[0])===null||_this$categories$2$ch===void 0?void 0:_this$categories$2$ch.name;this.currentToolItem=(_this$categories$3=this.categories[0])===null||_this$categories$3===void 0?void 0:(_this$categories$3$ch=_this$categories$3.children[0])===null||_this$categories$3$ch===void 0?void 0:_this$categories$3$ch.tools[0];}/**\n   * get category object\n   * @param categoryName\n   */getCategory(categoryName){return toJS(this.categories.find(o=>o.className===categoryName));}/**\n   * get category item\n   * @param categoryName\n   * @param categoryItemName\n   */getCategoryItem(categoryName,categoryItemName){const category=this.getCategory(categoryName);return toJS(((category===null||category===void 0?void 0:category.children)||[]).find(o=>o.name===categoryItemName));}/**\n   * set selected category\n   * @param categoryName\n   */selectCategory(categoryName){if(this.selectedCategoryName!==categoryName){// turn off the add mode\nthis.rootStore.config.setAddMode(false);// category changes\nthis.selectedCategoryName=categoryName;// update selected category name\nthis.selectCategoryItem(this.selectedCategory.children[0].name);// default select the first one\n// unselect selected instance if needed\nif(this.rootStore.instance.selectedInstances.findIndex(i=>i.category===categoryName)<0){this.rootStore.instance.selectInstance(null);}}}/**\n   * set selected category item\n   * @param categoryItemName\n   */selectCategoryItem(categoryItemName){this.selectedCategoryItemName=categoryItemName;this.currentToolItem=this.selectedCategoryItem.tools[0];}/**\n   * activate category item\n   * @param categoryItemName\n   * @param tool\n   */activateCategoryItem(categoryItemName,tool){if(this.rootStore.shape.isDrawing){return;}this.selectCategoryItem(categoryItemName);this.selectTool(tool);this.rootStore.config.setAddMode(true);}/**\n   * activate category item by index\n   * @param index\n   */activateCategoryItemByIndex(index){if(this.rootStore.shape.isDrawing){return;}const child=this.selectedCategory.children[index];if(child){const tool=child.name===this.selectedCategoryItemName?this.currentToolItem:child.tools[0];this.activateCategoryItem(child.name,tool);}}/**\n   * set current tool\n   * @param tool\n   */selectTool(tool){if(this.currentToolItem!==tool){this.currentToolItem=tool;}}/**\n * get dynamic label config from category\n * @param categoryName\n */getDynamicLabelConfigFromCategory(categoryName){const category=this.getCategory(categoryName);return category===null||category===void 0?void 0:category.labelConfigDynamic;}/**\n   * get label config from category item\n   * @param categoryName\n   * @param categoryItemName\n   */getLabelConfigFromCategoryItem(categoryName,categoryItemName){const categoryItem=this.getCategoryItem(categoryName,categoryItemName);return categoryItem===null||categoryItem===void 0?void 0:categoryItem.labelConfig;}/**\n   * get point label config from category item\n   * @param categoryName\n   * @param categoryItemName\n   */getPointLabelConfigFromCategoryItem(categoryName,categoryItemName){const categoryItem=this.getCategoryItem(categoryName,categoryItemName);return categoryItem===null||categoryItem===void 0?void 0:categoryItem.pointLabelConfig;}}","map":{"version":3,"names":["makeAutoObservable","toJS","getShapeTypeByTool","parseLabelConfig","Tool","ShapeType","OntologyStore","selectedCategory","currentCategory","getCategory","selectedCategoryName","categories","selectedCategoryItem","children","index","findIndex","c","name","selectedCategoryItemName","currentTool","currentToolItem","type","RECTANGLE","currentShapeType","constructor","rootStore","autoBind","init","payload","_this$categories$","_this$categories$2","_this$categories$2$ch","_this$categories$3","_this$categories$3$ch","ontology","forEach","o","_o$children","items","child","display_name","display_color","count","label_config","label_config_point","tools","allTools","item","itemType","POLYGON","LINE","DOT","includes","tool","push","legacyEdges","split","map","i","edges","displayName","displayColor","undefined","Number","labelConfig","pointLabelConfig","categoryColor","length","className","class_name","labelConfigDynamic","label_config_dynamic","categoryName","find","getCategoryItem","categoryItemName","category","selectCategory","config","setAddMode","selectCategoryItem","instance","selectedInstances","selectInstance","activateCategoryItem","shape","isDrawing","selectTool","activateCategoryItemByIndex","getDynamicLabelConfigFromCategory","getLabelConfigFromCategoryItem","categoryItem","getPointLabelConfigFromCategoryItem"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking2/store/OntologyStore.ts"],"sourcesContent":["import { makeAutoObservable, toJS } from 'mobx';\nimport RootStore from './RootStore';\nimport { getShapeTypeByTool, parseLabelConfig } from '../utils';\nimport { Tool, Payload, Category, CategoryItem, ToolItem } from '../types';\nimport { ShapeType } from '../../common/shapes/types';\n\n/**\n * store for ontology\n * @class\n */\nexport default class OntologyStore {\n  /**\n   * root store\n   */\n  rootStore: typeof RootStore;\n\n  /**\n   * categories\n   */\n  categories: Category[] = [];\n\n  /**\n   * selected category name\n   */\n  selectedCategoryName = '';\n\n  /**\n   * selected category item name\n   */\n  selectedCategoryItemName = '';\n\n  /**\n   * selected tool item\n   */\n  currentToolItem: ToolItem | null = null;\n\n  /**\n   * selected category\n   * @getter\n   */\n  get selectedCategory() {\n    const currentCategory = this.getCategory(this.selectedCategoryName);\n    return currentCategory || this.categories[0];\n  }\n\n  /**\n   * selected category item\n   * @getter\n   */\n  get selectedCategoryItem() {\n    const { children } = this.selectedCategory;\n    const index = children.findIndex((c) => c.name === this.selectedCategoryItemName);\n    return index >= 0 ? children[index] : children[0];\n  }\n\n  /**\n   * current tool\n   * @getter\n   */\n  get currentTool() {\n    if (this.currentToolItem) {\n      return this.currentToolItem.type;\n    }\n    return Tool.RECTANGLE;\n  }\n\n  /**\n   * current shapeType by currentTool\n   * @getter\n   */\n  get currentShapeType() {\n    return getShapeTypeByTool(this.currentTool) || ShapeType.RECTANGLE;\n  }\n\n  constructor(rootStore: typeof RootStore) {\n    makeAutoObservable(this, {\n      rootStore: false,\n    }, {\n      autoBind: true,\n    });\n\n    this.rootStore = rootStore;\n  }\n\n  /**\n   * init from paylod\n   * @param payload\n   */\n  init(payload: Payload) {\n    const categories: Category[] = [];\n\n    const { ontology = [] } = payload;\n    ontology.forEach((o) => {\n      const items: CategoryItem[] = [];\n      o.children?.forEach((child) => {\n        const {\n          name,\n          display_name,\n          display_color,\n          count,\n          label_config,\n          label_config_point,\n          type = '',\n          tools,\n        } = child;\n\n        // parse tools\n        let allTools: ToolItem[] = [];\n        if (tools) {\n          tools.forEach((item) => {\n            const itemType: Tool = [Tool.RECTANGLE, Tool.POLYGON, Tool.LINE, Tool.DOT].includes(item.type as Tool) ? item.type as Tool : Tool.RECTANGLE;\n            const tool: ToolItem = { type: itemType };\n            allTools.push(tool);\n          });\n        } else {\n          // legacy config\n          let legacyEdges: number | undefined;\n          allTools = type.split(',').map((i) => ({ type: i as Tool || Tool.RECTANGLE, edges: legacyEdges }));\n        }\n\n        const item: CategoryItem = {\n          name,\n          displayName: display_name || name,\n          displayColor: display_color || o.display_color || '',\n          tools: allTools,\n        };\n        if (count !== undefined && count !== null) {\n          item.count = Number(count);\n        }\n        if (label_config) {\n          item.labelConfig = parseLabelConfig(label_config);\n        }\n        if (label_config_point) {\n          item.pointLabelConfig = parseLabelConfig(label_config_point);\n        }\n        items.push(item);\n      });\n\n      let categoryColor = '';\n      if (items.length === 1 && items[0].count === 1) {\n        categoryColor = items[0].displayColor;\n      }\n      categories.push({\n        className: o.class_name,\n        displayName: o.display_name || o.class_name,\n        displayColor: categoryColor,\n        labelConfigDynamic: parseLabelConfig(o.label_config_dynamic),\n        children: items,\n      });\n    });\n    this.categories = categories;\n    this.selectedCategoryName = this.categories[0]?.className;\n    this.selectedCategoryItemName = this.categories[0]?.children[0]?.name;\n    this.currentToolItem = this.categories[0]?.children[0]?.tools[0];\n  }\n\n  /**\n   * get category object\n   * @param categoryName\n   */\n  getCategory(categoryName: string) {\n    return toJS(this.categories.find((o) => o.className === categoryName));\n  }\n\n  /**\n   * get category item\n   * @param categoryName\n   * @param categoryItemName\n   */\n  getCategoryItem(categoryName: string, categoryItemName: string) {\n    const category = this.getCategory(categoryName);\n    return toJS((category?.children || []).find((o) => o.name === categoryItemName));\n  }\n\n  /**\n   * set selected category\n   * @param categoryName\n   */\n  selectCategory(categoryName: string) {\n    if (this.selectedCategoryName !== categoryName) {\n      // turn off the add mode\n      this.rootStore.config.setAddMode(false);\n      // category changes\n      this.selectedCategoryName = categoryName;\n      // update selected category name\n      this.selectCategoryItem(this.selectedCategory.children[0].name); // default select the first one\n      // unselect selected instance if needed\n      if (this.rootStore.instance.selectedInstances.findIndex((i) => i.category === categoryName) < 0) {\n        this.rootStore.instance.selectInstance(null);\n      }\n    }\n  }\n\n  /**\n   * set selected category item\n   * @param categoryItemName\n   */\n  selectCategoryItem(categoryItemName: string) {\n    this.selectedCategoryItemName = categoryItemName;\n    this.currentToolItem = this.selectedCategoryItem.tools[0];\n  }\n\n  /**\n   * activate category item\n   * @param categoryItemName\n   * @param tool\n   */\n  activateCategoryItem(categoryItemName: string, tool: ToolItem) {\n    if (this.rootStore.shape.isDrawing) {\n      return;\n    }\n    this.selectCategoryItem(categoryItemName);\n    this.selectTool(tool);\n    this.rootStore.config.setAddMode(true);\n  }\n\n  /**\n   * activate category item by index\n   * @param index\n   */\n  activateCategoryItemByIndex(index: number) {\n    if (this.rootStore.shape.isDrawing) {\n      return;\n    }\n    const child = this.selectedCategory.children[index];\n    if (child) {\n      const tool = child.name === this.selectedCategoryItemName ? this.currentToolItem! : child.tools[0];\n      this.activateCategoryItem(child.name, tool);\n    }\n  }\n\n  /**\n   * set current tool\n   * @param tool\n   */\n  selectTool(tool: ToolItem) {\n    if (this.currentToolItem !== tool) {\n      this.currentToolItem = tool;\n    }\n  }\n\n  /**\n * get dynamic label config from category\n * @param categoryName\n */\n  getDynamicLabelConfigFromCategory(categoryName: string) {\n    const category = this.getCategory(categoryName);\n    return category?.labelConfigDynamic;\n  }\n\n  /**\n   * get label config from category item\n   * @param categoryName\n   * @param categoryItemName\n   */\n  getLabelConfigFromCategoryItem(categoryName: string, categoryItemName: string) {\n    const categoryItem = this.getCategoryItem(categoryName, categoryItemName);\n    return categoryItem?.labelConfig;\n  }\n\n  /**\n   * get point label config from category item\n   * @param categoryName\n   * @param categoryItemName\n   */\n  getPointLabelConfigFromCategoryItem(categoryName: string, categoryItemName: string) {\n    const categoryItem = this.getCategoryItem(categoryName, categoryItemName);\n    return categoryItem?.pointLabelConfig;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}