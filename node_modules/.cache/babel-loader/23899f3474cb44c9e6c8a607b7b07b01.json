{"ast":null,"code":"/* eslint-disable no-undef */import{Language}from'../../../utils/constants';import ZN from'./zh-CN';import US from'./en-US';import JP from'./ja-JP';import KR from'./ko-KR';class Internationalization{constructor(){this.locale=Language.EN_US;this.setLocale=locale=>{const languages=Object.values(Language);if(locale!==undefined){// get from props\nif(languages.includes(locale)){this.locale=locale;}}else if(navigator.language){// get from browser\nconst language=languages.find(l=>l.slice(0,2)===navigator.language.slice(0,2));if(language){this.locale=language;}}};this.translate=word=>{let translated;switch(this.locale){case Language.ZH_CN:translated=ZN[word];break;case Language.JA_JP:translated=JP[word];break;case Language.KO_KR:translated=KR[word];break;default:translated=US[word];break;}return translated||word;};}get isUS(){return this.locale===Language.EN_US;}}const i18n=new Internationalization();export const setLocale=i18n.setLocale;export default i18n.translate;","map":{"version":3,"names":["Language","ZN","US","JP","KR","Internationalization","constructor","locale","EN_US","setLocale","languages","Object","values","undefined","includes","navigator","language","find","l","slice","translate","word","translated","ZH_CN","JA_JP","KO_KR","isUS","i18n"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/advertisement-annotation/locale/index.js"],"sourcesContent":["/* eslint-disable no-undef */\nimport { Language } from '../../../utils/constants';\nimport ZN from './zh-CN';\nimport US from './en-US';\nimport JP from './ja-JP';\nimport KR from './ko-KR';\n\nclass Internationalization {\n  locale = Language.EN_US;\n\n  get isUS() {\n    return this.locale === Language.EN_US;\n  }\n\n  setLocale = (locale) => {\n    const languages = Object.values(Language);\n    if (locale !== undefined) {\n      // get from props\n      if (languages.includes(locale)) {\n        this.locale = locale;\n      }\n    } else if (navigator.language) {\n      // get from browser\n      const language = languages.find((l) => l.slice(0, 2) === navigator.language.slice(0, 2));\n      if (language) {\n        this.locale = language;\n      }\n    }\n  };\n\n  translate = (word) => {\n    let translated;\n    switch (this.locale) {\n      case Language.ZH_CN:\n        translated = ZN[word];\n        break;\n      case Language.JA_JP:\n        translated = JP[word];\n        break;\n      case Language.KO_KR:\n        translated = KR[word];\n        break;\n      default:\n        translated = US[word];\n        break;\n    }\n    return translated || word;\n  };\n}\n\nconst i18n = new Internationalization();\nexport const setLocale = i18n.setLocale;\nexport default i18n.translate;\n"],"mappings":"AAAA,6BACA,OAASA,QAAQ,KAAQ,0BAA0B,CACnD,MAAO,CAAAC,EAAE,KAAM,SAAS,CACxB,MAAO,CAAAC,EAAE,KAAM,SAAS,CACxB,MAAO,CAAAC,EAAE,KAAM,SAAS,CACxB,MAAO,CAAAC,EAAE,KAAM,SAAS,CAExB,KAAM,CAAAC,oBAAqB,CAAAC,YAAA,OACzBC,MAAM,CAAGP,QAAQ,CAACQ,KAAK,MAMvBC,SAAS,CAAIF,MAAM,EAAK,CACtB,KAAM,CAAAG,SAAS,CAAGC,MAAM,CAACC,MAAM,CAACZ,QAAQ,CAAC,CACzC,GAAIO,MAAM,GAAKM,SAAS,CAAE,CACxB;AACA,GAAIH,SAAS,CAACI,QAAQ,CAACP,MAAM,CAAC,CAAE,CAC9B,IAAI,CAACA,MAAM,CAAGA,MAAM,CACtB,CACF,CAAC,IAAM,IAAIQ,SAAS,CAACC,QAAQ,CAAE,CAC7B;AACA,KAAM,CAAAA,QAAQ,CAAGN,SAAS,CAACO,IAAI,CAAEC,CAAC,EAAKA,CAAC,CAACC,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,GAAKJ,SAAS,CAACC,QAAQ,CAACG,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACxF,GAAIH,QAAQ,CAAE,CACZ,IAAI,CAACT,MAAM,CAAGS,QAAQ,CACxB,CACF,CACF,CAAC,MAEDI,SAAS,CAAIC,IAAI,EAAK,CACpB,GAAI,CAAAC,UAAU,CACd,OAAQ,IAAI,CAACf,MAAM,EACjB,IAAK,CAAAP,QAAQ,CAACuB,KAAK,CACjBD,UAAU,CAAGrB,EAAE,CAACoB,IAAI,CAAC,CACrB,MACF,IAAK,CAAArB,QAAQ,CAACwB,KAAK,CACjBF,UAAU,CAAGnB,EAAE,CAACkB,IAAI,CAAC,CACrB,MACF,IAAK,CAAArB,QAAQ,CAACyB,KAAK,CACjBH,UAAU,CAAGlB,EAAE,CAACiB,IAAI,CAAC,CACrB,MACF,QACEC,UAAU,CAAGpB,EAAE,CAACmB,IAAI,CAAC,CACrB,MACJ,CACA,MAAO,CAAAC,UAAU,EAAID,IAAI,CAC3B,CAAC,EArCD,GAAI,CAAAK,IAAIA,CAAA,CAAG,CACT,MAAO,KAAI,CAACnB,MAAM,GAAKP,QAAQ,CAACQ,KAAK,CACvC,CAoCF,CAEA,KAAM,CAAAmB,IAAI,CAAG,GAAI,CAAAtB,oBAAoB,CAAC,CAAC,CACvC,MAAO,MAAM,CAAAI,SAAS,CAAGkB,IAAI,CAAClB,SAAS,CACvC,cAAe,CAAAkB,IAAI,CAACP,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}