{"ast":null,"code":"import _initializerDefineProperty from \"/Users/qzheng/Documents/webroot/annotation_tools/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/qzheng/Documents/webroot/annotation_tools/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/qzheng/Documents/webroot/annotation_tools/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\nvar _class, _descriptor, _descriptor2;\nimport { observable, computed, makeObservable } from 'mobx';\nimport UndoStore from './UndoStore';\nimport { ReviewResult } from '../types';\nimport { TOOL_MODE, isReviewEditable, isRework } from '../../../utils/tool-mode';\n\n/**\n * reviews stores\n */\nlet ReviewsStore = (_class = class ReviewsStore {\n  constructor() {\n    /**\n     * current tool mode\n     */\n    this.toolMode = TOOL_MODE.LABELING;\n    /**\n     * issue types\n     */\n    this.issueTypes = [];\n    /**\n     * all reviews\n     */\n    this.reviews = [];\n    /**\n     * frame instance review mapping\n     */\n    _initializerDefineProperty(this, \"frameReviewsMap\", _descriptor, this);\n    /**\n     * editing instance id\n     */\n    _initializerDefineProperty(this, \"currentInstanceId\", _descriptor2, this);\n    makeObservable(this);\n  }\n\n  /**\n   * is review enabled\n   * @returns\n   */\n  get isEnabled() {\n    return isReviewEditable(this.toolMode) || isRework(this.toolMode);\n  }\n\n  /**\n   * is review readonly\n   * @returns\n   */\n  get isReadonly() {\n    return isRework(this.toolMode);\n  }\n\n  /**\n   * is review editable\n   * @returns\n   */\n  get isEditable() {\n    return isReviewEditable(this.toolMode);\n  }\n\n  /**\n   * review result types\n   */\n  get reviewResultTypes() {\n    return this.toolMode === TOOL_MODE.AUDIT ? [ReviewResult.APPROVE, ReviewResult.REJECT, ReviewResult.SUSPEND] : [ReviewResult.APPROVE, ReviewResult.REJECT];\n  }\n\n  /**\n   * init tool mode\n   * @param toolMode\n   */\n  init(toolMode, issueTypes = '') {\n    this.toolMode = toolMode;\n    this.issueTypes = issueTypes.split(',').map(i => i.trim()).filter(i => !!i);\n  }\n\n  /**\n   * set initial data\n   * @param reviews\n   */\n  setInitialData(reviews) {\n    if (this.isEnabled && reviews && Array.isArray(reviews)) {\n      this.reviews = [];\n      const frameReviewsMap = {};\n      reviews.forEach(({\n        instanceId,\n        frameIndex,\n        result,\n        type,\n        comment\n      }) => {\n        if (instanceId !== undefined && frameIndex !== undefined && result !== undefined) {\n          this.reviews.push({\n            instanceId,\n            frameIndex,\n            result,\n            type,\n            comment\n          });\n        }\n        if (!frameReviewsMap[frameIndex]) {\n          frameReviewsMap[frameIndex] = {};\n        }\n        frameReviewsMap[frameIndex][instanceId] = result;\n      });\n      this.frameReviewsMap = frameReviewsMap;\n    }\n  }\n\n  /**\n   * set editing instance id\n   * @param instanceId\n   */\n  setInstance(instanceId = '') {\n    this.currentInstanceId = instanceId;\n  }\n\n  /**\n   * get reviews for save\n   * @returns\n   */\n  getReviewsForSave() {\n    return this.reviews.map(review => ({\n      ...review\n    }));\n  }\n\n  /**\n   * get review instance\n   * @param frameIndex\n   * @param instanceId\n   */\n  getReview(frameIndex, instanceId) {\n    return this.reviews.find(i => i.instanceId === instanceId && i.frameIndex === frameIndex);\n  }\n\n  /**\n   * get review result\n   * @param frameIndex\n   * @param instanceId\n   * @returns\n   */\n  getReviewResult(frameIndex, instanceId) {\n    return (this.frameReviewsMap[frameIndex] || {})[instanceId];\n  }\n\n  /**\n   * set review\n   * @param frameIndex\n   * @param instanceId\n   * @param results\n   */\n  setReview(frameIndex, instanceId, results) {\n    if (!this.frameReviewsMap[frameIndex]) {\n      this.frameReviewsMap[frameIndex] = {};\n    }\n    this.frameReviewsMap[frameIndex][instanceId] = results.result;\n    const storeId = UndoStore.preserve({\n      reviews: this.getReviewsForSave()\n    });\n    const index = this.reviews.findIndex(i => i.instanceId === instanceId && i.frameIndex === frameIndex);\n    if (index >= 0) {\n      this.reviews[index].result = results.result;\n      this.reviews[index].type = results.type;\n      this.reviews[index].comment = results.comment;\n    } else {\n      this.reviews.push({\n        instanceId,\n        frameIndex,\n        ...results\n      });\n    }\n    UndoStore.save(storeId, {\n      reviews: this.getReviewsForSave()\n    });\n  }\n\n  /**\n   * delete review\n   * @param instanceId\n   * @param frameIndex\n   */\n  deleteReviewByInstance(instanceId, frameIndex) {\n    if (this.isEditable) {\n      const index = this.reviews.findIndex(i => i.instanceId === instanceId && i.frameIndex === frameIndex);\n      if (index >= 0) {\n        this.reviews.splice(index, 1);\n        delete this.frameReviewsMap[frameIndex][instanceId];\n      }\n    }\n  }\n}, _descriptor = _applyDecoratedDescriptor(_class.prototype, \"frameReviewsMap\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return {};\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"currentInstanceId\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"isEnabled\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"isEnabled\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"isReadonly\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"isReadonly\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"isEditable\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"isEditable\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"reviewResultTypes\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"reviewResultTypes\"), _class.prototype), _class);\nexport default new ReviewsStore();","map":{"version":3,"names":["observable","computed","makeObservable","UndoStore","ReviewResult","TOOL_MODE","isReviewEditable","isRework","ReviewsStore","_class","constructor","toolMode","LABELING","issueTypes","reviews","_initializerDefineProperty","_descriptor","_descriptor2","isEnabled","isReadonly","isEditable","reviewResultTypes","AUDIT","APPROVE","REJECT","SUSPEND","init","split","map","i","trim","filter","setInitialData","Array","isArray","frameReviewsMap","forEach","instanceId","frameIndex","result","type","comment","undefined","push","setInstance","currentInstanceId","getReviewsForSave","review","getReview","find","getReviewResult","setReview","results","storeId","preserve","index","findIndex","save","deleteReviewByInstance","splice","_applyDecoratedDescriptor","prototype","configurable","enumerable","writable","initializer","Object","getOwnPropertyDescriptor"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking/store/ReviewsStore.ts"],"sourcesContent":["import { observable, computed, makeObservable } from 'mobx';\nimport UndoStore from './UndoStore';\nimport { Review, ReviewResult } from '../types';\nimport { TOOL_MODE, isReviewEditable, isRework } from '../../../utils/tool-mode';\n\n/**\n * reviews stores\n */\nclass ReviewsStore {\n  /**\n   * current tool mode\n   */\n  toolMode: TOOL_MODE = TOOL_MODE.LABELING;\n\n  /**\n   * issue types\n   */\n  issueTypes: string[] = [];\n\n  /**\n   * all reviews\n   */\n  reviews: Review[] = [];\n\n  /**\n   * frame instance review mapping\n   */\n  @observable frameReviewsMap: {\n    [frameIndex: number]: {\n      [instanceId: string]: ReviewResult;\n    }\n  } = {};\n\n  /**\n   * editing instance id\n   */\n  @observable currentInstanceId = '';\n\n  constructor() {\n    makeObservable(this);\n  }\n\n  /**\n   * is review enabled\n   * @returns\n   */\n  @computed get isEnabled() {\n    return isReviewEditable(this.toolMode) || isRework(this.toolMode);\n  }\n\n  /**\n   * is review readonly\n   * @returns\n   */\n  @computed get isReadonly() {\n    return isRework(this.toolMode);\n  }\n\n  /**\n   * is review editable\n   * @returns\n   */\n  @computed get isEditable() {\n    return isReviewEditable(this.toolMode);\n  }\n\n  /**\n   * review result types\n   */\n  @computed get reviewResultTypes() {\n    return this.toolMode === TOOL_MODE.AUDIT ? [\n      ReviewResult.APPROVE,\n      ReviewResult.REJECT,\n      ReviewResult.SUSPEND,\n    ] : [\n      ReviewResult.APPROVE,\n      ReviewResult.REJECT,\n    ];\n  }\n\n  /**\n   * init tool mode\n   * @param toolMode\n   */\n  init(toolMode: TOOL_MODE, issueTypes = '') {\n    this.toolMode = toolMode;\n    this.issueTypes = issueTypes.split(',').map((i) => i.trim()).filter((i) => !!i);\n  }\n\n  /**\n   * set initial data\n   * @param reviews\n   */\n  setInitialData(reviews: any) {\n    if (this.isEnabled && reviews && Array.isArray(reviews)) {\n      this.reviews = [];\n      const frameReviewsMap: {[frameIndex: number]: {[instanceId: string]: ReviewResult}} = {};\n      reviews.forEach(({ instanceId, frameIndex, result, type, comment }: any) => {\n        if (instanceId !== undefined && frameIndex !== undefined && result !== undefined) {\n          this.reviews.push({ instanceId, frameIndex, result, type, comment });\n        }\n        if (!frameReviewsMap[frameIndex]) {\n          frameReviewsMap[frameIndex] = {};\n        }\n        frameReviewsMap[frameIndex][instanceId] = result;\n      });\n      this.frameReviewsMap = frameReviewsMap;\n    }\n  }\n\n  /**\n   * set editing instance id\n   * @param instanceId\n   */\n  setInstance(instanceId = '') {\n    this.currentInstanceId = instanceId;\n  }\n\n  /**\n   * get reviews for save\n   * @returns\n   */\n  getReviewsForSave() {\n    return this.reviews.map((review) => ({ ...review }));\n  }\n\n  /**\n   * get review instance\n   * @param frameIndex\n   * @param instanceId\n   */\n  getReview(frameIndex: number, instanceId: string) {\n    return this.reviews.find((i) => i.instanceId === instanceId && i.frameIndex === frameIndex);\n  }\n\n  /**\n   * get review result\n   * @param frameIndex\n   * @param instanceId\n   * @returns\n   */\n  getReviewResult(frameIndex: number, instanceId: string) {\n    return (this.frameReviewsMap[frameIndex] || {})[instanceId];\n  }\n\n  /**\n   * set review\n   * @param frameIndex\n   * @param instanceId\n   * @param results\n   */\n  setReview(frameIndex: number, instanceId: string, results: { result: ReviewResult; type?: string[]; comment?: string }) {\n    if (!this.frameReviewsMap[frameIndex]) {\n      this.frameReviewsMap[frameIndex] = {};\n    }\n    this.frameReviewsMap[frameIndex][instanceId] = results.result;\n\n    const storeId = UndoStore.preserve({\n      reviews: this.getReviewsForSave(),\n    });\n    const index = this.reviews.findIndex((i) => i.instanceId === instanceId && i.frameIndex === frameIndex);\n    if (index >= 0) {\n      this.reviews[index].result = results.result;\n      this.reviews[index].type = results.type;\n      this.reviews[index].comment = results.comment;\n    } else {\n      this.reviews.push({\n        instanceId,\n        frameIndex,\n        ...results,\n      });\n    }\n    UndoStore.save(storeId, {\n      reviews: this.getReviewsForSave(),\n    });\n  }\n\n  /**\n   * delete review\n   * @param instanceId\n   * @param frameIndex\n   */\n  deleteReviewByInstance(instanceId: string, frameIndex: number) {\n    if (this.isEditable) {\n      const index = this.reviews.findIndex((i) => i.instanceId === instanceId && i.frameIndex === frameIndex);\n      if (index >= 0) {\n        this.reviews.splice(index, 1);\n        delete this.frameReviewsMap[frameIndex][instanceId];\n      }\n    }\n  }\n}\n\nexport default new ReviewsStore();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}