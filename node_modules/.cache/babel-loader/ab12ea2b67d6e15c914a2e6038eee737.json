{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n/*:: import type {CellMeasureCache} from './types';*/\nexport var DEFAULT_HEIGHT = 30;\nexport var DEFAULT_WIDTH = 100;\n\n// Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n/*:: type KeyMapper = (rowIndex: number, columnIndex: number) => any;*/\n/*:: type CellMeasurerCacheParams = {\n  defaultHeight?: number,\n  defaultWidth?: number,\n  fixedHeight?: boolean,\n  fixedWidth?: boolean,\n  minHeight?: number,\n  minWidth?: number,\n  keyMapper?: KeyMapper,\n};*/\n/*:: type Cache = {\n  [key: any]: number,\n};*/\n/*:: type IndexParam = {\n  index: number,\n};*/\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCache = /*#__PURE__*/function () {\n  function CellMeasurerCache() {\n    var _this = this;\n    var params /*: CellMeasurerCacheParams*/ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, CellMeasurerCache);\n    _defineProperty(this, \"_cellHeightCache\", {});\n    _defineProperty(this, \"_cellWidthCache\", {});\n    _defineProperty(this, \"_columnWidthCache\", {});\n    _defineProperty(this, \"_rowHeightCache\", {});\n    _defineProperty(this, \"_defaultHeight\", void 0);\n    _defineProperty(this, \"_defaultWidth\", void 0);\n    _defineProperty(this, \"_minHeight\", void 0);\n    _defineProperty(this, \"_minWidth\", void 0);\n    _defineProperty(this, \"_keyMapper\", void 0);\n    _defineProperty(this, \"_hasFixedHeight\", void 0);\n    _defineProperty(this, \"_hasFixedWidth\", void 0);\n    _defineProperty(this, \"_columnCount\", 0);\n    _defineProperty(this, \"_rowCount\", 0);\n    _defineProperty(this, \"columnWidth\", function (_ref /*:: */) {\n      var index = _ref /*:: */.index;\n      var key = _this._keyMapper(0, index);\n      return _this._columnWidthCache[key] !== undefined ? _this._columnWidthCache[key] : _this._defaultWidth;\n    });\n    _defineProperty(this, \"rowHeight\", function (_ref2 /*:: */) {\n      var index = _ref2 /*:: */.index;\n      var key = _this._keyMapper(index, 0);\n      return _this._rowHeightCache[key] !== undefined ? _this._rowHeightCache[key] : _this._defaultHeight;\n    });\n    var defaultHeight = params.defaultHeight,\n      defaultWidth = params.defaultWidth,\n      fixedHeight = params.fixedHeight,\n      fixedWidth = params.fixedWidth,\n      keyMapper = params.keyMapper,\n      minHeight = params.minHeight,\n      minWidth = params.minWidth;\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n  return _createClass(CellMeasurerCache, [{\n    key: \"clear\",\n    value: function clear(rowIndex /*: number*/) {\n      var columnIndex /*: number*/ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var key = this._keyMapper(rowIndex, columnIndex);\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() /*: number*/{\n      return this._defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() /*: number*/{\n      return this._defaultWidth;\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() /*: boolean*/{\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() /*: boolean*/{\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex /*: number*/) /*: number*/{\n      var columnIndex /*: number*/ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n        return this._cellHeightCache[_key] !== undefined ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex /*: number*/) /*: number*/{\n      var columnIndex /*: number*/ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n        return this._cellWidthCache[_key2] !== undefined ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex /*: number*/) /*: boolean*/{\n      var columnIndex /*: number*/ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var key = this._keyMapper(rowIndex, columnIndex);\n      return this._cellHeightCache[key] !== undefined;\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex /*: number*/, columnIndex /*: number*/, width /*: number*/, height /*: number*/) /*: void*/{\n      var key = this._keyMapper(rowIndex, columnIndex);\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      }\n\n      // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"_updateCachedColumnAndRowSizes\",\n    value: function _updateCachedColumnAndRowSizes(rowIndex /*: number*/, columnIndex /*: number*/) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n        var columnKey = this._keyMapper(0, columnIndex);\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n        var rowKey = this._keyMapper(rowIndex, 0);\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }]);\n}();\nexport { CellMeasurerCache as default };\nfunction defaultKeyMapper(rowIndex /*: number*/, columnIndex /*: number*/) {\n  return \"\".concat(rowIndex, \"-\").concat(columnIndex);\n}","map":{"version":3,"names":["_classCallCheck","_createClass","_defineProperty","DEFAULT_HEIGHT","DEFAULT_WIDTH","CellMeasurerCache","_this","params","arguments","length","undefined","_ref","index","key","_keyMapper","_columnWidthCache","_defaultWidth","_ref2","_rowHeightCache","_defaultHeight","defaultHeight","defaultWidth","fixedHeight","fixedWidth","keyMapper","minHeight","minWidth","_hasFixedHeight","_hasFixedWidth","_minHeight","_minWidth","defaultKeyMapper","Math","max","process","env","NODE_ENV","console","warn","value","clear","rowIndex","columnIndex","_cellHeightCache","_cellWidthCache","_updateCachedColumnAndRowSizes","clearAll","_rowCount","_columnCount","get","hasFixedHeight","hasFixedWidth","getHeight","_key","getWidth","_key2","has","set","width","height","columnWidth","i","columnKey","rowHeight","_i","rowKey","default","concat"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurerCache.js"],"sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n/*:: import type {CellMeasureCache} from './types';*/\nexport var DEFAULT_HEIGHT = 30;\nexport var DEFAULT_WIDTH = 100;\n\n// Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n/*:: type KeyMapper = (rowIndex: number, columnIndex: number) => any;*/\n/*:: type CellMeasurerCacheParams = {\n  defaultHeight?: number,\n  defaultWidth?: number,\n  fixedHeight?: boolean,\n  fixedWidth?: boolean,\n  minHeight?: number,\n  minWidth?: number,\n  keyMapper?: KeyMapper,\n};*/\n/*:: type Cache = {\n  [key: any]: number,\n};*/\n/*:: type IndexParam = {\n  index: number,\n};*/\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCache = /*#__PURE__*/function () {\n  function CellMeasurerCache() {\n    var _this = this;\n    var params /*: CellMeasurerCacheParams*/ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, CellMeasurerCache);\n    _defineProperty(this, \"_cellHeightCache\", {});\n    _defineProperty(this, \"_cellWidthCache\", {});\n    _defineProperty(this, \"_columnWidthCache\", {});\n    _defineProperty(this, \"_rowHeightCache\", {});\n    _defineProperty(this, \"_defaultHeight\", void 0);\n    _defineProperty(this, \"_defaultWidth\", void 0);\n    _defineProperty(this, \"_minHeight\", void 0);\n    _defineProperty(this, \"_minWidth\", void 0);\n    _defineProperty(this, \"_keyMapper\", void 0);\n    _defineProperty(this, \"_hasFixedHeight\", void 0);\n    _defineProperty(this, \"_hasFixedWidth\", void 0);\n    _defineProperty(this, \"_columnCount\", 0);\n    _defineProperty(this, \"_rowCount\", 0);\n    _defineProperty(this, \"columnWidth\", function (_ref /*:: */) {\n      var index = _ref /*:: */.index;\n      var key = _this._keyMapper(0, index);\n      return _this._columnWidthCache[key] !== undefined ? _this._columnWidthCache[key] : _this._defaultWidth;\n    });\n    _defineProperty(this, \"rowHeight\", function (_ref2 /*:: */) {\n      var index = _ref2 /*:: */.index;\n      var key = _this._keyMapper(index, 0);\n      return _this._rowHeightCache[key] !== undefined ? _this._rowHeightCache[key] : _this._defaultHeight;\n    });\n    var defaultHeight = params.defaultHeight,\n      defaultWidth = params.defaultWidth,\n      fixedHeight = params.fixedHeight,\n      fixedWidth = params.fixedWidth,\n      keyMapper = params.keyMapper,\n      minHeight = params.minHeight,\n      minWidth = params.minWidth;\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n  return _createClass(CellMeasurerCache, [{\n    key: \"clear\",\n    value: function clear(rowIndex /*: number*/) {\n      var columnIndex /*: number*/ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var key = this._keyMapper(rowIndex, columnIndex);\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() /*: number*/{\n      return this._defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() /*: number*/{\n      return this._defaultWidth;\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() /*: boolean*/{\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() /*: boolean*/{\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex /*: number*/) /*: number*/{\n      var columnIndex /*: number*/ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n        return this._cellHeightCache[_key] !== undefined ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex /*: number*/) /*: number*/{\n      var columnIndex /*: number*/ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n        return this._cellWidthCache[_key2] !== undefined ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex /*: number*/) /*: boolean*/{\n      var columnIndex /*: number*/ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var key = this._keyMapper(rowIndex, columnIndex);\n      return this._cellHeightCache[key] !== undefined;\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex /*: number*/, columnIndex /*: number*/, width /*: number*/, height /*: number*/) /*: void*/{\n      var key = this._keyMapper(rowIndex, columnIndex);\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      }\n\n      // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"_updateCachedColumnAndRowSizes\",\n    value: function _updateCachedColumnAndRowSizes(rowIndex /*: number*/, columnIndex /*: number*/) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n        var columnKey = this._keyMapper(0, columnIndex);\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n        var rowKey = this._keyMapper(rowIndex, 0);\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }]);\n}();\nexport { CellMeasurerCache as default };\nfunction defaultKeyMapper(rowIndex /*: number*/, columnIndex /*: number*/) {\n  return \"\".concat(rowIndex, \"-\").concat(columnIndex);\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}