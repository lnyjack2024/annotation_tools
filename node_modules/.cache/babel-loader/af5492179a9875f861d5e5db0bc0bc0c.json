{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking2/components/frames/FrameControl.tsx\";\nimport React from 'react';\nimport { makeObservable, observable, action, reaction } from 'mobx';\nimport { observer } from 'mobx-react';\nimport cx from 'classnames';\nimport hexToRgba from 'hex-to-rgba';\nimport { Slider } from 'antd';\nimport FrameActions from './FrameActions';\nimport ItemLabel from './ItemLabel';\nimport FramesRenderer, { EventAction } from '../../../../libs/FramesRenderer';\nimport { Minus, Plus, Up, SortAsc } from '../../../common/icons';\nimport store from '../../store/RootStore';\nimport i18n from '../../locales';\nimport { ReviewResult } from '../../types';\nimport './FrameControl.scss';\nconst itemKeySeparator = '|S|';\nconst actionsContainerHeight = 48;\nfunction getRGBAColor(category, alpha = 0.2) {\n  const {\n    displayColor\n  } = store.ontology.getCategory(category) || {};\n  if (displayColor) {\n    return hexToRgba(displayColor, alpha);\n  }\n  return '#5C5F6B';\n}\nfunction getFrameColor(instanceItem, camera) {\n  const frameColor = {};\n  const cameraData = instanceItem.cameras[camera];\n  if (cameraData) {\n    Object.values(cameraData.frames).forEach(({\n      frameIndex\n    }) => {\n      const result = store.review.getReviewForInstanceItem(instanceItem, camera, frameIndex);\n      if (result) {\n        if (result === ReviewResult.REJECT) {\n          frameColor[frameIndex] = '#9C4434';\n        } else if (!store.isRework) {\n          if (result === ReviewResult.APPROVE) {\n            frameColor[frameIndex] = '#3E6F45';\n          } else if (result === ReviewResult.SUSPEND) {\n            frameColor[frameIndex] = '#A28900';\n          }\n        }\n      }\n    });\n  }\n  return frameColor;\n}\n;\nclass FrameControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.reactionDisposers = [];\n    this.framesRenderer = null;\n    this.framesContainer = React.createRef();\n    this.itemsContainer = React.createRef();\n    this.framesCollapsed = true;\n    this.framesHeight = 56;\n    this.visibleFramesIndex = 0;\n    this.visibleFramesIndexArr = [];\n    this.itemKeys = [];\n    this.updateHeight = height => {\n      this.framesHeight = height;\n      this.props.onHeightChange(height + actionsContainerHeight);\n    };\n    this.updateVisibleFrames = (currentIndex, indexArr) => {\n      this.visibleFramesIndex = currentIndex;\n      if (indexArr) {\n        this.visibleFramesIndexArr = indexArr;\n      }\n    };\n    this.updateCurrentFrame = (frameIndex, itemIndex) => {\n      const itemKey = this.itemKeys[itemIndex];\n      if (itemKey) {\n        const [instanceId, instanceItemId, camera] = itemKey.split(itemKeySeparator);\n        const instance = store.instance.getInstanceById(instanceId);\n        if (instance) {\n          const item = instance.items[instanceItemId];\n          if (item) {\n            if (camera !== store.frame.currentCamera) {\n              store.frame.setCamera(camera);\n            }\n            store.instance.selectInstanceItem(item);\n          } else {\n            const isSingle = instance.isSingle && store.frame.isSingleCamera;\n            if (!isSingle) {\n              store.instance.selectInstanceItem(null);\n            }\n            store.instance.selectInstance(instance);\n          }\n        }\n      }\n      store.frame.setFrame(frameIndex);\n    };\n    this.updateFrameCountIndex = v => {\n      this.visibleFramesIndex = Math.min(Math.max(v, this.visibleFramesIndexArr[0]), this.visibleFramesIndexArr[this.visibleFramesIndexArr.length - 1]);\n      if (this.framesRenderer) {\n        this.framesRenderer.currentRangeIndex = this.visibleFramesIndex;\n      }\n    };\n    this.updateItemsScroll = top => {\n      if (this.itemsContainer.current) {\n        this.itemsContainer.current.scroll({\n          top\n        });\n      }\n    };\n    this.onItemsScroll = e => {\n      if (this.framesRenderer) {\n        this.framesRenderer.itemsOffset = e.target.scrollTop;\n      }\n    };\n    this.toggleCollapse = () => {\n      this.framesCollapsed = !this.framesCollapsed;\n      // update renderer\n      if (this.framesRenderer) {\n        this.framesRenderer.scrollable = !this.framesCollapsed;\n        this.framesRenderer.items = this.getItems();\n      }\n    };\n    makeObservable(this, {\n      framesCollapsed: observable,\n      framesHeight: observable,\n      visibleFramesIndex: observable,\n      visibleFramesIndexArr: observable,\n      itemKeys: observable,\n      getItems: action,\n      updateHeight: action,\n      updateVisibleFrames: action,\n      updateFrameCountIndex: action,\n      toggleCollapse: action\n    });\n\n    // when current frame changes\n    this.reactionDisposers.push(reaction(() => store.frame.currentFrame, () => {\n      if (this.framesRenderer) {\n        this.framesRenderer.currentFrame = store.frame.currentFrame;\n      }\n    }));\n\n    // when invalid frames changes\n    this.reactionDisposers.push(reaction(() => store.frame.invalidFrames, () => {\n      if (this.framesRenderer) {\n        this.framesRenderer.invalidFrames = store.frame.invalidFrames;\n      }\n    }));\n\n    // when instance changes\n    this.reactionDisposers.push(reaction(() => [store.instance.selectedInstanceItems, store.instance.selectedInstances], () => {\n      if (this.framesRenderer) {\n        this.framesRenderer.items = this.getItems();\n      }\n      // if (store.instance.selectedInstanceItems.length > 0) {\n      //   this.scrollTo(`frame-item-instance-item-${store.instance.selectedInstanceItems[0].id}`);\n      // } else if (store.instance.selectedInstances.length > 0) {\n      //   this.scrollTo(`frame-item-instance-${store.instance.selectedInstances[0].id}`);\n      // }\n    }));\n\n    // when action happens\n    this.reactionDisposers.push(reaction(() => [store.undo.pointer, store.undo.lastStoreId], () => {\n      if (this.framesRenderer) {\n        this.framesRenderer.items = this.getItems();\n      }\n    }));\n  }\n  componentDidMount() {\n    if (this.framesContainer.current) {\n      this.framesRenderer = new FramesRenderer(this.framesContainer.current, store.frame.frameCount, {\n        fixHeight: true\n      });\n      this.framesRenderer.on(EventAction.HEIGHT_CHANGE, this.updateHeight);\n      this.framesRenderer.on(EventAction.VISIBLE_FRAMES_UPDATE, this.updateVisibleFrames);\n      this.framesRenderer.on(EventAction.CURRENT_FRAME_CHANGE, this.updateCurrentFrame);\n      this.framesRenderer.on(EventAction.ITEMS_OFFSET_CHANGE, this.updateItemsScroll);\n      this.framesRenderer.items = this.getItems();\n      this.framesRenderer.invalidFrames = store.frame.invalidFrames;\n    }\n  }\n  componentDidUpdate() {\n    if (!this.framesCollapsed) {\n      // scroll after dom updates\n      if (store.instance.selectedInstanceItems.length > 0) {\n        this.scrollTo(`frame-item-instance-item-${store.instance.selectedInstanceItems[0].id}`);\n      } else if (store.instance.selectedInstances.length > 0) {\n        this.scrollTo(`frame-item-instance-${store.instance.selectedInstances[0].id}`);\n      }\n    }\n  }\n  componentWillUnmount() {\n    if (this.framesRenderer) {\n      this.framesRenderer.removeEventListeners();\n      this.framesRenderer.off(EventAction.HEIGHT_CHANGE, this.updateHeight);\n      this.framesRenderer.off(EventAction.VISIBLE_FRAMES_UPDATE, this.updateVisibleFrames);\n      this.framesRenderer.off(EventAction.CURRENT_FRAME_CHANGE, this.updateCurrentFrame);\n      this.framesRenderer.off(EventAction.ITEMS_OFFSET_CHANGE, this.updateItemsScroll);\n    }\n    this.reactionDisposers.forEach(disposer => disposer());\n  }\n  getItems() {\n    const items = {};\n    const {\n      selectedInstances,\n      selectedInstanceItems,\n      allInstances\n    } = store.instance;\n    const {\n      currentCamera,\n      isSingleCamera\n    } = store.frame;\n    const appendSelectedInstance = instance => {\n      const isSingle = instance.isSingle && isSingleCamera;\n      const color = getRGBAColor(instance.category);\n      const filteredSelectedInstanceItems = selectedInstanceItems.filter(item => item.instance === instance);\n      // add instance\n      if (!isSingle) {\n        items[instance.id] = {\n          frameStatus: {},\n          color,\n          selected: filteredSelectedInstanceItems.length <= 0\n        };\n        const {\n          children\n        } = instance.categoryRef;\n        const sortedItems = Object.values(instance.items).sort((a, b) => {\n          const aIndex = children.findIndex(c => c.name === a.name);\n          const bIndex = children.findIndex(c => c.name === b.name);\n          if (aIndex < bIndex) {\n            return -1;\n          }\n          if (aIndex > bIndex) {\n            return 1;\n          }\n          return a.number - b.number;\n        });\n        sortedItems.forEach(item => {\n          Object.values(item.cameras).forEach(camera => {\n            if (!camera.isEmpty) {\n              const key = [instance.id, item.id, camera.camera].join(itemKeySeparator);\n              items[key] = {\n                frameStatus: camera.frameStatus,\n                frameColor: getFrameColor(item, camera.camera),\n                color: hexToRgba(item.categoryItemRef.displayColor || '#5C5F6B', 0.2),\n                showCards: true,\n                selected: filteredSelectedInstanceItems.indexOf(item) >= 0 && camera.camera === currentCamera\n              };\n            }\n          });\n        });\n      } else {\n        const item = Object.values(instance.items)[0];\n        if (item) {\n          items[instance.id] = {\n            frameStatus: instance.frameStatus,\n            frameColor: getFrameColor(item, currentCamera),\n            color: hexToRgba(item.categoryItemRef.displayColor || '#5C5F6B', 0.2),\n            showCards: true,\n            selected: true\n          };\n        }\n      }\n    };\n    if (this.framesCollapsed) {\n      if (selectedInstances.length > 0) {\n        const selectedInstanceItem = selectedInstanceItems[0];\n        const selectedInstance = selectedInstanceItem ? selectedInstanceItem.instance : selectedInstances[0];\n        if (!selectedInstanceItem) {\n          // only instance selected\n          items[selectedInstance.id] = {\n            frameStatus: selectedInstance.frameStatus,\n            color: getRGBAColor(selectedInstance.category)\n          };\n        } else {\n          // instance item in current frame selected\n          const key = [selectedInstance.id, selectedInstanceItem.id, currentCamera].join(itemKeySeparator);\n          items[key] = {\n            frameStatus: selectedInstanceItem.cameras[currentCamera].frameStatus,\n            frameColor: getFrameColor(selectedInstanceItem, currentCamera),\n            color: hexToRgba(selectedInstanceItem.categoryItemRef.displayColor || '#5C5F6B', 0.2),\n            showCards: true,\n            selected: true\n          };\n        }\n      } else {\n        const frameStatus = Object.values(store.instance.instances).map(i => i.frameStatus).reduce((acc, curr) => ({\n          ...acc,\n          ...curr\n        }), {});\n        items.global = {\n          frameStatus,\n          color: '#5C5F6B',\n          selected: true\n        };\n      }\n    } else {\n      allInstances.forEach(instance => {\n        if (selectedInstances.indexOf(instance) >= 0) {\n          appendSelectedInstance(instance);\n        } else {\n          items[instance.id] = {\n            frameStatus: instance.frameStatus,\n            color: getRGBAColor(instance.category)\n          };\n        }\n      });\n    }\n    this.itemKeys = Object.keys(items);\n    return items;\n  }\n  scrollTo(key) {\n    const doms = document.getElementsByClassName(key);\n    if (doms && doms.length > 0 && this.itemsContainer.current) {\n      const {\n        top: d1Top,\n        bottom: d1Bottom\n      } = doms[0].getBoundingClientRect();\n      const {\n        top: d2Top,\n        bottom: d2Bottom\n      } = doms[doms.length - 1].getBoundingClientRect();\n      const top = Math.min(d1Top, d2Top);\n      const bottom = Math.max(d1Bottom, d2Bottom);\n      const {\n        top: cTop,\n        bottom: cBottom\n      } = this.itemsContainer.current.getBoundingClientRect();\n      if (bottom > cBottom) {\n        this.itemsContainer.current.scrollBy({\n          top: bottom - cBottom\n        });\n      } else if (top < cTop) {\n        this.itemsContainer.current.scrollBy({\n          top: top - cTop\n        });\n      }\n    }\n  }\n  render() {\n    const {\n      instances,\n      selectedInstances,\n      selectedInstanceItems\n    } = store.instance;\n    const isEmpty = Object.values(instances).length <= 0;\n    const selectedInstance = selectedInstanceItems.length > 0 ? selectedInstanceItems[0].instance : selectedInstances[0];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frame-control\",\n      style: {\n        height: this.framesHeight + actionsContainerHeight\n        // transition: 'height 0.15s',\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frame-actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 11\n      }\n    }, this.framesCollapsed && selectedInstance && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"label-dot\",\n      style: {\n        backgroundColor: selectedInstance.categoryRef.displayColor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 17\n      }\n    }), selectedInstance.label)), /*#__PURE__*/React.createElement(FrameActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frame-items-sort\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(SortAsc, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 21\n      }\n    })), i18n.translate('PROGRESS_SORT_LABEL')), /*#__PURE__*/React.createElement(\"div\", Object.assign({\n      className: cx('frame-collapse', {\n        disabled: isEmpty,\n        transform: !this.framesCollapsed\n      })\n    }, !isEmpty && {\n      onClick: this.toggleCollapse\n    }, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Up, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frames\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frame-items-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.itemsContainer,\n      className: \"frame-items\",\n      style: {\n        height: this.framesHeight - 36\n      },\n      onScroll: this.onItemsScroll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 13\n      }\n    }, this.itemKeys.map(itemKey => /*#__PURE__*/React.createElement(ItemLabel, {\n      key: itemKey,\n      itemKey: itemKey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 47\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frame-scaler\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frame-action-icon\",\n      onClick: () => this.updateFrameCountIndex(this.visibleFramesIndex - 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Minus, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        flex: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Slider, {\n      tooltipVisible: false,\n      step: 1,\n      min: this.visibleFramesIndexArr[0],\n      max: this.visibleFramesIndexArr[this.visibleFramesIndexArr.length - 1],\n      value: this.visibleFramesIndex,\n      onChange: this.updateFrameCountIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frame-action-icon\",\n      onClick: () => this.updateFrameCountIndex(this.visibleFramesIndex + 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Plus, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frame-steps\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.framesContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 13\n      }\n    }))));\n  }\n}\nexport default observer(FrameControl);","map":{"version":3,"names":["React","makeObservable","observable","action","reaction","observer","cx","hexToRgba","Slider","FrameActions","ItemLabel","FramesRenderer","EventAction","Minus","Plus","Up","SortAsc","store","i18n","ReviewResult","itemKeySeparator","actionsContainerHeight","getRGBAColor","category","alpha","displayColor","ontology","getCategory","getFrameColor","instanceItem","camera","frameColor","cameraData","cameras","Object","values","frames","forEach","frameIndex","result","review","getReviewForInstanceItem","REJECT","isRework","APPROVE","SUSPEND","FrameControl","Component","constructor","props","reactionDisposers","framesRenderer","framesContainer","createRef","itemsContainer","framesCollapsed","framesHeight","visibleFramesIndex","visibleFramesIndexArr","itemKeys","updateHeight","height","onHeightChange","updateVisibleFrames","currentIndex","indexArr","updateCurrentFrame","itemIndex","itemKey","instanceId","instanceItemId","split","instance","getInstanceById","item","items","frame","currentCamera","setCamera","selectInstanceItem","isSingle","isSingleCamera","selectInstance","setFrame","updateFrameCountIndex","v","Math","min","max","length","currentRangeIndex","updateItemsScroll","top","current","scroll","onItemsScroll","e","itemsOffset","target","scrollTop","toggleCollapse","scrollable","getItems","push","currentFrame","invalidFrames","selectedInstanceItems","selectedInstances","undo","pointer","lastStoreId","componentDidMount","frameCount","fixHeight","on","HEIGHT_CHANGE","VISIBLE_FRAMES_UPDATE","CURRENT_FRAME_CHANGE","ITEMS_OFFSET_CHANGE","componentDidUpdate","scrollTo","id","componentWillUnmount","removeEventListeners","off","disposer","allInstances","appendSelectedInstance","color","filteredSelectedInstanceItems","filter","frameStatus","selected","children","categoryRef","sortedItems","sort","a","b","aIndex","findIndex","c","name","bIndex","number","isEmpty","key","join","categoryItemRef","showCards","indexOf","selectedInstanceItem","selectedInstance","instances","map","i","reduce","acc","curr","global","keys","doms","document","getElementsByClassName","d1Top","bottom","d1Bottom","getBoundingClientRect","d2Top","d2Bottom","cTop","cBottom","scrollBy","render","createElement","className","style","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","label","translate","assign","disabled","transform","onClick","ref","onScroll","flex","tooltipVisible","step","value","onChange"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking2/components/frames/FrameControl.tsx"],"sourcesContent":["import React from 'react';\nimport { makeObservable, observable, action, reaction, IReactionDisposer } from 'mobx';\nimport { observer } from 'mobx-react';\nimport cx from 'classnames';\nimport hexToRgba from 'hex-to-rgba';\nimport { Slider } from 'antd';\nimport FrameActions from './FrameActions';\nimport ItemLabel from './ItemLabel';\nimport FramesRenderer, { FrameItem, EventAction } from '../../../../libs/FramesRenderer';\nimport { Minus, Plus, Up, SortAsc } from '../../../common/icons';\nimport Instance from '../../model/Instance';\nimport InstanceItem from '../../model/InstanceItem';\nimport store from '../../store/RootStore';\nimport i18n from '../../locales';\nimport { ReviewResult } from '../../types';\nimport './FrameControl.scss';\n\nconst itemKeySeparator = '|S|';\nconst actionsContainerHeight = 48;\nfunction getRGBAColor(category: string, alpha = 0.2) {\n  const { displayColor } = store.ontology.getCategory(category) || {};\n  if (displayColor) {\n    return hexToRgba(displayColor, alpha);\n  }\n  return '#5C5F6B';\n}\nfunction getFrameColor(instanceItem: InstanceItem, camera: string) {\n  const frameColor: { [frameIndex: number]: string } = {};\n  const cameraData = instanceItem.cameras[camera];\n  if (cameraData) {\n    Object.values(cameraData.frames).forEach(({ frameIndex }) => {\n      const result = store.review.getReviewForInstanceItem(instanceItem, camera, frameIndex);\n      if (result) {\n        if (result === ReviewResult.REJECT) {\n          frameColor[frameIndex] = '#9C4434';\n        } else if (!store.isRework) {\n          if (result === ReviewResult.APPROVE) {\n            frameColor[frameIndex] = '#3E6F45';\n          } else if (result === ReviewResult.SUSPEND) {\n            frameColor[frameIndex] = '#A28900';\n          }\n        }\n      }\n    });\n  }\n  return frameColor;\n};\n\ninterface FrameControlProps {\n  onHeightChange: (height: number) => void;\n}\n\nclass FrameControl extends React.Component<FrameControlProps> {\n  reactionDisposers: IReactionDisposer[] = [];\n\n  framesRenderer: FramesRenderer | null = null;\n\n  framesContainer = React.createRef<HTMLDivElement>();\n\n  itemsContainer = React.createRef<HTMLDivElement>();\n\n  framesCollapsed = true;\n\n  framesHeight = 56;\n\n  visibleFramesIndex = 0;\n\n  visibleFramesIndexArr: number[] = [];\n\n  itemKeys: string[] = [];\n\n  constructor(props: FrameControlProps) {\n    super(props);\n\n    makeObservable(this, {\n      framesCollapsed: observable,\n      framesHeight: observable,\n      visibleFramesIndex: observable,\n      visibleFramesIndexArr: observable,\n      itemKeys: observable,\n      getItems: action,\n      updateHeight: action,\n      updateVisibleFrames: action,\n      updateFrameCountIndex: action,\n      toggleCollapse: action,\n    });\n\n    // when current frame changes\n    this.reactionDisposers.push(reaction(\n      () => store.frame.currentFrame,\n      () => {\n        if (this.framesRenderer) {\n          this.framesRenderer.currentFrame = store.frame.currentFrame;\n        }\n      },\n    ));\n\n    // when invalid frames changes\n    this.reactionDisposers.push(reaction(\n      () => store.frame.invalidFrames,\n      () => {\n        if (this.framesRenderer) {\n          this.framesRenderer.invalidFrames = store.frame.invalidFrames;\n        }\n      },\n    ));\n\n    // when instance changes\n    this.reactionDisposers.push(reaction(\n      () => [store.instance.selectedInstanceItems, store.instance.selectedInstances],\n      () => {\n        if (this.framesRenderer) {\n          this.framesRenderer.items = this.getItems();\n        }\n        // if (store.instance.selectedInstanceItems.length > 0) {\n        //   this.scrollTo(`frame-item-instance-item-${store.instance.selectedInstanceItems[0].id}`);\n        // } else if (store.instance.selectedInstances.length > 0) {\n        //   this.scrollTo(`frame-item-instance-${store.instance.selectedInstances[0].id}`);\n        // }\n      },\n    ));\n\n    // when action happens\n    this.reactionDisposers.push(reaction(\n      () => [store.undo.pointer, store.undo.lastStoreId],\n      () => {\n        if (this.framesRenderer) {\n          this.framesRenderer.items = this.getItems();\n        }\n      },\n    ));\n  }\n\n  componentDidMount() {\n    if (this.framesContainer.current) {\n      this.framesRenderer = new FramesRenderer(this.framesContainer.current, store.frame.frameCount, { fixHeight: true });\n      this.framesRenderer.on(EventAction.HEIGHT_CHANGE, this.updateHeight);\n      this.framesRenderer.on(EventAction.VISIBLE_FRAMES_UPDATE, this.updateVisibleFrames);\n      this.framesRenderer.on(EventAction.CURRENT_FRAME_CHANGE, this.updateCurrentFrame);\n      this.framesRenderer.on(EventAction.ITEMS_OFFSET_CHANGE, this.updateItemsScroll);\n      this.framesRenderer.items = this.getItems();\n      this.framesRenderer.invalidFrames = store.frame.invalidFrames;\n    }\n  }\n\n  componentDidUpdate() {\n    if (!this.framesCollapsed) {\n      // scroll after dom updates\n      if (store.instance.selectedInstanceItems.length > 0) {\n        this.scrollTo(`frame-item-instance-item-${store.instance.selectedInstanceItems[0].id}`);\n      } else if (store.instance.selectedInstances.length > 0) {\n        this.scrollTo(`frame-item-instance-${store.instance.selectedInstances[0].id}`);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.framesRenderer) {\n      this.framesRenderer.removeEventListeners();\n      this.framesRenderer.off(EventAction.HEIGHT_CHANGE, this.updateHeight);\n      this.framesRenderer.off(EventAction.VISIBLE_FRAMES_UPDATE, this.updateVisibleFrames);\n      this.framesRenderer.off(EventAction.CURRENT_FRAME_CHANGE, this.updateCurrentFrame);\n      this.framesRenderer.off(EventAction.ITEMS_OFFSET_CHANGE, this.updateItemsScroll);\n    }\n    this.reactionDisposers.forEach((disposer) => disposer());\n  }\n\n  getItems() {\n    const items: { [id: string]: FrameItem } = {};\n\n    const { selectedInstances, selectedInstanceItems, allInstances } = store.instance;\n    const { currentCamera, isSingleCamera } = store.frame;\n    const appendSelectedInstance = (instance: Instance) => {\n      const isSingle = instance.isSingle && isSingleCamera;\n      const color = getRGBAColor(instance.category);\n      const filteredSelectedInstanceItems = selectedInstanceItems.filter((item) => item.instance === instance);\n      // add instance\n      if (!isSingle) {\n        items[instance.id] = {\n          frameStatus: {},\n          color,\n          selected: filteredSelectedInstanceItems.length <= 0,\n        };\n        const { children } = instance.categoryRef;\n        const sortedItems = Object.values(instance.items)\n          .sort((a, b) => {\n            const aIndex = children.findIndex((c) => c.name === a.name);\n            const bIndex = children.findIndex((c) => c.name === b.name);\n            if (aIndex < bIndex) {\n              return -1;\n            }\n            if (aIndex > bIndex) {\n              return 1;\n            }\n            return a.number - b.number;\n          });\n        sortedItems.forEach((item) => {\n          Object.values(item.cameras).forEach((camera) => {\n            if (!camera.isEmpty) {\n              const key = [instance.id, item.id, camera.camera].join(itemKeySeparator);\n              items[key] = {\n                frameStatus: camera.frameStatus,\n                frameColor: getFrameColor(item, camera.camera),\n                color: hexToRgba(item.categoryItemRef.displayColor || '#5C5F6B', 0.2),\n                showCards: true,\n                selected: filteredSelectedInstanceItems.indexOf(item) >= 0 && camera.camera === currentCamera,\n              };\n            }\n          });\n        });\n      } else {\n        const item = Object.values(instance.items)[0];\n        if (item) {\n          items[instance.id] = {\n            frameStatus: instance.frameStatus,\n            frameColor: getFrameColor(item, currentCamera),\n            color: hexToRgba(item.categoryItemRef.displayColor || '#5C5F6B', 0.2),\n            showCards: true,\n            selected: true,\n          };\n        }\n      }\n    };\n\n    if (this.framesCollapsed) {\n      if (selectedInstances.length > 0) {\n        const selectedInstanceItem = selectedInstanceItems[0];\n        const selectedInstance = selectedInstanceItem ? selectedInstanceItem.instance : selectedInstances[0];\n        if (!selectedInstanceItem) {\n          // only instance selected\n          items[selectedInstance.id] = {\n            frameStatus: selectedInstance.frameStatus,\n            color: getRGBAColor(selectedInstance.category),\n          };\n        } else {\n          // instance item in current frame selected\n          const key = [selectedInstance.id, selectedInstanceItem.id, currentCamera].join(itemKeySeparator);\n          items[key] = {\n            frameStatus: selectedInstanceItem.cameras[currentCamera].frameStatus,\n            frameColor: getFrameColor(selectedInstanceItem, currentCamera),\n            color: hexToRgba(selectedInstanceItem.categoryItemRef.displayColor || '#5C5F6B', 0.2),\n            showCards: true,\n            selected: true,\n          };\n        }\n      } else {\n        const frameStatus = Object.values(store.instance.instances)\n          .map((i) => i.frameStatus)\n          .reduce((acc, curr) => ({ ...acc, ...curr }), {});\n        items.global = {\n          frameStatus,\n          color: '#5C5F6B',\n          selected: true,\n        };\n      }\n    } else {\n      allInstances.forEach((instance) => {\n        if (selectedInstances.indexOf(instance) >= 0) {\n          appendSelectedInstance(instance);\n        } else {\n          items[instance.id] = {\n            frameStatus: instance.frameStatus,\n            color: getRGBAColor(instance.category),\n          };\n        }\n      });\n    }\n\n    this.itemKeys = Object.keys(items);\n    return items;\n  }\n\n  updateHeight = (height: number) => {\n    this.framesHeight = height;\n    this.props.onHeightChange(height + actionsContainerHeight);\n  };\n\n  updateVisibleFrames = (currentIndex: number, indexArr?: number[]) => {\n    this.visibleFramesIndex = currentIndex;\n    if (indexArr) {\n      this.visibleFramesIndexArr = indexArr;\n    }\n  };\n\n  updateCurrentFrame = (frameIndex: number, itemIndex: number) => {\n    const itemKey = this.itemKeys[itemIndex];\n    if (itemKey) {\n      const [instanceId, instanceItemId, camera] = itemKey.split(itemKeySeparator);\n      const instance = store.instance.getInstanceById(instanceId);\n      if (instance) {\n        const item = instance.items[instanceItemId];\n        if (item) {\n          if (camera !== store.frame.currentCamera) {\n            store.frame.setCamera(camera);\n          }\n          store.instance.selectInstanceItem(item);\n        } else {\n          const isSingle = instance.isSingle && store.frame.isSingleCamera;\n          if (!isSingle) {\n            store.instance.selectInstanceItem(null);\n          }\n          store.instance.selectInstance(instance);\n        }\n      }\n    }\n    store.frame.setFrame(frameIndex);\n  };\n\n  updateFrameCountIndex = (v: number) => {\n    this.visibleFramesIndex = Math.min(\n      Math.max(v, this.visibleFramesIndexArr[0]),\n      this.visibleFramesIndexArr[this.visibleFramesIndexArr.length - 1],\n    );\n    if (this.framesRenderer) {\n      this.framesRenderer.currentRangeIndex = this.visibleFramesIndex;\n    }\n  };\n\n  updateItemsScroll = (top: number) => {\n    if (this.itemsContainer.current) {\n      this.itemsContainer.current.scroll({ top });\n    }\n  };\n\n  onItemsScroll: React.UIEventHandler<HTMLDivElement> = (e) => {\n    if (this.framesRenderer) {\n      this.framesRenderer.itemsOffset = (e.target as HTMLDivElement).scrollTop;\n    }\n  };\n\n  scrollTo(key: string) {\n    const doms = document.getElementsByClassName(key);\n    if (doms && doms.length > 0 && this.itemsContainer.current) {\n      const { top: d1Top, bottom: d1Bottom } = doms[0].getBoundingClientRect();\n      const { top: d2Top, bottom: d2Bottom } = doms[doms.length - 1].getBoundingClientRect();\n      const top = Math.min(d1Top, d2Top);\n      const bottom = Math.max(d1Bottom, d2Bottom);\n      const { top: cTop, bottom: cBottom } = this.itemsContainer.current.getBoundingClientRect();\n      if (bottom > cBottom) {\n        this.itemsContainer.current.scrollBy({ top: bottom - cBottom });\n      } else if (top < cTop) {\n        this.itemsContainer.current.scrollBy({ top: top - cTop });\n      }\n    }\n  }\n\n  toggleCollapse = () => {\n    this.framesCollapsed = !this.framesCollapsed;\n    // update renderer\n    if (this.framesRenderer) {\n      this.framesRenderer.scrollable = !this.framesCollapsed;\n      this.framesRenderer.items = this.getItems();\n    }\n  };\n\n  render() {\n    const { instances, selectedInstances, selectedInstanceItems } = store.instance;\n    const isEmpty = Object.values(instances).length <= 0;\n    const selectedInstance = selectedInstanceItems.length > 0 ? selectedInstanceItems[0].instance : selectedInstances[0];\n    return (\n      <div\n        className=\"frame-control\"\n        style={{\n          height: this.framesHeight + actionsContainerHeight,\n          // transition: 'height 0.15s',\n        }}\n      >\n        <div className=\"frame-actions\">\n          <div>\n            {this.framesCollapsed && selectedInstance && (\n              <div className=\"label\">\n                <div\n                  className=\"label-dot\"\n                  style={{ backgroundColor: selectedInstance.categoryRef.displayColor }}\n                />\n                {selectedInstance.label}\n              </div>\n            )}\n          </div>\n          <FrameActions />\n          <div>\n            <div className=\"frame-items-sort\">\n              <span><SortAsc /></span>\n              {i18n.translate('PROGRESS_SORT_LABEL')}\n            </div>\n            <div\n              className={cx('frame-collapse', {\n                disabled: isEmpty,\n                transform: !this.framesCollapsed,\n              })}\n              {...!isEmpty && {\n                onClick: this.toggleCollapse,\n              }}\n            >\n              <Up />\n            </div>\n          </div>\n        </div>\n        <div className=\"frames\">\n          <div className=\"frame-items-container\">\n            <div\n              ref={this.itemsContainer}\n              className=\"frame-items\"\n              style={{ height: this.framesHeight - 36 }}\n              onScroll={this.onItemsScroll}\n            >\n              {this.itemKeys.map((itemKey) => <ItemLabel key={itemKey} itemKey={itemKey} />)}\n            </div>\n            <div className=\"frame-scaler\">\n              <div\n                className=\"frame-action-icon\"\n                onClick={() => this.updateFrameCountIndex(this.visibleFramesIndex - 1)}\n              >\n                <Minus />\n              </div>\n              <div style={{ flex: 1 }}>\n                <Slider\n                  tooltipVisible={false}\n                  step={1}\n                  min={this.visibleFramesIndexArr[0]}\n                  max={this.visibleFramesIndexArr[this.visibleFramesIndexArr.length - 1]}\n                  value={this.visibleFramesIndex}\n                  onChange={this.updateFrameCountIndex}\n                />\n              </div>\n              <div\n                className=\"frame-action-icon\"\n                onClick={() => this.updateFrameCountIndex(this.visibleFramesIndex + 1)}\n              >\n                <Plus />\n              </div>\n            </div>\n          </div>\n          <div className=\"frame-steps\">\n            <div ref={this.framesContainer} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default observer(FrameControl);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}