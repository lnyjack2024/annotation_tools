{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/common/latex/Formula.tsx\";\nimport React, { useRef } from 'react';\n\n/**\n * load mathjax\n */\nconst loadMathJax = () => new Promise(resolve => {\n  // config\n  window.MathJax = {\n    tex: {\n      inlineMath: [['$', '$'], ['\\\\(', '\\\\)']]\n    },\n    svg: {\n      fontCache: 'global'\n    }\n  };\n  // load\n  import('mathjax/es5/tex-svg-full').then(resolve);\n});\n\n/**\n * get mathjax\n */\nconst getMathJax = async () => {\n  const {\n    MathJax\n  } = window;\n  if (!MathJax || !MathJax.version) {\n    await loadMathJax();\n  }\n  return window.MathJax;\n};\nconst typeset = async selector => {\n  const mathJax = await getMathJax();\n  mathJax.startup.promise = mathJax.startup.promise.then(() => {\n    selector();\n    return mathJax.typesetPromise();\n  }).catch(err => {\n    // eslint-disable-next-line no-console\n    console.error(`Typeset failed: ${err.message}`);\n  });\n  return mathJax.startup.promise;\n};\nconst tex2svg = async selector => {\n  const mathJax = await getMathJax();\n  const output = selector();\n  if (output) {\n    mathJax.tex2svgPromise(output.innerText).then(node => {\n      output.innerHTML = '';\n      output.appendChild(node);\n    }).catch(err => {\n      // eslint-disable-next-line no-console\n      console.error(`Text to svg failed: ${err.message}`);\n    });\n  }\n};\nconst Formula = ({\n  text = '',\n  className,\n  style\n}) => {\n  const ref = useRef(null);\n  React.useEffect(() => {\n    if (ref.current) {\n      ref.current.innerText = text;\n      tex2svg(() => ref.current);\n    }\n  }, [text]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    className: className,\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 10\n    }\n  });\n};\nexport default React.memo(Formula);","map":{"version":3,"names":["React","useRef","loadMathJax","Promise","resolve","window","MathJax","tex","inlineMath","svg","fontCache","then","getMathJax","version","typeset","selector","mathJax","startup","promise","typesetPromise","catch","err","console","error","message","tex2svg","output","tex2svgPromise","innerText","node","innerHTML","appendChild","Formula","text","className","style","ref","useEffect","current","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","memo"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/common/latex/Formula.tsx"],"sourcesContent":["import React, { useRef } from 'react';\n\n/**\n * load mathjax\n */\nconst loadMathJax = () => new Promise((resolve) => {\n  // config\n  (window as any).MathJax = {\n    tex: {\n      inlineMath: [['$', '$'], ['\\\\(', '\\\\)']],\n    },\n    svg: {\n      fontCache: 'global',\n    },\n  };\n  // load\n  import('mathjax/es5/tex-svg-full')\n    .then(resolve);\n});\n\n/**\n * get mathjax\n */\nconst getMathJax = async () => {\n  const { MathJax } = window as any;\n  if (!MathJax || !MathJax.version) {\n    await loadMathJax();\n  }\n  return (window as any).MathJax;\n};\n\nconst typeset = async (selector: () => HTMLElement) => {\n  const mathJax = await getMathJax();\n  mathJax.startup.promise = mathJax.startup.promise\n    .then(() => {\n      selector();\n      return mathJax.typesetPromise();\n    })\n    .catch((err: any) => {\n      // eslint-disable-next-line no-console\n      console.error(`Typeset failed: ${err.message}`);\n    });\n  return mathJax.startup.promise;\n};\n\nconst tex2svg = async (selector: () => HTMLElement) => {\n  const mathJax = await getMathJax();\n  const output = selector();\n  if (output) {\n    mathJax.tex2svgPromise(output.innerText)\n      .then((node: HTMLElement) => {\n        output.innerHTML = '';\n        output.appendChild(node);\n      }).catch((err: any) => {\n        // eslint-disable-next-line no-console\n        console.error(`Text to svg failed: ${err.message}`);\n      });\n  }\n};\n\ninterface FormulaProps {\n  text?: string;\n  className?: string;\n  style?: React.CSSProperties;\n}\n\nconst Formula: React.FC<FormulaProps> = ({ text = '', className, style }) => {\n  const ref = useRef<HTMLDivElement>(null);\n\n  React.useEffect(() => {\n    if (ref.current) {\n      ref.current.innerText = text;\n      tex2svg(() => ref.current!);\n    }\n  }, [text]);\n\n  return <div ref={ref} className={className} style={style} />;\n};\n\nexport default React.memo(Formula);\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;;AAErC;AACA;AACA;AACA,MAAMC,WAAW,GAAGA,CAAA,KAAM,IAAIC,OAAO,CAAEC,OAAO,IAAK;EACjD;EACCC,MAAM,CAASC,OAAO,GAAG;IACxBC,GAAG,EAAE;MACHC,UAAU,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;IACzC,CAAC;IACDC,GAAG,EAAE;MACHC,SAAS,EAAE;IACb;EACF,CAAC;EACD;EACA,MAAM,CAAC,0BAA0B,CAAC,CAC/BC,IAAI,CAACP,OAAO,CAAC;AAClB,CAAC,CAAC;;AAEF;AACA;AACA;AACA,MAAMQ,UAAU,GAAG,MAAAA,CAAA,KAAY;EAC7B,MAAM;IAAEN;EAAQ,CAAC,GAAGD,MAAa;EACjC,IAAI,CAACC,OAAO,IAAI,CAACA,OAAO,CAACO,OAAO,EAAE;IAChC,MAAMX,WAAW,CAAC,CAAC;EACrB;EACA,OAAQG,MAAM,CAASC,OAAO;AAChC,CAAC;AAED,MAAMQ,OAAO,GAAG,MAAOC,QAA2B,IAAK;EACrD,MAAMC,OAAO,GAAG,MAAMJ,UAAU,CAAC,CAAC;EAClCI,OAAO,CAACC,OAAO,CAACC,OAAO,GAAGF,OAAO,CAACC,OAAO,CAACC,OAAO,CAC9CP,IAAI,CAAC,MAAM;IACVI,QAAQ,CAAC,CAAC;IACV,OAAOC,OAAO,CAACG,cAAc,CAAC,CAAC;EACjC,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAQ,IAAK;IACnB;IACAC,OAAO,CAACC,KAAK,CAAC,mBAAmBF,GAAG,CAACG,OAAO,EAAE,CAAC;EACjD,CAAC,CAAC;EACJ,OAAOR,OAAO,CAACC,OAAO,CAACC,OAAO;AAChC,CAAC;AAED,MAAMO,OAAO,GAAG,MAAOV,QAA2B,IAAK;EACrD,MAAMC,OAAO,GAAG,MAAMJ,UAAU,CAAC,CAAC;EAClC,MAAMc,MAAM,GAAGX,QAAQ,CAAC,CAAC;EACzB,IAAIW,MAAM,EAAE;IACVV,OAAO,CAACW,cAAc,CAACD,MAAM,CAACE,SAAS,CAAC,CACrCjB,IAAI,CAAEkB,IAAiB,IAAK;MAC3BH,MAAM,CAACI,SAAS,GAAG,EAAE;MACrBJ,MAAM,CAACK,WAAW,CAACF,IAAI,CAAC;IAC1B,CAAC,CAAC,CAACT,KAAK,CAAEC,GAAQ,IAAK;MACrB;MACAC,OAAO,CAACC,KAAK,CAAC,uBAAuBF,GAAG,CAACG,OAAO,EAAE,CAAC;IACrD,CAAC,CAAC;EACN;AACF,CAAC;AAQD,MAAMQ,OAA+B,GAAGA,CAAC;EAAEC,IAAI,GAAG,EAAE;EAAEC,SAAS;EAAEC;AAAM,CAAC,KAAK;EAC3E,MAAMC,GAAG,GAAGnC,MAAM,CAAiB,IAAI,CAAC;EAExCD,KAAK,CAACqC,SAAS,CAAC,MAAM;IACpB,IAAID,GAAG,CAACE,OAAO,EAAE;MACfF,GAAG,CAACE,OAAO,CAACV,SAAS,GAAGK,IAAI;MAC5BR,OAAO,CAAC,MAAMW,GAAG,CAACE,OAAQ,CAAC;IAC7B;EACF,CAAC,EAAE,CAACL,IAAI,CAAC,CAAC;EAEV,oBAAOjC,KAAA,CAAAuC,aAAA;IAAKH,GAAG,EAAEA,GAAI;IAACF,SAAS,EAAEA,SAAU;IAACC,KAAK,EAAEA,KAAM;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC;AAC9D,CAAC;AAED,eAAe7C,KAAK,CAAC8C,IAAI,CAACd,OAAO,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}