{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPrefix = getPrefix;\nexports.browserPrefixToKey = browserPrefixToKey;\nexports.browserPrefixToStyle = browserPrefixToStyle;\nexports.default = void 0;\nvar prefixes = ['Moz', 'Webkit', 'O', 'ms'];\nfunction getPrefix() /*: string*/\n{\n  var prop\n  /*: string*/ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform';\n  // Checking specifically for 'window.document' is for pseudo-browser server-side\n  // environments that define 'window' as the global context.\n  // E.g. React-rails (see https://github.com/reactjs/react-rails/pull/84)\n  if (typeof window === 'undefined' || typeof window.document === 'undefined') return '';\n  var style = window.document.documentElement.style;\n  if (prop in style) return '';\n  for (var i = 0; i < prefixes.length; i++) {\n    if (browserPrefixToKey(prop, prefixes[i]) in style) return prefixes[i];\n  }\n  return '';\n}\nfunction browserPrefixToKey(prop\n/*: string*/, prefix\n/*: string*/) /*: string*/\n{\n  return prefix ? \"\".concat(prefix).concat(kebabToTitleCase(prop)) : prop;\n}\nfunction browserPrefixToStyle(prop\n/*: string*/, prefix\n/*: string*/) /*: string*/\n{\n  return prefix ? \"-\".concat(prefix.toLowerCase(), \"-\").concat(prop) : prop;\n}\nfunction kebabToTitleCase(str\n/*: string*/) /*: string*/\n{\n  var out = '';\n  var shouldCapitalize = true;\n  for (var i = 0; i < str.length; i++) {\n    if (shouldCapitalize) {\n      out += str[i].toUpperCase();\n      shouldCapitalize = false;\n    } else if (str[i] === '-') {\n      shouldCapitalize = true;\n    } else {\n      out += str[i];\n    }\n  }\n  return out;\n} // Default export is the prefix itself, like 'Moz', 'Webkit', etc\n// Note that you may have to re-test for certain things; for instance, Chrome 50\n// can handle unprefixed `transform`, but not unprefixed `user-select`\n\nvar _default = getPrefix();\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","getPrefix","browserPrefixToKey","browserPrefixToStyle","default","prefixes","prop","arguments","length","undefined","window","document","style","documentElement","i","prefix","concat","kebabToTitleCase","toLowerCase","str","out","shouldCapitalize","toUpperCase","_default"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/node_modules/react-draggable/build/cjs/utils/getPrefix.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPrefix = getPrefix;\nexports.browserPrefixToKey = browserPrefixToKey;\nexports.browserPrefixToStyle = browserPrefixToStyle;\nexports.default = void 0;\nvar prefixes = ['Moz', 'Webkit', 'O', 'ms'];\n\nfunction getPrefix()\n/*: string*/\n{\n  var prop\n  /*: string*/\n  = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform';\n  // Checking specifically for 'window.document' is for pseudo-browser server-side\n  // environments that define 'window' as the global context.\n  // E.g. React-rails (see https://github.com/reactjs/react-rails/pull/84)\n  if (typeof window === 'undefined' || typeof window.document === 'undefined') return '';\n  var style = window.document.documentElement.style;\n  if (prop in style) return '';\n\n  for (var i = 0; i < prefixes.length; i++) {\n    if (browserPrefixToKey(prop, prefixes[i]) in style) return prefixes[i];\n  }\n\n  return '';\n}\n\nfunction browserPrefixToKey(prop\n/*: string*/\n, prefix\n/*: string*/\n)\n/*: string*/\n{\n  return prefix ? \"\".concat(prefix).concat(kebabToTitleCase(prop)) : prop;\n}\n\nfunction browserPrefixToStyle(prop\n/*: string*/\n, prefix\n/*: string*/\n)\n/*: string*/\n{\n  return prefix ? \"-\".concat(prefix.toLowerCase(), \"-\").concat(prop) : prop;\n}\n\nfunction kebabToTitleCase(str\n/*: string*/\n)\n/*: string*/\n{\n  var out = '';\n  var shouldCapitalize = true;\n\n  for (var i = 0; i < str.length; i++) {\n    if (shouldCapitalize) {\n      out += str[i].toUpperCase();\n      shouldCapitalize = false;\n    } else if (str[i] === '-') {\n      shouldCapitalize = true;\n    } else {\n      out += str[i];\n    }\n  }\n\n  return out;\n} // Default export is the prefix itself, like 'Moz', 'Webkit', etc\n// Note that you may have to re-test for certain things; for instance, Chrome 50\n// can handle unprefixed `transform`, but not unprefixed `user-select`\n\n\nvar _default = getPrefix();\n\nexports.default = _default;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,SAAS,GAAGA,SAAS;AAC7BF,OAAO,CAACG,kBAAkB,GAAGA,kBAAkB;AAC/CH,OAAO,CAACI,oBAAoB,GAAGA,oBAAoB;AACnDJ,OAAO,CAACK,OAAO,GAAG,KAAK,CAAC;AACxB,IAAIC,QAAQ,GAAG,CAAC,KAAK,EAAE,QAAQ,EAAE,GAAG,EAAE,IAAI,CAAC;AAE3C,SAASJ,SAASA,CAAA,EAClB;AACA;EACE,IAAIK;EACJ,eACEC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,WAAW;EACjF;EACA;EACA;EACA,IAAI,OAAOG,MAAM,KAAK,WAAW,IAAI,OAAOA,MAAM,CAACC,QAAQ,KAAK,WAAW,EAAE,OAAO,EAAE;EACtF,IAAIC,KAAK,GAAGF,MAAM,CAACC,QAAQ,CAACE,eAAe,CAACD,KAAK;EACjD,IAAIN,IAAI,IAAIM,KAAK,EAAE,OAAO,EAAE;EAE5B,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,QAAQ,CAACG,MAAM,EAAEM,CAAC,EAAE,EAAE;IACxC,IAAIZ,kBAAkB,CAACI,IAAI,EAAED,QAAQ,CAACS,CAAC,CAAC,CAAC,IAAIF,KAAK,EAAE,OAAOP,QAAQ,CAACS,CAAC,CAAC;EACxE;EAEA,OAAO,EAAE;AACX;AAEA,SAASZ,kBAAkBA,CAACI;AAC5B,cACES;AACF,cAEA;AACA;EACE,OAAOA,MAAM,GAAG,EAAE,CAACC,MAAM,CAACD,MAAM,CAAC,CAACC,MAAM,CAACC,gBAAgB,CAACX,IAAI,CAAC,CAAC,GAAGA,IAAI;AACzE;AAEA,SAASH,oBAAoBA,CAACG;AAC9B,cACES;AACF,cAEA;AACA;EACE,OAAOA,MAAM,GAAG,GAAG,CAACC,MAAM,CAACD,MAAM,CAACG,WAAW,CAAC,CAAC,EAAE,GAAG,CAAC,CAACF,MAAM,CAACV,IAAI,CAAC,GAAGA,IAAI;AAC3E;AAEA,SAASW,gBAAgBA,CAACE;AAC1B,cAEA;AACA;EACE,IAAIC,GAAG,GAAG,EAAE;EACZ,IAAIC,gBAAgB,GAAG,IAAI;EAE3B,KAAK,IAAIP,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGK,GAAG,CAACX,MAAM,EAAEM,CAAC,EAAE,EAAE;IACnC,IAAIO,gBAAgB,EAAE;MACpBD,GAAG,IAAID,GAAG,CAACL,CAAC,CAAC,CAACQ,WAAW,CAAC,CAAC;MAC3BD,gBAAgB,GAAG,KAAK;IAC1B,CAAC,MAAM,IAAIF,GAAG,CAACL,CAAC,CAAC,KAAK,GAAG,EAAE;MACzBO,gBAAgB,GAAG,IAAI;IACzB,CAAC,MAAM;MACLD,GAAG,IAAID,GAAG,CAACL,CAAC,CAAC;IACf;EACF;EAEA,OAAOM,GAAG;AACZ,CAAC,CAAC;AACF;AACA;;AAGA,IAAIG,QAAQ,GAAGtB,SAAS,CAAC,CAAC;AAE1BF,OAAO,CAACK,OAAO,GAAGmB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script"}