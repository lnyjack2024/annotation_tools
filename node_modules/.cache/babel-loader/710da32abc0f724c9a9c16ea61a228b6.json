{"ast":null,"code":"import _applyDecoratedDescriptor from \"/Users/qzheng/Documents/webroot/annotation_tools/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nvar _class;\nimport { observable, action, makeObservable, computed } from 'mobx';\nimport { initOntology } from '../utils';\n;\nlet OntologyStore = (_class = class OntologyStore {\n  constructor(rootStore) {\n    this.rootStore = void 0;\n    this.selectedOntologyGroup = '';\n    this.ontology = [];\n    makeObservable(this, {\n      selectedOntologyGroup: observable,\n      ontology: observable,\n      setOntology: action\n    });\n    this.rootStore = rootStore;\n  }\n  get ontologyMap() {\n    const map = {};\n    this.ontology.forEach(item => {\n      map[item.class_name] = {\n        count: 0,\n        children: {}\n      };\n      item.children.forEach(({\n        count,\n        name\n      }) => {\n        map[item.class_name].count += count;\n        map[item.class_name].children[name] = count;\n      });\n    });\n    return map;\n  }\n  getOntologyInfo(ontologyName) {\n    return this.ontology && this.ontology.find(ontology => ontology.class_name === ontologyName);\n  }\n  getGroupData(ontologyName, groupName) {\n    const ontologyItem = this.getOntologyInfo(ontologyName);\n    const groupItem = ontologyItem && ontologyItem.children && ontologyItem.children.find(group => group.name === groupName);\n    return groupItem && {\n      ...groupItem,\n      class_display_name: (ontologyItem === null || ontologyItem === void 0 ? void 0 : ontologyItem.display_name) || (ontologyItem === null || ontologyItem === void 0 ? void 0 : ontologyItem.class_name)\n    };\n  }\n  getCategoryData(ontologyName, groupName, categoryName) {\n    const groupData = this.getGroupData(ontologyName, groupName);\n    return groupData && groupData.categories && groupData.categories.find(v => v.name === categoryName) || undefined;\n  }\n  setOntology(list) {\n    this.ontology = Array.isArray(list) ? initOntology(list) : [];\n  }\n}, _applyDecoratedDescriptor(_class.prototype, \"ontologyMap\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"ontologyMap\"), _class.prototype), _class);\nexport default OntologyStore;","map":{"version":3,"names":["observable","action","makeObservable","computed","initOntology","OntologyStore","_class","constructor","rootStore","selectedOntologyGroup","ontology","setOntology","ontologyMap","map","forEach","item","class_name","count","children","name","getOntologyInfo","ontologyName","find","getGroupData","groupName","ontologyItem","groupItem","group","class_display_name","display_name","getCategoryData","categoryName","groupData","categories","v","undefined","list","Array","isArray","_applyDecoratedDescriptor","prototype","Object","getOwnPropertyDescriptor"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/keypoint/store/OntologyStore.ts"],"sourcesContent":["import { observable, action, makeObservable, computed } from 'mobx';\nimport { initOntology } from '../utils';\nimport { RootStoreType } from './RootStore';\nimport { LandmarkEditType, CategoryItem, Line, FormConfig } from '../types';\n\nexport interface OntologyItem {\n  key?: string;\n  class_name: string;\n  display_name?: string;\n  display_color?: string;\n  description?: string;\n  children: OntologyChild[];\n};\n\nexport interface OntologyChild {\n  key?: string;\n  name: string;\n  display_name?: string;\n  class_display_name?: string;\n  count: number;\n  type: LandmarkEditType;\n  categories?: CategoryItem[] | null;\n  lines?: Line[];\n  reference?: string | null;\n  label_config: FormConfig | null;\n  point_label_config: FormConfig | null;\n}\n\nexport interface InstanceCountMap {\n  count?: number,\n  children: {\n    [groupName: string]: number\n  }\n}\nexport interface OntologyCountMap {\n  [category: string]: InstanceCountMap;\n}\n\nclass OntologyStore {\n  rootStore: RootStoreType;\n\n  selectedOntologyGroup = '';\n\n  ontology: OntologyItem[] = [];\n\n  constructor(rootStore: RootStoreType) {\n    makeObservable(this, {\n      selectedOntologyGroup: observable,\n      ontology: observable,\n      setOntology: action\n    });\n    this.rootStore = rootStore;\n  }\n\n  @computed get ontologyMap() {\n    const map: OntologyCountMap = {};\n    this.ontology.forEach((item) => {\n      map[item.class_name] = {\n        count: 0,\n        children: {}\n      };\n      item.children.forEach(({ count, name }) => {\n        map[item.class_name].count! += count;\n        map[item.class_name].children[name] = count;\n      });\n    });\n    return map;\n  }\n\n  getOntologyInfo(ontologyName: string) {\n    return this.ontology && this.ontology.find((ontology) => ontology.class_name === ontologyName);\n  }\n\n  getGroupData(ontologyName: string, groupName: string) {\n    const ontologyItem = this.getOntologyInfo(ontologyName);\n    const groupItem = ontologyItem && ontologyItem.children && ontologyItem.children.find((group) => group.name === groupName);\n    return groupItem && { ...groupItem, class_display_name: ontologyItem?.display_name || ontologyItem?.class_name };\n  }\n\n  getCategoryData(ontologyName: string, groupName: string, categoryName: string) {\n    const groupData = this.getGroupData(ontologyName, groupName);\n    return (groupData && groupData.categories && groupData.categories.find((v) => v.name === categoryName)) || undefined;\n  }\n\n  setOntology(list: OntologyItem[] | CategoryItem[]) {\n    this.ontology = Array.isArray(list) ? initOntology(list) : [];\n  }\n}\n\nexport default OntologyStore;\n"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,MAAM,EAAEC,cAAc,EAAEC,QAAQ,QAAQ,MAAM;AACnE,SAASC,YAAY,QAAQ,UAAU;AAWtC;AAAC,IA0BIC,aAAa,IAAAC,MAAA,GAAnB,MAAMD,aAAa,CAAC;EAOlBE,WAAWA,CAACC,SAAwB,EAAE;IAAA,KANtCA,SAAS;IAAA,KAETC,qBAAqB,GAAG,EAAE;IAAA,KAE1BC,QAAQ,GAAmB,EAAE;IAG3BR,cAAc,CAAC,IAAI,EAAE;MACnBO,qBAAqB,EAAET,UAAU;MACjCU,QAAQ,EAAEV,UAAU;MACpBW,WAAW,EAAEV;IACf,CAAC,CAAC;IACF,IAAI,CAACO,SAAS,GAAGA,SAAS;EAC5B;EAEA,IAAcI,WAAWA,CAAA,EAAG;IAC1B,MAAMC,GAAqB,GAAG,CAAC,CAAC;IAChC,IAAI,CAACH,QAAQ,CAACI,OAAO,CAAEC,IAAI,IAAK;MAC9BF,GAAG,CAACE,IAAI,CAACC,UAAU,CAAC,GAAG;QACrBC,KAAK,EAAE,CAAC;QACRC,QAAQ,EAAE,CAAC;MACb,CAAC;MACDH,IAAI,CAACG,QAAQ,CAACJ,OAAO,CAAC,CAAC;QAAEG,KAAK;QAAEE;MAAK,CAAC,KAAK;QACzCN,GAAG,CAACE,IAAI,CAACC,UAAU,CAAC,CAACC,KAAK,IAAKA,KAAK;QACpCJ,GAAG,CAACE,IAAI,CAACC,UAAU,CAAC,CAACE,QAAQ,CAACC,IAAI,CAAC,GAAGF,KAAK;MAC7C,CAAC,CAAC;IACJ,CAAC,CAAC;IACF,OAAOJ,GAAG;EACZ;EAEAO,eAAeA,CAACC,YAAoB,EAAE;IACpC,OAAO,IAAI,CAACX,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAACY,IAAI,CAAEZ,QAAQ,IAAKA,QAAQ,CAACM,UAAU,KAAKK,YAAY,CAAC;EAChG;EAEAE,YAAYA,CAACF,YAAoB,EAAEG,SAAiB,EAAE;IACpD,MAAMC,YAAY,GAAG,IAAI,CAACL,eAAe,CAACC,YAAY,CAAC;IACvD,MAAMK,SAAS,GAAGD,YAAY,IAAIA,YAAY,CAACP,QAAQ,IAAIO,YAAY,CAACP,QAAQ,CAACI,IAAI,CAAEK,KAAK,IAAKA,KAAK,CAACR,IAAI,KAAKK,SAAS,CAAC;IAC1H,OAAOE,SAAS,IAAI;MAAE,GAAGA,SAAS;MAAEE,kBAAkB,EAAE,CAAAH,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEI,YAAY,MAAIJ,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAET,UAAU;IAAC,CAAC;EAClH;EAEAc,eAAeA,CAACT,YAAoB,EAAEG,SAAiB,EAAEO,YAAoB,EAAE;IAC7E,MAAMC,SAAS,GAAG,IAAI,CAACT,YAAY,CAACF,YAAY,EAAEG,SAAS,CAAC;IAC5D,OAAQQ,SAAS,IAAIA,SAAS,CAACC,UAAU,IAAID,SAAS,CAACC,UAAU,CAACX,IAAI,CAAEY,CAAC,IAAKA,CAAC,CAACf,IAAI,KAAKY,YAAY,CAAC,IAAKI,SAAS;EACtH;EAEAxB,WAAWA,CAACyB,IAAqC,EAAE;IACjD,IAAI,CAAC1B,QAAQ,GAAG2B,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,GAAGhC,YAAY,CAACgC,IAAI,CAAC,GAAG,EAAE;EAC/D;AACF,CAAC,EAAAG,yBAAA,CAAAjC,MAAA,CAAAkC,SAAA,kBAjCErC,QAAQ,GAAAsC,MAAA,CAAAC,wBAAA,CAAApC,MAAA,CAAAkC,SAAA,kBAAAlC,MAAA,CAAAkC,SAAA,GAAAlC,MAAA;AAmCX,eAAeD,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}