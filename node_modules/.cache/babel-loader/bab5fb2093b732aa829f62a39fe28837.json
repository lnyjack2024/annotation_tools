{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _callSuper(t, o, e) {\n  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));\n}\nfunction _isNativeReflectConstruct() {\n  try {\n    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n  } catch (t) {}\n  return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n    return !!t;\n  })();\n}\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/*:: import type {AnimationTimeoutId} from '../utils/requestAnimationTimeout';*/\n/*:: type Props = {\n  autoHeight: boolean,\n  cellCount: number,\n  cellMeasurerCache: CellMeasurerCache,\n  cellPositioner: Positioner,\n  cellRenderer: CellRenderer,\n  className: ?string,\n  height: number,\n  id: ?string,\n  keyMapper: KeyMapper,\n  onCellsRendered: ?OnCellsRenderedCallback,\n  onScroll: ?OnScrollCallback,\n  overscanByPixels: number,\n  role: string,\n  scrollingResetTimeInterval: number,\n  style: mixed,\n  tabIndex: number,\n  width: number,\n  rowDirection: string,\n  scrollTop?: number,\n};*/\n/*:: type State = {\n  isScrolling: boolean,\n  scrollTop: number,\n};*/\nvar emptyObject = {};\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\nvar Masonry = /*#__PURE__*/function (_React$PureComponent) {\n  function Masonry() {\n    var _this;\n    _classCallCheck(this, Masonry);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, Masonry, [].concat(args));\n    _defineProperty(_this, \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n    _defineProperty(_this, \"_debounceResetIsScrollingId\", void 0);\n    _defineProperty(_this, \"_invalidateOnUpdateStartIndex\", null);\n    _defineProperty(_this, \"_invalidateOnUpdateStopIndex\", null);\n    _defineProperty(_this, \"_positionCache\", new PositionCache());\n    _defineProperty(_this, \"_startIndex\", null);\n    _defineProperty(_this, \"_startIndexMemoized\", null);\n    _defineProperty(_this, \"_stopIndex\", null);\n    _defineProperty(_this, \"_stopIndexMemoized\", null);\n    _defineProperty(_this, \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n    _defineProperty(_this, \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n    _defineProperty(_this, \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop;\n\n      // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop);\n\n      // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n      if (eventScrollTop !== scrollTop) {\n        return;\n      }\n\n      // Prevent pointer events from interrupting a smooth scroll\n      _this._debounceResetIsScrolling();\n\n      // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n    return _this;\n  }\n  _inherits(Masonry, _React$PureComponent);\n  return _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    }\n\n    // HACK This method signature was intended for Grid\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n      this._populatePositionCache(0, stopIndex);\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n      this._invokeOnScrollCallback();\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps /*: Props*/, prevState /*: State*/) {\n      this._checkInvalidateOnUpdate();\n      this._invokeOnScrollCallback();\n      this._invokeOnCellsRenderedCallback();\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$props = this.props,\n        autoHeight = _this$props.autoHeight,\n        cellCount = _this$props.cellCount,\n        cellMeasurerCache = _this$props.cellMeasurerCache,\n        cellRenderer = _this$props.cellRenderer,\n        className = _this$props.className,\n        height = _this$props.height,\n        id = _this$props.id,\n        keyMapper = _this$props.keyMapper,\n        overscanByPixels = _this$props.overscanByPixels,\n        role = _this$props.role,\n        style = _this$props.style,\n        tabIndex = _this$props.tabIndex,\n        width = _this$props.width,\n        rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n        isScrolling = _this$state.isScrolling,\n        scrollTop = _this$state.scrollTop;\n      var children = [];\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index /*: number*/, left /*: number*/, top /*: number*/) {\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: _defineProperty(_defineProperty(_defineProperty(_defineProperty({\n            height: cellMeasurerCache.getHeight(index)\n          }, rowDirection === 'ltr' ? 'left' : 'right', left), \"position\", 'absolute'), \"top\", top), \"width\", cellMeasurerCache.getWidth(index))\n        }));\n      });\n\n      // We need to measure additional cells for this layout\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null;\n\n        // Query external layout logic for position of newly-measured cells\n        this._populatePositionCache(startIndex, stopIndex);\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n        cellCount = _this$props2.cellCount,\n        cellMeasurerCache = _this$props2.cellMeasurerCache,\n        width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n        height = _this$props3.height,\n        onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex /*: number*/, stopIndex /*: number*/) {\n      var _this$props4 = this.props,\n        cellMeasurerCache = _this$props4.cellMeasurerCache,\n        cellPositioner = _this$props4.cellPositioner;\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n          left = _cellPositioner.left,\n          top = _cellPositioner.top;\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps /*: Props*/, prevState /*: State*/) /*: $Shape<State>*/{\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n      return null;\n    }\n  }]);\n}(React.PureComponent);\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\nfunction identity(value) {\n  return value;\n}\nfunction noop() {}\n/*:: type KeyMapper = (index: number) => mixed;*/\n/*:: export type CellMeasurerCache = {\n  defaultHeight: number,\n  defaultWidth: number,\n  getHeight: (index: number) => number,\n  getWidth: (index: number) => number,\n};*/\n/*:: type CellRenderer = (params: {|\n  index: number,\n  isScrolling: boolean,\n  key: mixed,\n  parent: mixed,\n  style: mixed,\n|}) => mixed;*/\n/*:: type OnCellsRenderedCallback = (params: {|\n  startIndex: number,\n  stopIndex: number,\n|}) => void;*/\n/*:: type OnScrollCallback = (params: {|\n  clientHeight: number,\n  scrollHeight: number,\n  scrollTop: number,\n|}) => void;*/\n/*:: type Position = {\n  left: number,\n  top: number,\n};*/\npolyfill(Masonry);\nexport default Masonry;\n/*:: export type Positioner = (index: number) => Position;*/","map":{"version":3,"names":["_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_inherits","_defineProperty","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","_callSuper","_isNativeReflectConstruct","Reflect","construct","constructor","Boolean","prototype","valueOf","call","clsx","React","polyfill","PositionCache","requestAnimationTimeout","cancelAnimationTimeout","emptyObject","DEFAULT_SCROLLING_RESET_TIME_INTERVAL","Masonry","_React$PureComponent","_this","_len","args","Array","_key","concat","isScrolling","scrollTop","setState","ref","_scrollingContainer","event","height","props","eventScrollTop","currentTarget","Math","min","max","_getEstimatedTotalHeight","_debounceResetIsScrolling","state","key","value","clearCellPositions","_positionCache","forceUpdate","invalidateCellSizeAfterRender","_ref","index","rowIndex","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","recomputeCellPositions","stopIndex","count","_populatePositionCache","componentDidMount","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","componentDidUpdate","prevProps","prevState","componentWillUnmount","_debounceResetIsScrollingId","render","_this2","_this$props","autoHeight","cellCount","cellMeasurerCache","cellRenderer","className","id","keyMapper","overscanByPixels","role","style","tabIndex","width","rowDirection","_this$state","children","estimateTotalHeight","shortestColumnSize","measuredCellCount","startIndex","range","left","top","parent","getHeight","getWidth","batchSize","ceil","defaultHeight","defaultWidth","_index","_startIndex","_stopIndex","createElement","_setScrollingContainerRef","onScroll","_onScroll","boxSizing","direction","overflowX","overflowY","position","WebkitOverflowScrolling","willChange","maxWidth","maxHeight","overflow","pointerEvents","scrollingResetTimeInterval","_debounceResetIsScrollingCallback","_this$props2","estimatedColumnCount","floor","_this$props3","_onScrollMemoized","clientHeight","scrollHeight","_startIndexMemoized","_stopIndexMemoized","onCellsRendered","_this$props4","cellPositioner","_index2","_cellPositioner","setPosition","getDerivedStateFromProps","nextProps","undefined","PureComponent","identity","noop"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/node_modules/react-virtualized/dist/es/Masonry/Masonry.js"],"sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/*:: import type {AnimationTimeoutId} from '../utils/requestAnimationTimeout';*/\n/*:: type Props = {\n  autoHeight: boolean,\n  cellCount: number,\n  cellMeasurerCache: CellMeasurerCache,\n  cellPositioner: Positioner,\n  cellRenderer: CellRenderer,\n  className: ?string,\n  height: number,\n  id: ?string,\n  keyMapper: KeyMapper,\n  onCellsRendered: ?OnCellsRenderedCallback,\n  onScroll: ?OnScrollCallback,\n  overscanByPixels: number,\n  role: string,\n  scrollingResetTimeInterval: number,\n  style: mixed,\n  tabIndex: number,\n  width: number,\n  rowDirection: string,\n  scrollTop?: number,\n};*/\n/*:: type State = {\n  isScrolling: boolean,\n  scrollTop: number,\n};*/\nvar emptyObject = {};\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\nvar Masonry = /*#__PURE__*/function (_React$PureComponent) {\n  function Masonry() {\n    var _this;\n    _classCallCheck(this, Masonry);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, Masonry, [].concat(args));\n    _defineProperty(_this, \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n    _defineProperty(_this, \"_debounceResetIsScrollingId\", void 0);\n    _defineProperty(_this, \"_invalidateOnUpdateStartIndex\", null);\n    _defineProperty(_this, \"_invalidateOnUpdateStopIndex\", null);\n    _defineProperty(_this, \"_positionCache\", new PositionCache());\n    _defineProperty(_this, \"_startIndex\", null);\n    _defineProperty(_this, \"_startIndexMemoized\", null);\n    _defineProperty(_this, \"_stopIndex\", null);\n    _defineProperty(_this, \"_stopIndexMemoized\", null);\n    _defineProperty(_this, \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n    _defineProperty(_this, \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n    _defineProperty(_this, \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop;\n\n      // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop);\n\n      // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n      if (eventScrollTop !== scrollTop) {\n        return;\n      }\n\n      // Prevent pointer events from interrupting a smooth scroll\n      _this._debounceResetIsScrolling();\n\n      // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n    return _this;\n  }\n  _inherits(Masonry, _React$PureComponent);\n  return _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    }\n\n    // HACK This method signature was intended for Grid\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n      this._populatePositionCache(0, stopIndex);\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n      this._invokeOnScrollCallback();\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps /*: Props*/, prevState /*: State*/) {\n      this._checkInvalidateOnUpdate();\n      this._invokeOnScrollCallback();\n      this._invokeOnCellsRenderedCallback();\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$props = this.props,\n        autoHeight = _this$props.autoHeight,\n        cellCount = _this$props.cellCount,\n        cellMeasurerCache = _this$props.cellMeasurerCache,\n        cellRenderer = _this$props.cellRenderer,\n        className = _this$props.className,\n        height = _this$props.height,\n        id = _this$props.id,\n        keyMapper = _this$props.keyMapper,\n        overscanByPixels = _this$props.overscanByPixels,\n        role = _this$props.role,\n        style = _this$props.style,\n        tabIndex = _this$props.tabIndex,\n        width = _this$props.width,\n        rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n        isScrolling = _this$state.isScrolling,\n        scrollTop = _this$state.scrollTop;\n      var children = [];\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index /*: number*/, left /*: number*/, top /*: number*/) {\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: _defineProperty(_defineProperty(_defineProperty(_defineProperty({\n            height: cellMeasurerCache.getHeight(index)\n          }, rowDirection === 'ltr' ? 'left' : 'right', left), \"position\", 'absolute'), \"top\", top), \"width\", cellMeasurerCache.getWidth(index))\n        }));\n      });\n\n      // We need to measure additional cells for this layout\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null;\n\n        // Query external layout logic for position of newly-measured cells\n        this._populatePositionCache(startIndex, stopIndex);\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n        cellCount = _this$props2.cellCount,\n        cellMeasurerCache = _this$props2.cellMeasurerCache,\n        width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n        height = _this$props3.height,\n        onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex /*: number*/, stopIndex /*: number*/) {\n      var _this$props4 = this.props,\n        cellMeasurerCache = _this$props4.cellMeasurerCache,\n        cellPositioner = _this$props4.cellPositioner;\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n          left = _cellPositioner.left,\n          top = _cellPositioner.top;\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps /*: Props*/, prevState /*: State*/) /*: $Shape<State>*/{\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n      return null;\n    }\n  }]);\n}(React.PureComponent);\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\nfunction identity(value) {\n  return value;\n}\nfunction noop() {}\n/*:: type KeyMapper = (index: number) => mixed;*/\n/*:: export type CellMeasurerCache = {\n  defaultHeight: number,\n  defaultWidth: number,\n  getHeight: (index: number) => number,\n  getWidth: (index: number) => number,\n};*/\n/*:: type CellRenderer = (params: {|\n  index: number,\n  isScrolling: boolean,\n  key: mixed,\n  parent: mixed,\n  style: mixed,\n|}) => mixed;*/\n/*:: type OnCellsRenderedCallback = (params: {|\n  startIndex: number,\n  stopIndex: number,\n|}) => void;*/\n/*:: type OnScrollCallback = (params: {|\n  clientHeight: number,\n  scrollHeight: number,\n  scrollTop: number,\n|}) => void;*/\n/*:: type Position = {\n  left: number,\n  top: number,\n};*/\npolyfill(Masonry);\nexport default Masonry;\n/*:: export type Positioner = (index: number) => Position;*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}