{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/VideoAnnotationApp.js\";\n/* eslint-disable no-return-await */\n/* eslint-disable react/forbid-prop-types */\n/* eslint-disable class-methods-use-this */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { cloneDeep } from 'lodash';\nimport { message, notification } from 'antd';\nimport LayoutWrapper from '../../common/layout/LayoutWrapper';\nimport { initPayloadState, setCurrentSegment, setErrorMsg, setWordTimestamps, setVideoLoaded } from '../redux/action';\nimport TaskNavigation from './TaskNavigation/TaskNavigation';\nimport AudioComp from './AudioComp/AudioComp';\nimport VideoComp from './VideoComp/VideoComp';\nimport SegmentNavigation from './SegmentNavigation/SegmentNavigation';\nimport SegmentAbstract from './SegmentAbstract/SegmentAbstract';\nimport SegmentDetail from './SegmentDetail/SegmentDetail';\nimport Validation from './Validation/Validation';\nimport GlobalAttributes from './GlobalAttributes/GlobalAttributes';\nimport './VideoAnnotationApp.scss';\nimport { isReviewEditable, isPreview } from '../../../utils/tool-mode';\nimport { translate, validateForm } from '../constants';\nimport { fetchResultByUrl } from '../../../utils';\nimport { verifyCurrentForm, isInput } from '../redux/reducer/segmentController';\nimport { initPayload, handleLawToWav } from '../redux/reducer/connectController';\nimport AutoSaver from '../../common/AutoSaver';\nnotification.config({\n  top: 60\n});\nclass VideoAnnotationApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.loadAlaws = async audios => {\n      let loadAlaw = false;\n      const videos = cloneDeep(audios);\n      for (let i = 0; i < videos.length; i += 1) {\n        const {\n          url\n        } = videos[i];\n        const tail = url.split('.').pop();\n        if (tail === 'alaw' || tail === 'ulaw') {\n          loadAlaw = true;\n          videos[i].url = await handleLawToWav(url, tail, i);\n          videos[i].loaded = true;\n        }\n      }\n      if (loadAlaw) {\n        this.props.setVideoLoaded({\n          videos\n        });\n      }\n    };\n    this.onSave = async () => {\n      if (isPreview(this.props.toolMode)) {\n        return;\n      }\n      try {\n        await this.saveResult();\n        if (isReviewEditable(this.props.toolMode)) {\n          await this.saveReviews();\n        }\n        notification.success({\n          message: translate('saveSuccess')\n        });\n      } catch (e) {\n        notification.error({\n          message: (e === null || e === void 0 ? void 0 : e.message) || translate('saveFailure')\n        });\n      }\n    };\n    this.setCurrentSegment = data => {\n      const {\n        index\n      } = data;\n      this.props.setCurrentSegment(data);\n      if (this.props.results[0][index]) {\n        if (this.segmentAbstract.listRef) {\n          this.segmentAbstract.listRef.scrollToRow(index);\n        }\n        if (this.segmentNavigation.gridRef) {\n          this.segmentNavigation.gridRef.scrollToCell({\n            rowIndex: Math.floor(index / this.segmentNavigation.gridRef.props.columnCount)\n          });\n        }\n      }\n    };\n    this.getTimeStatistics = () => {\n      const objects = {\n        summary: [],\n        duration: 0,\n        // file duration\n        validDuration: 0,\n        annotationDuration: 0,\n        // annotation duration\n        approvedValidDuration: 0,\n        rejectedValidDuration: 0\n      };\n      const reviews = this.extractReviews();\n      const {\n        videos,\n        results: annotationResults\n      } = this.props;\n      for (let m = 0; m < videos.length; m += 1) {\n        const {\n          duration\n        } = videos[m];\n        objects.duration += Math.round(duration * 1000);\n      }\n      const invalidOptions = this.props.keyAttribute.options.filter(o => o.isValid === false).map(o => o.value);\n      for (let i = 0; i < annotationResults.length; i += 1) {\n        const results = annotationResults[i];\n        const review = reviews[i];\n        for (let j = 0; j < results.length; j += 1) {\n          const {\n            attributes,\n            id,\n            start,\n            end\n          } = results[j];\n          const time = Math.round((end - start) * 1000);\n          const keyAttributeValue = attributes[this.props.keyAttribute.name];\n          let isValid = true;\n          if (keyAttributeValue && invalidOptions.includes(keyAttributeValue)) {\n            isValid = false;\n          }\n          objects.annotationDuration += time;\n          // valid time statistic\n          if (isValid) {\n            var _review$id, _review$id2;\n            objects.validDuration += time;\n            if ((review === null || review === void 0 ? void 0 : (_review$id = review[id]) === null || _review$id === void 0 ? void 0 : _review$id.qaChecked) === true) {\n              objects.approvedValidDuration += time;\n            } else if ((review === null || review === void 0 ? void 0 : (_review$id2 = review[id]) === null || _review$id2 === void 0 ? void 0 : _review$id2.qaChecked) === false) {\n              objects.rejectedValidDuration += time;\n            }\n          }\n        }\n      }\n      return objects;\n    };\n    this.state = {\n      ready: false\n    };\n    window.disableLongAudioHotKeys = true;\n    this.validator = React.createRef();\n  }\n  componentDidMount() {\n    // initialize the annotations and reviews\n    this.props.jobProxy.loadResult().then(async result => {\n      // TODO: review the implementation of the init function\n\n      // handle old and new result format, old - array, new object with results and auditId\n      let annotationResult = [];\n      if (Array.isArray(result)) {\n        annotationResult = result;\n      } else if (result && result.results) {\n        annotationResult = result.results;\n        if (result.auditId) {\n          this.props.jobProxy.setAuditId(result.auditId);\n        }\n      }\n      await this.appendReviews(annotationResult);\n      try {\n        if (!this.props.payload.audio) {\n          this.props.setErrorMsg({\n            errorMsg: translate('AUDIO_SOURCE_ERROR')\n          });\n          return;\n        }\n        const payload = await initPayload(this.props.state, {\n          ...this.props.payload,\n          review_from: annotationResult,\n          result\n        });\n        this.props.initPayloadState(payload);\n        await this.initWordTimestamps();\n        this.setState({\n          ready: true\n        });\n        this.props.renderComplete();\n        window.disableLongAudioHotKeys = false;\n        this.loadAlaws(payload.videos);\n      } catch (e) {\n        console.log('Error', e);\n        this.props.setErrorMsg({\n          errorMsg: e === null || e === void 0 ? void 0 : e.toString()\n        });\n      }\n    }).catch(() => {\n      this.props.setErrorMsg({\n        errorMsg: translate('ANNOTATION_DATA_LOAD_ERROR')\n      });\n    });\n    window.addEventListener('keydown', async e => {\n      if (window.disableLongAudioHotKeys) return;\n      if (isInput()) return;\n      if (e.keyCode === 83) {\n        // s\n        if (e.altKey || e.metaKey) return;\n        if (e.ctrlKey) {\n          e.preventDefault();\n          this.onSave();\n        }\n      }\n    });\n  }\n  async initWordTimestamps() {\n    const wordTimestamps = await Promise.all(this.props.wordTimestampUrls.map(async url => await this.parseWords(url)));\n    this.props.setWordTimestamps({\n      wordTimestamps\n    });\n  }\n  async parseWords(wordUrl) {\n    if (wordUrl) {\n      try {\n        const ret = await fetchResultByUrl(wordUrl);\n        ret.words.sort((a, b) => a < b ? -1 : 1);\n        return ret;\n      } catch (e) {\n        console.log(`failed to load word from ${wordUrl}`, e);\n      }\n    }\n    return [];\n  }\n  async appendReviews(result) {\n    if (!result) return;\n    const reviews = (await this.props.jobProxy.loadReviews()) || {};\n    result.forEach((videoSegments, videoIdx) => {\n      const videoReviews = reviews[videoIdx] || {};\n      videoSegments.forEach(segment => {\n        if (Object.keys(reviews).length > 0) {\n          delete segment.qaChecked;\n          delete segment.qaComment;\n          delete segment.qaReason;\n        }\n        const segmentReview = videoReviews[segment.id];\n        if (segmentReview) {\n          segment.qaChecked = segmentReview.qaChecked;\n          segment.qaComment = segmentReview.qaComment;\n          segment.qaReason = segmentReview.qaReason;\n        }\n      });\n    });\n  }\n  isLineCountMatched(source, target) {\n    if (typeof source === 'string' && source.length > 0) {\n      return target && source.split(/\\r\\n|\\r|\\n/).length === target.split(/\\r\\n|\\r|\\n/).length;\n    }\n    return true;\n  }\n  async saveResult(isSubmit = false) {\n    if (!this.state.ready) {\n      throw new Error(`${translate('TOOL_NOT_INITIALIZED')}`);\n    }\n    const invalidOptions = this.props.keyAttribute.options.filter(o => o.isValid === false).map(o => o.value);\n    const annotationResults = cloneDeep(this.props.results);\n    const annotationVideos = cloneDeep(this.props.videos);\n    for (let i = 0; i < annotationVideos.length; i += 1) {\n      const video = annotationVideos[i];\n      delete video.originAttributes;\n      delete video.defaultAttributes;\n      video.url = video.source || video.url;\n      delete video.source;\n      if (isSubmit && video.duration === undefined) {\n        throw new Error(`${translate('AUDIO_NOT_COMPLETE')} No: ${i + 1} `);\n      }\n    }\n    if (isSubmit && this.props.globalConfig && Array.isArray(this.props.globalConfig.fields) && this.props.globalConfig.fields.length > 0) {\n      annotationResults.forEach((_, index) => {\n        const {\n          attributes\n        } = annotationVideos[index];\n        // global attributes check\n        if (!attributes || !validateForm(this.props.globalConfig, attributes)) {\n          throw new Error(translate('GLOBAL_ATTR_MISS'));\n        }\n        // remove invalid audio results\n        const invalid = (attributes || {}).is_valid === 'invalid';\n        if (!this.props.invalidAnnotatable && invalid) {\n          annotationResults[index] = [];\n        }\n      });\n    }\n    annotationResults.forEach((audio, currentVideo) => {\n      audio.forEach((segment, idx) => {\n        if (segment.attributes) {\n          // required field check\n          if (isSubmit) {\n            const varifyRes = verifyCurrentForm({\n              ...this.props,\n              currentVideo,\n              currentSegment: idx\n            });\n            if (varifyRes.result === true) {\n              annotationResults[currentVideo][idx] = varifyRes.data;\n            } else {\n              throw new Error(varifyRes.error);\n            }\n          }\n\n          // set segment valid\n          const keyAttributeValue = segment.attributes[this.props.keyAttribute.name];\n          if (keyAttributeValue && invalidOptions.includes(keyAttributeValue)) {\n            segment.isValid = false;\n          } else {\n            segment.isValid = true;\n          }\n        }\n        delete segment.qaChecked;\n        delete segment.qaComment;\n        delete segment.qaReason;\n        if (Array.isArray(segment.content)) {\n          segment.content.forEach((l, i) => {\n            var _l$text;\n            l.text = (_l$text = l.text) === null || _l$text === void 0 ? void 0 : _l$text.trim();\n            if (this.props.client === 'hw-translation' && isSubmit) {\n              if (!this.isLineCountMatched(segment.attributes.source, l.text)) {\n                const err = `${translate('DATA_ERROR_LINE_COUNT_MISMATCH')}. Segment: ${idx + 1}`;\n                notification.error({\n                  message: err\n                });\n                throw new Error(err);\n              }\n            }\n          });\n        }\n      });\n    });\n\n    // custom validation\n    if (isSubmit && this.props.submitCheck && this.validator.current) {\n      const {\n        hasCustomError,\n        blockSubmitErrors\n      } = await this.validator.current.handleValidate();\n      if (hasCustomError) {\n        throw new Error(translate('VALIDATION_CUSTOM_ERROR'));\n      }\n      const errorVideos = [];\n      blockSubmitErrors.forEach((errors, index) => {\n        if (errors.length > 0) {\n          errorVideos.push(index);\n        }\n      });\n      if (errorVideos.length > 0) {\n        throw new Error(`${translate('VALIDATION_SUBMIT_FAIL')}${errorVideos.map(i => i + 1).join(', ')}`);\n      }\n    }\n    const statData = this.getTimeStatistics();\n    const statistics = await this.props.jobProxy.saveResultStat(statData);\n    return this.props.jobProxy.saveResult({\n      results: annotationResults,\n      audios: annotationVideos,\n      keyAttribute: this.props.keyAttribute,\n      auditId: this.props.jobProxy.auditId,\n      statistics\n    }, isSubmit);\n  }\n  saveReviews() {\n    const reviews = this.extractReviews();\n    return this.props.jobProxy.saveReviews(reviews);\n  }\n  extractReviews() {\n    return this.props.results.map(audio => {\n      const segmentReviews = {};\n      audio.forEach(segment => {\n        segmentReviews[segment.id] = {\n          qaChecked: segment.qaChecked,\n          qaComment: segment.qaComment,\n          qaReason: segment.qaReason\n        };\n      });\n      return segmentReviews;\n    });\n  }\n  render() {\n    const {\n      currentVideo,\n      videos,\n      errorMsg\n    } = this.props;\n    if (errorMsg) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"error-message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 9\n        }\n      }, errorMsg);\n    }\n    return /*#__PURE__*/React.createElement(LayoutWrapper, {\n      className: \"video-annotation-container\",\n      loading: this.props.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 7\n      }\n    }, videos.length && this.state.ready ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AutoSaver, {\n      data: this.props.results,\n      save: () => this.onSave(),\n      onSaved: () => message.success(translate('AUTO_SAVE_SUCCESS')),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TaskNavigation, {\n      setCurrentSegment: this.setCurrentSegment,\n      onSave: this.onSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(AudioComp, {\n      setCurrentSegment: this.setCurrentSegment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"right-component-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(VideoComp, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(SegmentNavigation, {\n      setCurrentSegment: this.setCurrentSegment,\n      ref: r => {\n        this.segmentNavigation = r;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"left-component-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(GlobalAttributes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(SegmentAbstract, {\n      setCurrentSegment: this.setCurrentSegment\n      // eslint-disable-next-line no-return-assign\n      ,\n      ref: r => this.segmentAbstract = r,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(SegmentDetail, {\n      setCurrentSegment: this.setCurrentSegment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Validation, {\n      ref: this.validator,\n      jobProxy: this.props.jobProxy,\n      saveResult: () => this.saveResult(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 13\n      }\n    })) : null);\n  }\n}\nVideoAnnotationApp.propTypes = {\n  initPayloadState: PropTypes.func.isRequired,\n  renderComplete: PropTypes.func,\n  jobProxy: PropTypes.object\n};\nconst mapStateToProps = state => ({\n  videos: state.videos,\n  currentVideo: state.currentVideo,\n  results: state.results,\n  toolMode: state.toolMode,\n  errorMsg: state.errorMsg,\n  currentSegment: state.currentSegment,\n  segmentConfig: state.segmentConfig,\n  lineConfig: state.lineConfig,\n  keyAttribute: state.keyAttribute,\n  client: state.client,\n  wordTimestampUrls: state.wordTimestampUrls,\n  submitCheck: state.submitCheck,\n  invalidAnnotatable: state.invalidAnnotatable,\n  globalConfig: state.globalConfig,\n  loading: state.loading,\n  state\n});\nconst mapDispatchToProps = {\n  initPayloadState,\n  setCurrentSegment,\n  setErrorMsg,\n  setWordTimestamps,\n  setVideoLoaded\n};\nexport default connect(mapStateToProps, mapDispatchToProps, null, {\n  forwardRef: true\n})(VideoAnnotationApp);","map":{"version":3,"names":["React","PropTypes","connect","cloneDeep","message","notification","LayoutWrapper","initPayloadState","setCurrentSegment","setErrorMsg","setWordTimestamps","setVideoLoaded","TaskNavigation","AudioComp","VideoComp","SegmentNavigation","SegmentAbstract","SegmentDetail","Validation","GlobalAttributes","isReviewEditable","isPreview","translate","validateForm","fetchResultByUrl","verifyCurrentForm","isInput","initPayload","handleLawToWav","AutoSaver","config","top","VideoAnnotationApp","Component","constructor","props","loadAlaws","audios","loadAlaw","videos","i","length","url","tail","split","pop","loaded","onSave","toolMode","saveResult","saveReviews","success","e","error","data","index","results","segmentAbstract","listRef","scrollToRow","segmentNavigation","gridRef","scrollToCell","rowIndex","Math","floor","columnCount","getTimeStatistics","objects","summary","duration","validDuration","annotationDuration","approvedValidDuration","rejectedValidDuration","reviews","extractReviews","annotationResults","m","round","invalidOptions","keyAttribute","options","filter","o","isValid","map","value","review","j","attributes","id","start","end","time","keyAttributeValue","name","includes","_review$id","_review$id2","qaChecked","state","ready","window","disableLongAudioHotKeys","validator","createRef","componentDidMount","jobProxy","loadResult","then","result","annotationResult","Array","isArray","auditId","setAuditId","appendReviews","payload","audio","errorMsg","review_from","initWordTimestamps","setState","renderComplete","console","log","toString","catch","addEventListener","keyCode","altKey","metaKey","ctrlKey","preventDefault","wordTimestamps","Promise","all","wordTimestampUrls","parseWords","wordUrl","ret","words","sort","a","b","loadReviews","forEach","videoSegments","videoIdx","videoReviews","segment","Object","keys","qaComment","qaReason","segmentReview","isLineCountMatched","source","target","isSubmit","Error","annotationVideos","video","originAttributes","defaultAttributes","undefined","globalConfig","fields","_","invalid","is_valid","invalidAnnotatable","currentVideo","idx","varifyRes","currentSegment","content","l","_l$text","text","trim","client","err","submitCheck","current","hasCustomError","blockSubmitErrors","handleValidate","errorVideos","errors","push","join","statData","statistics","saveResultStat","segmentReviews","render","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","loading","Fragment","save","onSaved","ref","r","propTypes","func","isRequired","object","mapStateToProps","segmentConfig","lineConfig","mapDispatchToProps","forwardRef"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/VideoAnnotationApp.js"],"sourcesContent":["/* eslint-disable no-return-await */\n/* eslint-disable react/forbid-prop-types */\n/* eslint-disable class-methods-use-this */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { cloneDeep } from 'lodash';\nimport { message, notification } from 'antd';\nimport LayoutWrapper from '../../common/layout/LayoutWrapper';\nimport { initPayloadState, setCurrentSegment, setErrorMsg, setWordTimestamps, setVideoLoaded } from '../redux/action';\nimport TaskNavigation from './TaskNavigation/TaskNavigation';\nimport AudioComp from './AudioComp/AudioComp';\nimport VideoComp from './VideoComp/VideoComp';\nimport SegmentNavigation from './SegmentNavigation/SegmentNavigation';\nimport SegmentAbstract from './SegmentAbstract/SegmentAbstract';\nimport SegmentDetail from './SegmentDetail/SegmentDetail';\nimport Validation from './Validation/Validation';\nimport GlobalAttributes from './GlobalAttributes/GlobalAttributes';\nimport './VideoAnnotationApp.scss';\nimport { isReviewEditable, isPreview } from '../../../utils/tool-mode';\nimport { translate, validateForm } from '../constants';\nimport { fetchResultByUrl } from '../../../utils';\nimport { verifyCurrentForm, isInput } from '../redux/reducer/segmentController';\nimport { initPayload, handleLawToWav } from '../redux/reducer/connectController';\nimport AutoSaver from '../../common/AutoSaver';\n\nnotification.config({ top: 60 });\n\nclass VideoAnnotationApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ready: false,\n    };\n    window.disableLongAudioHotKeys = true;\n\n    this.validator = React.createRef();\n  }\n\n  componentDidMount() {\n    // initialize the annotations and reviews\n    this.props.jobProxy.loadResult().then(async (result) => {\n      // TODO: review the implementation of the init function\n\n      // handle old and new result format, old - array, new object with results and auditId\n      let annotationResult = [];\n      if (Array.isArray(result)) {\n        annotationResult = result;\n      } else if (result && result.results) {\n        annotationResult = result.results;\n        if (result.auditId) {\n          this.props.jobProxy.setAuditId(result.auditId);\n        }\n      }\n      await this.appendReviews(annotationResult);\n      try {\n        if (!this.props.payload.audio) {\n          this.props.setErrorMsg({ errorMsg: translate('AUDIO_SOURCE_ERROR') });\n          return;\n        }\n        const payload = await initPayload(this.props.state, { ...this.props.payload, review_from: annotationResult, result });\n        this.props.initPayloadState(payload);\n        await this.initWordTimestamps();\n        this.setState({ ready: true });\n        this.props.renderComplete();\n        window.disableLongAudioHotKeys = false;\n        this.loadAlaws(payload.videos);\n      } catch (e) {\n        console.log('Error', e);\n        this.props.setErrorMsg({ errorMsg: e?.toString() });\n      }\n    }).catch(() => {\n      this.props.setErrorMsg({ errorMsg: translate('ANNOTATION_DATA_LOAD_ERROR') });\n    });\n\n    window.addEventListener('keydown', async (e) => {\n      if (window.disableLongAudioHotKeys) return;\n      if (isInput()) return;\n      if (e.keyCode === 83) { // s\n        if (e.altKey || e.metaKey) return;\n        if (e.ctrlKey) {\n          e.preventDefault();\n          this.onSave();\n        }\n      }\n    });\n  }\n\n  loadAlaws = async (audios) => {\n    let loadAlaw = false;\n    const videos = cloneDeep(audios);\n    for (let i = 0; i < videos.length; i += 1) {\n      const { url } = videos[i];\n      const tail = url.split('.').pop();\n      if (tail === 'alaw' || tail === 'ulaw') {\n        loadAlaw = true;\n        videos[i].url = await handleLawToWav(url, tail, i);\n        videos[i].loaded = true;\n      }\n    }\n    if (loadAlaw) {\n      this.props.setVideoLoaded({ videos });\n    }\n  };\n\n  async initWordTimestamps() {\n    const wordTimestamps = await Promise.all(this.props.wordTimestampUrls.map(async (url) => await this.parseWords(url)));\n    this.props.setWordTimestamps({ wordTimestamps });\n  }\n\n  async parseWords(wordUrl) {\n    if (wordUrl) {\n      try {\n        const ret = await fetchResultByUrl(wordUrl);\n        ret.words.sort((a, b) => (a < b ? -1 : 1));\n        return ret;\n      } catch (e) {\n        console.log(`failed to load word from ${wordUrl}`, e);\n      }\n    }\n    return [];\n  };\n\n  onSave = async () => {\n    if (isPreview(this.props.toolMode)) {\n      return;\n    }\n    try {\n      await this.saveResult();\n      if (isReviewEditable(this.props.toolMode)) {\n        await this.saveReviews();\n      }\n      notification.success({ message: translate('saveSuccess') });\n    } catch (e) {\n      notification.error({ message: e?.message || translate('saveFailure') });\n    }\n  };\n\n  async appendReviews(result) {\n    if (!result) return;\n    const reviews = await this.props.jobProxy.loadReviews() || {};\n    result.forEach((videoSegments, videoIdx) => {\n      const videoReviews = reviews[videoIdx] || {};\n      videoSegments.forEach((segment) => {\n        if (Object.keys(reviews).length > 0) {\n          delete segment.qaChecked;\n          delete segment.qaComment;\n          delete segment.qaReason;\n        }\n        const segmentReview = videoReviews[segment.id];\n        if (segmentReview) {\n          segment.qaChecked = segmentReview.qaChecked;\n          segment.qaComment = segmentReview.qaComment;\n          segment.qaReason = segmentReview.qaReason;\n        }\n      });\n    });\n  }\n\n  isLineCountMatched(source, target) {\n    if (typeof source === 'string' && source.length > 0) {\n      return target && source.split(/\\r\\n|\\r|\\n/).length === target.split(/\\r\\n|\\r|\\n/).length;\n    }\n    return true;\n  }\n\n  async saveResult(isSubmit = false) {\n    if (!this.state.ready) {\n      throw new Error(`${translate('TOOL_NOT_INITIALIZED')}`);\n    }\n    const invalidOptions = this.props.keyAttribute.options.filter((o) => o.isValid === false).map((o) => o.value);\n    const annotationResults = cloneDeep(this.props.results);\n    const annotationVideos = cloneDeep(this.props.videos);\n    for (let i = 0; i < annotationVideos.length; i += 1) {\n      const video = annotationVideos[i];\n      delete video.originAttributes;\n      delete video.defaultAttributes;\n      video.url = video.source || video.url;\n      delete video.source;\n      if (isSubmit && video.duration === undefined) {\n        throw new Error(`${translate('AUDIO_NOT_COMPLETE')} No: ${i + 1} `);\n      }\n    }\n    if (isSubmit && this.props.globalConfig && Array.isArray(this.props.globalConfig.fields) && this.props.globalConfig.fields.length > 0) {\n      annotationResults.forEach((_, index) => {\n        const { attributes } = annotationVideos[index];\n        // global attributes check\n        if (!attributes || !validateForm(this.props.globalConfig, attributes)) {\n          throw new Error(translate('GLOBAL_ATTR_MISS'));\n        }\n        // remove invalid audio results\n        const invalid = (attributes || {}).is_valid === 'invalid';\n        if (!this.props.invalidAnnotatable && invalid) {\n          annotationResults[index] = [];\n        }\n      });\n    }\n\n    annotationResults.forEach((audio, currentVideo) => {\n      audio.forEach((segment, idx) => {\n        if (segment.attributes) {\n          // required field check\n          if (isSubmit) {\n            const varifyRes = verifyCurrentForm({\n              ...this.props,\n              currentVideo,\n              currentSegment: idx\n            });\n            if (varifyRes.result === true) {\n              annotationResults[currentVideo][idx] = varifyRes.data;\n            } else {\n              throw new Error(varifyRes.error);\n            }\n          }\n\n          // set segment valid\n          const keyAttributeValue = segment.attributes[this.props.keyAttribute.name];\n          if (keyAttributeValue && invalidOptions.includes(keyAttributeValue)) {\n            segment.isValid = false;\n          } else {\n            segment.isValid = true;\n          }\n        }\n        delete segment.qaChecked;\n        delete segment.qaComment;\n        delete segment.qaReason;\n        if (Array.isArray(segment.content)) {\n          segment.content.forEach((l, i) => {\n            l.text = l.text?.trim();\n            if (this.props.client === 'hw-translation' && isSubmit) {\n              if (!this.isLineCountMatched(segment.attributes.source, l.text)) {\n                const err = `${translate('DATA_ERROR_LINE_COUNT_MISMATCH')}. Segment: ${idx + 1}`;\n                notification.error({ message: err });\n                throw new Error(err);\n              }\n            }\n          });\n        }\n      });\n    });\n\n    // custom validation\n    if (isSubmit && this.props.submitCheck && this.validator.current) {\n      const { hasCustomError, blockSubmitErrors } = await this.validator.current.handleValidate();\n      if (hasCustomError) {\n        throw new Error(translate('VALIDATION_CUSTOM_ERROR'));\n      }\n      const errorVideos = [];\n      blockSubmitErrors.forEach((errors, index) => {\n        if (errors.length > 0) {\n          errorVideos.push(index);\n        }\n      });\n      if (errorVideos.length > 0) {\n        throw new Error(`${translate('VALIDATION_SUBMIT_FAIL')}${errorVideos.map((i) => i + 1).join(', ')}`);\n      }\n    }\n\n    const statData = this.getTimeStatistics();\n    const statistics = await this.props.jobProxy.saveResultStat(statData);\n    return this.props.jobProxy.saveResult({\n      results: annotationResults,\n      audios: annotationVideos,\n      keyAttribute: this.props.keyAttribute,\n      auditId: this.props.jobProxy.auditId,\n      statistics,\n    }, isSubmit);\n  }\n\n  saveReviews() {\n    const reviews = this.extractReviews();\n    return this.props.jobProxy.saveReviews(reviews);\n  }\n\n  extractReviews() {\n    return this.props.results.map((audio) => {\n      const segmentReviews = {};\n      audio.forEach((segment) => {\n        segmentReviews[segment.id] = {\n          qaChecked: segment.qaChecked,\n          qaComment: segment.qaComment,\n          qaReason: segment.qaReason,\n        };\n      });\n      return segmentReviews;\n    });\n  }\n\n  setCurrentSegment = (data) => {\n    const { index } = data;\n    this.props.setCurrentSegment(data);\n    if (this.props.results[0][index]) {\n      if (this.segmentAbstract.listRef) {\n        this.segmentAbstract.listRef.scrollToRow(index);\n      }\n      if (this.segmentNavigation.gridRef) {\n        this.segmentNavigation.gridRef.scrollToCell({ rowIndex: Math.floor(index / this.segmentNavigation.gridRef.props.columnCount) });\n      }\n    }\n  };\n\n  getTimeStatistics = () => {\n    const objects = {\n      summary: [],\n      duration: 0, // file duration\n      validDuration: 0,\n      annotationDuration: 0, // annotation duration\n      approvedValidDuration: 0,\n      rejectedValidDuration: 0,\n    };\n    const reviews = this.extractReviews();\n    const { videos, results: annotationResults } = this.props;\n    for (let m = 0; m < videos.length; m += 1) {\n      const { duration } = videos[m];\n      objects.duration += Math.round(duration * 1000);\n    }\n    const invalidOptions = this.props.keyAttribute.options.filter((o) => o.isValid === false).map((o) => o.value);\n    for (let i = 0; i < annotationResults.length; i += 1) {\n      const results = annotationResults[i];\n      const review = reviews[i];\n      for (let j = 0; j < results.length; j += 1) {\n        const { attributes, id, start, end } = results[j];\n        const time = Math.round((end - start) * 1000);\n        const keyAttributeValue = attributes[this.props.keyAttribute.name];\n        let isValid = true;\n        if (keyAttributeValue && invalidOptions.includes(keyAttributeValue)) {\n          isValid = false;\n        }\n        objects.annotationDuration += time;\n        // valid time statistic\n        if (isValid) {\n          objects.validDuration += time;\n          if (review?.[id]?.qaChecked === true) {\n            objects.approvedValidDuration += time;\n          } else if (review?.[id]?.qaChecked === false) {\n            objects.rejectedValidDuration += time;\n          }\n        }\n      }\n    }\n    return objects;\n  };\n\n  render() {\n    const { currentVideo, videos, errorMsg } = this.props;\n    if (errorMsg) {\n      return (\n        <div className=\"error-message\">{errorMsg}</div>\n      );\n    }\n\n    return (\n      <LayoutWrapper className=\"video-annotation-container\" loading={this.props.loading}>\n        {(videos.length && this.state.ready) ? (\n          <>\n            <AutoSaver\n              data={this.props.results}\n              save={() => this.onSave()}\n              onSaved={() => message.success(translate('AUTO_SAVE_SUCCESS'))}\n            />\n            <TaskNavigation\n              setCurrentSegment={this.setCurrentSegment}\n              onSave={this.onSave}\n            />\n            <AudioComp setCurrentSegment={this.setCurrentSegment} />\n            <div className=\"right-component-wrapper\">\n              <VideoComp />\n              <SegmentNavigation\n                setCurrentSegment={this.setCurrentSegment}\n                ref={(r) => { this.segmentNavigation = r; }}\n              />\n            </div>\n            <div className=\"left-component-wrapper\">\n              <GlobalAttributes />\n              <SegmentAbstract\n                setCurrentSegment={this.setCurrentSegment}\n                // eslint-disable-next-line no-return-assign\n                ref={(r) => this.segmentAbstract = r}\n              />\n            </div>\n            <SegmentDetail setCurrentSegment={this.setCurrentSegment} />\n            <Validation\n              ref={this.validator}\n              jobProxy={this.props.jobProxy}\n              saveResult={() => this.saveResult()}\n            />\n          </>\n        ) : null}\n      </LayoutWrapper>\n    );\n  }\n}\n\nVideoAnnotationApp.propTypes = {\n  initPayloadState: PropTypes.func.isRequired,\n  renderComplete: PropTypes.func,\n  jobProxy: PropTypes.object,\n};\n\nconst mapStateToProps = (state) => ({\n  videos: state.videos,\n  currentVideo: state.currentVideo,\n  results: state.results,\n  toolMode: state.toolMode,\n  errorMsg: state.errorMsg,\n  currentSegment: state.currentSegment,\n  segmentConfig: state.segmentConfig,\n  lineConfig: state.lineConfig,\n  keyAttribute: state.keyAttribute,\n  client: state.client,\n  wordTimestampUrls: state.wordTimestampUrls,\n  submitCheck: state.submitCheck,\n  invalidAnnotatable: state.invalidAnnotatable,\n  globalConfig: state.globalConfig,\n  loading: state.loading,\n  state,\n});\nconst mapDispatchToProps = {\n  initPayloadState,\n  setCurrentSegment,\n  setErrorMsg,\n  setWordTimestamps,\n  setVideoLoaded,\n};\nexport default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(VideoAnnotationApp);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}