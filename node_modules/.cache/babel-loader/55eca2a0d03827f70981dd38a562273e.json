{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/keypoint/components/FrameContorl/index.tsx\";\nimport React from 'react';\nimport cx from 'classnames';\nimport { isEqual } from 'lodash';\nimport FrameActions from './FrameActions';\nimport FramesRenderer, { EventAction } from '../../../../libs/FramesRenderer';\nimport { Up, SortAsc } from '../../../common/icons';\nimport formatMessage from '../../locales';\nimport rootStore from '../../store/RootStore';\nimport { getRGBAColor, getInstanceFrames } from '../../utils';\nimport { ReviewResult } from '../../types';\nimport 'antd/es/slider/style/index.css';\nimport './index.scss';\nconst frameLabelHeight = 20;\nconst frameLabelColor = '#343846';\nconst frameLabelSelectedColor = '#292C38';\nconst actionsContainerHeight = 48;\nexport default class FrameControl extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.framesRenderer = null;\n    this.framesContainer = React.createRef();\n    this.itemsContainer = React.createRef();\n    this.state = {\n      framesCollapsed: true,\n      framesHeight: 64,\n      visibleFramesIndex: 0,\n      visibleFramesIndexArr: []\n    };\n    this.changeFrame = (frameIndex, instanceIndex) => {\n      this.props.setFrame(frameIndex);\n      if (instanceIndex !== undefined && instanceIndex > -1 && !this.state.framesCollapsed) {\n        const selectedInstence = this.props.instances[this.allInstanceIds[instanceIndex]];\n        this.props.selectGroup(selectedInstence.id, selectedInstence.children[0].name);\n      }\n    };\n    this.updateHeight = height => {\n      this.setState({\n        framesHeight: height\n      });\n      this.props.onHeightChange(height + actionsContainerHeight);\n    };\n    this.updateVisibleFrames = (currentIndex, indexArr) => {\n      this.setState(stat => ({\n        ...stat,\n        visibleFramesIndex: currentIndex,\n        ...(indexArr && {\n          visibleFramesIndexArr: indexArr\n        })\n      }));\n    };\n    this.updateItemsScroll = top => {\n      if (this.itemsContainer.current) {\n        this.itemsContainer.current.scroll({\n          top\n        });\n      }\n    };\n    this.onItemsScroll = e => {\n      if (this.framesRenderer) {\n        this.framesRenderer.itemsOffset = e.target.scrollTop;\n      }\n    };\n    this.toggleCollapse = () => {\n      if (!this.isEmpty) {\n        this.setState(stat => ({\n          framesCollapsed: !stat.framesCollapsed\n        }), () => {\n          // update renderer\n          if (this.framesRenderer) {\n            this.framesRenderer.scrollable = !this.state.framesCollapsed;\n            this.framesRenderer.items = this.getItems();\n          }\n        });\n      }\n    };\n  }\n  get isEmpty() {\n    const {\n      categoryInstancesMap\n    } = this.props;\n    return Object.values(categoryInstancesMap).every(categoryInstances => Object.keys(categoryInstances).length === 0);\n  }\n  get allInstanceIds() {\n    const {\n      categoryInstancesMap,\n      instances\n    } = this.props;\n    const categories = Object.keys(categoryInstancesMap);\n    return Object.values(categoryInstancesMap).flatMap(categoryInstances => Object.keys(categoryInstances)).sort((a, b) => {\n      var _instanceA$children$, _instanceB$children$;\n      const instanceA = instances[a];\n      const instanceB = instances[b];\n      const instanceAFirstFrame = Number(Object.keys(instanceA === null || instanceA === void 0 ? void 0 : (_instanceA$children$ = instanceA.children[0]) === null || _instanceA$children$ === void 0 ? void 0 : _instanceA$children$.frames)[0] || 0);\n      const instanceBFirstFrame = Number(Object.keys(instanceB === null || instanceB === void 0 ? void 0 : (_instanceB$children$ = instanceB.children[0]) === null || _instanceB$children$ === void 0 ? void 0 : _instanceB$children$.frames)[0] || 0);\n      if (instanceAFirstFrame > instanceBFirstFrame) {\n        return 1;\n      }\n      if (instanceAFirstFrame < instanceBFirstFrame) {\n        return -1;\n      }\n      const instanceACategoryIndex = categories.indexOf((instanceA === null || instanceA === void 0 ? void 0 : instanceA.category) || '');\n      const instanceBCategoryIndex = categories.indexOf((instanceB === null || instanceB === void 0 ? void 0 : instanceB.category) || '');\n      if (instanceACategoryIndex > instanceBCategoryIndex) {\n        return 1;\n      }\n      if (instanceACategoryIndex < instanceBCategoryIndex) {\n        return -1;\n      }\n      return ((instanceA === null || instanceA === void 0 ? void 0 : instanceA.number) || 0) > ((instanceB === null || instanceB === void 0 ? void 0 : instanceB.number) || 0) ? 1 : -1;\n    });\n  }\n  componentDidMount() {\n    if (this.framesContainer.current) {\n      this.framesRenderer = new FramesRenderer(this.framesContainer.current, this.props.frames.length);\n      this.framesRenderer.on(EventAction.HEIGHT_CHANGE, this.updateHeight);\n      this.framesRenderer.on(EventAction.VISIBLE_FRAMES_UPDATE, this.updateVisibleFrames);\n      this.framesRenderer.on(EventAction.CURRENT_FRAME_CHANGE, this.changeFrame);\n      this.framesRenderer.on(EventAction.ITEMS_OFFSET_CHANGE, this.updateItemsScroll);\n      this.framesRenderer.items = this.getItems();\n      this.framesRenderer.invalidFrames = this.props.frames.filter(v => v.valid === false).map(v => v.index);\n    }\n  }\n  componentDidUpdate(prevProps) {\n    var _prevProps$selectedIn, _this$props$selectedI;\n    if (prevProps.currentFrame !== this.props.currentFrame) {\n      // current frame changes\n      if (this.framesRenderer) {\n        this.framesRenderer.currentFrame = this.props.currentFrame;\n      }\n    }\n    if (!isEqual(prevProps.instances, this.props.instances) || !isEqual(prevProps.instancesReviewsMap, this.props.instancesReviewsMap)) {\n      // selected instance frame status changes\n      if (this.framesRenderer) {\n        this.framesRenderer.items = this.getItems();\n      }\n    } else if (((_prevProps$selectedIn = prevProps.selectedInstance) === null || _prevProps$selectedIn === void 0 ? void 0 : _prevProps$selectedIn.id) !== ((_this$props$selectedI = this.props.selectedInstance) === null || _this$props$selectedI === void 0 ? void 0 : _this$props$selectedI.id)) {\n      // selected instance changes, or instances changes\n      if (this.framesRenderer) {\n        this.framesRenderer.items = this.getItems();\n      }\n    }\n    if (!isEqual(prevProps.frames, this.props.frames) && this.framesRenderer) {\n      this.framesRenderer.invalidFrames = this.props.frames.filter(v => v.valid === false).map(v => v.index);\n    }\n  }\n  componentWillUnmount() {\n    if (this.framesRenderer) {\n      this.framesRenderer.removeEventListeners();\n      this.framesRenderer.off(EventAction.HEIGHT_CHANGE, this.updateHeight);\n      this.framesRenderer.off(EventAction.VISIBLE_FRAMES_UPDATE, this.updateVisibleFrames);\n      this.framesRenderer.off(EventAction.CURRENT_FRAME_CHANGE, this.changeFrame);\n      this.framesRenderer.off(EventAction.ITEMS_OFFSET_CHANGE, this.updateItemsScroll);\n    }\n  }\n  getItems() {\n    const {\n      selectedInstance,\n      instancesReviewsMap,\n      instances\n    } = this.props;\n    const frameColor = {};\n    if (selectedInstance) {\n      const instanceReviewsMap = instancesReviewsMap[selectedInstance.id];\n      if (instanceReviewsMap) {\n        Object.keys(instanceReviewsMap).forEach(f => {\n          var _instanceReviewsMap$f;\n          const frameIndex = Number(f);\n          const reviewResult = (_instanceReviewsMap$f = instanceReviewsMap[frameIndex]) === null || _instanceReviewsMap$f === void 0 ? void 0 : _instanceReviewsMap$f.result;\n          if (reviewResult === ReviewResult.APPROVE) {\n            frameColor[frameIndex] = '#3E6F45';\n          } else if (reviewResult === ReviewResult.REJECT) {\n            frameColor[frameIndex] = '#9C4434';\n          } else if (reviewResult === ReviewResult.SUSPEND) {\n            frameColor[frameIndex] = '#A28900';\n          }\n        });\n      }\n    }\n    if (this.state.framesCollapsed) {\n      const frameStatus = getInstanceFrames(selectedInstance);\n      if (selectedInstance) {\n        return {\n          [selectedInstance.id]: {\n            frameStatus,\n            frameColor,\n            color: getRGBAColor(selectedInstance.displayColor),\n            showCards: true,\n            selected: true\n          }\n        };\n      }\n      return {\n        global: {\n          frameStatus,\n          color: '#5C5F6B',\n          showCards: true,\n          selected: true\n        }\n      };\n    }\n    const items = {};\n    this.allInstanceIds.forEach(instanceId => {\n      const instance = instances[instanceId];\n      items[instanceId] = {\n        frameStatus: {},\n        color: getRGBAColor(instance === null || instance === void 0 ? void 0 : instance.displayColor)\n      };\n    });\n    Object.values(instances).forEach(instance => {\n      if (instance) {\n        items[instance.id].frameStatus = getInstanceFrames(instance);\n      }\n    });\n    if (selectedInstance) {\n      items[selectedInstance.id].frameColor = frameColor;\n      items[selectedInstance.id].showCards = true;\n      items[selectedInstance.id].selected = true;\n    }\n    return items;\n  }\n  renderItemLabels() {\n    const {\n      instances,\n      selectedInstance,\n      selectGroup\n    } = this.props;\n    const {\n      framesCollapsed\n    } = this.state;\n    if (framesCollapsed) {\n      const ontologyItem = rootStore.ontology.getOntologyInfo((selectedInstance === null || selectedInstance === void 0 ? void 0 : selectedInstance.category) || '');\n      let isReject = false;\n      let isPending = false;\n      let isApproved = false;\n      if (selectedInstance) {\n        const allFrameReviews = Object.values(this.props.instancesReviewsMap[selectedInstance.id] || {});\n        if (allFrameReviews.length > 0) {\n          isReject = allFrameReviews.some(i => i.result === ReviewResult.REJECT);\n          if (!isReject) {\n            isPending = allFrameReviews.some(i => i.result === ReviewResult.SUSPEND);\n          }\n          if (!isPending) {\n            isApproved = allFrameReviews.length === this.props.frames.length && allFrameReviews.every(i => i.result === ReviewResult.APPROVE);\n          }\n        }\n      }\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"frame-item-label\",\n        style: {\n          height: frameLabelHeight,\n          background: framesCollapsed ? frameLabelSelectedColor : frameLabelColor\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 9\n        }\n      }, selectedInstance ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"frame-item-label-dot\",\n        style: {\n          backgroundColor: getRGBAColor(ontologyItem === null || ontologyItem === void 0 ? void 0 : ontologyItem.display_color, 1)\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 17\n        }\n      }), (ontologyItem === null || ontologyItem === void 0 ? void 0 : ontologyItem.display_name) || (ontologyItem === null || ontologyItem === void 0 ? void 0 : ontologyItem.class_name), selectedInstance.number), (isApproved || isReject || isPending) && /*#__PURE__*/React.createElement(\"div\", {\n        className: cx('frame-item-label-review', {\n          approved: isApproved,\n          rejected: isReject,\n          pending: isPending\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 17\n        }\n      })) : formatMessage('PROGRESS_GLOBAL_LABEL'));\n    }\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.allInstanceIds.map(instanceId => {\n      const instance = instances[instanceId];\n      const selected = selectedInstance && selectedInstance.id === instanceId;\n      const ontologyItem = rootStore.ontology.getOntologyInfo((instance === null || instance === void 0 ? void 0 : instance.category) || '');\n      const allFrameReviews = Object.values(this.props.instancesReviewsMap[instanceId] || {});\n      const isReject = allFrameReviews.some(i => i.result === ReviewResult.REJECT);\n      let isPending = false;\n      let isApproved = false;\n      if (allFrameReviews.length > 0) {\n        if (!isReject) {\n          isPending = allFrameReviews.some(i => i.result === ReviewResult.SUSPEND);\n        }\n        if (!isPending) {\n          isApproved = allFrameReviews.every(i => i.result === ReviewResult.APPROVE);\n        }\n      }\n      return instance ? /*#__PURE__*/React.createElement(\"div\", {\n        key: instanceId,\n        className: \"frame-item-label\",\n        style: {\n          height: frameLabelHeight,\n          background: selected ? frameLabelSelectedColor : frameLabelColor\n        },\n        onClick: () => selectGroup(instanceId, instance.children[0].name),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"frame-item-label-dot\",\n        style: {\n          backgroundColor: getRGBAColor(instance.displayColor, 1)\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 17\n        }\n      }), (ontologyItem === null || ontologyItem === void 0 ? void 0 : ontologyItem.display_name) || (ontologyItem === null || ontologyItem === void 0 ? void 0 : ontologyItem.class_name), instance === null || instance === void 0 ? void 0 : instance.number), (isApproved || isReject || isPending) && /*#__PURE__*/React.createElement(\"div\", {\n        className: cx('frame-item-label-review', {\n          approved: isApproved,\n          rejected: isReject,\n          pending: isPending\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 17\n        }\n      })) : null;\n    }));\n  }\n  render() {\n    var _frames$currentFrame;\n    const {\n      frames,\n      frameLoading,\n      currentFrame\n    } = this.props;\n    const {\n      framesCollapsed,\n      framesHeight\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frame-control\",\n      style: {\n        height: framesHeight + actionsContainerHeight,\n        transition: 'height 0.15s'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frame-actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frame-items-sort\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SortAsc, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 19\n      }\n    })), formatMessage('PROGRESS_SORT_LABEL')), /*#__PURE__*/React.createElement(FrameActions, {\n      currentFrameValid: ((_frames$currentFrame = frames[currentFrame]) === null || _frames$currentFrame === void 0 ? void 0 : _frames$currentFrame.valid) !== false,\n      frameCount: frames.length,\n      frameLoading: frameLoading,\n      currentFrame: currentFrame,\n      setFrame: this.changeFrame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: cx('frame-collapse', {\n        disabled: this.isEmpty,\n        transform: !framesCollapsed\n      }),\n      onClick: this.toggleCollapse,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Up, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frames\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frame-items-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.itemsContainer,\n      className: \"frame-items\",\n      style: {\n        height: framesHeight - 44\n      },\n      onScroll: this.onItemsScroll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 13\n      }\n    }, this.renderItemLabels())), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frame-steps\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.framesContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 13\n      }\n    }))));\n  }\n}","map":{"version":3,"names":["React","cx","isEqual","FrameActions","FramesRenderer","EventAction","Up","SortAsc","formatMessage","rootStore","getRGBAColor","getInstanceFrames","ReviewResult","frameLabelHeight","frameLabelColor","frameLabelSelectedColor","actionsContainerHeight","FrameControl","Component","constructor","args","framesRenderer","framesContainer","createRef","itemsContainer","state","framesCollapsed","framesHeight","visibleFramesIndex","visibleFramesIndexArr","changeFrame","frameIndex","instanceIndex","props","setFrame","undefined","selectedInstence","instances","allInstanceIds","selectGroup","id","children","name","updateHeight","height","setState","onHeightChange","updateVisibleFrames","currentIndex","indexArr","stat","updateItemsScroll","top","current","scroll","onItemsScroll","e","itemsOffset","target","scrollTop","toggleCollapse","isEmpty","scrollable","items","getItems","categoryInstancesMap","Object","values","every","categoryInstances","keys","length","categories","flatMap","sort","a","b","_instanceA$children$","_instanceB$children$","instanceA","instanceB","instanceAFirstFrame","Number","frames","instanceBFirstFrame","instanceACategoryIndex","indexOf","category","instanceBCategoryIndex","number","componentDidMount","on","HEIGHT_CHANGE","VISIBLE_FRAMES_UPDATE","CURRENT_FRAME_CHANGE","ITEMS_OFFSET_CHANGE","invalidFrames","filter","v","valid","map","index","componentDidUpdate","prevProps","_prevProps$selectedIn","_this$props$selectedI","currentFrame","instancesReviewsMap","selectedInstance","componentWillUnmount","removeEventListeners","off","frameColor","instanceReviewsMap","forEach","f","_instanceReviewsMap$f","reviewResult","result","APPROVE","REJECT","SUSPEND","frameStatus","color","displayColor","showCards","selected","global","instanceId","instance","renderItemLabels","ontologyItem","ontology","getOntologyInfo","isReject","isPending","isApproved","allFrameReviews","some","i","createElement","className","style","background","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","backgroundColor","display_color","display_name","class_name","approved","rejected","pending","key","onClick","render","_frames$currentFrame","frameLoading","transition","currentFrameValid","frameCount","disabled","transform","ref","onScroll"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/keypoint/components/FrameContorl/index.tsx"],"sourcesContent":["import React from 'react';\nimport cx from 'classnames';\nimport { isEqual } from 'lodash';\nimport FrameActions from './FrameActions';\nimport FramesRenderer, { FrameItem, EventAction } from '../../../../libs/FramesRenderer';\nimport { Up, SortAsc } from '../../../common/icons';\nimport formatMessage from '../../locales';\nimport rootStore from '../../store/RootStore';\nimport { getRGBAColor, getInstanceFrames } from '../../utils';\nimport { InstanceAct, CategoryInstancesMap, ReviewResult, Image } from '../../types';\nimport { InstancesReviewsMap } from '../../index';\nimport 'antd/es/slider/style/index.css';\nimport './index.scss';\n\ninterface FrameControlProps {\n  frames: Image[];\n  frameLoading: boolean;\n  currentFrame: number;\n  categoryInstancesMap: CategoryInstancesMap;\n  instances: {[id: string] :InstanceAct};\n  selectedInstance: InstanceAct | undefined;\n  selectedInstanceGroup: string;\n  instancesReviewsMap: InstancesReviewsMap;\n  selectGroup: (instanceId: string, name: string) => void;\n  setFrame: (frame: number) => void;\n  onHeightChange: (height: number) => void;\n}\n\ninterface FrameControlState {\n  framesCollapsed: boolean;\n  framesHeight: number;\n  visibleFramesIndex: number;\n  visibleFramesIndexArr: number[];\n}\n\nconst frameLabelHeight = 20;\nconst frameLabelColor = '#343846';\nconst frameLabelSelectedColor = '#292C38';\nconst actionsContainerHeight = 48;\n\nexport default class FrameControl extends React.Component<FrameControlProps, FrameControlState> {\n  framesRenderer: FramesRenderer | null = null;\n\n  framesContainer = React.createRef<HTMLDivElement>();\n\n  itemsContainer = React.createRef<HTMLDivElement>();\n\n  state = {\n    framesCollapsed: true,\n    framesHeight: 64,\n    visibleFramesIndex: 0,\n    visibleFramesIndexArr: [],\n  };\n\n  get isEmpty() {\n    const { categoryInstancesMap } = this.props;\n    return Object.values(categoryInstancesMap).every((categoryInstances) => Object.keys(categoryInstances).length === 0);\n  }\n\n  get allInstanceIds() {\n    const { categoryInstancesMap, instances } = this.props;\n    const categories = Object.keys(categoryInstancesMap);\n    return Object.values(categoryInstancesMap)\n      .flatMap((categoryInstances) => Object.keys(categoryInstances))\n      .sort((a, b) => {\n        const instanceA = instances[a];\n        const instanceB = instances[b];\n        const instanceAFirstFrame = Number(Object.keys(instanceA?.children[0]?.frames)[0] || 0);\n        const instanceBFirstFrame = Number(Object.keys(instanceB?.children[0]?.frames)[0] || 0);\n        if (instanceAFirstFrame > instanceBFirstFrame) {\n          return 1;\n        }\n        if (instanceAFirstFrame < instanceBFirstFrame) {\n          return -1;\n        }\n        const instanceACategoryIndex = categories.indexOf(instanceA?.category || '');\n        const instanceBCategoryIndex = categories.indexOf(instanceB?.category || '');\n        if (instanceACategoryIndex > instanceBCategoryIndex) {\n          return 1;\n        }\n        if (instanceACategoryIndex < instanceBCategoryIndex) {\n          return -1;\n        }\n        return (instanceA?.number || 0) > (instanceB?.number || 0) ? 1 : -1;\n      });\n  }\n\n  componentDidMount() {\n    if (this.framesContainer.current) {\n      this.framesRenderer = new FramesRenderer(this.framesContainer.current, this.props.frames.length);\n      this.framesRenderer.on(EventAction.HEIGHT_CHANGE, this.updateHeight);\n      this.framesRenderer.on(EventAction.VISIBLE_FRAMES_UPDATE, this.updateVisibleFrames);\n      this.framesRenderer.on(EventAction.CURRENT_FRAME_CHANGE, this.changeFrame);\n      this.framesRenderer.on(EventAction.ITEMS_OFFSET_CHANGE, this.updateItemsScroll);\n      this.framesRenderer.items = this.getItems();\n      this.framesRenderer.invalidFrames = this.props.frames.filter((v) => v.valid === false).map((v) => v.index);\n    }\n  }\n\n  componentDidUpdate(prevProps: FrameControlProps) {\n    if (prevProps.currentFrame !== this.props.currentFrame) {\n      // current frame changes\n      if (this.framesRenderer) {\n        this.framesRenderer.currentFrame = this.props.currentFrame;\n      }\n    }\n    if (!isEqual(prevProps.instances, this.props.instances) || !isEqual(prevProps.instancesReviewsMap, this.props.instancesReviewsMap)) {\n      // selected instance frame status changes\n      if (this.framesRenderer) {\n        this.framesRenderer.items = this.getItems();\n      }\n    } else if (prevProps.selectedInstance?.id !== this.props.selectedInstance?.id) {\n      // selected instance changes, or instances changes\n      if (this.framesRenderer) {\n        this.framesRenderer.items = this.getItems();\n      }\n    }\n\n    if (!isEqual(prevProps.frames, this.props.frames) && this.framesRenderer) {\n      this.framesRenderer.invalidFrames = this.props.frames.filter((v) => v.valid === false).map((v) => v.index);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.framesRenderer) {\n      this.framesRenderer.removeEventListeners();\n      this.framesRenderer.off(EventAction.HEIGHT_CHANGE, this.updateHeight);\n      this.framesRenderer.off(EventAction.VISIBLE_FRAMES_UPDATE, this.updateVisibleFrames);\n      this.framesRenderer.off(EventAction.CURRENT_FRAME_CHANGE, this.changeFrame);\n      this.framesRenderer.off(EventAction.ITEMS_OFFSET_CHANGE, this.updateItemsScroll);\n    }\n  }\n\n  changeFrame = (frameIndex: number, instanceIndex?: number) => {\n    this.props.setFrame(frameIndex);\n    if (instanceIndex !== undefined && instanceIndex > -1 && !this.state.framesCollapsed) {\n      const selectedInstence = this.props.instances[this.allInstanceIds[instanceIndex]];\n      this.props.selectGroup(selectedInstence.id, selectedInstence.children[0].name);\n    }\n  };\n\n  getItems(): { [id: string]: FrameItem } {\n    const { selectedInstance, instancesReviewsMap, instances } = this.props;\n    const frameColor: { [frameIndex: number]: string } = {};\n    if (selectedInstance) {\n      const instanceReviewsMap = instancesReviewsMap[selectedInstance.id];\n      if (instanceReviewsMap) {\n        Object.keys(instanceReviewsMap).forEach((f) => {\n          const frameIndex = Number(f);\n          const reviewResult = instanceReviewsMap[frameIndex]?.result;\n          if (reviewResult === ReviewResult.APPROVE) {\n            frameColor[frameIndex] = '#3E6F45';\n          } else if (reviewResult === ReviewResult.REJECT) {\n            frameColor[frameIndex] = '#9C4434';\n          } else if (reviewResult === ReviewResult.SUSPEND) {\n            frameColor[frameIndex] = '#A28900';\n          }\n        });\n      }\n    }\n\n    if (this.state.framesCollapsed) {\n      const frameStatus = getInstanceFrames(selectedInstance);\n      if (selectedInstance) {\n        return {\n          [selectedInstance.id]: {\n            frameStatus,\n            frameColor,\n            color: getRGBAColor(selectedInstance.displayColor),\n            showCards: true,\n            selected: true,\n          },\n        };\n      }\n      return {\n        global: {\n          frameStatus,\n          color: '#5C5F6B',\n          showCards: true,\n          selected: true,\n        },\n      };\n    }\n\n    const items: { [id: string]: FrameItem } = {};\n    this.allInstanceIds.forEach((instanceId) => {\n      const instance = instances[instanceId];\n      items[instanceId] = {\n        frameStatus: {},\n        color: getRGBAColor(instance?.displayColor),\n      };\n    });\n    Object.values(instances).forEach((instance) => {\n      if (instance) {\n        items[instance.id].frameStatus = getInstanceFrames(instance);\n      }\n    });\n    if (selectedInstance) {\n      items[selectedInstance.id].frameColor = frameColor;\n      items[selectedInstance.id].showCards = true;\n      items[selectedInstance.id].selected = true;\n    }\n    return items;\n  }\n\n  updateHeight = (height: number) => {\n    this.setState({ framesHeight: height });\n    this.props.onHeightChange(height + actionsContainerHeight);\n  };\n\n  updateVisibleFrames = (currentIndex: number, indexArr?: number[]) => {\n    this.setState((stat) => ({\n      ...stat,\n      visibleFramesIndex: currentIndex,\n      ...indexArr && { visibleFramesIndexArr: indexArr },\n    }));\n  };\n\n  updateItemsScroll = (top: number) => {\n    if (this.itemsContainer.current) {\n      this.itemsContainer.current.scroll({ top });\n    }\n  };\n\n  onItemsScroll: React.UIEventHandler<HTMLDivElement> = (e) => {\n    if (this.framesRenderer) {\n      this.framesRenderer.itemsOffset = (e.target as HTMLDivElement).scrollTop;\n    }\n  };\n\n  toggleCollapse = () => {\n    if (!this.isEmpty) {\n      this.setState((stat) => ({\n        framesCollapsed: !stat.framesCollapsed,\n      }), () => {\n        // update renderer\n        if (this.framesRenderer) {\n          this.framesRenderer.scrollable = !this.state.framesCollapsed;\n          this.framesRenderer.items = this.getItems();\n        }\n      });\n    }\n  };\n\n  renderItemLabels() {\n    const { instances, selectedInstance, selectGroup } = this.props;\n    const { framesCollapsed } = this.state;\n    if (framesCollapsed) {\n      const ontologyItem = rootStore.ontology.getOntologyInfo(selectedInstance?.category || '');\n      let isReject = false;\n      let isPending = false;\n      let isApproved = false;\n      if (selectedInstance) {\n        const allFrameReviews = Object.values(this.props.instancesReviewsMap[selectedInstance.id] || {});\n        if (allFrameReviews.length > 0) {\n          isReject = allFrameReviews.some((i) => i.result === ReviewResult.REJECT);\n          if (!isReject) {\n            isPending = allFrameReviews.some((i) => i.result === ReviewResult.SUSPEND);\n          }\n          if (!isPending) {\n            isApproved = allFrameReviews.length === this.props.frames.length && allFrameReviews.every((i) => i.result === ReviewResult.APPROVE);\n          }\n        }\n      }\n      return (\n        <div\n          className=\"frame-item-label\"\n          style={{\n            height: frameLabelHeight,\n            background: framesCollapsed ? frameLabelSelectedColor : frameLabelColor,\n          }}\n        >\n          {selectedInstance ? (\n            <>\n              <div>\n                <div\n                  className=\"frame-item-label-dot\"\n                  style={{ backgroundColor: getRGBAColor(ontologyItem?.display_color, 1) }}\n                />\n                { ontologyItem?.display_name || ontologyItem?.class_name }\n                { selectedInstance.number }\n              </div>\n              {(isApproved || isReject || isPending) && (\n                <div\n                  className={cx('frame-item-label-review', {\n                    approved: isApproved,\n                    rejected: isReject,\n                    pending: isPending,\n                  })}\n                />\n              )}\n            </>\n          ) : formatMessage('PROGRESS_GLOBAL_LABEL')}\n        </div>\n      );\n    }\n\n    return (\n      <>\n        {this.allInstanceIds.map((instanceId) => {\n          const instance = instances[instanceId];\n          const selected = selectedInstance && selectedInstance.id === instanceId;\n          const ontologyItem = rootStore.ontology.getOntologyInfo(instance?.category || '');\n          const allFrameReviews = Object.values(this.props.instancesReviewsMap[instanceId] || {});\n          const isReject = allFrameReviews.some((i) => i.result === ReviewResult.REJECT);\n          let isPending = false;\n          let isApproved = false;\n          if (allFrameReviews.length > 0) {\n            if (!isReject) {\n              isPending = allFrameReviews.some((i) => i.result === ReviewResult.SUSPEND);\n            }\n            if (!isPending) {\n              isApproved = allFrameReviews.every((i) => i.result === ReviewResult.APPROVE);\n            }\n          }\n\n          return instance ? (\n            <div\n              key={instanceId}\n              className=\"frame-item-label\"\n              style={{\n                height: frameLabelHeight,\n                background: selected ? frameLabelSelectedColor : frameLabelColor,\n              }}\n              onClick={() => selectGroup(instanceId, instance.children[0].name)}\n            >\n              <div>\n                <div\n                  className=\"frame-item-label-dot\"\n                  style={{ backgroundColor: getRGBAColor(instance.displayColor, 1) }}\n                />\n                { ontologyItem?.display_name || ontologyItem?.class_name }\n                { instance?.number }\n              </div>\n              {(isApproved || isReject || isPending) && (\n                <div\n                  className={cx('frame-item-label-review', {\n                    approved: isApproved,\n                    rejected: isReject,\n                    pending: isPending,\n                  })}\n                />\n              )}\n            </div>\n          ) : null;\n        })}\n      </>\n    );\n  }\n\n  render() {\n    const { frames, frameLoading, currentFrame } = this.props;\n    const { framesCollapsed, framesHeight } = this.state;\n    return (\n      <div\n        className=\"frame-control\"\n        style={{\n          height: framesHeight + actionsContainerHeight,\n          transition: 'height 0.15s',\n        }}\n      >\n        <div className=\"frame-actions\">\n          <div className=\"frame-items-sort\">\n            <span><SortAsc /></span>\n            {formatMessage('PROGRESS_SORT_LABEL')}\n          </div>\n          <FrameActions\n            currentFrameValid={frames[currentFrame]?.valid !== false}\n            frameCount={frames.length}\n            frameLoading={frameLoading}\n            currentFrame={currentFrame}\n            setFrame={this.changeFrame}\n          />\n          <div\n            className={cx('frame-collapse', {\n              disabled: this.isEmpty,\n              transform: !framesCollapsed,\n            })}\n            onClick={this.toggleCollapse}\n          >\n            <Up />\n          </div>\n        </div>\n        <div className=\"frames\">\n          <div className=\"frame-items-container\">\n            <div\n              ref={this.itemsContainer}\n              className=\"frame-items\"\n              style={{ height: framesHeight - 44 }}\n              onScroll={this.onItemsScroll}\n            >\n              {this.renderItemLabels()}\n            </div>\n          </div>\n          <div className=\"frame-steps\">\n            <div ref={this.framesContainer} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}