{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/text-annotation/index.tsx\";\nimport React, { forwardRef, useEffect, useState } from 'react';\nimport { Annotator, Action } from 'poplar-annotation';\nimport { notification } from 'antd';\nimport Container from './components/Container';\nimport './index.css';\nnotification.config({\n  placement: 'bottomRight'\n});\nexport default forwardRef(({\n  mode,\n  ...data\n}, annotator) => {\n  const [savedSelectedCategory, setSelectedCategory] = useState();\n  useEffect(() => {\n    const container = document.getElementById('text-annotator');\n    if (container) {\n      try {\n        annotator.current = new Annotator(data, container);\n      } catch (e) {\n        notification.error({\n          message: 'Initialize Error',\n          description: 'Please check your payload.'\n        });\n      }\n      if (annotator.current) {\n        // set selectedCategory\n        annotator.current.selectedCategory = null;\n        // define the data retrieve func\n        annotator.current.getData = () => {\n          return annotator.current.store.json;\n        };\n\n        // add listeners\n        annotator.current.on('textSelected', (startIndex, endIndex) => {\n          if (mode === 'view') return;\n          const {\n            type,\n            id\n          } = annotator.current.selectedCategory || {};\n          if (type === 'label') {\n            try {\n              if (endIndex - startIndex > 100) {\n                throw new Error('Cannot annotate a label more than 100 in length.');\n              }\n              annotator.current.applyAction(Action.Label.Create(id, startIndex, endIndex));\n            } catch (e) {\n              notification.error({\n                message: e.message\n              });\n            }\n          } else {\n            notification.info({\n              message: 'Please active a label before operation.'\n            });\n          }\n        });\n        annotator.current.on('labelRightClicked', id => {\n          if (mode === 'view') return;\n          try {\n            annotator.current.applyAction(Action.Label.Delete(id));\n          } catch (e) {\n            notification.error({\n              message: e.message\n            });\n          }\n        });\n        annotator.current.on('twoLabelsClicked', (first, second) => {\n          if (mode === 'view') return;\n          const {\n            type,\n            id\n          } = annotator.current.selectedCategory || {};\n          if (type === 'connection') {\n            try {\n              annotator.current.applyAction(Action.Connection.Create(id, first, second));\n            } catch (e) {\n              notification.error({\n                message: e.message\n              });\n            }\n          } else {\n            notification.info({\n              message: 'Please active a connection before operation.'\n            });\n          }\n        });\n        annotator.current.on('connectionRightClicked', id => {\n          if (mode === 'view') return;\n          try {\n            annotator.current.applyAction(Action.Connection.Delete(id));\n          } catch (e) {\n            notification.error({\n              message: e.message\n            });\n          }\n        });\n      }\n    }\n    return () => {\n      var _annotator$current;\n      (_annotator$current = annotator.current) === null || _annotator$current === void 0 ? void 0 : _annotator$current.remove();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const handleCategorySelect = category => {\n    setSelectedCategory(category);\n    if (annotator.current) {\n      annotator.current.selectedCategory = category;\n    }\n  };\n  const handleSvgDownload = () => {\n    if (annotator.current) {\n      const data = annotator.current.export();\n      const blob = new Blob([data]);\n      const filename = `text_annotation_${Date.now()}.svg`;\n      const link = document.createElement('a');\n      link.href = URL.createObjectURL(blob);\n      link.download = filename;\n      link.rel = 'noopener';\n      link.click();\n    }\n  };\n  return /*#__PURE__*/React.createElement(Container, {\n    mode: mode,\n    labels: (data === null || data === void 0 ? void 0 : data.labelCategories) || [],\n    connections: (data === null || data === void 0 ? void 0 : data.connectionCategories) || [],\n    selectedCategory: savedSelectedCategory,\n    onCategorySelect: handleCategorySelect,\n    onImageDownload: handleSvgDownload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"text-annotator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }));\n});","map":{"version":3,"names":["React","forwardRef","useEffect","useState","Annotator","Action","notification","Container","config","placement","mode","data","annotator","savedSelectedCategory","setSelectedCategory","container","document","getElementById","current","e","error","message","description","selectedCategory","getData","store","json","on","startIndex","endIndex","type","id","Error","applyAction","Label","Create","info","Delete","first","second","Connection","_annotator$current","remove","handleCategorySelect","category","handleSvgDownload","export","blob","Blob","filename","Date","now","link","createElement","href","URL","createObjectURL","download","rel","click","labels","labelCategories","connections","connectionCategories","onCategorySelect","onImageDownload","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/text-annotation/index.tsx"],"sourcesContent":["import React, { forwardRef, useEffect, useState } from 'react';\nimport { Annotator, Action } from 'poplar-annotation';\nimport { notification } from 'antd';\nimport Container, { SelectedCategory } from './components/Container';\nimport { Paylod } from './payload';\nimport './index.css';\n\nnotification.config({\n  placement: 'bottomRight',\n});\n\nexport default forwardRef(({ mode, ...data }: Paylod, annotator: any) => {\n  const [savedSelectedCategory, setSelectedCategory] = useState<SelectedCategory>();\n\n  useEffect(() => {\n    const container = document.getElementById('text-annotator');\n    if (container) {\n      try {\n        annotator.current = new Annotator(data, container);\n      } catch (e) {\n        notification.error({\n          message: 'Initialize Error',\n          description: 'Please check your payload.',\n        });\n      }\n\n      if (annotator.current) {\n        // set selectedCategory\n        annotator.current.selectedCategory = null;\n        // define the data retrieve func\n        annotator.current.getData = () => {\n          return annotator.current.store.json;\n        }\n\n        // add listeners\n        annotator.current.on('textSelected', (startIndex: number, endIndex: number) => {\n          if (mode === 'view') return;\n\n          const { type, id } = annotator.current.selectedCategory || {};\n          if (type === 'label') {\n            try {\n              if (endIndex - startIndex > 100) {\n                throw new Error('Cannot annotate a label more than 100 in length.');\n              }\n              annotator.current.applyAction(Action.Label.Create(id, startIndex, endIndex));\n            } catch (e) {\n              notification.error({ message: e.message });\n            }\n          } else {\n            notification.info({ message: 'Please active a label before operation.' });\n          }\n        });\n        annotator.current.on('labelRightClicked', (id: number) => {\n          if (mode === 'view') return;\n\n          try {\n            annotator.current.applyAction(Action.Label.Delete(id));\n          } catch (e) {\n            notification.error({ message: e.message });\n          }\n        });\n        annotator.current.on('twoLabelsClicked', (first: number, second: number) => {\n          if (mode === 'view') return;\n\n          const { type, id } = annotator.current.selectedCategory || {};\n          if (type === 'connection') {\n            try {\n              annotator.current.applyAction(Action.Connection.Create(id, first, second));\n            } catch (e) {\n              notification.error({ message: e.message });\n            }\n          } else {\n            notification.info({ message: 'Please active a connection before operation.' });\n          }\n        });\n        annotator.current.on('connectionRightClicked', (id: number) => {\n          if (mode === 'view') return;\n\n          try {\n            annotator.current.applyAction(Action.Connection.Delete(id));\n          } catch (e) {\n            notification.error({ message: e.message });\n          }\n        });\n      }\n    }\n\n    return () => {\n      annotator.current?.remove();\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleCategorySelect = (category: SelectedCategory) => {\n    setSelectedCategory(category);\n    if (annotator.current) {\n      annotator.current.selectedCategory = category;\n    }\n  };\n\n  const handleSvgDownload = () => {\n    if (annotator.current) {\n      const data = annotator.current.export();\n      const blob = new Blob([data]);\n      const filename = `text_annotation_${Date.now()}.svg`;\n\n      const link = document.createElement('a');\n      link.href = URL.createObjectURL(blob);\n      link.download = filename;\n      link.rel = 'noopener';\n      link.click();\n    }\n  };\n\n  return (\n    <Container\n      mode={mode}\n      labels={data?.labelCategories || []}\n      connections={data?.connectionCategories || []}\n      selectedCategory={savedSelectedCategory}\n      onCategorySelect={handleCategorySelect}\n      onImageDownload={handleSvgDownload}\n    >\n      <div id=\"text-annotator\" />\n    </Container>\n  );\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}