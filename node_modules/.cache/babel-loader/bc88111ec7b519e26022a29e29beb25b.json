{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking2/components/attributes/InstanceInfo.tsx\";\nimport React, { useState } from 'react';\nimport { observer } from 'mobx-react';\nimport cx from 'classnames';\nimport { Up } from '../../../common/icons';\nimport store from '../../store/RootStore';\nimport i18n from '../../locales';\nimport { calcShapeArea } from '../../utils';\nimport { ShapeInfoItem } from '../../types';\nimport { ShapeType } from '../../../common/shapes/types';\nconst InstanceInfo = observer(({\n  instance,\n  instanceItem\n}) => {\n  const [collapsed, setCollapsed] = useState(false);\n  const renderInstanceCamera = () => {\n    const {\n      currentCamera,\n      cameraNames\n    } = store.frame;\n    const cameraIndex = cameraNames.indexOf(currentCamera);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"divider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"value-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"value-item-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }, i18n.translate('INSTANCE_INFO_INSTANCE_CAMERA_RELATED')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"value-item-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, i18n.translate('INSTANCE_INFO_INSTANCE_CAMERA_RELATED_COUNT', {\n      values: {\n        count: instance.existedCameras.length\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"value-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"value-item-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, i18n.translate('INSTANCE_INFO_INSTANCE_CAMERA_CURRENT')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"value-item-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, `C${cameraIndex + 1}-${currentCamera}`)));\n  };\n  const renderShapeInfo = () => {\n    var _instanceItem$cameras;\n    if (!instanceItem) {\n      return null;\n    }\n    const {\n      currentCamera,\n      currentFrame\n    } = store.frame;\n    const frameData = (_instanceItem$cameras = instanceItem.cameras[currentCamera]) === null || _instanceItem$cameras === void 0 ? void 0 : _instanceItem$cameras.frames[currentFrame];\n    if (!frameData) {\n      return i18n.translate('INSTANCE_INFO_ITEM_EMPTY');\n    }\n    const {\n      shapeType,\n      shape\n    } = frameData;\n    const {\n      shapeInfoItems\n    } = store.config;\n    const showArea = shapeInfoItems.includes(ShapeInfoItem.AREA) && (shapeType === ShapeType.POLYGON || shapeType === ShapeType.RECTANGLE || shapeType === ShapeType.ELLIPSE);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"value-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"value-item-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, i18n.translate('SHAPE_ATTRIBUTES_TYPE')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"value-item-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, i18n.translate(`SHAPE_${shapeType.toUpperCase()}`))), showArea && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"value-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"value-item-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, i18n.translate('SHAPE_ATTRIBUTES_AREA')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"value-item-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, `${calcShapeArea(shapeType, shape).toFixed(2)}px`)));\n  };\n  const {\n    currentFrame,\n    isSingleCamera\n  } = store.frame;\n  const showInstance = !instanceItem || instance.isSingle;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cx('collapse-panel', {\n      collapsed\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"collapse-panel-title\",\n    onClick: () => setCollapsed(!collapsed),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"collapse-panel-collapse-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Up, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  })), i18n.translate(showInstance ? 'INSTANCE_INFO_INSTANCE' : 'INSTANCE_INFO_ITEM')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"collapse-panel-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, showInstance && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"instance-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"instance-label-dot\",\n    style: {\n      backgroundColor: instance.categoryRef.displayColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }), instance.label), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, i18n.translate('INSTANCE_INFO_INSTANCE_CAMERA_SUMMARY', {\n    values: {\n      frame: currentFrame + 1,\n      count: Object.keys(instance.frameStatus).length\n    }\n  })), !isSingleCamera && renderInstanceCamera(), instanceItem && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 30\n    }\n  })), renderShapeInfo()));\n});\nexport default InstanceInfo;","map":{"version":3,"names":["React","useState","observer","cx","Up","store","i18n","calcShapeArea","ShapeInfoItem","ShapeType","InstanceInfo","instance","instanceItem","collapsed","setCollapsed","renderInstanceCamera","currentCamera","cameraNames","frame","cameraIndex","indexOf","createElement","Fragment","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","translate","values","count","existedCameras","length","renderShapeInfo","_instanceItem$cameras","currentFrame","frameData","cameras","frames","shapeType","shape","shapeInfoItems","config","showArea","includes","AREA","POLYGON","RECTANGLE","ELLIPSE","toUpperCase","toFixed","isSingleCamera","showInstance","isSingle","onClick","style","backgroundColor","categoryRef","displayColor","label","Object","keys","frameStatus"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking2/components/attributes/InstanceInfo.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { observer } from 'mobx-react';\nimport cx from 'classnames';\nimport { Up } from '../../../common/icons';\nimport store from '../../store/RootStore';\nimport i18n from '../../locales';\nimport { calcShapeArea } from '../../utils';\nimport { ShapeInfoItem } from '../../types';\nimport Instance from '../../model/Instance';\nimport InstanceItem from '../../model/InstanceItem';\nimport { ShapeType } from '../../../common/shapes/types';\n\nconst InstanceInfo = observer(({ instance, instanceItem }: {\n  instance: Instance;\n  instanceItem?: InstanceItem;\n}) => {\n  const [collapsed, setCollapsed] = useState(false);\n\n  const renderInstanceCamera = () => {\n    const { currentCamera, cameraNames } = store.frame;\n    const cameraIndex = cameraNames.indexOf(currentCamera);\n    return (\n      <>\n        <div className=\"divider\" />\n        <div className=\"value-item\">\n          <div className=\"value-item-label\">{i18n.translate('INSTANCE_INFO_INSTANCE_CAMERA_RELATED')}</div>\n          <div className=\"value-item-value\">{i18n.translate('INSTANCE_INFO_INSTANCE_CAMERA_RELATED_COUNT', { values: { count: instance.existedCameras.length } })}</div>\n        </div>\n        <div className=\"value-item\">\n          <div className=\"value-item-label\">{i18n.translate('INSTANCE_INFO_INSTANCE_CAMERA_CURRENT')}</div>\n          <div className=\"value-item-value\">{`C${cameraIndex + 1}-${currentCamera}`}</div>\n        </div>\n      </>\n    );\n  };\n\n  const renderShapeInfo = () => {\n    if (!instanceItem) {\n      return null;\n    }\n    const { currentCamera, currentFrame } = store.frame;\n    const frameData = instanceItem.cameras[currentCamera]?.frames[currentFrame];\n    if (!frameData) {\n      return i18n.translate('INSTANCE_INFO_ITEM_EMPTY');\n    }\n    const { shapeType, shape } = frameData;\n    const { shapeInfoItems } = store.config;\n    const showArea = shapeInfoItems.includes(ShapeInfoItem.AREA)\n      && (shapeType === ShapeType.POLYGON || shapeType === ShapeType.RECTANGLE || shapeType === ShapeType.ELLIPSE);\n    return (\n      <>\n        <div className=\"value-item\">\n          <div className=\"value-item-label\">{i18n.translate('SHAPE_ATTRIBUTES_TYPE')}</div>\n          <div className=\"value-item-value\">{i18n.translate(`SHAPE_${shapeType.toUpperCase()}`)}</div>\n        </div>\n        {showArea && (\n          <div className=\"value-item\">\n            <div className=\"value-item-label\">{i18n.translate('SHAPE_ATTRIBUTES_AREA')}</div>\n            <div className=\"value-item-value\">\n              {`${calcShapeArea(shapeType, shape).toFixed(2)}px`}\n            </div>\n          </div>\n        )}\n      </>\n    );\n  };\n\n  const { currentFrame, isSingleCamera } = store.frame;\n  const showInstance = !instanceItem || instance.isSingle;\n  return (\n    <div\n      className={cx('collapse-panel', {\n        collapsed,\n      })}\n    >\n      <div className=\"collapse-panel-title\" onClick={() => setCollapsed(!collapsed)}>\n        <div className=\"collapse-panel-collapse-icon\">\n          <Up />\n        </div>\n        {i18n.translate(showInstance ? 'INSTANCE_INFO_INSTANCE' : 'INSTANCE_INFO_ITEM')}\n      </div>\n      <div className=\"collapse-panel-content\">\n        {showInstance && (\n          <>\n            <div className=\"instance-label\">\n              <div\n                className=\"instance-label-dot\"\n                style={{ backgroundColor: instance.categoryRef.displayColor }}\n              />\n              {instance.label}\n            </div>\n            <div>\n              {i18n.translate('INSTANCE_INFO_INSTANCE_CAMERA_SUMMARY', {\n                values: {\n                  frame: currentFrame + 1,\n                  count: Object.keys(instance.frameStatus).length,\n                },\n              })}\n            </div>\n            {!isSingleCamera && renderInstanceCamera()}\n            {instanceItem && <div className=\"divider\" />}\n          </>\n        )}\n        {renderShapeInfo()}\n      </div>\n    </div>\n  );\n});\n\nexport default InstanceInfo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}