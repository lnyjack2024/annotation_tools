{"ast":null,"code":"/*!\n * wavesurfer.js 5.2.0 (2021-08-16)\n * https://wavesurfer-js.org\n * @license BSD-3-Clause\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define(\"WaveSurfer\", [], factory);else if (typeof exports === 'object') exports[\"WaveSurfer\"] = factory();else root[\"WaveSurfer\"] = factory();\n})(self, function () {\n  return /******/(() => {\n    // webpackBootstrap\n    /******/\n    var __webpack_modules__ = {\n      /***/\"./src/drawer.canvasentry.js\": (\n      /*!***********************************!*\\\n        !*** ./src/drawer.canvasentry.js ***!\n        \\***********************************/\n      /***/\n      (module, exports, __webpack_require__) => {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.default = void 0;\n        var _style = _interopRequireDefault(__webpack_require__(/*! ./util/style */\"./src/util/style.js\"));\n        var _getId = _interopRequireDefault(__webpack_require__(/*! ./util/get-id */\"./src/util/get-id.js\"));\n        function _interopRequireDefault(obj) {\n          return obj && obj.__esModule ? obj : {\n            default: obj\n          };\n        }\n        function _classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n        function _defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n        function _createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) _defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n\n        /**\n         * The `CanvasEntry` class represents an element consisting of a wave `canvas`\n         * and an (optional) progress wave `canvas`.\n         *\n         * The `MultiCanvas` renderer uses one or more `CanvasEntry` instances to\n         * render a waveform, depending on the zoom level.\n         */\n        var CanvasEntry = /*#__PURE__*/function () {\n          function CanvasEntry() {\n            _classCallCheck(this, CanvasEntry);\n\n            /**\n             * The wave node\n             *\n             * @type {HTMLCanvasElement}\n             */\n            this.wave = null;\n            /**\n             * The wave canvas rendering context\n             *\n             * @type {CanvasRenderingContext2D}\n             */\n\n            this.waveCtx = null;\n            /**\n             * The (optional) progress wave node\n             *\n             * @type {HTMLCanvasElement}\n             */\n\n            this.progress = null;\n            /**\n             * The (optional) progress wave canvas rendering context\n             *\n             * @type {CanvasRenderingContext2D}\n             */\n\n            this.progressCtx = null;\n            /**\n             * Start of the area the canvas should render, between 0 and 1\n             *\n             * @type {number}\n             */\n\n            this.start = 0;\n            /**\n             * End of the area the canvas should render, between 0 and 1\n             *\n             * @type {number}\n             */\n\n            this.end = 1;\n            /**\n             * Unique identifier for this entry\n             *\n             * @type {string}\n             */\n\n            this.id = (0, _getId.default)(typeof this.constructor.name !== 'undefined' ? this.constructor.name.toLowerCase() + '_' : 'canvasentry_');\n            /**\n             * Canvas 2d context attributes\n             *\n             * @type {object}\n             */\n\n            this.canvasContextAttributes = {};\n          }\n          /**\n           * Store the wave canvas element and create the 2D rendering context\n           *\n           * @param {HTMLCanvasElement} element The wave `canvas` element.\n           */\n\n          _createClass(CanvasEntry, [{\n            key: \"initWave\",\n            value: function initWave(element) {\n              this.wave = element;\n              this.waveCtx = this.wave.getContext('2d', this.canvasContextAttributes);\n            }\n            /**\n             * Store the progress wave canvas element and create the 2D rendering\n             * context\n             *\n             * @param {HTMLCanvasElement} element The progress wave `canvas` element.\n             */\n          }, {\n            key: \"initProgress\",\n            value: function initProgress(element) {\n              this.progress = element;\n              this.progressCtx = this.progress.getContext('2d', this.canvasContextAttributes);\n            }\n            /**\n             * Update the dimensions\n             *\n             * @param {number} elementWidth Width of the entry\n             * @param {number} totalWidth Total width of the multi canvas renderer\n             * @param {number} width The new width of the element\n             * @param {number} height The new height of the element\n             */\n          }, {\n            key: \"updateDimensions\",\n            value: function updateDimensions(elementWidth, totalWidth, width, height) {\n              // where the canvas starts and ends in the waveform, represented as a\n              // decimal between 0 and 1\n              this.start = this.wave.offsetLeft / totalWidth || 0;\n              this.end = this.start + elementWidth / totalWidth; // set wave canvas dimensions\n\n              this.wave.width = width;\n              this.wave.height = height;\n              var elementSize = {\n                width: elementWidth + 'px'\n              };\n              (0, _style.default)(this.wave, elementSize);\n              if (this.hasProgressCanvas) {\n                // set progress canvas dimensions\n                this.progress.width = width;\n                this.progress.height = height;\n                (0, _style.default)(this.progress, elementSize);\n              }\n            }\n            /**\n             * Clear the wave and progress rendering contexts\n             */\n          }, {\n            key: \"clearWave\",\n            value: function clearWave() {\n              // wave\n              this.waveCtx.clearRect(0, 0, this.waveCtx.canvas.width, this.waveCtx.canvas.height); // progress\n\n              if (this.hasProgressCanvas) {\n                this.progressCtx.clearRect(0, 0, this.progressCtx.canvas.width, this.progressCtx.canvas.height);\n              }\n            }\n            /**\n             * Set the fill styles for wave and progress\n             *\n             * @param {string} waveColor Fill color for the wave canvas\n             * @param {?string} progressColor Fill color for the progress canvas\n             */\n          }, {\n            key: \"setFillStyles\",\n            value: function setFillStyles(waveColor, progressColor) {\n              this.waveCtx.fillStyle = waveColor;\n              if (this.hasProgressCanvas) {\n                this.progressCtx.fillStyle = progressColor;\n              }\n            }\n            /**\n             * Set the canvas transforms for wave and progress\n             *\n             * @param {boolean} vertical Whether to render vertically\n             */\n          }, {\n            key: \"applyCanvasTransforms\",\n            value: function applyCanvasTransforms(vertical) {\n              if (vertical) {\n                // Reflect the waveform across the line y = -x\n                this.waveCtx.setTransform(0, 1, 1, 0, 0, 0);\n                if (this.hasProgressCanvas) {\n                  this.progressCtx.setTransform(0, 1, 1, 0, 0, 0);\n                }\n              }\n            }\n            /**\n             * Draw a rectangle for wave and progress\n             *\n             * @param {number} x X start position\n             * @param {number} y Y start position\n             * @param {number} width Width of the rectangle\n             * @param {number} height Height of the rectangle\n             * @param {number} radius Radius of the rectangle\n             */\n          }, {\n            key: \"fillRects\",\n            value: function fillRects(x, y, width, height, radius) {\n              this.fillRectToContext(this.waveCtx, x, y, width, height, radius);\n              if (this.hasProgressCanvas) {\n                this.fillRectToContext(this.progressCtx, x, y, width, height, radius);\n              }\n            }\n            /**\n             * Draw the actual rectangle on a `canvas` element\n             *\n             * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n             * @param {number} x X start position\n             * @param {number} y Y start position\n             * @param {number} width Width of the rectangle\n             * @param {number} height Height of the rectangle\n             * @param {number} radius Radius of the rectangle\n             */\n          }, {\n            key: \"fillRectToContext\",\n            value: function fillRectToContext(ctx, x, y, width, height, radius) {\n              if (!ctx) {\n                return;\n              }\n              if (radius) {\n                this.drawRoundedRect(ctx, x, y, width, height, radius);\n              } else {\n                ctx.fillRect(x, y, width, height);\n              }\n            }\n            /**\n             * Draw a rounded rectangle on Canvas\n             *\n             * @param {CanvasRenderingContext2D} ctx Canvas context\n             * @param {number} x X-position of the rectangle\n             * @param {number} y Y-position of the rectangle\n             * @param {number} width Width of the rectangle\n             * @param {number} height Height of the rectangle\n             * @param {number} radius Radius of the rectangle\n             *\n             * @return {void}\n             * @example drawRoundedRect(ctx, 50, 50, 5, 10, 3)\n             */\n          }, {\n            key: \"drawRoundedRect\",\n            value: function drawRoundedRect(ctx, x, y, width, height, radius) {\n              if (height === 0) {\n                return;\n              } // peaks are float values from -1 to 1. Use absolute height values in\n              // order to correctly calculate rounded rectangle coordinates\n\n              if (height < 0) {\n                height *= -1;\n                y -= height;\n              }\n              ctx.beginPath();\n              ctx.moveTo(x + radius, y);\n              ctx.lineTo(x + width - radius, y);\n              ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n              ctx.lineTo(x + width, y + height - radius);\n              ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n              ctx.lineTo(x + radius, y + height);\n              ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n              ctx.lineTo(x, y + radius);\n              ctx.quadraticCurveTo(x, y, x + radius, y);\n              ctx.closePath();\n              ctx.fill();\n            }\n            /**\n             * Render the actual wave and progress lines\n             *\n             * @param {number[]} peaks Array with peaks data\n             * @param {number} absmax Maximum peak value (absolute)\n             * @param {number} halfH Half the height of the waveform\n             * @param {number} offsetY Offset to the top\n             * @param {number} start The x-offset of the beginning of the area that\n             * should be rendered\n             * @param {number} end The x-offset of the end of the area that\n             * should be rendered\n             */\n          }, {\n            key: \"drawLines\",\n            value: function drawLines(peaks, absmax, halfH, offsetY, start, end) {\n              this.drawLineToContext(this.waveCtx, peaks, absmax, halfH, offsetY, start, end);\n              if (this.hasProgressCanvas) {\n                this.drawLineToContext(this.progressCtx, peaks, absmax, halfH, offsetY, start, end);\n              }\n            }\n            /**\n             * Render the actual waveform line on a `canvas` element\n             *\n             * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n             * @param {number[]} peaks Array with peaks data\n             * @param {number} absmax Maximum peak value (absolute)\n             * @param {number} halfH Half the height of the waveform\n             * @param {number} offsetY Offset to the top\n             * @param {number} start The x-offset of the beginning of the area that\n             * should be rendered\n             * @param {number} end The x-offset of the end of the area that\n             * should be rendered\n             */\n          }, {\n            key: \"drawLineToContext\",\n            value: function drawLineToContext(ctx, peaks, absmax, halfH, offsetY, start, end) {\n              if (!ctx) {\n                return;\n              }\n              var length = peaks.length / 2;\n              var first = Math.round(length * this.start); // use one more peak value to make sure we join peaks at ends -- unless,\n              // of course, this is the last canvas\n\n              var last = Math.round(length * this.end) + 1;\n              var canvasStart = first;\n              var canvasEnd = last;\n              var scale = this.wave.width / (canvasEnd - canvasStart - 1); // optimization\n\n              var halfOffset = halfH + offsetY;\n              var absmaxHalf = absmax / halfH;\n              ctx.beginPath();\n              ctx.moveTo((canvasStart - first) * scale, halfOffset);\n              ctx.lineTo((canvasStart - first) * scale, halfOffset - Math.round((peaks[2 * canvasStart] || 0) / absmaxHalf));\n              var i, peak, h;\n              for (i = canvasStart; i < canvasEnd; i++) {\n                peak = peaks[2 * i] || 0;\n                h = Math.round(peak / absmaxHalf);\n                ctx.lineTo((i - first) * scale + this.halfPixel, halfOffset - h);\n              } // draw the bottom edge going backwards, to make a single\n              // closed hull to fill\n\n              var j = canvasEnd - 1;\n              for (j; j >= canvasStart; j--) {\n                peak = peaks[2 * j + 1] || 0;\n                h = Math.round(peak / absmaxHalf);\n                ctx.lineTo((j - first) * scale + this.halfPixel, halfOffset - h);\n              }\n              ctx.lineTo((canvasStart - first) * scale, halfOffset - Math.round((peaks[2 * canvasStart + 1] || 0) / absmaxHalf));\n              ctx.closePath();\n              ctx.fill();\n            }\n            /**\n             * Destroys this entry\n             */\n          }, {\n            key: \"destroy\",\n            value: function destroy() {\n              this.waveCtx = null;\n              this.wave = null;\n              this.progressCtx = null;\n              this.progress = null;\n            }\n            /**\n             * Return image data of the wave `canvas` element\n             *\n             * When using a `type` of `'blob'`, this will return a `Promise` that\n             * resolves with a `Blob` instance.\n             *\n             * @param {string} format='image/png' An optional value of a format type.\n             * @param {number} quality=0.92 An optional value between 0 and 1.\n             * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\n             * @return {string|Promise} When using the default `'dataURL'` `type` this\n             * returns a data URL. When using the `'blob'` `type` this returns a\n             * `Promise` that resolves with a `Blob` instance.\n             */\n          }, {\n            key: \"getImage\",\n            value: function getImage(format, quality, type) {\n              var _this = this;\n              if (type === 'blob') {\n                return new Promise(function (resolve) {\n                  _this.wave.toBlob(resolve, format, quality);\n                });\n              } else if (type === 'dataURL') {\n                return this.wave.toDataURL(format, quality);\n              }\n            }\n          }]);\n          return CanvasEntry;\n        }();\n        exports.default = CanvasEntry;\n        module.exports = exports.default;\n\n        /***/\n      }),\n      /***/\"./src/drawer.js\": (\n      /*!***********************!*\\\n        !*** ./src/drawer.js ***!\n        \\***********************/\n      /***/\n      (module, exports, __webpack_require__) => {\n        \"use strict\";\n\n        function _typeof(obj) {\n          \"@babel/helpers - typeof\";\n\n          if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n            _typeof = function _typeof(obj) {\n              return typeof obj;\n            };\n          } else {\n            _typeof = function _typeof(obj) {\n              return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n            };\n          }\n          return _typeof(obj);\n        }\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.default = void 0;\n        var util = _interopRequireWildcard(__webpack_require__(/*! ./util */\"./src/util/index.js\"));\n        function _getRequireWildcardCache(nodeInterop) {\n          if (typeof WeakMap !== \"function\") return null;\n          var cacheBabelInterop = new WeakMap();\n          var cacheNodeInterop = new WeakMap();\n          return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n            return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n          })(nodeInterop);\n        }\n        function _interopRequireWildcard(obj, nodeInterop) {\n          if (!nodeInterop && obj && obj.__esModule) {\n            return obj;\n          }\n          if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n            return {\n              default: obj\n            };\n          }\n          var cache = _getRequireWildcardCache(nodeInterop);\n          if (cache && cache.has(obj)) {\n            return cache.get(obj);\n          }\n          var newObj = {};\n          var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n          for (var key in obj) {\n            if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n              var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n              if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n              } else {\n                newObj[key] = obj[key];\n              }\n            }\n          }\n          newObj.default = obj;\n          if (cache) {\n            cache.set(obj, newObj);\n          }\n          return newObj;\n        }\n        function _classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n        function _defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n        function _createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) _defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n        function _inherits(subClass, superClass) {\n          if (typeof superClass !== \"function\" && superClass !== null) {\n            throw new TypeError(\"Super expression must either be null or a function\");\n          }\n          subClass.prototype = Object.create(superClass && superClass.prototype, {\n            constructor: {\n              value: subClass,\n              writable: true,\n              configurable: true\n            }\n          });\n          if (superClass) _setPrototypeOf(subClass, superClass);\n        }\n        function _setPrototypeOf(o, p) {\n          _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n            o.__proto__ = p;\n            return o;\n          };\n          return _setPrototypeOf(o, p);\n        }\n        function _createSuper(Derived) {\n          var hasNativeReflectConstruct = _isNativeReflectConstruct();\n          return function _createSuperInternal() {\n            var Super = _getPrototypeOf(Derived),\n              result;\n            if (hasNativeReflectConstruct) {\n              var NewTarget = _getPrototypeOf(this).constructor;\n              result = Reflect.construct(Super, arguments, NewTarget);\n            } else {\n              result = Super.apply(this, arguments);\n            }\n            return _possibleConstructorReturn(this, result);\n          };\n        }\n        function _possibleConstructorReturn(self, call) {\n          if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n            return call;\n          } else if (call !== void 0) {\n            throw new TypeError(\"Derived constructors may only return object or undefined\");\n          }\n          return _assertThisInitialized(self);\n        }\n        function _assertThisInitialized(self) {\n          if (self === void 0) {\n            throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n          }\n          return self;\n        }\n        function _isNativeReflectConstruct() {\n          if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n          if (Reflect.construct.sham) return false;\n          if (typeof Proxy === \"function\") return true;\n          try {\n            Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n            return true;\n          } catch (e) {\n            return false;\n          }\n        }\n        function _getPrototypeOf(o) {\n          _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n            return o.__proto__ || Object.getPrototypeOf(o);\n          };\n          return _getPrototypeOf(o);\n        }\n\n        /**\n         * Parent class for renderers\n         *\n         * @extends {Observer}\n         */\n        var Drawer = /*#__PURE__*/function (_util$Observer) {\n          _inherits(Drawer, _util$Observer);\n          var _super = _createSuper(Drawer);\n\n          /**\n           * @param {HTMLElement} container The container node of the wavesurfer instance\n           * @param {WavesurferParams} params The wavesurfer initialisation options\n           */\n          function Drawer(container, params) {\n            var _this;\n            _classCallCheck(this, Drawer);\n            _this = _super.call(this);\n            _this.container = util.withOrientation(container, params.vertical);\n            /**\n             * @type {WavesurferParams}\n             */\n\n            _this.params = params;\n            /**\n             * The width of the renderer\n             * @type {number}\n             */\n\n            _this.width = 0;\n            /**\n             * The height of the renderer\n             * @type {number}\n             */\n\n            _this.height = params.height * _this.params.pixelRatio;\n            _this.lastPos = 0;\n            /**\n             * The `<wave>` element which is added to the container\n             * @type {HTMLElement}\n             */\n\n            _this.wrapper = null;\n            return _this;\n          }\n          /**\n           * Alias of `util.style`\n           *\n           * @param {HTMLElement} el The element that the styles will be applied to\n           * @param {Object} styles The map of propName: attribute, both are used as-is\n           * @return {HTMLElement} el\n           */\n\n          _createClass(Drawer, [{\n            key: \"style\",\n            value: function style(el, styles) {\n              return util.style(el, styles);\n            }\n            /**\n             * Create the wrapper `<wave>` element, style it and set up the events for\n             * interaction\n             */\n          }, {\n            key: \"createWrapper\",\n            value: function createWrapper() {\n              this.wrapper = util.withOrientation(this.container.appendChild(document.createElement('wave')), this.params.vertical);\n              this.style(this.wrapper, {\n                display: 'block',\n                position: 'relative',\n                userSelect: 'none',\n                webkitUserSelect: 'none',\n                height: this.params.height + 'px'\n              });\n              if (this.params.fillParent || this.params.scrollParent) {\n                this.style(this.wrapper, {\n                  width: '100%',\n                  overflowX: this.params.hideScrollbar ? 'hidden' : 'auto',\n                  overflowY: 'hidden'\n                });\n              }\n              this.setupWrapperEvents();\n            }\n            /**\n             * Handle click event\n             *\n             * @param {Event} e Click event\n             * @param {?boolean} noPrevent Set to true to not call `e.preventDefault()`\n             * @return {number} Playback position from 0 to 1\n             */\n          }, {\n            key: \"handleEvent\",\n            value: function handleEvent(e, noPrevent) {\n              !noPrevent && e.preventDefault();\n              var clientX = util.withOrientation(e.targetTouches ? e.targetTouches[0] : e, this.params.vertical).clientX;\n              var bbox = this.wrapper.getBoundingClientRect();\n              var nominalWidth = this.width;\n              var parentWidth = this.getWidth();\n              var progressPixels = this.getProgressPixels(bbox, clientX);\n              var progress;\n              if (!this.params.fillParent && nominalWidth < parentWidth) {\n                progress = progressPixels * (this.params.pixelRatio / nominalWidth) || 0;\n              } else {\n                progress = (progressPixels + this.wrapper.scrollLeft) / this.wrapper.scrollWidth || 0;\n              }\n              return util.clamp(progress, 0, 1);\n            }\n          }, {\n            key: \"getProgressPixels\",\n            value: function getProgressPixels(wrapperBbox, clientX) {\n              if (this.params.rtl) {\n                return wrapperBbox.right - clientX;\n              } else {\n                return clientX - wrapperBbox.left;\n              }\n            }\n          }, {\n            key: \"setupWrapperEvents\",\n            value: function setupWrapperEvents() {\n              var _this2 = this;\n              this.wrapper.addEventListener('click', function (e) {\n                var orientedEvent = util.withOrientation(e, _this2.params.vertical);\n                var scrollbarHeight = _this2.wrapper.offsetHeight - _this2.wrapper.clientHeight;\n                if (scrollbarHeight !== 0) {\n                  // scrollbar is visible.  Check if click was on it\n                  var bbox = _this2.wrapper.getBoundingClientRect();\n                  if (orientedEvent.clientY >= bbox.bottom - scrollbarHeight) {\n                    // ignore mousedown as it was on the scrollbar\n                    return;\n                  }\n                }\n                if (_this2.params.interact) {\n                  _this2.fireEvent('click', e, _this2.handleEvent(e));\n                }\n              });\n              this.wrapper.addEventListener('dblclick', function (e) {\n                if (_this2.params.interact) {\n                  _this2.fireEvent('dblclick', e, _this2.handleEvent(e));\n                }\n              });\n              this.wrapper.addEventListener('scroll', function (e) {\n                return _this2.fireEvent('scroll', e);\n              });\n            }\n            /**\n             * Draw peaks on the canvas\n             *\n             * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n             * for split channel rendering\n             * @param {number} length The width of the area that should be drawn\n             * @param {number} start The x-offset of the beginning of the area that\n             * should be rendered\n             * @param {number} end The x-offset of the end of the area that should be\n             * rendered\n             */\n          }, {\n            key: \"drawPeaks\",\n            value: function drawPeaks(peaks, length, start, end) {\n              if (!this.setWidth(length)) {\n                this.clearWave();\n              }\n              this.params.barWidth ? this.drawBars(peaks, 0, start, end) : this.drawWave(peaks, 0, start, end);\n            }\n            /**\n             * Scroll to the beginning\n             */\n          }, {\n            key: \"resetScroll\",\n            value: function resetScroll() {\n              if (this.wrapper !== null) {\n                this.wrapper.scrollLeft = 0;\n              }\n            }\n            /**\n             * Recenter the view-port at a certain percent of the waveform\n             *\n             * @param {number} percent Value from 0 to 1 on the waveform\n             */\n          }, {\n            key: \"recenter\",\n            value: function recenter(percent) {\n              var position = this.wrapper.scrollWidth * percent;\n              this.recenterOnPosition(position, true);\n            }\n            /**\n             * Recenter the view-port on a position, either scroll there immediately or\n             * in steps of 5 pixels\n             *\n             * @param {number} position X-offset in pixels\n             * @param {boolean} immediate Set to true to immediately scroll somewhere\n             */\n          }, {\n            key: \"recenterOnPosition\",\n            value: function recenterOnPosition(position, immediate) {\n              var scrollLeft = this.wrapper.scrollLeft;\n              var half = ~~(this.wrapper.clientWidth / 2);\n              var maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n              var target = position - half;\n              var offset = target - scrollLeft;\n              if (maxScroll == 0) {\n                // no need to continue if scrollbar is not there\n                return;\n              } // if the cursor is currently visible...\n\n              if (!immediate && -half <= offset && offset < half) {\n                // set rate at which waveform is centered\n                var rate = this.params.autoCenterRate; // make rate depend on width of view and length of waveform\n\n                rate /= half;\n                rate *= maxScroll;\n                offset = Math.max(-rate, Math.min(rate, offset));\n                target = scrollLeft + offset;\n              } // limit target to valid range (0 to maxScroll)\n\n              target = Math.max(0, Math.min(maxScroll, target)); // no use attempting to scroll if we're not moving\n\n              if (target != scrollLeft) {\n                this.wrapper.scrollLeft = target;\n              }\n            }\n            /**\n             * Get the current scroll position in pixels\n             *\n             * @return {number} Horizontal scroll position in pixels\n             */\n          }, {\n            key: \"getScrollX\",\n            value: function getScrollX() {\n              var x = 0;\n              if (this.wrapper) {\n                var pixelRatio = this.params.pixelRatio;\n                x = Math.round(this.wrapper.scrollLeft * pixelRatio); // In cases of elastic scroll (safari with mouse wheel) you can\n                // scroll beyond the limits of the container\n                // Calculate and floor the scrollable extent to make sure an out\n                // of bounds value is not returned\n                // Ticket #1312\n\n                if (this.params.scrollParent) {\n                  var maxScroll = ~~(this.wrapper.scrollWidth * pixelRatio - this.getWidth());\n                  x = Math.min(maxScroll, Math.max(0, x));\n                }\n              }\n              return x;\n            }\n            /**\n             * Get the width of the container\n             *\n             * @return {number} The width of the container\n             */\n          }, {\n            key: \"getWidth\",\n            value: function getWidth() {\n              return Math.round(this.container.clientWidth * this.params.pixelRatio);\n            }\n            /**\n             * Set the width of the container\n             *\n             * @param {number} width The new width of the container\n             * @return {boolean} Whether the width of the container was updated or not\n             */\n          }, {\n            key: \"setWidth\",\n            value: function setWidth(width) {\n              if (this.width == width) {\n                return false;\n              }\n              this.width = width;\n              if (this.params.fillParent || this.params.scrollParent) {\n                this.style(this.wrapper, {\n                  width: ''\n                });\n              } else {\n                var newWidth = ~~(this.width / this.params.pixelRatio) + 'px';\n                this.style(this.wrapper, {\n                  width: newWidth\n                });\n              }\n              this.updateSize();\n              return true;\n            }\n            /**\n             * Set the height of the container\n             *\n             * @param {number} height The new height of the container.\n             * @return {boolean} Whether the height of the container was updated or not\n             */\n          }, {\n            key: \"setHeight\",\n            value: function setHeight(height) {\n              if (height == this.height) {\n                return false;\n              }\n              this.height = height;\n              this.style(this.wrapper, {\n                height: ~~(this.height / this.params.pixelRatio) + 'px'\n              });\n              this.updateSize();\n              return true;\n            }\n            /**\n             * Called by wavesurfer when progress should be rendered\n             *\n             * @param {number} progress From 0 to 1\n             */\n          }, {\n            key: \"progress\",\n            value: function progress(_progress) {\n              var minPxDelta = 1 / this.params.pixelRatio;\n              var pos = Math.round(_progress * this.width) * minPxDelta;\n              if (pos < this.lastPos || pos - this.lastPos >= minPxDelta) {\n                this.lastPos = pos;\n                if (this.params.scrollParent && this.params.autoCenter) {\n                  var newPos = ~~(this.wrapper.scrollWidth * _progress);\n                  this.recenterOnPosition(newPos, this.params.autoCenterImmediately);\n                }\n                this.updateProgress(pos);\n              }\n            }\n            /**\n             * This is called when wavesurfer is destroyed\n             */\n          }, {\n            key: \"destroy\",\n            value: function destroy() {\n              this.unAll();\n              if (this.wrapper) {\n                if (this.wrapper.parentNode == this.container.domElement) {\n                  this.container.removeChild(this.wrapper.domElement);\n                }\n                this.wrapper = null;\n              }\n            }\n            /* Renderer-specific methods */\n\n            /**\n             * Called after cursor related params have changed.\n             *\n             * @abstract\n             */\n          }, {\n            key: \"updateCursor\",\n            value: function updateCursor() {}\n            /**\n             * Called when the size of the container changes so the renderer can adjust\n             *\n             * @abstract\n             */\n          }, {\n            key: \"updateSize\",\n            value: function updateSize() {}\n            /**\n             * Draw a waveform with bars\n             *\n             * @abstract\n             * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\n             * rendering\n             * @param {number} channelIndex The index of the current channel. Normally\n             * should be 0\n             * @param {number} start The x-offset of the beginning of the area that\n             * should be rendered\n             * @param {number} end The x-offset of the end of the area that should be\n             * rendered\n             */\n          }, {\n            key: \"drawBars\",\n            value: function drawBars(peaks, channelIndex, start, end) {}\n            /**\n             * Draw a waveform\n             *\n             * @abstract\n             * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\n             * rendering\n             * @param {number} channelIndex The index of the current channel. Normally\n             * should be 0\n             * @param {number} start The x-offset of the beginning of the area that\n             * should be rendered\n             * @param {number} end The x-offset of the end of the area that should be\n             * rendered\n             */\n          }, {\n            key: \"drawWave\",\n            value: function drawWave(peaks, channelIndex, start, end) {}\n            /**\n             * Clear the waveform\n             *\n             * @abstract\n             */\n          }, {\n            key: \"clearWave\",\n            value: function clearWave() {}\n            /**\n             * Render the new progress\n             *\n             * @abstract\n             * @param {number} position X-Offset of progress position in pixels\n             */\n          }, {\n            key: \"updateProgress\",\n            value: function updateProgress(position) {}\n          }]);\n          return Drawer;\n        }(util.Observer);\n        exports.default = Drawer;\n        module.exports = exports.default;\n\n        /***/\n      }),\n      /***/\"./src/drawer.multicanvas.js\": (\n      /*!***********************************!*\\\n        !*** ./src/drawer.multicanvas.js ***!\n        \\***********************************/\n      /***/\n      (module, exports, __webpack_require__) => {\n        \"use strict\";\n\n        function _typeof(obj) {\n          \"@babel/helpers - typeof\";\n\n          if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n            _typeof = function _typeof(obj) {\n              return typeof obj;\n            };\n          } else {\n            _typeof = function _typeof(obj) {\n              return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n            };\n          }\n          return _typeof(obj);\n        }\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.default = void 0;\n        var _drawer = _interopRequireDefault(__webpack_require__(/*! ./drawer */\"./src/drawer.js\"));\n        var util = _interopRequireWildcard(__webpack_require__(/*! ./util */\"./src/util/index.js\"));\n        var _drawer2 = _interopRequireDefault(__webpack_require__(/*! ./drawer.canvasentry */\"./src/drawer.canvasentry.js\"));\n        function _getRequireWildcardCache(nodeInterop) {\n          if (typeof WeakMap !== \"function\") return null;\n          var cacheBabelInterop = new WeakMap();\n          var cacheNodeInterop = new WeakMap();\n          return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n            return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n          })(nodeInterop);\n        }\n        function _interopRequireWildcard(obj, nodeInterop) {\n          if (!nodeInterop && obj && obj.__esModule) {\n            return obj;\n          }\n          if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n            return {\n              default: obj\n            };\n          }\n          var cache = _getRequireWildcardCache(nodeInterop);\n          if (cache && cache.has(obj)) {\n            return cache.get(obj);\n          }\n          var newObj = {};\n          var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n          for (var key in obj) {\n            if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n              var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n              if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n              } else {\n                newObj[key] = obj[key];\n              }\n            }\n          }\n          newObj.default = obj;\n          if (cache) {\n            cache.set(obj, newObj);\n          }\n          return newObj;\n        }\n        function _interopRequireDefault(obj) {\n          return obj && obj.__esModule ? obj : {\n            default: obj\n          };\n        }\n        function _classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n        function _defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n        function _createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) _defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n        function _inherits(subClass, superClass) {\n          if (typeof superClass !== \"function\" && superClass !== null) {\n            throw new TypeError(\"Super expression must either be null or a function\");\n          }\n          subClass.prototype = Object.create(superClass && superClass.prototype, {\n            constructor: {\n              value: subClass,\n              writable: true,\n              configurable: true\n            }\n          });\n          if (superClass) _setPrototypeOf(subClass, superClass);\n        }\n        function _setPrototypeOf(o, p) {\n          _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n            o.__proto__ = p;\n            return o;\n          };\n          return _setPrototypeOf(o, p);\n        }\n        function _createSuper(Derived) {\n          var hasNativeReflectConstruct = _isNativeReflectConstruct();\n          return function _createSuperInternal() {\n            var Super = _getPrototypeOf(Derived),\n              result;\n            if (hasNativeReflectConstruct) {\n              var NewTarget = _getPrototypeOf(this).constructor;\n              result = Reflect.construct(Super, arguments, NewTarget);\n            } else {\n              result = Super.apply(this, arguments);\n            }\n            return _possibleConstructorReturn(this, result);\n          };\n        }\n        function _possibleConstructorReturn(self, call) {\n          if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n            return call;\n          } else if (call !== void 0) {\n            throw new TypeError(\"Derived constructors may only return object or undefined\");\n          }\n          return _assertThisInitialized(self);\n        }\n        function _assertThisInitialized(self) {\n          if (self === void 0) {\n            throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n          }\n          return self;\n        }\n        function _isNativeReflectConstruct() {\n          if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n          if (Reflect.construct.sham) return false;\n          if (typeof Proxy === \"function\") return true;\n          try {\n            Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n            return true;\n          } catch (e) {\n            return false;\n          }\n        }\n        function _getPrototypeOf(o) {\n          _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n            return o.__proto__ || Object.getPrototypeOf(o);\n          };\n          return _getPrototypeOf(o);\n        }\n\n        /**\n         * MultiCanvas renderer for wavesurfer. Is currently the default and sole\n         * builtin renderer.\n         *\n         * A `MultiCanvas` consists of one or more `CanvasEntry` instances, depending\n         * on the zoom level.\n         */\n        var MultiCanvas = /*#__PURE__*/function (_Drawer) {\n          _inherits(MultiCanvas, _Drawer);\n          var _super = _createSuper(MultiCanvas);\n\n          /**\n           * @param {HTMLElement} container The container node of the wavesurfer instance\n           * @param {WavesurferParams} params The wavesurfer initialisation options\n           */\n          function MultiCanvas(container, params) {\n            var _this;\n            _classCallCheck(this, MultiCanvas);\n            _this = _super.call(this, container, params);\n            /**\n             * @type {number}\n             */\n\n            _this.maxCanvasWidth = params.maxCanvasWidth;\n            /**\n             * @type {number}\n             */\n\n            _this.maxCanvasElementWidth = Math.round(params.maxCanvasWidth / params.pixelRatio);\n            /**\n             * Whether or not the progress wave is rendered. If the `waveColor`\n             * and `progressColor` are the same color it is not.\n             *\n             * @type {boolean}\n             */\n\n            _this.hasProgressCanvas = params.waveColor != params.progressColor;\n            /**\n             * @type {number}\n             */\n\n            _this.halfPixel = 0.5 / params.pixelRatio;\n            /**\n             * List of `CanvasEntry` instances.\n             *\n             * @type {Array}\n             */\n\n            _this.canvases = [];\n            /**\n             * @type {HTMLElement}\n             */\n\n            _this.progressWave = null;\n            /**\n             * Class used to generate entries.\n             *\n             * @type {function}\n             */\n\n            _this.EntryClass = _drawer2.default;\n            /**\n             * Canvas 2d context attributes.\n             *\n             * @type {object}\n             */\n\n            _this.canvasContextAttributes = params.drawingContextAttributes;\n            /**\n             * Overlap added between entries to prevent vertical white stripes\n             * between `canvas` elements.\n             *\n             * @type {number}\n             */\n\n            _this.overlap = 2 * Math.ceil(params.pixelRatio / 2);\n            /**\n             * The radius of the wave bars. Makes bars rounded\n             *\n             * @type {number}\n             */\n\n            _this.barRadius = params.barRadius || 0;\n            /**\n             * Whether to render the waveform vertically. Defaults to false.\n             *\n             * @type {boolean}\n             */\n\n            _this.vertical = params.vertical;\n            return _this;\n          }\n          /**\n           * Initialize the drawer\n           */\n\n          _createClass(MultiCanvas, [{\n            key: \"init\",\n            value: function init() {\n              this.createWrapper();\n              this.createElements();\n            }\n            /**\n             * Create the canvas elements and style them\n             *\n             */\n          }, {\n            key: \"createElements\",\n            value: function createElements() {\n              this.progressWave = util.withOrientation(this.wrapper.appendChild(document.createElement('wave')), this.params.vertical);\n              this.style(this.progressWave, {\n                position: 'absolute',\n                zIndex: 3,\n                left: 0,\n                top: 0,\n                bottom: 0,\n                overflow: 'hidden',\n                width: '0',\n                display: 'none',\n                boxSizing: 'border-box',\n                borderRightStyle: 'solid',\n                pointerEvents: 'none'\n              });\n              this.addCanvas();\n              this.updateCursor();\n            }\n            /**\n             * Update cursor style\n             */\n          }, {\n            key: \"updateCursor\",\n            value: function updateCursor() {\n              this.style(this.progressWave, {\n                borderRightWidth: this.params.cursorWidth + 'px',\n                borderRightColor: this.params.cursorColor\n              });\n            }\n            /**\n             * Adjust to the updated size by adding or removing canvases\n             */\n          }, {\n            key: \"updateSize\",\n            value: function updateSize() {\n              var _this2 = this;\n              var totalWidth = Math.round(this.width / this.params.pixelRatio);\n              var requiredCanvases = Math.ceil(totalWidth / (this.maxCanvasElementWidth + this.overlap)); // add required canvases\n\n              while (this.canvases.length < requiredCanvases) {\n                this.addCanvas();\n              } // remove older existing canvases, if any\n\n              while (this.canvases.length > requiredCanvases) {\n                this.removeCanvas();\n              }\n              var canvasWidth = this.maxCanvasWidth + this.overlap;\n              var lastCanvas = this.canvases.length - 1;\n              this.canvases.forEach(function (entry, i) {\n                if (i == lastCanvas) {\n                  canvasWidth = _this2.width - _this2.maxCanvasWidth * lastCanvas;\n                }\n                _this2.updateDimensions(entry, canvasWidth, _this2.height);\n                entry.clearWave();\n              });\n            }\n            /**\n             * Add a canvas to the canvas list\n             *\n             */\n          }, {\n            key: \"addCanvas\",\n            value: function addCanvas() {\n              var entry = new this.EntryClass();\n              entry.canvasContextAttributes = this.canvasContextAttributes;\n              entry.hasProgressCanvas = this.hasProgressCanvas;\n              entry.halfPixel = this.halfPixel;\n              var leftOffset = this.maxCanvasElementWidth * this.canvases.length; // wave\n\n              var wave = util.withOrientation(this.wrapper.appendChild(document.createElement('canvas')), this.params.vertical);\n              this.style(wave, {\n                position: 'absolute',\n                zIndex: 2,\n                left: leftOffset + 'px',\n                top: 0,\n                bottom: 0,\n                height: '100%',\n                pointerEvents: 'none'\n              });\n              entry.initWave(wave); // progress\n\n              if (this.hasProgressCanvas) {\n                var progress = util.withOrientation(this.progressWave.appendChild(document.createElement('canvas')), this.params.vertical);\n                this.style(progress, {\n                  position: 'absolute',\n                  left: leftOffset + 'px',\n                  top: 0,\n                  bottom: 0,\n                  height: '100%'\n                });\n                entry.initProgress(progress);\n              }\n              this.canvases.push(entry);\n            }\n            /**\n             * Pop single canvas from the list\n             *\n             */\n          }, {\n            key: \"removeCanvas\",\n            value: function removeCanvas() {\n              var lastEntry = this.canvases[this.canvases.length - 1]; // wave\n\n              lastEntry.wave.parentElement.removeChild(lastEntry.wave.domElement); // progress\n\n              if (this.hasProgressCanvas) {\n                lastEntry.progress.parentElement.removeChild(lastEntry.progress.domElement);\n              } // cleanup\n\n              if (lastEntry) {\n                lastEntry.destroy();\n                lastEntry = null;\n              }\n              this.canvases.pop();\n            }\n            /**\n             * Update the dimensions of a canvas element\n             *\n             * @param {CanvasEntry} entry Target entry\n             * @param {number} width The new width of the element\n             * @param {number} height The new height of the element\n             */\n          }, {\n            key: \"updateDimensions\",\n            value: function updateDimensions(entry, width, height) {\n              var elementWidth = Math.round(width / this.params.pixelRatio);\n              var totalWidth = Math.round(this.width / this.params.pixelRatio); // update canvas dimensions\n\n              entry.updateDimensions(elementWidth, totalWidth, width, height); // style element\n\n              this.style(this.progressWave, {\n                display: 'block'\n              });\n            }\n            /**\n             * Clear the whole multi-canvas\n             */\n          }, {\n            key: \"clearWave\",\n            value: function clearWave() {\n              var _this3 = this;\n              util.frame(function () {\n                _this3.canvases.forEach(function (entry) {\n                  return entry.clearWave();\n                });\n              })();\n            }\n            /**\n             * Draw a waveform with bars\n             *\n             * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n             * for split channel rendering\n             * @param {number} channelIndex The index of the current channel. Normally\n             * should be 0. Must be an integer.\n             * @param {number} start The x-offset of the beginning of the area that\n             * should be rendered\n             * @param {number} end The x-offset of the end of the area that should be\n             * rendered\n             * @returns {void}\n             */\n          }, {\n            key: \"drawBars\",\n            value: function drawBars(peaks, channelIndex, start, end) {\n              var _this4 = this;\n              return this.prepareDraw(peaks, channelIndex, start, end, function (_ref) {\n                var absmax = _ref.absmax,\n                  hasMinVals = _ref.hasMinVals,\n                  height = _ref.height,\n                  offsetY = _ref.offsetY,\n                  halfH = _ref.halfH,\n                  peaks = _ref.peaks,\n                  ch = _ref.channelIndex;\n\n                // if drawBars was called within ws.empty we don't pass a start and\n                // don't want anything to happen\n                if (start === undefined) {\n                  return;\n                } // Skip every other value if there are negatives.\n\n                var peakIndexScale = hasMinVals ? 2 : 1;\n                var length = peaks.length / peakIndexScale;\n                var bar = _this4.params.barWidth * _this4.params.pixelRatio;\n                var gap = _this4.params.barGap === null ? Math.max(_this4.params.pixelRatio, ~~(bar / 2)) : Math.max(_this4.params.pixelRatio, _this4.params.barGap * _this4.params.pixelRatio);\n                var step = bar + gap;\n                var scale = length / _this4.width;\n                var first = start;\n                var last = end;\n                var i = first;\n                for (i; i < last; i += step) {\n                  var peak = peaks[Math.floor(i * scale * peakIndexScale)] || 0;\n                  var h = Math.round(peak / absmax * halfH);\n                  /* in case of silences, allow the user to specify that we\n                   * always draw *something* (normally a 1px high bar) */\n\n                  if (h == 0 && _this4.params.barMinHeight) {\n                    h = _this4.params.barMinHeight;\n                  }\n                  _this4.fillRect(i + _this4.halfPixel, halfH - h + offsetY, bar + _this4.halfPixel, h * 2, _this4.barRadius, ch);\n                }\n              });\n            }\n            /**\n             * Draw a waveform\n             *\n             * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n             * for split channel rendering\n             * @param {number} channelIndex The index of the current channel. Normally\n             * should be 0\n             * @param {number?} start The x-offset of the beginning of the area that\n             * should be rendered (If this isn't set only a flat line is rendered)\n             * @param {number?} end The x-offset of the end of the area that should be\n             * rendered\n             * @returns {void}\n             */\n          }, {\n            key: \"drawWave\",\n            value: function drawWave(peaks, channelIndex, start, end) {\n              var _this5 = this;\n              return this.prepareDraw(peaks, channelIndex, start, end, function (_ref2) {\n                var absmax = _ref2.absmax,\n                  hasMinVals = _ref2.hasMinVals,\n                  height = _ref2.height,\n                  offsetY = _ref2.offsetY,\n                  halfH = _ref2.halfH,\n                  peaks = _ref2.peaks,\n                  channelIndex = _ref2.channelIndex;\n                if (!hasMinVals) {\n                  var reflectedPeaks = [];\n                  var len = peaks.length;\n                  var i = 0;\n                  for (i; i < len; i++) {\n                    reflectedPeaks[2 * i] = peaks[i];\n                    reflectedPeaks[2 * i + 1] = -peaks[i];\n                  }\n                  peaks = reflectedPeaks;\n                } // if drawWave was called within ws.empty we don't pass a start and\n                // end and simply want a flat line\n\n                if (start !== undefined) {\n                  _this5.drawLine(peaks, absmax, halfH, offsetY, start, end, channelIndex);\n                } // always draw a median line\n\n                _this5.fillRect(0, halfH + offsetY - _this5.halfPixel, _this5.width, _this5.halfPixel, _this5.barRadius, channelIndex);\n              });\n            }\n            /**\n             * Tell the canvas entries to render their portion of the waveform\n             *\n             * @param {number[]} peaks Peaks data\n             * @param {number} absmax Maximum peak value (absolute)\n             * @param {number} halfH Half the height of the waveform\n             * @param {number} offsetY Offset to the top\n             * @param {number} start The x-offset of the beginning of the area that\n             * should be rendered\n             * @param {number} end The x-offset of the end of the area that\n             * should be rendered\n             * @param {channelIndex} channelIndex The channel index of the line drawn\n             */\n          }, {\n            key: \"drawLine\",\n            value: function drawLine(peaks, absmax, halfH, offsetY, start, end, channelIndex) {\n              var _this6 = this;\n              var _ref3 = this.params.splitChannelsOptions.channelColors[channelIndex] || {},\n                waveColor = _ref3.waveColor,\n                progressColor = _ref3.progressColor;\n              this.canvases.forEach(function (entry, i) {\n                _this6.setFillStyles(entry, waveColor, progressColor);\n                _this6.applyCanvasTransforms(entry, _this6.params.vertical);\n                entry.drawLines(peaks, absmax, halfH, offsetY, start, end);\n              });\n            }\n            /**\n             * Draw a rectangle on the multi-canvas\n             *\n             * @param {number} x X-position of the rectangle\n             * @param {number} y Y-position of the rectangle\n             * @param {number} width Width of the rectangle\n             * @param {number} height Height of the rectangle\n             * @param {number} radius Radius of the rectangle\n             * @param {channelIndex} channelIndex The channel index of the bar drawn\n             */\n          }, {\n            key: \"fillRect\",\n            value: function fillRect(x, y, width, height, radius, channelIndex) {\n              var startCanvas = Math.floor(x / this.maxCanvasWidth);\n              var endCanvas = Math.min(Math.ceil((x + width) / this.maxCanvasWidth) + 1, this.canvases.length);\n              var i = startCanvas;\n              for (i; i < endCanvas; i++) {\n                var entry = this.canvases[i];\n                var leftOffset = i * this.maxCanvasWidth;\n                var intersection = {\n                  x1: Math.max(x, i * this.maxCanvasWidth),\n                  y1: y,\n                  x2: Math.min(x + width, i * this.maxCanvasWidth + entry.wave.width),\n                  y2: y + height\n                };\n                if (intersection.x1 < intersection.x2) {\n                  var _ref4 = this.params.splitChannelsOptions.channelColors[channelIndex] || {},\n                    waveColor = _ref4.waveColor,\n                    progressColor = _ref4.progressColor;\n                  this.setFillStyles(entry, waveColor, progressColor);\n                  this.applyCanvasTransforms(entry, this.params.vertical);\n                  entry.fillRects(intersection.x1 - leftOffset, intersection.y1, intersection.x2 - intersection.x1, intersection.y2 - intersection.y1, radius);\n                }\n              }\n            }\n            /**\n             * Returns whether to hide the channel from being drawn based on params.\n             *\n             * @param {number} channelIndex The index of the current channel.\n             * @returns {bool} True to hide the channel, false to draw.\n             */\n          }, {\n            key: \"hideChannel\",\n            value: function hideChannel(channelIndex) {\n              return this.params.splitChannels && this.params.splitChannelsOptions.filterChannels.includes(channelIndex);\n            }\n            /**\n             * Performs preparation tasks and calculations which are shared by `drawBars`\n             * and `drawWave`\n             *\n             * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for\n             * split channel rendering\n             * @param {number} channelIndex The index of the current channel. Normally\n             * should be 0\n             * @param {number?} start The x-offset of the beginning of the area that\n             * should be rendered. If this isn't set only a flat line is rendered\n             * @param {number?} end The x-offset of the end of the area that should be\n             * rendered\n             * @param {function} fn The render function to call, e.g. `drawWave`\n             * @param {number} drawIndex The index of the current channel after filtering.\n             * @param {number?} normalizedMax Maximum modulation value across channels for use with relativeNormalization. Ignored when undefined\n             * @returns {void}\n             */\n          }, {\n            key: \"prepareDraw\",\n            value: function prepareDraw(peaks, channelIndex, start, end, fn, drawIndex, normalizedMax) {\n              var _this7 = this;\n              return util.frame(function () {\n                // Split channels and call this function with the channelIndex set\n                if (peaks[0] instanceof Array) {\n                  var channels = peaks;\n                  if (_this7.params.splitChannels) {\n                    var filteredChannels = channels.filter(function (c, i) {\n                      return !_this7.hideChannel(i);\n                    });\n                    if (!_this7.params.splitChannelsOptions.overlay) {\n                      _this7.setHeight(Math.max(filteredChannels.length, 1) * _this7.params.height * _this7.params.pixelRatio);\n                    }\n                    var overallAbsMax;\n                    if (_this7.params.splitChannelsOptions && _this7.params.splitChannelsOptions.relativeNormalization) {\n                      // calculate maximum peak across channels to use for normalization\n                      overallAbsMax = util.max(channels.map(function (channelPeaks) {\n                        return util.absMax(channelPeaks);\n                      }));\n                    }\n                    return channels.forEach(function (channelPeaks, i) {\n                      return _this7.prepareDraw(channelPeaks, i, start, end, fn, filteredChannels.indexOf(channelPeaks), overallAbsMax);\n                    });\n                  }\n                  peaks = channels[0];\n                } // Return and do not draw channel peaks if hidden.\n\n                if (_this7.hideChannel(channelIndex)) {\n                  return;\n                } // calculate maximum modulation value, either from the barHeight\n                // parameter or if normalize=true from the largest value in the peak\n                // set\n\n                var absmax = 1 / _this7.params.barHeight;\n                if (_this7.params.normalize) {\n                  absmax = normalizedMax === undefined ? util.absMax(peaks) : normalizedMax;\n                } // Bar wave draws the bottom only as a reflection of the top,\n                // so we don't need negative values\n\n                var hasMinVals = [].some.call(peaks, function (val) {\n                  return val < 0;\n                });\n                var height = _this7.params.height * _this7.params.pixelRatio;\n                var halfH = height / 2;\n                var offsetY = height * drawIndex || 0; // Override offsetY if overlay is true\n\n                if (_this7.params.splitChannelsOptions && _this7.params.splitChannelsOptions.overlay) {\n                  offsetY = 0;\n                }\n                return fn({\n                  absmax: absmax,\n                  hasMinVals: hasMinVals,\n                  height: height,\n                  offsetY: offsetY,\n                  halfH: halfH,\n                  peaks: peaks,\n                  channelIndex: channelIndex\n                });\n              })();\n            }\n            /**\n             * Set the fill styles for a certain entry (wave and progress)\n             *\n             * @param {CanvasEntry} entry Target entry\n             * @param {string} waveColor Wave color to draw this entry\n             * @param {string} progressColor Progress color to draw this entry\n             */\n          }, {\n            key: \"setFillStyles\",\n            value: function setFillStyles(entry) {\n              var waveColor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.params.waveColor;\n              var progressColor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.params.progressColor;\n              entry.setFillStyles(waveColor, progressColor);\n            }\n            /**\n             * Set the canvas transforms for a certain entry (wave and progress)\n             *\n             * @param {CanvasEntry} entry Target entry\n             * @param {boolean} vertical Whether to render the waveform vertically\n             */\n          }, {\n            key: \"applyCanvasTransforms\",\n            value: function applyCanvasTransforms(entry) {\n              var vertical = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n              entry.applyCanvasTransforms(vertical);\n            }\n            /**\n             * Return image data of the multi-canvas\n             *\n             * When using a `type` of `'blob'`, this will return a `Promise`.\n             *\n             * @param {string} format='image/png' An optional value of a format type.\n             * @param {number} quality=0.92 An optional value between 0 and 1.\n             * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\n             * @return {string|string[]|Promise} When using the default `'dataURL'`\n             * `type` this returns a single data URL or an array of data URLs,\n             * one for each canvas. When using the `'blob'` `type` this returns a\n             * `Promise` that resolves with an array of `Blob` instances, one for each\n             * canvas.\n             */\n          }, {\n            key: \"getImage\",\n            value: function getImage(format, quality, type) {\n              if (type === 'blob') {\n                return Promise.all(this.canvases.map(function (entry) {\n                  return entry.getImage(format, quality, type);\n                }));\n              } else if (type === 'dataURL') {\n                var images = this.canvases.map(function (entry) {\n                  return entry.getImage(format, quality, type);\n                });\n                return images.length > 1 ? images : images[0];\n              }\n            }\n            /**\n             * Render the new progress\n             *\n             * @param {number} position X-offset of progress position in pixels\n             */\n          }, {\n            key: \"updateProgress\",\n            value: function updateProgress(position) {\n              this.style(this.progressWave, {\n                width: position + 'px'\n              });\n            }\n          }]);\n          return MultiCanvas;\n        }(_drawer.default);\n        exports.default = MultiCanvas;\n        module.exports = exports.default;\n\n        /***/\n      }),\n      /***/\"./src/mediaelement-webaudio.js\": (\n      /*!**************************************!*\\\n        !*** ./src/mediaelement-webaudio.js ***!\n        \\**************************************/\n      /***/\n      (module, exports, __webpack_require__) => {\n        \"use strict\";\n\n        function _typeof(obj) {\n          \"@babel/helpers - typeof\";\n\n          if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n            _typeof = function _typeof(obj) {\n              return typeof obj;\n            };\n          } else {\n            _typeof = function _typeof(obj) {\n              return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n            };\n          }\n          return _typeof(obj);\n        }\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.default = void 0;\n        var _mediaelement = _interopRequireDefault(__webpack_require__(/*! ./mediaelement */\"./src/mediaelement.js\"));\n        function _interopRequireDefault(obj) {\n          return obj && obj.__esModule ? obj : {\n            default: obj\n          };\n        }\n        function _classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n        function _defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n        function _createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) _defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n        function _get(target, property, receiver) {\n          if (typeof Reflect !== \"undefined\" && Reflect.get) {\n            _get = Reflect.get;\n          } else {\n            _get = function _get(target, property, receiver) {\n              var base = _superPropBase(target, property);\n              if (!base) return;\n              var desc = Object.getOwnPropertyDescriptor(base, property);\n              if (desc.get) {\n                return desc.get.call(receiver);\n              }\n              return desc.value;\n            };\n          }\n          return _get(target, property, receiver || target);\n        }\n        function _superPropBase(object, property) {\n          while (!Object.prototype.hasOwnProperty.call(object, property)) {\n            object = _getPrototypeOf(object);\n            if (object === null) break;\n          }\n          return object;\n        }\n        function _inherits(subClass, superClass) {\n          if (typeof superClass !== \"function\" && superClass !== null) {\n            throw new TypeError(\"Super expression must either be null or a function\");\n          }\n          subClass.prototype = Object.create(superClass && superClass.prototype, {\n            constructor: {\n              value: subClass,\n              writable: true,\n              configurable: true\n            }\n          });\n          if (superClass) _setPrototypeOf(subClass, superClass);\n        }\n        function _setPrototypeOf(o, p) {\n          _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n            o.__proto__ = p;\n            return o;\n          };\n          return _setPrototypeOf(o, p);\n        }\n        function _createSuper(Derived) {\n          var hasNativeReflectConstruct = _isNativeReflectConstruct();\n          return function _createSuperInternal() {\n            var Super = _getPrototypeOf(Derived),\n              result;\n            if (hasNativeReflectConstruct) {\n              var NewTarget = _getPrototypeOf(this).constructor;\n              result = Reflect.construct(Super, arguments, NewTarget);\n            } else {\n              result = Super.apply(this, arguments);\n            }\n            return _possibleConstructorReturn(this, result);\n          };\n        }\n        function _possibleConstructorReturn(self, call) {\n          if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n            return call;\n          } else if (call !== void 0) {\n            throw new TypeError(\"Derived constructors may only return object or undefined\");\n          }\n          return _assertThisInitialized(self);\n        }\n        function _assertThisInitialized(self) {\n          if (self === void 0) {\n            throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n          }\n          return self;\n        }\n        function _isNativeReflectConstruct() {\n          if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n          if (Reflect.construct.sham) return false;\n          if (typeof Proxy === \"function\") return true;\n          try {\n            Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n            return true;\n          } catch (e) {\n            return false;\n          }\n        }\n        function _getPrototypeOf(o) {\n          _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n            return o.__proto__ || Object.getPrototypeOf(o);\n          };\n          return _getPrototypeOf(o);\n        }\n\n        /**\n         * MediaElementWebAudio backend: load audio via an HTML5 audio tag, but playback with the WebAudio API.\n         * The advantage here is that the html5 <audio> tag can perform range requests on the server and not\n         * buffer the entire file in one request, and you still get the filtering and scripting functionality\n         * of the webaudio API.\n         * Note that in order to use range requests and prevent buffering, you must provide peak data.\n         *\n         * @since 3.2.0\n         */\n        var MediaElementWebAudio = /*#__PURE__*/function (_MediaElement) {\n          _inherits(MediaElementWebAudio, _MediaElement);\n          var _super = _createSuper(MediaElementWebAudio);\n\n          /**\n           * Construct the backend\n           *\n           * @param {WavesurferParams} params Wavesurfer parameters\n           */\n          function MediaElementWebAudio(params) {\n            var _this;\n            _classCallCheck(this, MediaElementWebAudio);\n            _this = _super.call(this, params);\n            /** @private */\n\n            _this.params = params;\n            /** @private */\n\n            _this.sourceMediaElement = null;\n            return _this;\n          }\n          /**\n           * Initialise the backend, called in `wavesurfer.createBackend()`\n           */\n\n          _createClass(MediaElementWebAudio, [{\n            key: \"init\",\n            value: function init() {\n              this.setPlaybackRate(this.params.audioRate);\n              this.createTimer();\n              this.createVolumeNode();\n              this.createScriptNode();\n              this.createAnalyserNode();\n            }\n            /**\n             * Private method called by both `load` (from url)\n             * and `loadElt` (existing media element) methods.\n             *\n             * @param {HTMLMediaElement} media HTML5 Audio or Video element\n             * @param {number[]|Number.<Array[]>} peaks Array of peak data\n             * @param {string} preload HTML 5 preload attribute value\n             * @private\n             */\n          }, {\n            key: \"_load\",\n            value: function _load(media, peaks, preload) {\n              _get(_getPrototypeOf(MediaElementWebAudio.prototype), \"_load\", this).call(this, media, peaks, preload);\n              this.createMediaElementSource(media);\n            }\n            /**\n             * Create MediaElementSource node\n             *\n             * @since 3.2.0\n             * @param {HTMLMediaElement} mediaElement HTML5 Audio to load\n             */\n          }, {\n            key: \"createMediaElementSource\",\n            value: function createMediaElementSource(mediaElement) {\n              this.sourceMediaElement = this.ac.createMediaElementSource(mediaElement);\n              this.sourceMediaElement.connect(this.analyser);\n            }\n          }, {\n            key: \"play\",\n            value: function play(start, end) {\n              this.resumeAudioContext();\n              return _get(_getPrototypeOf(MediaElementWebAudio.prototype), \"play\", this).call(this, start, end);\n            }\n            /**\n             * This is called when wavesurfer is destroyed\n             *\n             */\n          }, {\n            key: \"destroy\",\n            value: function destroy() {\n              _get(_getPrototypeOf(MediaElementWebAudio.prototype), \"destroy\", this).call(this);\n              this.destroyWebAudio();\n            }\n          }]);\n          return MediaElementWebAudio;\n        }(_mediaelement.default);\n        exports.default = MediaElementWebAudio;\n        module.exports = exports.default;\n\n        /***/\n      }),\n      /***/\"./src/mediaelement.js\": (\n      /*!*****************************!*\\\n        !*** ./src/mediaelement.js ***!\n        \\*****************************/\n      /***/\n      (module, exports, __webpack_require__) => {\n        \"use strict\";\n\n        function _typeof(obj) {\n          \"@babel/helpers - typeof\";\n\n          if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n            _typeof = function _typeof(obj) {\n              return typeof obj;\n            };\n          } else {\n            _typeof = function _typeof(obj) {\n              return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n            };\n          }\n          return _typeof(obj);\n        }\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.default = void 0;\n        var _webaudio = _interopRequireDefault(__webpack_require__(/*! ./webaudio */\"./src/webaudio.js\"));\n        var util = _interopRequireWildcard(__webpack_require__(/*! ./util */\"./src/util/index.js\"));\n        function _getRequireWildcardCache(nodeInterop) {\n          if (typeof WeakMap !== \"function\") return null;\n          var cacheBabelInterop = new WeakMap();\n          var cacheNodeInterop = new WeakMap();\n          return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n            return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n          })(nodeInterop);\n        }\n        function _interopRequireWildcard(obj, nodeInterop) {\n          if (!nodeInterop && obj && obj.__esModule) {\n            return obj;\n          }\n          if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n            return {\n              default: obj\n            };\n          }\n          var cache = _getRequireWildcardCache(nodeInterop);\n          if (cache && cache.has(obj)) {\n            return cache.get(obj);\n          }\n          var newObj = {};\n          var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n          for (var key in obj) {\n            if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n              var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n              if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n              } else {\n                newObj[key] = obj[key];\n              }\n            }\n          }\n          newObj.default = obj;\n          if (cache) {\n            cache.set(obj, newObj);\n          }\n          return newObj;\n        }\n        function _interopRequireDefault(obj) {\n          return obj && obj.__esModule ? obj : {\n            default: obj\n          };\n        }\n        function _classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n        function _defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n        function _createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) _defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n        function _get(target, property, receiver) {\n          if (typeof Reflect !== \"undefined\" && Reflect.get) {\n            _get = Reflect.get;\n          } else {\n            _get = function _get(target, property, receiver) {\n              var base = _superPropBase(target, property);\n              if (!base) return;\n              var desc = Object.getOwnPropertyDescriptor(base, property);\n              if (desc.get) {\n                return desc.get.call(receiver);\n              }\n              return desc.value;\n            };\n          }\n          return _get(target, property, receiver || target);\n        }\n        function _superPropBase(object, property) {\n          while (!Object.prototype.hasOwnProperty.call(object, property)) {\n            object = _getPrototypeOf(object);\n            if (object === null) break;\n          }\n          return object;\n        }\n        function _inherits(subClass, superClass) {\n          if (typeof superClass !== \"function\" && superClass !== null) {\n            throw new TypeError(\"Super expression must either be null or a function\");\n          }\n          subClass.prototype = Object.create(superClass && superClass.prototype, {\n            constructor: {\n              value: subClass,\n              writable: true,\n              configurable: true\n            }\n          });\n          if (superClass) _setPrototypeOf(subClass, superClass);\n        }\n        function _setPrototypeOf(o, p) {\n          _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n            o.__proto__ = p;\n            return o;\n          };\n          return _setPrototypeOf(o, p);\n        }\n        function _createSuper(Derived) {\n          var hasNativeReflectConstruct = _isNativeReflectConstruct();\n          return function _createSuperInternal() {\n            var Super = _getPrototypeOf(Derived),\n              result;\n            if (hasNativeReflectConstruct) {\n              var NewTarget = _getPrototypeOf(this).constructor;\n              result = Reflect.construct(Super, arguments, NewTarget);\n            } else {\n              result = Super.apply(this, arguments);\n            }\n            return _possibleConstructorReturn(this, result);\n          };\n        }\n        function _possibleConstructorReturn(self, call) {\n          if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n            return call;\n          } else if (call !== void 0) {\n            throw new TypeError(\"Derived constructors may only return object or undefined\");\n          }\n          return _assertThisInitialized(self);\n        }\n        function _assertThisInitialized(self) {\n          if (self === void 0) {\n            throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n          }\n          return self;\n        }\n        function _isNativeReflectConstruct() {\n          if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n          if (Reflect.construct.sham) return false;\n          if (typeof Proxy === \"function\") return true;\n          try {\n            Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n            return true;\n          } catch (e) {\n            return false;\n          }\n        }\n        function _getPrototypeOf(o) {\n          _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n            return o.__proto__ || Object.getPrototypeOf(o);\n          };\n          return _getPrototypeOf(o);\n        }\n\n        /**\n         * MediaElement backend\n         */\n        var MediaElement = /*#__PURE__*/function (_WebAudio) {\n          _inherits(MediaElement, _WebAudio);\n          var _super = _createSuper(MediaElement);\n\n          /**\n           * Construct the backend\n           *\n           * @param {WavesurferParams} params Wavesurfer parameters\n           */\n          function MediaElement(params) {\n            var _this;\n            _classCallCheck(this, MediaElement);\n            _this = _super.call(this, params);\n            /** @private */\n\n            _this.params = params;\n            /**\n             * Initially a dummy media element to catch errors. Once `_load` is\n             * called, this will contain the actual `HTMLMediaElement`.\n             * @private\n             */\n\n            _this.media = {\n              currentTime: 0,\n              duration: 0,\n              paused: true,\n              playbackRate: 1,\n              play: function play() {},\n              pause: function pause() {},\n              volume: 0\n            };\n            /** @private */\n\n            _this.mediaType = params.mediaType.toLowerCase();\n            /** @private */\n\n            _this.elementPosition = params.elementPosition;\n            /** @private */\n\n            _this.peaks = null;\n            /** @private */\n\n            _this.playbackRate = 1;\n            /** @private */\n\n            _this.volume = 1;\n            /** @private */\n\n            _this.isMuted = false;\n            /** @private */\n\n            _this.buffer = null;\n            /** @private */\n\n            _this.onPlayEnd = null;\n            /** @private */\n\n            _this.mediaListeners = {};\n            return _this;\n          }\n          /**\n           * Initialise the backend, called in `wavesurfer.createBackend()`\n           */\n\n          _createClass(MediaElement, [{\n            key: \"init\",\n            value: function init() {\n              this.setPlaybackRate(this.params.audioRate);\n              this.createTimer();\n            }\n            /**\n             * Attach event listeners to media element.\n             */\n          }, {\n            key: \"_setupMediaListeners\",\n            value: function _setupMediaListeners() {\n              var _this2 = this;\n              this.mediaListeners.error = function () {\n                _this2.fireEvent('error', 'Error loading media element');\n              };\n              this.mediaListeners.canplay = function () {\n                _this2.fireEvent('canplay');\n              };\n              this.mediaListeners.ended = function () {\n                _this2.fireEvent('finish');\n              }; // listen to and relay play, pause and seeked events to enable\n              // playback control from the external media element\n\n              this.mediaListeners.play = function () {\n                _this2.fireEvent('play');\n              };\n              this.mediaListeners.pause = function () {\n                _this2.fireEvent('pause');\n              };\n              this.mediaListeners.seeked = function (event) {\n                _this2.fireEvent('seek');\n              };\n              this.mediaListeners.volumechange = function (event) {\n                _this2.isMuted = _this2.media.muted;\n                if (_this2.isMuted) {\n                  _this2.volume = 0;\n                } else {\n                  _this2.volume = _this2.media.volume;\n                }\n                _this2.fireEvent('volume');\n              }; // reset event listeners\n\n              Object.keys(this.mediaListeners).forEach(function (id) {\n                _this2.media.removeEventListener(id, _this2.mediaListeners[id]);\n                _this2.media.addEventListener(id, _this2.mediaListeners[id]);\n              });\n            }\n            /**\n             * Create a timer to provide a more precise `audioprocess` event.\n             */\n          }, {\n            key: \"createTimer\",\n            value: function createTimer() {\n              var _this3 = this;\n              var onAudioProcess = function onAudioProcess() {\n                if (_this3.isPaused()) {\n                  return;\n                }\n                _this3.fireEvent('audioprocess', _this3.getCurrentTime()); // Call again in the next frame\n\n                util.frame(onAudioProcess)();\n              };\n              this.on('play', onAudioProcess); // Update the progress one more time to prevent it from being stuck in\n              // case of lower framerates\n\n              this.on('pause', function () {\n                _this3.fireEvent('audioprocess', _this3.getCurrentTime());\n              });\n            }\n            /**\n             * Create media element with url as its source,\n             * and append to container element.\n             *\n             * @param {string} url Path to media file\n             * @param {HTMLElement} container HTML element\n             * @param {number[]|Number.<Array[]>} peaks Array of peak data\n             * @param {string} preload HTML 5 preload attribute value\n             * @throws Will throw an error if the `url` argument is not a valid media\n             * element.\n             */\n          }, {\n            key: \"load\",\n            value: function load(url, container, peaks, preload) {\n              var media = document.createElement(this.mediaType);\n              media.controls = this.params.mediaControls;\n              media.autoplay = this.params.autoplay || false;\n              media.preload = preload == null ? 'auto' : preload;\n              media.src = url;\n              media.style.width = '100%';\n              var prevMedia = container.querySelector(this.mediaType);\n              if (prevMedia) {\n                container.removeChild(prevMedia);\n              }\n              container.appendChild(media);\n              this._load(media, peaks, preload);\n            }\n            /**\n             * Load existing media element.\n             *\n             * @param {HTMLMediaElement} elt HTML5 Audio or Video element\n             * @param {number[]|Number.<Array[]>} peaks Array of peak data\n             */\n          }, {\n            key: \"loadElt\",\n            value: function loadElt(elt, peaks) {\n              elt.controls = this.params.mediaControls;\n              elt.autoplay = this.params.autoplay || false;\n              this._load(elt, peaks, elt.preload);\n            }\n            /**\n             * Method called by both `load` (from url)\n             * and `loadElt` (existing media element) methods.\n             *\n             * @param {HTMLMediaElement} media HTML5 Audio or Video element\n             * @param {number[]|Number.<Array[]>} peaks Array of peak data\n             * @param {string} preload HTML 5 preload attribute value\n             * @throws Will throw an error if the `media` argument is not a valid media\n             * element.\n             * @private\n             */\n          }, {\n            key: \"_load\",\n            value: function _load(media, peaks, preload) {\n              // verify media element is valid\n              if (!(media instanceof HTMLMediaElement) || typeof media.addEventListener === 'undefined') {\n                throw new Error('media parameter is not a valid media element');\n              } // load must be called manually on iOS, otherwise peaks won't draw\n              // until a user interaction triggers load --> 'ready' event\n              //\n              // note that we avoid calling media.load here when given peaks and preload == 'none'\n              // as this almost always triggers some browser fetch of the media.\n\n              if (typeof media.load == 'function' && !(peaks && preload == 'none')) {\n                // Resets the media element and restarts the media resource. Any\n                // pending events are discarded. How much media data is fetched is\n                // still affected by the preload attribute.\n                media.load();\n              }\n              this.media = media;\n              this._setupMediaListeners();\n              this.peaks = peaks;\n              this.onPlayEnd = null;\n              this.buffer = null;\n              this.isMuted = media.muted;\n              this.setPlaybackRate(this.playbackRate);\n              this.setVolume(this.volume);\n            }\n            /**\n             * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n             *\n             * @return {boolean} Media paused or not\n             */\n          }, {\n            key: \"isPaused\",\n            value: function isPaused() {\n              return !this.media || this.media.paused;\n            }\n            /**\n             * Used by `wavesurfer.getDuration()`\n             *\n             * @return {number} Duration\n             */\n          }, {\n            key: \"getDuration\",\n            value: function getDuration() {\n              if (this.explicitDuration) {\n                return this.explicitDuration;\n              }\n              var duration = (this.buffer || this.media).duration;\n              if (duration >= Infinity) {\n                // streaming audio\n                duration = this.media.seekable.end(0);\n              }\n              return duration;\n            }\n            /**\n             * Returns the current time in seconds relative to the audio-clip's\n             * duration.\n             *\n             * @return {number} Current time\n             */\n          }, {\n            key: \"getCurrentTime\",\n            value: function getCurrentTime() {\n              return this.media && this.media.currentTime;\n            }\n            /**\n             * Get the position from 0 to 1\n             *\n             * @return {number} Current position\n             */\n          }, {\n            key: \"getPlayedPercents\",\n            value: function getPlayedPercents() {\n              return this.getCurrentTime() / this.getDuration() || 0;\n            }\n            /**\n             * Get the audio source playback rate.\n             *\n             * @return {number} Playback rate\n             */\n          }, {\n            key: \"getPlaybackRate\",\n            value: function getPlaybackRate() {\n              return this.playbackRate || this.media.playbackRate;\n            }\n            /**\n             * Set the audio source playback rate.\n             *\n             * @param {number} value Playback rate\n             */\n          }, {\n            key: \"setPlaybackRate\",\n            value: function setPlaybackRate(value) {\n              this.playbackRate = value || 1;\n              this.media.playbackRate = this.playbackRate;\n            }\n            /**\n             * Used by `wavesurfer.seekTo()`\n             *\n             * @param {number} start Position to start at in seconds\n             */\n          }, {\n            key: \"seekTo\",\n            value: function seekTo(start) {\n              if (start != null) {\n                this.media.currentTime = start;\n              }\n              this.clearPlayEnd();\n            }\n            /**\n             * Plays the loaded audio region.\n             *\n             * @param {number} start Start offset in seconds, relative to the beginning\n             * of a clip.\n             * @param {number} end When to stop, relative to the beginning of a clip.\n             * @emits MediaElement#play\n             * @return {Promise} Result\n             */\n          }, {\n            key: \"play\",\n            value: function play(start, end) {\n              this.seekTo(start);\n              var promise = this.media.play();\n              end && this.setPlayEnd(end);\n              return promise;\n            }\n            /**\n             * Pauses the loaded audio.\n             *\n             * @emits MediaElement#pause\n             * @return {Promise} Result\n             */\n          }, {\n            key: \"pause\",\n            value: function pause() {\n              var promise;\n              if (this.media) {\n                promise = this.media.pause();\n              }\n              this.clearPlayEnd();\n              return promise;\n            }\n            /**\n             * Set the play end\n             *\n             * @param {number} end Where to end\n             */\n          }, {\n            key: \"setPlayEnd\",\n            value: function setPlayEnd(end) {\n              var _this4 = this;\n              this.clearPlayEnd();\n              this._onPlayEnd = function (time) {\n                if (time >= end) {\n                  _this4.pause();\n                  _this4.seekTo(end);\n                }\n              };\n              this.on('audioprocess', this._onPlayEnd);\n            }\n            /** @private */\n          }, {\n            key: \"clearPlayEnd\",\n            value: function clearPlayEnd() {\n              if (this._onPlayEnd) {\n                this.un('audioprocess', this._onPlayEnd);\n                this._onPlayEnd = null;\n              }\n            }\n            /**\n             * Compute the max and min value of the waveform when broken into\n             * <length> subranges.\n             *\n             * @param {number} length How many subranges to break the waveform into.\n             * @param {number} first First sample in the required range.\n             * @param {number} last Last sample in the required range.\n             * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of\n             * arrays of peaks consisting of (max, min) values for each subrange.\n             */\n          }, {\n            key: \"getPeaks\",\n            value: function getPeaks(length, first, last) {\n              if (this.buffer) {\n                return _get(_getPrototypeOf(MediaElement.prototype), \"getPeaks\", this).call(this, length, first, last);\n              }\n              return this.peaks || [];\n            }\n            /**\n             * Set the sink id for the media player\n             *\n             * @param {string} deviceId String value representing audio device id.\n             * @returns {Promise} A Promise that resolves to `undefined` when there\n             * are no errors.\n             */\n          }, {\n            key: \"setSinkId\",\n            value: function setSinkId(deviceId) {\n              if (deviceId) {\n                if (!this.media.setSinkId) {\n                  return Promise.reject(new Error('setSinkId is not supported in your browser'));\n                }\n                return this.media.setSinkId(deviceId);\n              }\n              return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\n            }\n            /**\n             * Get the current volume\n             *\n             * @return {number} value A floating point value between 0 and 1.\n             */\n          }, {\n            key: \"getVolume\",\n            value: function getVolume() {\n              return this.volume;\n            }\n            /**\n             * Set the audio volume\n             *\n             * @param {number} value A floating point value between 0 and 1.\n             */\n          }, {\n            key: \"setVolume\",\n            value: function setVolume(value) {\n              this.volume = value; // no need to change when it's already at that volume\n\n              if (this.media.volume !== this.volume) {\n                this.media.volume = this.volume;\n              }\n            }\n            /**\n             * Enable or disable muted audio\n             *\n             * @since 4.0.0\n             * @param {boolean} muted Specify `true` to mute audio.\n             */\n          }, {\n            key: \"setMute\",\n            value: function setMute(muted) {\n              // This causes a volume change to be emitted too through the\n              // volumechange event listener.\n              this.isMuted = this.media.muted = muted;\n            }\n            /**\n             * This is called when wavesurfer is destroyed\n             *\n             */\n          }, {\n            key: \"destroy\",\n            value: function destroy() {\n              var _this5 = this;\n              this.pause();\n              this.unAll();\n              this.destroyed = true; // cleanup media event listeners\n\n              Object.keys(this.mediaListeners).forEach(function (id) {\n                if (_this5.media) {\n                  _this5.media.removeEventListener(id, _this5.mediaListeners[id]);\n                }\n              });\n              if (this.params.removeMediaElementOnDestroy && this.media && this.media.parentNode) {\n                this.media.parentNode.removeChild(this.media);\n              }\n              this.media = null;\n            }\n          }]);\n          return MediaElement;\n        }(_webaudio.default);\n        exports.default = MediaElement;\n        module.exports = exports.default;\n\n        /***/\n      }),\n      /***/\"./src/peakcache.js\": (\n      /*!**************************!*\\\n        !*** ./src/peakcache.js ***!\n        \\**************************/\n      /***/\n      (module, exports) => {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.default = void 0;\n        function _classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n        function _defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n        function _createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) _defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n\n        /**\n         * Caches the decoded peaks data to improve rendering speed for large audio\n         *\n         * Is used if the option parameter `partialRender` is set to `true`\n         */\n        var PeakCache = /*#__PURE__*/function () {\n          /**\n           * Instantiate cache\n           */\n          function PeakCache() {\n            _classCallCheck(this, PeakCache);\n            this.clearPeakCache();\n          }\n          /**\n           * Empty the cache\n           */\n\n          _createClass(PeakCache, [{\n            key: \"clearPeakCache\",\n            value: function clearPeakCache() {\n              /**\n               * Flat array with entries that are always in pairs to mark the\n               * beginning and end of each subrange.  This is a convenience so we can\n               * iterate over the pairs for easy set difference operations.\n               * @private\n               */\n              this.peakCacheRanges = [];\n              /**\n               * Length of the entire cachable region, used for resetting the cache\n               * when this changes (zoom events, for instance).\n               * @private\n               */\n\n              this.peakCacheLength = -1;\n            }\n            /**\n             * Add a range of peaks to the cache\n             *\n             * @param {number} length The length of the range\n             * @param {number} start The x offset of the start of the range\n             * @param {number} end The x offset of the end of the range\n             * @return {Number.<Array[]>} Array with arrays of numbers\n             */\n          }, {\n            key: \"addRangeToPeakCache\",\n            value: function addRangeToPeakCache(length, start, end) {\n              if (length != this.peakCacheLength) {\n                this.clearPeakCache();\n                this.peakCacheLength = length;\n              } // Return ranges that weren't in the cache before the call.\n\n              var uncachedRanges = [];\n              var i = 0; // Skip ranges before the current start.\n\n              while (i < this.peakCacheRanges.length && this.peakCacheRanges[i] < start) {\n                i++;\n              } // If |i| is even, |start| falls after an existing range.  Otherwise,\n              // |start| falls between an existing range, and the uncached region\n              // starts when we encounter the next node in |peakCacheRanges| or\n              // |end|, whichever comes first.\n\n              if (i % 2 == 0) {\n                uncachedRanges.push(start);\n              }\n              while (i < this.peakCacheRanges.length && this.peakCacheRanges[i] <= end) {\n                uncachedRanges.push(this.peakCacheRanges[i]);\n                i++;\n              } // If |i| is even, |end| is after all existing ranges.\n\n              if (i % 2 == 0) {\n                uncachedRanges.push(end);\n              } // Filter out the 0-length ranges.\n\n              uncachedRanges = uncachedRanges.filter(function (item, pos, arr) {\n                if (pos == 0) {\n                  return item != arr[pos + 1];\n                } else if (pos == arr.length - 1) {\n                  return item != arr[pos - 1];\n                }\n                return item != arr[pos - 1] && item != arr[pos + 1];\n              }); // Merge the two ranges together, uncachedRanges will either contain\n              // wholly new points, or duplicates of points in peakCacheRanges.  If\n              // duplicates are detected, remove both and extend the range.\n\n              this.peakCacheRanges = this.peakCacheRanges.concat(uncachedRanges);\n              this.peakCacheRanges = this.peakCacheRanges.sort(function (a, b) {\n                return a - b;\n              }).filter(function (item, pos, arr) {\n                if (pos == 0) {\n                  return item != arr[pos + 1];\n                } else if (pos == arr.length - 1) {\n                  return item != arr[pos - 1];\n                }\n                return item != arr[pos - 1] && item != arr[pos + 1];\n              }); // Push the uncached ranges into an array of arrays for ease of\n              // iteration in the functions that call this.\n\n              var uncachedRangePairs = [];\n              for (i = 0; i < uncachedRanges.length; i += 2) {\n                uncachedRangePairs.push([uncachedRanges[i], uncachedRanges[i + 1]]);\n              }\n              return uncachedRangePairs;\n            }\n            /**\n             * For testing\n             *\n             * @return {Number.<Array[]>} Array with arrays of numbers\n             */\n          }, {\n            key: \"getCacheRanges\",\n            value: function getCacheRanges() {\n              var peakCacheRangePairs = [];\n              var i;\n              for (i = 0; i < this.peakCacheRanges.length; i += 2) {\n                peakCacheRangePairs.push([this.peakCacheRanges[i], this.peakCacheRanges[i + 1]]);\n              }\n              return peakCacheRangePairs;\n            }\n          }]);\n          return PeakCache;\n        }();\n        exports.default = PeakCache;\n        module.exports = exports.default;\n\n        /***/\n      }),\n      /***/\"./src/util/absMax.js\": (\n      /*!****************************!*\\\n        !*** ./src/util/absMax.js ***!\n        \\****************************/\n      /***/\n      (module, exports, __webpack_require__) => {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.default = absMax;\n        var _max = _interopRequireDefault(__webpack_require__(/*! ./max */\"./src/util/max.js\"));\n        var _min = _interopRequireDefault(__webpack_require__(/*! ./min */\"./src/util/min.js\"));\n        function _interopRequireDefault(obj) {\n          return obj && obj.__esModule ? obj : {\n            default: obj\n          };\n        }\n\n        /**\r\n         * Get the largest absolute value in an array\r\n         *\r\n         * @param   {Array} values Array of numbers\r\n         * @returns {Number} Largest number found\r\n         * @example console.log(max([-3, 2, 1]), max([-3, 2, 4])); // logs 3 4\r\n         * @since 4.3.0\r\n         */\n        function absMax(values) {\n          var max = (0, _max.default)(values);\n          var min = (0, _min.default)(values);\n          return -min > max ? -min : max;\n        }\n        module.exports = exports.default;\n\n        /***/\n      }),\n      /***/\"./src/util/clamp.js\": (\n      /*!***************************!*\\\n        !*** ./src/util/clamp.js ***!\n        \\***************************/\n      /***/\n      (module, exports) => {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.default = clamp;\n\n        /**\n         * Returns a number limited to the given range.\n         *\n         * @param {number} val The number to be limited to a range\n         * @param {number} min The lower boundary of the limit range\n         * @param {number} max The upper boundary of the limit range\n         * @returns {number} A number in the range [min, max]\n         */\n        function clamp(val, min, max) {\n          return Math.min(Math.max(min, val), max);\n        }\n        module.exports = exports.default;\n\n        /***/\n      }),\n      /***/\"./src/util/fetch.js\": (\n      /*!***************************!*\\\n        !*** ./src/util/fetch.js ***!\n        \\***************************/\n      /***/\n      (module, exports, __webpack_require__) => {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.default = fetchFile;\n        var _observer = _interopRequireDefault(__webpack_require__(/*! ./observer */\"./src/util/observer.js\"));\n        function _interopRequireDefault(obj) {\n          return obj && obj.__esModule ? obj : {\n            default: obj\n          };\n        }\n        function _classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n        function _defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n        function _createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) _defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n        var ProgressHandler = /*#__PURE__*/function () {\n          /**\n           * Instantiate ProgressHandler\n           *\n           * @param {Observer} instance The `fetchFile` observer instance.\n           * @param {Number} contentLength Content length.\n           * @param {Response} response Response object.\n           */\n          function ProgressHandler(instance, contentLength, response) {\n            _classCallCheck(this, ProgressHandler);\n            this.instance = instance;\n            this.instance._reader = response.body.getReader();\n            this.total = parseInt(contentLength, 10);\n            this.loaded = 0;\n          }\n          /**\n           * A method that is called once, immediately after the `ReadableStream``\n           * is constructed.\n           *\n           * @param {ReadableStreamDefaultController} controller Controller instance\n           *     used to control the stream.\n           */\n\n          _createClass(ProgressHandler, [{\n            key: \"start\",\n            value: function start(controller) {\n              var _this = this;\n              var read = function read() {\n                // instance._reader.read() returns a promise that resolves\n                // when a value has been received\n                _this.instance._reader.read().then(function (_ref) {\n                  var done = _ref.done,\n                    value = _ref.value;\n\n                  // result objects contain two properties:\n                  // done  - true if the stream has already given you all its data.\n                  // value - some data. Always undefined when done is true.\n                  if (done) {\n                    // ensure onProgress called when content-length=0\n                    if (_this.total === 0) {\n                      _this.instance.onProgress.call(_this.instance, {\n                        loaded: _this.loaded,\n                        total: _this.total,\n                        lengthComputable: false\n                      });\n                    } // no more data needs to be consumed, close the stream\n\n                    controller.close();\n                    return;\n                  }\n                  _this.loaded += value.byteLength;\n                  _this.instance.onProgress.call(_this.instance, {\n                    loaded: _this.loaded,\n                    total: _this.total,\n                    lengthComputable: !(_this.total === 0)\n                  }); // enqueue the next data chunk into our target stream\n\n                  controller.enqueue(value);\n                  read();\n                }).catch(function (error) {\n                  controller.error(error);\n                });\n              };\n              read();\n            }\n          }]);\n          return ProgressHandler;\n        }();\n        /**\n         * Load a file using `fetch`.\n         *\n         * @param {object} options Request options to use. See example below.\n         * @returns {Observer} Observer instance\n         * @example\n         * // default options\n         * let options = {\n         *     url: undefined,\n         *     method: 'GET',\n         *     mode: 'cors',\n         *     credentials: 'same-origin',\n         *     cache: 'default',\n         *     responseType: 'json',\n         *     requestHeaders: [],\n         *     redirect: 'follow',\n         *     referrer: 'client'\n         * };\n         *\n         * // override some options\n         * options.url = '../media/demo.wav';\n        \n         * // available types: 'arraybuffer', 'blob', 'json' or 'text'\n         * options.responseType = 'arraybuffer';\n         *\n         * // make fetch call\n         * let request = util.fetchFile(options);\n         *\n         * // listen for events\n         * request.on('progress', e => {\n         *     console.log('progress', e);\n         * });\n         *\n         * request.on('success', data => {\n         *     console.log('success!', data);\n         * });\n         *\n         * request.on('error', e => {\n         *     console.warn('fetchFile error: ', e);\n         * });\n         */\n\n        function fetchFile(options) {\n          if (!options) {\n            throw new Error('fetch options missing');\n          } else if (!options.url) {\n            throw new Error('fetch url missing');\n          }\n          var instance = new _observer.default();\n          var fetchHeaders = new Headers();\n          var fetchRequest = new Request(options.url); // add ability to abort\n\n          instance.controller = new AbortController(); // check if headers have to be added\n\n          if (options && options.requestHeaders) {\n            // add custom request headers\n            options.requestHeaders.forEach(function (header) {\n              fetchHeaders.append(header.key, header.value);\n            });\n          } // parse fetch options\n\n          var responseType = options.responseType || 'json';\n          var fetchOptions = {\n            method: options.method || 'GET',\n            headers: fetchHeaders,\n            mode: options.mode || 'cors',\n            credentials: options.credentials || 'same-origin',\n            cache: options.cache || 'default',\n            redirect: options.redirect || 'follow',\n            referrer: options.referrer || 'client',\n            signal: instance.controller.signal\n          };\n          fetch(fetchRequest, fetchOptions).then(function (response) {\n            // store response reference\n            instance.response = response;\n            var progressAvailable = true;\n            if (!response.body) {\n              // ReadableStream is not yet supported in this browser\n              // see https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream\n              progressAvailable = false;\n            } // Server must send CORS header \"Access-Control-Expose-Headers: content-length\"\n\n            var contentLength = response.headers.get('content-length');\n            if (contentLength === null) {\n              // Content-Length server response header missing.\n              // Don't evaluate download progress if we can't compare against a total size\n              // see https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Access-Control-Expose-Headers\n              progressAvailable = false;\n            }\n            if (!progressAvailable) {\n              // not able to check download progress so skip it\n              return response;\n            } // fire progress event when during load\n\n            instance.onProgress = function (e) {\n              instance.fireEvent('progress', e);\n            };\n            return new Response(new ReadableStream(new ProgressHandler(instance, contentLength, response)), fetchOptions);\n          }).then(function (response) {\n            var errMsg;\n            if (response.ok) {\n              switch (responseType) {\n                case 'arraybuffer':\n                  return response.arrayBuffer();\n                case 'json':\n                  return response.json();\n                case 'blob':\n                  return response.blob();\n                case 'text':\n                  return response.text();\n                default:\n                  errMsg = 'Unknown responseType: ' + responseType;\n                  break;\n              }\n            }\n            if (!errMsg) {\n              errMsg = 'HTTP error status: ' + response.status;\n            }\n            throw new Error(errMsg);\n          }).then(function (response) {\n            instance.fireEvent('success', response);\n          }).catch(function (error) {\n            instance.fireEvent('error', error);\n          }); // return the fetch request\n\n          instance.fetchRequest = fetchRequest;\n          return instance;\n        }\n        module.exports = exports.default;\n\n        /***/\n      }),\n      /***/\"./src/util/frame.js\": (\n      /*!***************************!*\\\n        !*** ./src/util/frame.js ***!\n        \\***************************/\n      /***/\n      (module, exports, __webpack_require__) => {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.default = frame;\n        var _requestAnimationFrame = _interopRequireDefault(__webpack_require__(/*! ./request-animation-frame */\"./src/util/request-animation-frame.js\"));\n        function _interopRequireDefault(obj) {\n          return obj && obj.__esModule ? obj : {\n            default: obj\n          };\n        }\n\n        /**\n         * Create a function which will be called at the next requestAnimationFrame\n         * cycle\n         *\n         * @param {function} func The function to call\n         *\n         * @return {func} The function wrapped within a requestAnimationFrame\n         */\n        function frame(func) {\n          return function () {\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n            return (0, _requestAnimationFrame.default)(function () {\n              return func.apply(void 0, args);\n            });\n          };\n        }\n        module.exports = exports.default;\n\n        /***/\n      }),\n      /***/\"./src/util/get-id.js\": (\n      /*!****************************!*\\\n        !*** ./src/util/get-id.js ***!\n        \\****************************/\n      /***/\n      (module, exports) => {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.default = getId;\n\n        /**\n         * Get a random prefixed ID\n         *\n         * @param {String} prefix Prefix to use. Default is `'wavesurfer_'`.\n         * @returns {String} Random prefixed ID\n         * @example\n         * console.log(getId()); // logs 'wavesurfer_b5pors4ru6g'\n         *\n         * let prefix = 'foo-';\n         * console.log(getId(prefix)); // logs 'foo-b5pors4ru6g'\n         */\n        function getId(prefix) {\n          if (prefix === undefined) {\n            prefix = 'wavesurfer_';\n          }\n          return prefix + Math.random().toString(32).substring(2);\n        }\n        module.exports = exports.default;\n\n        /***/\n      }),\n      /***/\"./src/util/index.js\": (\n      /*!***************************!*\\\n        !*** ./src/util/index.js ***!\n        \\***************************/\n      /***/\n      (__unused_webpack_module, exports, __webpack_require__) => {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        Object.defineProperty(exports, \"getId\", {\n          enumerable: true,\n          get: function get() {\n            return _getId.default;\n          }\n        });\n        Object.defineProperty(exports, \"max\", {\n          enumerable: true,\n          get: function get() {\n            return _max.default;\n          }\n        });\n        Object.defineProperty(exports, \"min\", {\n          enumerable: true,\n          get: function get() {\n            return _min.default;\n          }\n        });\n        Object.defineProperty(exports, \"absMax\", {\n          enumerable: true,\n          get: function get() {\n            return _absMax.default;\n          }\n        });\n        Object.defineProperty(exports, \"Observer\", {\n          enumerable: true,\n          get: function get() {\n            return _observer.default;\n          }\n        });\n        Object.defineProperty(exports, \"style\", {\n          enumerable: true,\n          get: function get() {\n            return _style.default;\n          }\n        });\n        Object.defineProperty(exports, \"requestAnimationFrame\", {\n          enumerable: true,\n          get: function get() {\n            return _requestAnimationFrame.default;\n          }\n        });\n        Object.defineProperty(exports, \"frame\", {\n          enumerable: true,\n          get: function get() {\n            return _frame.default;\n          }\n        });\n        Object.defineProperty(exports, \"debounce\", {\n          enumerable: true,\n          get: function get() {\n            return _debounce.default;\n          }\n        });\n        Object.defineProperty(exports, \"preventClick\", {\n          enumerable: true,\n          get: function get() {\n            return _preventClick.default;\n          }\n        });\n        Object.defineProperty(exports, \"fetchFile\", {\n          enumerable: true,\n          get: function get() {\n            return _fetch.default;\n          }\n        });\n        Object.defineProperty(exports, \"clamp\", {\n          enumerable: true,\n          get: function get() {\n            return _clamp.default;\n          }\n        });\n        Object.defineProperty(exports, \"withOrientation\", {\n          enumerable: true,\n          get: function get() {\n            return _orientation.default;\n          }\n        });\n        Object.defineProperty(exports, \"ignoreSilenceMode\", {\n          enumerable: true,\n          get: function get() {\n            return _silenceMode.default;\n          }\n        });\n        var _getId = _interopRequireDefault(__webpack_require__(/*! ./get-id */\"./src/util/get-id.js\"));\n        var _max = _interopRequireDefault(__webpack_require__(/*! ./max */\"./src/util/max.js\"));\n        var _min = _interopRequireDefault(__webpack_require__(/*! ./min */\"./src/util/min.js\"));\n        var _absMax = _interopRequireDefault(__webpack_require__(/*! ./absMax */\"./src/util/absMax.js\"));\n        var _observer = _interopRequireDefault(__webpack_require__(/*! ./observer */\"./src/util/observer.js\"));\n        var _style = _interopRequireDefault(__webpack_require__(/*! ./style */\"./src/util/style.js\"));\n        var _requestAnimationFrame = _interopRequireDefault(__webpack_require__(/*! ./request-animation-frame */\"./src/util/request-animation-frame.js\"));\n        var _frame = _interopRequireDefault(__webpack_require__(/*! ./frame */\"./src/util/frame.js\"));\n        var _debounce = _interopRequireDefault(__webpack_require__(/*! debounce */\"./node_modules/debounce/index.js\"));\n        var _preventClick = _interopRequireDefault(__webpack_require__(/*! ./prevent-click */\"./src/util/prevent-click.js\"));\n        var _fetch = _interopRequireDefault(__webpack_require__(/*! ./fetch */\"./src/util/fetch.js\"));\n        var _clamp = _interopRequireDefault(__webpack_require__(/*! ./clamp */\"./src/util/clamp.js\"));\n        var _orientation = _interopRequireDefault(__webpack_require__(/*! ./orientation */\"./src/util/orientation.js\"));\n        var _silenceMode = _interopRequireDefault(__webpack_require__(/*! ./silence-mode */\"./src/util/silence-mode.js\"));\n        function _interopRequireDefault(obj) {\n          return obj && obj.__esModule ? obj : {\n            default: obj\n          };\n        }\n\n        /***/\n      }),\n      /***/\"./src/util/max.js\": (\n      /*!*************************!*\\\n        !*** ./src/util/max.js ***!\n        \\*************************/\n      /***/\n      (module, exports) => {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.default = max;\n\n        /**\n         * Get the largest value\n         *\n         * @param   {Array} values Array of numbers\n         * @returns {Number} Largest number found\n         * @example console.log(max([1, 2, 3])); // logs 3\n         */\n        function max(values) {\n          var largest = -Infinity;\n          Object.keys(values).forEach(function (i) {\n            if (values[i] > largest) {\n              largest = values[i];\n            }\n          });\n          return largest;\n        }\n        module.exports = exports.default;\n\n        /***/\n      }),\n      /***/\"./src/util/min.js\": (\n      /*!*************************!*\\\n        !*** ./src/util/min.js ***!\n        \\*************************/\n      /***/\n      (module, exports) => {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.default = min;\n\n        /**\n         * Get the smallest value\n         *\n         * @param   {Array} values Array of numbers\n         * @returns {Number} Smallest number found\n         * @example console.log(min([1, 2, 3])); // logs 1\n         */\n        function min(values) {\n          var smallest = Number(Infinity);\n          Object.keys(values).forEach(function (i) {\n            if (values[i] < smallest) {\n              smallest = values[i];\n            }\n          });\n          return smallest;\n        }\n        module.exports = exports.default;\n\n        /***/\n      }),\n      /***/\"./src/util/observer.js\": (\n      /*!******************************!*\\\n        !*** ./src/util/observer.js ***!\n        \\******************************/\n      /***/\n      (module, exports) => {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.default = void 0;\n        function _classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n        function _defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n        function _createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) _defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n\n        /**\n         * @typedef {Object} ListenerDescriptor\n         * @property {string} name The name of the event\n         * @property {function} callback The callback\n         * @property {function} un The function to call to remove the listener\n         */\n\n        /**\n         * Observer class\n         */\n        var Observer = /*#__PURE__*/function () {\n          /**\n           * Instantiate Observer\n           */\n          function Observer() {\n            _classCallCheck(this, Observer);\n\n            /**\n             * @private\n             * @todo Initialise the handlers here already and remove the conditional\n             * assignment in `on()`\n             */\n            this._disabledEventEmissions = [];\n            this.handlers = null;\n          }\n          /**\n           * Attach a handler function for an event.\n           *\n           * @param {string} event Name of the event to listen to\n           * @param {function} fn The callback to trigger when the event is fired\n           * @return {ListenerDescriptor} The event descriptor\n           */\n\n          _createClass(Observer, [{\n            key: \"on\",\n            value: function on(event, fn) {\n              var _this = this;\n              if (!this.handlers) {\n                this.handlers = {};\n              }\n              var handlers = this.handlers[event];\n              if (!handlers) {\n                handlers = this.handlers[event] = [];\n              }\n              handlers.push(fn); // Return an event descriptor\n\n              return {\n                name: event,\n                callback: fn,\n                un: function un(e, fn) {\n                  return _this.un(e, fn);\n                }\n              };\n            }\n            /**\n             * Remove an event handler.\n             *\n             * @param {string} event Name of the event the listener that should be\n             * removed listens to\n             * @param {function} fn The callback that should be removed\n             */\n          }, {\n            key: \"un\",\n            value: function un(event, fn) {\n              if (!this.handlers) {\n                return;\n              }\n              var handlers = this.handlers[event];\n              var i;\n              if (handlers) {\n                if (fn) {\n                  for (i = handlers.length - 1; i >= 0; i--) {\n                    if (handlers[i] == fn) {\n                      handlers.splice(i, 1);\n                    }\n                  }\n                } else {\n                  handlers.length = 0;\n                }\n              }\n            }\n            /**\n             * Remove all event handlers.\n             */\n          }, {\n            key: \"unAll\",\n            value: function unAll() {\n              this.handlers = null;\n            }\n            /**\n             * Attach a handler to an event. The handler is executed at most once per\n             * event type.\n             *\n             * @param {string} event The event to listen to\n             * @param {function} handler The callback that is only to be called once\n             * @return {ListenerDescriptor} The event descriptor\n             */\n          }, {\n            key: \"once\",\n            value: function once(event, handler) {\n              var _this2 = this;\n              var fn = function fn() {\n                for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n                  args[_key] = arguments[_key];\n                }\n\n                /*  eslint-disable no-invalid-this */\n                handler.apply(_this2, args);\n                /*  eslint-enable no-invalid-this */\n\n                setTimeout(function () {\n                  _this2.un(event, fn);\n                }, 0);\n              };\n              return this.on(event, fn);\n            }\n            /**\n             * Disable firing a list of events by name. When specified, event handlers for any event type\n             * passed in here will not be called.\n             *\n             * @since 4.0.0\n             * @param {string[]} eventNames an array of event names to disable emissions for\n             * @example\n             * // disable seek and interaction events\n             * wavesurfer.setDisabledEventEmissions(['seek', 'interaction']);\n             */\n          }, {\n            key: \"setDisabledEventEmissions\",\n            value: function setDisabledEventEmissions(eventNames) {\n              this._disabledEventEmissions = eventNames;\n            }\n            /**\n             * plugins borrow part of this class without calling the constructor,\n             * so we have to be careful about _disabledEventEmissions\n             */\n          }, {\n            key: \"_isDisabledEventEmission\",\n            value: function _isDisabledEventEmission(event) {\n              return this._disabledEventEmissions && this._disabledEventEmissions.includes(event);\n            }\n            /**\n             * Manually fire an event\n             *\n             * @param {string} event The event to fire manually\n             * @param {...any} args The arguments with which to call the listeners\n             */\n          }, {\n            key: \"fireEvent\",\n            value: function fireEvent(event) {\n              for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n                args[_key2 - 1] = arguments[_key2];\n              }\n              if (!this.handlers || this._isDisabledEventEmission(event)) {\n                return;\n              }\n              var handlers = this.handlers[event];\n              handlers && handlers.forEach(function (fn) {\n                fn.apply(void 0, args);\n              });\n            }\n          }]);\n          return Observer;\n        }();\n        exports.default = Observer;\n        module.exports = exports.default;\n\n        /***/\n      }),\n      /***/\"./src/util/orientation.js\": (\n      /*!*********************************!*\\\n        !*** ./src/util/orientation.js ***!\n        \\*********************************/\n      /***/\n      (module, exports) => {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.default = withOrientation;\n        var verticalPropMap = {\n          width: 'height',\n          height: 'width',\n          overflowX: 'overflowY',\n          overflowY: 'overflowX',\n          clientWidth: 'clientHeight',\n          clientHeight: 'clientWidth',\n          clientX: 'clientY',\n          clientY: 'clientX',\n          scrollWidth: 'scrollHeight',\n          scrollLeft: 'scrollTop',\n          offsetLeft: 'offsetTop',\n          offsetTop: 'offsetLeft',\n          offsetHeight: 'offsetWidth',\n          offsetWidth: 'offsetHeight',\n          left: 'top',\n          right: 'bottom',\n          top: 'left',\n          bottom: 'right',\n          borderRightStyle: 'borderBottomStyle',\n          borderRightWidth: 'borderBottomWidth',\n          borderRightColor: 'borderBottomColor'\n        };\n        /**\n         * Convert a horizontally-oriented property name to a vertical one.\n         *\n         * @param {string} prop A property name\n         * @param {bool} vertical Whether the element is oriented vertically\n         * @returns {string} prop, converted appropriately\n         */\n\n        function mapProp(prop, vertical) {\n          if (Object.prototype.hasOwnProperty.call(verticalPropMap, prop)) {\n            return vertical ? verticalPropMap[prop] : prop;\n          } else {\n            return prop;\n          }\n        }\n        var isProxy = Symbol(\"isProxy\");\n        /**\n         * Returns an appropriately oriented object based on vertical.\n         * If vertical is true, attribute getting and setting will be mapped through\n         * verticalPropMap, so that e.g. getting the object's .width will give its\n         * .height instead.\n         * Certain methods of an oriented object will return oriented objects as well.\n         * Oriented objects can't be added to the DOM directly since they are Proxy objects\n         * and thus fail typechecks. Use domElement to get the actual element for this.\n         *\n         * @param {object} target The object to be wrapped and oriented\n         * @param {bool} vertical Whether the element is oriented vertically\n         * @returns {Proxy} An oriented object with attr translation via verticalAttrMap\n         * @since 5.0.0\n         */\n\n        function withOrientation(target, vertical) {\n          if (target[isProxy]) {\n            return target;\n          } else {\n            return new Proxy(target, {\n              get: function get(obj, prop, receiver) {\n                if (prop === isProxy) {\n                  return true;\n                } else if (prop === 'domElement') {\n                  return obj;\n                } else if (prop === 'style') {\n                  return withOrientation(obj.style, vertical);\n                } else if (prop === 'canvas') {\n                  return withOrientation(obj.canvas, vertical);\n                } else if (prop === 'getBoundingClientRect') {\n                  return function () {\n                    return withOrientation(obj.getBoundingClientRect.apply(obj, arguments), vertical);\n                  };\n                } else if (prop === 'getContext') {\n                  return function () {\n                    return withOrientation(obj.getContext.apply(obj, arguments), vertical);\n                  };\n                } else {\n                  var value = obj[mapProp(prop, vertical)];\n                  return typeof value == 'function' ? value.bind(obj) : value;\n                }\n              },\n              set: function set(obj, prop, value) {\n                obj[mapProp(prop, vertical)] = value;\n                return true;\n              }\n            });\n          }\n        }\n        module.exports = exports.default;\n\n        /***/\n      }),\n      /***/\"./src/util/prevent-click.js\": (\n      /*!***********************************!*\\\n        !*** ./src/util/prevent-click.js ***!\n        \\***********************************/\n      /***/\n      (module, exports) => {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.default = preventClick;\n\n        /**\n         * Stops propagation of click event and removes event listener\n         *\n         * @private\n         * @param {object} event The click event\n         */\n        function preventClickHandler(event) {\n          event.stopPropagation();\n          document.body.removeEventListener('click', preventClickHandler, true);\n        }\n        /**\n         * Starts listening for click event and prevent propagation\n         *\n         * @param {object} values Values\n         */\n\n        function preventClick(values) {\n          document.body.addEventListener('click', preventClickHandler, true);\n        }\n        module.exports = exports.default;\n\n        /***/\n      }),\n      /***/\"./src/util/request-animation-frame.js\": (\n      /*!*********************************************!*\\\n        !*** ./src/util/request-animation-frame.js ***!\n        \\*********************************************/\n      /***/\n      (module, exports) => {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.default = void 0;\n\n        /* eslint-disable valid-jsdoc */\n\n        /**\n         * Returns the `requestAnimationFrame` function for the browser, or a shim with\n         * `setTimeout` if the function is not found\n         *\n         * @return {function} Available `requestAnimationFrame` function for the browser\n         */\n        var _default = (window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback, element) {\n          return setTimeout(callback, 1000 / 60);\n        }).bind(window);\n        exports.default = _default;\n        module.exports = exports.default;\n\n        /***/\n      }),\n      /***/\"./src/util/silence-mode.js\": (\n      /*!**********************************!*\\\n        !*** ./src/util/silence-mode.js ***!\n        \\**********************************/\n      /***/\n      (module, exports) => {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.default = ignoreSilenceMode;\n\n        /**\n         * Ignores device silence mode when using the `WebAudio` backend.\n         *\n         * Many mobile devices contain a hardware button to mute the ringtone for incoming\n         * calls and messages. Unfortunately, on some platforms like iOS, this also mutes\n         * wavesurfer's audio when using the `WebAudio` backend. This function creates a\n         * temporary `<audio>` element that makes sure the WebAudio backend keeps playing\n         * when muting the device ringer.\n         *\n         * @since 5.2.0\n         */\n        function ignoreSilenceMode() {\n          // Set the src to a short bit of url encoded as a silent mp3\n          // NOTE The silence MP3 must be high quality, when web audio sounds are played\n          // in parallel the web audio sound is mixed to match the bitrate of the html sound\n          // 0.01 seconds of silence VBR220-260 Joint Stereo 859B\n          var audioData = \"data:audio/mpeg;base64,//uQxAAAAAAAAAAAAAAAAAAAAAAAWGluZwAAAA8AAAACAAACcQCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA//////////////////////////////////////////////////////////////////8AAABhTEFNRTMuMTAwA8MAAAAAAAAAABQgJAUHQQAB9AAAAnGMHkkIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//sQxAADgnABGiAAQBCqgCRMAAgEAH///////////////7+n/9FTuQsQH//////2NG0jWUGlio5gLQTOtIoeR2WX////X4s9Atb/JRVCbBUpeRUq//////////////////9RUi0f2jn/+xDECgPCjAEQAABN4AAANIAAAAQVTEFNRTMuMTAwVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVQ==\"; // disable iOS Airplay (setting the attribute in js doesn't work)\n\n          var tmp = document.createElement(\"div\");\n          tmp.innerHTML = '<audio x-webkit-airplay=\"deny\"></audio>';\n          var audioSilentMode = tmp.children.item(0);\n          audioSilentMode.src = audioData;\n          audioSilentMode.preload = \"auto\";\n          audioSilentMode.type = \"audio/mpeg\";\n          audioSilentMode.disableRemotePlayback = true; // play\n\n          audioSilentMode.play(); // cleanup\n\n          audioSilentMode.remove();\n          tmp.remove();\n        }\n        module.exports = exports.default;\n\n        /***/\n      }),\n      /***/\"./src/util/style.js\": (\n      /*!***************************!*\\\n        !*** ./src/util/style.js ***!\n        \\***************************/\n      /***/\n      (module, exports) => {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.default = style;\n\n        /**\n         * Apply a map of styles to an element\n         *\n         * @param {HTMLElement} el The element that the styles will be applied to\n         * @param {Object} styles The map of propName: attribute, both are used as-is\n         *\n         * @return {HTMLElement} el\n         */\n        function style(el, styles) {\n          Object.keys(styles).forEach(function (prop) {\n            if (el.style[prop] !== styles[prop]) {\n              el.style[prop] = styles[prop];\n            }\n          });\n          return el;\n        }\n        module.exports = exports.default;\n\n        /***/\n      }),\n      /***/\"./src/wavesurfer.js\": (\n      /*!***************************!*\\\n        !*** ./src/wavesurfer.js ***!\n        \\***************************/\n      /***/\n      (module, exports, __webpack_require__) => {\n        \"use strict\";\n\n        function _typeof(obj) {\n          \"@babel/helpers - typeof\";\n\n          if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n            _typeof = function _typeof(obj) {\n              return typeof obj;\n            };\n          } else {\n            _typeof = function _typeof(obj) {\n              return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n            };\n          }\n          return _typeof(obj);\n        }\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.default = void 0;\n        var util = _interopRequireWildcard(__webpack_require__(/*! ./util */\"./src/util/index.js\"));\n        var _drawer = _interopRequireDefault(__webpack_require__(/*! ./drawer.multicanvas */\"./src/drawer.multicanvas.js\"));\n        var _webaudio = _interopRequireDefault(__webpack_require__(/*! ./webaudio */\"./src/webaudio.js\"));\n        var _mediaelement = _interopRequireDefault(__webpack_require__(/*! ./mediaelement */\"./src/mediaelement.js\"));\n        var _peakcache = _interopRequireDefault(__webpack_require__(/*! ./peakcache */\"./src/peakcache.js\"));\n        var _mediaelementWebaudio = _interopRequireDefault(__webpack_require__(/*! ./mediaelement-webaudio */\"./src/mediaelement-webaudio.js\"));\n        function _interopRequireDefault(obj) {\n          return obj && obj.__esModule ? obj : {\n            default: obj\n          };\n        }\n        function _getRequireWildcardCache(nodeInterop) {\n          if (typeof WeakMap !== \"function\") return null;\n          var cacheBabelInterop = new WeakMap();\n          var cacheNodeInterop = new WeakMap();\n          return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n            return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n          })(nodeInterop);\n        }\n        function _interopRequireWildcard(obj, nodeInterop) {\n          if (!nodeInterop && obj && obj.__esModule) {\n            return obj;\n          }\n          if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n            return {\n              default: obj\n            };\n          }\n          var cache = _getRequireWildcardCache(nodeInterop);\n          if (cache && cache.has(obj)) {\n            return cache.get(obj);\n          }\n          var newObj = {};\n          var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n          for (var key in obj) {\n            if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n              var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n              if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n              } else {\n                newObj[key] = obj[key];\n              }\n            }\n          }\n          newObj.default = obj;\n          if (cache) {\n            cache.set(obj, newObj);\n          }\n          return newObj;\n        }\n        function _inherits(subClass, superClass) {\n          if (typeof superClass !== \"function\" && superClass !== null) {\n            throw new TypeError(\"Super expression must either be null or a function\");\n          }\n          subClass.prototype = Object.create(superClass && superClass.prototype, {\n            constructor: {\n              value: subClass,\n              writable: true,\n              configurable: true\n            }\n          });\n          if (superClass) _setPrototypeOf(subClass, superClass);\n        }\n        function _setPrototypeOf(o, p) {\n          _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n            o.__proto__ = p;\n            return o;\n          };\n          return _setPrototypeOf(o, p);\n        }\n        function _createSuper(Derived) {\n          var hasNativeReflectConstruct = _isNativeReflectConstruct();\n          return function _createSuperInternal() {\n            var Super = _getPrototypeOf(Derived),\n              result;\n            if (hasNativeReflectConstruct) {\n              var NewTarget = _getPrototypeOf(this).constructor;\n              result = Reflect.construct(Super, arguments, NewTarget);\n            } else {\n              result = Super.apply(this, arguments);\n            }\n            return _possibleConstructorReturn(this, result);\n          };\n        }\n        function _possibleConstructorReturn(self, call) {\n          if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n            return call;\n          } else if (call !== void 0) {\n            throw new TypeError(\"Derived constructors may only return object or undefined\");\n          }\n          return _assertThisInitialized(self);\n        }\n        function _assertThisInitialized(self) {\n          if (self === void 0) {\n            throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n          }\n          return self;\n        }\n        function _isNativeReflectConstruct() {\n          if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n          if (Reflect.construct.sham) return false;\n          if (typeof Proxy === \"function\") return true;\n          try {\n            Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n            return true;\n          } catch (e) {\n            return false;\n          }\n        }\n        function _getPrototypeOf(o) {\n          _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n            return o.__proto__ || Object.getPrototypeOf(o);\n          };\n          return _getPrototypeOf(o);\n        }\n        function _classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n        function _defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n        function _createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) _defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n\n        /*\n         * This work is licensed under a BSD-3-Clause License.\n         */\n\n        /** @external {HTMLElement} https://developer.mozilla.org/en/docs/Web/API/HTMLElement */\n\n        /** @external {OfflineAudioContext} https://developer.mozilla.org/en-US/docs/Web/API/OfflineAudioContext */\n\n        /** @external {File} https://developer.mozilla.org/en-US/docs/Web/API/File */\n\n        /** @external {Blob} https://developer.mozilla.org/en-US/docs/Web/API/Blob */\n\n        /** @external {CanvasRenderingContext2D} https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D */\n\n        /** @external {MediaStreamConstraints} https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamConstraints */\n\n        /** @external {AudioNode} https://developer.mozilla.org/de/docs/Web/API/AudioNode */\n\n        /**\n         * @typedef {Object} WavesurferParams\n         * @property {AudioContext} audioContext=null Use your own previously\n         * initialized AudioContext or leave blank.\n         * @property {number} audioRate=1 Speed at which to play audio. Lower number is\n         * slower.\n         * @property {ScriptProcessorNode} audioScriptProcessor=null Use your own previously\n         * initialized ScriptProcessorNode or leave blank.\n         * @property {boolean} autoCenter=true If a scrollbar is present, center the\n         * waveform on current progress\n         * @property {number} autoCenterRate=5 If autoCenter is active, rate at which the\n         * waveform is centered\n         * @property {boolean} autoCenterImmediately=false If autoCenter is active, immediately\n         * center waveform on current progress\n         * @property {string} backend='WebAudio' `'WebAudio'|'MediaElement'|'MediaElementWebAudio'` In most cases\n         * you don't have to set this manually. MediaElement is a fallback for unsupported browsers.\n         * MediaElementWebAudio allows to use WebAudio API also with big audio files, loading audio like with\n         * MediaElement backend (HTML5 audio tag). You have to use the same methods of MediaElement backend for loading and\n         * playback, giving also peaks, so the audio data are not decoded. In this way you can use WebAudio features, like filters,\n         * also with audio with big duration. For example:\n         * ` wavesurfer.load(url | HTMLMediaElement, peaks, preload, duration);\n         *   wavesurfer.play();\n         *   wavesurfer.setFilter(customFilter);\n         * `\n         * @property {string} backgroundColor=null Change background color of the\n         * waveform container.\n         * @property {number} barHeight=1 The height of the wave bars.\n         * @property {number} barRadius=0 The radius of the wave bars. Makes bars rounded\n         * @property {number} barGap=null The optional spacing between bars of the wave,\n         * if not provided will be calculated in legacy format.\n         * @property {number} barWidth=null Draw the waveform using bars.\n         * @property {number} barMinHeight=null If specified, draw at least a bar of this height,\n         * eliminating waveform gaps\n         * @property {boolean} closeAudioContext=false Close and nullify all audio\n         * contexts when the destroy method is called.\n         * @property {!string|HTMLElement} container CSS selector or HTML element where\n         * the waveform should be drawn. This is the only required parameter.\n         * @property {string} cursorColor='#333' The fill color of the cursor indicating\n         * the playhead position.\n         * @property {number} cursorWidth=1 Measured in pixels.\n         * @property {object} drawingContextAttributes={desynchronized: false} Drawing context\n         * attributes.\n         * @property {number} duration=null Optional audio length so pre-rendered peaks\n         * can be display immediately for example.\n         * @property {boolean} fillParent=true Whether to fill the entire container or\n         * draw only according to `minPxPerSec`.\n         * @property {boolean} forceDecode=false Force decoding of audio using web audio\n         * when zooming to get a more detailed waveform.\n         * @property {number} height=128 The height of the waveform. Measured in\n         * pixels.\n         * @property {boolean} hideScrollbar=false Whether to hide the horizontal\n         * scrollbar when one would normally be shown.\n         * @property {boolean} ignoreSilenceMode=false If true, ignores device silence mode\n         * when using the `WebAudio` backend.\n         * @property {boolean} interact=true Whether the mouse interaction will be\n         * enabled at initialization. You can switch this parameter at any time later\n         * on.\n         * @property {boolean} loopSelection=true (Use with regions plugin) Enable\n         * looping of selected regions\n         * @property {number} maxCanvasWidth=4000 Maximum width of a single canvas in\n         * pixels, excluding a small overlap (2 * `pixelRatio`, rounded up to the next\n         * even integer). If the waveform is longer than this value, additional canvases\n         * will be used to render the waveform, which is useful for very large waveforms\n         * that may be too wide for browsers to draw on a single canvas.\n         * @property {boolean} mediaControls=false (Use with backend `MediaElement` or `MediaElementWebAudio`)\n         * this enables the native controls for the media element\n         * @property {string} mediaType='audio' (Use with backend `MediaElement` or `MediaElementWebAudio`)\n         * `'audio'|'video'` ('video' only for `MediaElement`)\n         * @property {number} minPxPerSec=20 Minimum number of pixels per second of\n         * audio.\n         * @property {boolean} normalize=false If true, normalize by the maximum peak\n         * instead of 1.0.\n         * @property {boolean} partialRender=false Use the PeakCache to improve\n         * rendering speed of large waveforms\n         * @property {number} pixelRatio=window.devicePixelRatio The pixel ratio used to\n         * calculate display\n         * @property {PluginDefinition[]} plugins=[] An array of plugin definitions to\n         * register during instantiation, they will be directly initialised unless they\n         * are added with the `deferInit` property set to true.\n         * @property {string} progressColor='#555' The fill color of the part of the\n         * waveform behind the cursor. When `progressColor` and `waveColor` are the same\n         * the progress wave is not rendered at all.\n         * @property {boolean} removeMediaElementOnDestroy=true Set to false to keep the\n         * media element in the DOM when the player is destroyed. This is useful when\n         * reusing an existing media element via the `loadMediaElement` method.\n         * @property {Object} renderer=MultiCanvas Can be used to inject a custom\n         * renderer.\n         * @property {boolean|number} responsive=false If set to `true` resize the\n         * waveform, when the window is resized. This is debounced with a `100ms`\n         * timeout by default. If this parameter is a number it represents that timeout.\n         * @property {boolean} rtl=false If set to `true`, renders waveform from\n         * right-to-left.\n         * @property {boolean} scrollParent=false Whether to scroll the container with a\n         * lengthy waveform. Otherwise the waveform is shrunk to the container width\n         * (see fillParent).\n         * @property {number} skipLength=2 Number of seconds to skip with the\n         * skipForward() and skipBackward() methods.\n         * @property {boolean} splitChannels=false Render with separate waveforms for\n         * the channels of the audio\n         * @property {SplitChannelOptions} splitChannelsOptions={} Options for splitChannel rendering\n         * @property {boolean} vertical=false Render the waveform vertically instead of horizontally.\n         * @property {string} waveColor='#999' The fill color of the waveform after the\n         * cursor.\n         * @property {object} xhr={} XHR options. For example:\n         * `let xhr = {\n         *     cache: 'default',\n         *     mode: 'cors',\n         *     method: 'GET',\n         *     credentials: 'same-origin',\n         *     redirect: 'follow',\n         *     referrer: 'client',\n         *     requestHeaders: [\n         *         {\n         *             key: 'Authorization',\n         *             value: 'my-token'\n         *         }\n         *     ]\n         * };`\n         */\n\n        /**\n         * @typedef {Object} PluginDefinition\n         * @desc The Object used to describe a plugin\n         * @example wavesurfer.addPlugin(pluginDefinition);\n         * @property {string} name The name of the plugin, the plugin instance will be\n         * added as a property to the wavesurfer instance under this name\n         * @property {?Object} staticProps The properties that should be added to the\n         * wavesurfer instance as static properties\n         * @property {?boolean} deferInit Don't initialise plugin\n         * automatically\n         * @property {Object} params={} The plugin parameters, they are the first parameter\n         * passed to the plugin class constructor function\n         * @property {PluginClass} instance The plugin instance factory, is called with\n         * the dependency specified in extends. Returns the plugin class.\n         */\n\n        /**\n         * @typedef {Object} SplitChannelOptions\n         * @desc parameters applied when splitChannels option is true\n         * @property {boolean} overlay=false determines whether channels are rendered on top of each other or on separate tracks\n         * @property {object} channelColors={} object describing color for each channel. Example:\n         * {\n         *     0: {\n         *         progressColor: 'green',\n         *         waveColor: 'pink'\n         *     },\n         *     1: {\n         *         progressColor: 'orange',\n         *         waveColor: 'purple'\n         *     }\n         * }\n         * @property {number[]} filterChannels=[] indexes of channels to be hidden from rendering\n         * @property {boolean} relativeNormalization=false determines whether\n         * normalization is done per channel or maintains proportionality between\n         * channels. Only applied when normalize and splitChannels are both true.\n         * @since 4.3.0\n         */\n\n        /**\n         * @interface PluginClass\n         *\n         * @desc This is the interface which is implemented by all plugin classes. Note\n         * that this only turns into an observer after being passed through\n         * `wavesurfer.addPlugin`.\n         *\n         * @extends {Observer}\n         */\n        var PluginClass = /*#__PURE__*/function () {\n          /**\n           * Construct the plugin\n           *\n           * @param {Object} params={} The plugin params (specific to the plugin)\n           * @param {Object} ws The wavesurfer instance\n           */\n          function PluginClass(params, ws) {\n            _classCallCheck(this, PluginClass);\n          }\n          /**\n           * Initialise the plugin\n           *\n           * Start doing something. This is called by\n           * `wavesurfer.initPlugin(pluginName)`\n           */\n\n          _createClass(PluginClass, [{\n            key: \"create\",\n            value:\n            /**\n             * Plugin definition factory\n             *\n             * This function must be used to create a plugin definition which can be\n             * used by wavesurfer to correctly instantiate the plugin.\n             *\n             * It returns a `PluginDefinition` object representing the plugin.\n             *\n             * @param {Object} params={} The plugin params (specific to the plugin)\n             */\n            function create(params) {}\n          }, {\n            key: \"init\",\n            value: function init() {}\n            /**\n             * Destroy the plugin instance\n             *\n             * Stop doing something. This is called by\n             * `wavesurfer.destroyPlugin(pluginName)`\n             */\n          }, {\n            key: \"destroy\",\n            value: function destroy() {}\n          }]);\n          return PluginClass;\n        }();\n        /**\n         * WaveSurfer core library class\n         *\n         * @extends {Observer}\n         * @example\n         * const params = {\n         *   container: '#waveform',\n         *   waveColor: 'violet',\n         *   progressColor: 'purple'\n         * };\n         *\n         * // initialise like this\n         * const wavesurfer = WaveSurfer.create(params);\n         *\n         * // or like this ...\n         * const wavesurfer = new WaveSurfer(params);\n         * wavesurfer.init();\n         *\n         * // load audio file\n         * wavesurfer.load('example/media/demo.wav');\n         */\n\n        var WaveSurfer = /*#__PURE__*/function (_util$Observer) {\n          _inherits(WaveSurfer, _util$Observer);\n          var _super = _createSuper(WaveSurfer);\n\n          /**\n           * Initialise wavesurfer instance\n           *\n           * @param {WavesurferParams} params Instantiation options for wavesurfer\n           * @example\n           * const wavesurfer = new WaveSurfer(params);\n           * @returns {this} Wavesurfer instance\n           */\n          function WaveSurfer(params) {\n            var _this;\n            _classCallCheck(this, WaveSurfer);\n            _this = _super.call(this);\n            /**\n             * Extract relevant parameters (or defaults)\n             * @private\n             */\n\n            _this.defaultParams = {\n              audioContext: null,\n              audioScriptProcessor: null,\n              audioRate: 1,\n              autoCenter: true,\n              autoCenterRate: 5,\n              autoCenterImmediately: false,\n              backend: 'WebAudio',\n              backgroundColor: null,\n              barHeight: 1,\n              barRadius: 0,\n              barGap: null,\n              barMinHeight: null,\n              container: null,\n              cursorColor: '#333',\n              cursorWidth: 1,\n              dragSelection: true,\n              drawingContextAttributes: {\n                // Boolean that hints the user agent to reduce the latency\n                // by desynchronizing the canvas paint cycle from the event\n                // loop\n                desynchronized: false\n              },\n              duration: null,\n              fillParent: true,\n              forceDecode: false,\n              height: 128,\n              hideScrollbar: false,\n              ignoreSilenceMode: false,\n              interact: true,\n              loopSelection: true,\n              maxCanvasWidth: 4000,\n              mediaContainer: null,\n              mediaControls: false,\n              mediaType: 'audio',\n              minPxPerSec: 20,\n              normalize: false,\n              partialRender: false,\n              pixelRatio: window.devicePixelRatio || screen.deviceXDPI / screen.logicalXDPI,\n              plugins: [],\n              progressColor: '#555',\n              removeMediaElementOnDestroy: true,\n              renderer: _drawer.default,\n              responsive: false,\n              rtl: false,\n              scrollParent: false,\n              skipLength: 2,\n              splitChannels: false,\n              splitChannelsOptions: {\n                overlay: false,\n                channelColors: {},\n                filterChannels: [],\n                relativeNormalization: false\n              },\n              vertical: false,\n              waveColor: '#999',\n              xhr: {}\n            };\n            _this.backends = {\n              MediaElement: _mediaelement.default,\n              WebAudio: _webaudio.default,\n              MediaElementWebAudio: _mediaelementWebaudio.default\n            };\n            _this.util = util;\n            _this.params = Object.assign({}, _this.defaultParams, params);\n            _this.params.splitChannelsOptions = Object.assign({}, _this.defaultParams.splitChannelsOptions, params.splitChannelsOptions);\n            /** @private */\n\n            _this.container = 'string' == typeof params.container ? document.querySelector(_this.params.container) : _this.params.container;\n            if (!_this.container) {\n              throw new Error('Container element not found');\n            }\n            if (_this.params.mediaContainer == null) {\n              /** @private */\n              _this.mediaContainer = _this.container;\n            } else if (typeof _this.params.mediaContainer == 'string') {\n              /** @private */\n              _this.mediaContainer = document.querySelector(_this.params.mediaContainer);\n            } else {\n              /** @private */\n              _this.mediaContainer = _this.params.mediaContainer;\n            }\n            if (!_this.mediaContainer) {\n              throw new Error('Media Container element not found');\n            }\n            if (_this.params.maxCanvasWidth <= 1) {\n              throw new Error('maxCanvasWidth must be greater than 1');\n            } else if (_this.params.maxCanvasWidth % 2 == 1) {\n              throw new Error('maxCanvasWidth must be an even number');\n            }\n            if (_this.params.rtl === true) {\n              if (_this.params.vertical === true) {\n                util.style(_this.container, {\n                  transform: 'rotateX(180deg)'\n                });\n              } else {\n                util.style(_this.container, {\n                  transform: 'rotateY(180deg)'\n                });\n              }\n            }\n            if (_this.params.backgroundColor) {\n              _this.setBackgroundColor(_this.params.backgroundColor);\n            }\n            /**\n             * @private Used to save the current volume when muting so we can\n             * restore once unmuted\n             * @type {number}\n             */\n\n            _this.savedVolume = 0;\n            /**\n             * @private The current muted state\n             * @type {boolean}\n             */\n\n            _this.isMuted = false;\n            /**\n             * @private Will hold a list of event descriptors that need to be\n             * canceled on subsequent loads of audio\n             * @type {Object[]}\n             */\n\n            _this.tmpEvents = [];\n            /**\n             * @private Holds any running audio downloads\n             * @type {Observer}\n             */\n\n            _this.currentRequest = null;\n            /** @private */\n\n            _this.arraybuffer = null;\n            /** @private */\n\n            _this.drawer = null;\n            /** @private */\n\n            _this.backend = null;\n            /** @private */\n\n            _this.peakCache = null; // cache constructor objects\n\n            if (typeof _this.params.renderer !== 'function') {\n              throw new Error('Renderer parameter is invalid');\n            }\n            /**\n             * @private The uninitialised Drawer class\n             */\n\n            _this.Drawer = _this.params.renderer;\n            /**\n             * @private The uninitialised Backend class\n             */\n            // Back compat\n\n            if (_this.params.backend == 'AudioElement') {\n              _this.params.backend = 'MediaElement';\n            }\n            if ((_this.params.backend == 'WebAudio' || _this.params.backend === 'MediaElementWebAudio') && !_webaudio.default.prototype.supportsWebAudio.call(null)) {\n              _this.params.backend = 'MediaElement';\n            }\n            _this.Backend = _this.backends[_this.params.backend];\n            /**\n             * @private map of plugin names that are currently initialised\n             */\n\n            _this.initialisedPluginList = {};\n            /** @private */\n\n            _this.isDestroyed = false;\n            /**\n             * Get the current ready status.\n             *\n             * @example const isReady = wavesurfer.isReady;\n             * @return {boolean}\n             */\n\n            _this.isReady = false; // responsive debounced event listener. If this.params.responsive is not\n            // set, this is never called. Use 100ms or this.params.responsive as\n            // timeout for the debounce function.\n\n            var prevWidth = 0;\n            _this._onResize = util.debounce(function () {\n              if (prevWidth != _this.drawer.wrapper.clientWidth && !_this.params.scrollParent) {\n                prevWidth = _this.drawer.wrapper.clientWidth;\n                _this.drawer.fireEvent('redraw');\n              }\n            }, typeof _this.params.responsive === 'number' ? _this.params.responsive : 100);\n            return _possibleConstructorReturn(_this, _assertThisInitialized(_this));\n          }\n          /**\n           * Initialise the wave\n           *\n           * @example\n           * var wavesurfer = new WaveSurfer(params);\n           * wavesurfer.init();\n           * @return {this} The wavesurfer instance\n           */\n\n          _createClass(WaveSurfer, [{\n            key: \"init\",\n            value: function init() {\n              this.registerPlugins(this.params.plugins);\n              this.createDrawer();\n              this.createBackend();\n              this.createPeakCache();\n              return this;\n            }\n            /**\n             * Add and initialise array of plugins (if `plugin.deferInit` is falsey),\n             * this function is called in the init function of wavesurfer\n             *\n             * @param {PluginDefinition[]} plugins An array of plugin definitions\n             * @emits {WaveSurfer#plugins-registered} Called with the array of plugin definitions\n             * @return {this} The wavesurfer instance\n             */\n          }, {\n            key: \"registerPlugins\",\n            value: function registerPlugins(plugins) {\n              var _this2 = this;\n\n              // first instantiate all the plugins\n              plugins.forEach(function (plugin) {\n                return _this2.addPlugin(plugin);\n              }); // now run the init functions\n\n              plugins.forEach(function (plugin) {\n                // call init function of the plugin if deferInit is falsey\n                // in that case you would manually use initPlugins()\n                if (!plugin.deferInit) {\n                  _this2.initPlugin(plugin.name);\n                }\n              });\n              this.fireEvent('plugins-registered', plugins);\n              return this;\n            }\n            /**\n             * Get a map of plugin names that are currently initialised\n             *\n             * @example wavesurfer.getPlugins();\n             * @return {Object} Object with plugin names\n             */\n          }, {\n            key: \"getActivePlugins\",\n            value: function getActivePlugins() {\n              return this.initialisedPluginList;\n            }\n            /**\n             * Add a plugin object to wavesurfer\n             *\n             * @param {PluginDefinition} plugin A plugin definition\n             * @emits {WaveSurfer#plugin-added} Called with the name of the plugin that was added\n             * @example wavesurfer.addPlugin(WaveSurfer.minimap());\n             * @return {this} The wavesurfer instance\n             */\n          }, {\n            key: \"addPlugin\",\n            value: function addPlugin(plugin) {\n              var _this3 = this;\n              if (!plugin.name) {\n                throw new Error('Plugin does not have a name!');\n              }\n              if (!plugin.instance) {\n                throw new Error(\"Plugin \".concat(plugin.name, \" does not have an instance property!\"));\n              } // staticProps properties are applied to wavesurfer instance\n\n              if (plugin.staticProps) {\n                Object.keys(plugin.staticProps).forEach(function (pluginStaticProp) {\n                  /**\n                   * Properties defined in a plugin definition's `staticProps` property are added as\n                   * staticProps properties of the WaveSurfer instance\n                   */\n                  _this3[pluginStaticProp] = plugin.staticProps[pluginStaticProp];\n                });\n              }\n              var Instance = plugin.instance; // turn the plugin instance into an observer\n\n              var observerPrototypeKeys = Object.getOwnPropertyNames(util.Observer.prototype);\n              observerPrototypeKeys.forEach(function (key) {\n                Instance.prototype[key] = util.Observer.prototype[key];\n              });\n              /**\n               * Instantiated plugin classes are added as a property of the wavesurfer\n               * instance\n               * @type {Object}\n               */\n\n              this[plugin.name] = new Instance(plugin.params || {}, this);\n              this.fireEvent('plugin-added', plugin.name);\n              return this;\n            }\n            /**\n             * Initialise a plugin\n             *\n             * @param {string} name A plugin name\n             * @emits WaveSurfer#plugin-initialised\n             * @example wavesurfer.initPlugin('minimap');\n             * @return {this} The wavesurfer instance\n             */\n          }, {\n            key: \"initPlugin\",\n            value: function initPlugin(name) {\n              if (!this[name]) {\n                throw new Error(\"Plugin \".concat(name, \" has not been added yet!\"));\n              }\n              if (this.initialisedPluginList[name]) {\n                // destroy any already initialised plugins\n                this.destroyPlugin(name);\n              }\n              this[name].init();\n              this.initialisedPluginList[name] = true;\n              this.fireEvent('plugin-initialised', name);\n              return this;\n            }\n            /**\n             * Destroy a plugin\n             *\n             * @param {string} name A plugin name\n             * @emits WaveSurfer#plugin-destroyed\n             * @example wavesurfer.destroyPlugin('minimap');\n             * @returns {this} The wavesurfer instance\n             */\n          }, {\n            key: \"destroyPlugin\",\n            value: function destroyPlugin(name) {\n              if (!this[name]) {\n                throw new Error(\"Plugin \".concat(name, \" has not been added yet and cannot be destroyed!\"));\n              }\n              if (!this.initialisedPluginList[name]) {\n                throw new Error(\"Plugin \".concat(name, \" is not active and cannot be destroyed!\"));\n              }\n              if (typeof this[name].destroy !== 'function') {\n                throw new Error(\"Plugin \".concat(name, \" does not have a destroy function!\"));\n              }\n              this[name].destroy();\n              delete this.initialisedPluginList[name];\n              this.fireEvent('plugin-destroyed', name);\n              return this;\n            }\n            /**\n             * Destroy all initialised plugins. Convenience function to use when\n             * wavesurfer is removed\n             *\n             * @private\n             */\n          }, {\n            key: \"destroyAllPlugins\",\n            value: function destroyAllPlugins() {\n              var _this4 = this;\n              Object.keys(this.initialisedPluginList).forEach(function (name) {\n                return _this4.destroyPlugin(name);\n              });\n            }\n            /**\n             * Create the drawer and draw the waveform\n             *\n             * @private\n             * @emits WaveSurfer#drawer-created\n             */\n          }, {\n            key: \"createDrawer\",\n            value: function createDrawer() {\n              var _this5 = this;\n              this.drawer = new this.Drawer(this.container, this.params);\n              this.drawer.init();\n              this.fireEvent('drawer-created', this.drawer);\n              if (this.params.responsive !== false) {\n                window.addEventListener('resize', this._onResize, true);\n                window.addEventListener('orientationchange', this._onResize, true);\n              }\n              this.drawer.on('redraw', function () {\n                _this5.drawBuffer();\n                _this5.drawer.progress(_this5.backend.getPlayedPercents());\n              }); // Click-to-seek\n\n              this.drawer.on('click', function (e, progress) {\n                setTimeout(function () {\n                  return _this5.seekTo(progress);\n                }, 0);\n              }); // Relay the scroll event from the drawer\n\n              this.drawer.on('scroll', function (e) {\n                if (_this5.params.partialRender) {\n                  _this5.drawBuffer();\n                }\n                _this5.fireEvent('scroll', e);\n              });\n            }\n            /**\n             * Create the backend\n             *\n             * @private\n             * @emits WaveSurfer#backend-created\n             */\n          }, {\n            key: \"createBackend\",\n            value: function createBackend() {\n              var _this6 = this;\n              if (this.backend) {\n                this.backend.destroy();\n              }\n              this.backend = new this.Backend(this.params);\n              this.backend.init();\n              this.fireEvent('backend-created', this.backend);\n              this.backend.on('finish', function () {\n                _this6.drawer.progress(_this6.backend.getPlayedPercents());\n                _this6.fireEvent('finish');\n              });\n              this.backend.on('play', function () {\n                return _this6.fireEvent('play');\n              });\n              this.backend.on('pause', function () {\n                return _this6.fireEvent('pause');\n              });\n              this.backend.on('audioprocess', function (time) {\n                _this6.drawer.progress(_this6.backend.getPlayedPercents());\n                _this6.fireEvent('audioprocess', time);\n              }); // only needed for MediaElement and MediaElementWebAudio backend\n\n              if (this.params.backend === 'MediaElement' || this.params.backend === 'MediaElementWebAudio') {\n                this.backend.on('seek', function () {\n                  _this6.drawer.progress(_this6.backend.getPlayedPercents());\n                });\n                this.backend.on('volume', function () {\n                  var newVolume = _this6.getVolume();\n                  _this6.fireEvent('volume', newVolume);\n                  if (_this6.backend.isMuted !== _this6.isMuted) {\n                    _this6.isMuted = _this6.backend.isMuted;\n                    _this6.fireEvent('mute', _this6.isMuted);\n                  }\n                });\n              }\n            }\n            /**\n             * Create the peak cache\n             *\n             * @private\n             */\n          }, {\n            key: \"createPeakCache\",\n            value: function createPeakCache() {\n              if (this.params.partialRender) {\n                this.peakCache = new _peakcache.default();\n              }\n            }\n            /**\n             * Get the duration of the audio clip\n             *\n             * @example const duration = wavesurfer.getDuration();\n             * @return {number} Duration in seconds\n             */\n          }, {\n            key: \"getDuration\",\n            value: function getDuration() {\n              return this.backend.getDuration();\n            }\n            /**\n             * Get the current playback position\n             *\n             * @example const currentTime = wavesurfer.getCurrentTime();\n             * @return {number} Playback position in seconds\n             */\n          }, {\n            key: \"getCurrentTime\",\n            value: function getCurrentTime() {\n              return this.backend.getCurrentTime();\n            }\n            /**\n             * Set the current play time in seconds.\n             *\n             * @param {number} seconds A positive number in seconds. E.g. 10 means 10\n             * seconds, 60 means 1 minute\n             */\n          }, {\n            key: \"setCurrentTime\",\n            value: function setCurrentTime(seconds) {\n              if (seconds >= this.getDuration()) {\n                this.seekTo(1);\n              } else {\n                this.seekTo(seconds / this.getDuration());\n              }\n            }\n            /**\n             * Starts playback from the current position. Optional start and end\n             * measured in seconds can be used to set the range of audio to play.\n             *\n             * @param {?number} start Position to start at\n             * @param {?number} end Position to end at\n             * @emits WaveSurfer#interaction\n             * @return {Promise} Result of the backend play method\n             * @example\n             * // play from second 1 to 5\n             * wavesurfer.play(1, 5);\n             */\n          }, {\n            key: \"play\",\n            value: function play(start, end) {\n              var _this7 = this;\n              if (this.params.ignoreSilenceMode) {\n                // ignores device hardware silence mode\n                util.ignoreSilenceMode();\n              }\n              this.fireEvent('interaction', function () {\n                return _this7.play(start, end);\n              });\n              return this.backend.play(start, end);\n            }\n            /**\n             * Set a point in seconds for playback to stop at.\n             *\n             * @param {number} position Position (in seconds) to stop at\n             * @version 3.3.0\n             */\n          }, {\n            key: \"setPlayEnd\",\n            value: function setPlayEnd(position) {\n              this.backend.setPlayEnd(position);\n            }\n            /**\n             * Stops and pauses playback\n             *\n             * @example wavesurfer.pause();\n             * @return {Promise} Result of the backend pause method\n             */\n          }, {\n            key: \"pause\",\n            value: function pause() {\n              if (!this.backend.isPaused()) {\n                return this.backend.pause();\n              }\n            }\n            /**\n             * Toggle playback\n             *\n             * @example wavesurfer.playPause();\n             * @return {Promise} Result of the backend play or pause method\n             */\n          }, {\n            key: \"playPause\",\n            value: function playPause() {\n              return this.backend.isPaused() ? this.play() : this.pause();\n            }\n            /**\n             * Get the current playback state\n             *\n             * @example const isPlaying = wavesurfer.isPlaying();\n             * @return {boolean} False if paused, true if playing\n             */\n          }, {\n            key: \"isPlaying\",\n            value: function isPlaying() {\n              return !this.backend.isPaused();\n            }\n            /**\n             * Skip backward\n             *\n             * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n             * is used\n             * @example wavesurfer.skipBackward();\n             */\n          }, {\n            key: \"skipBackward\",\n            value: function skipBackward(seconds) {\n              this.skip(-seconds || -this.params.skipLength);\n            }\n            /**\n             * Skip forward\n             *\n             * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n             * is used\n             * @example wavesurfer.skipForward();\n             */\n          }, {\n            key: \"skipForward\",\n            value: function skipForward(seconds) {\n              this.skip(seconds || this.params.skipLength);\n            }\n            /**\n             * Skip a number of seconds from the current position (use a negative value\n             * to go backwards).\n             *\n             * @param {number} offset Amount to skip back or forwards\n             * @example\n             * // go back 2 seconds\n             * wavesurfer.skip(-2);\n             */\n          }, {\n            key: \"skip\",\n            value: function skip(offset) {\n              var duration = this.getDuration() || 1;\n              var position = this.getCurrentTime() || 0;\n              position = Math.max(0, Math.min(duration, position + (offset || 0)));\n              this.seekAndCenter(position / duration);\n            }\n            /**\n             * Seeks to a position and centers the view\n             *\n             * @param {number} progress Between 0 (=beginning) and 1 (=end)\n             * @example\n             * // seek and go to the middle of the audio\n             * wavesurfer.seekTo(0.5);\n             */\n          }, {\n            key: \"seekAndCenter\",\n            value: function seekAndCenter(progress) {\n              this.seekTo(progress);\n              this.drawer.recenter(progress);\n            }\n            /**\n             * Seeks to a position\n             *\n             * @param {number} progress Between 0 (=beginning) and 1 (=end)\n             * @emits WaveSurfer#interaction\n             * @emits WaveSurfer#seek\n             * @example\n             * // seek to the middle of the audio\n             * wavesurfer.seekTo(0.5);\n             */\n          }, {\n            key: \"seekTo\",\n            value: function seekTo(progress) {\n              var _this8 = this;\n\n              // return an error if progress is not a number between 0 and 1\n              if (typeof progress !== 'number' || !isFinite(progress) || progress < 0 || progress > 1) {\n                throw new Error('Error calling wavesurfer.seekTo, parameter must be a number between 0 and 1!');\n              }\n              this.fireEvent('interaction', function () {\n                return _this8.seekTo(progress);\n              });\n              var isWebAudioBackend = this.params.backend === 'WebAudio';\n              var paused = this.backend.isPaused();\n              if (isWebAudioBackend && !paused) {\n                this.backend.pause();\n              } // avoid small scrolls while paused seeking\n\n              var oldScrollParent = this.params.scrollParent;\n              this.params.scrollParent = false;\n              this.backend.seekTo(progress * this.getDuration());\n              this.drawer.progress(progress);\n              if (isWebAudioBackend && !paused) {\n                this.backend.play();\n              }\n              this.params.scrollParent = oldScrollParent;\n              this.fireEvent('seek', progress);\n            }\n            /**\n             * Stops and goes to the beginning.\n             *\n             * @example wavesurfer.stop();\n             */\n          }, {\n            key: \"stop\",\n            value: function stop() {\n              this.pause();\n              this.seekTo(0);\n              this.drawer.progress(0);\n            }\n            /**\n             * Sets the ID of the audio device to use for output and returns a Promise.\n             *\n             * @param {string} deviceId String value representing underlying output\n             * device\n             * @returns {Promise} `Promise` that resolves to `undefined` when there are\n             * no errors detected.\n             */\n          }, {\n            key: \"setSinkId\",\n            value: function setSinkId(deviceId) {\n              return this.backend.setSinkId(deviceId);\n            }\n            /**\n             * Set the playback volume.\n             *\n             * @param {number} newVolume A value between 0 and 1, 0 being no\n             * volume and 1 being full volume.\n             * @emits WaveSurfer#volume\n             */\n          }, {\n            key: \"setVolume\",\n            value: function setVolume(newVolume) {\n              this.backend.setVolume(newVolume);\n              this.fireEvent('volume', newVolume);\n            }\n            /**\n             * Get the playback volume.\n             *\n             * @return {number} A value between 0 and 1, 0 being no\n             * volume and 1 being full volume.\n             */\n          }, {\n            key: \"getVolume\",\n            value: function getVolume() {\n              return this.backend.getVolume();\n            }\n            /**\n             * Set the playback rate.\n             *\n             * @param {number} rate A positive number. E.g. 0.5 means half the normal\n             * speed, 2 means double speed and so on.\n             * @example wavesurfer.setPlaybackRate(2);\n             */\n          }, {\n            key: \"setPlaybackRate\",\n            value: function setPlaybackRate(rate) {\n              this.backend.setPlaybackRate(rate);\n            }\n            /**\n             * Get the playback rate.\n             *\n             * @return {number} The current playback rate.\n             */\n          }, {\n            key: \"getPlaybackRate\",\n            value: function getPlaybackRate() {\n              return this.backend.getPlaybackRate();\n            }\n            /**\n             * Toggle the volume on and off. If not currently muted it will save the\n             * current volume value and turn the volume off. If currently muted then it\n             * will restore the volume to the saved value, and then rest the saved\n             * value.\n             *\n             * @example wavesurfer.toggleMute();\n             */\n          }, {\n            key: \"toggleMute\",\n            value: function toggleMute() {\n              this.setMute(!this.isMuted);\n            }\n            /**\n             * Enable or disable muted audio\n             *\n             * @param {boolean} mute Specify `true` to mute audio.\n             * @emits WaveSurfer#volume\n             * @emits WaveSurfer#mute\n             * @example\n             * // unmute\n             * wavesurfer.setMute(false);\n             * console.log(wavesurfer.getMute()) // logs false\n             */\n          }, {\n            key: \"setMute\",\n            value: function setMute(mute) {\n              // ignore all muting requests if the audio is already in that state\n              if (mute === this.isMuted) {\n                this.fireEvent('mute', this.isMuted);\n                return;\n              }\n              if (this.backend.setMute) {\n                // Backends such as the MediaElement backend have their own handling\n                // of mute, let them handle it.\n                this.backend.setMute(mute);\n                this.isMuted = mute;\n              } else {\n                if (mute) {\n                  // If currently not muted then save current volume,\n                  // turn off the volume and update the mute properties\n                  this.savedVolume = this.backend.getVolume();\n                  this.backend.setVolume(0);\n                  this.isMuted = true;\n                  this.fireEvent('volume', 0);\n                } else {\n                  // If currently muted then restore to the saved volume\n                  // and update the mute properties\n                  this.backend.setVolume(this.savedVolume);\n                  this.isMuted = false;\n                  this.fireEvent('volume', this.savedVolume);\n                }\n              }\n              this.fireEvent('mute', this.isMuted);\n            }\n            /**\n             * Get the current mute status.\n             *\n             * @example const isMuted = wavesurfer.getMute();\n             * @return {boolean} Current mute status\n             */\n          }, {\n            key: \"getMute\",\n            value: function getMute() {\n              return this.isMuted;\n            }\n            /**\n             * Get the list of current set filters as an array.\n             *\n             * Filters must be set with setFilters method first\n             *\n             * @return {array} List of enabled filters\n             */\n          }, {\n            key: \"getFilters\",\n            value: function getFilters() {\n              return this.backend.filters || [];\n            }\n            /**\n             * Toggles `scrollParent` and redraws\n             *\n             * @example wavesurfer.toggleScroll();\n             */\n          }, {\n            key: \"toggleScroll\",\n            value: function toggleScroll() {\n              this.params.scrollParent = !this.params.scrollParent;\n              this.drawBuffer();\n            }\n            /**\n             * Toggle mouse interaction\n             *\n             * @example wavesurfer.toggleInteraction();\n             */\n          }, {\n            key: \"toggleInteraction\",\n            value: function toggleInteraction() {\n              this.params.interact = !this.params.interact;\n            }\n            /**\n             * Get the fill color of the waveform after the cursor.\n             *\n             * @return {string} A CSS color string.\n             */\n          }, {\n            key: \"getWaveColor\",\n            value: function getWaveColor() {\n              return this.params.waveColor;\n            }\n            /**\n             * Set the fill color of the waveform after the cursor.\n             *\n             * @param {string} color A CSS color string.\n             * @example wavesurfer.setWaveColor('#ddd');\n             */\n          }, {\n            key: \"setWaveColor\",\n            value: function setWaveColor(color) {\n              this.params.waveColor = color;\n              this.drawBuffer();\n            }\n            /**\n             * Get the fill color of the waveform behind the cursor.\n             *\n             * @return {string} A CSS color string.\n             */\n          }, {\n            key: \"getProgressColor\",\n            value: function getProgressColor() {\n              return this.params.progressColor;\n            }\n            /**\n             * Set the fill color of the waveform behind the cursor.\n             *\n             * @param {string} color A CSS color string.\n             * @example wavesurfer.setProgressColor('#400');\n             */\n          }, {\n            key: \"setProgressColor\",\n            value: function setProgressColor(color) {\n              this.params.progressColor = color;\n              this.drawBuffer();\n            }\n            /**\n             * Get the background color of the waveform container.\n             *\n             * @return {string} A CSS color string.\n             */\n          }, {\n            key: \"getBackgroundColor\",\n            value: function getBackgroundColor() {\n              return this.params.backgroundColor;\n            }\n            /**\n             * Set the background color of the waveform container.\n             *\n             * @param {string} color A CSS color string.\n             * @example wavesurfer.setBackgroundColor('#FF00FF');\n             */\n          }, {\n            key: \"setBackgroundColor\",\n            value: function setBackgroundColor(color) {\n              this.params.backgroundColor = color;\n              util.style(this.container, {\n                background: this.params.backgroundColor\n              });\n            }\n            /**\n             * Get the fill color of the cursor indicating the playhead\n             * position.\n             *\n             * @return {string} A CSS color string.\n             */\n          }, {\n            key: \"getCursorColor\",\n            value: function getCursorColor() {\n              return this.params.cursorColor;\n            }\n            /**\n             * Set the fill color of the cursor indicating the playhead\n             * position.\n             *\n             * @param {string} color A CSS color string.\n             * @example wavesurfer.setCursorColor('#222');\n             */\n          }, {\n            key: \"setCursorColor\",\n            value: function setCursorColor(color) {\n              this.params.cursorColor = color;\n              this.drawer.updateCursor();\n            }\n            /**\n             * Get the height of the waveform.\n             *\n             * @return {number} Height measured in pixels.\n             */\n          }, {\n            key: \"getHeight\",\n            value: function getHeight() {\n              return this.params.height;\n            }\n            /**\n             * Set the height of the waveform.\n             *\n             * @param {number} height Height measured in pixels.\n             * @example wavesurfer.setHeight(200);\n             */\n          }, {\n            key: \"setHeight\",\n            value: function setHeight(height) {\n              this.params.height = height;\n              this.drawer.setHeight(height * this.params.pixelRatio);\n              this.drawBuffer();\n            }\n            /**\n             * Hide channels from being drawn on the waveform if splitting channels.\n             *\n             * For example, if we want to draw only the peaks for the right stereo channel:\n             *\n             * const wavesurfer = new WaveSurfer.create({...splitChannels: true});\n             * wavesurfer.load('stereo_audio.mp3');\n             *\n             * wavesurfer.setFilteredChannel([0]); <-- hide left channel peaks.\n             *\n             * @param {array} channelIndices Channels to be filtered out from drawing.\n             * @version 4.0.0\n             */\n          }, {\n            key: \"setFilteredChannels\",\n            value: function setFilteredChannels(channelIndices) {\n              this.params.splitChannelsOptions.filterChannels = channelIndices;\n              this.drawBuffer();\n            }\n            /**\n             * Get the correct peaks for current wave view-port and render wave\n             *\n             * @private\n             * @emits WaveSurfer#redraw\n             */\n          }, {\n            key: \"drawBuffer\",\n            value: function drawBuffer() {\n              var nominalWidth = Math.round(this.getDuration() * this.params.minPxPerSec * this.params.pixelRatio);\n              var parentWidth = this.drawer.getWidth();\n              var width = nominalWidth; // always start at 0 after zooming for scrolling : issue redraw left part\n\n              var start = 0;\n              var end = Math.max(start + parentWidth, width); // Fill container\n\n              if (this.params.fillParent && (!this.params.scrollParent || nominalWidth < parentWidth)) {\n                width = parentWidth;\n                start = 0;\n                end = width;\n              }\n              var peaks;\n              if (this.params.partialRender) {\n                var newRanges = this.peakCache.addRangeToPeakCache(width, start, end);\n                var i;\n                for (i = 0; i < newRanges.length; i++) {\n                  peaks = this.backend.getPeaks(width, newRanges[i][0], newRanges[i][1]);\n                  this.drawer.drawPeaks(peaks, width, newRanges[i][0], newRanges[i][1]);\n                }\n              } else {\n                peaks = this.backend.getPeaks(width, start, end);\n                this.drawer.drawPeaks(peaks, width, start, end);\n              }\n              this.fireEvent('redraw', peaks, width);\n            }\n            /**\n             * Horizontally zooms the waveform in and out. It also changes the parameter\n             * `minPxPerSec` and enables the `scrollParent` option. Calling the function\n             * with a falsey parameter will reset the zoom state.\n             *\n             * @param {?number} pxPerSec Number of horizontal pixels per second of\n             * audio, if none is set the waveform returns to unzoomed state\n             * @emits WaveSurfer#zoom\n             * @example wavesurfer.zoom(20);\n             */\n          }, {\n            key: \"zoom\",\n            value: function zoom(pxPerSec) {\n              if (!pxPerSec) {\n                this.params.minPxPerSec = this.defaultParams.minPxPerSec;\n                this.params.scrollParent = false;\n              } else {\n                this.params.minPxPerSec = pxPerSec;\n                this.params.scrollParent = true;\n              }\n              this.drawBuffer();\n              this.drawer.progress(this.backend.getPlayedPercents());\n              this.drawer.recenter(this.getCurrentTime() / this.getDuration());\n              this.fireEvent('zoom', pxPerSec);\n            }\n            /**\n             * Decode buffer and load\n             *\n             * @private\n             * @param {ArrayBuffer} arraybuffer Buffer to process\n             */\n          }, {\n            key: \"loadArrayBuffer\",\n            value: function loadArrayBuffer(arraybuffer) {\n              var _this9 = this;\n              this.decodeArrayBuffer(arraybuffer, function (data) {\n                if (!_this9.isDestroyed) {\n                  _this9.loadDecodedBuffer(data);\n                }\n              });\n            }\n            /**\n             * Directly load an externally decoded AudioBuffer\n             *\n             * @private\n             * @param {AudioBuffer} buffer Buffer to process\n             * @emits WaveSurfer#ready\n             */\n          }, {\n            key: \"loadDecodedBuffer\",\n            value: function loadDecodedBuffer(buffer) {\n              this.backend.load(buffer);\n              this.drawBuffer();\n              this.isReady = true;\n              this.fireEvent('ready');\n            }\n            /**\n             * Loads audio data from a Blob or File object\n             *\n             * @param {Blob|File} blob Audio data\n             * @example\n             */\n          }, {\n            key: \"loadBlob\",\n            value: function loadBlob(blob) {\n              var _this10 = this;\n\n              // Create file reader\n              var reader = new FileReader();\n              reader.addEventListener('progress', function (e) {\n                return _this10.onProgress(e);\n              });\n              reader.addEventListener('load', function (e) {\n                return _this10.loadArrayBuffer(e.target.result);\n              });\n              reader.addEventListener('error', function () {\n                return _this10.fireEvent('error', 'Error reading file');\n              });\n              reader.readAsArrayBuffer(blob);\n              this.empty();\n            }\n            /**\n             * Loads audio and re-renders the waveform.\n             *\n             * @param {string|HTMLMediaElement} url The url of the audio file or the\n             * audio element with the audio\n             * @param {number[]|Number.<Array[]>} peaks Wavesurfer does not have to decode\n             * the audio to render the waveform if this is specified\n             * @param {?string} preload (Use with backend `MediaElement` and `MediaElementWebAudio`)\n             * `'none'|'metadata'|'auto'` Preload attribute for the media element\n             * @param {?number} duration The duration of the audio. This is used to\n             * render the peaks data in the correct size for the audio duration (as\n             * befits the current `minPxPerSec` and zoom value) without having to decode\n             * the audio.\n             * @returns {void}\n             * @throws Will throw an error if the `url` argument is empty.\n             * @example\n             * // uses fetch or media element to load file (depending on backend)\n             * wavesurfer.load('http://example.com/demo.wav');\n             *\n             * // setting preload attribute with media element backend and supplying\n             * // peaks\n             * wavesurfer.load(\n             *   'http://example.com/demo.wav',\n             *   [0.0218, 0.0183, 0.0165, 0.0198, 0.2137, 0.2888],\n             *   true\n             * );\n             */\n          }, {\n            key: \"load\",\n            value: function load(url, peaks, preload, duration) {\n              if (!url) {\n                throw new Error('url parameter cannot be empty');\n              }\n              this.empty();\n              if (preload) {\n                // check whether the preload attribute will be usable and if not log\n                // a warning listing the reasons why not and nullify the variable\n                var preloadIgnoreReasons = {\n                  \"Preload is not 'auto', 'none' or 'metadata'\": ['auto', 'metadata', 'none'].indexOf(preload) === -1,\n                  'Peaks are not provided': !peaks,\n                  \"Backend is not of type 'MediaElement' or 'MediaElementWebAudio'\": ['MediaElement', 'MediaElementWebAudio'].indexOf(this.params.backend) === -1,\n                  'Url is not of type string': typeof url !== 'string'\n                };\n                var activeReasons = Object.keys(preloadIgnoreReasons).filter(function (reason) {\n                  return preloadIgnoreReasons[reason];\n                });\n                if (activeReasons.length) {\n                  // eslint-disable-next-line no-console\n                  console.warn('Preload parameter of wavesurfer.load will be ignored because:\\n\\t- ' + activeReasons.join('\\n\\t- ')); // stop invalid values from being used\n\n                  preload = null;\n                }\n              } // loadBuffer(url, peaks, duration) requires that url is a string\n              // but users can pass in a HTMLMediaElement to WaveSurfer\n\n              if (this.params.backend === 'WebAudio' && url instanceof HTMLMediaElement) {\n                url = url.src;\n              }\n              switch (this.params.backend) {\n                case 'WebAudio':\n                  return this.loadBuffer(url, peaks, duration);\n                case 'MediaElement':\n                case 'MediaElementWebAudio':\n                  return this.loadMediaElement(url, peaks, preload, duration);\n              }\n            }\n            /**\n             * Loads audio using Web Audio buffer backend.\n             *\n             * @private\n             * @emits WaveSurfer#waveform-ready\n             * @param {string} url URL of audio file\n             * @param {number[]|Number.<Array[]>} peaks Peaks data\n             * @param {?number} duration Optional duration of audio file\n             * @returns {void}\n             */\n          }, {\n            key: \"loadBuffer\",\n            value: function loadBuffer(url, peaks, duration) {\n              var _this11 = this;\n              var load = function load(action) {\n                if (action) {\n                  _this11.tmpEvents.push(_this11.once('ready', action));\n                }\n                return _this11.getArrayBuffer(url, function (data) {\n                  return _this11.loadArrayBuffer(data);\n                });\n              };\n              if (peaks) {\n                this.backend.setPeaks(peaks, duration);\n                this.drawBuffer();\n                this.fireEvent('waveform-ready');\n                this.tmpEvents.push(this.once('interaction', load));\n              } else {\n                return load();\n              }\n            }\n            /**\n             * Either create a media element, or load an existing media element.\n             *\n             * @private\n             * @emits WaveSurfer#waveform-ready\n             * @param {string|HTMLMediaElement} urlOrElt Either a path to a media file, or an\n             * existing HTML5 Audio/Video Element\n             * @param {number[]|Number.<Array[]>} peaks Array of peaks. Required to bypass web audio\n             * dependency\n             * @param {?boolean} preload Set to true if the preload attribute of the\n             * audio element should be enabled\n             * @param {?number} duration Optional duration of audio file\n             */\n          }, {\n            key: \"loadMediaElement\",\n            value: function loadMediaElement(urlOrElt, peaks, preload, duration) {\n              var _this12 = this;\n              var url = urlOrElt;\n              if (typeof urlOrElt === 'string') {\n                this.backend.load(url, this.mediaContainer, peaks, preload);\n              } else {\n                var elt = urlOrElt;\n                this.backend.loadElt(elt, peaks); // If peaks are not provided,\n                // url = element.src so we can get peaks with web audio\n\n                url = elt.src;\n              }\n              this.tmpEvents.push(this.backend.once('canplay', function () {\n                // ignore when backend was already destroyed\n                if (!_this12.backend.destroyed) {\n                  _this12.drawBuffer();\n                  _this12.isReady = true;\n                  _this12.fireEvent('ready');\n                }\n              }), this.backend.once('error', function (err) {\n                return _this12.fireEvent('error', err);\n              })); // If peaks are provided, render them and fire the `waveform-ready` event.\n\n              if (peaks) {\n                this.backend.setPeaks(peaks, duration);\n                this.drawBuffer();\n                this.fireEvent('waveform-ready');\n              } // If no pre-decoded peaks are provided, or are provided with\n              // forceDecode flag, attempt to download the audio file and decode it\n              // with Web Audio.\n\n              if ((!peaks || this.params.forceDecode) && this.backend.supportsWebAudio()) {\n                this.getArrayBuffer(url, function (arraybuffer) {\n                  _this12.decodeArrayBuffer(arraybuffer, function (buffer) {\n                    _this12.backend.buffer = buffer;\n                    _this12.backend.setPeaks(null);\n                    _this12.drawBuffer();\n                    _this12.fireEvent('waveform-ready');\n                  });\n                });\n              }\n            }\n            /**\n             * Decode an array buffer and pass data to a callback\n             *\n             * @private\n             * @param {Object} arraybuffer The array buffer to decode\n             * @param {function} callback The function to call on complete\n             */\n          }, {\n            key: \"decodeArrayBuffer\",\n            value: function decodeArrayBuffer(arraybuffer, callback) {\n              var _this13 = this;\n              if (!this.isDestroyed) {\n                this.arraybuffer = arraybuffer;\n                this.backend.decodeArrayBuffer(arraybuffer, function (data) {\n                  // Only use the decoded data if we haven't been destroyed or\n                  // another decode started in the meantime\n                  if (!_this13.isDestroyed && _this13.arraybuffer == arraybuffer) {\n                    callback(data);\n                    _this13.arraybuffer = null;\n                  }\n                }, function () {\n                  return _this13.fireEvent('error', 'Error decoding audiobuffer');\n                });\n              }\n            }\n            /**\n             * Load an array buffer using fetch and pass the result to a callback\n             *\n             * @param {string} url The URL of the file object\n             * @param {function} callback The function to call on complete\n             * @returns {util.fetchFile} fetch call\n             * @private\n             */\n          }, {\n            key: \"getArrayBuffer\",\n            value: function getArrayBuffer(url, callback) {\n              var _this14 = this;\n              var options = Object.assign({\n                url: url,\n                responseType: 'arraybuffer'\n              }, this.params.xhr);\n              var request = util.fetchFile(options);\n              this.currentRequest = request;\n              this.tmpEvents.push(request.on('progress', function (e) {\n                _this14.onProgress(e);\n              }), request.on('success', function (data) {\n                callback(data);\n                _this14.currentRequest = null;\n              }), request.on('error', function (e) {\n                _this14.fireEvent('error', e);\n                _this14.currentRequest = null;\n              }));\n              return request;\n            }\n            /**\n             * Called while the audio file is loading\n             *\n             * @private\n             * @param {Event} e Progress event\n             * @emits WaveSurfer#loading\n             */\n          }, {\n            key: \"onProgress\",\n            value: function onProgress(e) {\n              var percentComplete;\n              if (e.lengthComputable) {\n                percentComplete = e.loaded / e.total;\n              } else {\n                // Approximate progress with an asymptotic\n                // function, and assume downloads in the 1-3 MB range.\n                percentComplete = e.loaded / (e.loaded + 1000000);\n              }\n              this.fireEvent('loading', Math.round(percentComplete * 100), e.target);\n            }\n            /**\n             * Exports PCM data into a JSON array and optionally opens in a new window\n             * as valid JSON Blob instance.\n             *\n             * @param {number} length=1024 The scale in which to export the peaks\n             * @param {number} accuracy=10000\n             * @param {?boolean} noWindow Set to true to disable opening a new\n             * window with the JSON\n             * @param {number} start Start index\n             * @param {number} end End index\n             * @return {Promise} Promise that resolves with array of peaks\n             */\n          }, {\n            key: \"exportPCM\",\n            value: function exportPCM(length, accuracy, noWindow, start, end) {\n              length = length || 1024;\n              start = start || 0;\n              accuracy = accuracy || 10000;\n              noWindow = noWindow || false;\n              var peaks = this.backend.getPeaks(length, start, end);\n              var arr = [].map.call(peaks, function (val) {\n                return Math.round(val * accuracy) / accuracy;\n              });\n              return new Promise(function (resolve, reject) {\n                if (!noWindow) {\n                  var blobJSON = new Blob([JSON.stringify(arr)], {\n                    type: 'application/json;charset=utf-8'\n                  });\n                  var objURL = URL.createObjectURL(blobJSON);\n                  window.open(objURL);\n                  URL.revokeObjectURL(objURL);\n                }\n                resolve(arr);\n              });\n            }\n            /**\n             * Save waveform image as data URI.\n             *\n             * The default format is `'image/png'`. Other supported types are\n             * `'image/jpeg'` and `'image/webp'`.\n             *\n             * @param {string} format='image/png' A string indicating the image format.\n             * The default format type is `'image/png'`.\n             * @param {number} quality=1 A number between 0 and 1 indicating the image\n             * quality to use for image formats that use lossy compression such as\n             * `'image/jpeg'`` and `'image/webp'`.\n             * @param {string} type Image data type to return. Either 'dataURL' (default)\n             * or 'blob'.\n             * @return {string|string[]|Promise} When using `'dataURL'` type this returns\n             * a single data URL or an array of data URLs, one for each canvas. When using\n             * `'blob'` type this returns a `Promise` resolving with an array of `Blob`\n             * instances, one for each canvas.\n             */\n          }, {\n            key: \"exportImage\",\n            value: function exportImage(format, quality, type) {\n              if (!format) {\n                format = 'image/png';\n              }\n              if (!quality) {\n                quality = 1;\n              }\n              if (!type) {\n                type = 'dataURL';\n              }\n              return this.drawer.getImage(format, quality, type);\n            }\n            /**\n             * Cancel any fetch request currently in progress\n             */\n          }, {\n            key: \"cancelAjax\",\n            value: function cancelAjax() {\n              if (this.currentRequest && this.currentRequest.controller) {\n                // If the current request has a ProgressHandler, then its ReadableStream might need to be cancelled too\n                // See: Wavesurfer issue #2042\n                // See Firefox bug: https://bugzilla.mozilla.org/show_bug.cgi?id=1583815\n                if (this.currentRequest._reader) {\n                  // Ignoring exceptions thrown by call to cancel()\n                  this.currentRequest._reader.cancel().catch(function (err) {});\n                }\n                this.currentRequest.controller.abort();\n                this.currentRequest = null;\n              }\n            }\n            /**\n             * @private\n             */\n          }, {\n            key: \"clearTmpEvents\",\n            value: function clearTmpEvents() {\n              this.tmpEvents.forEach(function (e) {\n                return e.un();\n              });\n            }\n            /**\n             * Display empty waveform.\n             */\n          }, {\n            key: \"empty\",\n            value: function empty() {\n              if (!this.backend.isPaused()) {\n                this.stop();\n                this.backend.disconnectSource();\n              }\n              this.isReady = false;\n              this.cancelAjax();\n              this.clearTmpEvents(); // empty drawer\n\n              this.drawer.progress(0);\n              this.drawer.setWidth(0);\n              this.drawer.drawPeaks({\n                length: this.drawer.getWidth()\n              }, 0);\n            }\n            /**\n             * Remove events, elements and disconnect WebAudio nodes.\n             *\n             * @emits WaveSurfer#destroy\n             */\n          }, {\n            key: \"destroy\",\n            value: function destroy() {\n              this.destroyAllPlugins();\n              this.fireEvent('destroy');\n              this.cancelAjax();\n              this.clearTmpEvents();\n              this.unAll();\n              if (this.params.responsive !== false) {\n                window.removeEventListener('resize', this._onResize, true);\n                window.removeEventListener('orientationchange', this._onResize, true);\n              }\n              if (this.backend) {\n                this.backend.destroy(); // clears memory usage\n\n                this.backend = null;\n              }\n              if (this.drawer) {\n                this.drawer.destroy();\n              }\n              this.isDestroyed = true;\n              this.isReady = false;\n              this.arraybuffer = null;\n            }\n          }], [{\n            key: \"create\",\n            value: /** @private */\n\n            /** @private */\n\n            /**\n             * Instantiate this class, call its `init` function and returns it\n             *\n             * @param {WavesurferParams} params The wavesurfer parameters\n             * @return {Object} WaveSurfer instance\n             * @example const wavesurfer = WaveSurfer.create(params);\n             */\n            function create(params) {\n              var wavesurfer = new WaveSurfer(params);\n              return wavesurfer.init();\n            }\n            /**\n             * The library version number is available as a static property of the\n             * WaveSurfer class\n             *\n             * @type {String}\n             * @example\n             * console.log('Using wavesurfer.js ' + WaveSurfer.VERSION);\n             */\n          }]);\n          return WaveSurfer;\n        }(util.Observer);\n        exports.default = WaveSurfer;\n        WaveSurfer.VERSION = \"5.2.0\";\n        WaveSurfer.util = util;\n        module.exports = exports.default;\n\n        /***/\n      }),\n      /***/\"./src/webaudio.js\": (\n      /*!*************************!*\\\n        !*** ./src/webaudio.js ***!\n        \\*************************/\n      /***/\n      (module, exports, __webpack_require__) => {\n        \"use strict\";\n\n        function _typeof(obj) {\n          \"@babel/helpers - typeof\";\n\n          if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n            _typeof = function _typeof(obj) {\n              return typeof obj;\n            };\n          } else {\n            _typeof = function _typeof(obj) {\n              return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n            };\n          }\n          return _typeof(obj);\n        }\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.default = void 0;\n        var util = _interopRequireWildcard(__webpack_require__(/*! ./util */\"./src/util/index.js\"));\n        function _getRequireWildcardCache(nodeInterop) {\n          if (typeof WeakMap !== \"function\") return null;\n          var cacheBabelInterop = new WeakMap();\n          var cacheNodeInterop = new WeakMap();\n          return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n            return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n          })(nodeInterop);\n        }\n        function _interopRequireWildcard(obj, nodeInterop) {\n          if (!nodeInterop && obj && obj.__esModule) {\n            return obj;\n          }\n          if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n            return {\n              default: obj\n            };\n          }\n          var cache = _getRequireWildcardCache(nodeInterop);\n          if (cache && cache.has(obj)) {\n            return cache.get(obj);\n          }\n          var newObj = {};\n          var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n          for (var key in obj) {\n            if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n              var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n              if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n              } else {\n                newObj[key] = obj[key];\n              }\n            }\n          }\n          newObj.default = obj;\n          if (cache) {\n            cache.set(obj, newObj);\n          }\n          return newObj;\n        }\n        function _defineProperty(obj, key, value) {\n          if (key in obj) {\n            Object.defineProperty(obj, key, {\n              value: value,\n              enumerable: true,\n              configurable: true,\n              writable: true\n            });\n          } else {\n            obj[key] = value;\n          }\n          return obj;\n        }\n        function _classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n        function _defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n        function _createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) _defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n        function _inherits(subClass, superClass) {\n          if (typeof superClass !== \"function\" && superClass !== null) {\n            throw new TypeError(\"Super expression must either be null or a function\");\n          }\n          subClass.prototype = Object.create(superClass && superClass.prototype, {\n            constructor: {\n              value: subClass,\n              writable: true,\n              configurable: true\n            }\n          });\n          if (superClass) _setPrototypeOf(subClass, superClass);\n        }\n        function _setPrototypeOf(o, p) {\n          _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n            o.__proto__ = p;\n            return o;\n          };\n          return _setPrototypeOf(o, p);\n        }\n        function _createSuper(Derived) {\n          var hasNativeReflectConstruct = _isNativeReflectConstruct();\n          return function _createSuperInternal() {\n            var Super = _getPrototypeOf(Derived),\n              result;\n            if (hasNativeReflectConstruct) {\n              var NewTarget = _getPrototypeOf(this).constructor;\n              result = Reflect.construct(Super, arguments, NewTarget);\n            } else {\n              result = Super.apply(this, arguments);\n            }\n            return _possibleConstructorReturn(this, result);\n          };\n        }\n        function _possibleConstructorReturn(self, call) {\n          if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n            return call;\n          } else if (call !== void 0) {\n            throw new TypeError(\"Derived constructors may only return object or undefined\");\n          }\n          return _assertThisInitialized(self);\n        }\n        function _assertThisInitialized(self) {\n          if (self === void 0) {\n            throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n          }\n          return self;\n        }\n        function _isNativeReflectConstruct() {\n          if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n          if (Reflect.construct.sham) return false;\n          if (typeof Proxy === \"function\") return true;\n          try {\n            Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n            return true;\n          } catch (e) {\n            return false;\n          }\n        }\n        function _getPrototypeOf(o) {\n          _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n            return o.__proto__ || Object.getPrototypeOf(o);\n          };\n          return _getPrototypeOf(o);\n        }\n\n        // using constants to prevent someone writing the string wrong\n        var PLAYING = 'playing';\n        var PAUSED = 'paused';\n        var FINISHED = 'finished';\n        /**\n         * WebAudio backend\n         *\n         * @extends {Observer}\n         */\n\n        var WebAudio = /*#__PURE__*/function (_util$Observer) {\n          _inherits(WebAudio, _util$Observer);\n          var _super = _createSuper(WebAudio);\n\n          /**\n           * Construct the backend\n           *\n           * @param {WavesurferParams} params Wavesurfer parameters\n           */\n          function WebAudio(params) {\n            var _this$stateBehaviors, _this$states;\n            var _this;\n            _classCallCheck(this, WebAudio);\n            _this = _super.call(this);\n            /** @private */\n\n            _this.audioContext = null;\n            _this.offlineAudioContext = null;\n            _this.stateBehaviors = (_this$stateBehaviors = {}, _defineProperty(_this$stateBehaviors, PLAYING, {\n              init: function init() {\n                this.addOnAudioProcess();\n              },\n              getPlayedPercents: function getPlayedPercents() {\n                var duration = this.getDuration();\n                return this.getCurrentTime() / duration || 0;\n              },\n              getCurrentTime: function getCurrentTime() {\n                return this.startPosition + this.getPlayedTime();\n              }\n            }), _defineProperty(_this$stateBehaviors, PAUSED, {\n              init: function init() {\n                this.removeOnAudioProcess();\n              },\n              getPlayedPercents: function getPlayedPercents() {\n                var duration = this.getDuration();\n                return this.getCurrentTime() / duration || 0;\n              },\n              getCurrentTime: function getCurrentTime() {\n                return this.startPosition;\n              }\n            }), _defineProperty(_this$stateBehaviors, FINISHED, {\n              init: function init() {\n                this.removeOnAudioProcess();\n                this.fireEvent('finish');\n              },\n              getPlayedPercents: function getPlayedPercents() {\n                return 1;\n              },\n              getCurrentTime: function getCurrentTime() {\n                return this.getDuration();\n              }\n            }), _this$stateBehaviors);\n            _this.params = params;\n            /** ac: Audio Context instance */\n\n            _this.ac = params.audioContext || (_this.supportsWebAudio() ? _this.getAudioContext() : {});\n            /**@private */\n\n            _this.lastPlay = _this.ac.currentTime;\n            /** @private */\n\n            _this.startPosition = 0;\n            /** @private */\n\n            _this.scheduledPause = null;\n            /** @private */\n\n            _this.states = (_this$states = {}, _defineProperty(_this$states, PLAYING, Object.create(_this.stateBehaviors[PLAYING])), _defineProperty(_this$states, PAUSED, Object.create(_this.stateBehaviors[PAUSED])), _defineProperty(_this$states, FINISHED, Object.create(_this.stateBehaviors[FINISHED])), _this$states);\n            /** @private */\n\n            _this.buffer = null;\n            /** @private */\n\n            _this.filters = [];\n            /** gainNode: allows to control audio volume */\n\n            _this.gainNode = null;\n            /** @private */\n\n            _this.mergedPeaks = null;\n            /** @private */\n\n            _this.offlineAc = null;\n            /** @private */\n\n            _this.peaks = null;\n            /** @private */\n\n            _this.playbackRate = 1;\n            /** analyser: provides audio analysis information */\n\n            _this.analyser = null;\n            /** scriptNode: allows processing audio */\n\n            _this.scriptNode = null;\n            /** @private */\n\n            _this.source = null;\n            /** @private */\n\n            _this.splitPeaks = [];\n            /** @private */\n\n            _this.state = null;\n            /** @private */\n\n            _this.explicitDuration = params.duration;\n            /**\n             * Boolean indicating if the backend was destroyed.\n             */\n\n            _this.destroyed = false;\n            return _this;\n          }\n          /**\n           * Initialise the backend, called in `wavesurfer.createBackend()`\n           */\n\n          _createClass(WebAudio, [{\n            key: \"supportsWebAudio\",\n            value: /** scriptBufferSize: size of the processing buffer */\n\n            /** audioContext: allows to process audio with WebAudio API */\n\n            /** @private */\n\n            /** @private */\n\n            /**\n             * Does the browser support this backend\n             *\n             * @return {boolean} Whether or not this browser supports this backend\n             */\n            function supportsWebAudio() {\n              return !!(window.AudioContext || window.webkitAudioContext);\n            }\n            /**\n             * Get the audio context used by this backend or create one\n             *\n             * @return {AudioContext} Existing audio context, or creates a new one\n             */\n          }, {\n            key: \"getAudioContext\",\n            value: function getAudioContext() {\n              if (!window.WaveSurferAudioContext) {\n                window.WaveSurferAudioContext = new (window.AudioContext || window.webkitAudioContext)();\n              }\n              return window.WaveSurferAudioContext;\n            }\n            /**\n             * Get the offline audio context used by this backend or create one\n             *\n             * @param {number} sampleRate The sample rate to use\n             * @return {OfflineAudioContext} Existing offline audio context, or creates\n             * a new one\n             */\n          }, {\n            key: \"getOfflineAudioContext\",\n            value: function getOfflineAudioContext(sampleRate) {\n              if (!window.WaveSurferOfflineAudioContext) {\n                window.WaveSurferOfflineAudioContext = new (window.OfflineAudioContext || window.webkitOfflineAudioContext)(1, 2, sampleRate);\n              }\n              return window.WaveSurferOfflineAudioContext;\n            }\n          }, {\n            key: \"init\",\n            value: function init() {\n              this.createVolumeNode();\n              this.createScriptNode();\n              this.createAnalyserNode();\n              this.setState(PAUSED);\n              this.setPlaybackRate(this.params.audioRate);\n              this.setLength(0);\n            }\n            /** @private */\n          }, {\n            key: \"disconnectFilters\",\n            value: function disconnectFilters() {\n              if (this.filters) {\n                this.filters.forEach(function (filter) {\n                  filter && filter.disconnect();\n                });\n                this.filters = null; // Reconnect direct path\n\n                this.analyser.connect(this.gainNode);\n              }\n            }\n            /**\n             * @private\n             *\n             * @param {string} state The new state\n             */\n          }, {\n            key: \"setState\",\n            value: function setState(state) {\n              if (this.state !== this.states[state]) {\n                this.state = this.states[state];\n                this.state.init.call(this);\n              }\n            }\n            /**\n             * Unpacked `setFilters()`\n             *\n             * @param {...AudioNode} filters One or more filters to set\n             */\n          }, {\n            key: \"setFilter\",\n            value: function setFilter() {\n              for (var _len = arguments.length, filters = new Array(_len), _key = 0; _key < _len; _key++) {\n                filters[_key] = arguments[_key];\n              }\n              this.setFilters(filters);\n            }\n            /**\n             * Insert custom Web Audio nodes into the graph\n             *\n             * @param {AudioNode[]} filters Packed filters array\n             * @example\n             * const lowpass = wavesurfer.backend.ac.createBiquadFilter();\n             * wavesurfer.backend.setFilter(lowpass);\n             */\n          }, {\n            key: \"setFilters\",\n            value: function setFilters(filters) {\n              // Remove existing filters\n              this.disconnectFilters(); // Insert filters if filter array not empty\n\n              if (filters && filters.length) {\n                this.filters = filters; // Disconnect direct path before inserting filters\n\n                this.analyser.disconnect(); // Connect each filter in turn\n\n                filters.reduce(function (prev, curr) {\n                  prev.connect(curr);\n                  return curr;\n                }, this.analyser).connect(this.gainNode);\n              }\n            }\n            /** Create ScriptProcessorNode to process audio */\n          }, {\n            key: \"createScriptNode\",\n            value: function createScriptNode() {\n              if (this.params.audioScriptProcessor) {\n                this.scriptNode = this.params.audioScriptProcessor;\n              } else {\n                if (this.ac.createScriptProcessor) {\n                  this.scriptNode = this.ac.createScriptProcessor(WebAudio.scriptBufferSize);\n                } else {\n                  this.scriptNode = this.ac.createJavaScriptNode(WebAudio.scriptBufferSize);\n                }\n              }\n              this.scriptNode.connect(this.ac.destination);\n            }\n            /** @private */\n          }, {\n            key: \"addOnAudioProcess\",\n            value: function addOnAudioProcess() {\n              var _this2 = this;\n              this.scriptNode.onaudioprocess = function () {\n                var time = _this2.getCurrentTime();\n                if (time >= _this2.getDuration()) {\n                  _this2.setState(FINISHED);\n                  _this2.fireEvent('pause');\n                } else if (time >= _this2.scheduledPause) {\n                  _this2.pause();\n                } else if (_this2.state === _this2.states[PLAYING]) {\n                  _this2.fireEvent('audioprocess', time);\n                }\n              };\n            }\n            /** @private */\n          }, {\n            key: \"removeOnAudioProcess\",\n            value: function removeOnAudioProcess() {\n              this.scriptNode.onaudioprocess = null;\n            }\n            /** Create analyser node to perform audio analysis */\n          }, {\n            key: \"createAnalyserNode\",\n            value: function createAnalyserNode() {\n              this.analyser = this.ac.createAnalyser();\n              this.analyser.connect(this.gainNode);\n            }\n            /**\n             * Create the gain node needed to control the playback volume.\n             *\n             */\n          }, {\n            key: \"createVolumeNode\",\n            value: function createVolumeNode() {\n              // Create gain node using the AudioContext\n              if (this.ac.createGain) {\n                this.gainNode = this.ac.createGain();\n              } else {\n                this.gainNode = this.ac.createGainNode();\n              } // Add the gain node to the graph\n\n              this.gainNode.connect(this.ac.destination);\n            }\n            /**\n             * Set the sink id for the media player\n             *\n             * @param {string} deviceId String value representing audio device id.\n             * @returns {Promise} A Promise that resolves to `undefined` when there\n             * are no errors.\n             */\n          }, {\n            key: \"setSinkId\",\n            value: function setSinkId(deviceId) {\n              if (deviceId) {\n                /**\n                 * The webaudio API doesn't currently support setting the device\n                 * output. Here we create an HTMLAudioElement, connect the\n                 * webaudio stream to that element and setSinkId there.\n                 */\n                var audio = new window.Audio();\n                if (!audio.setSinkId) {\n                  return Promise.reject(new Error('setSinkId is not supported in your browser'));\n                }\n                audio.autoplay = true;\n                var dest = this.ac.createMediaStreamDestination();\n                this.gainNode.disconnect();\n                this.gainNode.connect(dest);\n                audio.srcObject = dest.stream;\n                return audio.setSinkId(deviceId);\n              } else {\n                return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\n              }\n            }\n            /**\n             * Set the audio volume\n             *\n             * @param {number} value A floating point value between 0 and 1.\n             */\n          }, {\n            key: \"setVolume\",\n            value: function setVolume(value) {\n              this.gainNode.gain.setValueAtTime(value, this.ac.currentTime);\n            }\n            /**\n             * Get the current volume\n             *\n             * @return {number} value A floating point value between 0 and 1.\n             */\n          }, {\n            key: \"getVolume\",\n            value: function getVolume() {\n              return this.gainNode.gain.value;\n            }\n            /**\n             * Decode an array buffer and pass data to a callback\n             *\n             * @private\n             * @param {ArrayBuffer} arraybuffer The array buffer to decode\n             * @param {function} callback The function to call on complete.\n             * @param {function} errback The function to call on error.\n             */\n          }, {\n            key: \"decodeArrayBuffer\",\n            value: function decodeArrayBuffer(arraybuffer, callback, errback) {\n              if (!this.offlineAc) {\n                this.offlineAc = this.getOfflineAudioContext(this.ac && this.ac.sampleRate ? this.ac.sampleRate : 44100);\n              }\n              if ('webkitAudioContext' in window) {\n                // Safari: no support for Promise-based decodeAudioData enabled\n                // Enable it in Safari using the Experimental Features > Modern WebAudio API option\n                this.offlineAc.decodeAudioData(arraybuffer, function (data) {\n                  return callback(data);\n                }, errback);\n              } else {\n                this.offlineAc.decodeAudioData(arraybuffer).then(function (data) {\n                  return callback(data);\n                }).catch(function (err) {\n                  return errback(err);\n                });\n              }\n            }\n            /**\n             * Set pre-decoded peaks\n             *\n             * @param {number[]|Number.<Array[]>} peaks Peaks data\n             * @param {?number} duration Explicit duration\n             */\n          }, {\n            key: \"setPeaks\",\n            value: function setPeaks(peaks, duration) {\n              if (duration != null) {\n                this.explicitDuration = duration;\n              }\n              this.peaks = peaks;\n            }\n            /**\n             * Set the rendered length (different from the length of the audio)\n             *\n             * @param {number} length The rendered length\n             */\n          }, {\n            key: \"setLength\",\n            value: function setLength(length) {\n              // No resize, we can preserve the cached peaks.\n              if (this.mergedPeaks && length == 2 * this.mergedPeaks.length - 1 + 2) {\n                return;\n              }\n              this.splitPeaks = [];\n              this.mergedPeaks = []; // Set the last element of the sparse array so the peak arrays are\n              // appropriately sized for other calculations.\n\n              var channels = this.buffer ? this.buffer.numberOfChannels : 1;\n              var c;\n              for (c = 0; c < channels; c++) {\n                this.splitPeaks[c] = [];\n                this.splitPeaks[c][2 * (length - 1)] = 0;\n                this.splitPeaks[c][2 * (length - 1) + 1] = 0;\n              }\n              this.mergedPeaks[2 * (length - 1)] = 0;\n              this.mergedPeaks[2 * (length - 1) + 1] = 0;\n            }\n            /**\n             * Compute the max and min value of the waveform when broken into <length> subranges.\n             *\n             * @param {number} length How many subranges to break the waveform into.\n             * @param {number} first First sample in the required range.\n             * @param {number} last Last sample in the required range.\n             * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of arrays of\n             * peaks consisting of (max, min) values for each subrange.\n             */\n          }, {\n            key: \"getPeaks\",\n            value: function getPeaks(length, first, last) {\n              if (this.peaks) {\n                return this.peaks;\n              }\n              if (!this.buffer) {\n                return [];\n              }\n              first = first || 0;\n              last = last || length - 1;\n              this.setLength(length);\n              if (!this.buffer) {\n                return this.params.splitChannels ? this.splitPeaks : this.mergedPeaks;\n              }\n              /**\n               * The following snippet fixes a buffering data issue on the Safari\n               * browser which returned undefined It creates the missing buffer based\n               * on 1 channel, 4096 samples and the sampleRate from the current\n               * webaudio context 4096 samples seemed to be the best fit for rendering\n               * will review this code once a stable version of Safari TP is out\n               */\n\n              if (!this.buffer.length) {\n                var newBuffer = this.createBuffer(1, 4096, this.sampleRate);\n                this.buffer = newBuffer.buffer;\n              }\n              var sampleSize = this.buffer.length / length;\n              var sampleStep = ~~(sampleSize / 10) || 1;\n              var channels = this.buffer.numberOfChannels;\n              var c;\n              for (c = 0; c < channels; c++) {\n                var peaks = this.splitPeaks[c];\n                var chan = this.buffer.getChannelData(c);\n                var i = void 0;\n                for (i = first; i <= last; i++) {\n                  var start = ~~(i * sampleSize);\n                  var end = ~~(start + sampleSize);\n                  /**\n                   * Initialize the max and min to the first sample of this\n                   * subrange, so that even if the samples are entirely\n                   * on one side of zero, we still return the true max and\n                   * min values in the subrange.\n                   */\n\n                  var min = chan[start];\n                  var max = min;\n                  var j = void 0;\n                  for (j = start; j < end; j += sampleStep) {\n                    var value = chan[j];\n                    if (value > max) {\n                      max = value;\n                    }\n                    if (value < min) {\n                      min = value;\n                    }\n                  }\n                  peaks[2 * i] = max;\n                  peaks[2 * i + 1] = min;\n                  if (c == 0 || max > this.mergedPeaks[2 * i]) {\n                    this.mergedPeaks[2 * i] = max;\n                  }\n                  if (c == 0 || min < this.mergedPeaks[2 * i + 1]) {\n                    this.mergedPeaks[2 * i + 1] = min;\n                  }\n                }\n              }\n              return this.params.splitChannels ? this.splitPeaks : this.mergedPeaks;\n            }\n            /**\n             * Get the position from 0 to 1\n             *\n             * @return {number} Position\n             */\n          }, {\n            key: \"getPlayedPercents\",\n            value: function getPlayedPercents() {\n              return this.state.getPlayedPercents.call(this);\n            }\n            /** @private */\n          }, {\n            key: \"disconnectSource\",\n            value: function disconnectSource() {\n              if (this.source) {\n                this.source.disconnect();\n              }\n            }\n            /**\n             * Destroy all references with WebAudio, disconnecting audio nodes and closing Audio Context\n             */\n          }, {\n            key: \"destroyWebAudio\",\n            value: function destroyWebAudio() {\n              this.disconnectFilters();\n              this.disconnectSource();\n              this.gainNode.disconnect();\n              this.scriptNode.disconnect();\n              this.analyser.disconnect(); // close the audioContext if closeAudioContext option is set to true\n\n              if (this.params.closeAudioContext) {\n                // check if browser supports AudioContext.close()\n                if (typeof this.ac.close === 'function' && this.ac.state != 'closed') {\n                  this.ac.close();\n                } // clear the reference to the audiocontext\n\n                this.ac = null; // clear the actual audiocontext, either passed as param or the\n                // global singleton\n\n                if (!this.params.audioContext) {\n                  window.WaveSurferAudioContext = null;\n                } else {\n                  this.params.audioContext = null;\n                } // clear the offlineAudioContext\n\n                window.WaveSurferOfflineAudioContext = null;\n              }\n            }\n            /**\n             * This is called when wavesurfer is destroyed\n             */\n          }, {\n            key: \"destroy\",\n            value: function destroy() {\n              if (!this.isPaused()) {\n                this.pause();\n              }\n              this.unAll();\n              this.buffer = null;\n              this.destroyed = true;\n              this.destroyWebAudio();\n            }\n            /**\n             * Loaded a decoded audio buffer\n             *\n             * @param {Object} buffer Decoded audio buffer to load\n             */\n          }, {\n            key: \"load\",\n            value: function load(buffer) {\n              this.startPosition = 0;\n              this.lastPlay = this.ac.currentTime;\n              this.buffer = buffer;\n              this.createSource();\n            }\n            /** @private */\n          }, {\n            key: \"createSource\",\n            value: function createSource() {\n              this.disconnectSource();\n              this.source = this.ac.createBufferSource(); // adjust for old browsers\n\n              this.source.start = this.source.start || this.source.noteGrainOn;\n              this.source.stop = this.source.stop || this.source.noteOff;\n              this.setPlaybackRate(this.playbackRate);\n              this.source.buffer = this.buffer;\n              this.source.connect(this.analyser);\n            }\n            /**\n             * @private\n             *\n             * some browsers require an explicit call to #resume before they will play back audio\n             */\n          }, {\n            key: \"resumeAudioContext\",\n            value: function resumeAudioContext() {\n              if (this.ac.state == 'suspended') {\n                this.ac.resume && this.ac.resume();\n              }\n            }\n            /**\n             * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n             *\n             * @return {boolean} Whether or not this backend is currently paused\n             */\n          }, {\n            key: \"isPaused\",\n            value: function isPaused() {\n              return this.state !== this.states[PLAYING];\n            }\n            /**\n             * Used by `wavesurfer.getDuration()`\n             *\n             * @return {number} Duration of loaded buffer\n             */\n          }, {\n            key: \"getDuration\",\n            value: function getDuration() {\n              if (this.explicitDuration) {\n                return this.explicitDuration;\n              }\n              if (!this.buffer) {\n                return 0;\n              }\n              return this.buffer.duration;\n            }\n            /**\n             * Used by `wavesurfer.seekTo()`\n             *\n             * @param {number} start Position to start at in seconds\n             * @param {number} end Position to end at in seconds\n             * @return {{start: number, end: number}} Object containing start and end\n             * positions\n             */\n          }, {\n            key: \"seekTo\",\n            value: function seekTo(start, end) {\n              if (!this.buffer) {\n                return;\n              }\n              this.scheduledPause = null;\n              if (start == null) {\n                start = this.getCurrentTime();\n                if (start >= this.getDuration()) {\n                  start = 0;\n                }\n              }\n              if (end == null) {\n                end = this.getDuration();\n              }\n              this.startPosition = start;\n              this.lastPlay = this.ac.currentTime;\n              if (this.state === this.states[FINISHED]) {\n                this.setState(PAUSED);\n              }\n              return {\n                start: start,\n                end: end\n              };\n            }\n            /**\n             * Get the playback position in seconds\n             *\n             * @return {number} The playback position in seconds\n             */\n          }, {\n            key: \"getPlayedTime\",\n            value: function getPlayedTime() {\n              return (this.ac.currentTime - this.lastPlay) * this.playbackRate;\n            }\n            /**\n             * Plays the loaded audio region.\n             *\n             * @param {number} start Start offset in seconds, relative to the beginning\n             * of a clip.\n             * @param {number} end When to stop relative to the beginning of a clip.\n             */\n          }, {\n            key: \"play\",\n            value: function play(start, end) {\n              if (!this.buffer) {\n                return;\n              } // need to re-create source on each playback\n\n              this.createSource();\n              var adjustedTime = this.seekTo(start, end);\n              start = adjustedTime.start;\n              end = adjustedTime.end;\n              this.scheduledPause = end;\n              this.source.start(0, start);\n              this.resumeAudioContext();\n              this.setState(PLAYING);\n              this.fireEvent('play');\n            }\n            /**\n             * Pauses the loaded audio.\n             */\n          }, {\n            key: \"pause\",\n            value: function pause() {\n              this.scheduledPause = null;\n              this.startPosition += this.getPlayedTime();\n              try {\n                this.source && this.source.stop(0);\n              } catch (err) {// Calling stop can throw the following 2 errors:\n                // - RangeError (The value specified for when is negative.)\n                // - InvalidStateNode (The node has not been started by calling start().)\n                // We can safely ignore both errors, because:\n                // - The range is surely correct\n                // - The node might not have been started yet, in which case we just want to carry on without causing any trouble.\n              }\n              this.setState(PAUSED);\n              this.fireEvent('pause');\n            }\n            /**\n             * Returns the current time in seconds relative to the audio-clip's\n             * duration.\n             *\n             * @return {number} The current time in seconds\n             */\n          }, {\n            key: \"getCurrentTime\",\n            value: function getCurrentTime() {\n              return this.state.getCurrentTime.call(this);\n            }\n            /**\n             * Returns the current playback rate. (0=no playback, 1=normal playback)\n             *\n             * @return {number} The current playback rate\n             */\n          }, {\n            key: \"getPlaybackRate\",\n            value: function getPlaybackRate() {\n              return this.playbackRate;\n            }\n            /**\n             * Set the audio source playback rate.\n             *\n             * @param {number} value The playback rate to use\n             */\n          }, {\n            key: \"setPlaybackRate\",\n            value: function setPlaybackRate(value) {\n              this.playbackRate = value || 1;\n              this.source && this.source.playbackRate.setValueAtTime(this.playbackRate, this.ac.currentTime);\n            }\n            /**\n             * Set a point in seconds for playback to stop at.\n             *\n             * @param {number} end Position to end at\n             * @version 3.3.0\n             */\n          }, {\n            key: \"setPlayEnd\",\n            value: function setPlayEnd(end) {\n              this.scheduledPause = end;\n            }\n          }]);\n          return WebAudio;\n        }(util.Observer);\n        exports.default = WebAudio;\n        WebAudio.scriptBufferSize = 256;\n        module.exports = exports.default;\n\n        /***/\n      }),\n      /***/\"./node_modules/debounce/index.js\": (\n      /*!****************************************!*\\\n        !*** ./node_modules/debounce/index.js ***!\n        \\****************************************/\n      /***/\n      module => {\n        /**\n         * Returns a function, that, as long as it continues to be invoked, will not\n         * be triggered. The function will be called after it stops being called for\n         * N milliseconds. If `immediate` is passed, trigger the function on the\n         * leading edge, instead of the trailing. The function also has a property 'clear' \n         * that is a function which will clear the timer to prevent previously scheduled executions. \n         *\n         * @source underscore.js\n         * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n         * @param {Function} function to wrap\n         * @param {Number} timeout in ms (`100`)\n         * @param {Boolean} whether to execute at the beginning (`false`)\n         * @api public\n         */\n        function debounce(func, wait, immediate) {\n          var timeout, args, context, timestamp, result;\n          if (null == wait) wait = 100;\n          function later() {\n            var last = Date.now() - timestamp;\n            if (last < wait && last >= 0) {\n              timeout = setTimeout(later, wait - last);\n            } else {\n              timeout = null;\n              if (!immediate) {\n                result = func.apply(context, args);\n                context = args = null;\n              }\n            }\n          }\n          ;\n          var debounced = function () {\n            context = this;\n            args = arguments;\n            timestamp = Date.now();\n            var callNow = immediate && !timeout;\n            if (!timeout) timeout = setTimeout(later, wait);\n            if (callNow) {\n              result = func.apply(context, args);\n              context = args = null;\n            }\n            return result;\n          };\n          debounced.clear = function () {\n            if (timeout) {\n              clearTimeout(timeout);\n              timeout = null;\n            }\n          };\n          debounced.flush = function () {\n            if (timeout) {\n              result = func.apply(context, args);\n              context = args = null;\n              clearTimeout(timeout);\n              timeout = null;\n            }\n          };\n          return debounced;\n        }\n        ;\n\n        // Adds compatibility for ES modules\n        debounce.debounce = debounce;\n        module.exports = debounce;\n\n        /***/\n      })\n\n      /******/\n    };\n    /************************************************************************/\n    /******/ // The module cache\n    /******/\n    var __webpack_module_cache__ = {};\n    /******/\n    /******/ // The require function\n    /******/\n    function __webpack_require__(moduleId) {\n      /******/ // Check if module is in cache\n      /******/var cachedModule = __webpack_module_cache__[moduleId];\n      /******/\n      if (cachedModule !== undefined) {\n        /******/return cachedModule.exports;\n        /******/\n      }\n      /******/ // Create a new module (and put it into the cache)\n      /******/\n      var module = __webpack_module_cache__[moduleId] = {\n        /******/ // no module.id needed\n        /******/ // no module.loaded needed\n        /******/exports: {}\n        /******/\n      };\n      /******/\n      /******/ // Execute the module function\n      /******/\n      __webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n      /******/\n      /******/ // Return the exports of the module\n      /******/\n      return module.exports;\n      /******/\n    }\n    /******/\n    /************************************************************************/\n    /******/\n    /******/ // startup\n    /******/ // Load entry module and return exports\n    /******/ // This entry module is referenced by other modules so it can't be inlined\n    /******/\n    var __webpack_exports__ = __webpack_require__(\"./src/wavesurfer.js\");\n    /******/\n    /******/\n    return __webpack_exports__;\n    /******/\n  })();\n});","map":{"version":3,"sources":["webpack://WaveSurfer/webpack/universalModuleDefinition","webpack://WaveSurfer/src/drawer.canvasentry.js","webpack://WaveSurfer/src/drawer.js","webpack://WaveSurfer/src/drawer.multicanvas.js","webpack://WaveSurfer/src/mediaelement-webaudio.js","webpack://WaveSurfer/src/mediaelement.js","webpack://WaveSurfer/src/peakcache.js","webpack://WaveSurfer/src/util/absMax.js","webpack://WaveSurfer/src/util/clamp.js","webpack://WaveSurfer/src/util/fetch.js","webpack://WaveSurfer/src/util/frame.js","webpack://WaveSurfer/src/util/get-id.js","webpack://WaveSurfer/src/util/index.js","webpack://WaveSurfer/src/util/max.js","webpack://WaveSurfer/src/util/min.js","webpack://WaveSurfer/src/util/observer.js","webpack://WaveSurfer/src/util/orientation.js","webpack://WaveSurfer/src/util/prevent-click.js","webpack://WaveSurfer/src/util/request-animation-frame.js","webpack://WaveSurfer/src/util/silence-mode.js","webpack://WaveSurfer/src/util/style.js","webpack://WaveSurfer/src/wavesurfer.js","webpack://WaveSurfer/src/webaudio.js","webpack://WaveSurfer/node_modules/debounce/index.js","webpack://WaveSurfer/webpack/bootstrap","webpack://WaveSurfer/webpack/startup"],"names":["CanvasEntry","wave","waveCtx","progress","progressCtx","start","end","id","constructor","name","toLowerCase","canvasContextAttributes","element","getContext","elementWidth","totalWidth","width","height","offsetLeft","elementSize","hasProgressCanvas","clearRect","canvas","waveColor","progressColor","fillStyle","vertical","setTransform","x","y","radius","fillRectToContext","ctx","drawRoundedRect","fillRect","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","fill","peaks","absmax","halfH","offsetY","drawLineToContext","length","first","Math","round","last","canvasStart","canvasEnd","scale","halfOffset","absmaxHalf","i","peak","h","halfPixel","j","format","quality","type","Promise","toBlob","resolve","toDataURL","Drawer","util","Observer","container","params","withOrientation","pixelRatio","lastPos","wrapper","el","styles","style","appendChild","document","createElement","display","position","userSelect","webkitUserSelect","fillParent","scrollParent","overflowX","hideScrollbar","overflowY","setupWrapperEvents","e","noPrevent","preventDefault","clientX","targetTouches","bbox","getBoundingClientRect","nominalWidth","parentWidth","getWidth","progressPixels","getProgressPixels","scrollLeft","scrollWidth","clamp","wrapperBbox","rtl","right","left","addEventListener","orientedEvent","scrollbarHeight","offsetHeight","clientHeight","clientY","bottom","interact","fireEvent","handleEvent","setWidth","clearWave","barWidth","drawBars","drawWave","percent","recenterOnPosition","immediate","half","clientWidth","maxScroll","target","offset","rate","autoCenterRate","max","min","newWidth","updateSize","minPxDelta","pos","autoCenter","newPos","autoCenterImmediately","updateProgress","unAll","parentNode","domElement","removeChild","channelIndex","MultiCanvas","maxCanvasWidth","maxCanvasElementWidth","canvases","progressWave","EntryClass","drawingContextAttributes","overlap","ceil","barRadius","createWrapper","createElements","zIndex","top","overflow","boxSizing","borderRightStyle","pointerEvents","addCanvas","updateCursor","borderRightWidth","cursorWidth","borderRightColor","cursorColor","requiredCanvases","removeCanvas","canvasWidth","lastCanvas","forEach","entry","updateDimensions","leftOffset","initWave","initProgress","push","lastEntry","parentElement","destroy","pop","frame","prepareDraw","hasMinVals","ch","undefined","peakIndexScale","bar","gap","barGap","step","floor","barMinHeight","reflectedPeaks","len","drawLine","splitChannelsOptions","channelColors","setFillStyles","applyCanvasTransforms","drawLines","startCanvas","endCanvas","intersection","x1","y1","x2","y2","fillRects","splitChannels","filterChannels","includes","fn","drawIndex","normalizedMax","Array","channels","filteredChannels","filter","c","hideChannel","overlay","setHeight","overallAbsMax","relativeNormalization","map","absMax","channelPeaks","indexOf","barHeight","normalize","some","call","val","all","getImage","images","MediaElementWebAudio","MediaElement","sourceMediaElement","setPlaybackRate","audioRate","createTimer","createVolumeNode","createScriptNode","createAnalyserNode","media","preload","createMediaElementSource","mediaElement","ac","connect","analyser","resumeAudioContext","destroyWebAudio","WebAudio","currentTime","duration","paused","playbackRate","play","pause","volume","mediaType","elementPosition","isMuted","buffer","onPlayEnd","mediaListeners","error","canplay","ended","seeked","volumechange","muted","Object","keys","removeEventListener","onAudioProcess","isPaused","getCurrentTime","on","url","controls","mediaControls","autoplay","src","prevMedia","querySelector","_load","elt","HTMLMediaElement","Error","load","_setupMediaListeners","setVolume","explicitDuration","Infinity","seekable","getDuration","value","clearPlayEnd","seekTo","promise","setPlayEnd","_onPlayEnd","time","un","deviceId","setSinkId","reject","destroyed","removeMediaElementOnDestroy","PeakCache","clearPeakCache","peakCacheRanges","peakCacheLength","uncachedRanges","item","arr","concat","sort","a","b","uncachedRangePairs","peakCacheRangePairs","values","ProgressHandler","instance","contentLength","response","_reader","body","getReader","total","parseInt","loaded","controller","read","then","done","onProgress","lengthComputable","close","byteLength","enqueue","catch","fetchFile","options","fetchHeaders","Headers","fetchRequest","Request","AbortController","requestHeaders","append","header","key","responseType","fetchOptions","method","headers","mode","credentials","cache","redirect","referrer","signal","fetch","progressAvailable","get","Response","ReadableStream","errMsg","ok","arrayBuffer","json","blob","text","status","func","args","getId","prefix","random","toString","substring","largest","smallest","Number","_disabledEventEmissions","handlers","event","callback","splice","handler","apply","setTimeout","eventNames","_isDisabledEventEmission","verticalPropMap","offsetTop","offsetWidth","mapProp","prop","prototype","hasOwnProperty","isProxy","Symbol","Proxy","obj","receiver","bind","set","preventClickHandler","stopPropagation","preventClick","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","ignoreSilenceMode","audioData","tmp","innerHTML","audioSilentMode","children","disableRemotePlayback","remove","PluginClass","ws","WaveSurfer","defaultParams","audioContext","audioScriptProcessor","backend","backgroundColor","dragSelection","desynchronized","forceDecode","loopSelection","mediaContainer","minPxPerSec","partialRender","devicePixelRatio","screen","deviceXDPI","logicalXDPI","plugins","renderer","responsive","skipLength","xhr","backends","wavesurfer","init","VERSION","__VERSION__","assign","transform","setBackgroundColor","savedVolume","tmpEvents","currentRequest","arraybuffer","drawer","peakCache","supportsWebAudio","Backend","initialisedPluginList","isDestroyed","isReady","prevWidth","_onResize","debounce","registerPlugins","createDrawer","createBackend","createPeakCache","addPlugin","plugin","deferInit","initPlugin","staticProps","pluginStaticProp","Instance","observerPrototypeKeys","getOwnPropertyNames","destroyPlugin","drawBuffer","getPlayedPercents","newVolume","getVolume","seconds","skip","seekAndCenter","recenter","isFinite","isWebAudioBackend","oldScrollParent","getPlaybackRate","setMute","mute","filters","color","background","channelIndices","newRanges","addRangeToPeakCache","getPeaks","drawPeaks","pxPerSec","decodeArrayBuffer","loadDecodedBuffer","data","reader","FileReader","loadArrayBuffer","result","readAsArrayBuffer","empty","preloadIgnoreReasons","activeReasons","reason","console","warn","join","loadBuffer","loadMediaElement","action","once","getArrayBuffer","setPeaks","urlOrElt","loadElt","err","request","percentComplete","accuracy","noWindow","blobJSON","Blob","JSON","stringify","objURL","URL","createObjectURL","open","revokeObjectURL","cancel","abort","stop","disconnectSource","cancelAjax","clearTmpEvents","destroyAllPlugins","PLAYING","PAUSED","FINISHED","scriptBufferSize","offlineAudioContext","stateBehaviors","addOnAudioProcess","startPosition","getPlayedTime","removeOnAudioProcess","AudioContext","webkitAudioContext","WaveSurferAudioContext","sampleRate","WaveSurferOfflineAudioContext","OfflineAudioContext","webkitOfflineAudioContext","getAudioContext","lastPlay","scheduledPause","states","create","gainNode","mergedPeaks","offlineAc","scriptNode","source","splitPeaks","state","setState","setLength","disconnect","setFilters","disconnectFilters","reduce","prev","curr","createScriptProcessor","createJavaScriptNode","destination","onaudioprocess","createAnalyser","createGain","createGainNode","audio","Audio","dest","createMediaStreamDestination","srcObject","stream","gain","setValueAtTime","errback","getOfflineAudioContext","decodeAudioData","numberOfChannels","newBuffer","createBuffer","sampleSize","sampleStep","chan","getChannelData","closeAudioContext","createSource","createBufferSource","noteGrainOn","noteOff","resume","adjustedTime"],"mappings":"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gCAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAEA;AACA;AACA;;QAEA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;QAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;QAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;QAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;YACM4W,WAAAA,GAAAA,aAAAA,YAAAA;UAYF;AACJ;AACA;AACA;AACA;AACA;UACI,SAAA,WAAA,CAAYjX,MAAZ,EAAoBkX,EAApB,EAAwB;YAAA,eAAA,CAAA,IAAA,EAAA,WAAA,CAAA;UAAE;UAC1B;AACJ;AACA;AACA;AACA;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","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = factory();\n})(self, function() {\nreturn ","/**\n * @since 3.0.0\n */\n\nimport style from './util/style';\nimport getId from './util/get-id';\n\n/**\n * The `CanvasEntry` class represents an element consisting of a wave `canvas`\n * and an (optional) progress wave `canvas`.\n *\n * The `MultiCanvas` renderer uses one or more `CanvasEntry` instances to\n * render a waveform, depending on the zoom level.\n */\nexport default class CanvasEntry {\n    constructor() {\n        /**\n         * The wave node\n         *\n         * @type {HTMLCanvasElement}\n         */\n        this.wave = null;\n        /**\n         * The wave canvas rendering context\n         *\n         * @type {CanvasRenderingContext2D}\n         */\n        this.waveCtx = null;\n        /**\n         * The (optional) progress wave node\n         *\n         * @type {HTMLCanvasElement}\n         */\n        this.progress = null;\n        /**\n         * The (optional) progress wave canvas rendering context\n         *\n         * @type {CanvasRenderingContext2D}\n         */\n        this.progressCtx = null;\n        /**\n         * Start of the area the canvas should render, between 0 and 1\n         *\n         * @type {number}\n         */\n        this.start = 0;\n        /**\n         * End of the area the canvas should render, between 0 and 1\n         *\n         * @type {number}\n         */\n        this.end = 1;\n        /**\n         * Unique identifier for this entry\n         *\n         * @type {string}\n         */\n        this.id = getId(\n            typeof this.constructor.name !== 'undefined'\n                ? this.constructor.name.toLowerCase() + '_'\n                : 'canvasentry_'\n        );\n        /**\n         * Canvas 2d context attributes\n         *\n         * @type {object}\n         */\n        this.canvasContextAttributes = {};\n    }\n\n    /**\n     * Store the wave canvas element and create the 2D rendering context\n     *\n     * @param {HTMLCanvasElement} element The wave `canvas` element.\n     */\n    initWave(element) {\n        this.wave = element;\n        this.waveCtx = this.wave.getContext('2d', this.canvasContextAttributes);\n    }\n\n    /**\n     * Store the progress wave canvas element and create the 2D rendering\n     * context\n     *\n     * @param {HTMLCanvasElement} element The progress wave `canvas` element.\n     */\n    initProgress(element) {\n        this.progress = element;\n        this.progressCtx = this.progress.getContext(\n            '2d',\n            this.canvasContextAttributes\n        );\n    }\n\n    /**\n     * Update the dimensions\n     *\n     * @param {number} elementWidth Width of the entry\n     * @param {number} totalWidth Total width of the multi canvas renderer\n     * @param {number} width The new width of the element\n     * @param {number} height The new height of the element\n     */\n    updateDimensions(elementWidth, totalWidth, width, height) {\n        // where the canvas starts and ends in the waveform, represented as a\n        // decimal between 0 and 1\n        this.start = this.wave.offsetLeft / totalWidth || 0;\n        this.end = this.start + elementWidth / totalWidth;\n\n        // set wave canvas dimensions\n        this.wave.width = width;\n        this.wave.height = height;\n        let elementSize = { width: elementWidth + 'px' };\n        style(this.wave, elementSize);\n\n        if (this.hasProgressCanvas) {\n            // set progress canvas dimensions\n            this.progress.width = width;\n            this.progress.height = height;\n            style(this.progress, elementSize);\n        }\n    }\n\n    /**\n     * Clear the wave and progress rendering contexts\n     */\n    clearWave() {\n        // wave\n        this.waveCtx.clearRect(\n            0,\n            0,\n            this.waveCtx.canvas.width,\n            this.waveCtx.canvas.height\n        );\n\n        // progress\n        if (this.hasProgressCanvas) {\n            this.progressCtx.clearRect(\n                0,\n                0,\n                this.progressCtx.canvas.width,\n                this.progressCtx.canvas.height\n            );\n        }\n    }\n\n    /**\n     * Set the fill styles for wave and progress\n     *\n     * @param {string} waveColor Fill color for the wave canvas\n     * @param {?string} progressColor Fill color for the progress canvas\n     */\n    setFillStyles(waveColor, progressColor) {\n        this.waveCtx.fillStyle = waveColor;\n\n        if (this.hasProgressCanvas) {\n            this.progressCtx.fillStyle = progressColor;\n        }\n    }\n\n    /**\n     * Set the canvas transforms for wave and progress\n     *\n     * @param {boolean} vertical Whether to render vertically\n     */\n    applyCanvasTransforms(vertical) {\n        if (vertical) {\n            // Reflect the waveform across the line y = -x\n            this.waveCtx.setTransform(0, 1, 1, 0, 0, 0);\n\n            if (this.hasProgressCanvas) {\n                this.progressCtx.setTransform(0, 1, 1, 0, 0, 0);\n            }\n        }\n    }\n\n    /**\n     * Draw a rectangle for wave and progress\n     *\n     * @param {number} x X start position\n     * @param {number} y Y start position\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     */\n    fillRects(x, y, width, height, radius) {\n        this.fillRectToContext(this.waveCtx, x, y, width, height, radius);\n\n        if (this.hasProgressCanvas) {\n            this.fillRectToContext(\n                this.progressCtx,\n                x,\n                y,\n                width,\n                height,\n                radius\n            );\n        }\n    }\n\n    /**\n     * Draw the actual rectangle on a `canvas` element\n     *\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n     * @param {number} x X start position\n     * @param {number} y Y start position\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     */\n    fillRectToContext(ctx, x, y, width, height, radius) {\n        if (!ctx) {\n            return;\n        }\n\n        if (radius) {\n            this.drawRoundedRect(ctx, x, y, width, height, radius);\n        } else {\n            ctx.fillRect(x, y, width, height);\n        }\n    }\n\n    /**\n     * Draw a rounded rectangle on Canvas\n     *\n     * @param {CanvasRenderingContext2D} ctx Canvas context\n     * @param {number} x X-position of the rectangle\n     * @param {number} y Y-position of the rectangle\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     *\n     * @return {void}\n     * @example drawRoundedRect(ctx, 50, 50, 5, 10, 3)\n     */\n    drawRoundedRect(ctx, x, y, width, height, radius) {\n        if (height === 0) {\n            return;\n        }\n        // peaks are float values from -1 to 1. Use absolute height values in\n        // order to correctly calculate rounded rectangle coordinates\n        if (height < 0) {\n            height *= -1;\n            y -= height;\n        }\n        ctx.beginPath();\n        ctx.moveTo(x + radius, y);\n        ctx.lineTo(x + width - radius, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n        ctx.lineTo(x + width, y + height - radius);\n        ctx.quadraticCurveTo(\n            x + width,\n            y + height,\n            x + width - radius,\n            y + height\n        );\n        ctx.lineTo(x + radius, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n        ctx.lineTo(x, y + radius);\n        ctx.quadraticCurveTo(x, y, x + radius, y);\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    /**\n     * Render the actual wave and progress lines\n     *\n     * @param {number[]} peaks Array with peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     */\n    drawLines(peaks, absmax, halfH, offsetY, start, end) {\n        this.drawLineToContext(\n            this.waveCtx,\n            peaks,\n            absmax,\n            halfH,\n            offsetY,\n            start,\n            end\n        );\n\n        if (this.hasProgressCanvas) {\n            this.drawLineToContext(\n                this.progressCtx,\n                peaks,\n                absmax,\n                halfH,\n                offsetY,\n                start,\n                end\n            );\n        }\n    }\n\n    /**\n     * Render the actual waveform line on a `canvas` element\n     *\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n     * @param {number[]} peaks Array with peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     */\n    drawLineToContext(ctx, peaks, absmax, halfH, offsetY, start, end) {\n        if (!ctx) {\n            return;\n        }\n\n        const length = peaks.length / 2;\n        const first = Math.round(length * this.start);\n\n        // use one more peak value to make sure we join peaks at ends -- unless,\n        // of course, this is the last canvas\n        const last = Math.round(length * this.end) + 1;\n\n        const canvasStart = first;\n        const canvasEnd = last;\n        const scale = this.wave.width / (canvasEnd - canvasStart - 1);\n\n        // optimization\n        const halfOffset = halfH + offsetY;\n        const absmaxHalf = absmax / halfH;\n\n        ctx.beginPath();\n        ctx.moveTo((canvasStart - first) * scale, halfOffset);\n\n        ctx.lineTo(\n            (canvasStart - first) * scale,\n            halfOffset - Math.round((peaks[2 * canvasStart] || 0) / absmaxHalf)\n        );\n\n        let i, peak, h;\n        for (i = canvasStart; i < canvasEnd; i++) {\n            peak = peaks[2 * i] || 0;\n            h = Math.round(peak / absmaxHalf);\n            ctx.lineTo((i - first) * scale + this.halfPixel, halfOffset - h);\n        }\n\n        // draw the bottom edge going backwards, to make a single\n        // closed hull to fill\n        let j = canvasEnd - 1;\n        for (j; j >= canvasStart; j--) {\n            peak = peaks[2 * j + 1] || 0;\n            h = Math.round(peak / absmaxHalf);\n            ctx.lineTo((j - first) * scale + this.halfPixel, halfOffset - h);\n        }\n\n        ctx.lineTo(\n            (canvasStart - first) * scale,\n            halfOffset -\n                Math.round((peaks[2 * canvasStart + 1] || 0) / absmaxHalf)\n        );\n\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    /**\n     * Destroys this entry\n     */\n    destroy() {\n        this.waveCtx = null;\n        this.wave = null;\n\n        this.progressCtx = null;\n        this.progress = null;\n    }\n\n    /**\n     * Return image data of the wave `canvas` element\n     *\n     * When using a `type` of `'blob'`, this will return a `Promise` that\n     * resolves with a `Blob` instance.\n     *\n     * @param {string} format='image/png' An optional value of a format type.\n     * @param {number} quality=0.92 An optional value between 0 and 1.\n     * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\n     * @return {string|Promise} When using the default `'dataURL'` `type` this\n     * returns a data URL. When using the `'blob'` `type` this returns a\n     * `Promise` that resolves with a `Blob` instance.\n     */\n    getImage(format, quality, type) {\n        if (type === 'blob') {\n            return new Promise(resolve => {\n                this.wave.toBlob(resolve, format, quality);\n            });\n        } else if (type === 'dataURL') {\n            return this.wave.toDataURL(format, quality);\n        }\n    }\n}\n","import * as util from './util';\n\n/**\n * Parent class for renderers\n *\n * @extends {Observer}\n */\nexport default class Drawer extends util.Observer {\n    /**\n     * @param {HTMLElement} container The container node of the wavesurfer instance\n     * @param {WavesurferParams} params The wavesurfer initialisation options\n     */\n    constructor(container, params) {\n        super();\n\n        this.container = util.withOrientation(container, params.vertical);\n        /**\n         * @type {WavesurferParams}\n         */\n        this.params = params;\n        /**\n         * The width of the renderer\n         * @type {number}\n         */\n        this.width = 0;\n        /**\n         * The height of the renderer\n         * @type {number}\n         */\n        this.height = params.height * this.params.pixelRatio;\n\n        this.lastPos = 0;\n        /**\n         * The `<wave>` element which is added to the container\n         * @type {HTMLElement}\n         */\n        this.wrapper = null;\n    }\n\n    /**\n     * Alias of `util.style`\n     *\n     * @param {HTMLElement} el The element that the styles will be applied to\n     * @param {Object} styles The map of propName: attribute, both are used as-is\n     * @return {HTMLElement} el\n     */\n    style(el, styles) {\n        return util.style(el, styles);\n    }\n\n    /**\n     * Create the wrapper `<wave>` element, style it and set up the events for\n     * interaction\n     */\n    createWrapper() {\n        this.wrapper = util.withOrientation(\n            this.container.appendChild(document.createElement('wave')),\n            this.params.vertical\n        );\n\n        this.style(this.wrapper, {\n            display: 'block',\n            position: 'relative',\n            userSelect: 'none',\n            webkitUserSelect: 'none',\n            height: this.params.height + 'px'\n        });\n\n        if (this.params.fillParent || this.params.scrollParent) {\n            this.style(this.wrapper, {\n                width: '100%',\n                overflowX: this.params.hideScrollbar ? 'hidden' : 'auto',\n                overflowY: 'hidden'\n            });\n        }\n\n        this.setupWrapperEvents();\n    }\n\n    /**\n     * Handle click event\n     *\n     * @param {Event} e Click event\n     * @param {?boolean} noPrevent Set to true to not call `e.preventDefault()`\n     * @return {number} Playback position from 0 to 1\n     */\n    handleEvent(e, noPrevent) {\n        !noPrevent && e.preventDefault();\n\n        const clientX = util.withOrientation(\n            e.targetTouches ? e.targetTouches[0] : e,\n            this.params.vertical\n        ).clientX;\n        const bbox = this.wrapper.getBoundingClientRect();\n\n        const nominalWidth = this.width;\n        const parentWidth = this.getWidth();\n        const progressPixels = this.getProgressPixels(bbox, clientX);\n\n        let progress;\n        if (!this.params.fillParent && nominalWidth < parentWidth) {\n            progress = progressPixels *\n                (this.params.pixelRatio / nominalWidth) || 0;\n        } else {\n            progress = (progressPixels + this.wrapper.scrollLeft) /\n                this.wrapper.scrollWidth || 0;\n        }\n\n        return util.clamp(progress, 0, 1);\n    }\n\n    getProgressPixels(wrapperBbox, clientX) {\n        if (this.params.rtl) {\n            return wrapperBbox.right - clientX;\n        } else {\n            return clientX - wrapperBbox.left;\n        }\n    }\n\n    setupWrapperEvents() {\n        this.wrapper.addEventListener('click', e => {\n            const orientedEvent = util.withOrientation(e, this.params.vertical);\n            const scrollbarHeight = this.wrapper.offsetHeight -\n                  this.wrapper.clientHeight;\n\n            if (scrollbarHeight !== 0) {\n                // scrollbar is visible.  Check if click was on it\n                const bbox = this.wrapper.getBoundingClientRect();\n                if (orientedEvent.clientY >= bbox.bottom - scrollbarHeight) {\n                    // ignore mousedown as it was on the scrollbar\n                    return;\n                }\n            }\n\n            if (this.params.interact) {\n                this.fireEvent('click', e, this.handleEvent(e));\n            }\n        });\n\n        this.wrapper.addEventListener('dblclick', e => {\n            if (this.params.interact) {\n                this.fireEvent('dblclick', e, this.handleEvent(e));\n            }\n        });\n\n        this.wrapper.addEventListener('scroll', e =>\n            this.fireEvent('scroll', e)\n        );\n    }\n\n    /**\n     * Draw peaks on the canvas\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} length The width of the area that should be drawn\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawPeaks(peaks, length, start, end) {\n        if (!this.setWidth(length)) {\n            this.clearWave();\n        }\n\n        this.params.barWidth\n            ? this.drawBars(peaks, 0, start, end)\n            : this.drawWave(peaks, 0, start, end);\n    }\n\n    /**\n     * Scroll to the beginning\n     */\n    resetScroll() {\n        if (this.wrapper !== null) {\n            this.wrapper.scrollLeft = 0;\n        }\n    }\n\n    /**\n     * Recenter the view-port at a certain percent of the waveform\n     *\n     * @param {number} percent Value from 0 to 1 on the waveform\n     */\n    recenter(percent) {\n        const position = this.wrapper.scrollWidth * percent;\n        this.recenterOnPosition(position, true);\n    }\n\n    /**\n     * Recenter the view-port on a position, either scroll there immediately or\n     * in steps of 5 pixels\n     *\n     * @param {number} position X-offset in pixels\n     * @param {boolean} immediate Set to true to immediately scroll somewhere\n     */\n    recenterOnPosition(position, immediate) {\n        const scrollLeft = this.wrapper.scrollLeft;\n        const half = ~~(this.wrapper.clientWidth / 2);\n        const maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n        let target = position - half;\n        let offset = target - scrollLeft;\n\n        if (maxScroll == 0) {\n            // no need to continue if scrollbar is not there\n            return;\n        }\n\n        // if the cursor is currently visible...\n        if (!immediate && -half <= offset && offset < half) {\n            // set rate at which waveform is centered\n            let rate = this.params.autoCenterRate;\n\n            // make rate depend on width of view and length of waveform\n            rate /= half;\n            rate *= maxScroll;\n\n            offset = Math.max(-rate, Math.min(rate, offset));\n            target = scrollLeft + offset;\n        }\n\n        // limit target to valid range (0 to maxScroll)\n        target = Math.max(0, Math.min(maxScroll, target));\n        // no use attempting to scroll if we're not moving\n        if (target != scrollLeft) {\n            this.wrapper.scrollLeft = target;\n        }\n    }\n\n    /**\n     * Get the current scroll position in pixels\n     *\n     * @return {number} Horizontal scroll position in pixels\n     */\n    getScrollX() {\n        let x = 0;\n        if (this.wrapper) {\n            const pixelRatio = this.params.pixelRatio;\n            x = Math.round(this.wrapper.scrollLeft * pixelRatio);\n\n            // In cases of elastic scroll (safari with mouse wheel) you can\n            // scroll beyond the limits of the container\n            // Calculate and floor the scrollable extent to make sure an out\n            // of bounds value is not returned\n            // Ticket #1312\n            if (this.params.scrollParent) {\n                const maxScroll = ~~(\n                    this.wrapper.scrollWidth * pixelRatio -\n                    this.getWidth()\n                );\n                x = Math.min(maxScroll, Math.max(0, x));\n            }\n        }\n        return x;\n    }\n\n    /**\n     * Get the width of the container\n     *\n     * @return {number} The width of the container\n     */\n    getWidth() {\n        return Math.round(this.container.clientWidth * this.params.pixelRatio);\n    }\n\n    /**\n     * Set the width of the container\n     *\n     * @param {number} width The new width of the container\n     * @return {boolean} Whether the width of the container was updated or not\n     */\n    setWidth(width) {\n        if (this.width == width) {\n            return false;\n        }\n\n        this.width = width;\n\n        if (this.params.fillParent || this.params.scrollParent) {\n            this.style(this.wrapper, {\n                width: ''\n            });\n        } else {\n            const newWidth = ~~(this.width / this.params.pixelRatio) + 'px';\n            this.style(this.wrapper, {\n                width: newWidth\n            });\n        }\n\n        this.updateSize();\n        return true;\n    }\n\n    /**\n     * Set the height of the container\n     *\n     * @param {number} height The new height of the container.\n     * @return {boolean} Whether the height of the container was updated or not\n     */\n    setHeight(height) {\n        if (height == this.height) {\n            return false;\n        }\n        this.height = height;\n\n        this.style(this.wrapper, {\n            height: ~~(this.height / this.params.pixelRatio) + 'px'\n        });\n\n        this.updateSize();\n        return true;\n    }\n\n    /**\n     * Called by wavesurfer when progress should be rendered\n     *\n     * @param {number} progress From 0 to 1\n     */\n    progress(progress) {\n        const minPxDelta = 1 / this.params.pixelRatio;\n        const pos = Math.round(progress * this.width) * minPxDelta;\n\n        if (pos < this.lastPos || pos - this.lastPos >= minPxDelta) {\n            this.lastPos = pos;\n\n            if (this.params.scrollParent && this.params.autoCenter) {\n                const newPos = ~~(this.wrapper.scrollWidth * progress);\n                this.recenterOnPosition(\n                    newPos,\n                    this.params.autoCenterImmediately\n                );\n            }\n\n            this.updateProgress(pos);\n        }\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     */\n    destroy() {\n        this.unAll();\n        if (this.wrapper) {\n            if (this.wrapper.parentNode == this.container.domElement) {\n                this.container.removeChild(this.wrapper.domElement);\n            }\n            this.wrapper = null;\n        }\n    }\n\n    /* Renderer-specific methods */\n\n    /**\n     * Called after cursor related params have changed.\n     *\n     * @abstract\n     */\n    updateCursor() {}\n\n    /**\n     * Called when the size of the container changes so the renderer can adjust\n     *\n     * @abstract\n     */\n    updateSize() {}\n\n    /**\n     * Draw a waveform with bars\n     *\n     * @abstract\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawBars(peaks, channelIndex, start, end) {}\n\n    /**\n     * Draw a waveform\n     *\n     * @abstract\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawWave(peaks, channelIndex, start, end) {}\n\n    /**\n     * Clear the waveform\n     *\n     * @abstract\n     */\n    clearWave() {}\n\n    /**\n     * Render the new progress\n     *\n     * @abstract\n     * @param {number} position X-Offset of progress position in pixels\n     */\n    updateProgress(position) {}\n}\n","import Drawer from './drawer';\nimport * as util from './util';\nimport CanvasEntry from './drawer.canvasentry';\n\n/**\n * MultiCanvas renderer for wavesurfer. Is currently the default and sole\n * builtin renderer.\n *\n * A `MultiCanvas` consists of one or more `CanvasEntry` instances, depending\n * on the zoom level.\n */\nexport default class MultiCanvas extends Drawer {\n    /**\n     * @param {HTMLElement} container The container node of the wavesurfer instance\n     * @param {WavesurferParams} params The wavesurfer initialisation options\n     */\n    constructor(container, params) {\n        super(container, params);\n\n        /**\n         * @type {number}\n         */\n        this.maxCanvasWidth = params.maxCanvasWidth;\n\n        /**\n         * @type {number}\n         */\n        this.maxCanvasElementWidth = Math.round(\n            params.maxCanvasWidth / params.pixelRatio\n        );\n\n        /**\n         * Whether or not the progress wave is rendered. If the `waveColor`\n         * and `progressColor` are the same color it is not.\n         *\n         * @type {boolean}\n         */\n        this.hasProgressCanvas = params.waveColor != params.progressColor;\n\n        /**\n         * @type {number}\n         */\n        this.halfPixel = 0.5 / params.pixelRatio;\n\n        /**\n         * List of `CanvasEntry` instances.\n         *\n         * @type {Array}\n         */\n        this.canvases = [];\n\n        /**\n         * @type {HTMLElement}\n         */\n        this.progressWave = null;\n\n        /**\n         * Class used to generate entries.\n         *\n         * @type {function}\n         */\n        this.EntryClass = CanvasEntry;\n\n        /**\n         * Canvas 2d context attributes.\n         *\n         * @type {object}\n         */\n        this.canvasContextAttributes = params.drawingContextAttributes;\n\n        /**\n         * Overlap added between entries to prevent vertical white stripes\n         * between `canvas` elements.\n         *\n         * @type {number}\n         */\n        this.overlap = 2 * Math.ceil(params.pixelRatio / 2);\n\n        /**\n         * The radius of the wave bars. Makes bars rounded\n         *\n         * @type {number}\n         */\n        this.barRadius = params.barRadius || 0;\n\n        /**\n         * Whether to render the waveform vertically. Defaults to false.\n         *\n         * @type {boolean}\n         */\n        this.vertical = params.vertical;\n    }\n\n    /**\n     * Initialize the drawer\n     */\n    init() {\n        this.createWrapper();\n        this.createElements();\n    }\n\n    /**\n     * Create the canvas elements and style them\n     *\n     */\n    createElements() {\n        this.progressWave = util.withOrientation(\n            this.wrapper.appendChild(document.createElement('wave')),\n            this.params.vertical\n        );\n        this.style(this.progressWave, {\n            position: 'absolute',\n            zIndex: 3,\n            left: 0,\n            top: 0,\n            bottom: 0,\n            overflow: 'hidden',\n            width: '0',\n            display: 'none',\n            boxSizing: 'border-box',\n            borderRightStyle: 'solid',\n            pointerEvents: 'none'\n        });\n\n        this.addCanvas();\n        this.updateCursor();\n    }\n\n    /**\n     * Update cursor style\n     */\n    updateCursor() {\n        this.style(this.progressWave, {\n            borderRightWidth: this.params.cursorWidth + 'px',\n            borderRightColor: this.params.cursorColor\n        });\n    }\n\n    /**\n     * Adjust to the updated size by adding or removing canvases\n     */\n    updateSize() {\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\n        const requiredCanvases = Math.ceil(\n            totalWidth / (this.maxCanvasElementWidth + this.overlap)\n        );\n\n        // add required canvases\n        while (this.canvases.length < requiredCanvases) {\n            this.addCanvas();\n        }\n\n        // remove older existing canvases, if any\n        while (this.canvases.length > requiredCanvases) {\n            this.removeCanvas();\n        }\n\n        let canvasWidth = this.maxCanvasWidth + this.overlap;\n        const lastCanvas = this.canvases.length - 1;\n        this.canvases.forEach((entry, i) => {\n            if (i == lastCanvas) {\n                canvasWidth = this.width - this.maxCanvasWidth * lastCanvas;\n            }\n            this.updateDimensions(entry, canvasWidth, this.height);\n\n            entry.clearWave();\n        });\n    }\n\n    /**\n     * Add a canvas to the canvas list\n     *\n     */\n    addCanvas() {\n        const entry = new this.EntryClass();\n        entry.canvasContextAttributes = this.canvasContextAttributes;\n        entry.hasProgressCanvas = this.hasProgressCanvas;\n        entry.halfPixel = this.halfPixel;\n        const leftOffset = this.maxCanvasElementWidth * this.canvases.length;\n\n        // wave\n        let wave = util.withOrientation(\n            this.wrapper.appendChild(document.createElement('canvas')),\n            this.params.vertical\n        );\n        this.style(wave, {\n            position: 'absolute',\n            zIndex: 2,\n            left: leftOffset + 'px',\n            top: 0,\n            bottom: 0,\n            height: '100%',\n            pointerEvents: 'none'\n        });\n        entry.initWave(wave);\n\n        // progress\n        if (this.hasProgressCanvas) {\n            let progress = util.withOrientation(\n                this.progressWave.appendChild(document.createElement('canvas')),\n                this.params.vertical\n            );\n            this.style(progress, {\n                position: 'absolute',\n                left: leftOffset + 'px',\n                top: 0,\n                bottom: 0,\n                height: '100%'\n            });\n            entry.initProgress(progress);\n        }\n\n        this.canvases.push(entry);\n    }\n\n    /**\n     * Pop single canvas from the list\n     *\n     */\n    removeCanvas() {\n        let lastEntry = this.canvases[this.canvases.length - 1];\n\n        // wave\n        lastEntry.wave.parentElement.removeChild(lastEntry.wave.domElement);\n\n        // progress\n        if (this.hasProgressCanvas) {\n            lastEntry.progress.parentElement.removeChild(lastEntry.progress.domElement);\n        }\n\n        // cleanup\n        if (lastEntry) {\n            lastEntry.destroy();\n            lastEntry = null;\n        }\n\n        this.canvases.pop();\n    }\n\n    /**\n     * Update the dimensions of a canvas element\n     *\n     * @param {CanvasEntry} entry Target entry\n     * @param {number} width The new width of the element\n     * @param {number} height The new height of the element\n     */\n    updateDimensions(entry, width, height) {\n        const elementWidth = Math.round(width / this.params.pixelRatio);\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\n\n        // update canvas dimensions\n        entry.updateDimensions(elementWidth, totalWidth, width, height);\n\n        // style element\n        this.style(this.progressWave, { display: 'block' });\n    }\n\n    /**\n     * Clear the whole multi-canvas\n     */\n    clearWave() {\n        util.frame(() => {\n            this.canvases.forEach(entry => entry.clearWave());\n        })();\n    }\n\n    /**\n     * Draw a waveform with bars\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0. Must be an integer.\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     * @returns {void}\n     */\n    drawBars(peaks, channelIndex, start, end) {\n        return this.prepareDraw(\n            peaks,\n            channelIndex,\n            start,\n            end,\n            ({ absmax, hasMinVals, height, offsetY, halfH, peaks, channelIndex: ch }) => {\n                // if drawBars was called within ws.empty we don't pass a start and\n                // don't want anything to happen\n                if (start === undefined) {\n                    return;\n                }\n                // Skip every other value if there are negatives.\n                const peakIndexScale = hasMinVals ? 2 : 1;\n                const length = peaks.length / peakIndexScale;\n                const bar = this.params.barWidth * this.params.pixelRatio;\n                const gap =\n                    this.params.barGap === null\n                        ? Math.max(this.params.pixelRatio, ~~(bar / 2))\n                        : Math.max(\n                            this.params.pixelRatio,\n                            this.params.barGap * this.params.pixelRatio\n                        );\n                const step = bar + gap;\n\n                const scale = length / this.width;\n                const first = start;\n                const last = end;\n                let i = first;\n\n                for (i; i < last; i += step) {\n                    const peak =\n                        peaks[Math.floor(i * scale * peakIndexScale)] || 0;\n                    let h = Math.round((peak / absmax) * halfH);\n\n                    /* in case of silences, allow the user to specify that we\n                     * always draw *something* (normally a 1px high bar) */\n                    if (h == 0 && this.params.barMinHeight) {\n                        h = this.params.barMinHeight;\n                    }\n\n                    this.fillRect(\n                        i + this.halfPixel,\n                        halfH - h + offsetY,\n                        bar + this.halfPixel,\n                        h * 2,\n                        this.barRadius,\n                        ch\n                    );\n                }\n            }\n        );\n    }\n\n    /**\n     * Draw a waveform\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number?} start The x-offset of the beginning of the area that\n     * should be rendered (If this isn't set only a flat line is rendered)\n     * @param {number?} end The x-offset of the end of the area that should be\n     * rendered\n     * @returns {void}\n     */\n    drawWave(peaks, channelIndex, start, end) {\n        return this.prepareDraw(\n            peaks,\n            channelIndex,\n            start,\n            end,\n            ({ absmax, hasMinVals, height, offsetY, halfH, peaks, channelIndex }) => {\n                if (!hasMinVals) {\n                    const reflectedPeaks = [];\n                    const len = peaks.length;\n                    let i = 0;\n                    for (i; i < len; i++) {\n                        reflectedPeaks[2 * i] = peaks[i];\n                        reflectedPeaks[2 * i + 1] = -peaks[i];\n                    }\n                    peaks = reflectedPeaks;\n                }\n\n                // if drawWave was called within ws.empty we don't pass a start and\n                // end and simply want a flat line\n                if (start !== undefined) {\n                    this.drawLine(peaks, absmax, halfH, offsetY, start, end, channelIndex);\n                }\n\n                // always draw a median line\n                this.fillRect(\n                    0,\n                    halfH + offsetY - this.halfPixel,\n                    this.width,\n                    this.halfPixel,\n                    this.barRadius,\n                    channelIndex\n                );\n            }\n        );\n    }\n\n    /**\n     * Tell the canvas entries to render their portion of the waveform\n     *\n     * @param {number[]} peaks Peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     * @param {channelIndex} channelIndex The channel index of the line drawn\n     */\n    drawLine(peaks, absmax, halfH, offsetY, start, end, channelIndex) {\n        const { waveColor, progressColor } = this.params.splitChannelsOptions.channelColors[channelIndex] || {};\n        this.canvases.forEach((entry, i) => {\n            this.setFillStyles(entry, waveColor, progressColor);\n            this.applyCanvasTransforms(entry, this.params.vertical);\n            entry.drawLines(peaks, absmax, halfH, offsetY, start, end);\n        });\n    }\n\n    /**\n     * Draw a rectangle on the multi-canvas\n     *\n     * @param {number} x X-position of the rectangle\n     * @param {number} y Y-position of the rectangle\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     * @param {channelIndex} channelIndex The channel index of the bar drawn\n     */\n    fillRect(x, y, width, height, radius, channelIndex) {\n        const startCanvas = Math.floor(x / this.maxCanvasWidth);\n        const endCanvas = Math.min(\n            Math.ceil((x + width) / this.maxCanvasWidth) + 1,\n            this.canvases.length\n        );\n        let i = startCanvas;\n        for (i; i < endCanvas; i++) {\n            const entry = this.canvases[i];\n            const leftOffset = i * this.maxCanvasWidth;\n\n            const intersection = {\n                x1: Math.max(x, i * this.maxCanvasWidth),\n                y1: y,\n                x2: Math.min(\n                    x + width,\n                    i * this.maxCanvasWidth + entry.wave.width\n                ),\n                y2: y + height\n            };\n\n            if (intersection.x1 < intersection.x2) {\n                const { waveColor, progressColor } = this.params.splitChannelsOptions.channelColors[channelIndex] || {};\n                this.setFillStyles(entry, waveColor, progressColor);\n                this.applyCanvasTransforms(entry, this.params.vertical);\n\n                entry.fillRects(\n                    intersection.x1 - leftOffset,\n                    intersection.y1,\n                    intersection.x2 - intersection.x1,\n                    intersection.y2 - intersection.y1,\n                    radius\n                );\n            }\n        }\n    }\n\n    /**\n     * Returns whether to hide the channel from being drawn based on params.\n     *\n     * @param {number} channelIndex The index of the current channel.\n     * @returns {bool} True to hide the channel, false to draw.\n     */\n    hideChannel(channelIndex) {\n        return this.params.splitChannels && this.params.splitChannelsOptions.filterChannels.includes(channelIndex);\n    }\n\n    /**\n     * Performs preparation tasks and calculations which are shared by `drawBars`\n     * and `drawWave`\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for\n     * split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number?} start The x-offset of the beginning of the area that\n     * should be rendered. If this isn't set only a flat line is rendered\n     * @param {number?} end The x-offset of the end of the area that should be\n     * rendered\n     * @param {function} fn The render function to call, e.g. `drawWave`\n     * @param {number} drawIndex The index of the current channel after filtering.\n     * @param {number?} normalizedMax Maximum modulation value across channels for use with relativeNormalization. Ignored when undefined\n     * @returns {void}\n     */\n    prepareDraw(peaks, channelIndex, start, end, fn, drawIndex, normalizedMax) {\n        return util.frame(() => {\n            // Split channels and call this function with the channelIndex set\n            if (peaks[0] instanceof Array) {\n                const channels = peaks;\n\n                if (this.params.splitChannels) {\n                    const filteredChannels = channels.filter((c, i) => !this.hideChannel(i));\n                    if (!this.params.splitChannelsOptions.overlay) {\n                        this.setHeight(\n                            Math.max(filteredChannels.length, 1) *\n                                this.params.height *\n                                this.params.pixelRatio\n                        );\n                    }\n\n                    let overallAbsMax;\n                    if (this.params.splitChannelsOptions && this.params.splitChannelsOptions.relativeNormalization) {\n                        // calculate maximum peak across channels to use for normalization\n                        overallAbsMax = util.max(channels.map((channelPeaks => util.absMax(channelPeaks))));\n                    }\n\n\n                    return channels.forEach((channelPeaks, i) =>\n                        this.prepareDraw(channelPeaks, i, start, end, fn, filteredChannels.indexOf(channelPeaks), overallAbsMax)\n                    );\n                }\n                peaks = channels[0];\n            }\n\n            // Return and do not draw channel peaks if hidden.\n            if (this.hideChannel(channelIndex)) {\n                return;\n            }\n\n            // calculate maximum modulation value, either from the barHeight\n            // parameter or if normalize=true from the largest value in the peak\n            // set\n            let absmax = 1 / this.params.barHeight;\n            if (this.params.normalize) {\n                absmax = normalizedMax === undefined ? util.absMax(peaks) : normalizedMax;\n            }\n\n            // Bar wave draws the bottom only as a reflection of the top,\n            // so we don't need negative values\n            const hasMinVals = [].some.call(peaks, val => val < 0);\n            const height = this.params.height * this.params.pixelRatio;\n            const halfH = height / 2;\n\n            let offsetY = height * drawIndex || 0;\n\n            // Override offsetY if overlay is true\n            if (this.params.splitChannelsOptions && this.params.splitChannelsOptions.overlay) {\n                offsetY = 0;\n            }\n\n            return fn({\n                absmax: absmax,\n                hasMinVals: hasMinVals,\n                height: height,\n                offsetY: offsetY,\n                halfH: halfH,\n                peaks: peaks,\n                channelIndex: channelIndex\n            });\n        })();\n    }\n\n    /**\n     * Set the fill styles for a certain entry (wave and progress)\n     *\n     * @param {CanvasEntry} entry Target entry\n     * @param {string} waveColor Wave color to draw this entry\n     * @param {string} progressColor Progress color to draw this entry\n     */\n    setFillStyles(entry, waveColor = this.params.waveColor, progressColor = this.params.progressColor) {\n        entry.setFillStyles(waveColor, progressColor);\n    }\n\n    /**\n     * Set the canvas transforms for a certain entry (wave and progress)\n     *\n     * @param {CanvasEntry} entry Target entry\n     * @param {boolean} vertical Whether to render the waveform vertically\n     */\n    applyCanvasTransforms(entry, vertical = false) {\n        entry.applyCanvasTransforms(vertical);\n    }\n\n    /**\n     * Return image data of the multi-canvas\n     *\n     * When using a `type` of `'blob'`, this will return a `Promise`.\n     *\n     * @param {string} format='image/png' An optional value of a format type.\n     * @param {number} quality=0.92 An optional value between 0 and 1.\n     * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\n     * @return {string|string[]|Promise} When using the default `'dataURL'`\n     * `type` this returns a single data URL or an array of data URLs,\n     * one for each canvas. When using the `'blob'` `type` this returns a\n     * `Promise` that resolves with an array of `Blob` instances, one for each\n     * canvas.\n     */\n    getImage(format, quality, type) {\n        if (type === 'blob') {\n            return Promise.all(\n                this.canvases.map(entry => {\n                    return entry.getImage(format, quality, type);\n                })\n            );\n        } else if (type === 'dataURL') {\n            let images = this.canvases.map(entry =>\n                entry.getImage(format, quality, type)\n            );\n            return images.length > 1 ? images : images[0];\n        }\n    }\n\n    /**\n     * Render the new progress\n     *\n     * @param {number} position X-offset of progress position in pixels\n     */\n    updateProgress(position) {\n        this.style(this.progressWave, { width: position + 'px' });\n    }\n}\n","import MediaElement from './mediaelement';\n\n/**\n * MediaElementWebAudio backend: load audio via an HTML5 audio tag, but playback with the WebAudio API.\n * The advantage here is that the html5 <audio> tag can perform range requests on the server and not\n * buffer the entire file in one request, and you still get the filtering and scripting functionality\n * of the webaudio API.\n * Note that in order to use range requests and prevent buffering, you must provide peak data.\n *\n * @since 3.2.0\n */\nexport default class MediaElementWebAudio extends MediaElement {\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params Wavesurfer parameters\n     */\n    constructor(params) {\n        super(params);\n        /** @private */\n        this.params = params;\n        /** @private */\n        this.sourceMediaElement = null;\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.setPlaybackRate(this.params.audioRate);\n        this.createTimer();\n        this.createVolumeNode();\n        this.createScriptNode();\n        this.createAnalyserNode();\n    }\n    /**\n     * Private method called by both `load` (from url)\n     * and `loadElt` (existing media element) methods.\n     *\n     * @param {HTMLMediaElement} media HTML5 Audio or Video element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     * @param {string} preload HTML 5 preload attribute value\n     * @private\n     */\n    _load(media, peaks, preload) {\n        super._load(media, peaks, preload);\n        this.createMediaElementSource(media);\n    }\n\n    /**\n     * Create MediaElementSource node\n     *\n     * @since 3.2.0\n     * @param {HTMLMediaElement} mediaElement HTML5 Audio to load\n     */\n    createMediaElementSource(mediaElement) {\n        this.sourceMediaElement = this.ac.createMediaElementSource(\n            mediaElement\n        );\n        this.sourceMediaElement.connect(this.analyser);\n    }\n\n    play(start, end) {\n        this.resumeAudioContext();\n        return super.play(start, end);\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     *\n     */\n    destroy() {\n        super.destroy();\n\n        this.destroyWebAudio();\n    }\n}\n","import WebAudio from './webaudio';\nimport * as util from './util';\n\n/**\n * MediaElement backend\n */\nexport default class MediaElement extends WebAudio {\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params Wavesurfer parameters\n     */\n    constructor(params) {\n        super(params);\n        /** @private */\n        this.params = params;\n\n        /**\n         * Initially a dummy media element to catch errors. Once `_load` is\n         * called, this will contain the actual `HTMLMediaElement`.\n         * @private\n         */\n        this.media = {\n            currentTime: 0,\n            duration: 0,\n            paused: true,\n            playbackRate: 1,\n            play() {},\n            pause() {},\n            volume: 0\n        };\n\n        /** @private */\n        this.mediaType = params.mediaType.toLowerCase();\n        /** @private */\n        this.elementPosition = params.elementPosition;\n        /** @private */\n        this.peaks = null;\n        /** @private */\n        this.playbackRate = 1;\n        /** @private */\n        this.volume = 1;\n        /** @private */\n        this.isMuted = false;\n        /** @private */\n        this.buffer = null;\n        /** @private */\n        this.onPlayEnd = null;\n        /** @private */\n        this.mediaListeners = {};\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.setPlaybackRate(this.params.audioRate);\n        this.createTimer();\n    }\n\n    /**\n     * Attach event listeners to media element.\n     */\n    _setupMediaListeners() {\n        this.mediaListeners.error = () => {\n            this.fireEvent('error', 'Error loading media element');\n        };\n        this.mediaListeners.canplay = () => {\n            this.fireEvent('canplay');\n        };\n        this.mediaListeners.ended = () => {\n            this.fireEvent('finish');\n        };\n        // listen to and relay play, pause and seeked events to enable\n        // playback control from the external media element\n        this.mediaListeners.play = () => {\n            this.fireEvent('play');\n        };\n        this.mediaListeners.pause = () => {\n            this.fireEvent('pause');\n        };\n        this.mediaListeners.seeked = event => {\n            this.fireEvent('seek');\n        };\n        this.mediaListeners.volumechange = event => {\n            this.isMuted = this.media.muted;\n            if (this.isMuted) {\n                this.volume = 0;\n            } else {\n                this.volume = this.media.volume;\n            }\n            this.fireEvent('volume');\n        };\n\n        // reset event listeners\n        Object.keys(this.mediaListeners).forEach(id => {\n            this.media.removeEventListener(id, this.mediaListeners[id]);\n            this.media.addEventListener(id, this.mediaListeners[id]);\n        });\n    }\n\n    /**\n     * Create a timer to provide a more precise `audioprocess` event.\n     */\n    createTimer() {\n        const onAudioProcess = () => {\n            if (this.isPaused()) {\n                return;\n            }\n            this.fireEvent('audioprocess', this.getCurrentTime());\n\n            // Call again in the next frame\n            util.frame(onAudioProcess)();\n        };\n\n        this.on('play', onAudioProcess);\n\n        // Update the progress one more time to prevent it from being stuck in\n        // case of lower framerates\n        this.on('pause', () => {\n            this.fireEvent('audioprocess', this.getCurrentTime());\n        });\n    }\n\n    /**\n     * Create media element with url as its source,\n     * and append to container element.\n     *\n     * @param {string} url Path to media file\n     * @param {HTMLElement} container HTML element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     * @param {string} preload HTML 5 preload attribute value\n     * @throws Will throw an error if the `url` argument is not a valid media\n     * element.\n     */\n    load(url, container, peaks, preload) {\n        const media = document.createElement(this.mediaType);\n        media.controls = this.params.mediaControls;\n        media.autoplay = this.params.autoplay || false;\n        media.preload = preload == null ? 'auto' : preload;\n        media.src = url;\n        media.style.width = '100%';\n\n        const prevMedia = container.querySelector(this.mediaType);\n        if (prevMedia) {\n            container.removeChild(prevMedia);\n        }\n        container.appendChild(media);\n\n        this._load(media, peaks, preload);\n    }\n\n    /**\n     * Load existing media element.\n     *\n     * @param {HTMLMediaElement} elt HTML5 Audio or Video element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     */\n    loadElt(elt, peaks) {\n        elt.controls = this.params.mediaControls;\n        elt.autoplay = this.params.autoplay || false;\n\n        this._load(elt, peaks, elt.preload);\n    }\n\n    /**\n     * Method called by both `load` (from url)\n     * and `loadElt` (existing media element) methods.\n     *\n     * @param {HTMLMediaElement} media HTML5 Audio or Video element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     * @param {string} preload HTML 5 preload attribute value\n     * @throws Will throw an error if the `media` argument is not a valid media\n     * element.\n     * @private\n     */\n    _load(media, peaks, preload) {\n        // verify media element is valid\n        if (\n            !(media instanceof HTMLMediaElement) ||\n            typeof media.addEventListener === 'undefined'\n        ) {\n            throw new Error('media parameter is not a valid media element');\n        }\n\n        // load must be called manually on iOS, otherwise peaks won't draw\n        // until a user interaction triggers load --> 'ready' event\n        //\n        // note that we avoid calling media.load here when given peaks and preload == 'none'\n        // as this almost always triggers some browser fetch of the media.\n        if (typeof media.load == 'function' && !(peaks && preload == 'none')) {\n            // Resets the media element and restarts the media resource. Any\n            // pending events are discarded. How much media data is fetched is\n            // still affected by the preload attribute.\n            media.load();\n        }\n\n        this.media = media;\n        this._setupMediaListeners();\n        this.peaks = peaks;\n        this.onPlayEnd = null;\n        this.buffer = null;\n        this.isMuted = media.muted;\n        this.setPlaybackRate(this.playbackRate);\n        this.setVolume(this.volume);\n    }\n\n    /**\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n     *\n     * @return {boolean} Media paused or not\n     */\n    isPaused() {\n        return !this.media || this.media.paused;\n    }\n\n    /**\n     * Used by `wavesurfer.getDuration()`\n     *\n     * @return {number} Duration\n     */\n    getDuration() {\n        if (this.explicitDuration) {\n            return this.explicitDuration;\n        }\n        let duration = (this.buffer || this.media).duration;\n        if (duration >= Infinity) {\n            // streaming audio\n            duration = this.media.seekable.end(0);\n        }\n        return duration;\n    }\n\n    /**\n     * Returns the current time in seconds relative to the audio-clip's\n     * duration.\n     *\n     * @return {number} Current time\n     */\n    getCurrentTime() {\n        return this.media && this.media.currentTime;\n    }\n\n    /**\n     * Get the position from 0 to 1\n     *\n     * @return {number} Current position\n     */\n    getPlayedPercents() {\n        return this.getCurrentTime() / this.getDuration() || 0;\n    }\n\n    /**\n     * Get the audio source playback rate.\n     *\n     * @return {number} Playback rate\n     */\n    getPlaybackRate() {\n        return this.playbackRate || this.media.playbackRate;\n    }\n\n    /**\n     * Set the audio source playback rate.\n     *\n     * @param {number} value Playback rate\n     */\n    setPlaybackRate(value) {\n        this.playbackRate = value || 1;\n        this.media.playbackRate = this.playbackRate;\n    }\n\n    /**\n     * Used by `wavesurfer.seekTo()`\n     *\n     * @param {number} start Position to start at in seconds\n     */\n    seekTo(start) {\n        if (start != null) {\n            this.media.currentTime = start;\n        }\n        this.clearPlayEnd();\n    }\n\n    /**\n     * Plays the loaded audio region.\n     *\n     * @param {number} start Start offset in seconds, relative to the beginning\n     * of a clip.\n     * @param {number} end When to stop, relative to the beginning of a clip.\n     * @emits MediaElement#play\n     * @return {Promise} Result\n     */\n    play(start, end) {\n        this.seekTo(start);\n        const promise = this.media.play();\n        end && this.setPlayEnd(end);\n\n        return promise;\n    }\n\n    /**\n     * Pauses the loaded audio.\n     *\n     * @emits MediaElement#pause\n     * @return {Promise} Result\n     */\n    pause() {\n        let promise;\n\n        if (this.media) {\n            promise = this.media.pause();\n        }\n        this.clearPlayEnd();\n\n        return promise;\n    }\n\n    /**\n     * Set the play end\n     *\n     * @param {number} end Where to end\n     */\n    setPlayEnd(end) {\n        this.clearPlayEnd();\n\n        this._onPlayEnd = time => {\n            if (time >= end) {\n                this.pause();\n                this.seekTo(end);\n            }\n        };\n        this.on('audioprocess', this._onPlayEnd);\n    }\n\n    /** @private */\n    clearPlayEnd() {\n        if (this._onPlayEnd) {\n            this.un('audioprocess', this._onPlayEnd);\n            this._onPlayEnd = null;\n        }\n    }\n\n    /**\n     * Compute the max and min value of the waveform when broken into\n     * <length> subranges.\n     *\n     * @param {number} length How many subranges to break the waveform into.\n     * @param {number} first First sample in the required range.\n     * @param {number} last Last sample in the required range.\n     * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of\n     * arrays of peaks consisting of (max, min) values for each subrange.\n     */\n    getPeaks(length, first, last) {\n        if (this.buffer) {\n            return super.getPeaks(length, first, last);\n        }\n        return this.peaks || [];\n    }\n\n    /**\n     * Set the sink id for the media player\n     *\n     * @param {string} deviceId String value representing audio device id.\n     * @returns {Promise} A Promise that resolves to `undefined` when there\n     * are no errors.\n     */\n    setSinkId(deviceId) {\n        if (deviceId) {\n            if (!this.media.setSinkId) {\n                return Promise.reject(\n                    new Error('setSinkId is not supported in your browser')\n                );\n            }\n            return this.media.setSinkId(deviceId);\n        }\n\n        return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\n    }\n\n    /**\n     * Get the current volume\n     *\n     * @return {number} value A floating point value between 0 and 1.\n     */\n    getVolume() {\n        return this.volume;\n    }\n\n    /**\n     * Set the audio volume\n     *\n     * @param {number} value A floating point value between 0 and 1.\n     */\n    setVolume(value) {\n        this.volume = value;\n        // no need to change when it's already at that volume\n        if (this.media.volume !== this.volume) {\n            this.media.volume = this.volume;\n        }\n    }\n\n    /**\n     * Enable or disable muted audio\n     *\n     * @since 4.0.0\n     * @param {boolean} muted Specify `true` to mute audio.\n     */\n    setMute(muted) {\n        // This causes a volume change to be emitted too through the\n        // volumechange event listener.\n        this.isMuted = this.media.muted = muted;\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     *\n     */\n    destroy() {\n        this.pause();\n        this.unAll();\n        this.destroyed = true;\n\n        // cleanup media event listeners\n        Object.keys(this.mediaListeners).forEach(id => {\n            if (this.media) {\n                this.media.removeEventListener(id, this.mediaListeners[id]);\n            }\n        });\n\n        if (\n            this.params.removeMediaElementOnDestroy &&\n            this.media &&\n            this.media.parentNode\n        ) {\n            this.media.parentNode.removeChild(this.media);\n        }\n\n        this.media = null;\n    }\n}\n","/**\n * Caches the decoded peaks data to improve rendering speed for large audio\n *\n * Is used if the option parameter `partialRender` is set to `true`\n */\nexport default class PeakCache {\n    /**\n     * Instantiate cache\n     */\n    constructor() {\n        this.clearPeakCache();\n    }\n\n    /**\n     * Empty the cache\n     */\n    clearPeakCache() {\n        /**\n         * Flat array with entries that are always in pairs to mark the\n         * beginning and end of each subrange.  This is a convenience so we can\n         * iterate over the pairs for easy set difference operations.\n         * @private\n         */\n        this.peakCacheRanges = [];\n        /**\n         * Length of the entire cachable region, used for resetting the cache\n         * when this changes (zoom events, for instance).\n         * @private\n         */\n        this.peakCacheLength = -1;\n    }\n\n    /**\n     * Add a range of peaks to the cache\n     *\n     * @param {number} length The length of the range\n     * @param {number} start The x offset of the start of the range\n     * @param {number} end The x offset of the end of the range\n     * @return {Number.<Array[]>} Array with arrays of numbers\n     */\n    addRangeToPeakCache(length, start, end) {\n        if (length != this.peakCacheLength) {\n            this.clearPeakCache();\n            this.peakCacheLength = length;\n        }\n\n        // Return ranges that weren't in the cache before the call.\n        let uncachedRanges = [];\n        let i = 0;\n        // Skip ranges before the current start.\n        while (\n            i < this.peakCacheRanges.length &&\n            this.peakCacheRanges[i] < start\n        ) {\n            i++;\n        }\n        // If |i| is even, |start| falls after an existing range.  Otherwise,\n        // |start| falls between an existing range, and the uncached region\n        // starts when we encounter the next node in |peakCacheRanges| or\n        // |end|, whichever comes first.\n        if (i % 2 == 0) {\n            uncachedRanges.push(start);\n        }\n        while (\n            i < this.peakCacheRanges.length &&\n            this.peakCacheRanges[i] <= end\n        ) {\n            uncachedRanges.push(this.peakCacheRanges[i]);\n            i++;\n        }\n        // If |i| is even, |end| is after all existing ranges.\n        if (i % 2 == 0) {\n            uncachedRanges.push(end);\n        }\n\n        // Filter out the 0-length ranges.\n        uncachedRanges = uncachedRanges.filter((item, pos, arr) => {\n            if (pos == 0) {\n                return item != arr[pos + 1];\n            } else if (pos == arr.length - 1) {\n                return item != arr[pos - 1];\n            }\n            return item != arr[pos - 1] && item != arr[pos + 1];\n        });\n\n        // Merge the two ranges together, uncachedRanges will either contain\n        // wholly new points, or duplicates of points in peakCacheRanges.  If\n        // duplicates are detected, remove both and extend the range.\n        this.peakCacheRanges = this.peakCacheRanges.concat(uncachedRanges);\n        this.peakCacheRanges = this.peakCacheRanges\n            .sort((a, b) => a - b)\n            .filter((item, pos, arr) => {\n                if (pos == 0) {\n                    return item != arr[pos + 1];\n                } else if (pos == arr.length - 1) {\n                    return item != arr[pos - 1];\n                }\n                return item != arr[pos - 1] && item != arr[pos + 1];\n            });\n\n        // Push the uncached ranges into an array of arrays for ease of\n        // iteration in the functions that call this.\n        const uncachedRangePairs = [];\n        for (i = 0; i < uncachedRanges.length; i += 2) {\n            uncachedRangePairs.push([uncachedRanges[i], uncachedRanges[i + 1]]);\n        }\n\n        return uncachedRangePairs;\n    }\n\n    /**\n     * For testing\n     *\n     * @return {Number.<Array[]>} Array with arrays of numbers\n     */\n    getCacheRanges() {\n        const peakCacheRangePairs = [];\n        let i;\n        for (i = 0; i < this.peakCacheRanges.length; i += 2) {\n            peakCacheRangePairs.push([\n                this.peakCacheRanges[i],\n                this.peakCacheRanges[i + 1]\n            ]);\n        }\n        return peakCacheRangePairs;\n    }\n}\n","import utilMax from './max';\r\nimport utilmin from './min';\r\n\r\n/**\r\n * Get the largest absolute value in an array\r\n *\r\n * @param   {Array} values Array of numbers\r\n * @returns {Number} Largest number found\r\n * @example console.log(max([-3, 2, 1]), max([-3, 2, 4])); // logs 3 4\r\n * @since 4.3.0\r\n */\r\nexport default function absMax(values) {\r\n    const max = utilMax(values);\r\n    const min = utilmin(values);\r\n    return -min > max ? -min : max;\r\n}\r\n","/**\n * Returns a number limited to the given range.\n *\n * @param {number} val The number to be limited to a range\n * @param {number} min The lower boundary of the limit range\n * @param {number} max The upper boundary of the limit range\n * @returns {number} A number in the range [min, max]\n */\nexport default function clamp(val, min, max) {\n    return Math.min(Math.max(min, val), max);\n}\n","/**\n * @since 3.0.0\n */\n\nimport Observer from './observer';\n\nclass ProgressHandler {\n    /**\n     * Instantiate ProgressHandler\n     *\n     * @param {Observer} instance The `fetchFile` observer instance.\n     * @param {Number} contentLength Content length.\n     * @param {Response} response Response object.\n     */\n    constructor(instance, contentLength, response) {\n        this.instance = instance;\n        this.instance._reader = response.body.getReader();\n\n        this.total = parseInt(contentLength, 10);\n        this.loaded = 0;\n    }\n\n    /**\n     * A method that is called once, immediately after the `ReadableStream``\n     * is constructed.\n     *\n     * @param {ReadableStreamDefaultController} controller Controller instance\n     *     used to control the stream.\n     */\n    start(controller) {\n        const read = () => {\n            // instance._reader.read() returns a promise that resolves\n            // when a value has been received\n            this.instance._reader\n                .read()\n                .then(({ done, value }) => {\n                    // result objects contain two properties:\n                    // done  - true if the stream has already given you all its data.\n                    // value - some data. Always undefined when done is true.\n                    if (done) {\n                        // ensure onProgress called when content-length=0\n                        if (this.total === 0) {\n                            this.instance.onProgress.call(this.instance, {\n                                loaded: this.loaded,\n                                total: this.total,\n                                lengthComputable: false\n                            });\n                        }\n                        // no more data needs to be consumed, close the stream\n                        controller.close();\n                        return;\n                    }\n\n                    this.loaded += value.byteLength;\n                    this.instance.onProgress.call(this.instance, {\n                        loaded: this.loaded,\n                        total: this.total,\n                        lengthComputable: !(this.total === 0)\n                    });\n                    // enqueue the next data chunk into our target stream\n                    controller.enqueue(value);\n                    read();\n                })\n                .catch(error => {\n                    controller.error(error);\n                });\n        };\n\n        read();\n    }\n}\n\n/**\n * Load a file using `fetch`.\n *\n * @param {object} options Request options to use. See example below.\n * @returns {Observer} Observer instance\n * @example\n * // default options\n * let options = {\n *     url: undefined,\n *     method: 'GET',\n *     mode: 'cors',\n *     credentials: 'same-origin',\n *     cache: 'default',\n *     responseType: 'json',\n *     requestHeaders: [],\n *     redirect: 'follow',\n *     referrer: 'client'\n * };\n *\n * // override some options\n * options.url = '../media/demo.wav';\n\n * // available types: 'arraybuffer', 'blob', 'json' or 'text'\n * options.responseType = 'arraybuffer';\n *\n * // make fetch call\n * let request = util.fetchFile(options);\n *\n * // listen for events\n * request.on('progress', e => {\n *     console.log('progress', e);\n * });\n *\n * request.on('success', data => {\n *     console.log('success!', data);\n * });\n *\n * request.on('error', e => {\n *     console.warn('fetchFile error: ', e);\n * });\n */\nexport default function fetchFile(options) {\n    if (!options) {\n        throw new Error('fetch options missing');\n    } else if (!options.url) {\n        throw new Error('fetch url missing');\n    }\n    const instance = new Observer();\n    const fetchHeaders = new Headers();\n    const fetchRequest = new Request(options.url);\n\n    // add ability to abort\n    instance.controller = new AbortController();\n\n    // check if headers have to be added\n    if (options && options.requestHeaders) {\n        // add custom request headers\n        options.requestHeaders.forEach(header => {\n            fetchHeaders.append(header.key, header.value);\n        });\n    }\n\n    // parse fetch options\n    const responseType = options.responseType || 'json';\n    const fetchOptions = {\n        method: options.method || 'GET',\n        headers: fetchHeaders,\n        mode: options.mode || 'cors',\n        credentials: options.credentials || 'same-origin',\n        cache: options.cache || 'default',\n        redirect: options.redirect || 'follow',\n        referrer: options.referrer || 'client',\n        signal: instance.controller.signal\n    };\n\n    fetch(fetchRequest, fetchOptions)\n        .then(response => {\n            // store response reference\n            instance.response = response;\n\n            let progressAvailable = true;\n            if (!response.body) {\n                // ReadableStream is not yet supported in this browser\n                // see https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream\n                progressAvailable = false;\n            }\n\n            // Server must send CORS header \"Access-Control-Expose-Headers: content-length\"\n            const contentLength = response.headers.get('content-length');\n            if (contentLength === null) {\n                // Content-Length server response header missing.\n                // Don't evaluate download progress if we can't compare against a total size\n                // see https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Access-Control-Expose-Headers\n                progressAvailable = false;\n            }\n\n            if (!progressAvailable) {\n                // not able to check download progress so skip it\n                return response;\n            }\n\n            // fire progress event when during load\n            instance.onProgress = e => {\n                instance.fireEvent('progress', e);\n            };\n\n            return new Response(\n                new ReadableStream(\n                    new ProgressHandler(instance, contentLength, response)\n                ),\n                fetchOptions\n            );\n        })\n        .then(response => {\n            let errMsg;\n            if (response.ok) {\n                switch (responseType) {\n                    case 'arraybuffer':\n                        return response.arrayBuffer();\n\n                    case 'json':\n                        return response.json();\n\n                    case 'blob':\n                        return response.blob();\n\n                    case 'text':\n                        return response.text();\n\n                    default:\n                        errMsg = 'Unknown responseType: ' + responseType;\n                        break;\n                }\n            }\n            if (!errMsg) {\n                errMsg = 'HTTP error status: ' + response.status;\n            }\n            throw new Error(errMsg);\n        })\n        .then(response => {\n            instance.fireEvent('success', response);\n        })\n        .catch(error => {\n            instance.fireEvent('error', error);\n        });\n\n    // return the fetch request\n    instance.fetchRequest = fetchRequest;\n    return instance;\n}\n","import reqAnimationFrame from './request-animation-frame';\n\n/**\n * Create a function which will be called at the next requestAnimationFrame\n * cycle\n *\n * @param {function} func The function to call\n *\n * @return {func} The function wrapped within a requestAnimationFrame\n */\nexport default function frame(func) {\n    return (...args) => reqAnimationFrame(() => func(...args));\n}\n","/**\n * Get a random prefixed ID\n *\n * @param {String} prefix Prefix to use. Default is `'wavesurfer_'`.\n * @returns {String} Random prefixed ID\n * @example\n * console.log(getId()); // logs 'wavesurfer_b5pors4ru6g'\n *\n * let prefix = 'foo-';\n * console.log(getId(prefix)); // logs 'foo-b5pors4ru6g'\n */\nexport default function getId(prefix) {\n    if (prefix === undefined) {\n        prefix = 'wavesurfer_';\n    }\n    return (\n        prefix +\n        Math.random()\n            .toString(32)\n            .substring(2)\n    );\n}\n","export { default as getId } from './get-id';\nexport { default as max } from './max';\nexport { default as min } from './min';\nexport { default as absMax } from './absMax';\nexport { default as Observer } from './observer';\nexport { default as style } from './style';\nexport { default as requestAnimationFrame } from './request-animation-frame';\nexport { default as frame } from './frame';\nexport { default as debounce } from 'debounce';\nexport { default as preventClick } from './prevent-click';\nexport { default as fetchFile } from './fetch';\nexport { default as clamp } from './clamp';\nexport { default as withOrientation } from './orientation';\nexport { default as ignoreSilenceMode } from './silence-mode';\n","/**\n * Get the largest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Largest number found\n * @example console.log(max([1, 2, 3])); // logs 3\n */\nexport default function max(values) {\n    let largest = -Infinity;\n    Object.keys(values).forEach(i => {\n        if (values[i] > largest) {\n            largest = values[i];\n        }\n    });\n    return largest;\n}\n","/**\n * Get the smallest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Smallest number found\n * @example console.log(min([1, 2, 3])); // logs 1\n */\nexport default function min(values) {\n    let smallest = Number(Infinity);\n    Object.keys(values).forEach(i => {\n        if (values[i] < smallest) {\n            smallest = values[i];\n        }\n    });\n    return smallest;\n}\n","/**\n * @typedef {Object} ListenerDescriptor\n * @property {string} name The name of the event\n * @property {function} callback The callback\n * @property {function} un The function to call to remove the listener\n */\n\n/**\n * Observer class\n */\nexport default class Observer {\n    /**\n     * Instantiate Observer\n     */\n    constructor() {\n        /**\n         * @private\n         * @todo Initialise the handlers here already and remove the conditional\n         * assignment in `on()`\n         */\n        this._disabledEventEmissions = [];\n        this.handlers = null;\n    }\n    /**\n     * Attach a handler function for an event.\n     *\n     * @param {string} event Name of the event to listen to\n     * @param {function} fn The callback to trigger when the event is fired\n     * @return {ListenerDescriptor} The event descriptor\n     */\n    on(event, fn) {\n        if (!this.handlers) {\n            this.handlers = {};\n        }\n\n        let handlers = this.handlers[event];\n        if (!handlers) {\n            handlers = this.handlers[event] = [];\n        }\n        handlers.push(fn);\n\n        // Return an event descriptor\n        return {\n            name: event,\n            callback: fn,\n            un: (e, fn) => this.un(e, fn)\n        };\n    }\n\n    /**\n     * Remove an event handler.\n     *\n     * @param {string} event Name of the event the listener that should be\n     * removed listens to\n     * @param {function} fn The callback that should be removed\n     */\n    un(event, fn) {\n        if (!this.handlers) {\n            return;\n        }\n\n        const handlers = this.handlers[event];\n        let i;\n        if (handlers) {\n            if (fn) {\n                for (i = handlers.length - 1; i >= 0; i--) {\n                    if (handlers[i] == fn) {\n                        handlers.splice(i, 1);\n                    }\n                }\n            } else {\n                handlers.length = 0;\n            }\n        }\n    }\n\n    /**\n     * Remove all event handlers.\n     */\n    unAll() {\n        this.handlers = null;\n    }\n\n    /**\n     * Attach a handler to an event. The handler is executed at most once per\n     * event type.\n     *\n     * @param {string} event The event to listen to\n     * @param {function} handler The callback that is only to be called once\n     * @return {ListenerDescriptor} The event descriptor\n     */\n    once(event, handler) {\n        const fn = (...args) => {\n            /*  eslint-disable no-invalid-this */\n            handler.apply(this, args);\n            /*  eslint-enable no-invalid-this */\n            setTimeout(() => {\n                this.un(event, fn);\n            }, 0);\n        };\n        return this.on(event, fn);\n    }\n\n    /**\n     * Disable firing a list of events by name. When specified, event handlers for any event type\n     * passed in here will not be called.\n     *\n     * @since 4.0.0\n     * @param {string[]} eventNames an array of event names to disable emissions for\n     * @example\n     * // disable seek and interaction events\n     * wavesurfer.setDisabledEventEmissions(['seek', 'interaction']);\n     */\n    setDisabledEventEmissions(eventNames) {\n        this._disabledEventEmissions = eventNames;\n    }\n\n    /**\n     * plugins borrow part of this class without calling the constructor,\n     * so we have to be careful about _disabledEventEmissions\n     */\n\n    _isDisabledEventEmission(event) {\n        return this._disabledEventEmissions && this._disabledEventEmissions.includes(event);\n    }\n\n    /**\n     * Manually fire an event\n     *\n     * @param {string} event The event to fire manually\n     * @param {...any} args The arguments with which to call the listeners\n     */\n    fireEvent(event, ...args) {\n        if (!this.handlers || this._isDisabledEventEmission(event)) {\n            return;\n        }\n\n        const handlers = this.handlers[event];\n        handlers &&\n            handlers.forEach(fn => {\n                fn(...args);\n            });\n    }\n}\n","const verticalPropMap = {\n    width: 'height',\n    height: 'width',\n\n    overflowX: 'overflowY',\n    overflowY: 'overflowX',\n\n    clientWidth: 'clientHeight',\n    clientHeight: 'clientWidth',\n\n    clientX: 'clientY',\n    clientY: 'clientX',\n\n    scrollWidth: 'scrollHeight',\n    scrollLeft: 'scrollTop',\n\n    offsetLeft: 'offsetTop',\n    offsetTop: 'offsetLeft',\n    offsetHeight: 'offsetWidth',\n    offsetWidth: 'offsetHeight',\n\n    left: 'top',\n    right: 'bottom',\n    top: 'left',\n    bottom: 'right',\n\n    borderRightStyle: 'borderBottomStyle',\n    borderRightWidth: 'borderBottomWidth',\n    borderRightColor: 'borderBottomColor'\n};\n\n/**\n * Convert a horizontally-oriented property name to a vertical one.\n *\n * @param {string} prop A property name\n * @param {bool} vertical Whether the element is oriented vertically\n * @returns {string} prop, converted appropriately\n */\nfunction mapProp(prop, vertical) {\n    if (Object.prototype.hasOwnProperty.call(verticalPropMap, prop)) {\n        return vertical ? verticalPropMap[prop] : prop;\n    } else {\n        return prop;\n    }\n}\n\nconst isProxy = Symbol(\"isProxy\");\n\n/**\n * Returns an appropriately oriented object based on vertical.\n * If vertical is true, attribute getting and setting will be mapped through\n * verticalPropMap, so that e.g. getting the object's .width will give its\n * .height instead.\n * Certain methods of an oriented object will return oriented objects as well.\n * Oriented objects can't be added to the DOM directly since they are Proxy objects\n * and thus fail typechecks. Use domElement to get the actual element for this.\n *\n * @param {object} target The object to be wrapped and oriented\n * @param {bool} vertical Whether the element is oriented vertically\n * @returns {Proxy} An oriented object with attr translation via verticalAttrMap\n * @since 5.0.0\n */\nexport default function withOrientation(target, vertical) {\n    if (target[isProxy]) {\n        return target;\n    } else {\n        return new Proxy(\n            target, {\n                get: function(obj, prop, receiver) {\n                    if (prop === isProxy) {\n                        return true;\n                    } else if (prop === 'domElement') {\n                        return obj;\n                    } else if (prop === 'style') {\n                        return withOrientation(obj.style, vertical);\n                    } else if (prop === 'canvas') {\n                        return withOrientation(obj.canvas, vertical);\n                    } else if (prop === 'getBoundingClientRect') {\n                        return function(...args) {\n                            return withOrientation(obj.getBoundingClientRect(...args), vertical);\n                        };\n                    } else if (prop === 'getContext') {\n                        return function(...args) {\n                            return withOrientation(obj.getContext(...args), vertical);\n                        };\n                    } else {\n                        let value = obj[mapProp(prop, vertical)];\n                        return typeof value == 'function' ? value.bind(obj) : value;\n                    }\n                },\n                set: function(obj, prop, value) {\n                    obj[mapProp(prop, vertical)] = value;\n                    return true;\n                }\n            }\n        );\n    }\n}\n","/**\n * Stops propagation of click event and removes event listener\n *\n * @private\n * @param {object} event The click event\n */\nfunction preventClickHandler(event) {\n    event.stopPropagation();\n    document.body.removeEventListener('click', preventClickHandler, true);\n}\n\n/**\n * Starts listening for click event and prevent propagation\n *\n * @param {object} values Values\n */\nexport default function preventClick(values) {\n    document.body.addEventListener('click', preventClickHandler, true);\n}\n","/* eslint-disable valid-jsdoc */\n/**\n * Returns the `requestAnimationFrame` function for the browser, or a shim with\n * `setTimeout` if the function is not found\n *\n * @return {function} Available `requestAnimationFrame` function for the browser\n */\nexport default (\n    window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.oRequestAnimationFrame ||\n    window.msRequestAnimationFrame ||\n    ((callback, element) => setTimeout(callback, 1000 / 60))\n).bind(window);\n","/**\n * Ignores device silence mode when using the `WebAudio` backend.\n *\n * Many mobile devices contain a hardware button to mute the ringtone for incoming\n * calls and messages. Unfortunately, on some platforms like iOS, this also mutes\n * wavesurfer's audio when using the `WebAudio` backend. This function creates a\n * temporary `<audio>` element that makes sure the WebAudio backend keeps playing\n * when muting the device ringer.\n *\n * @since 5.2.0\n */\nexport default function ignoreSilenceMode() {\n    // Set the src to a short bit of url encoded as a silent mp3\n    // NOTE The silence MP3 must be high quality, when web audio sounds are played\n    // in parallel the web audio sound is mixed to match the bitrate of the html sound\n    // 0.01 seconds of silence VBR220-260 Joint Stereo 859B\n    const audioData = \"data:audio/mpeg;base64,//uQxAAAAAAAAAAAAAAAAAAAAAAAWGluZwAAAA8AAAACAAACcQCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA//////////////////////////////////////////////////////////////////8AAABhTEFNRTMuMTAwA8MAAAAAAAAAABQgJAUHQQAB9AAAAnGMHkkIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//sQxAADgnABGiAAQBCqgCRMAAgEAH///////////////7+n/9FTuQsQH//////2NG0jWUGlio5gLQTOtIoeR2WX////X4s9Atb/JRVCbBUpeRUq//////////////////9RUi0f2jn/+xDECgPCjAEQAABN4AAANIAAAAQVTEFNRTMuMTAwVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVQ==\";\n\n    // disable iOS Airplay (setting the attribute in js doesn't work)\n    let tmp = document.createElement(\"div\");\n    tmp.innerHTML = '<audio x-webkit-airplay=\"deny\"></audio>';\n\n    let audioSilentMode = tmp.children.item(0);\n    audioSilentMode.src = audioData;\n    audioSilentMode.preload = \"auto\";\n    audioSilentMode.type = \"audio/mpeg\";\n    audioSilentMode.disableRemotePlayback = true;\n\n    // play\n    audioSilentMode.play();\n\n    // cleanup\n    audioSilentMode.remove();\n    tmp.remove();\n}\n","/**\n * Apply a map of styles to an element\n *\n * @param {HTMLElement} el The element that the styles will be applied to\n * @param {Object} styles The map of propName: attribute, both are used as-is\n *\n * @return {HTMLElement} el\n */\nexport default function style(el, styles) {\n    Object.keys(styles).forEach(prop => {\n        if (el.style[prop] !== styles[prop]) {\n            el.style[prop] = styles[prop];\n        }\n    });\n    return el;\n}\n","import * as util from './util';\nimport MultiCanvas from './drawer.multicanvas';\nimport WebAudio from './webaudio';\nimport MediaElement from './mediaelement';\nimport PeakCache from './peakcache';\nimport MediaElementWebAudio from './mediaelement-webaudio';\n\n/*\n * This work is licensed under a BSD-3-Clause License.\n */\n\n/** @external {HTMLElement} https://developer.mozilla.org/en/docs/Web/API/HTMLElement */\n/** @external {OfflineAudioContext} https://developer.mozilla.org/en-US/docs/Web/API/OfflineAudioContext */\n/** @external {File} https://developer.mozilla.org/en-US/docs/Web/API/File */\n/** @external {Blob} https://developer.mozilla.org/en-US/docs/Web/API/Blob */\n/** @external {CanvasRenderingContext2D} https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D */\n/** @external {MediaStreamConstraints} https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamConstraints */\n/** @external {AudioNode} https://developer.mozilla.org/de/docs/Web/API/AudioNode */\n\n/**\n * @typedef {Object} WavesurferParams\n * @property {AudioContext} audioContext=null Use your own previously\n * initialized AudioContext or leave blank.\n * @property {number} audioRate=1 Speed at which to play audio. Lower number is\n * slower.\n * @property {ScriptProcessorNode} audioScriptProcessor=null Use your own previously\n * initialized ScriptProcessorNode or leave blank.\n * @property {boolean} autoCenter=true If a scrollbar is present, center the\n * waveform on current progress\n * @property {number} autoCenterRate=5 If autoCenter is active, rate at which the\n * waveform is centered\n * @property {boolean} autoCenterImmediately=false If autoCenter is active, immediately\n * center waveform on current progress\n * @property {string} backend='WebAudio' `'WebAudio'|'MediaElement'|'MediaElementWebAudio'` In most cases\n * you don't have to set this manually. MediaElement is a fallback for unsupported browsers.\n * MediaElementWebAudio allows to use WebAudio API also with big audio files, loading audio like with\n * MediaElement backend (HTML5 audio tag). You have to use the same methods of MediaElement backend for loading and\n * playback, giving also peaks, so the audio data are not decoded. In this way you can use WebAudio features, like filters,\n * also with audio with big duration. For example:\n * ` wavesurfer.load(url | HTMLMediaElement, peaks, preload, duration);\n *   wavesurfer.play();\n *   wavesurfer.setFilter(customFilter);\n * `\n * @property {string} backgroundColor=null Change background color of the\n * waveform container.\n * @property {number} barHeight=1 The height of the wave bars.\n * @property {number} barRadius=0 The radius of the wave bars. Makes bars rounded\n * @property {number} barGap=null The optional spacing between bars of the wave,\n * if not provided will be calculated in legacy format.\n * @property {number} barWidth=null Draw the waveform using bars.\n * @property {number} barMinHeight=null If specified, draw at least a bar of this height,\n * eliminating waveform gaps\n * @property {boolean} closeAudioContext=false Close and nullify all audio\n * contexts when the destroy method is called.\n * @property {!string|HTMLElement} container CSS selector or HTML element where\n * the waveform should be drawn. This is the only required parameter.\n * @property {string} cursorColor='#333' The fill color of the cursor indicating\n * the playhead position.\n * @property {number} cursorWidth=1 Measured in pixels.\n * @property {object} drawingContextAttributes={desynchronized: false} Drawing context\n * attributes.\n * @property {number} duration=null Optional audio length so pre-rendered peaks\n * can be display immediately for example.\n * @property {boolean} fillParent=true Whether to fill the entire container or\n * draw only according to `minPxPerSec`.\n * @property {boolean} forceDecode=false Force decoding of audio using web audio\n * when zooming to get a more detailed waveform.\n * @property {number} height=128 The height of the waveform. Measured in\n * pixels.\n * @property {boolean} hideScrollbar=false Whether to hide the horizontal\n * scrollbar when one would normally be shown.\n * @property {boolean} ignoreSilenceMode=false If true, ignores device silence mode\n * when using the `WebAudio` backend.\n * @property {boolean} interact=true Whether the mouse interaction will be\n * enabled at initialization. You can switch this parameter at any time later\n * on.\n * @property {boolean} loopSelection=true (Use with regions plugin) Enable\n * looping of selected regions\n * @property {number} maxCanvasWidth=4000 Maximum width of a single canvas in\n * pixels, excluding a small overlap (2 * `pixelRatio`, rounded up to the next\n * even integer). If the waveform is longer than this value, additional canvases\n * will be used to render the waveform, which is useful for very large waveforms\n * that may be too wide for browsers to draw on a single canvas.\n * @property {boolean} mediaControls=false (Use with backend `MediaElement` or `MediaElementWebAudio`)\n * this enables the native controls for the media element\n * @property {string} mediaType='audio' (Use with backend `MediaElement` or `MediaElementWebAudio`)\n * `'audio'|'video'` ('video' only for `MediaElement`)\n * @property {number} minPxPerSec=20 Minimum number of pixels per second of\n * audio.\n * @property {boolean} normalize=false If true, normalize by the maximum peak\n * instead of 1.0.\n * @property {boolean} partialRender=false Use the PeakCache to improve\n * rendering speed of large waveforms\n * @property {number} pixelRatio=window.devicePixelRatio The pixel ratio used to\n * calculate display\n * @property {PluginDefinition[]} plugins=[] An array of plugin definitions to\n * register during instantiation, they will be directly initialised unless they\n * are added with the `deferInit` property set to true.\n * @property {string} progressColor='#555' The fill color of the part of the\n * waveform behind the cursor. When `progressColor` and `waveColor` are the same\n * the progress wave is not rendered at all.\n * @property {boolean} removeMediaElementOnDestroy=true Set to false to keep the\n * media element in the DOM when the player is destroyed. This is useful when\n * reusing an existing media element via the `loadMediaElement` method.\n * @property {Object} renderer=MultiCanvas Can be used to inject a custom\n * renderer.\n * @property {boolean|number} responsive=false If set to `true` resize the\n * waveform, when the window is resized. This is debounced with a `100ms`\n * timeout by default. If this parameter is a number it represents that timeout.\n * @property {boolean} rtl=false If set to `true`, renders waveform from\n * right-to-left.\n * @property {boolean} scrollParent=false Whether to scroll the container with a\n * lengthy waveform. Otherwise the waveform is shrunk to the container width\n * (see fillParent).\n * @property {number} skipLength=2 Number of seconds to skip with the\n * skipForward() and skipBackward() methods.\n * @property {boolean} splitChannels=false Render with separate waveforms for\n * the channels of the audio\n * @property {SplitChannelOptions} splitChannelsOptions={} Options for splitChannel rendering\n * @property {boolean} vertical=false Render the waveform vertically instead of horizontally.\n * @property {string} waveColor='#999' The fill color of the waveform after the\n * cursor.\n * @property {object} xhr={} XHR options. For example:\n * `let xhr = {\n *     cache: 'default',\n *     mode: 'cors',\n *     method: 'GET',\n *     credentials: 'same-origin',\n *     redirect: 'follow',\n *     referrer: 'client',\n *     requestHeaders: [\n *         {\n *             key: 'Authorization',\n *             value: 'my-token'\n *         }\n *     ]\n * };`\n */\n\n/**\n * @typedef {Object} PluginDefinition\n * @desc The Object used to describe a plugin\n * @example wavesurfer.addPlugin(pluginDefinition);\n * @property {string} name The name of the plugin, the plugin instance will be\n * added as a property to the wavesurfer instance under this name\n * @property {?Object} staticProps The properties that should be added to the\n * wavesurfer instance as static properties\n * @property {?boolean} deferInit Don't initialise plugin\n * automatically\n * @property {Object} params={} The plugin parameters, they are the first parameter\n * passed to the plugin class constructor function\n * @property {PluginClass} instance The plugin instance factory, is called with\n * the dependency specified in extends. Returns the plugin class.\n */\n\n/**\n * @typedef {Object} SplitChannelOptions\n * @desc parameters applied when splitChannels option is true\n * @property {boolean} overlay=false determines whether channels are rendered on top of each other or on separate tracks\n * @property {object} channelColors={} object describing color for each channel. Example:\n * {\n *     0: {\n *         progressColor: 'green',\n *         waveColor: 'pink'\n *     },\n *     1: {\n *         progressColor: 'orange',\n *         waveColor: 'purple'\n *     }\n * }\n * @property {number[]} filterChannels=[] indexes of channels to be hidden from rendering\n * @property {boolean} relativeNormalization=false determines whether\n * normalization is done per channel or maintains proportionality between\n * channels. Only applied when normalize and splitChannels are both true.\n * @since 4.3.0\n */\n\n/**\n * @interface PluginClass\n *\n * @desc This is the interface which is implemented by all plugin classes. Note\n * that this only turns into an observer after being passed through\n * `wavesurfer.addPlugin`.\n *\n * @extends {Observer}\n */\nclass PluginClass {\n    /**\n     * Plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * It returns a `PluginDefinition` object representing the plugin.\n     *\n     * @param {Object} params={} The plugin params (specific to the plugin)\n     */\n    create(params) {}\n    /**\n     * Construct the plugin\n     *\n     * @param {Object} params={} The plugin params (specific to the plugin)\n     * @param {Object} ws The wavesurfer instance\n     */\n    constructor(params, ws) {}\n    /**\n     * Initialise the plugin\n     *\n     * Start doing something. This is called by\n     * `wavesurfer.initPlugin(pluginName)`\n     */\n    init() {}\n    /**\n     * Destroy the plugin instance\n     *\n     * Stop doing something. This is called by\n     * `wavesurfer.destroyPlugin(pluginName)`\n     */\n    destroy() {}\n}\n\n/**\n * WaveSurfer core library class\n *\n * @extends {Observer}\n * @example\n * const params = {\n *   container: '#waveform',\n *   waveColor: 'violet',\n *   progressColor: 'purple'\n * };\n *\n * // initialise like this\n * const wavesurfer = WaveSurfer.create(params);\n *\n * // or like this ...\n * const wavesurfer = new WaveSurfer(params);\n * wavesurfer.init();\n *\n * // load audio file\n * wavesurfer.load('example/media/demo.wav');\n */\nexport default class WaveSurfer extends util.Observer {\n    /** @private */\n    defaultParams = {\n        audioContext: null,\n        audioScriptProcessor: null,\n        audioRate: 1,\n        autoCenter: true,\n        autoCenterRate: 5,\n        autoCenterImmediately: false,\n        backend: 'WebAudio',\n        backgroundColor: null,\n        barHeight: 1,\n        barRadius: 0,\n        barGap: null,\n        barMinHeight: null,\n        container: null,\n        cursorColor: '#333',\n        cursorWidth: 1,\n        dragSelection: true,\n        drawingContextAttributes: {\n            // Boolean that hints the user agent to reduce the latency\n            // by desynchronizing the canvas paint cycle from the event\n            // loop\n            desynchronized: false\n        },\n        duration: null,\n        fillParent: true,\n        forceDecode: false,\n        height: 128,\n        hideScrollbar: false,\n        ignoreSilenceMode: false,\n        interact: true,\n        loopSelection: true,\n        maxCanvasWidth: 4000,\n        mediaContainer: null,\n        mediaControls: false,\n        mediaType: 'audio',\n        minPxPerSec: 20,\n        normalize: false,\n        partialRender: false,\n        pixelRatio:\n            window.devicePixelRatio || screen.deviceXDPI / screen.logicalXDPI,\n        plugins: [],\n        progressColor: '#555',\n        removeMediaElementOnDestroy: true,\n        renderer: MultiCanvas,\n        responsive: false,\n        rtl: false,\n        scrollParent: false,\n        skipLength: 2,\n        splitChannels: false,\n        splitChannelsOptions: {\n            overlay: false,\n            channelColors: {},\n            filterChannels: [],\n            relativeNormalization: false\n        },\n        vertical: false,\n        waveColor: '#999',\n        xhr: {}\n    };\n\n    /** @private */\n    backends = {\n        MediaElement,\n        WebAudio,\n        MediaElementWebAudio\n    };\n\n    /**\n     * Instantiate this class, call its `init` function and returns it\n     *\n     * @param {WavesurferParams} params The wavesurfer parameters\n     * @return {Object} WaveSurfer instance\n     * @example const wavesurfer = WaveSurfer.create(params);\n     */\n    static create(params) {\n        const wavesurfer = new WaveSurfer(params);\n        return wavesurfer.init();\n    }\n\n    /**\n     * The library version number is available as a static property of the\n     * WaveSurfer class\n     *\n     * @type {String}\n     * @example\n     * console.log('Using wavesurfer.js ' + WaveSurfer.VERSION);\n     */\n    static VERSION = __VERSION__;\n\n    /**\n     * Functions in the `util` property are available as a prototype property to\n     * all instances\n     *\n     * @type {Object}\n     * @example\n     * const wavesurfer = WaveSurfer.create(params);\n     * wavesurfer.util.style(myElement, { background: 'blue' });\n     */\n    util = util;\n\n    /**\n     * Functions in the `util` property are available as a static property of the\n     * WaveSurfer class\n     *\n     * @type {Object}\n     * @example\n     * WaveSurfer.util.style(myElement, { background: 'blue' });\n     */\n    static util = util;\n\n    /**\n     * Initialise wavesurfer instance\n     *\n     * @param {WavesurferParams} params Instantiation options for wavesurfer\n     * @example\n     * const wavesurfer = new WaveSurfer(params);\n     * @returns {this} Wavesurfer instance\n     */\n    constructor(params) {\n        super();\n        /**\n         * Extract relevant parameters (or defaults)\n         * @private\n         */\n        this.params = Object.assign({}, this.defaultParams, params);\n        this.params.splitChannelsOptions = Object.assign(\n            {},\n            this.defaultParams.splitChannelsOptions,\n            params.splitChannelsOptions\n        );\n        /** @private */\n        this.container =\n            'string' == typeof params.container\n                ? document.querySelector(this.params.container)\n                : this.params.container;\n\n        if (!this.container) {\n            throw new Error('Container element not found');\n        }\n\n        if (this.params.mediaContainer == null) {\n            /** @private */\n            this.mediaContainer = this.container;\n        } else if (typeof this.params.mediaContainer == 'string') {\n            /** @private */\n            this.mediaContainer = document.querySelector(\n                this.params.mediaContainer\n            );\n        } else {\n            /** @private */\n            this.mediaContainer = this.params.mediaContainer;\n        }\n\n        if (!this.mediaContainer) {\n            throw new Error('Media Container element not found');\n        }\n\n        if (this.params.maxCanvasWidth <= 1) {\n            throw new Error('maxCanvasWidth must be greater than 1');\n        } else if (this.params.maxCanvasWidth % 2 == 1) {\n            throw new Error('maxCanvasWidth must be an even number');\n        }\n\n        if (this.params.rtl === true) {\n            if (this.params.vertical === true) {\n                util.style(this.container, { transform: 'rotateX(180deg)' });\n            } else {\n                util.style(this.container, { transform: 'rotateY(180deg)' });\n            }\n        }\n\n        if (this.params.backgroundColor) {\n            this.setBackgroundColor(this.params.backgroundColor);\n        }\n\n        /**\n         * @private Used to save the current volume when muting so we can\n         * restore once unmuted\n         * @type {number}\n         */\n        this.savedVolume = 0;\n\n        /**\n         * @private The current muted state\n         * @type {boolean}\n         */\n        this.isMuted = false;\n\n        /**\n         * @private Will hold a list of event descriptors that need to be\n         * canceled on subsequent loads of audio\n         * @type {Object[]}\n         */\n        this.tmpEvents = [];\n\n        /**\n         * @private Holds any running audio downloads\n         * @type {Observer}\n         */\n        this.currentRequest = null;\n        /** @private */\n        this.arraybuffer = null;\n        /** @private */\n        this.drawer = null;\n        /** @private */\n        this.backend = null;\n        /** @private */\n        this.peakCache = null;\n\n        // cache constructor objects\n        if (typeof this.params.renderer !== 'function') {\n            throw new Error('Renderer parameter is invalid');\n        }\n        /**\n         * @private The uninitialised Drawer class\n         */\n        this.Drawer = this.params.renderer;\n        /**\n         * @private The uninitialised Backend class\n         */\n        // Back compat\n        if (this.params.backend == 'AudioElement') {\n            this.params.backend = 'MediaElement';\n        }\n\n        if (\n            (this.params.backend == 'WebAudio' ||\n                this.params.backend === 'MediaElementWebAudio') &&\n            !WebAudio.prototype.supportsWebAudio.call(null)\n        ) {\n            this.params.backend = 'MediaElement';\n        }\n        this.Backend = this.backends[this.params.backend];\n\n        /**\n         * @private map of plugin names that are currently initialised\n         */\n        this.initialisedPluginList = {};\n        /** @private */\n        this.isDestroyed = false;\n\n        /**\n         * Get the current ready status.\n         *\n         * @example const isReady = wavesurfer.isReady;\n         * @return {boolean}\n         */\n        this.isReady = false;\n\n        // responsive debounced event listener. If this.params.responsive is not\n        // set, this is never called. Use 100ms or this.params.responsive as\n        // timeout for the debounce function.\n        let prevWidth = 0;\n        this._onResize = util.debounce(\n            () => {\n                if (\n                    prevWidth != this.drawer.wrapper.clientWidth &&\n                    !this.params.scrollParent\n                ) {\n                    prevWidth = this.drawer.wrapper.clientWidth;\n                    this.drawer.fireEvent('redraw');\n                }\n            },\n            typeof this.params.responsive === 'number'\n                ? this.params.responsive\n                : 100\n        );\n\n        return this;\n    }\n\n    /**\n     * Initialise the wave\n     *\n     * @example\n     * var wavesurfer = new WaveSurfer(params);\n     * wavesurfer.init();\n     * @return {this} The wavesurfer instance\n     */\n    init() {\n        this.registerPlugins(this.params.plugins);\n        this.createDrawer();\n        this.createBackend();\n        this.createPeakCache();\n        return this;\n    }\n\n    /**\n     * Add and initialise array of plugins (if `plugin.deferInit` is falsey),\n     * this function is called in the init function of wavesurfer\n     *\n     * @param {PluginDefinition[]} plugins An array of plugin definitions\n     * @emits {WaveSurfer#plugins-registered} Called with the array of plugin definitions\n     * @return {this} The wavesurfer instance\n     */\n    registerPlugins(plugins) {\n        // first instantiate all the plugins\n        plugins.forEach(plugin => this.addPlugin(plugin));\n\n        // now run the init functions\n        plugins.forEach(plugin => {\n            // call init function of the plugin if deferInit is falsey\n            // in that case you would manually use initPlugins()\n            if (!plugin.deferInit) {\n                this.initPlugin(plugin.name);\n            }\n        });\n        this.fireEvent('plugins-registered', plugins);\n        return this;\n    }\n\n    /**\n     * Get a map of plugin names that are currently initialised\n     *\n     * @example wavesurfer.getPlugins();\n     * @return {Object} Object with plugin names\n     */\n    getActivePlugins() {\n        return this.initialisedPluginList;\n    }\n\n    /**\n     * Add a plugin object to wavesurfer\n     *\n     * @param {PluginDefinition} plugin A plugin definition\n     * @emits {WaveSurfer#plugin-added} Called with the name of the plugin that was added\n     * @example wavesurfer.addPlugin(WaveSurfer.minimap());\n     * @return {this} The wavesurfer instance\n     */\n    addPlugin(plugin) {\n        if (!plugin.name) {\n            throw new Error('Plugin does not have a name!');\n        }\n        if (!plugin.instance) {\n            throw new Error(\n                `Plugin ${plugin.name} does not have an instance property!`\n            );\n        }\n\n        // staticProps properties are applied to wavesurfer instance\n        if (plugin.staticProps) {\n            Object.keys(plugin.staticProps).forEach(pluginStaticProp => {\n                /**\n                 * Properties defined in a plugin definition's `staticProps` property are added as\n                 * staticProps properties of the WaveSurfer instance\n                 */\n                this[pluginStaticProp] = plugin.staticProps[pluginStaticProp];\n            });\n        }\n\n        const Instance = plugin.instance;\n\n        // turn the plugin instance into an observer\n        const observerPrototypeKeys = Object.getOwnPropertyNames(\n            util.Observer.prototype\n        );\n        observerPrototypeKeys.forEach(key => {\n            Instance.prototype[key] = util.Observer.prototype[key];\n        });\n\n        /**\n         * Instantiated plugin classes are added as a property of the wavesurfer\n         * instance\n         * @type {Object}\n         */\n        this[plugin.name] = new Instance(plugin.params || {}, this);\n        this.fireEvent('plugin-added', plugin.name);\n        return this;\n    }\n\n    /**\n     * Initialise a plugin\n     *\n     * @param {string} name A plugin name\n     * @emits WaveSurfer#plugin-initialised\n     * @example wavesurfer.initPlugin('minimap');\n     * @return {this} The wavesurfer instance\n     */\n    initPlugin(name) {\n        if (!this[name]) {\n            throw new Error(`Plugin ${name} has not been added yet!`);\n        }\n        if (this.initialisedPluginList[name]) {\n            // destroy any already initialised plugins\n            this.destroyPlugin(name);\n        }\n        this[name].init();\n        this.initialisedPluginList[name] = true;\n        this.fireEvent('plugin-initialised', name);\n        return this;\n    }\n\n    /**\n     * Destroy a plugin\n     *\n     * @param {string} name A plugin name\n     * @emits WaveSurfer#plugin-destroyed\n     * @example wavesurfer.destroyPlugin('minimap');\n     * @returns {this} The wavesurfer instance\n     */\n    destroyPlugin(name) {\n        if (!this[name]) {\n            throw new Error(\n                `Plugin ${name} has not been added yet and cannot be destroyed!`\n            );\n        }\n        if (!this.initialisedPluginList[name]) {\n            throw new Error(\n                `Plugin ${name} is not active and cannot be destroyed!`\n            );\n        }\n        if (typeof this[name].destroy !== 'function') {\n            throw new Error(`Plugin ${name} does not have a destroy function!`);\n        }\n\n        this[name].destroy();\n        delete this.initialisedPluginList[name];\n        this.fireEvent('plugin-destroyed', name);\n        return this;\n    }\n\n    /**\n     * Destroy all initialised plugins. Convenience function to use when\n     * wavesurfer is removed\n     *\n     * @private\n     */\n    destroyAllPlugins() {\n        Object.keys(this.initialisedPluginList).forEach(name =>\n            this.destroyPlugin(name)\n        );\n    }\n\n    /**\n     * Create the drawer and draw the waveform\n     *\n     * @private\n     * @emits WaveSurfer#drawer-created\n     */\n    createDrawer() {\n        this.drawer = new this.Drawer(this.container, this.params);\n        this.drawer.init();\n        this.fireEvent('drawer-created', this.drawer);\n\n        if (this.params.responsive !== false) {\n            window.addEventListener('resize', this._onResize, true);\n            window.addEventListener('orientationchange', this._onResize, true);\n        }\n\n        this.drawer.on('redraw', () => {\n            this.drawBuffer();\n            this.drawer.progress(this.backend.getPlayedPercents());\n        });\n\n        // Click-to-seek\n        this.drawer.on('click', (e, progress) => {\n            setTimeout(() => this.seekTo(progress), 0);\n        });\n\n        // Relay the scroll event from the drawer\n        this.drawer.on('scroll', e => {\n            if (this.params.partialRender) {\n                this.drawBuffer();\n            }\n            this.fireEvent('scroll', e);\n        });\n    }\n\n    /**\n     * Create the backend\n     *\n     * @private\n     * @emits WaveSurfer#backend-created\n     */\n    createBackend() {\n        if (this.backend) {\n            this.backend.destroy();\n        }\n\n        this.backend = new this.Backend(this.params);\n        this.backend.init();\n        this.fireEvent('backend-created', this.backend);\n\n        this.backend.on('finish', () => {\n            this.drawer.progress(this.backend.getPlayedPercents());\n            this.fireEvent('finish');\n        });\n        this.backend.on('play', () => this.fireEvent('play'));\n        this.backend.on('pause', () => this.fireEvent('pause'));\n\n        this.backend.on('audioprocess', time => {\n            this.drawer.progress(this.backend.getPlayedPercents());\n            this.fireEvent('audioprocess', time);\n        });\n\n        // only needed for MediaElement and MediaElementWebAudio backend\n        if (\n            this.params.backend === 'MediaElement' ||\n            this.params.backend === 'MediaElementWebAudio'\n        ) {\n            this.backend.on('seek', () => {\n                this.drawer.progress(this.backend.getPlayedPercents());\n            });\n\n            this.backend.on('volume', () => {\n                let newVolume = this.getVolume();\n                this.fireEvent('volume', newVolume);\n\n                if (this.backend.isMuted !== this.isMuted) {\n                    this.isMuted = this.backend.isMuted;\n                    this.fireEvent('mute', this.isMuted);\n                }\n            });\n        }\n    }\n\n    /**\n     * Create the peak cache\n     *\n     * @private\n     */\n    createPeakCache() {\n        if (this.params.partialRender) {\n            this.peakCache = new PeakCache();\n        }\n    }\n\n    /**\n     * Get the duration of the audio clip\n     *\n     * @example const duration = wavesurfer.getDuration();\n     * @return {number} Duration in seconds\n     */\n    getDuration() {\n        return this.backend.getDuration();\n    }\n\n    /**\n     * Get the current playback position\n     *\n     * @example const currentTime = wavesurfer.getCurrentTime();\n     * @return {number} Playback position in seconds\n     */\n    getCurrentTime() {\n        return this.backend.getCurrentTime();\n    }\n\n    /**\n     * Set the current play time in seconds.\n     *\n     * @param {number} seconds A positive number in seconds. E.g. 10 means 10\n     * seconds, 60 means 1 minute\n     */\n    setCurrentTime(seconds) {\n        if (seconds >= this.getDuration()) {\n            this.seekTo(1);\n        } else {\n            this.seekTo(seconds / this.getDuration());\n        }\n    }\n\n    /**\n     * Starts playback from the current position. Optional start and end\n     * measured in seconds can be used to set the range of audio to play.\n     *\n     * @param {?number} start Position to start at\n     * @param {?number} end Position to end at\n     * @emits WaveSurfer#interaction\n     * @return {Promise} Result of the backend play method\n     * @example\n     * // play from second 1 to 5\n     * wavesurfer.play(1, 5);\n     */\n    play(start, end) {\n        if (this.params.ignoreSilenceMode) {\n            // ignores device hardware silence mode\n            util.ignoreSilenceMode();\n        }\n\n        this.fireEvent('interaction', () => this.play(start, end));\n        return this.backend.play(start, end);\n    }\n\n    /**\n     * Set a point in seconds for playback to stop at.\n     *\n     * @param {number} position Position (in seconds) to stop at\n     * @version 3.3.0\n     */\n    setPlayEnd(position) {\n        this.backend.setPlayEnd(position);\n    }\n\n    /**\n     * Stops and pauses playback\n     *\n     * @example wavesurfer.pause();\n     * @return {Promise} Result of the backend pause method\n     */\n    pause() {\n        if (!this.backend.isPaused()) {\n            return this.backend.pause();\n        }\n    }\n\n    /**\n     * Toggle playback\n     *\n     * @example wavesurfer.playPause();\n     * @return {Promise} Result of the backend play or pause method\n     */\n    playPause() {\n        return this.backend.isPaused() ? this.play() : this.pause();\n    }\n\n    /**\n     * Get the current playback state\n     *\n     * @example const isPlaying = wavesurfer.isPlaying();\n     * @return {boolean} False if paused, true if playing\n     */\n    isPlaying() {\n        return !this.backend.isPaused();\n    }\n\n    /**\n     * Skip backward\n     *\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n     * is used\n     * @example wavesurfer.skipBackward();\n     */\n    skipBackward(seconds) {\n        this.skip(-seconds || -this.params.skipLength);\n    }\n\n    /**\n     * Skip forward\n     *\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n     * is used\n     * @example wavesurfer.skipForward();\n     */\n    skipForward(seconds) {\n        this.skip(seconds || this.params.skipLength);\n    }\n\n    /**\n     * Skip a number of seconds from the current position (use a negative value\n     * to go backwards).\n     *\n     * @param {number} offset Amount to skip back or forwards\n     * @example\n     * // go back 2 seconds\n     * wavesurfer.skip(-2);\n     */\n    skip(offset) {\n        const duration = this.getDuration() || 1;\n        let position = this.getCurrentTime() || 0;\n        position = Math.max(0, Math.min(duration, position + (offset || 0)));\n        this.seekAndCenter(position / duration);\n    }\n\n    /**\n     * Seeks to a position and centers the view\n     *\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\n     * @example\n     * // seek and go to the middle of the audio\n     * wavesurfer.seekTo(0.5);\n     */\n    seekAndCenter(progress) {\n        this.seekTo(progress);\n        this.drawer.recenter(progress);\n    }\n\n    /**\n     * Seeks to a position\n     *\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\n     * @emits WaveSurfer#interaction\n     * @emits WaveSurfer#seek\n     * @example\n     * // seek to the middle of the audio\n     * wavesurfer.seekTo(0.5);\n     */\n    seekTo(progress) {\n        // return an error if progress is not a number between 0 and 1\n        if (\n            typeof progress !== 'number' ||\n            !isFinite(progress) ||\n            progress < 0 ||\n            progress > 1\n        ) {\n            throw new Error(\n                'Error calling wavesurfer.seekTo, parameter must be a number between 0 and 1!'\n            );\n        }\n        this.fireEvent('interaction', () => this.seekTo(progress));\n\n        const isWebAudioBackend = this.params.backend === 'WebAudio';\n        const paused = this.backend.isPaused();\n\n        if (isWebAudioBackend && !paused) {\n            this.backend.pause();\n        }\n\n        // avoid small scrolls while paused seeking\n        const oldScrollParent = this.params.scrollParent;\n        this.params.scrollParent = false;\n        this.backend.seekTo(progress * this.getDuration());\n        this.drawer.progress(progress);\n\n        if (isWebAudioBackend && !paused) {\n            this.backend.play();\n        }\n\n        this.params.scrollParent = oldScrollParent;\n        this.fireEvent('seek', progress);\n    }\n\n    /**\n     * Stops and goes to the beginning.\n     *\n     * @example wavesurfer.stop();\n     */\n    stop() {\n        this.pause();\n        this.seekTo(0);\n        this.drawer.progress(0);\n    }\n\n    /**\n     * Sets the ID of the audio device to use for output and returns a Promise.\n     *\n     * @param {string} deviceId String value representing underlying output\n     * device\n     * @returns {Promise} `Promise` that resolves to `undefined` when there are\n     * no errors detected.\n     */\n    setSinkId(deviceId) {\n        return this.backend.setSinkId(deviceId);\n    }\n\n    /**\n     * Set the playback volume.\n     *\n     * @param {number} newVolume A value between 0 and 1, 0 being no\n     * volume and 1 being full volume.\n     * @emits WaveSurfer#volume\n     */\n    setVolume(newVolume) {\n        this.backend.setVolume(newVolume);\n        this.fireEvent('volume', newVolume);\n    }\n\n    /**\n     * Get the playback volume.\n     *\n     * @return {number} A value between 0 and 1, 0 being no\n     * volume and 1 being full volume.\n     */\n    getVolume() {\n        return this.backend.getVolume();\n    }\n\n    /**\n     * Set the playback rate.\n     *\n     * @param {number} rate A positive number. E.g. 0.5 means half the normal\n     * speed, 2 means double speed and so on.\n     * @example wavesurfer.setPlaybackRate(2);\n     */\n    setPlaybackRate(rate) {\n        this.backend.setPlaybackRate(rate);\n    }\n\n    /**\n     * Get the playback rate.\n     *\n     * @return {number} The current playback rate.\n     */\n    getPlaybackRate() {\n        return this.backend.getPlaybackRate();\n    }\n\n    /**\n     * Toggle the volume on and off. If not currently muted it will save the\n     * current volume value and turn the volume off. If currently muted then it\n     * will restore the volume to the saved value, and then rest the saved\n     * value.\n     *\n     * @example wavesurfer.toggleMute();\n     */\n    toggleMute() {\n        this.setMute(!this.isMuted);\n    }\n\n    /**\n     * Enable or disable muted audio\n     *\n     * @param {boolean} mute Specify `true` to mute audio.\n     * @emits WaveSurfer#volume\n     * @emits WaveSurfer#mute\n     * @example\n     * // unmute\n     * wavesurfer.setMute(false);\n     * console.log(wavesurfer.getMute()) // logs false\n     */\n    setMute(mute) {\n        // ignore all muting requests if the audio is already in that state\n        if (mute === this.isMuted) {\n            this.fireEvent('mute', this.isMuted);\n            return;\n        }\n\n        if (this.backend.setMute) {\n            // Backends such as the MediaElement backend have their own handling\n            // of mute, let them handle it.\n            this.backend.setMute(mute);\n            this.isMuted = mute;\n        } else {\n            if (mute) {\n                // If currently not muted then save current volume,\n                // turn off the volume and update the mute properties\n                this.savedVolume = this.backend.getVolume();\n                this.backend.setVolume(0);\n                this.isMuted = true;\n                this.fireEvent('volume', 0);\n            } else {\n                // If currently muted then restore to the saved volume\n                // and update the mute properties\n                this.backend.setVolume(this.savedVolume);\n                this.isMuted = false;\n                this.fireEvent('volume', this.savedVolume);\n            }\n        }\n        this.fireEvent('mute', this.isMuted);\n    }\n\n    /**\n     * Get the current mute status.\n     *\n     * @example const isMuted = wavesurfer.getMute();\n     * @return {boolean} Current mute status\n     */\n    getMute() {\n        return this.isMuted;\n    }\n\n    /**\n     * Get the list of current set filters as an array.\n     *\n     * Filters must be set with setFilters method first\n     *\n     * @return {array} List of enabled filters\n     */\n    getFilters() {\n        return this.backend.filters || [];\n    }\n\n    /**\n     * Toggles `scrollParent` and redraws\n     *\n     * @example wavesurfer.toggleScroll();\n     */\n    toggleScroll() {\n        this.params.scrollParent = !this.params.scrollParent;\n        this.drawBuffer();\n    }\n\n    /**\n     * Toggle mouse interaction\n     *\n     * @example wavesurfer.toggleInteraction();\n     */\n    toggleInteraction() {\n        this.params.interact = !this.params.interact;\n    }\n\n    /**\n     * Get the fill color of the waveform after the cursor.\n     *\n     * @return {string} A CSS color string.\n     */\n    getWaveColor() {\n        return this.params.waveColor;\n    }\n\n    /**\n     * Set the fill color of the waveform after the cursor.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setWaveColor('#ddd');\n     */\n    setWaveColor(color) {\n        this.params.waveColor = color;\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the fill color of the waveform behind the cursor.\n     *\n     * @return {string} A CSS color string.\n     */\n    getProgressColor() {\n        return this.params.progressColor;\n    }\n\n    /**\n     * Set the fill color of the waveform behind the cursor.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setProgressColor('#400');\n     */\n    setProgressColor(color) {\n        this.params.progressColor = color;\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the background color of the waveform container.\n     *\n     * @return {string} A CSS color string.\n     */\n    getBackgroundColor() {\n        return this.params.backgroundColor;\n    }\n\n    /**\n     * Set the background color of the waveform container.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setBackgroundColor('#FF00FF');\n     */\n    setBackgroundColor(color) {\n        this.params.backgroundColor = color;\n        util.style(this.container, { background: this.params.backgroundColor });\n    }\n\n    /**\n     * Get the fill color of the cursor indicating the playhead\n     * position.\n     *\n     * @return {string} A CSS color string.\n     */\n    getCursorColor() {\n        return this.params.cursorColor;\n    }\n\n    /**\n     * Set the fill color of the cursor indicating the playhead\n     * position.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setCursorColor('#222');\n     */\n    setCursorColor(color) {\n        this.params.cursorColor = color;\n        this.drawer.updateCursor();\n    }\n\n    /**\n     * Get the height of the waveform.\n     *\n     * @return {number} Height measured in pixels.\n     */\n    getHeight() {\n        return this.params.height;\n    }\n\n    /**\n     * Set the height of the waveform.\n     *\n     * @param {number} height Height measured in pixels.\n     * @example wavesurfer.setHeight(200);\n     */\n    setHeight(height) {\n        this.params.height = height;\n        this.drawer.setHeight(height * this.params.pixelRatio);\n        this.drawBuffer();\n    }\n\n    /**\n     * Hide channels from being drawn on the waveform if splitting channels.\n     *\n     * For example, if we want to draw only the peaks for the right stereo channel:\n     *\n     * const wavesurfer = new WaveSurfer.create({...splitChannels: true});\n     * wavesurfer.load('stereo_audio.mp3');\n     *\n     * wavesurfer.setFilteredChannel([0]); <-- hide left channel peaks.\n     *\n     * @param {array} channelIndices Channels to be filtered out from drawing.\n     * @version 4.0.0\n     */\n    setFilteredChannels(channelIndices) {\n        this.params.splitChannelsOptions.filterChannels = channelIndices;\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the correct peaks for current wave view-port and render wave\n     *\n     * @private\n     * @emits WaveSurfer#redraw\n     */\n    drawBuffer() {\n        const nominalWidth = Math.round(\n            this.getDuration() *\n                this.params.minPxPerSec *\n                this.params.pixelRatio\n        );\n        const parentWidth = this.drawer.getWidth();\n        let width = nominalWidth;\n        // always start at 0 after zooming for scrolling : issue redraw left part\n        let start = 0;\n        let end = Math.max(start + parentWidth, width);\n        // Fill container\n        if (\n            this.params.fillParent &&\n            (!this.params.scrollParent || nominalWidth < parentWidth)\n        ) {\n            width = parentWidth;\n            start = 0;\n            end = width;\n        }\n\n        let peaks;\n        if (this.params.partialRender) {\n            const newRanges = this.peakCache.addRangeToPeakCache(\n                width,\n                start,\n                end\n            );\n            let i;\n            for (i = 0; i < newRanges.length; i++) {\n                peaks = this.backend.getPeaks(\n                    width,\n                    newRanges[i][0],\n                    newRanges[i][1]\n                );\n                this.drawer.drawPeaks(\n                    peaks,\n                    width,\n                    newRanges[i][0],\n                    newRanges[i][1]\n                );\n            }\n        } else {\n            peaks = this.backend.getPeaks(width, start, end);\n            this.drawer.drawPeaks(peaks, width, start, end);\n        }\n        this.fireEvent('redraw', peaks, width);\n    }\n\n    /**\n     * Horizontally zooms the waveform in and out. It also changes the parameter\n     * `minPxPerSec` and enables the `scrollParent` option. Calling the function\n     * with a falsey parameter will reset the zoom state.\n     *\n     * @param {?number} pxPerSec Number of horizontal pixels per second of\n     * audio, if none is set the waveform returns to unzoomed state\n     * @emits WaveSurfer#zoom\n     * @example wavesurfer.zoom(20);\n     */\n    zoom(pxPerSec) {\n        if (!pxPerSec) {\n            this.params.minPxPerSec = this.defaultParams.minPxPerSec;\n            this.params.scrollParent = false;\n        } else {\n            this.params.minPxPerSec = pxPerSec;\n            this.params.scrollParent = true;\n        }\n\n        this.drawBuffer();\n        this.drawer.progress(this.backend.getPlayedPercents());\n\n        this.drawer.recenter(this.getCurrentTime() / this.getDuration());\n        this.fireEvent('zoom', pxPerSec);\n    }\n\n    /**\n     * Decode buffer and load\n     *\n     * @private\n     * @param {ArrayBuffer} arraybuffer Buffer to process\n     */\n    loadArrayBuffer(arraybuffer) {\n        this.decodeArrayBuffer(arraybuffer, data => {\n            if (!this.isDestroyed) {\n                this.loadDecodedBuffer(data);\n            }\n        });\n    }\n\n    /**\n     * Directly load an externally decoded AudioBuffer\n     *\n     * @private\n     * @param {AudioBuffer} buffer Buffer to process\n     * @emits WaveSurfer#ready\n     */\n    loadDecodedBuffer(buffer) {\n        this.backend.load(buffer);\n        this.drawBuffer();\n        this.isReady = true;\n        this.fireEvent('ready');\n    }\n\n    /**\n     * Loads audio data from a Blob or File object\n     *\n     * @param {Blob|File} blob Audio data\n     * @example\n     */\n    loadBlob(blob) {\n        // Create file reader\n        const reader = new FileReader();\n        reader.addEventListener('progress', e => this.onProgress(e));\n        reader.addEventListener('load', e =>\n            this.loadArrayBuffer(e.target.result)\n        );\n        reader.addEventListener('error', () =>\n            this.fireEvent('error', 'Error reading file')\n        );\n        reader.readAsArrayBuffer(blob);\n        this.empty();\n    }\n\n    /**\n     * Loads audio and re-renders the waveform.\n     *\n     * @param {string|HTMLMediaElement} url The url of the audio file or the\n     * audio element with the audio\n     * @param {number[]|Number.<Array[]>} peaks Wavesurfer does not have to decode\n     * the audio to render the waveform if this is specified\n     * @param {?string} preload (Use with backend `MediaElement` and `MediaElementWebAudio`)\n     * `'none'|'metadata'|'auto'` Preload attribute for the media element\n     * @param {?number} duration The duration of the audio. This is used to\n     * render the peaks data in the correct size for the audio duration (as\n     * befits the current `minPxPerSec` and zoom value) without having to decode\n     * the audio.\n     * @returns {void}\n     * @throws Will throw an error if the `url` argument is empty.\n     * @example\n     * // uses fetch or media element to load file (depending on backend)\n     * wavesurfer.load('http://example.com/demo.wav');\n     *\n     * // setting preload attribute with media element backend and supplying\n     * // peaks\n     * wavesurfer.load(\n     *   'http://example.com/demo.wav',\n     *   [0.0218, 0.0183, 0.0165, 0.0198, 0.2137, 0.2888],\n     *   true\n     * );\n     */\n    load(url, peaks, preload, duration) {\n        if (!url) {\n            throw new Error('url parameter cannot be empty');\n        }\n        this.empty();\n        if (preload) {\n            // check whether the preload attribute will be usable and if not log\n            // a warning listing the reasons why not and nullify the variable\n            const preloadIgnoreReasons = {\n                \"Preload is not 'auto', 'none' or 'metadata'\":\n                    ['auto', 'metadata', 'none'].indexOf(preload) === -1,\n                'Peaks are not provided': !peaks,\n                \"Backend is not of type 'MediaElement' or 'MediaElementWebAudio'\":\n                    ['MediaElement', 'MediaElementWebAudio'].indexOf(\n                        this.params.backend\n                    ) === -1,\n                'Url is not of type string': typeof url !== 'string'\n            };\n            const activeReasons = Object.keys(preloadIgnoreReasons).filter(\n                reason => preloadIgnoreReasons[reason]\n            );\n            if (activeReasons.length) {\n                // eslint-disable-next-line no-console\n                console.warn(\n                    'Preload parameter of wavesurfer.load will be ignored because:\\n\\t- ' +\n                        activeReasons.join('\\n\\t- ')\n                );\n                // stop invalid values from being used\n                preload = null;\n            }\n        }\n\n        // loadBuffer(url, peaks, duration) requires that url is a string\n        // but users can pass in a HTMLMediaElement to WaveSurfer\n        if (this.params.backend === 'WebAudio' && url instanceof HTMLMediaElement) {\n            url = url.src;\n        }\n\n        switch (this.params.backend) {\n            case 'WebAudio':\n                return this.loadBuffer(url, peaks, duration);\n            case 'MediaElement':\n            case 'MediaElementWebAudio':\n                return this.loadMediaElement(url, peaks, preload, duration);\n        }\n    }\n\n    /**\n     * Loads audio using Web Audio buffer backend.\n     *\n     * @private\n     * @emits WaveSurfer#waveform-ready\n     * @param {string} url URL of audio file\n     * @param {number[]|Number.<Array[]>} peaks Peaks data\n     * @param {?number} duration Optional duration of audio file\n     * @returns {void}\n     */\n    loadBuffer(url, peaks, duration) {\n        const load = action => {\n            if (action) {\n                this.tmpEvents.push(this.once('ready', action));\n            }\n            return this.getArrayBuffer(url, data => this.loadArrayBuffer(data));\n        };\n\n        if (peaks) {\n            this.backend.setPeaks(peaks, duration);\n            this.drawBuffer();\n            this.fireEvent('waveform-ready');\n            this.tmpEvents.push(this.once('interaction', load));\n        } else {\n            return load();\n        }\n    }\n\n    /**\n     * Either create a media element, or load an existing media element.\n     *\n     * @private\n     * @emits WaveSurfer#waveform-ready\n     * @param {string|HTMLMediaElement} urlOrElt Either a path to a media file, or an\n     * existing HTML5 Audio/Video Element\n     * @param {number[]|Number.<Array[]>} peaks Array of peaks. Required to bypass web audio\n     * dependency\n     * @param {?boolean} preload Set to true if the preload attribute of the\n     * audio element should be enabled\n     * @param {?number} duration Optional duration of audio file\n     */\n    loadMediaElement(urlOrElt, peaks, preload, duration) {\n        let url = urlOrElt;\n\n        if (typeof urlOrElt === 'string') {\n            this.backend.load(url, this.mediaContainer, peaks, preload);\n        } else {\n            const elt = urlOrElt;\n            this.backend.loadElt(elt, peaks);\n\n            // If peaks are not provided,\n            // url = element.src so we can get peaks with web audio\n            url = elt.src;\n        }\n\n        this.tmpEvents.push(\n            this.backend.once('canplay', () => {\n                // ignore when backend was already destroyed\n                if (!this.backend.destroyed) {\n                    this.drawBuffer();\n                    this.isReady = true;\n                    this.fireEvent('ready');\n                }\n            }),\n            this.backend.once('error', err => this.fireEvent('error', err))\n        );\n\n        // If peaks are provided, render them and fire the `waveform-ready` event.\n        if (peaks) {\n            this.backend.setPeaks(peaks, duration);\n            this.drawBuffer();\n            this.fireEvent('waveform-ready');\n        }\n\n        // If no pre-decoded peaks are provided, or are provided with\n        // forceDecode flag, attempt to download the audio file and decode it\n        // with Web Audio.\n        if (\n            (!peaks || this.params.forceDecode) &&\n            this.backend.supportsWebAudio()\n        ) {\n            this.getArrayBuffer(url, arraybuffer => {\n                this.decodeArrayBuffer(arraybuffer, buffer => {\n                    this.backend.buffer = buffer;\n                    this.backend.setPeaks(null);\n                    this.drawBuffer();\n                    this.fireEvent('waveform-ready');\n                });\n            });\n        }\n    }\n\n    /**\n     * Decode an array buffer and pass data to a callback\n     *\n     * @private\n     * @param {Object} arraybuffer The array buffer to decode\n     * @param {function} callback The function to call on complete\n     */\n    decodeArrayBuffer(arraybuffer, callback) {\n        if (!this.isDestroyed) {\n            this.arraybuffer = arraybuffer;\n            this.backend.decodeArrayBuffer(\n                arraybuffer,\n                data => {\n                    // Only use the decoded data if we haven't been destroyed or\n                    // another decode started in the meantime\n                    if (!this.isDestroyed && this.arraybuffer == arraybuffer) {\n                        callback(data);\n                        this.arraybuffer = null;\n                    }\n                },\n                () => this.fireEvent('error', 'Error decoding audiobuffer')\n            );\n        }\n    }\n\n    /**\n     * Load an array buffer using fetch and pass the result to a callback\n     *\n     * @param {string} url The URL of the file object\n     * @param {function} callback The function to call on complete\n     * @returns {util.fetchFile} fetch call\n     * @private\n     */\n    getArrayBuffer(url, callback) {\n        let options = Object.assign(\n            {\n                url: url,\n                responseType: 'arraybuffer'\n            },\n            this.params.xhr\n        );\n        const request = util.fetchFile(options);\n\n        this.currentRequest = request;\n\n        this.tmpEvents.push(\n            request.on('progress', e => {\n                this.onProgress(e);\n            }),\n            request.on('success', data => {\n                callback(data);\n                this.currentRequest = null;\n            }),\n            request.on('error', e => {\n                this.fireEvent('error', e);\n                this.currentRequest = null;\n            })\n        );\n\n        return request;\n    }\n\n    /**\n     * Called while the audio file is loading\n     *\n     * @private\n     * @param {Event} e Progress event\n     * @emits WaveSurfer#loading\n     */\n    onProgress(e) {\n        let percentComplete;\n        if (e.lengthComputable) {\n            percentComplete = e.loaded / e.total;\n        } else {\n            // Approximate progress with an asymptotic\n            // function, and assume downloads in the 1-3 MB range.\n            percentComplete = e.loaded / (e.loaded + 1000000);\n        }\n        this.fireEvent('loading', Math.round(percentComplete * 100), e.target);\n    }\n\n    /**\n     * Exports PCM data into a JSON array and optionally opens in a new window\n     * as valid JSON Blob instance.\n     *\n     * @param {number} length=1024 The scale in which to export the peaks\n     * @param {number} accuracy=10000\n     * @param {?boolean} noWindow Set to true to disable opening a new\n     * window with the JSON\n     * @param {number} start Start index\n     * @param {number} end End index\n     * @return {Promise} Promise that resolves with array of peaks\n     */\n    exportPCM(length, accuracy, noWindow, start, end) {\n        length = length || 1024;\n        start = start || 0;\n        accuracy = accuracy || 10000;\n        noWindow = noWindow || false;\n        const peaks = this.backend.getPeaks(length, start, end);\n        const arr = [].map.call(\n            peaks,\n            val => Math.round(val * accuracy) / accuracy\n        );\n\n        return new Promise((resolve, reject) => {\n            if (!noWindow){\n                const blobJSON = new Blob(\n                    [JSON.stringify(arr)],\n                    {type: 'application/json;charset=utf-8'}\n                );\n                const objURL = URL.createObjectURL(blobJSON);\n                window.open(objURL);\n                URL.revokeObjectURL(objURL);\n            }\n            resolve(arr);\n        });\n    }\n\n    /**\n     * Save waveform image as data URI.\n     *\n     * The default format is `'image/png'`. Other supported types are\n     * `'image/jpeg'` and `'image/webp'`.\n     *\n     * @param {string} format='image/png' A string indicating the image format.\n     * The default format type is `'image/png'`.\n     * @param {number} quality=1 A number between 0 and 1 indicating the image\n     * quality to use for image formats that use lossy compression such as\n     * `'image/jpeg'`` and `'image/webp'`.\n     * @param {string} type Image data type to return. Either 'dataURL' (default)\n     * or 'blob'.\n     * @return {string|string[]|Promise} When using `'dataURL'` type this returns\n     * a single data URL or an array of data URLs, one for each canvas. When using\n     * `'blob'` type this returns a `Promise` resolving with an array of `Blob`\n     * instances, one for each canvas.\n     */\n    exportImage(format, quality, type) {\n        if (!format) {\n            format = 'image/png';\n        }\n        if (!quality) {\n            quality = 1;\n        }\n        if (!type) {\n            type = 'dataURL';\n        }\n\n        return this.drawer.getImage(format, quality, type);\n    }\n\n    /**\n     * Cancel any fetch request currently in progress\n     */\n    cancelAjax() {\n        if (this.currentRequest && this.currentRequest.controller) {\n            // If the current request has a ProgressHandler, then its ReadableStream might need to be cancelled too\n            // See: Wavesurfer issue #2042\n            // See Firefox bug: https://bugzilla.mozilla.org/show_bug.cgi?id=1583815\n            if (this.currentRequest._reader) {\n                // Ignoring exceptions thrown by call to cancel()\n                this.currentRequest._reader.cancel().catch(err => {});\n            }\n\n            this.currentRequest.controller.abort();\n            this.currentRequest = null;\n        }\n    }\n\n    /**\n     * @private\n     */\n    clearTmpEvents() {\n        this.tmpEvents.forEach(e => e.un());\n    }\n\n    /**\n     * Display empty waveform.\n     */\n    empty() {\n        if (!this.backend.isPaused()) {\n            this.stop();\n            this.backend.disconnectSource();\n        }\n        this.isReady = false;\n        this.cancelAjax();\n        this.clearTmpEvents();\n\n        // empty drawer\n        this.drawer.progress(0);\n        this.drawer.setWidth(0);\n        this.drawer.drawPeaks({ length: this.drawer.getWidth() }, 0);\n    }\n\n    /**\n     * Remove events, elements and disconnect WebAudio nodes.\n     *\n     * @emits WaveSurfer#destroy\n     */\n    destroy() {\n        this.destroyAllPlugins();\n        this.fireEvent('destroy');\n        this.cancelAjax();\n        this.clearTmpEvents();\n        this.unAll();\n        if (this.params.responsive !== false) {\n            window.removeEventListener('resize', this._onResize, true);\n            window.removeEventListener(\n                'orientationchange',\n                this._onResize,\n                true\n            );\n        }\n        if (this.backend) {\n            this.backend.destroy();\n            // clears memory usage\n            this.backend = null;\n        }\n        if (this.drawer) {\n            this.drawer.destroy();\n        }\n        this.isDestroyed = true;\n        this.isReady = false;\n        this.arraybuffer = null;\n    }\n}\n","import * as util from './util';\n\n// using constants to prevent someone writing the string wrong\nconst PLAYING = 'playing';\nconst PAUSED = 'paused';\nconst FINISHED = 'finished';\n\n/**\n * WebAudio backend\n *\n * @extends {Observer}\n */\nexport default class WebAudio extends util.Observer {\n    /** scriptBufferSize: size of the processing buffer */\n    static scriptBufferSize = 256;\n    /** audioContext: allows to process audio with WebAudio API */\n    audioContext = null;\n    /** @private */\n    offlineAudioContext = null;\n    /** @private */\n    stateBehaviors = {\n        [PLAYING]: {\n            init() {\n                this.addOnAudioProcess();\n            },\n            getPlayedPercents() {\n                const duration = this.getDuration();\n                return this.getCurrentTime() / duration || 0;\n            },\n            getCurrentTime() {\n                return this.startPosition + this.getPlayedTime();\n            }\n        },\n        [PAUSED]: {\n            init() {\n                this.removeOnAudioProcess();\n            },\n            getPlayedPercents() {\n                const duration = this.getDuration();\n                return this.getCurrentTime() / duration || 0;\n            },\n            getCurrentTime() {\n                return this.startPosition;\n            }\n        },\n        [FINISHED]: {\n            init() {\n                this.removeOnAudioProcess();\n                this.fireEvent('finish');\n            },\n            getPlayedPercents() {\n                return 1;\n            },\n            getCurrentTime() {\n                return this.getDuration();\n            }\n        }\n    };\n\n    /**\n     * Does the browser support this backend\n     *\n     * @return {boolean} Whether or not this browser supports this backend\n     */\n    supportsWebAudio() {\n        return !!(window.AudioContext || window.webkitAudioContext);\n    }\n\n    /**\n     * Get the audio context used by this backend or create one\n     *\n     * @return {AudioContext} Existing audio context, or creates a new one\n     */\n    getAudioContext() {\n        if (!window.WaveSurferAudioContext) {\n            window.WaveSurferAudioContext = new (window.AudioContext ||\n                window.webkitAudioContext)();\n        }\n        return window.WaveSurferAudioContext;\n    }\n\n    /**\n     * Get the offline audio context used by this backend or create one\n     *\n     * @param {number} sampleRate The sample rate to use\n     * @return {OfflineAudioContext} Existing offline audio context, or creates\n     * a new one\n     */\n    getOfflineAudioContext(sampleRate) {\n        if (!window.WaveSurferOfflineAudioContext) {\n            window.WaveSurferOfflineAudioContext = new (window.OfflineAudioContext ||\n                window.webkitOfflineAudioContext)(1, 2, sampleRate);\n        }\n        return window.WaveSurferOfflineAudioContext;\n    }\n\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params Wavesurfer parameters\n     */\n    constructor(params) {\n        super();\n        /** @private */\n        this.params = params;\n        /** ac: Audio Context instance */\n        this.ac =\n            params.audioContext ||\n            (this.supportsWebAudio() ? this.getAudioContext() : {});\n        /**@private */\n        this.lastPlay = this.ac.currentTime;\n        /** @private */\n        this.startPosition = 0;\n        /** @private */\n        this.scheduledPause = null;\n        /** @private */\n        this.states = {\n            [PLAYING]: Object.create(this.stateBehaviors[PLAYING]),\n            [PAUSED]: Object.create(this.stateBehaviors[PAUSED]),\n            [FINISHED]: Object.create(this.stateBehaviors[FINISHED])\n        };\n        /** @private */\n        this.buffer = null;\n        /** @private */\n        this.filters = [];\n        /** gainNode: allows to control audio volume */\n        this.gainNode = null;\n        /** @private */\n        this.mergedPeaks = null;\n        /** @private */\n        this.offlineAc = null;\n        /** @private */\n        this.peaks = null;\n        /** @private */\n        this.playbackRate = 1;\n        /** analyser: provides audio analysis information */\n        this.analyser = null;\n        /** scriptNode: allows processing audio */\n        this.scriptNode = null;\n        /** @private */\n        this.source = null;\n        /** @private */\n        this.splitPeaks = [];\n        /** @private */\n        this.state = null;\n        /** @private */\n        this.explicitDuration = params.duration;\n        /**\n         * Boolean indicating if the backend was destroyed.\n         */\n        this.destroyed = false;\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.createVolumeNode();\n        this.createScriptNode();\n        this.createAnalyserNode();\n\n        this.setState(PAUSED);\n        this.setPlaybackRate(this.params.audioRate);\n        this.setLength(0);\n    }\n\n    /** @private */\n    disconnectFilters() {\n        if (this.filters) {\n            this.filters.forEach(filter => {\n                filter && filter.disconnect();\n            });\n            this.filters = null;\n            // Reconnect direct path\n            this.analyser.connect(this.gainNode);\n        }\n    }\n\n    /**\n     * @private\n     *\n     * @param {string} state The new state\n     */\n    setState(state) {\n        if (this.state !== this.states[state]) {\n            this.state = this.states[state];\n            this.state.init.call(this);\n        }\n    }\n\n    /**\n     * Unpacked `setFilters()`\n     *\n     * @param {...AudioNode} filters One or more filters to set\n     */\n    setFilter(...filters) {\n        this.setFilters(filters);\n    }\n\n    /**\n     * Insert custom Web Audio nodes into the graph\n     *\n     * @param {AudioNode[]} filters Packed filters array\n     * @example\n     * const lowpass = wavesurfer.backend.ac.createBiquadFilter();\n     * wavesurfer.backend.setFilter(lowpass);\n     */\n    setFilters(filters) {\n        // Remove existing filters\n        this.disconnectFilters();\n\n        // Insert filters if filter array not empty\n        if (filters && filters.length) {\n            this.filters = filters;\n\n            // Disconnect direct path before inserting filters\n            this.analyser.disconnect();\n\n            // Connect each filter in turn\n            filters\n                .reduce((prev, curr) => {\n                    prev.connect(curr);\n                    return curr;\n                }, this.analyser)\n                .connect(this.gainNode);\n        }\n    }\n    /** Create ScriptProcessorNode to process audio */\n    createScriptNode() {\n        if (this.params.audioScriptProcessor) {\n            this.scriptNode = this.params.audioScriptProcessor;\n        } else {\n            if (this.ac.createScriptProcessor) {\n                this.scriptNode = this.ac.createScriptProcessor(\n                    WebAudio.scriptBufferSize\n                );\n            } else {\n                this.scriptNode = this.ac.createJavaScriptNode(\n                    WebAudio.scriptBufferSize\n                );\n            }\n        }\n        this.scriptNode.connect(this.ac.destination);\n    }\n\n    /** @private */\n    addOnAudioProcess() {\n        this.scriptNode.onaudioprocess = () => {\n            const time = this.getCurrentTime();\n\n            if (time >= this.getDuration()) {\n                this.setState(FINISHED);\n                this.fireEvent('pause');\n            } else if (time >= this.scheduledPause) {\n                this.pause();\n            } else if (this.state === this.states[PLAYING]) {\n                this.fireEvent('audioprocess', time);\n            }\n        };\n    }\n\n    /** @private */\n    removeOnAudioProcess() {\n        this.scriptNode.onaudioprocess = null;\n    }\n    /** Create analyser node to perform audio analysis */\n    createAnalyserNode() {\n        this.analyser = this.ac.createAnalyser();\n        this.analyser.connect(this.gainNode);\n    }\n\n    /**\n     * Create the gain node needed to control the playback volume.\n     *\n     */\n    createVolumeNode() {\n        // Create gain node using the AudioContext\n        if (this.ac.createGain) {\n            this.gainNode = this.ac.createGain();\n        } else {\n            this.gainNode = this.ac.createGainNode();\n        }\n        // Add the gain node to the graph\n        this.gainNode.connect(this.ac.destination);\n    }\n\n    /**\n     * Set the sink id for the media player\n     *\n     * @param {string} deviceId String value representing audio device id.\n     * @returns {Promise} A Promise that resolves to `undefined` when there\n     * are no errors.\n     */\n    setSinkId(deviceId) {\n        if (deviceId) {\n            /**\n             * The webaudio API doesn't currently support setting the device\n             * output. Here we create an HTMLAudioElement, connect the\n             * webaudio stream to that element and setSinkId there.\n             */\n            let audio = new window.Audio();\n            if (!audio.setSinkId) {\n                return Promise.reject(\n                    new Error('setSinkId is not supported in your browser')\n                );\n            }\n            audio.autoplay = true;\n            const dest = this.ac.createMediaStreamDestination();\n            this.gainNode.disconnect();\n            this.gainNode.connect(dest);\n            audio.srcObject = dest.stream;\n\n            return audio.setSinkId(deviceId);\n        } else {\n            return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\n        }\n    }\n\n    /**\n     * Set the audio volume\n     *\n     * @param {number} value A floating point value between 0 and 1.\n     */\n    setVolume(value) {\n        this.gainNode.gain.setValueAtTime(value, this.ac.currentTime);\n    }\n\n    /**\n     * Get the current volume\n     *\n     * @return {number} value A floating point value between 0 and 1.\n     */\n    getVolume() {\n        return this.gainNode.gain.value;\n    }\n\n    /**\n     * Decode an array buffer and pass data to a callback\n     *\n     * @private\n     * @param {ArrayBuffer} arraybuffer The array buffer to decode\n     * @param {function} callback The function to call on complete.\n     * @param {function} errback The function to call on error.\n     */\n    decodeArrayBuffer(arraybuffer, callback, errback) {\n        if (!this.offlineAc) {\n            this.offlineAc = this.getOfflineAudioContext(\n                this.ac && this.ac.sampleRate ? this.ac.sampleRate : 44100\n            );\n        }\n        if ('webkitAudioContext' in window) {\n            // Safari: no support for Promise-based decodeAudioData enabled\n            // Enable it in Safari using the Experimental Features > Modern WebAudio API option\n            this.offlineAc.decodeAudioData(\n                arraybuffer,\n                data => callback(data),\n                errback\n            );\n        } else {\n            this.offlineAc.decodeAudioData(arraybuffer).then(\n                (data) => callback(data)\n            ).catch(\n                (err) => errback(err)\n            );\n        }\n    }\n\n    /**\n     * Set pre-decoded peaks\n     *\n     * @param {number[]|Number.<Array[]>} peaks Peaks data\n     * @param {?number} duration Explicit duration\n     */\n    setPeaks(peaks, duration) {\n        if (duration != null) {\n            this.explicitDuration = duration;\n        }\n        this.peaks = peaks;\n    }\n\n    /**\n     * Set the rendered length (different from the length of the audio)\n     *\n     * @param {number} length The rendered length\n     */\n    setLength(length) {\n        // No resize, we can preserve the cached peaks.\n        if (this.mergedPeaks && length == 2 * this.mergedPeaks.length - 1 + 2) {\n            return;\n        }\n\n        this.splitPeaks = [];\n        this.mergedPeaks = [];\n        // Set the last element of the sparse array so the peak arrays are\n        // appropriately sized for other calculations.\n        const channels = this.buffer ? this.buffer.numberOfChannels : 1;\n        let c;\n        for (c = 0; c < channels; c++) {\n            this.splitPeaks[c] = [];\n            this.splitPeaks[c][2 * (length - 1)] = 0;\n            this.splitPeaks[c][2 * (length - 1) + 1] = 0;\n        }\n        this.mergedPeaks[2 * (length - 1)] = 0;\n        this.mergedPeaks[2 * (length - 1) + 1] = 0;\n    }\n\n    /**\n     * Compute the max and min value of the waveform when broken into <length> subranges.\n     *\n     * @param {number} length How many subranges to break the waveform into.\n     * @param {number} first First sample in the required range.\n     * @param {number} last Last sample in the required range.\n     * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of arrays of\n     * peaks consisting of (max, min) values for each subrange.\n     */\n    getPeaks(length, first, last) {\n        if (this.peaks) {\n            return this.peaks;\n        }\n        if (!this.buffer) {\n            return [];\n        }\n\n        first = first || 0;\n        last = last || length - 1;\n\n        this.setLength(length);\n\n        if (!this.buffer) {\n            return this.params.splitChannels\n                ? this.splitPeaks\n                : this.mergedPeaks;\n        }\n\n        /**\n         * The following snippet fixes a buffering data issue on the Safari\n         * browser which returned undefined It creates the missing buffer based\n         * on 1 channel, 4096 samples and the sampleRate from the current\n         * webaudio context 4096 samples seemed to be the best fit for rendering\n         * will review this code once a stable version of Safari TP is out\n         */\n        if (!this.buffer.length) {\n            const newBuffer = this.createBuffer(1, 4096, this.sampleRate);\n            this.buffer = newBuffer.buffer;\n        }\n\n        const sampleSize = this.buffer.length / length;\n        const sampleStep = ~~(sampleSize / 10) || 1;\n        const channels = this.buffer.numberOfChannels;\n        let c;\n\n        for (c = 0; c < channels; c++) {\n            const peaks = this.splitPeaks[c];\n            const chan = this.buffer.getChannelData(c);\n            let i;\n\n            for (i = first; i <= last; i++) {\n                const start = ~~(i * sampleSize);\n                const end = ~~(start + sampleSize);\n                /**\n                 * Initialize the max and min to the first sample of this\n                 * subrange, so that even if the samples are entirely\n                 * on one side of zero, we still return the true max and\n                 * min values in the subrange.\n                 */\n                let min = chan[start];\n                let max = min;\n                let j;\n\n                for (j = start; j < end; j += sampleStep) {\n                    const value = chan[j];\n\n                    if (value > max) {\n                        max = value;\n                    }\n\n                    if (value < min) {\n                        min = value;\n                    }\n                }\n\n                peaks[2 * i] = max;\n                peaks[2 * i + 1] = min;\n\n                if (c == 0 || max > this.mergedPeaks[2 * i]) {\n                    this.mergedPeaks[2 * i] = max;\n                }\n\n                if (c == 0 || min < this.mergedPeaks[2 * i + 1]) {\n                    this.mergedPeaks[2 * i + 1] = min;\n                }\n            }\n        }\n\n        return this.params.splitChannels ? this.splitPeaks : this.mergedPeaks;\n    }\n\n    /**\n     * Get the position from 0 to 1\n     *\n     * @return {number} Position\n     */\n    getPlayedPercents() {\n        return this.state.getPlayedPercents.call(this);\n    }\n\n    /** @private */\n    disconnectSource() {\n        if (this.source) {\n            this.source.disconnect();\n        }\n    }\n    /**\n     * Destroy all references with WebAudio, disconnecting audio nodes and closing Audio Context\n     */\n    destroyWebAudio() {\n        this.disconnectFilters();\n        this.disconnectSource();\n        this.gainNode.disconnect();\n        this.scriptNode.disconnect();\n        this.analyser.disconnect();\n\n        // close the audioContext if closeAudioContext option is set to true\n        if (this.params.closeAudioContext) {\n            // check if browser supports AudioContext.close()\n            if (\n                typeof this.ac.close === 'function' &&\n                this.ac.state != 'closed'\n            ) {\n                this.ac.close();\n            }\n            // clear the reference to the audiocontext\n            this.ac = null;\n            // clear the actual audiocontext, either passed as param or the\n            // global singleton\n            if (!this.params.audioContext) {\n                window.WaveSurferAudioContext = null;\n            } else {\n                this.params.audioContext = null;\n            }\n            // clear the offlineAudioContext\n            window.WaveSurferOfflineAudioContext = null;\n        }\n    }\n    /**\n     * This is called when wavesurfer is destroyed\n     */\n    destroy() {\n        if (!this.isPaused()) {\n            this.pause();\n        }\n        this.unAll();\n        this.buffer = null;\n        this.destroyed = true;\n\n        this.destroyWebAudio();\n    }\n\n    /**\n     * Loaded a decoded audio buffer\n     *\n     * @param {Object} buffer Decoded audio buffer to load\n     */\n    load(buffer) {\n        this.startPosition = 0;\n        this.lastPlay = this.ac.currentTime;\n        this.buffer = buffer;\n        this.createSource();\n    }\n\n    /** @private */\n    createSource() {\n        this.disconnectSource();\n        this.source = this.ac.createBufferSource();\n\n        // adjust for old browsers\n        this.source.start = this.source.start || this.source.noteGrainOn;\n        this.source.stop = this.source.stop || this.source.noteOff;\n\n        this.setPlaybackRate(this.playbackRate);\n        this.source.buffer = this.buffer;\n        this.source.connect(this.analyser);\n    }\n\n    /**\n     * @private\n     *\n     * some browsers require an explicit call to #resume before they will play back audio\n     */\n    resumeAudioContext() {\n        if (this.ac.state == 'suspended') {\n            this.ac.resume && this.ac.resume();\n        }\n    }\n\n    /**\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n     *\n     * @return {boolean} Whether or not this backend is currently paused\n     */\n    isPaused() {\n        return this.state !== this.states[PLAYING];\n    }\n\n    /**\n     * Used by `wavesurfer.getDuration()`\n     *\n     * @return {number} Duration of loaded buffer\n     */\n    getDuration() {\n        if (this.explicitDuration) {\n            return this.explicitDuration;\n        }\n        if (!this.buffer) {\n            return 0;\n        }\n        return this.buffer.duration;\n    }\n\n    /**\n     * Used by `wavesurfer.seekTo()`\n     *\n     * @param {number} start Position to start at in seconds\n     * @param {number} end Position to end at in seconds\n     * @return {{start: number, end: number}} Object containing start and end\n     * positions\n     */\n    seekTo(start, end) {\n        if (!this.buffer) {\n            return;\n        }\n\n        this.scheduledPause = null;\n\n        if (start == null) {\n            start = this.getCurrentTime();\n            if (start >= this.getDuration()) {\n                start = 0;\n            }\n        }\n        if (end == null) {\n            end = this.getDuration();\n        }\n\n        this.startPosition = start;\n        this.lastPlay = this.ac.currentTime;\n\n        if (this.state === this.states[FINISHED]) {\n            this.setState(PAUSED);\n        }\n\n        return {\n            start: start,\n            end: end\n        };\n    }\n\n    /**\n     * Get the playback position in seconds\n     *\n     * @return {number} The playback position in seconds\n     */\n    getPlayedTime() {\n        return (this.ac.currentTime - this.lastPlay) * this.playbackRate;\n    }\n\n    /**\n     * Plays the loaded audio region.\n     *\n     * @param {number} start Start offset in seconds, relative to the beginning\n     * of a clip.\n     * @param {number} end When to stop relative to the beginning of a clip.\n     */\n    play(start, end) {\n        if (!this.buffer) {\n            return;\n        }\n\n        // need to re-create source on each playback\n        this.createSource();\n\n        const adjustedTime = this.seekTo(start, end);\n\n        start = adjustedTime.start;\n        end = adjustedTime.end;\n\n        this.scheduledPause = end;\n\n        this.source.start(0, start);\n\n        this.resumeAudioContext();\n\n        this.setState(PLAYING);\n\n        this.fireEvent('play');\n    }\n\n    /**\n     * Pauses the loaded audio.\n     */\n    pause() {\n        this.scheduledPause = null;\n\n        this.startPosition += this.getPlayedTime();\n        try {\n            this.source && this.source.stop(0);\n        } catch (err) {\n            // Calling stop can throw the following 2 errors:\n            // - RangeError (The value specified for when is negative.)\n            // - InvalidStateNode (The node has not been started by calling start().)\n            // We can safely ignore both errors, because:\n            // - The range is surely correct\n            // - The node might not have been started yet, in which case we just want to carry on without causing any trouble.\n        }\n\n        this.setState(PAUSED);\n\n        this.fireEvent('pause');\n    }\n\n    /**\n     * Returns the current time in seconds relative to the audio-clip's\n     * duration.\n     *\n     * @return {number} The current time in seconds\n     */\n    getCurrentTime() {\n        return this.state.getCurrentTime.call(this);\n    }\n\n    /**\n     * Returns the current playback rate. (0=no playback, 1=normal playback)\n     *\n     * @return {number} The current playback rate\n     */\n    getPlaybackRate() {\n        return this.playbackRate;\n    }\n\n    /**\n     * Set the audio source playback rate.\n     *\n     * @param {number} value The playback rate to use\n     */\n    setPlaybackRate(value) {\n        this.playbackRate = value || 1;\n        this.source && this.source.playbackRate.setValueAtTime(\n            this.playbackRate,\n            this.ac.currentTime\n        );\n    }\n\n    /**\n     * Set a point in seconds for playback to stop at.\n     *\n     * @param {number} end Position to end at\n     * @version 3.3.0\n     */\n    setPlayEnd(end) {\n        this.scheduledPause = end;\n    }\n}\n","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/wavesurfer.js\");\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}