{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/withConnect.tsx\";\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useState, useEffect, useRef } from 'react';\nimport { connectToParent } from 'penpal';\nimport { useActivityDispatcher } from 'use-activity-dispatcher';\nimport { checkRunningMode } from '../utils';\nimport { RunningMode } from '../types';\nimport JobProxy from '../libs/JobProxy';\n;\nconst isCallableFunc = func => func && ({}.toString.call(func) === '[object Function]' || {}.toString.call(func) === '[object AsyncFunction]');\nconst withConnect = ({\n  type,\n  methods = {},\n  samplePayload\n}) => WrappedComponent => () => {\n  useActivityDispatcher();\n  const tool = useRef();\n  const mode = checkRunningMode();\n  const [payload, setPayload] = useState(null);\n  // functions that parent provides\n  const saveContent = useRef(() => {});\n  const loadContent = useRef(() => {});\n  const renderComplete = useRef(() => {});\n  // job proxy\n  const jobProxy = useRef();\n  useEffect(() => {\n    if (mode === RunningMode.IFRAME) {\n      // set up iframe connection when the app is running in an iframe\n      const connection = connectToParent({\n        methods: {\n          onSubmit: async () => {\n            const func = methods.onSubmit || 'onSubmit';\n            if (isCallableFunc(tool.current[func])) {\n              const values = await tool.current[func]();\n              // make sure onSubmit returns a string\n              // consume this value in each tool itself or its custom tag in mashup\n              return typeof values === 'string' ? values : JSON.stringify(values);\n            }\n            return '';\n          },\n          cleanData: () => {\n            const func = methods.cleanData || 'cleanData';\n            if (isCallableFunc(tool.current[func])) {\n              tool.current[func]();\n            }\n          },\n          isModified: () => {\n            const func = methods.isModified || 'isModified';\n            if (isCallableFunc(tool.current[func])) {\n              return tool.current[func]();\n            }\n            // return null if this method not provided\n            return null;\n          },\n          getStatistics: () => {\n            const func = methods.getStatistics || 'getStatistics';\n            if (isCallableFunc(tool.current[func])) {\n              return tool.current[func]();\n            }\n            return undefined;\n          },\n          getReviews: () => {\n            // eslint-disable-next-line no-console\n            console.log('in get reviews');\n            const func = methods.getReviews || 'getReviews';\n            if (isCallableFunc(tool.current[func])) {\n              return tool.current[func]();\n            }\n            return undefined;\n          },\n          submitReviews: () => {\n            // eslint-disable-next-line no-console\n            console.log('in submit reviews');\n            const func = methods.submitReviews || 'submitReviews';\n            if (isCallableFunc(tool.current[func])) {\n              tool.current[func]();\n            }\n          }\n        }\n      });\n      saveContent.current = (...args) => new Promise((resolve, reject) => {\n        connection.promise.then(parent => parent.saveContent(...args)).then(url => {\n          resolve(url);\n        }).catch(e => {\n          reject(e);\n        });\n      });\n      loadContent.current = (...args) => new Promise((resolve, reject) => {\n        connection.promise.then(parent => parent.loadContent(...args)).then(data => {\n          resolve(data);\n        }).catch(e => {\n          reject(e);\n        });\n      });\n      renderComplete.current = () => connection.promise.then(parent => parent.renderComplete());\n\n      // get payload from parent\n      connection.promise.then(parent => parent.getPayload()).then(p => {\n        initJobProxy(p);\n        setPayload(p);\n      });\n    }\n    if (mode === RunningMode.STANDALONE) {\n      // get sample payload\n      initJobProxy(samplePayload);\n      setPayload(samplePayload);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [type, mode]);\n  const initJobProxy = p => {\n    jobProxy.current = new JobProxy({\n      toolName: type,\n      toolMode: p.tool_mode || p.mode,\n      jobId: p.job_id,\n      taskId: p.task_id,\n      recordId: p.record_id,\n      // eslint-disable-next-line no-underscore-dangle\n      reviewUrl: p._reviews,\n      reviewFrom: p.review_from,\n      saveContent: saveContent.current,\n      loadContent: loadContent.current\n    });\n  };\n  return payload && /*#__PURE__*/React.createElement(WrappedComponent, Object.assign({\n    ref: tool,\n    saveContent: saveContent.current,\n    loadContent: loadContent.current,\n    renderComplete: renderComplete.current,\n    jobProxy: jobProxy.current\n  }, payload, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 5\n    }\n  }));\n};\nexport default withConnect;","map":{"version":3,"names":["React","useState","useEffect","useRef","connectToParent","useActivityDispatcher","checkRunningMode","RunningMode","JobProxy","isCallableFunc","func","toString","call","withConnect","type","methods","samplePayload","WrappedComponent","tool","mode","payload","setPayload","saveContent","loadContent","renderComplete","jobProxy","IFRAME","connection","onSubmit","current","values","JSON","stringify","cleanData","isModified","getStatistics","undefined","getReviews","console","log","submitReviews","args","Promise","resolve","reject","promise","then","parent","url","catch","e","data","getPayload","p","initJobProxy","STANDALONE","toolName","toolMode","tool_mode","jobId","job_id","taskId","task_id","recordId","record_id","reviewUrl","_reviews","reviewFrom","review_from","createElement","Object","assign","ref","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/withConnect.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useState, useEffect, useRef } from 'react';\nimport { connectToParent } from 'penpal';\nimport { useActivityDispatcher } from 'use-activity-dispatcher';\nimport { checkRunningMode } from '../utils';\nimport { AnnotationType, RunningMode } from '../types';\nimport JobProxy from '../libs/JobProxy';\n\ninterface ConnectProps {\n  type: AnnotationType; // annotation tool type\n  methods?: { // methods connected to the iframe and tool function names map\n    [name: string]: string;\n  },\n  samplePayload: any; // sample payload to render each tool when not running in an iframe\n};\n\ninterface Payload {\n  tool_mode?: string;\n  mode?: string; // some tool, it pass tool_mode, others mode\n  job_id?: string;\n  task_id?: string;\n  record_id?: string;\n  _reviews?: string;\n  review_from?: any;\n}\n\nconst isCallableFunc = (func: unknown) => func && (\n  {}.toString.call(func) === '[object Function]' ||\n  {}.toString.call(func) === '[object AsyncFunction]'\n);\n\nconst withConnect = ({ type, methods = {}, samplePayload }: ConnectProps) => (WrappedComponent: any) => () => {\n  useActivityDispatcher();\n  const tool = useRef<any>();\n  const mode = checkRunningMode();\n  const [payload, setPayload] = useState<Payload | null>(null);\n  // functions that parent provides\n  const saveContent = useRef<any>(() => {});\n  const loadContent = useRef<any>(() => {});\n  const renderComplete = useRef<any>(() => {});\n  // job proxy\n  const jobProxy = useRef<JobProxy>();\n\n  useEffect(() => {\n    if (mode === RunningMode.IFRAME) {\n      // set up iframe connection when the app is running in an iframe\n      const connection = connectToParent({\n        methods: {\n          onSubmit: async () => {\n            const func = methods.onSubmit || 'onSubmit';\n            if (isCallableFunc(tool.current[func])) {\n              const values = await tool.current[func]();\n              // make sure onSubmit returns a string\n              // consume this value in each tool itself or its custom tag in mashup\n              return typeof values === 'string' ? values : JSON.stringify(values);\n            }\n            return '';\n          },\n          cleanData: () => {\n            const func = methods.cleanData || 'cleanData';\n            if (isCallableFunc(tool.current[func])) {\n              tool.current[func]();\n            }\n          },\n          isModified: () => {\n            const func = methods.isModified || 'isModified';\n            if (isCallableFunc(tool.current[func])) {\n              return tool.current[func]();\n            }\n            // return null if this method not provided\n            return null;\n          },\n          getStatistics: () => {\n            const func = methods.getStatistics || 'getStatistics';\n            if (isCallableFunc(tool.current[func])) {\n              return tool.current[func]();\n            }\n            return undefined;\n          },\n          getReviews: () => {\n            // eslint-disable-next-line no-console\n            console.log('in get reviews');\n            const func = methods.getReviews || 'getReviews';\n            if (isCallableFunc(tool.current[func])) {\n              return tool.current[func]();\n            }\n            return undefined;\n          },\n          submitReviews: () => {\n            // eslint-disable-next-line no-console\n            console.log('in submit reviews');\n            const func = methods.submitReviews || 'submitReviews';\n            if (isCallableFunc(tool.current[func])) {\n              tool.current[func]();\n            }\n          },\n        },\n      });\n\n      saveContent.current = (...args: any) => new Promise((resolve, reject) => {\n        connection.promise\n          .then((parent: any) => parent.saveContent(...args))\n          .then((url: string) => {\n            resolve(url);\n          })\n          .catch((e: any) => {\n            reject(e);\n          });\n      });\n\n      loadContent.current = (...args: any) => new Promise((resolve, reject) => {\n        connection.promise\n          .then((parent: any) => parent.loadContent(...args))\n          .then((data: any) => {\n            resolve(data);\n          })\n          .catch((e: any) => {\n            reject(e);\n          });\n      });\n\n      renderComplete.current = () => connection.promise.then((parent: any) => parent.renderComplete());\n\n      // get payload from parent\n      connection.promise\n        .then((parent: any) => parent.getPayload())\n        .then((p: any) => {\n          initJobProxy(p);\n          setPayload(p);\n        });\n    }\n\n    if (mode === RunningMode.STANDALONE) {\n      // get sample payload\n      initJobProxy(samplePayload);\n      setPayload(samplePayload);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [type, mode]);\n\n  const initJobProxy = (p: Payload) => {\n    jobProxy.current = new JobProxy({\n      toolName: type,\n      toolMode: p.tool_mode || p.mode,\n      jobId: p.job_id,\n      taskId: p.task_id,\n      recordId: p.record_id,\n      // eslint-disable-next-line no-underscore-dangle\n      reviewUrl: p._reviews,\n      reviewFrom: p.review_from,\n      saveContent: saveContent.current,\n      loadContent: loadContent.current,\n    });\n  };\n\n  return payload && (\n    <WrappedComponent\n      ref={tool}\n      saveContent={saveContent.current}\n      loadContent={loadContent.current}\n      renderComplete={renderComplete.current}\n      jobProxy={jobProxy.current}\n      {...payload}\n    />\n  );\n};\n\nexport default withConnect;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}