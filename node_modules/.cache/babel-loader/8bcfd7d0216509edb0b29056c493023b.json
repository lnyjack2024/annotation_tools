{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/SegmentDetail/SegmentDetail.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './SegmentDetail.scss';\nimport EasyForm from '@appen/easy-form';\nimport LineDetail from './LineDetail/LineDetail';\nimport { pushLine, setLineRole, setSegmentQAState, setSegmentCategory } from '../../redux/action';\nimport { formatTimestamp, SegmentMode, translate, triggerForm } from '../../constants';\nimport { isInput } from '../../redux/reducer/segmentController';\nimport QAForm from './QAForm/QAForm';\nimport { isReviewEditable, isAnnotationReadonly } from '../../../../utils/tool-mode';\nclass SegmentDetail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleKeyDown = e => {\n      if (isInput()) return;\n      const {\n        currentSegment,\n        toolMode,\n        annotateDisabled\n      } = this.props;\n      if (e.key.toUpperCase() === 'Q') {\n        e.preventDefault();\n        this.props.setCurrentSegment({\n          index: currentSegment - 1\n        });\n      } else if (e.key.toUpperCase() === 'E') {\n        e.preventDefault();\n        this.props.setCurrentSegment({\n          index: currentSegment + 1\n        });\n      }\n      if (e.keyCode >= 48 && e.key <= 57 && !annotateDisabled) {\n        const i = parseInt(e.key, 10);\n        if (i >= this.ontologyValidKeys.length) return;\n        const role = this.ontologyValidKeys[i];\n        this.props.setLineRole({\n          videoIndex: null,\n          segmentIndex: null,\n          lineIndex: 0,\n          role\n        });\n      }\n      if (e.keyCode === 13 && e.ctrlKey && isReviewEditable(toolMode)) {\n        e.preventDefault();\n        this.props.setSegmentQAState({\n          qaChecked: true\n        });\n        this.props.setCurrentSegment({\n          index: currentSegment + 1\n        });\n      }\n    };\n    this.changeSegmentCategory = data => {\n      const {\n        segmentConfig\n      } = this.props;\n      const {\n        conditions\n      } = this.config;\n      const hasCondition = conditions && Array.isArray(conditions) && conditions.length;\n      const setValue = (key, value) => {\n        const index = segmentConfig.fields.findIndex(v => v.name === key);\n        this.props.setSegmentCategory({\n          key,\n          value,\n          videoIndex: null,\n          segmentIndex: null,\n          fieldIndex: `${index}`\n        });\n      };\n      Object.keys(data).forEach(key => {\n        if (hasCondition && conditions.find(con => con.field === key)) {\n          const {\n            updatedValues\n          } = triggerForm(this.config, {\n            [key]: data[key]\n          });\n          Object.keys(updatedValues).forEach(upKey => {\n            setValue(upKey, updatedValues[upKey]);\n          });\n        } else {\n          setValue(key, data[key]);\n        }\n      });\n    };\n    this.segmentRef = React.createRef();\n    this.isPreventScroll = false;\n  }\n  handleButtonClick(e, type) {\n    const {\n      currentSegment\n    } = this.props;\n    let newRole = null;\n    switch (type) {\n      case 'prev':\n        this.props.setCurrentSegment({\n          index: currentSegment - 1\n        });\n        break;\n      case 'next':\n        this.props.setCurrentSegment({\n          index: currentSegment + 1\n        });\n        break;\n      case 'push':\n        // eslint-disable-next-line no-restricted-syntax\n        for (const value of this.allRoles) {\n          if (this.currentRoles.indexOf(value) < 0) {\n            newRole = value;\n            break;\n          }\n        }\n        this.props.pushLine({\n          videoIndex: null,\n          segmentIndex: currentSegment,\n          role: newRole\n        });\n        break;\n      default:\n        break;\n    }\n  }\n\n  // eslint-disable-next-line react/no-deprecated\n  componentWillMount() {\n    // eslint-disable-next-line no-undef\n    window.addEventListener('keydown', this.handleKeyDown);\n    this.ontologyValidKeys = [];\n    const {\n      ontology\n    } = this.props;\n    ontology.forEach((value, key) => {\n      this.ontologyValidKeys.push(key);\n    });\n  }\n  shouldComponentUpdate(nextProps) {\n    const {\n      results,\n      segmentConfig,\n      currentVideo,\n      currentSegment,\n      keyAttribute,\n      toolMode,\n      annotateDisabled\n    } = nextProps;\n    const nextCurrentValues = results[currentVideo][currentSegment];\n    if (currentVideo !== this.props.currentVideo || currentSegment !== this.props.currentSegment || !this.config || annotateDisabled !== this.props.annotateDisabled) {\n      this.isPreventScroll = true;\n      const {\n        fields\n      } = segmentConfig;\n      if (keyAttribute.options.length > 0 && !fields.find(v => v.name === keyAttribute.name)) {\n        fields.unshift(keyAttribute);\n      }\n      const readonly = isAnnotationReadonly(toolMode) || annotateDisabled;\n      this.config = {\n        ...segmentConfig,\n        fields: fields.map(field => ({\n          ...field,\n          readonly: readonly || field.readonly,\n          optionType: 'button',\n          ...(nextCurrentValues && nextCurrentValues.attributes && nextCurrentValues.attributes[field.name] !== undefined && {\n            defaultValue: nextCurrentValues.attributes[field.name]\n          })\n        })),\n        footerVisible: false\n      };\n    } else {\n      this.isPreventScroll = false;\n    }\n    return true;\n  }\n  componentDidUpdate() {\n    if (this.segmentRef.current && this.isPreventScroll) {\n      let timer = setTimeout(() => {\n        clearTimeout(timer);\n        timer = null;\n        this.segmentRef.current.scrollTop = 0;\n      }, 10);\n    }\n  }\n  render() {\n    const {\n      results,\n      ontology,\n      currentVideo,\n      currentSegment,\n      toolMode\n    } = this.props;\n    this.segment = results[currentVideo][currentSegment];\n    if (!this.segment) {\n      return null;\n    }\n    this.currentRoles = [];\n    this.allRoles = [];\n    ontology.forEach((value, key) => {\n      this.allRoles.push(key);\n    });\n    this.segment.content.forEach(value => {\n      this.currentRoles.push(value.role);\n    });\n    const segment = results[currentVideo][currentSegment];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"segment-detail-container\",\n      ref: this.segmentRef,\n      key: `${currentVideo}_${currentSegment}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"segment-detail-head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"segment-detail-index\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }\n    }, currentSegment + 1), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"segment-detail-timestamp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }\n    }, `${formatTimestamp(segment.start)}~${formatTimestamp(segment.end)}`), /*#__PURE__*/React.createElement(SegmentDetailChangeButton, {\n      className: \"segment-detail-change\",\n      content: translate('next'),\n      shortcut: \"E\",\n      onClick: e => this.handleButtonClick(e, 'next'),\n      disabled: currentSegment + 1 === results[currentVideo].length,\n      type2: \"next\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(SegmentDetailChangeButton, {\n      className: \"segment-detail-change\",\n      content: translate('prev'),\n      shortcut: \"Q\",\n      onClick: e => this.handleButtonClick(e, 'prev'),\n      disabled: currentSegment === 0,\n      type2: \"prev\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"segment-detail-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }\n    }, isReviewEditable(toolMode) ? /*#__PURE__*/React.createElement(QAForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 41\n      }\n    }) : null, /*#__PURE__*/React.createElement(EasyForm, Object.assign({\n      theme: \"dark\",\n      autoFocus: false\n    }, this.config && this.config, {\n      onChange: this.changeSegmentCategory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }\n    })), segment.content.map((line, index) => /*#__PURE__*/React.createElement(LineDetail\n    /* eslint-disable-next-line react/no-array-index-key */, {\n      key: `line-detail-${index}`,\n      line: line,\n      currentRoles: this.currentRoles,\n      lineIndex: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }\n    }))), this.props.overlap && this.props.segmentMode !== SegmentMode.individual && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"segment-push-line\",\n      onClick: e => this.handleButtonClick(e, 'push'),\n      style: {\n        display: this.currentRoles.length === this.allRoles.length ? 'none' : 'block'\n      },\n      disabled: isAnnotationReadonly(this.props.toolMode) || this.props.annotateDisabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"add-role-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }\n    }, \" +\"), translate('addRole')));\n  }\n}\nconst SegmentDetailChangeButton = props => /*#__PURE__*/React.createElement(\"button\", {\n  className: \"segment-detail-change\",\n  type: \"button\",\n  onClick: e => props.onClick(e, props.type2),\n  style: {\n    display: props.disabled ? 'none' : 'block'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 3\n  }\n}, props.content, /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 5\n  }\n}, ` {${props.shortcut}} `));\nconst mapStateToProps = state => ({\n  results: state.results,\n  ontology: state.ontology,\n  segmentConfig: state.segmentConfig,\n  lineConfig: state.lineConfig,\n  currentVideo: state.currentVideo,\n  currentSegment: state.currentSegment,\n  videos: state.videos,\n  toolMode: state.toolMode,\n  overlap: state.overlap,\n  keyAttribute: state.keyAttribute,\n  segmentMode: state.segmentMode,\n  annotateDisabled: state.annotateDisabled\n});\nconst mapDispatchToProps = {\n  pushLine,\n  setLineRole,\n  setSegmentQAState,\n  setSegmentCategory\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SegmentDetail);","map":{"version":3,"names":["React","connect","EasyForm","LineDetail","pushLine","setLineRole","setSegmentQAState","setSegmentCategory","formatTimestamp","SegmentMode","translate","triggerForm","isInput","QAForm","isReviewEditable","isAnnotationReadonly","SegmentDetail","Component","constructor","props","handleKeyDown","e","currentSegment","toolMode","annotateDisabled","key","toUpperCase","preventDefault","setCurrentSegment","index","keyCode","i","parseInt","ontologyValidKeys","length","role","videoIndex","segmentIndex","lineIndex","ctrlKey","qaChecked","changeSegmentCategory","data","segmentConfig","conditions","config","hasCondition","Array","isArray","setValue","value","fields","findIndex","v","name","fieldIndex","Object","keys","forEach","find","con","field","updatedValues","upKey","segmentRef","createRef","isPreventScroll","handleButtonClick","type","newRole","allRoles","currentRoles","indexOf","componentWillMount","window","addEventListener","ontology","push","shouldComponentUpdate","nextProps","results","currentVideo","keyAttribute","nextCurrentValues","options","unshift","readonly","map","optionType","attributes","undefined","defaultValue","footerVisible","componentDidUpdate","current","timer","setTimeout","clearTimeout","scrollTop","render","segment","content","createElement","className","ref","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","start","end","SegmentDetailChangeButton","shortcut","onClick","disabled","type2","assign","theme","autoFocus","onChange","line","overlap","segmentMode","individual","style","display","mapStateToProps","state","lineConfig","videos","mapDispatchToProps"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/SegmentDetail/SegmentDetail.js"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport './SegmentDetail.scss';\nimport EasyForm from '@appen/easy-form';\nimport LineDetail from './LineDetail/LineDetail';\nimport { pushLine, setLineRole, setSegmentQAState, setSegmentCategory } from '../../redux/action';\nimport { formatTimestamp, SegmentMode, translate, triggerForm } from '../../constants';\nimport { isInput } from '../../redux/reducer/segmentController';\nimport QAForm from './QAForm/QAForm';\nimport { isReviewEditable, isAnnotationReadonly } from '../../../../utils/tool-mode';\n\nclass SegmentDetail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.segmentRef = React.createRef();\n    this.isPreventScroll = false;\n  }\n\n  handleButtonClick(e, type) {\n    const { currentSegment } = this.props;\n    let newRole = null;\n    switch (type) {\n      case 'prev':\n        this.props.setCurrentSegment({ index: currentSegment - 1 });\n        break;\n      case 'next':\n        this.props.setCurrentSegment({ index: currentSegment + 1 });\n        break;\n      case 'push':\n        // eslint-disable-next-line no-restricted-syntax\n        for (const value of this.allRoles) {\n          if (this.currentRoles.indexOf(value) < 0) {\n            newRole = value;\n            break;\n          }\n        }\n        this.props.pushLine({\n          videoIndex: null,\n          segmentIndex: currentSegment,\n          role: newRole,\n        });\n        break;\n      default:\n        break;\n    }\n  }\n\n  // eslint-disable-next-line react/no-deprecated\n  componentWillMount() {\n    // eslint-disable-next-line no-undef\n    window.addEventListener('keydown', this.handleKeyDown);\n    this.ontologyValidKeys = [];\n    const { ontology } = this.props;\n    ontology.forEach((value, key) => {\n      this.ontologyValidKeys.push(key);\n    });\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const { results, segmentConfig, currentVideo, currentSegment, keyAttribute, toolMode, annotateDisabled } = nextProps;\n    const nextCurrentValues = results[currentVideo][currentSegment];\n    if (\n      currentVideo !== this.props.currentVideo ||\n      currentSegment !== this.props.currentSegment ||\n      !this.config ||\n      annotateDisabled !== this.props.annotateDisabled\n    ) {\n      this.isPreventScroll = true;\n      const { fields } = segmentConfig;\n      if (keyAttribute.options.length > 0 && !fields.find((v) => v.name === keyAttribute.name)) {\n        fields.unshift(keyAttribute);\n      }\n      const readonly = isAnnotationReadonly(toolMode) || annotateDisabled;\n      this.config = {\n        ...segmentConfig,\n        fields: fields.map((field) => ({\n          ...field,\n          readonly: readonly || field.readonly,\n          optionType: 'button',\n          ...nextCurrentValues && nextCurrentValues.attributes && nextCurrentValues.attributes[field.name] !== undefined && {\n            defaultValue: nextCurrentValues.attributes[field.name],\n          }\n        })),\n        footerVisible: false,\n      };\n    } else {\n      this.isPreventScroll = false;\n    }\n    return true;\n  }\n\n  componentDidUpdate() {\n    if (this.segmentRef.current && this.isPreventScroll) {\n      let timer = setTimeout(() => {\n        clearTimeout(timer);\n        timer = null;\n        this.segmentRef.current.scrollTop = 0;\n      }, 10);\n    }\n  }\n\n  handleKeyDown = (e) => {\n    if (isInput()) return;\n    const { currentSegment, toolMode, annotateDisabled } = this.props;\n    if (e.key.toUpperCase() === 'Q') {\n      e.preventDefault();\n      this.props.setCurrentSegment({ index: currentSegment - 1 });\n    } else if (e.key.toUpperCase() === 'E') {\n      e.preventDefault();\n      this.props.setCurrentSegment({ index: currentSegment + 1 });\n    }\n    if (e.keyCode >= 48 && e.key <= 57 && !annotateDisabled) {\n      const i = parseInt(e.key, 10);\n      if (i >= this.ontologyValidKeys.length) return;\n      const role = this.ontologyValidKeys[i];\n      this.props.setLineRole({\n        videoIndex: null,\n        segmentIndex: null,\n        lineIndex: 0,\n        role,\n      });\n    }\n    if (e.keyCode === 13 && e.ctrlKey && isReviewEditable(toolMode)) {\n      e.preventDefault();\n      this.props.setSegmentQAState({ qaChecked: true });\n      this.props.setCurrentSegment({ index: currentSegment + 1 });\n    }\n  };\n\n  changeSegmentCategory = (data) => {\n    const { segmentConfig } = this.props;\n    const { conditions } = this.config;\n    const hasCondition = conditions && Array.isArray(conditions) && conditions.length;\n\n    const setValue = (key, value) => {\n      const index = segmentConfig.fields.findIndex((v) => v.name === key);\n      this.props.setSegmentCategory({\n        key,\n        value,\n        videoIndex: null,\n        segmentIndex: null,\n        fieldIndex: `${index}`\n      });\n    };\n\n    Object.keys(data).forEach((key) => {\n      if (hasCondition && conditions.find((con) => con.field === key)) {\n        const { updatedValues } = triggerForm(this.config, { [key]: data[key] });\n        Object.keys(updatedValues).forEach((upKey) => {\n          setValue(upKey, updatedValues[upKey]);\n        });\n      } else {\n        setValue(key, data[key]);\n      }\n    });\n  };\n\n  render() {\n    const { results, ontology, currentVideo, currentSegment, toolMode } = this.props;\n    this.segment = results[currentVideo][currentSegment];\n    if (!this.segment) {\n      return null;\n    }\n    this.currentRoles = [];\n    this.allRoles = [];\n    ontology.forEach((value, key) => {\n      this.allRoles.push(key);\n    });\n    this.segment.content.forEach((value) => {\n      this.currentRoles.push(value.role);\n    });\n    const segment = results[currentVideo][currentSegment];\n    return (\n      <div className=\"segment-detail-container\" ref={this.segmentRef} key={`${currentVideo}_${currentSegment}`}>\n        <div className=\"segment-detail-head\">\n          <div className=\"segment-detail-index\">{currentSegment + 1}</div>\n          <div className=\"segment-detail-timestamp\">\n            {`${formatTimestamp(segment.start)}~${formatTimestamp(segment.end)}`}\n          </div>\n          <SegmentDetailChangeButton\n            className=\"segment-detail-change\"\n            content={translate('next')}\n            shortcut=\"E\"\n            onClick={(e) => this.handleButtonClick(e, 'next')}\n            disabled={currentSegment + 1 === results[currentVideo].length}\n            type2=\"next\"\n          />\n          <SegmentDetailChangeButton\n            className=\"segment-detail-change\"\n            content={translate('prev')}\n            shortcut=\"Q\"\n            onClick={(e) => this.handleButtonClick(e, 'prev')}\n            disabled={currentSegment === 0}\n            type2=\"prev\"\n          />\n        </div>\n        <div className=\"segment-detail-body\">\n          {isReviewEditable(toolMode) ? <QAForm /> : null}\n          <EasyForm\n            theme=\"dark\"\n            autoFocus={false}\n            {...this.config && this.config}\n            onChange={this.changeSegmentCategory}\n          />\n          {segment.content.map((line, index) => (\n            <LineDetail\n              /* eslint-disable-next-line react/no-array-index-key */\n              key={`line-detail-${index}`}\n              line={line}\n              currentRoles={this.currentRoles}\n              lineIndex={index}\n            />\n          ))}\n        </div>\n        {(this.props.overlap && this.props.segmentMode !== SegmentMode.individual) && (\n          <button\n            className=\"segment-push-line\"\n            onClick={(e) => this.handleButtonClick(e, 'push')}\n            style={{ display: this.currentRoles.length === this.allRoles.length ? 'none' : 'block' }}\n            disabled={isAnnotationReadonly(this.props.toolMode) || this.props.annotateDisabled}\n          >\n            <div className=\"add-role-icon\"> +</div>\n            {translate('addRole')}\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nconst SegmentDetailChangeButton = ((props) => (\n  <button\n    className=\"segment-detail-change\"\n    type=\"button\"\n    onClick={(e) => props.onClick(e, props.type2)}\n    style={{ display: props.disabled ? 'none' : 'block' }}\n  >\n    {props.content}\n    <span>\n      {` {${props.shortcut}} `}\n    </span>\n  </button>\n));\n\nconst mapStateToProps = (state) => ({\n  results: state.results,\n  ontology: state.ontology,\n  segmentConfig: state.segmentConfig,\n  lineConfig: state.lineConfig,\n  currentVideo: state.currentVideo,\n  currentSegment: state.currentSegment,\n  videos: state.videos,\n  toolMode: state.toolMode,\n  overlap: state.overlap,\n  keyAttribute: state.keyAttribute,\n  segmentMode: state.segmentMode,\n  annotateDisabled: state.annotateDisabled,\n});\nconst mapDispatchToProps = {\n  pushLine,\n  setLineRole,\n  setSegmentQAState,\n  setSegmentCategory,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SegmentDetail);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}