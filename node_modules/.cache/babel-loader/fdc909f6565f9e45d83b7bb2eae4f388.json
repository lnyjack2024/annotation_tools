{"ast":null,"code":"import{Graphics}from'pixi.js';import{BorderStyle}from'./Shape';import{drawVertex}from'./utils';import{curveLength}from'../../../utils/math';/**\n * Extended Graphics\n * @class\n */export default class ShapeGraphics extends Graphics{dashLineTo(toX,toY){let scale=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;let dash=arguments.length>3&&arguments[3]!==undefined?arguments[3]:6;let gap=arguments.length>4&&arguments[4]!==undefined?arguments[4]:4;const{points}=this.currentPath;const currentPosition={x:points[points.length-2],y:points[points.length-1]};const toRight=currentPosition.x<toX;const toBottom=currentPosition.y<toY;const scaledDash=Math.max(dash/scale,dash/2);const scaledGap=Math.max(gap/scale,gap/2);const radian=Math.atan2(toY-currentPosition.y,toX-currentPosition.x);const dashX=Math.cos(radian)*scaledDash;const dashY=Math.sin(radian)*scaledDash;const gapX=Math.cos(radian)*scaledGap;const gapY=Math.sin(radian)*scaledGap;// for vertical or horizontal line, when sin(cos) = 1, cos(sin) != 0\n// add precision for these kind of cases to avoid oom\nwhile(Math.abs(currentPosition.x-toX)>0.00001&&(toRight?currentPosition.x<toX:currentPosition.x>toX)||Math.abs(currentPosition.y-toY)>0.00001&&(toBottom?currentPosition.y<toY:currentPosition.y>toY)){currentPosition.x+=dashX;currentPosition.y+=dashY;if(toRight?currentPosition.x>toX:currentPosition.x<toX){currentPosition.x=toX;}if(toBottom?currentPosition.y>toY:currentPosition.y<toY){currentPosition.y=toY;}this.lineTo(currentPosition.x,currentPosition.y);currentPosition.x+=gapX;currentPosition.y+=gapY;if(toRight?currentPosition.x>toX:currentPosition.x<toX){currentPosition.x=toX;}if(toBottom?currentPosition.y>toY:currentPosition.y<toY){currentPosition.y=toY;}this.moveTo(currentPosition.x,currentPosition.y);}}dashBezierCurveTo(cpX,cpY,cpX2,cpY2,toX,toY){let scale=arguments.length>6&&arguments[6]!==undefined?arguments[6]:1;let dash=arguments.length>7&&arguments[7]!==undefined?arguments[7]:6;let gap=arguments.length>8&&arguments[8]!==undefined?arguments[8]:4;const{points}=this.currentPath;const fromX=points[points.length-2];const fromY=points[points.length-1];const scaledDash=Math.max(dash/scale,dash/2);const scaledGap=Math.max(gap/scale,gap/2);const len=curveLength(fromX,fromY,cpX,cpY,cpX2,cpY2,toX,toY);const groupCount=len/(scaledDash+scaledGap);const groupLen=len/groupCount;let groupIndex=0;let dt=0;let dt2=0;let dt3=0;let t2=0;let t3=0;for(let i=1,j=0;i<=len;i+=1){j=i/len;dt=1-j;dt2=dt*dt;dt3=dt2*dt;t2=j*j;t3=t2*j;const px=dt3*fromX+3*dt2*j*cpX+3*dt*t2*cpX2+t3*toX;const py=dt3*fromY+3*dt2*j*cpY+3*dt*t2*cpY2+t3*toY;if(i<=groupIndex*groupLen+scaledDash){this.lineTo(px,py);}else if(i<(groupIndex+1)*groupLen){this.moveTo(px,py);}else{this.moveTo(px,py);groupIndex+=1;}}}drawLine(toX,toY,borderStyle){let scale=arguments.length>3&&arguments[3]!==undefined?arguments[3]:1;if(borderStyle===BorderStyle.DASHED){this.dashLineTo(toX,toY,scale);}else{this.lineTo(toX,toY);}}drawVertex(x,y,size){drawVertex(this,x,y,size);}}","map":{"version":3,"names":["Graphics","BorderStyle","drawVertex","curveLength","ShapeGraphics","dashLineTo","toX","toY","scale","arguments","length","undefined","dash","gap","points","currentPath","currentPosition","x","y","toRight","toBottom","scaledDash","Math","max","scaledGap","radian","atan2","dashX","cos","dashY","sin","gapX","gapY","abs","lineTo","moveTo","dashBezierCurveTo","cpX","cpY","cpX2","cpY2","fromX","fromY","len","groupCount","groupLen","groupIndex","dt","dt2","dt3","t2","t3","i","j","px","py","drawLine","borderStyle","DASHED","size"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/common/shapes/ExtendedGraphics.ts"],"sourcesContent":["import { Graphics } from 'pixi.js';\nimport { BorderStyle } from './Shape';\nimport { drawVertex } from './utils';\nimport { curveLength } from '../../../utils/math';\n\n/**\n * Extended Graphics\n * @class\n */\nexport default class ShapeGraphics extends Graphics {\n  dashLineTo(toX: number, toY: number, scale = 1, dash = 6, gap = 4) {\n    const { points } = this.currentPath;\n    const currentPosition = {\n      x: points[points.length - 2],\n      y: points[points.length - 1],\n    };\n\n    const toRight = currentPosition.x < toX;\n    const toBottom = currentPosition.y < toY;\n\n    const scaledDash = Math.max(dash / scale, dash / 2);\n    const scaledGap = Math.max(gap / scale, gap / 2);\n    const radian = Math.atan2(toY - currentPosition.y, toX - currentPosition.x);\n    const dashX = Math.cos(radian) * scaledDash;\n    const dashY = Math.sin(radian) * scaledDash;\n    const gapX = Math.cos(radian) * scaledGap;\n    const gapY = Math.sin(radian) * scaledGap;\n\n    // for vertical or horizontal line, when sin(cos) = 1, cos(sin) != 0\n    // add precision for these kind of cases to avoid oom\n    while (\n      (Math.abs(currentPosition.x - toX) > 0.00001 && (toRight ? currentPosition.x < toX : currentPosition.x > toX)) ||\n      (Math.abs(currentPosition.y - toY) > 0.00001 && (toBottom ? currentPosition.y < toY : currentPosition.y > toY))\n    ) {\n      currentPosition.x += dashX;\n      currentPosition.y += dashY;\n      if (toRight ? currentPosition.x > toX : currentPosition.x < toX) {\n        currentPosition.x = toX;\n      }\n      if (toBottom ? currentPosition.y > toY : currentPosition.y < toY) {\n        currentPosition.y = toY;\n      }\n      this.lineTo(currentPosition.x, currentPosition.y);\n\n      currentPosition.x += gapX;\n      currentPosition.y += gapY;\n      if (toRight ? currentPosition.x > toX : currentPosition.x < toX) {\n        currentPosition.x = toX;\n      }\n      if (toBottom ? currentPosition.y > toY : currentPosition.y < toY) {\n        currentPosition.y = toY;\n      }\n      this.moveTo(currentPosition.x, currentPosition.y);\n    }\n  }\n\n  dashBezierCurveTo(cpX: number, cpY: number, cpX2: number, cpY2: number, toX: number, toY: number, scale = 1, dash = 6, gap = 4) {\n    const { points } = this.currentPath;\n    const fromX = points[points.length - 2];\n    const fromY = points[points.length - 1];\n\n    const scaledDash = Math.max(dash / scale, dash / 2);\n    const scaledGap = Math.max(gap / scale, gap / 2);\n\n    const len = curveLength(fromX, fromY, cpX, cpY, cpX2, cpY2, toX, toY);\n    const groupCount = len / (scaledDash + scaledGap);\n    const groupLen = len / groupCount;\n    let groupIndex = 0;\n\n    let dt = 0;\n    let dt2 = 0;\n    let dt3 = 0;\n    let t2 = 0;\n    let t3 = 0;\n\n    for (let i = 1, j = 0; i <= len; i += 1) {\n      j = i / len;\n\n      dt = (1 - j);\n      dt2 = dt * dt;\n      dt3 = dt2 * dt;\n\n      t2 = j * j;\n      t3 = t2 * j;\n\n      const px = (dt3 * fromX) + (3 * dt2 * j * cpX) + (3 * dt * t2 * cpX2) + (t3 * toX);\n      const py = (dt3 * fromY) + (3 * dt2 * j * cpY) + (3 * dt * t2 * cpY2) + (t3 * toY);\n\n      if (i <= groupIndex * groupLen + scaledDash) {\n        this.lineTo(px, py);\n      } else if (i < (groupIndex + 1) * groupLen) {\n        this.moveTo(px, py);\n      } else {\n        this.moveTo(px, py);\n        groupIndex += 1;\n      }\n    }\n  }\n\n  drawLine(toX: number, toY: number, borderStyle: BorderStyle, scale = 1) {\n    if (borderStyle === BorderStyle.DASHED) {\n      this.dashLineTo(toX, toY, scale);\n    } else {\n      this.lineTo(toX, toY);\n    }\n  }\n\n  drawVertex(x: number, y: number, size: number) {\n    drawVertex(this, x, y, size);\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}