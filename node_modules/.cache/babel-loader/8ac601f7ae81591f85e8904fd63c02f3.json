{"ast":null,"code":"import { EventEmitter } from 'eventemitter3';\nimport { Texture, Sprite } from 'pixi.js';\nimport Cursor from '../../Cursor';\nexport let EventAction = /*#__PURE__*/function (EventAction) {\n  EventAction[\"SELECTED\"] = \"selected\";\n  EventAction[\"POINTER_OVER\"] = \"pointer-over\";\n  EventAction[\"POINTER_OUT\"] = \"pointer-out\";\n  return EventAction;\n}({});\n/**\n * anchor\n * @class\n */\nexport default class Anchor extends EventEmitter {\n  /**\n   * get selected\n   * @getter\n   */\n  get selected() {\n    return this._selected;\n  }\n\n  /**\n   * set selected\n   * @setter\n   */\n  set selected(selected) {\n    if (this.destroyed) {\n      return;\n    }\n    const shouldUpdate = this._selected !== selected;\n    this._selected = selected;\n    const index = this.container.getChildIndex(this.img);\n    const count = this.container.children.length;\n    if (index !== count - 1) {\n      this.container.addChildAt(this.img, count - 1); // move to front\n    }\n    if (shouldUpdate && this.selectedTexture && this.texture) {\n      this.img.texture = selected ? this.selectedTexture : this.texture;\n    }\n  }\n\n  /**\n   * get visible\n   * @getter\n   */\n  get visible() {\n    return this.img.visible;\n  }\n\n  /**\n   * set visible\n   * @setter\n   */\n  set visible(visible) {\n    this.img.visible = visible;\n  }\n\n  /**\n   * get interactive\n   * @getter\n   */\n  get interactive() {\n    return this.img.interactive;\n  }\n\n  /**\n   * set interactive\n   * @setter\n   */\n  set interactive(interactive) {\n    this.img.interactive = interactive;\n  }\n  constructor({\n    container,\n    scale,\n    interactive = true,\n    x,\n    y,\n    img,\n    selectedImg\n  }) {\n    super();\n    /**\n     * container\n     */\n    this.container = void 0;\n    /**\n     * anchor x\n     */\n    this.x = void 0;\n    /**\n     * anchor y\n     */\n    this.y = void 0;\n    /**\n     * anchor image\n     */\n    this.img = new Sprite();\n    /**\n     * anchor default style\n     */\n    this.texture = void 0;\n    /**\n     * anchor selected style\n     */\n    this.selectedTexture = void 0;\n    /**\n     * custom data\n     * @member {any}\n     */\n    this.data = void 0;\n    /**\n     * is anchor destroyed\n     */\n    this.destroyed = false;\n    /**\n     * view scale\n     */\n    this._viewScale = 1;\n    /**\n     * is selected\n     */\n    this._selected = false;\n    /**\n     * process pointer over\n     */\n    this._processPointerOver = () => {\n      this.img.cursor = Cursor.POINTER;\n      this.emit(EventAction.POINTER_OVER, this);\n    };\n    /**\n     * process pointer out\n     */\n    this._processPointerOut = () => {\n      this.img.cursor = Cursor.DEFAULT;\n      this.emit(EventAction.POINTER_OUT, this);\n    };\n    /**\n     * process pointer down\n     * @param event\n     */\n    this._processPointerDown = event => {\n      if (event.data.button === 2) {\n        return;\n      }\n      event.stopPropagation();\n      this.selected = true;\n      this.emit(EventAction.SELECTED, this);\n    };\n    this.container = container;\n    if (scale !== undefined) {\n      this._viewScale = scale;\n    }\n    this.interactive = interactive;\n    this.x = x;\n    this.y = y;\n    this.img.zIndex = 10000;\n    this.container.addChild(this.img);\n\n    // add listeners\n    this.img.on('pointerover', this._processPointerOver);\n    this.img.on('pointerout', this._processPointerOut);\n    this.img.on('pointerdown', this._processPointerDown);\n    this.setImage(img, selectedImg);\n  }\n\n  /**\n   * set anchor texture\n   * @param texture\n   */\n  setTexture(texture) {\n    if (texture) {\n      this.img.texture = texture;\n      // update position\n      this.setPosition(this.x, this.y);\n      // update scale\n      this.setScale(this._viewScale);\n    }\n  }\n\n  /**\n   * set anchor position\n   * @param x\n   * @param y\n   */\n  setPosition(x, y) {\n    this.x = x;\n    this.y = y;\n    const {\n      width,\n      height\n    } = this.img;\n    this.img.position.set(x - width / 2, y - height); // target to the center botoom anchor\n  }\n\n  /**\n   * set anchor scale\n   * @param viewScale\n   */\n  setScale(viewScale) {\n    this._viewScale = viewScale;\n    this.img.scale.set(1 / this._viewScale);\n    this.setPosition(this.x, this.y);\n  }\n\n  /**\n   * set image\n   * @param img\n   * @param selectedImg\n   */\n  setImage(img, selectedImg) {\n    Promise.all([Texture.fromURL(img), Texture.fromURL(selectedImg)]).then(resources => {\n      if (!this.destroyed) {\n        this.texture = resources[0];\n        this.selectedTexture = resources[1];\n        this.setTexture(this.selected ? this.selectedTexture : this.texture);\n      }\n    });\n  }\n\n  /**\n   * destroy\n   */\n  destroy() {\n    Object.values(EventAction).forEach(action => {\n      this.off(action);\n    });\n    this.container.removeChild(this.img);\n    this.img.destroy();\n    // remove data\n    if (this.data) {\n      this.data = undefined;\n    }\n    this.destroyed = true;\n  }\n}","map":{"version":3,"names":["EventEmitter","Texture","Sprite","Cursor","EventAction","Anchor","selected","_selected","destroyed","shouldUpdate","index","container","getChildIndex","img","count","children","length","addChildAt","selectedTexture","texture","visible","interactive","constructor","scale","x","y","selectedImg","data","_viewScale","_processPointerOver","cursor","POINTER","emit","POINTER_OVER","_processPointerOut","DEFAULT","POINTER_OUT","_processPointerDown","event","button","stopPropagation","SELECTED","undefined","zIndex","addChild","on","setImage","setTexture","setPosition","setScale","width","height","position","set","viewScale","Promise","all","fromURL","then","resources","destroy","Object","values","forEach","action","off","removeChild"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/common/shapes/anchors/Anchor.ts"],"sourcesContent":["import { EventEmitter } from 'eventemitter3';\nimport { Container, Texture, Sprite, InteractionEvent } from 'pixi.js';\nimport Cursor from '../../Cursor';\n\nexport enum EventAction {\n  SELECTED = 'selected',\n  POINTER_OVER = 'pointer-over',\n  POINTER_OUT = 'pointer-out',\n}\n\nexport interface AnchorOptions {\n  container: Container;\n  scale?: number;\n  interactive?: boolean;\n  x: number;\n  y: number;\n  img: string;\n  selectedImg: string;\n}\n\n/**\n * anchor\n * @class\n */\nexport default class Anchor extends EventEmitter {\n  /**\n   * container\n   */\n  container: Container;\n\n  /**\n   * anchor x\n   */\n  x: number;\n\n  /**\n   * anchor y\n   */\n  y: number;\n\n  /**\n   * anchor image\n   */\n  img = new Sprite();\n\n  /**\n   * anchor default style\n   */\n  texture?: Texture;\n\n  /**\n   * anchor selected style\n   */\n  selectedTexture?: Texture;\n\n  /**\n   * custom data\n   * @member {any}\n   */\n  data: any;\n\n  /**\n   * is anchor destroyed\n   */\n  destroyed = false;\n\n  /**\n   * view scale\n   */\n  private _viewScale = 1;\n\n  /**\n   * is selected\n   */\n  private _selected = false;\n\n  /**\n   * get selected\n   * @getter\n   */\n  get selected() {\n    return this._selected;\n  }\n\n  /**\n   * set selected\n   * @setter\n   */\n  set selected(selected: boolean) {\n    if (this.destroyed) {\n      return;\n    }\n    const shouldUpdate = this._selected !== selected;\n    this._selected = selected;\n    const index = this.container.getChildIndex(this.img);\n    const count = this.container.children.length;\n    if (index !== count - 1) {\n      this.container.addChildAt(this.img, count - 1); // move to front\n    }\n    if (shouldUpdate && this.selectedTexture && this.texture) {\n      this.img.texture = selected ? this.selectedTexture : this.texture;\n    }\n  }\n\n  /**\n   * get visible\n   * @getter\n   */\n  get visible() {\n    return this.img.visible;\n  }\n\n  /**\n   * set visible\n   * @setter\n   */\n  set visible(visible: boolean) {\n    this.img.visible = visible;\n  }\n\n  /**\n   * get interactive\n   * @getter\n   */\n  get interactive() {\n    return this.img.interactive;\n  }\n\n  /**\n   * set interactive\n   * @setter\n   */\n  set interactive(interactive: boolean) {\n    this.img.interactive = interactive;\n  }\n\n  constructor({ container, scale, interactive = true, x, y, img, selectedImg }: AnchorOptions) {\n    super();\n\n    this.container = container;\n    if (scale !== undefined) {\n      this._viewScale = scale;\n    }\n    this.interactive = interactive;\n\n    this.x = x;\n    this.y = y;\n    this.img.zIndex = 10000;\n    this.container.addChild(this.img);\n\n    // add listeners\n    this.img.on('pointerover', this._processPointerOver);\n    this.img.on('pointerout', this._processPointerOut);\n    this.img.on('pointerdown', this._processPointerDown);\n\n    this.setImage(img, selectedImg);\n  }\n\n  /**\n   * set anchor texture\n   * @param texture\n   */\n  setTexture(texture?: Texture) {\n    if (texture) {\n      this.img.texture = texture;\n      // update position\n      this.setPosition(this.x, this.y);\n      // update scale\n      this.setScale(this._viewScale);\n    }\n  }\n\n  /**\n   * set anchor position\n   * @param x\n   * @param y\n   */\n  setPosition(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n    const { width, height } = this.img;\n    this.img.position.set(x - width / 2, y - height); // target to the center botoom anchor\n  }\n\n  /**\n   * set anchor scale\n   * @param viewScale\n   */\n  setScale(viewScale: number) {\n    this._viewScale = viewScale;\n    this.img.scale.set(1 / this._viewScale);\n    this.setPosition(this.x, this.y);\n  }\n\n  /**\n   * set image\n   * @param img\n   * @param selectedImg\n   */\n  setImage(img: string, selectedImg: string) {\n    Promise.all([\n      Texture.fromURL(img),\n      Texture.fromURL(selectedImg),\n    ]).then((resources) => {\n      if (!this.destroyed) {\n        this.texture = resources[0];\n        this.selectedTexture = resources[1];\n        this.setTexture(this.selected ? this.selectedTexture : this.texture);\n      }\n    });\n  }\n\n  /**\n   * destroy\n   */\n  destroy() {\n    Object.values(EventAction).forEach((action) => {\n      this.off(action);\n    });\n    this.container.removeChild(this.img);\n    this.img.destroy();\n    // remove data\n    if (this.data) {\n      this.data = undefined;\n    }\n    this.destroyed = true;\n  }\n\n  /**\n   * process pointer over\n   */\n  private _processPointerOver = () => {\n    this.img.cursor = Cursor.POINTER;\n    this.emit(EventAction.POINTER_OVER, this);\n  };\n\n  /**\n   * process pointer out\n   */\n  private _processPointerOut = () => {\n    this.img.cursor = Cursor.DEFAULT;\n    this.emit(EventAction.POINTER_OUT, this);\n  };\n\n  /**\n   * process pointer down\n   * @param event\n   */\n  private _processPointerDown = (event: InteractionEvent) => {\n    if (event.data.button === 2) {\n      return;\n    }\n\n    event.stopPropagation();\n    this.selected = true;\n    this.emit(EventAction.SELECTED, this);\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}