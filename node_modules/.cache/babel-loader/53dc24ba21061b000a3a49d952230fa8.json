{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/AudioComp/AudioComp.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { backwardCurrentVideo, debug, forwardCurrentVideo, getAudioContainer, getWavesurfers, pauseCurrentVideo, playCurrentVideo, setVideoZoom } from '../../redux/action';\nimport PlaySettingRadio from './PlaySettingRadio/PlaySettingRadio';\nimport PlaySettingButtons from './PlaySettingButtons/PlaySettingButtons';\nimport './AudioComp.scss';\nimport PlaySettingInput from './PlaySettingInput/PlaySettingInput';\nimport PlaySettingSegment, { MoveType } from './PlaySettingSegment/PlaySettingSegment';\nimport WavesurferComp from '../WavesurferComp/WavesurferComp';\nimport DragWavesurferComp from '../WavesurferComp/DragWavesurferComp';\nimport { isInput } from '../../redux/reducer/segmentController';\nimport { SegmentMode } from '../../constants';\nimport { isAnnotationReadonly } from '../../../../utils/tool-mode';\nimport XScroll from '../XScroll';\nclass AudioComp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.xScroller = null;\n    this.scrolls = {};\n    this.getCurrentWaveDom = () => {\n      var _wavesurfers$containe, _wavesurfers$containe2;\n      const {\n        currentVideo,\n        wavesurfers\n      } = this.props;\n      let waveDom;\n      const waveformContainer = wavesurfers === null || wavesurfers === void 0 ? void 0 : (_wavesurfers$containe = wavesurfers.container) === null || _wavesurfers$containe === void 0 ? void 0 : (_wavesurfers$containe2 = _wavesurfers$containe.audioContainer) === null || _wavesurfers$containe2 === void 0 ? void 0 : _wavesurfers$containe2[currentVideo];\n      if (waveformContainer) {\n        waveDom = waveformContainer.getElementsByTagName('wave')[0];\n      }\n      return waveDom;\n    };\n    this.handleScroll = start => {\n      const waveDom = this.getCurrentWaveDom();\n      if (waveDom) {\n        const {\n          precent = 1\n        } = this.scrolls[this.props.currentVideo] || {};\n        waveDom.scroll(start * waveDom.scrollWidth, 0);\n        this.scrolls[this.props.currentVideo] = {\n          start,\n          end: start + precent,\n          precent\n        };\n      }\n    };\n    this.setXScroll = () => {\n      let timer = setTimeout(() => {\n        clearTimeout(timer);\n        timer = null;\n        const waveDom = this.getCurrentWaveDom();\n        if (waveDom) {\n          var _this$xScroller;\n          const {\n            clientWidth,\n            scrollWidth,\n            scrollLeft\n          } = waveDom;\n          const viewPrecent = clientWidth / scrollWidth;\n          const start = scrollLeft / scrollWidth;\n          const end = start + viewPrecent;\n          this.scrolls[this.props.currentVideo] = {\n            start,\n            end,\n            precent: viewPrecent\n          };\n          (_this$xScroller = this.xScroller) === null || _this$xScroller === void 0 ? void 0 : _this$xScroller.setScroll({\n            start,\n            end\n          });\n        }\n      }, 0);\n    };\n    this.playSettingRef = React.createRef();\n    this.wavesurferRef = React.createRef();\n    this.xScrollerRef = React.createRef();\n  }\n  componentDidMount() {\n    const waveform = document.getElementsByClassName('audio-waveform');\n    const timeline = document.getElementsByClassName('audio-waveform-timeline');\n    const audioContainer = document.getElementsByClassName('audio-waveform-container');\n    const minimap = document.getElementsByClassName('audio-waveform-minimap');\n    this.props.getAudioContainer({\n      waveform,\n      timeline,\n      audioContainer,\n      minimap\n    });\n    window.addEventListener('keydown', e => this.handleKeyDown(e));\n    this.waveformComp.addEventListener('wheel', e => this.handleMouseWheel(e));\n    if (this.xScrollerRef.current) {\n      this.xScroller = new XScroll({\n        container: this.xScrollerRef.current,\n        height: 20,\n        barColor: '#5a5860',\n        trackStyle: {\n          color: '#000000',\n          padding: '2px'\n        },\n        onScroll: this.handleScroll\n      });\n    }\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.currentVideo !== prevProps.currentVideo) {\n      this.initXScroll();\n    }\n  }\n  initXScroll() {\n    if (this.xScroller) {\n      var _this$xScroller2;\n      const {\n        precent = 1\n      } = this.scrolls[this.props.currentVideo] || {};\n      this.scrolls[this.props.currentVideo] = {\n        start: 0,\n        end: precent,\n        precent\n      };\n      (_this$xScroller2 = this.xScroller) === null || _this$xScroller2 === void 0 ? void 0 : _this$xScroller2.setScroll({\n        start: 0,\n        end: precent\n      });\n    }\n  }\n  handleMouseWheel(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const {\n      currentVideo\n    } = this.props;\n    const {\n      zoom\n    } = this.props.videos[currentVideo];\n    let delta = 1;\n    if (zoom > 200) {\n      delta = 30;\n    } else if (zoom > 150) {\n      delta = 20;\n    } else if (zoom > 80) {\n      delta = 8;\n    } else if (zoom > 50) {\n      delta = 5;\n    } else if (zoom > 20) {\n      delta = 2;\n    }\n    if (e.deltaY < 0) {\n      this.props.setVideoZoom({\n        zoom: zoom + delta\n      });\n    } else if (e.deltaY > 0) {\n      this.props.setVideoZoom({\n        zoom: zoom - delta\n      });\n    }\n  }\n  handleKeyDown(e) {\n    if (window.disableLongAudioHotKeys) return;\n    if (isInput()) return;\n    const {\n      isPlaying\n    } = this.props;\n    if (e.keyCode === 32) {\n      // space\n      e.preventDefault();\n      if (isPlaying) this.props.pauseCurrentVideo();else this.props.playCurrentVideo();\n    } else if (e.keyCode === 37) {\n      // left\n      e.preventDefault();\n      if (e.shiftKey) {\n        var _this$playSettingRef$;\n        (_this$playSettingRef$ = this.playSettingRef.current) === null || _this$playSettingRef$ === void 0 ? void 0 : _this$playSettingRef$.moveStart(MoveType.MINUS);\n      } else if (e.ctrlKey || e.metaKey) {\n        var _this$playSettingRef$2;\n        (_this$playSettingRef$2 = this.playSettingRef.current) === null || _this$playSettingRef$2 === void 0 ? void 0 : _this$playSettingRef$2.moveEnd(MoveType.MINUS);\n      } else {\n        this.props.backwardCurrentVideo();\n      }\n    } else if (e.keyCode === 39) {\n      // right\n      e.preventDefault();\n      if (e.shiftKey) {\n        var _this$playSettingRef$3;\n        (_this$playSettingRef$3 = this.playSettingRef.current) === null || _this$playSettingRef$3 === void 0 ? void 0 : _this$playSettingRef$3.moveStart(MoveType.PLUS);\n      } else if (e.ctrlKey || e.metaKey) {\n        var _this$playSettingRef$4;\n        (_this$playSettingRef$4 = this.playSettingRef.current) === null || _this$playSettingRef$4 === void 0 ? void 0 : _this$playSettingRef$4.moveEnd(MoveType.PLUS);\n      } else {\n        this.props.forwardCurrentVideo();\n      }\n    }\n  }\n  clearAll() {\n    var _this$wavesurferRef$c;\n    (_this$wavesurferRef$c = this.wavesurferRef.current) === null || _this$wavesurferRef$c === void 0 ? void 0 : _this$wavesurferRef$c.clearAll();\n  }\n  renderSegments() {\n    var _this$wavesurferRef$c2;\n    (_this$wavesurferRef$c2 = this.wavesurferRef.current) === null || _this$wavesurferRef$c2 === void 0 ? void 0 : _this$wavesurferRef$c2.renderSegments();\n  }\n  render() {\n    const {\n      currentVideo,\n      setCurrentSegment,\n      segmentMode\n    } = this.props;\n    const readonly = isAnnotationReadonly(this.props.toolMode);\n    return (\n      /*#__PURE__*/\n      // eslint-disable-next-line react/jsx-filename-extension\n      React.createElement(\"div\", {\n        className: \"audio-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 7\n        }\n      }, segmentMode === SegmentMode.individual ? /*#__PURE__*/React.createElement(DragWavesurferComp, {\n        ref: this.wavesurferRef,\n        setCurrentSegment: setCurrentSegment,\n        setXScroll: this.setXScroll,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }\n      }) : /*#__PURE__*/React.createElement(WavesurferComp, {\n        ref: this.wavesurferRef,\n        setCurrentSegment: setCurrentSegment,\n        setXScroll: this.setXScroll,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        ref: r => {\n          this.waveformComp = r;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 9\n        }\n      }, this.props.videos.map((value, index) => /*#__PURE__*/React.createElement(\"div\", {\n        key: value.url,\n        className: `audio-waveform-container ${currentVideo === index ? 'audio-waveform-container-current' : null}`,\n        style: {\n          visibility: this.props.currentVideo === index ? 'visible' : 'hidden'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"audio-waveform\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"audio-waveform-timeline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"audio-waveform-minimap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"waveform-scroll-x\",\n        ref: this.xScrollerRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"audio-button-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(PlaySettingInput, {\n        className: \"play-setting-buttons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(PlaySettingRadio, {\n        className: \"play-setting-radio\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(PlaySettingButtons, {\n        className: \"play-setting-input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }\n      }), segmentMode === SegmentMode.individual && !readonly && /*#__PURE__*/React.createElement(PlaySettingSegment, {\n        playSettingRef: this.playSettingRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 67\n        }\n      })))\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  videos: state.videos,\n  results: state.results,\n  ontology: state.ontology,\n  currentZoom: state.currentZoom,\n  currentVideo: state.currentVideo,\n  currentPlayMode: state.currentPlayMode,\n  isPlaying: state.isPlaying,\n  segmentMode: state.segmentMode,\n  wavesurfers: state.wavesurfers,\n  toolMode: state.toolMode\n});\nconst mapDispatchToProps = {\n  getAudioContainer,\n  getWavesurfers,\n  debug,\n  playCurrentVideo,\n  pauseCurrentVideo,\n  forwardCurrentVideo,\n  backwardCurrentVideo,\n  setVideoZoom\n};\nexport default connect(mapStateToProps, mapDispatchToProps, null, {\n  forwardRef: true\n})(AudioComp);","map":{"version":3,"names":["React","connect","backwardCurrentVideo","debug","forwardCurrentVideo","getAudioContainer","getWavesurfers","pauseCurrentVideo","playCurrentVideo","setVideoZoom","PlaySettingRadio","PlaySettingButtons","PlaySettingInput","PlaySettingSegment","MoveType","WavesurferComp","DragWavesurferComp","isInput","SegmentMode","isAnnotationReadonly","XScroll","AudioComp","Component","constructor","props","xScroller","scrolls","getCurrentWaveDom","_wavesurfers$containe","_wavesurfers$containe2","currentVideo","wavesurfers","waveDom","waveformContainer","container","audioContainer","getElementsByTagName","handleScroll","start","precent","scroll","scrollWidth","end","setXScroll","timer","setTimeout","clearTimeout","_this$xScroller","clientWidth","scrollLeft","viewPrecent","setScroll","playSettingRef","createRef","wavesurferRef","xScrollerRef","componentDidMount","waveform","document","getElementsByClassName","timeline","minimap","window","addEventListener","e","handleKeyDown","waveformComp","handleMouseWheel","current","height","barColor","trackStyle","color","padding","onScroll","componentDidUpdate","prevProps","initXScroll","_this$xScroller2","preventDefault","stopPropagation","zoom","videos","delta","deltaY","disableLongAudioHotKeys","isPlaying","keyCode","shiftKey","_this$playSettingRef$","moveStart","MINUS","ctrlKey","metaKey","_this$playSettingRef$2","moveEnd","_this$playSettingRef$3","PLUS","_this$playSettingRef$4","clearAll","_this$wavesurferRef$c","renderSegments","_this$wavesurferRef$c2","render","setCurrentSegment","segmentMode","readonly","toolMode","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","individual","ref","r","map","value","index","key","url","style","visibility","mapStateToProps","state","results","ontology","currentZoom","currentPlayMode","mapDispatchToProps","forwardRef"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/AudioComp/AudioComp.jsx"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  backwardCurrentVideo,\n  debug,\n  forwardCurrentVideo,\n  getAudioContainer,\n  getWavesurfers,\n  pauseCurrentVideo,\n  playCurrentVideo, setVideoZoom,\n} from '../../redux/action';\nimport PlaySettingRadio from './PlaySettingRadio/PlaySettingRadio';\nimport PlaySettingButtons from './PlaySettingButtons/PlaySettingButtons';\nimport './AudioComp.scss';\nimport PlaySettingInput from './PlaySettingInput/PlaySettingInput';\nimport PlaySettingSegment, { MoveType } from './PlaySettingSegment/PlaySettingSegment';\nimport WavesurferComp from '../WavesurferComp/WavesurferComp';\nimport DragWavesurferComp from '../WavesurferComp/DragWavesurferComp';\nimport { isInput } from '../../redux/reducer/segmentController';\nimport { SegmentMode } from '../../constants';\nimport { isAnnotationReadonly } from '../../../../utils/tool-mode';\nimport XScroll from '../XScroll';\n\nclass AudioComp extends React.Component {\n  xScroller = null;\n\n  scrolls = {};\n\n  constructor(props) {\n    super(props);\n    this.playSettingRef = React.createRef();\n    this.wavesurferRef = React.createRef();\n    this.xScrollerRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const waveform = document.getElementsByClassName('audio-waveform');\n    const timeline = document.getElementsByClassName('audio-waveform-timeline');\n    const audioContainer = document.getElementsByClassName('audio-waveform-container');\n    const minimap = document.getElementsByClassName('audio-waveform-minimap');\n    this.props.getAudioContainer({ waveform, timeline, audioContainer, minimap });\n    window.addEventListener('keydown', (e) => this.handleKeyDown(e));\n    this.waveformComp.addEventListener('wheel', (e) => this.handleMouseWheel(e));\n    if (this.xScrollerRef.current) {\n      this.xScroller = new XScroll({\n        container: this.xScrollerRef.current,\n        height: 20,\n        barColor: '#5a5860',\n        trackStyle: {\n          color: '#000000',\n          padding: '2px',\n        },\n        onScroll: this.handleScroll\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.currentVideo !== prevProps.currentVideo) {\n      this.initXScroll();\n    }\n  }\n\n  getCurrentWaveDom = () => {\n    const { currentVideo, wavesurfers } = this.props;\n    let waveDom;\n    const waveformContainer = wavesurfers?.container?.audioContainer?.[currentVideo];\n    if (waveformContainer) {\n      waveDom = waveformContainer.getElementsByTagName('wave')[0];\n    }\n    return waveDom;\n  };\n\n  handleScroll = (start) => {\n    const waveDom = this.getCurrentWaveDom();\n    if (waveDom) {\n      const { precent = 1 } = this.scrolls[this.props.currentVideo] || {};\n      waveDom.scroll(start * waveDom.scrollWidth, 0);\n      this.scrolls[this.props.currentVideo] = { start, end: start + precent, precent };\n    }\n  };\n\n  initXScroll() {\n    if (this.xScroller) {\n      const { precent = 1 } = this.scrolls[this.props.currentVideo] || {};\n      this.scrolls[this.props.currentVideo] = { start: 0, end: precent, precent };\n      this.xScroller?.setScroll({ start: 0, end: precent });\n    }\n  }\n\n  setXScroll = () => {\n    let timer = setTimeout(() => {\n      clearTimeout(timer);\n      timer = null;\n      const waveDom = this.getCurrentWaveDom();\n      if (waveDom) {\n        const { clientWidth, scrollWidth, scrollLeft } = waveDom;\n        const viewPrecent = clientWidth / scrollWidth;\n        const start = scrollLeft / scrollWidth;\n        const end = start + viewPrecent;\n        this.scrolls[this.props.currentVideo] = { start, end, precent: viewPrecent };\n        this.xScroller?.setScroll({ start, end });\n      }\n    }, 0);\n  };\n\n  handleMouseWheel(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const { currentVideo } = this.props;\n    const { zoom } = this.props.videos[currentVideo];\n    let delta = 1;\n    if (zoom > 200) {\n      delta = 30;\n    } else if (zoom > 150) {\n      delta = 20;\n    } else if (zoom > 80) {\n      delta = 8;\n    } else if (zoom > 50) {\n      delta = 5;\n    } else if (zoom > 20) {\n      delta = 2;\n    }\n    if (e.deltaY < 0) {\n      this.props.setVideoZoom({ zoom: zoom + delta });\n    } else if (e.deltaY > 0) {\n      this.props.setVideoZoom({ zoom: zoom - delta });\n    }\n  }\n\n  handleKeyDown(e) {\n    if (window.disableLongAudioHotKeys) return;\n    if (isInput()) return;\n    const { isPlaying } = this.props;\n    if (e.keyCode === 32) { // space\n      e.preventDefault();\n      if (isPlaying) this.props.pauseCurrentVideo();\n      else this.props.playCurrentVideo();\n    } else if (e.keyCode === 37) { // left\n      e.preventDefault();\n      if (e.shiftKey) {\n        this.playSettingRef.current?.moveStart(MoveType.MINUS);\n      } else if (e.ctrlKey || e.metaKey) {\n        this.playSettingRef.current?.moveEnd(MoveType.MINUS);\n      } else {\n        this.props.backwardCurrentVideo();\n      }\n    } else if (e.keyCode === 39) { // right\n      e.preventDefault();\n      if (e.shiftKey) {\n        this.playSettingRef.current?.moveStart(MoveType.PLUS);\n      } else if (e.ctrlKey || e.metaKey) {\n        this.playSettingRef.current?.moveEnd(MoveType.PLUS);\n      } else {\n        this.props.forwardCurrentVideo();\n      }\n    }\n  }\n\n  clearAll() {\n    this.wavesurferRef.current?.clearAll();\n  }\n\n  renderSegments() {\n    this.wavesurferRef.current?.renderSegments();\n  }\n\n  render() {\n    const { currentVideo, setCurrentSegment, segmentMode } = this.props;\n    const readonly = isAnnotationReadonly(this.props.toolMode);\n    return (\n      // eslint-disable-next-line react/jsx-filename-extension\n      <div className=\"audio-container\">\n        {segmentMode === SegmentMode.individual ? (\n          <DragWavesurferComp ref={this.wavesurferRef} setCurrentSegment={setCurrentSegment} setXScroll={this.setXScroll} />\n        ) : (\n          <WavesurferComp ref={this.wavesurferRef} setCurrentSegment={setCurrentSegment} setXScroll={this.setXScroll} />\n        )}\n        <div ref={(r) => { this.waveformComp = r; }}>\n          {\n          this.props.videos.map((value, index) => (\n            <div\n              key={value.url}\n              className={`audio-waveform-container ${currentVideo === index ? 'audio-waveform-container-current' : null}`}\n              style={{ visibility: (this.props.currentVideo === index ? 'visible' : 'hidden') }}\n            >\n              <div className=\"audio-waveform\" />\n              <div className=\"audio-waveform-timeline\" />\n              <div className=\"audio-waveform-minimap\" />\n            </div>\n          ))\n        }\n        </div>\n        <div className=\"waveform-scroll-x\" ref={this.xScrollerRef} />\n        <div className=\"audio-button-group\">\n          <PlaySettingInput className=\"play-setting-buttons\" />\n          <PlaySettingRadio className=\"play-setting-radio\" />\n          <PlaySettingButtons className=\"play-setting-input\" />\n          {segmentMode === SegmentMode.individual && !readonly && <PlaySettingSegment playSettingRef={this.playSettingRef} />}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  videos: state.videos,\n  results: state.results,\n  ontology: state.ontology,\n  currentZoom: state.currentZoom,\n  currentVideo: state.currentVideo,\n  currentPlayMode: state.currentPlayMode,\n  isPlaying: state.isPlaying,\n  segmentMode: state.segmentMode,\n  wavesurfers: state.wavesurfers,\n  toolMode: state.toolMode,\n});\nconst mapDispatchToProps = {\n  getAudioContainer,\n  getWavesurfers,\n  debug,\n  playCurrentVideo,\n  pauseCurrentVideo,\n  forwardCurrentVideo,\n  backwardCurrentVideo,\n  setVideoZoom,\n};\nexport default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(AudioComp);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AACrC,SACEC,oBAAoB,EACpBC,KAAK,EACLC,mBAAmB,EACnBC,iBAAiB,EACjBC,cAAc,EACdC,iBAAiB,EACjBC,gBAAgB,EAAEC,YAAY,QACzB,oBAAoB;AAC3B,OAAOC,gBAAgB,MAAM,qCAAqC;AAClE,OAAOC,kBAAkB,MAAM,yCAAyC;AACxE,OAAO,kBAAkB;AACzB,OAAOC,gBAAgB,MAAM,qCAAqC;AAClE,OAAOC,kBAAkB,IAAIC,QAAQ,QAAQ,yCAAyC;AACtF,OAAOC,cAAc,MAAM,kCAAkC;AAC7D,OAAOC,kBAAkB,MAAM,sCAAsC;AACrE,SAASC,OAAO,QAAQ,uCAAuC;AAC/D,SAASC,WAAW,QAAQ,iBAAiB;AAC7C,SAASC,oBAAoB,QAAQ,6BAA6B;AAClE,OAAOC,OAAO,MAAM,YAAY;AAEhC,MAAMC,SAAS,SAASrB,KAAK,CAACsB,SAAS,CAAC;EAKtCC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KALfC,SAAS,GAAG,IAAI;IAAA,KAEhBC,OAAO,GAAG,CAAC,CAAC;IAAA,KAqCZC,iBAAiB,GAAG,MAAM;MAAA,IAAAC,qBAAA,EAAAC,sBAAA;MACxB,MAAM;QAAEC,YAAY;QAAEC;MAAY,CAAC,GAAG,IAAI,CAACP,KAAK;MAChD,IAAIQ,OAAO;MACX,MAAMC,iBAAiB,GAAGF,WAAW,aAAXA,WAAW,wBAAAH,qBAAA,GAAXG,WAAW,CAAEG,SAAS,cAAAN,qBAAA,wBAAAC,sBAAA,GAAtBD,qBAAA,CAAwBO,cAAc,cAAAN,sBAAA,uBAAtCA,sBAAA,CAAyCC,YAAY,CAAC;MAChF,IAAIG,iBAAiB,EAAE;QACrBD,OAAO,GAAGC,iBAAiB,CAACG,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;MAC7D;MACA,OAAOJ,OAAO;IAChB,CAAC;IAAA,KAEDK,YAAY,GAAIC,KAAK,IAAK;MACxB,MAAMN,OAAO,GAAG,IAAI,CAACL,iBAAiB,CAAC,CAAC;MACxC,IAAIK,OAAO,EAAE;QACX,MAAM;UAAEO,OAAO,GAAG;QAAE,CAAC,GAAG,IAAI,CAACb,OAAO,CAAC,IAAI,CAACF,KAAK,CAACM,YAAY,CAAC,IAAI,CAAC,CAAC;QACnEE,OAAO,CAACQ,MAAM,CAACF,KAAK,GAAGN,OAAO,CAACS,WAAW,EAAE,CAAC,CAAC;QAC9C,IAAI,CAACf,OAAO,CAAC,IAAI,CAACF,KAAK,CAACM,YAAY,CAAC,GAAG;UAAEQ,KAAK;UAAEI,GAAG,EAAEJ,KAAK,GAAGC,OAAO;UAAEA;QAAQ,CAAC;MAClF;IACF,CAAC;IAAA,KAUDI,UAAU,GAAG,MAAM;MACjB,IAAIC,KAAK,GAAGC,UAAU,CAAC,MAAM;QAC3BC,YAAY,CAACF,KAAK,CAAC;QACnBA,KAAK,GAAG,IAAI;QACZ,MAAMZ,OAAO,GAAG,IAAI,CAACL,iBAAiB,CAAC,CAAC;QACxC,IAAIK,OAAO,EAAE;UAAA,IAAAe,eAAA;UACX,MAAM;YAAEC,WAAW;YAAEP,WAAW;YAAEQ;UAAW,CAAC,GAAGjB,OAAO;UACxD,MAAMkB,WAAW,GAAGF,WAAW,GAAGP,WAAW;UAC7C,MAAMH,KAAK,GAAGW,UAAU,GAAGR,WAAW;UACtC,MAAMC,GAAG,GAAGJ,KAAK,GAAGY,WAAW;UAC/B,IAAI,CAACxB,OAAO,CAAC,IAAI,CAACF,KAAK,CAACM,YAAY,CAAC,GAAG;YAAEQ,KAAK;YAAEI,GAAG;YAAEH,OAAO,EAAEW;UAAY,CAAC;UAC5E,CAAAH,eAAA,OAAI,CAACtB,SAAS,cAAAsB,eAAA,uBAAdA,eAAA,CAAgBI,SAAS,CAAC;YAAEb,KAAK;YAAEI;UAAI,CAAC,CAAC;QAC3C;MACF,CAAC,EAAE,CAAC,CAAC;IACP,CAAC;IA1EC,IAAI,CAACU,cAAc,GAAGpD,KAAK,CAACqD,SAAS,CAAC,CAAC;IACvC,IAAI,CAACC,aAAa,GAAGtD,KAAK,CAACqD,SAAS,CAAC,CAAC;IACtC,IAAI,CAACE,YAAY,GAAGvD,KAAK,CAACqD,SAAS,CAAC,CAAC;EACvC;EAEAG,iBAAiBA,CAAA,EAAG;IAClB,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,sBAAsB,CAAC,gBAAgB,CAAC;IAClE,MAAMC,QAAQ,GAAGF,QAAQ,CAACC,sBAAsB,CAAC,yBAAyB,CAAC;IAC3E,MAAMxB,cAAc,GAAGuB,QAAQ,CAACC,sBAAsB,CAAC,0BAA0B,CAAC;IAClF,MAAME,OAAO,GAAGH,QAAQ,CAACC,sBAAsB,CAAC,wBAAwB,CAAC;IACzE,IAAI,CAACnC,KAAK,CAACnB,iBAAiB,CAAC;MAAEoD,QAAQ;MAAEG,QAAQ;MAAEzB,cAAc;MAAE0B;IAAQ,CAAC,CAAC;IAC7EC,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAGC,CAAC,IAAK,IAAI,CAACC,aAAa,CAACD,CAAC,CAAC,CAAC;IAChE,IAAI,CAACE,YAAY,CAACH,gBAAgB,CAAC,OAAO,EAAGC,CAAC,IAAK,IAAI,CAACG,gBAAgB,CAACH,CAAC,CAAC,CAAC;IAC5E,IAAI,IAAI,CAACT,YAAY,CAACa,OAAO,EAAE;MAC7B,IAAI,CAAC3C,SAAS,GAAG,IAAIL,OAAO,CAAC;QAC3Bc,SAAS,EAAE,IAAI,CAACqB,YAAY,CAACa,OAAO;QACpCC,MAAM,EAAE,EAAE;QACVC,QAAQ,EAAE,SAAS;QACnBC,UAAU,EAAE;UACVC,KAAK,EAAE,SAAS;UAChBC,OAAO,EAAE;QACX,CAAC;QACDC,QAAQ,EAAE,IAAI,CAACrC;MACjB,CAAC,CAAC;IACJ;EACF;EAEAsC,kBAAkBA,CAACC,SAAS,EAAE;IAC5B,IAAI,IAAI,CAACpD,KAAK,CAACM,YAAY,KAAK8C,SAAS,CAAC9C,YAAY,EAAE;MACtD,IAAI,CAAC+C,WAAW,CAAC,CAAC;IACpB;EACF;EAqBAA,WAAWA,CAAA,EAAG;IACZ,IAAI,IAAI,CAACpD,SAAS,EAAE;MAAA,IAAAqD,gBAAA;MAClB,MAAM;QAAEvC,OAAO,GAAG;MAAE,CAAC,GAAG,IAAI,CAACb,OAAO,CAAC,IAAI,CAACF,KAAK,CAACM,YAAY,CAAC,IAAI,CAAC,CAAC;MACnE,IAAI,CAACJ,OAAO,CAAC,IAAI,CAACF,KAAK,CAACM,YAAY,CAAC,GAAG;QAAEQ,KAAK,EAAE,CAAC;QAAEI,GAAG,EAAEH,OAAO;QAAEA;MAAQ,CAAC;MAC3E,CAAAuC,gBAAA,OAAI,CAACrD,SAAS,cAAAqD,gBAAA,uBAAdA,gBAAA,CAAgB3B,SAAS,CAAC;QAAEb,KAAK,EAAE,CAAC;QAAEI,GAAG,EAAEH;MAAQ,CAAC,CAAC;IACvD;EACF;EAkBA4B,gBAAgBA,CAACH,CAAC,EAAE;IAClBA,CAAC,CAACe,cAAc,CAAC,CAAC;IAClBf,CAAC,CAACgB,eAAe,CAAC,CAAC;IACnB,MAAM;MAAElD;IAAa,CAAC,GAAG,IAAI,CAACN,KAAK;IACnC,MAAM;MAAEyD;IAAK,CAAC,GAAG,IAAI,CAACzD,KAAK,CAAC0D,MAAM,CAACpD,YAAY,CAAC;IAChD,IAAIqD,KAAK,GAAG,CAAC;IACb,IAAIF,IAAI,GAAG,GAAG,EAAE;MACdE,KAAK,GAAG,EAAE;IACZ,CAAC,MAAM,IAAIF,IAAI,GAAG,GAAG,EAAE;MACrBE,KAAK,GAAG,EAAE;IACZ,CAAC,MAAM,IAAIF,IAAI,GAAG,EAAE,EAAE;MACpBE,KAAK,GAAG,CAAC;IACX,CAAC,MAAM,IAAIF,IAAI,GAAG,EAAE,EAAE;MACpBE,KAAK,GAAG,CAAC;IACX,CAAC,MAAM,IAAIF,IAAI,GAAG,EAAE,EAAE;MACpBE,KAAK,GAAG,CAAC;IACX;IACA,IAAInB,CAAC,CAACoB,MAAM,GAAG,CAAC,EAAE;MAChB,IAAI,CAAC5D,KAAK,CAACf,YAAY,CAAC;QAAEwE,IAAI,EAAEA,IAAI,GAAGE;MAAM,CAAC,CAAC;IACjD,CAAC,MAAM,IAAInB,CAAC,CAACoB,MAAM,GAAG,CAAC,EAAE;MACvB,IAAI,CAAC5D,KAAK,CAACf,YAAY,CAAC;QAAEwE,IAAI,EAAEA,IAAI,GAAGE;MAAM,CAAC,CAAC;IACjD;EACF;EAEAlB,aAAaA,CAACD,CAAC,EAAE;IACf,IAAIF,MAAM,CAACuB,uBAAuB,EAAE;IACpC,IAAIpE,OAAO,CAAC,CAAC,EAAE;IACf,MAAM;MAAEqE;IAAU,CAAC,GAAG,IAAI,CAAC9D,KAAK;IAChC,IAAIwC,CAAC,CAACuB,OAAO,KAAK,EAAE,EAAE;MAAE;MACtBvB,CAAC,CAACe,cAAc,CAAC,CAAC;MAClB,IAAIO,SAAS,EAAE,IAAI,CAAC9D,KAAK,CAACjB,iBAAiB,CAAC,CAAC,CAAC,KACzC,IAAI,CAACiB,KAAK,CAAChB,gBAAgB,CAAC,CAAC;IACpC,CAAC,MAAM,IAAIwD,CAAC,CAACuB,OAAO,KAAK,EAAE,EAAE;MAAE;MAC7BvB,CAAC,CAACe,cAAc,CAAC,CAAC;MAClB,IAAIf,CAAC,CAACwB,QAAQ,EAAE;QAAA,IAAAC,qBAAA;QACd,CAAAA,qBAAA,OAAI,CAACrC,cAAc,CAACgB,OAAO,cAAAqB,qBAAA,uBAA3BA,qBAAA,CAA6BC,SAAS,CAAC5E,QAAQ,CAAC6E,KAAK,CAAC;MACxD,CAAC,MAAM,IAAI3B,CAAC,CAAC4B,OAAO,IAAI5B,CAAC,CAAC6B,OAAO,EAAE;QAAA,IAAAC,sBAAA;QACjC,CAAAA,sBAAA,OAAI,CAAC1C,cAAc,CAACgB,OAAO,cAAA0B,sBAAA,uBAA3BA,sBAAA,CAA6BC,OAAO,CAACjF,QAAQ,CAAC6E,KAAK,CAAC;MACtD,CAAC,MAAM;QACL,IAAI,CAACnE,KAAK,CAACtB,oBAAoB,CAAC,CAAC;MACnC;IACF,CAAC,MAAM,IAAI8D,CAAC,CAACuB,OAAO,KAAK,EAAE,EAAE;MAAE;MAC7BvB,CAAC,CAACe,cAAc,CAAC,CAAC;MAClB,IAAIf,CAAC,CAACwB,QAAQ,EAAE;QAAA,IAAAQ,sBAAA;QACd,CAAAA,sBAAA,OAAI,CAAC5C,cAAc,CAACgB,OAAO,cAAA4B,sBAAA,uBAA3BA,sBAAA,CAA6BN,SAAS,CAAC5E,QAAQ,CAACmF,IAAI,CAAC;MACvD,CAAC,MAAM,IAAIjC,CAAC,CAAC4B,OAAO,IAAI5B,CAAC,CAAC6B,OAAO,EAAE;QAAA,IAAAK,sBAAA;QACjC,CAAAA,sBAAA,OAAI,CAAC9C,cAAc,CAACgB,OAAO,cAAA8B,sBAAA,uBAA3BA,sBAAA,CAA6BH,OAAO,CAACjF,QAAQ,CAACmF,IAAI,CAAC;MACrD,CAAC,MAAM;QACL,IAAI,CAACzE,KAAK,CAACpB,mBAAmB,CAAC,CAAC;MAClC;IACF;EACF;EAEA+F,QAAQA,CAAA,EAAG;IAAA,IAAAC,qBAAA;IACT,CAAAA,qBAAA,OAAI,CAAC9C,aAAa,CAACc,OAAO,cAAAgC,qBAAA,uBAA1BA,qBAAA,CAA4BD,QAAQ,CAAC,CAAC;EACxC;EAEAE,cAAcA,CAAA,EAAG;IAAA,IAAAC,sBAAA;IACf,CAAAA,sBAAA,OAAI,CAAChD,aAAa,CAACc,OAAO,cAAAkC,sBAAA,uBAA1BA,sBAAA,CAA4BD,cAAc,CAAC,CAAC;EAC9C;EAEAE,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEzE,YAAY;MAAE0E,iBAAiB;MAAEC;IAAY,CAAC,GAAG,IAAI,CAACjF,KAAK;IACnE,MAAMkF,QAAQ,GAAGvF,oBAAoB,CAAC,IAAI,CAACK,KAAK,CAACmF,QAAQ,CAAC;IAC1D;MAAA;MACE;MACA3G,KAAA,CAAA4G,aAAA;QAAKC,SAAS,EAAC,iBAAiB;QAAAC,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GAC7BV,WAAW,KAAKvF,WAAW,CAACkG,UAAU,gBACrCpH,KAAA,CAAA4G,aAAA,CAAC5F,kBAAkB;QAACqG,GAAG,EAAE,IAAI,CAAC/D,aAAc;QAACkD,iBAAiB,EAAEA,iBAAkB;QAAC7D,UAAU,EAAE,IAAI,CAACA,UAAW;QAAAmE,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAE,CAAC,gBAElHnH,KAAA,CAAA4G,aAAA,CAAC7F,cAAc;QAACsG,GAAG,EAAE,IAAI,CAAC/D,aAAc;QAACkD,iBAAiB,EAAEA,iBAAkB;QAAC7D,UAAU,EAAE,IAAI,CAACA,UAAW;QAAAmE,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAE,CAC9G,eACDnH,KAAA,CAAA4G,aAAA;QAAKS,GAAG,EAAGC,CAAC,IAAK;UAAE,IAAI,CAACpD,YAAY,GAAGoD,CAAC;QAAE,CAAE;QAAAR,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GAE1C,IAAI,CAAC3F,KAAK,CAAC0D,MAAM,CAACqC,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACjCzH,KAAA,CAAA4G,aAAA;QACEc,GAAG,EAAEF,KAAK,CAACG,GAAI;QACfd,SAAS,EAAG,4BAA2B/E,YAAY,KAAK2F,KAAK,GAAG,kCAAkC,GAAG,IAAK,EAAE;QAC5GG,KAAK,EAAE;UAAEC,UAAU,EAAG,IAAI,CAACrG,KAAK,CAACM,YAAY,KAAK2F,KAAK,GAAG,SAAS,GAAG;QAAU,CAAE;QAAAX,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBAElFnH,KAAA,CAAA4G,aAAA;QAAKC,SAAS,EAAC,gBAAgB;QAAAC,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAE,CAAC,eAClCnH,KAAA,CAAA4G,aAAA;QAAKC,SAAS,EAAC,yBAAyB;QAAAC,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAE,CAAC,eAC3CnH,KAAA,CAAA4G,aAAA;QAAKC,SAAS,EAAC,wBAAwB;QAAAC,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAE,CACtC,CACN,CAEE,CAAC,eACNnH,KAAA,CAAA4G,aAAA;QAAKC,SAAS,EAAC,mBAAmB;QAACQ,GAAG,EAAE,IAAI,CAAC9D,YAAa;QAAAuD,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAE,CAAC,eAC7DnH,KAAA,CAAA4G,aAAA;QAAKC,SAAS,EAAC,oBAAoB;QAAAC,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBACjCnH,KAAA,CAAA4G,aAAA,CAAChG,gBAAgB;QAACiG,SAAS,EAAC,sBAAsB;QAAAC,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAE,CAAC,eACrDnH,KAAA,CAAA4G,aAAA,CAAClG,gBAAgB;QAACmG,SAAS,EAAC,oBAAoB;QAAAC,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAE,CAAC,eACnDnH,KAAA,CAAA4G,aAAA,CAACjG,kBAAkB;QAACkG,SAAS,EAAC,oBAAoB;QAAAC,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAE,CAAC,EACpDV,WAAW,KAAKvF,WAAW,CAACkG,UAAU,IAAI,CAACV,QAAQ,iBAAI1G,KAAA,CAAA4G,aAAA,CAAC/F,kBAAkB;QAACuC,cAAc,EAAE,IAAI,CAACA,cAAe;QAAA0D,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAE,CAC/G,CACF;IAAC;EAEV;AACF;AAEA,MAAMW,eAAe,GAAIC,KAAK,KAAM;EAClC7C,MAAM,EAAE6C,KAAK,CAAC7C,MAAM;EACpB8C,OAAO,EAAED,KAAK,CAACC,OAAO;EACtBC,QAAQ,EAAEF,KAAK,CAACE,QAAQ;EACxBC,WAAW,EAAEH,KAAK,CAACG,WAAW;EAC9BpG,YAAY,EAAEiG,KAAK,CAACjG,YAAY;EAChCqG,eAAe,EAAEJ,KAAK,CAACI,eAAe;EACtC7C,SAAS,EAAEyC,KAAK,CAACzC,SAAS;EAC1BmB,WAAW,EAAEsB,KAAK,CAACtB,WAAW;EAC9B1E,WAAW,EAAEgG,KAAK,CAAChG,WAAW;EAC9B4E,QAAQ,EAAEoB,KAAK,CAACpB;AAClB,CAAC,CAAC;AACF,MAAMyB,kBAAkB,GAAG;EACzB/H,iBAAiB;EACjBC,cAAc;EACdH,KAAK;EACLK,gBAAgB;EAChBD,iBAAiB;EACjBH,mBAAmB;EACnBF,oBAAoB;EACpBO;AACF,CAAC;AACD,eAAeR,OAAO,CAAC6H,eAAe,EAAEM,kBAAkB,EAAE,IAAI,EAAE;EAAEC,UAAU,EAAE;AAAK,CAAC,CAAC,CAAChH,SAAS,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}