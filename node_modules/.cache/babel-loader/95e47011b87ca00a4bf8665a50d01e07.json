{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking2/components/cameras/CamerasContainer.tsx\";\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { reaction, makeObservable, observable, action } from 'mobx';\nimport { Point, Texture, utils } from 'pixi.js';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport imageLoader from 'blueimp-load-image';\nimport OperationNavigator from '../toolbar/OperationNavigator';\nimport Assistant from '../../../common/shapes/assists/Assistant';\nimport store from '../../store/RootStore';\nimport i18n from '../../locales';\nimport { NAVIGATOR_HEIGHT, CAMERA_VIEW, CAMERA_VIEW_LABELS } from '../../constants';\nimport './CamerasContainer.scss';\nclass CamerasContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    /**\n     * canvas dom container\n     */\n    this.container = React.createRef();\n    /**\n     * cameras dom container\n     */\n    this.camerasContainer = React.createRef();\n    /**\n     * cancellable image loader\n     */\n    this.cancellableLoaders = [];\n    /**\n     * loaded count for current frame\n     */\n    this.loadedCount = 0;\n    /**\n     * reactions\n     */\n    this.reactionDisposers = [];\n    /**\n     * mouse position\n     */\n    this.mousePosition = {\n      x: -1,\n      y: -1\n    };\n    /**\n     * image load errors\n     */\n    this.imageLoadErrors = {};\n    /**\n     * update mouse position\n     * @param e\n     */\n    this.updateMousePosition = e => {\n      const {\n        clientX,\n        clientY\n      } = e;\n      this.mousePosition = {\n        x: clientX,\n        y: clientY\n      };\n    };\n    /**\n     * resize\n     */\n    this.resize = () => {\n      const {\n        width,\n        height\n      } = this.getContainerSize();\n      this.props.app.renderer.resize(width, height);\n      this.props.app.render();\n\n      // update camera views\n      Object.values(store.frame.cameraViews).forEach((cameraView, i) => {\n        this.updateCameraBounds(cameraView, i);\n        if (store.fullscreenRequested) {\n          cameraView.fitImageToView();\n        }\n      });\n\n      // delay to set to false to wait fullscreen finish\n      setTimeout(() => {\n        store.fullscreenRequested = false;\n      }, 0);\n    };\n    /**\n     * on resource loaded\n     * @param name\n     * @param index\n     * @param url\n     * @param data\n     */\n    this.onLoaded = (name, index, url, data) => {\n      const error = data instanceof Event && data.type === 'error';\n      const cameraView = store.frame.cameraViews[name];\n      if (cameraView) {\n        const {\n          currentCamera,\n          currentFrame,\n          updateImageSize\n        } = store.frame;\n        if (currentCamera === name) {\n          this.props.app.stage.addChild(cameraView);\n        } else {\n          this.props.app.stage.removeChild(cameraView);\n        }\n        cameraView.imageLoadError = error;\n        this.updateCameraBounds(cameraView, index);\n        let texture;\n        if (!error) {\n          texture = Texture.from(data);\n          cameraView.setImage(texture);\n        }\n        updateImageSize(name, currentFrame, error ? -1 : texture.width, error ? -1 : texture.height);\n      }\n      this.imageLoadErrors[name] = error ? i18n.translate('COMMON_IMAGE_ERROR', {\n        values: {\n          image: url || i18n.translate('COMMON_EMPTY')\n        }\n      }) : '';\n      this.loadedCount += 1;\n      this.checkLoaded();\n    };\n    /**\n     * wheel\n     */\n    this.wheel = event => {\n      event.stopPropagation();\n      const {\n        currentCameraView\n      } = store.frame;\n      if (currentCameraView) {\n        const point = this.mapScreenToStagePosition(event.clientX, event.clientY);\n        const localPoint = this.mapStageToLocalPosition(point);\n        currentCameraView.zoom(event.nativeEvent, localPoint);\n      }\n    };\n    makeObservable(this, {\n      mousePosition: observable,\n      imageLoadErrors: observable,\n      updateMousePosition: action,\n      onLoaded: action\n    });\n    this.reactionDisposers.push(reaction(() => [store.initialized, store.frame.currentFrame], () => {\n      // when initialized, or frame changes\n      this.updateCameras();\n    }));\n  }\n  componentDidMount() {\n    window.addEventListener('mousemove', this.updateMousePosition);\n    if (this.container.current) {\n      new ResizeObserver(this.resize).observe(this.container.current);\n      this.props.app.renderer.on('resolution-changed', this.resize);\n\n      // setup view\n      this.container.current.appendChild(this.props.app.view);\n      this.resize();\n      this.updateCameras();\n    }\n  }\n  componentWillUnmount() {\n    window.removeEventListener('mousemove', this.updateMousePosition);\n    this.props.app.renderer.off('resolution-changed', this.resize);\n    this.reactionDisposers.forEach(disposer => disposer());\n    // remove camera views\n    Object.values(store.frame.cameraViews).forEach(view => {\n      this.props.app.stage.removeChild(view);\n    });\n  }\n  /**\n   * get container's size, defualt is 800 * 600\n   */\n  getContainerSize() {\n    // default size is 800 * 600\n    const size = {\n      width: 800,\n      height: 600\n    };\n    if (this.container.current) {\n      size.width = this.container.current.clientWidth;\n      size.height = this.container.current.clientHeight;\n    }\n    return size;\n  }\n  /**\n   * update cameras for current frame\n   */\n  updateCameras() {\n    const {\n      cameras,\n      currentFrame\n    } = store.frame;\n    utils.clearTextureCache();\n    this.cancellableLoaders.forEach(loader => {\n      loader.cancel();\n    });\n    this.cancellableLoaders = [];\n    this.loadedCount = 0;\n    Object.keys(cameras).forEach((camera, i) => {\n      const url = cameras[camera][currentFrame] || '';\n      const loader = {\n        cancelled: false,\n        cancel() {\n          this.cancelled = true;\n        },\n        load() {\n          return new Promise((resove, reject) => {\n            imageLoader(url, data => {\n              if (!this.cancelled) {\n                resove(data);\n              } else {\n                reject();\n              }\n            }, {\n              canvas: true,\n              orientation: true,\n              crossOrigin: 'anonymous'\n            });\n          });\n        }\n      };\n      loader.load().then(data => this.onLoaded(camera, i, url, data)).catch(() => {\n        // canceled\n      });\n      this.cancellableLoaders.push(loader);\n    });\n  }\n\n  /**\n   * update camera bounds\n   * @param cameraView\n   * @param index\n   */\n  updateCameraBounds(cameraView, index) {\n    const x = 0;\n    const y = 0;\n    const {\n      width,\n      height\n    } = this.props.app.screen;\n    cameraView.updatePositionAndSize(x, y, width, height);\n    const cameraDom = document.getElementById(`${CAMERA_VIEW}-${cameraView.id}`);\n    if (cameraDom) {\n      cameraDom.style.left = `${x}px`;\n      cameraDom.style.top = `${y}px`;\n      cameraDom.style.width = `${width}px`;\n      cameraDom.style.height = `${height}px`;\n    }\n  }\n  /**\n   * check all cameras loaded in current frame\n   */\n  checkLoaded() {\n    const {\n      cameras,\n      onFrameLoaded\n    } = store.frame;\n    if (this.loadedCount === Object.keys(cameras).length) {\n      onFrameLoaded();\n    }\n  }\n\n  /**\n   * update all cameras bounds\n   */\n  updateAllCameraViewsBounds() {\n    const {\n      cameraViews\n    } = store.frame;\n    Object.values(cameraViews).forEach((cameraView, i) => {\n      this.updateCameraBounds(cameraView, i);\n    });\n  }\n  /**\n   * map screen position to stage position as a PIXI point\n   * @param x screen position x\n   * @param y screen position y\n   */\n  mapScreenToStagePosition(x, y) {\n    const point = new Point();\n    this.props.app.renderer.plugins.interaction.mapPositionToPoint(point, x, y);\n    return point;\n  }\n\n  /**\n   * map stage position to local posistion as a PIXI point\n   * @param point\n   */\n  mapStageToLocalPosition(point) {\n    return this.props.app.stage.toLocal(point);\n  }\n  render() {\n    const {\n      cursor,\n      viewScale,\n      crossLineVisible,\n      activeMeasurementBox\n    } = store.config;\n    const {\n      currentCamera,\n      currentCameraView\n    } = store.frame;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(OperationNavigator, {\n      onViewReset: () => currentCameraView === null || currentCameraView === void 0 ? void 0 : currentCameraView.fitImageToView(),\n      setViewScale: scale => currentCameraView === null || currentCameraView === void 0 ? void 0 : currentCameraView.zoomTo(scale),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        height: `calc(100% - ${NAVIGATOR_HEIGHT}px)`,\n        position: 'relative',\n        cursor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.container,\n      className: \"canvas-container\",\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      onContextMenu: e => e.preventDefault(),\n      onWheel: this.wheel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.camerasContainer,\n      className: \"cameras-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: `${CAMERA_VIEW}-${currentCamera}`,\n      className: \"camera-view selected single\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: `${CAMERA_VIEW_LABELS}-${currentCamera}`,\n      className: \"shape-labels-container label-mode\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Assistant, {\n      scale: viewScale,\n      crossline: crossLineVisible,\n      measurementBox: activeMeasurementBox,\n      mousePosition: this.mousePosition,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"outer-border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inner-border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 17\n      }\n    }, this.imageLoadErrors[currentCamera] && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 21\n      }\n    }, this.imageLoadErrors[currentCamera])))))));\n  }\n}\nexport default observer(CamerasContainer);","map":{"version":3,"names":["React","observer","reaction","makeObservable","observable","action","Point","Texture","utils","ResizeObserver","imageLoader","OperationNavigator","Assistant","store","i18n","NAVIGATOR_HEIGHT","CAMERA_VIEW","CAMERA_VIEW_LABELS","CamerasContainer","Component","constructor","props","container","createRef","camerasContainer","cancellableLoaders","loadedCount","reactionDisposers","mousePosition","x","y","imageLoadErrors","updateMousePosition","e","clientX","clientY","resize","width","height","getContainerSize","app","renderer","render","Object","values","frame","cameraViews","forEach","cameraView","i","updateCameraBounds","fullscreenRequested","fitImageToView","setTimeout","onLoaded","name","index","url","data","error","Event","type","currentCamera","currentFrame","updateImageSize","stage","addChild","removeChild","imageLoadError","texture","from","setImage","translate","image","checkLoaded","wheel","event","stopPropagation","currentCameraView","point","mapScreenToStagePosition","localPoint","mapStageToLocalPosition","zoom","nativeEvent","push","initialized","updateCameras","componentDidMount","window","addEventListener","current","observe","on","appendChild","view","componentWillUnmount","removeEventListener","off","disposer","size","clientWidth","clientHeight","cameras","clearTextureCache","loader","cancel","keys","camera","cancelled","load","Promise","resove","reject","canvas","orientation","crossOrigin","then","catch","screen","updatePositionAndSize","cameraDom","document","getElementById","id","style","left","top","onFrameLoaded","length","updateAllCameraViewsBounds","plugins","interaction","mapPositionToPoint","toLocal","cursor","viewScale","crossLineVisible","activeMeasurementBox","config","createElement","Fragment","onViewReset","setViewScale","scale","zoomTo","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","position","ref","className","onContextMenu","preventDefault","onWheel","crossline","measurementBox"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking2/components/cameras/CamerasContainer.tsx"],"sourcesContent":["import React from 'react';\nimport { observer } from 'mobx-react';\nimport { reaction, IReactionDisposer, makeObservable, observable, action } from 'mobx';\nimport { Application, Point, Texture, utils } from 'pixi.js';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport imageLoader from 'blueimp-load-image';\nimport OperationNavigator from '../toolbar/OperationNavigator';\nimport Assistant from '../../../common/shapes/assists/Assistant';\nimport type View from '../../shapes/View';\nimport store from '../../store/RootStore';\nimport i18n from '../../locales';\nimport { NAVIGATOR_HEIGHT, CAMERA_VIEW, CAMERA_VIEW_LABELS } from '../../constants';\nimport './CamerasContainer.scss';\n\ninterface CancellableLoader {\n  cancelled: boolean;\n  cancel: () => void;\n  load: () => Promise<Event | HTMLCanvasElement | HTMLImageElement>;\n}\n\ninterface CamerasContainerProps {\n  app: Application;\n}\n\nclass CamerasContainer extends React.Component<CamerasContainerProps> {\n  /**\n   * canvas dom container\n   */\n  container = React.createRef<HTMLDivElement>();\n\n  /**\n   * cameras dom container\n   */\n  camerasContainer = React.createRef<HTMLDivElement>();\n\n  /**\n   * cancellable image loader\n   */\n  cancellableLoaders: CancellableLoader[] = [];\n\n  /**\n   * loaded count for current frame\n   */\n  loadedCount = 0;\n\n  /**\n   * reactions\n   */\n  reactionDisposers: IReactionDisposer[] = [];\n\n  /**\n   * mouse position\n   */\n  mousePosition = {\n    x: -1,\n    y: -1,\n  };\n\n  /**\n   * image load errors\n   */\n  imageLoadErrors: {\n    [camera: string]: string;\n  } = {};\n\n  constructor(props: CamerasContainerProps) {\n    super(props);\n\n    makeObservable(this, {\n      mousePosition: observable,\n      imageLoadErrors: observable,\n      updateMousePosition: action,\n      onLoaded: action,\n    });\n\n    this.reactionDisposers.push(reaction(\n      () => [store.initialized, store.frame.currentFrame],\n      () => {\n        // when initialized, or frame changes\n        this.updateCameras();\n      },\n    ));\n  }\n\n  componentDidMount() {\n    window.addEventListener('mousemove', this.updateMousePosition);\n    if (this.container.current) {\n      new ResizeObserver(this.resize).observe(this.container.current);\n      this.props.app.renderer.on('resolution-changed', this.resize);\n\n      // setup view\n      this.container.current.appendChild(this.props.app.view);\n      this.resize();\n      this.updateCameras();\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('mousemove', this.updateMousePosition);\n    this.props.app.renderer.off('resolution-changed', this.resize);\n    this.reactionDisposers.forEach((disposer) => disposer());\n    // remove camera views\n    Object.values(store.frame.cameraViews).forEach((view) => {\n      this.props.app.stage.removeChild(view);\n    });\n  }\n\n  /**\n   * update mouse position\n   * @param e\n   */\n  updateMousePosition = (e: MouseEvent) => {\n    const { clientX, clientY } = e;\n    this.mousePosition = {\n      x: clientX,\n      y: clientY,\n    };\n  };\n\n  /**\n   * get container's size, defualt is 800 * 600\n   */\n  getContainerSize() {\n    // default size is 800 * 600\n    const size = {\n      width: 800,\n      height: 600,\n    };\n    if (this.container.current) {\n      size.width = this.container.current.clientWidth;\n      size.height = this.container.current.clientHeight;\n    }\n    return size;\n  }\n\n  /**\n   * resize\n   */\n  resize = () => {\n    const { width, height } = this.getContainerSize();\n    this.props.app.renderer.resize(width, height);\n    this.props.app.render();\n\n    // update camera views\n    Object.values(store.frame.cameraViews).forEach((cameraView, i) => {\n      this.updateCameraBounds(cameraView, i);\n      if (store.fullscreenRequested) {\n        cameraView.fitImageToView();\n      }\n    });\n\n    // delay to set to false to wait fullscreen finish\n    setTimeout(() => {\n      store.fullscreenRequested = false;\n    }, 0);\n  };\n\n  /**\n   * update cameras for current frame\n   */\n  updateCameras() {\n    const { cameras, currentFrame } = store.frame;\n\n    utils.clearTextureCache();\n    this.cancellableLoaders.forEach((loader) => {\n      loader.cancel();\n    });\n    this.cancellableLoaders = [];\n    this.loadedCount = 0;\n\n    Object.keys(cameras).forEach((camera, i) => {\n      const url = cameras[camera][currentFrame] || '';\n      const loader: CancellableLoader = {\n        cancelled: false,\n        cancel() {\n          this.cancelled = true;\n        },\n        load() {\n          return new Promise((resove, reject) => {\n            imageLoader(url, (data) => {\n              if (!this.cancelled) {\n                resove(data);\n              } else {\n                reject();\n              }\n            }, {\n              canvas: true,\n              orientation: true,\n              crossOrigin: 'anonymous',\n            });\n          });\n        }\n      };\n      loader\n        .load()\n        .then((data) => this.onLoaded(camera, i, url, data))\n        .catch(() => {\n          // canceled\n        });\n      this.cancellableLoaders.push(loader);\n    });\n  }\n\n  /**\n   * update camera bounds\n   * @param cameraView\n   * @param index\n   */\n  updateCameraBounds(cameraView: View, index: number) {\n    const x = 0;\n    const y = 0;\n    const { width, height } = this.props.app.screen;\n    cameraView.updatePositionAndSize(x, y, width, height);\n    const cameraDom = document.getElementById(`${CAMERA_VIEW}-${cameraView.id}`);\n    if (cameraDom) {\n      cameraDom.style.left = `${x}px`;\n      cameraDom.style.top = `${y}px`;\n      cameraDom.style.width = `${width}px`;\n      cameraDom.style.height = `${height}px`;\n    }\n  }\n\n  /**\n   * on resource loaded\n   * @param name\n   * @param index\n   * @param url\n   * @param data\n   */\n  onLoaded = (name: string, index: number, url: string, data: Event | HTMLCanvasElement | HTMLImageElement) => {\n    const error = data instanceof Event && data.type === 'error';\n    const cameraView = store.frame.cameraViews[name];\n    if (cameraView) {\n      const { currentCamera, currentFrame, updateImageSize } = store.frame;\n\n      if (currentCamera === name) {\n        this.props.app.stage.addChild(cameraView);\n      } else {\n        this.props.app.stage.removeChild(cameraView);\n      }\n\n      cameraView.imageLoadError = error;\n      this.updateCameraBounds(cameraView, index);\n\n      let texture: Texture;\n      if (!error) {\n        texture = Texture.from(data as HTMLCanvasElement);\n        cameraView.setImage(texture);\n      }\n      updateImageSize(name, currentFrame, error ? -1 : texture!.width, error ? -1 : texture!.height);\n    }\n    this.imageLoadErrors[name] = error\n      ? i18n.translate('COMMON_IMAGE_ERROR', { values: { image: url || i18n.translate('COMMON_EMPTY') } })\n      : '';\n    this.loadedCount += 1;\n    this.checkLoaded();\n  };\n\n  /**\n   * check all cameras loaded in current frame\n   */\n  checkLoaded() {\n    const { cameras, onFrameLoaded } = store.frame;\n    if (this.loadedCount === Object.keys(cameras).length) {\n      onFrameLoaded();\n    }\n  }\n\n  /**\n   * update all cameras bounds\n   */\n  updateAllCameraViewsBounds() {\n    const { cameraViews } = store.frame;\n    Object.values(cameraViews).forEach((cameraView, i) => {\n      this.updateCameraBounds(cameraView, i);\n    });\n  }\n\n  /**\n   * wheel\n   */\n  wheel = (event: React.WheelEvent) => {\n    event.stopPropagation();\n    const { currentCameraView } = store.frame;\n    if (currentCameraView) {\n      const point = this.mapScreenToStagePosition(event.clientX, event.clientY);\n      const localPoint = this.mapStageToLocalPosition(point);\n      currentCameraView.zoom(event.nativeEvent, localPoint);\n    }\n  };\n\n  /**\n   * map screen position to stage position as a PIXI point\n   * @param x screen position x\n   * @param y screen position y\n   */\n  mapScreenToStagePosition(x: number, y: number) {\n    const point = new Point();\n    this.props.app.renderer.plugins.interaction.mapPositionToPoint(point, x, y);\n    return point;\n  }\n\n  /**\n   * map stage position to local posistion as a PIXI point\n   * @param point\n   */\n  mapStageToLocalPosition(point: Point) {\n    return this.props.app.stage.toLocal(point);\n  }\n\n  render() {\n    const { cursor, viewScale, crossLineVisible, activeMeasurementBox } = store.config;\n    const { currentCamera, currentCameraView } = store.frame;\n    return (\n      <>\n        <OperationNavigator\n          onViewReset={() => currentCameraView?.fitImageToView()}\n          setViewScale={(scale) => currentCameraView?.zoomTo(scale)}\n        />\n        <div\n          style={{\n            width: '100%',\n            height: `calc(100% - ${NAVIGATOR_HEIGHT}px)`,\n            position: 'relative',\n            cursor,\n          }}\n        >\n          <div\n            ref={this.container}\n            className=\"canvas-container\"\n            style={{ width: '100%', height: '100%' }}\n            onContextMenu={(e) => e.preventDefault()}\n            onWheel={this.wheel}\n          />\n          <div\n            ref={this.camerasContainer}\n            className=\"cameras-container\"\n          >\n            <div\n              id={`${CAMERA_VIEW}-${currentCamera}`}\n              className=\"camera-view selected single\"\n            >\n              <div\n                id={`${CAMERA_VIEW_LABELS}-${currentCamera}`}\n                className=\"shape-labels-container label-mode\"\n              />\n              <Assistant\n                scale={viewScale}\n                crossline={crossLineVisible}\n                measurementBox={activeMeasurementBox}\n                mousePosition={this.mousePosition}\n              />\n              <div className=\"outer-border\">\n                <div className=\"inner-border\">\n                  {this.imageLoadErrors[currentCamera] && (\n                    <div className=\"error\">\n                      {this.imageLoadErrors[currentCamera]}\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default observer(CamerasContainer);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}