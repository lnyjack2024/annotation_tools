{"ast":null,"code":"/* eslint-disable class-methods-use-this */import EventEmitter from'eventemitter3';import{cloneDeep}from'lodash';import{drawLine,drawRect,drawRectBorder,drawRoundedRect,drawCircle,drawScale,drawText,drawRhombus}from'../utils/canvas';import Cursor from'../components/common/Cursor';export let FrameItemType=/*#__PURE__*/function(FrameItemType){FrameItemType[\"DEFAULT\"]=\"default\";FrameItemType[\"CARD\"]=\"card\";FrameItemType[\"TEXT\"]=\"text\";FrameItemType[\"ENDPOINT\"]=\"endpoint\";return FrameItemType;}({});export let EventAction=/*#__PURE__*/function(EventAction){EventAction[\"HEIGHT_CHANGE\"]=\"height-change\";EventAction[\"VISIBLE_FRAMES_UPDATE\"]=\"visible-frames-update\";EventAction[\"CURRENT_FRAME_CHANGE\"]=\"current-frame-change\";EventAction[\"ITEMS_OFFSET_CHANGE\"]=\"items-offset-change\";EventAction[\"BLOCK_HOVERED\"]=\"block-hovered\";EventAction[\"BLOCK_SELECTED\"]=\"block-selected\";EventAction[\"FRAME_STATUS_CHANGED\"]=\"frame-status-changed\";return EventAction;}({});var HoverType=/*#__PURE__*/function(HoverType){HoverType[\"SCROLLBAR_X\"]=\"scrollbarX\";HoverType[\"SCROLLBAR_Y\"]=\"scrollbarY\";HoverType[\"SCROLLBAR_X_CONTAINER\"]=\"scrollbarXContainer\";HoverType[\"SCROLLBAR_Y_CONTAINER\"]=\"scrollbarYContainer\";return HoverType;}(HoverType||{});const rangeFramesSet=[1000,500,200,100,50,20,10,5];// set of supported frames per range\nconst scrollbarColor='#777B82';const scrollbarContainerColor='#22262D';const borderColor='#484C59';export default class FramesRenderer extends EventEmitter{/**\n   * get scrollable\n   * @getter\n   */get scrollable(){return this._scrollable;}/**\n   * set scrollable\n   * @setter\n   */set scrollable(scrollable){const shouldUpdate=this._scrollable!==scrollable;this._scrollable=scrollable;if(shouldUpdate){this.setupCanvas();}}/**\n   * invalid frames\n   */ /**\n   * set invalid frames\n   * @setter\n   */set invalidFrames(frames){this._invalidFrames=[...frames];this.drawFrames();}/**\n   * frame items\n   * @private\n   */ /**\n   * get frame items\n   * @getter\n   */get items(){return this._items;}/**\n   * set frame items\n   * @setter\n   */set items(items){const originItemsLen=Object.keys(this._items).length;this._items=cloneDeep(items);this._allItems=[];this._itemBlocks=[];const itemKeys=Object.keys(this._items);for(let i=0;i<itemKeys.length;i+=1){const itemKey=itemKeys[i];this._allItems[i]={id:itemKey,index:i};this._itemBlocks[i]={};const{frameStatus={},type,draggable=false}=this._items[itemKey];const statusFrames=Object.keys(frameStatus).map(f=>Number(f));let lastStartIndex=0;for(let j=0;j<statusFrames.length;j+=1){const startFrame=statusFrames[lastStartIndex];const endFrame=statusFrames[j]+1;const framesBreak=j===statusFrames.length-1||statusFrames[j+1]-statusFrames[j]>1;const framesChange=frameStatus[endFrame]!==frameStatus[startFrame];if(framesBreak||(type===FrameItemType.TEXT||type===FrameItemType.ENDPOINT)&&framesChange){this._itemBlocks[i][startFrame]={startFrame,endFrame,value:frameStatus[startFrame],hovered:false,selected:false,draggable};lastStartIndex=j+1;}}}const height=Object.keys(this._items).length*this.itemHeight;if(height>this.itemsContainerHeight&&!this.scrollable){this._scrollable=true;this.setupCanvas();}else if(height<=this.itemsContainerHeight&&this.scrollable&&!this.fixHeight){this._scrollable=false;this.setupCanvas();}if(originItemsLen!==Object.keys(items).length&&!this.scrollable){// when items length changes, and not scrollable, need resize canvas and redraw\nthis.setupCanvas();}else{// just redraw\nthis.drawFrames();}}/**\n   * all items with id and actual index\n   * @private\n   */ /**\n   * get current frame\n   * @getter\n   */get currentFrame(){return this._currentFrame;}/**\n   * set current frame\n   * @setter\n   */set currentFrame(frameIndex){const shouldUpdate=this._currentFrame!==frameIndex;this._currentFrame=frameIndex;if(shouldUpdate){this.focusFrame(frameIndex);}}/**\n   * hovered frame index\n   * @private\n   */ /**\n   * get current range index\n   * @getter\n   */get currentRangeIndex(){return this._currentRangeIndex;}/**\n   * set current range index\n   * @setters\n   */set currentRangeIndex(index){const rangeIndex=Math.min(Math.max(index,this._initialRangeIndex),rangeFramesSet.length-1);const shouldUpdate=this._currentRangeIndex!==rangeIndex;this._currentRangeIndex=rangeIndex;if(shouldUpdate){this.drawFrames();}}/**\n   * current range start frame (used for drawing)\n   * @private\n   */ /**\n   * get items offset\n   * @getter\n   */get itemsOffset(){return this._itemsOffset;}/**\n   * set items offset\n   * @setter\n   */set itemsOffset(o){const offset=o*window.devicePixelRatio;const shouldUpdate=this._itemsOffset!==offset;this._itemsOffset=offset;if(shouldUpdate){this.drawFrames();}}/**\n   * vertical scrollbar height\n   * @private\n   */ /**\n   * get item height\n   */get itemHeight(){return this._itemHeight*window.devicePixelRatio;}/**\n   * frames height\n   * @private\n   */ /**\n   * get frames height\n   */get framesHeight(){return this._framesHeight*window.devicePixelRatio;}/**\n   * frames scale enable\n   */ /**\n   * base range width\n   */get baseRangeWidth(){return 18*5*window.devicePixelRatio;}/**\n   * canvas padding right\n   */get paddingRight(){return 18*window.devicePixelRatio;}/**\n   * horizontal scrollbar container height\n   */get scrollbarXContainerHeight(){return 22*window.devicePixelRatio;}/**\n   * horizontal scrollbar height\n   */get scrollbarXHeight(){return 16*window.devicePixelRatio;}/**\n   * vertical scrollbar width\n   */get scrollbarYWidth(){return 10*window.devicePixelRatio;}/**\n   * vertical scrollbar offset x (from items container right)\n   */get scrollbarYOffsetX(){return 4*window.devicePixelRatio;}/**\n   * item block height\n   */get itemBlockHeight(){return 12*window.devicePixelRatio;}/**\n   * item block offset y (in the item container)\n   */get itemBlockOffsetY(){return 4*window.devicePixelRatio;}/**\n   * item text block height\n   */get itemTextBlockHeight(){return 18*window.devicePixelRatio;}/**\n   * item text block offset y (in the item container)\n   */get itemTextBlockOffsetY(){return 1*window.devicePixelRatio;}/**\n   * item endpoint block height\n   */get itemEndpointBlockHeight(){return 4*window.devicePixelRatio;}/**\n   * item text block offset y (in the item container)\n   */get itemEndpointBlockOffsetY(){return 8*window.devicePixelRatio;}/**\n   * item card height\n   */get itemCardHeight(){return 16*window.devicePixelRatio;}/**\n   * items container height (when not collapsed)\n   */get itemsContainerHeight(){return 275*window.devicePixelRatio;}/**\n   * frames container height\n   */get itemsTotalHeight(){if(this.scrollable){return this.itemsContainerHeight;}return Object.keys(this._items).length*this.itemHeight;}/**\n   * current range frames\n   */get rangeFrames(){return rangeFramesSet[this._currentRangeIndex];}/**\n   * current per frame width\n   */get perFrameWidth(){return this._currentRangeIndex<=this._initialRangeIndex?(this.canvas.width-this.paddingRight)/this.frameCount:this.baseRangeWidth/this.rangeFrames;}/**\n   * current card width\n   */get cardWidth(){return this.perFrameWidth-this.cardOffsetX*2;}/**\n   * card offset x (base on item)\n   */get cardOffsetX(){return 1*window.devicePixelRatio;}/**\n   * card offset y (base on item)\n   */get cardOffsetY(){return(this.itemHeight-this.itemCardHeight)/2-1;}/**\n   * constructor\n   * @param canvas\n   * @param frameCount\n   * @param options\n   */constructor(container,frameCount){let{itemHeight,framesHeight,bgColor,itemColor,itemSelectedColor,cardColor,scaleEnabled,fixHeight}=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};super();/**\n   * canvas container\n   * @member\n   */this.container=void 0;/**\n   * canvas dom element\n   * @member\n   */this.canvas=void 0;/**\n   * frame tip element\n   * @member\n   */this.frameTip=void 0;/**\n   * frames count\n   * @member\n   */this.frameCount=void 0;/**\n   * frames background color\n   * @member\n   */this.bgColor=void 0;/**\n   * item default color\n   * @member\n   */this.itemColor=void 0;/**\n   * item selected color\n   * @member\n   */this.itemSelectedColor=void 0;/**\n   * card color\n   * @member\n   */this.cardColor=void 0;/**\n   * is frames container height fix\n   * @member\n   */this.fixHeight=false;/**\n   * scrollable\n   * @private\n   */this._scrollable=false;this._invalidFrames=[];this._items={};this._allItems=[];/**\n   * all item blocks\n   * @private\n   */this._itemBlocks=[];/**\n   * current frame index\n   * @private\n   */this._currentFrame=0;this._hoveredFrame=-1;/**\n   * hovered item index\n   * @private\n   */this._hoveredItemIndex=-1;/**\n   * hovered block\n   */this._hoveredBlock=null;/**\n   * selected block\n   */this._selectedBlock=null;/**\n   * pending block matches start frame\n   */this._pendingStartBlock=null;/**\n   * pending block matches end frame\n   */this._pendingEndBlock=null;/**\n   * is editing pending blocks by dragging\n   */this._pendingEditing=false;/**\n   * cursor offset when editing pending blocks\n   */this._pendingCursorOffset=-1;/**\n   * initial calculated range index (largest frames per range)\n   * @private\n   */this._initialRangeIndex=0;/**\n   * current range index in the rangeFramesSet\n   * @private\n   */this._currentRangeIndex=0;this._currentRangeStart=0;/**\n   * current range start frame offset (used for drawing)\n   * @private\n   */this._currentRangeStartOffset=0;/**\n   * current offset in canvas when zooming, dragging and so on\n   * @private\n   */this._baseOffset=0;/**\n   * current offset frame index in canvas when zooming, dragging and so on\n   * @private\n   */this._baseOffsetFrame=0;/**\n   * is mouse down on horizontal scrollbar\n   * @private\n   */this._isScrollXDown=false;/**\n   * base offset when mouse down on horizontal scrollbar\n   * @private\n   */this._scrollXDownBaseOffsetFrame=0;/**\n   * client X when mouse down on horizontal scrollbar\n   * @private\n   */this._scrollXDownClientX=0;/**\n   * horizontal scrollbar width\n   * @private\n   */this._scrollXWidth=0;/**\n   * horizontal scrollbar offset\n   * @private\n   */this._scrollXOffset=0;/**\n   * items offset\n   * @private\n   */this._itemsOffset=0;this._scrollYHeight=0;/**\n   * vertical scrollbar offset\n   * @private\n   */this._scrollYOffset=0;/**\n   * is mouse down on vertical scrollbar\n   * @private\n   */this._isScrollYDown=false;/**\n   * items offset when mouse down on vertical scrollbar\n   * @private\n   */this._scrollYDownItemsOffset=0;/**\n   * client y when mouse down on vertical scrollbar\n   * @private\n   */this._scrollYDownClientY=0;/**\n   * item height\n   * @private\n   */this._itemHeight=20;this._framesHeight=44;this._scaleEnabled=true;/**\n   * set up canvas size\n   */this.setupCanvas=()=>{const{width}=this.canvas.getBoundingClientRect();const originCanvasWidth=this.canvas.width;this.canvas.width=width*window.devicePixelRatio;this.canvas.height=this.itemsTotalHeight+this.framesHeight;this.emit(EventAction.HEIGHT_CHANGE,this.canvas.height/window.devicePixelRatio);this.setupRangeIndexes(originCanvasWidth!==this.canvas.width);this.drawFrames();};/**\n   * mouse wheel\n   * @param e\n   */this.wheel=e=>{if(e.altKey){this.zoom(e);}else{// scroll y\nthis.updateItemsScroll(this._itemsOffset+e.deltaY);}};/**\n   * zooming\n   * @param e\n   */this.zoom=e=>{const hover=this.getMouseHover(e.clientX,e.clientY);if(hover===HoverType.SCROLLBAR_Y_CONTAINER||hover===HoverType.SCROLLBAR_Y){return;}// zoom to scale frames\nconst{left}=this.canvas.getBoundingClientRect();this._baseOffset=(e.clientX-left)*window.devicePixelRatio;this._baseOffsetFrame=this.getFrameByClientX(e.clientX);if(e.deltaY>0){this._currentRangeIndex+=1;}else{this._currentRangeIndex-=1;}this._currentRangeIndex=Math.min(Math.max(this._currentRangeIndex,this._initialRangeIndex),rangeFramesSet.length-1);this.emit(EventAction.VISIBLE_FRAMES_UPDATE,this._currentRangeIndex,rangeFramesSet.map((_,i)=>i).slice(this._initialRangeIndex));this.drawFrames();this.canvasMove(e);};/**\n   * mouse down on canvas\n   * @param e\n   */this.canvasDown=e=>{const hover=this.getMouseHover(e.clientX,e.clientY);if(hover===HoverType.SCROLLBAR_X){// click on horizontal scrollbar\nthis._isScrollXDown=true;this._scrollXDownBaseOffsetFrame=this._baseOffsetFrame;this._scrollXDownClientX=e.clientX;}else if(hover===HoverType.SCROLLBAR_Y){// click on vertical scrollbar\nthis._isScrollYDown=true;this._scrollYDownItemsOffset=this._itemsOffset;this._scrollYDownClientY=e.clientY;}else if(this._pendingStartBlock||this._pendingEndBlock){this._pendingEditing=true;this.emit(EventAction.BLOCK_HOVERED,this._hoveredBlock);}else if(this._hoveredBlock){this.currentFrame=this._hoveredFrame;this.emit(EventAction.CURRENT_FRAME_CHANGE,this._currentFrame,this._hoveredItemIndex);if(e.buttons===2){// activate\nthis._selectedBlock=this._hoveredBlock;this._selectedBlock.selected=true;this.drawFrames();const hoveredItemY=this._hoveredItemIndex*this.itemHeight-this._itemsOffset+this.scrollbarXContainerHeight;this.emit(EventAction.BLOCK_SELECTED,this._selectedBlock,this._hoveredItemIndex,e.clientX,(this.canvas.height-hoveredItemY)/window.devicePixelRatio);}}else if(this._hoveredFrame>=0){this.currentFrame=this._hoveredFrame;this.emit(EventAction.CURRENT_FRAME_CHANGE,this._currentFrame,this._hoveredItemIndex);}};/**\n   * mouse move on canvas\n   * @param e\n   */this.canvasMove=e=>{if(this._pendingEditing){this._hoveredFrame=this.getFrameByClientX(e.clientX);this.updateFrameTip();return;}this.setCursor(Cursor.DEFAULT);const hover=this.getMouseHover(e.clientX,e.clientY);if(hover===HoverType.SCROLLBAR_X){// hover on horizontal scrollbar\nthis.canvasLeave();this.setCursor(Cursor.POINTER);}else if(hover===HoverType.SCROLLBAR_Y){this.canvasLeave();this.setCursor(Cursor.POINTER);}else if(hover===HoverType.SCROLLBAR_X_CONTAINER||hover===HoverType.SCROLLBAR_Y_CONTAINER){this.canvasLeave();}else{this._hoveredFrame=this.getFrameByClientX(e.clientX);this._hoveredItemIndex=this.getItemIndexByClientY(e.clientY);if(this._hoveredBlock){this._hoveredBlock.hovered=false;}this._hoveredBlock=null;this._pendingStartBlock=null;this._pendingEndBlock=null;const{left}=this.canvas.getBoundingClientRect();const cursorOffset=(e.clientX-left)*window.devicePixelRatio;const threshold=6*window.devicePixelRatio;this._itemBlocks.forEach((blocks,i)=>{Object.values(blocks).forEach(item=>{if(i===this._hoveredItemIndex){const{startFrame,endFrame,value}=item;// check block hovered\nitem.hovered=this._hoveredFrame>=startFrame&&this._hoveredFrame<endFrame&&typeof value!=='boolean';if(item.hovered){this._hoveredBlock=item;}// check draggable block is pending\nif(item.draggable&&(this._hoveredFrame===startFrame||this._hoveredFrame===startFrame-1)){// match the block beginning\nconst frameOffset=this._currentRangeStartOffset+(startFrame-this._currentRangeStart)*this.perFrameWidth;if(Math.abs(cursorOffset-frameOffset)<threshold){this.setCursor(Cursor.COL_RESIZE);this._pendingStartBlock=item;}}if(item.draggable&&(this._hoveredFrame===endFrame||this._hoveredFrame===endFrame-1)){// match the block ending\nconst frameOffset=this._currentRangeStartOffset+(endFrame-this._currentRangeStart)*this.perFrameWidth;if(Math.abs(cursorOffset-frameOffset)<threshold){this.setCursor(Cursor.COL_RESIZE);this._pendingEndBlock=item;}}}});});this.drawFrames();this.updateFrameTip();const hoveredItemY=this._hoveredItemIndex*this.itemHeight-this._itemsOffset+this.scrollbarXContainerHeight;this.emit(EventAction.BLOCK_HOVERED,this._hoveredBlock,this._hoveredFrame,this._hoveredItemIndex,e.clientX,(this.canvas.height-hoveredItemY)/window.devicePixelRatio);}};/**\n   * mouse leave canvas\n   */this.canvasLeave=()=>{this._hoveredFrame=-1;this._hoveredItemIndex=-1;if(this._hoveredBlock){this._hoveredBlock.hovered=false;}this._hoveredBlock=null;this._pendingStartBlock=null;this._pendingEndBlock=null;this.drawFrames();this.updateFrameTip();this.emit(EventAction.BLOCK_HOVERED,this._hoveredBlock);};/**\n   * mouse move on document (dragging scrollbar)\n   * @param e\n   */this.cursorMove=e=>{if(this._pendingEditing){const{left}=this.canvas.getBoundingClientRect();this._pendingCursorOffset=(e.clientX-left)*window.devicePixelRatio;this.drawFrames();}else if(this._isScrollXDown){// move horizontal scrollbar\nconst offset=(e.clientX-this._scrollXDownClientX)*window.devicePixelRatio;const frames=Math.floor(offset/(this.canvas.width-this.paddingRight)*this.frameCount);this._baseOffsetFrame=this._scrollXDownBaseOffsetFrame+frames;this._hoveredFrame=-1;this._hoveredItemIndex=-1;this.drawFrames();this.updateFrameTip();}else if(this._isScrollYDown){// move vertical scrollbar\nconst offset=(e.clientY-this._scrollYDownClientY)*window.devicePixelRatio;const itemsOffset=this._scrollYDownItemsOffset+offset/this.itemsContainerHeight*this._allItems.length*this.itemHeight;this.updateItemsScroll(itemsOffset);}};/**\n   * mouse up on document (dragging scrollbar)\n   */this.cursorUp=()=>{if(this._pendingEditing&&this._pendingCursorOffset>=0){var _this$_pendingStartBl,_this$_pendingEndBloc;let frame=this._currentRangeStart+Math.round((this._pendingCursorOffset-this._currentRangeStartOffset)/this.perFrameWidth);if(frame>this.frameCount){frame=this.frameCount;}else if(frame<0){frame=0;}const updatedFrameStatus={};const pendingStartFrame=(_this$_pendingStartBl=this._pendingStartBlock)===null||_this$_pendingStartBl===void 0?void 0:_this$_pendingStartBl.startFrame;const pendingEndFrame=(_this$_pendingEndBloc=this._pendingEndBlock)===null||_this$_pendingEndBloc===void 0?void 0:_this$_pendingEndBloc.endFrame;if(pendingStartFrame!==undefined){if(frame>pendingStartFrame){// move -> right\nfor(let i=pendingStartFrame;i<frame;i+=1){updatedFrameStatus[i]=null;}if(pendingEndFrame!==undefined){for(let i=pendingEndFrame;i<frame;i+=1){updatedFrameStatus[i]=pendingEndFrame-1;}}}else if(frame<pendingStartFrame){// move -> left\nif(pendingEndFrame!==undefined){for(let i=frame;i<pendingEndFrame;i+=1){updatedFrameStatus[i]=null;}}for(let i=frame;i<pendingStartFrame;i+=1){updatedFrameStatus[i]=pendingStartFrame;}}}else if(pendingEndFrame!==undefined){if(frame>pendingEndFrame){// move -> right\nfor(let i=pendingEndFrame;i<frame;i+=1){updatedFrameStatus[i]=pendingEndFrame-1;}}else if(frame<pendingEndFrame){// move -> left\nfor(let i=frame;i<pendingEndFrame;i+=1){updatedFrameStatus[i]=null;}}}if(Object.keys(updatedFrameStatus).length>0){this.emit(EventAction.FRAME_STATUS_CHANGED,updatedFrameStatus,this._hoveredItemIndex);}}this._pendingEditing=false;this._pendingCursorOffset=-1;if(this._isScrollXDown){this._isScrollXDown=false;this._scrollXDownBaseOffsetFrame=0;this._scrollXDownClientX=0;}if(this._isScrollYDown){this._isScrollYDown=false;this._scrollYDownItemsOffset=0;this._scrollYDownClientY=0;}};this._scaleEnabled=scaleEnabled===undefined?true:scaleEnabled;this.container=container;this.frameCount=frameCount;if(itemHeight){this._itemHeight=itemHeight;}if(framesHeight){this._framesHeight=framesHeight;}this.bgColor=bgColor||'#3D424D';this.itemColor=itemColor||'#343846';this.itemSelectedColor=itemSelectedColor||'#2F3340';this.cardColor=cardColor||'#5C5F6B';this.fixHeight=fixHeight||false;this.container.style.position='relative';// create canvas dom\nthis.canvas=document.createElement('canvas');this.canvas.style.width='100%';this.canvas.style.height='100%';this.canvas.style.display='block';this.container.appendChild(this.canvas);// create tip dom\nthis.frameTip=document.createElement('div');this.frameTip.style.position='absolute';this.frameTip.style.background='#34CBD1';this.frameTip.style.padding='0 2px';this.frameTip.style.borderRadius='2px';this.frameTip.style.fontSize='10px';this.frameTip.style.color='#252935';this.frameTip.style.lineHeight='12px';this.frameTip.style.height='12px';this.frameTip.style.top='8px';this.frameTip.style.display='none';this.container.appendChild(this.frameTip);this.container.oncontextmenu=e=>e.preventDefault();this.addEventListeners();this.setupCanvas();}/**\n   * update one item's frame status\n   * @param id\n   * @param frameStatus\n   */updateItemFrameStatus(id,frameStatus){if(this._items[id]){this._items[id].frameStatus=cloneDeep(frameStatus);this.drawFrames();}}/**\n   * add event listeners\n   */addEventListeners(){document.addEventListener('mousemove',this.cursorMove);document.addEventListener('mouseup',this.cursorUp);window.addEventListener('resize',this.setupCanvas);window.matchMedia('screen and (min-resolution: 2dppx)').addEventListener('change',this.setupCanvas);this.canvas.addEventListener('wheel',this.wheel);this.canvas.addEventListener('mousedown',this.canvasDown);this.canvas.addEventListener('mousemove',this.canvasMove);this.canvas.addEventListener('mouseleave',this.canvasLeave);}/**\n   * remove event listeners\n   */removeEventListeners(){document.removeEventListener('mousemove',this.cursorMove);document.removeEventListener('mouseup',this.cursorUp);window.removeEventListener('resize',this.setupCanvas);window.matchMedia('screen and (min-resolution: 2dppx)').removeEventListener('change',this.setupCanvas);this.canvas.removeEventListener('wheel',this.wheel);this.canvas.removeEventListener('mousedown',this.canvasDown);this.canvas.removeEventListener('mousemove',this.canvasMove);this.canvas.removeEventListener('mouseleave',this.canvasLeave);}/**\n   * calculate initial range index\n   */setupRangeIndexes(update){if(update){const estimatedRangeFrames=this.frameCount/(this.canvas.width-this.paddingRight)*this.baseRangeWidth;let rangeIndex=0;while(rangeFramesSet[rangeIndex]>estimatedRangeFrames&&rangeIndex<rangeFramesSet.length){rangeIndex+=1;}this._initialRangeIndex=rangeIndex>0?rangeIndex-1:0;this._currentRangeIndex=this._initialRangeIndex;}this.emit(EventAction.VISIBLE_FRAMES_UPDATE,this._currentRangeIndex,rangeFramesSet.map((_,i)=>i).slice(this._initialRangeIndex));}/**\n   * draw frames\n   */drawFrames(){const ctx=this.canvas.getContext('2d');if(ctx){ctx.save();// clear canvas\nconst{width,height}=this.canvas;ctx.clearRect(0,0,width,height);// calc current range\nthis._currentRangeStart=Math.floor(this._baseOffsetFrame/this.rangeFrames)*this.rangeFrames;if(this._currentRangeStart===0){// reset offset to 0\nthis._currentRangeStartOffset=0;}else{this._currentRangeStartOffset=this._baseOffset-(this._baseOffsetFrame-this._currentRangeStart)*this.perFrameWidth;const firstFrameOffset=this._baseOffset-this._baseOffsetFrame*this.perFrameWidth;const lastFrameOffset=this._baseOffset+(this.frameCount-this._baseOffsetFrame)*this.perFrameWidth;if(firstFrameOffset>0){this._currentRangeStartOffset-=firstFrameOffset;}else if(lastFrameOffset<width-this.paddingRight){this._currentRangeStartOffset+=width-this.paddingRight-lastFrameOffset;}}this.drawFrameItems(ctx);this.drawFrameScales(ctx);ctx.restore();}}/**\n   * draw frame items\n   * @param ctx\n   */drawFrameItems(ctx){if(this._currentRangeIndex===rangeFramesSet.length-1){// block cursor & cards\nthis.drawItems(ctx,'blocks');this.drawFrameHint(ctx);this.drawItems(ctx,'cards');this.drawInvalidFrames(ctx);this.drawFrameHint(ctx,'hover');}else{// line cursor & blocks\nthis.drawItems(ctx);this.drawFrameHint(ctx);this.drawInvalidFrames(ctx);this.drawFrameHint(ctx,'hover');}}/**\n   * draw items\n   * @param ctx\n   * @param type empty means all items\n   */drawItems(ctx,type){let items=this._allItems;if(type==='blocks'){items=items.filter(_ref=>{let{id}=_ref;return!this._items[id].showCards&&this._items[id].type!==FrameItemType.CARD;});}else if(type==='cards'){items=items.filter(_ref2=>{let{id}=_ref2;return this._items[id].showCards||this._items[id].type===FrameItemType.CARD;});}const width=this.canvas.width-this.paddingRight;items.forEach(_ref3=>{let{id,index}=_ref3;const{frameStatus={},frameColor={},color,type:frameItemType,showCards,selected}=this._items[id];const itemOffset=index*this.itemHeight;if(itemOffset+this.itemHeight<=this._itemsOffset||itemOffset-this._itemsOffset>=this.itemsTotalHeight){// out of container\nreturn;}const height=this.itemHeight;const offsetY=itemOffset-this._itemsOffset+this.scrollbarXContainerHeight;// draw background\nlet bgColor=this.itemColor;if(frameItemType===FrameItemType.TEXT&&this._hoveredItemIndex===index){// text block hovered\nbgColor=this.itemSelectedColor;}else if(selected){bgColor=this.itemSelectedColor;}drawRect(ctx,0,offsetY,width,height,bgColor);// draw bottom line\ndrawLine(ctx,0,offsetY+height-1,width,offsetY+height-1,borderColor);if((showCards||frameItemType===FrameItemType.CARD)&&this._currentRangeIndex===rangeFramesSet.length-1){// draw cards\nconst drawCard=(frame,frameOffset)=>{if(frameOffset+this.cardOffsetX<width){let cWidth=this.cardWidth;if(frameOffset+this.cardOffsetX+cWidth>width){cWidth=width-(frameOffset+this.cardOffsetX);}if(frameStatus[frame]!==undefined){const cardColor=frameColor[frame]||this.cardColor;drawRect(ctx,frameOffset+this.cardOffsetX,offsetY+this.cardOffsetY,cWidth,this.itemCardHeight,cardColor);if(frameStatus[frame]===true&&frameOffset+this.perFrameWidth/2<width){drawCircle(ctx,frameOffset+this.perFrameWidth/2,offsetY+this.itemHeight/2,2,'#FFFFFF');}}if(frame===this._currentFrame&&selected){drawRectBorder(ctx,frameOffset+this.cardOffsetX,offsetY+this.cardOffsetY,cWidth,this.itemCardHeight,'#FFFFFF');}}};const drawRangeCards=(start,offset)=>{Array.from({length:5}).forEach((_,i)=>{const frame=start+i;if(frameStatus[frame]!==undefined||frame===this._currentFrame&&selected){const frameOffset=offset+this.perFrameWidth*i;drawCard(frame,frameOffset);}});};if(this._currentRangeIndex<=this._initialRangeIndex){// just draw all frames\nArray.from({length:this.frameCount}).forEach((_,i)=>{drawCard(i,this.perFrameWidth*i);});}else{let rangeStart=this._currentRangeStart;let rangeStartOffset=this._currentRangeStartOffset;while(rangeStartOffset+this.baseRangeWidth>=0&&rangeStart>=0){drawRangeCards(rangeStart,rangeStartOffset);rangeStart-=this.rangeFrames;rangeStartOffset-=this.baseRangeWidth;}rangeStart=this._currentRangeStart+this.rangeFrames;rangeStartOffset=this._currentRangeStartOffset+this.baseRangeWidth;while(rangeStartOffset<width&&rangeStart<this.frameCount){drawRangeCards(rangeStart,rangeStartOffset);rangeStart+=this.rangeFrames;rangeStartOffset+=this.baseRangeWidth;}}}else{const drawTextBlock=(startOffset,endOffset,text,blockColor,blockSelected)=>{if(endOffset>startOffset){const o=1*window.devicePixelRatio;const itemOffsetX=startOffset+o;const itemOffsetY=offsetY+this.itemTextBlockOffsetY;const blockWidth=endOffset-startOffset-o*2;drawRect(ctx,itemOffsetX,itemOffsetY,blockWidth,this.itemTextBlockHeight,blockColor);if(blockSelected){const currentFrameOffset=this._currentRangeStartOffset+(this.currentFrame-this._currentRangeStart)*this.perFrameWidth;drawRect(ctx,currentFrameOffset,itemOffsetY,this.perFrameWidth,this.itemTextBlockHeight,'#4A90E2');}const textOffsetX=itemOffsetX+o*2;const textOffsetY=itemOffsetY+o*4;const textWidth=blockWidth-o*4;drawText(ctx,text,textOffsetX,textOffsetY,'#FFFFFF',12,textWidth);}};const drawEndpointBlock=(startOffset,endOffset)=>{if(endOffset>=startOffset){const startOffsetX=startOffset+this.perFrameWidth/2;if(endOffset>startOffset){drawRect(ctx,startOffsetX,offsetY+this.itemEndpointBlockOffsetY,endOffset-startOffset-this.perFrameWidth,this.itemEndpointBlockHeight,color);}drawRhombus(ctx,startOffsetX,offsetY+this.itemHeight/2,6,'#4A90E2');}};const drawBlock=(startOffset,endOffset)=>{if(endOffset>startOffset){drawRect(ctx,startOffset,offsetY+this.itemBlockOffsetY,endOffset-startOffset,this.itemBlockHeight,color);}};const allBlocks=Object.values(this._itemBlocks[index]);allBlocks.forEach(block=>{const{startFrame,endFrame}=block;let startOffset=this._currentRangeStartOffset+(startFrame-this._currentRangeStart)*this.perFrameWidth;let endOffset=this._currentRangeStartOffset+(endFrame-this._currentRangeStart)*this.perFrameWidth;if(this._pendingEditing){if(block===this._pendingStartBlock){startOffset=this._pendingCursorOffset;}else if(block===this._pendingEndBlock){endOffset=this._pendingCursorOffset;}else if(index===this._hoveredItemIndex){const pendingStartFrame=this._pendingEndBlock?this._pendingEndBlock.startFrame:this._pendingStartBlock.startFrame;const pendingEndFrame=this._pendingStartBlock?this._pendingStartBlock.endFrame:this._pendingEndBlock.endFrame;if(startFrame>=pendingEndFrame){// blocks on the right\nif(this._pendingCursorOffset>startOffset){startOffset=this._pendingCursorOffset;if(this._pendingCursorOffset>endOffset){endOffset=this._pendingCursorOffset;}}}else if(endFrame<=pendingStartFrame){// blocks on the left\nif(this._pendingCursorOffset<endOffset){endOffset=this._pendingCursorOffset;if(this._pendingCursorOffset<startOffset){startOffset=this._pendingCursorOffset;}}}}}startOffset=Math.min(Math.max(startOffset,0),width);endOffset=Math.min(Math.max(endOffset,0),width);if(frameItemType===FrameItemType.TEXT){const blockColor=block.hovered?'#777B82':color;drawTextBlock(startOffset,endOffset,\"\".concat(frameStatus[startFrame]),blockColor,block.selected);}else if(frameItemType===FrameItemType.ENDPOINT){drawEndpointBlock(startOffset,endOffset);}else{drawBlock(startOffset,endOffset);}});}});if(type!=='cards'){// no need to draw vertical scroll bar when drawing cards\nconst visibleItemsCount=this.itemsTotalHeight/this.itemHeight;if(visibleItemsCount<this._allItems.length){// draw scroll y\nthis._scrollYHeight=visibleItemsCount/this._allItems.length*this.itemsTotalHeight;this._scrollYOffset=this._itemsOffset/(this._allItems.length*this.itemHeight)*this.itemsTotalHeight+this.scrollbarXContainerHeight;drawRoundedRect(ctx,width+this.scrollbarYOffsetX,this._scrollYOffset,this.scrollbarYWidth,this._scrollYHeight,6,scrollbarColor);}else{this._scrollYHeight=0;this._scrollYOffset=0;}}}/**\n   * draw invalid frame style\n   * @param ctx\n   */drawInvalidFrames(ctx){// draw invalid frames\nthis._invalidFrames.forEach(frameIndex=>{const offsetX=this.getOffsetByFrame(frameIndex);if(offsetX>=0){drawRect(ctx,offsetX,this.scrollbarXContainerHeight,Math.max(this.perFrameWidth,1*window.devicePixelRatio),this.itemsTotalHeight,'rgba(220, 70, 36, 0.3)');}});}/**\n   * draw frame hint (for current frame & hovered frame)\n   * @param ctx\n   * @param type\n   */drawFrameHint(ctx,type){const frame=type==='hover'?this._hoveredFrame:this._currentFrame;const shouldDraw=type!=='hover'||this._hoveredFrame!==this._currentFrame;if(shouldDraw){const offsetX=this.getOffsetByFrame(frame);if(offsetX>=0){if(this._currentRangeIndex===rangeFramesSet.length-1){// block\ndrawRect(ctx,offsetX,this.scrollbarXContainerHeight,this.perFrameWidth,this.itemsTotalHeight,'rgba(41, 44, 56, 0.4)');if(type==='hover'&&this._hoveredItemIndex>=0){var _this$_allItems$this$;const hoveredItem=this.items[(_this$_allItems$this$=this._allItems[this._hoveredItemIndex])===null||_this$_allItems$this$===void 0?void 0:_this$_allItems$this$.id];if((hoveredItem===null||hoveredItem===void 0?void 0:hoveredItem.showCards)||(hoveredItem===null||hoveredItem===void 0?void 0:hoveredItem.type)===FrameItemType.CARD||(hoveredItem===null||hoveredItem===void 0?void 0:hoveredItem.type)===FrameItemType.TEXT){const offsetY=this._hoveredItemIndex*this.itemHeight-this._itemsOffset+this.scrollbarXContainerHeight;drawRectBorder(ctx,offsetX+this.cardOffsetX,offsetY+this.cardOffsetY,this.cardWidth,this.itemCardHeight,'rgba(255, 255, 255, 0.4)');}}if(type!=='hover'){const selectedIndex=this._allItems.findIndex(i=>this.items[i.id].selected);const offsetY=selectedIndex*this.itemHeight-this._itemsOffset+this.scrollbarXContainerHeight;drawRectBorder(ctx,offsetX+this.cardOffsetX,offsetY+this.cardOffsetY,this.cardWidth,this.itemCardHeight,'#FFFFFF');}}else{// line\ndrawLine(ctx,offsetX+0.5,this.scrollbarXContainerHeight,offsetX+0.5,this.itemsTotalHeight+this.scrollbarXContainerHeight,type==='hover'?'rgba(255, 255, 255, 0.4)':'#34CBD1');}}}}/**\n   * draw frame scales\n   * @param ctx\n   */drawFrameScales(ctx){if(!this._scaleEnabled)return;const width=this.canvas.width-this.paddingRight;const offsetY=this.itemsTotalHeight+this.scrollbarXContainerHeight;const scaleWidth=this.perFrameWidth*this.rangeFrames;const scaleHeight=16*window.devicePixelRatio;const scaleHeightShort=4*window.devicePixelRatio;// draw scales top border\ndrawRect(ctx,0,offsetY,width,this.itemHeight,this.bgColor);drawLine(ctx,0,offsetY-1,width,offsetY-1,borderColor);if(this._currentRangeIndex<=this._initialRangeIndex){const rangeCount=this.frameCount/this.rangeFrames;const rangeWidth=width/rangeCount;if(rangeWidth>this.baseRangeWidth*5){for(let i=0;i<this.frameCount;i+=1){drawScale(ctx,i*this.perFrameWidth,offsetY,scaleWidth,scaleHeight,scaleHeightShort,i,false);}}else{for(let i=0;i<rangeCount;i+=1){drawScale(ctx,i*rangeWidth,offsetY,scaleWidth,scaleHeight,scaleHeightShort,i*this.rangeFrames);}}this._scrollXWidth=0;this._scrollXOffset=0;}else{let rangeStart=this._currentRangeStart;let rangeStartOffset=this._currentRangeStartOffset;while(rangeStartOffset+this.baseRangeWidth>=0&&rangeStart>=0){drawScale(ctx,rangeStartOffset,offsetY,scaleWidth,scaleHeight,scaleHeightShort,rangeStart);rangeStart-=this.rangeFrames;rangeStartOffset-=this.baseRangeWidth;}rangeStart=this._currentRangeStart+this.rangeFrames;rangeStartOffset=this._currentRangeStartOffset+this.baseRangeWidth;while(rangeStartOffset<width&&rangeStart<this.frameCount){drawScale(ctx,rangeStartOffset,offsetY,scaleWidth,scaleHeight,scaleHeightShort,rangeStart);rangeStart+=this.rangeFrames;rangeStartOffset+=this.baseRangeWidth;}}// draw scrollbar\nthis._scrollXWidth=Math.max(Math.ceil(width/this.perFrameWidth/this.frameCount*width),42);this._scrollXOffset=(this._currentRangeStart-this._currentRangeStartOffset/this.perFrameWidth)/this.frameCount*width;// scrollbar container background\ndrawRect(ctx,0,0,width,this.scrollbarXContainerHeight,scrollbarContainerColor);drawLine(ctx,0,this.scrollbarXContainerHeight-1,width,this.scrollbarXContainerHeight-1,borderColor);// scrollbar thumbnail\nconst scrollbarXOffsetY=(this.scrollbarXContainerHeight-this.scrollbarXHeight)/2-1;drawRoundedRect(ctx,this._scrollXOffset,scrollbarXOffsetY,this._scrollXWidth,this.scrollbarXHeight,2,scrollbarColor);const o=2*window.devicePixelRatio;const h=this.scrollbarXHeight-o*4;drawRect(ctx,this._scrollXOffset+o,scrollbarXOffsetY+o*2,o,h,scrollbarContainerColor);drawRect(ctx,this._scrollXOffset+this._scrollXWidth-o*2,scrollbarXOffsetY+o*2,o,h,scrollbarContainerColor);// draw current frame\nconst frameOffset=this._currentFrame/this.frameCount*width;drawLine(ctx,frameOffset+0.5,0,frameOffset+0.5,this.scrollbarXContainerHeight,'#34CBD1');}/**\n   * update frame tip text and posistion\n   */updateFrameTip(){if(this._hoveredFrame>=0){this.frameTip.innerText=\"\".concat(this._hoveredFrame+1);const{width}=this.frameTip.getBoundingClientRect();const frameOffset=this.getOffsetByFrame(this._hoveredFrame)/window.devicePixelRatio;let offset=frameOffset-width/2;if(this.currentRangeIndex===rangeFramesSet.length-1){offset+=this.perFrameWidth/2/window.devicePixelRatio;}this.frameTip.style.left=\"\".concat(offset,\"px\");this.frameTip.style.display='block';}else{this.frameTip.style.display='none';}}/**\n   * update items scroll and emit event\n   */updateItemsScroll(itemsOffset){const allItemsHeight=this._allItems.length*this.itemHeight;if(allItemsHeight<=this.itemsContainerHeight){// not scrollable\nreturn;}this._itemsOffset=itemsOffset;if(this._itemsOffset<0){this._itemsOffset=0;}else if(this._itemsOffset>allItemsHeight-this.itemsTotalHeight){this._itemsOffset=allItemsHeight-this.itemsTotalHeight;}this.drawFrames();this.emit(EventAction.ITEMS_OFFSET_CHANGE,this._itemsOffset/window.devicePixelRatio);}/**\n   * get frame by clientX\n   * @param clientX\n   * @returns\n   */getFrameByClientX(clientX){const{left}=this.canvas.getBoundingClientRect();const offset=(clientX-left)*window.devicePixelRatio;let frame=this._currentRangeStart+Math.floor((offset-this._currentRangeStartOffset)/this.perFrameWidth);if(frame>=this.frameCount){frame=this.frameCount-1;}else if(frame<0){frame=0;}return frame;}/**\n   * get item index by clientY\n   * @param clientY\n   * @returns\n   */getItemIndexByClientY(clientY){const{top}=this.canvas.getBoundingClientRect();const offset=(clientY-top)*window.devicePixelRatio;const index=Math.floor((offset+this._itemsOffset-this.scrollbarXContainerHeight)/this.itemHeight);if(index>Object.keys(this._items).length-1){return-1;}return index;}/**\n   * get offset by frame index\n   * @param frame\n   * @param checkOutside\n   * @returns\n   */getOffsetByFrame(frame){let checkOutside=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;const offset=this._currentRangeStartOffset+(frame-this._currentRangeStart)*this.perFrameWidth;if(checkOutside&&(offset<0||offset>this.canvas.width-this.paddingRight)){return-1;}return offset;}/**\n   * check hover item\n   * @param clientX\n   * @param clientY\n   * @returns\n   */getMouseHover(clientX,clientY){const{width:canvasWidth,height:canvasHeight}=this.canvas;const{left,top,width,height}=this.canvas.getBoundingClientRect();const offsetX=clientX-left;const offsetY=clientY-top;if(offsetX/width>=this._scrollXOffset/canvasWidth&&offsetX/width<=(this._scrollXOffset+this._scrollXWidth)/canvasWidth&&offsetY/height<=this.scrollbarXContainerHeight/canvasHeight){return HoverType.SCROLLBAR_X;}if(offsetY/height<=this.scrollbarXContainerHeight/canvasHeight){return HoverType.SCROLLBAR_X_CONTAINER;}const scrollbarOffsetX=canvasWidth-this.paddingRight+this.scrollbarYOffsetX;if(offsetX/width>=scrollbarOffsetX/canvasWidth&&offsetX/width<=(scrollbarOffsetX+this.scrollbarYWidth)/canvasWidth&&offsetY/height>=this._scrollYOffset/canvasHeight&&offsetY/height<=(this._scrollYOffset+this._scrollYHeight)/canvasHeight){return HoverType.SCROLLBAR_Y;}if(offsetX*window.devicePixelRatio>canvasWidth-this.paddingRight&&offsetX*window.devicePixelRatio<=canvasWidth){return HoverType.SCROLLBAR_Y_CONTAINER;}return undefined;}/**\n   * set cursor for progress bar\n   * @param cursor\n   */setCursor(cursor){if(this.canvas.style.cursor!==cursor){this.canvas.style.cursor=cursor;}}/**\n   * unselect block\n   */unselectBlock(){if(this._selectedBlock){this._selectedBlock.selected=false;this._selectedBlock=null;this.drawFrames();}}/**\n   * focus to specific frame if not in the progress bar view\n   * @param frame\n   */focusFrame(frame){const offset=this.getOffsetByFrame(frame,false);const right=this.canvas.width-this.paddingRight-this.perFrameWidth;if(offset<0){// move left\nthis._baseOffsetFrame=frame;this._baseOffset=this.perFrameWidth;}else if(offset>right){// move right\nthis._baseOffsetFrame=frame;this._baseOffset=right-this.perFrameWidth;}this.drawFrames();}}","map":{"version":3,"names":["EventEmitter","cloneDeep","drawLine","drawRect","drawRectBorder","drawRoundedRect","drawCircle","drawScale","drawText","drawRhombus","Cursor","FrameItemType","EventAction","HoverType","rangeFramesSet","scrollbarColor","scrollbarContainerColor","borderColor","FramesRenderer","scrollable","_scrollable","shouldUpdate","setupCanvas","invalidFrames","frames","_invalidFrames","drawFrames","items","_items","originItemsLen","Object","keys","length","_allItems","_itemBlocks","itemKeys","i","itemKey","id","index","frameStatus","type","draggable","statusFrames","map","f","Number","lastStartIndex","j","startFrame","endFrame","framesBreak","framesChange","TEXT","ENDPOINT","value","hovered","selected","height","itemHeight","itemsContainerHeight","fixHeight","currentFrame","_currentFrame","frameIndex","focusFrame","currentRangeIndex","_currentRangeIndex","rangeIndex","Math","min","max","_initialRangeIndex","itemsOffset","_itemsOffset","o","offset","window","devicePixelRatio","_itemHeight","framesHeight","_framesHeight","baseRangeWidth","paddingRight","scrollbarXContainerHeight","scrollbarXHeight","scrollbarYWidth","scrollbarYOffsetX","itemBlockHeight","itemBlockOffsetY","itemTextBlockHeight","itemTextBlockOffsetY","itemEndpointBlockHeight","itemEndpointBlockOffsetY","itemCardHeight","itemsTotalHeight","rangeFrames","perFrameWidth","canvas","width","frameCount","cardWidth","cardOffsetX","cardOffsetY","constructor","container","bgColor","itemColor","itemSelectedColor","cardColor","scaleEnabled","arguments","undefined","frameTip","_hoveredFrame","_hoveredItemIndex","_hoveredBlock","_selectedBlock","_pendingStartBlock","_pendingEndBlock","_pendingEditing","_pendingCursorOffset","_currentRangeStart","_currentRangeStartOffset","_baseOffset","_baseOffsetFrame","_isScrollXDown","_scrollXDownBaseOffsetFrame","_scrollXDownClientX","_scrollXWidth","_scrollXOffset","_scrollYHeight","_scrollYOffset","_isScrollYDown","_scrollYDownItemsOffset","_scrollYDownClientY","_scaleEnabled","getBoundingClientRect","originCanvasWidth","emit","HEIGHT_CHANGE","setupRangeIndexes","wheel","e","altKey","zoom","updateItemsScroll","deltaY","hover","getMouseHover","clientX","clientY","SCROLLBAR_Y_CONTAINER","SCROLLBAR_Y","left","getFrameByClientX","VISIBLE_FRAMES_UPDATE","_","slice","canvasMove","canvasDown","SCROLLBAR_X","BLOCK_HOVERED","CURRENT_FRAME_CHANGE","buttons","hoveredItemY","BLOCK_SELECTED","updateFrameTip","setCursor","DEFAULT","canvasLeave","POINTER","SCROLLBAR_X_CONTAINER","getItemIndexByClientY","cursorOffset","threshold","forEach","blocks","values","item","frameOffset","abs","COL_RESIZE","cursorMove","floor","cursorUp","_this$_pendingStartBl","_this$_pendingEndBloc","frame","round","updatedFrameStatus","pendingStartFrame","pendingEndFrame","FRAME_STATUS_CHANGED","style","position","document","createElement","display","appendChild","background","padding","borderRadius","fontSize","color","lineHeight","top","oncontextmenu","preventDefault","addEventListeners","updateItemFrameStatus","addEventListener","matchMedia","removeEventListeners","removeEventListener","update","estimatedRangeFrames","ctx","getContext","save","clearRect","firstFrameOffset","lastFrameOffset","drawFrameItems","drawFrameScales","restore","drawItems","drawFrameHint","drawInvalidFrames","filter","_ref","showCards","CARD","_ref2","_ref3","frameColor","frameItemType","itemOffset","offsetY","drawCard","cWidth","drawRangeCards","start","Array","from","rangeStart","rangeStartOffset","drawTextBlock","startOffset","endOffset","text","blockColor","blockSelected","itemOffsetX","itemOffsetY","blockWidth","currentFrameOffset","textOffsetX","textOffsetY","textWidth","drawEndpointBlock","startOffsetX","drawBlock","allBlocks","block","concat","visibleItemsCount","offsetX","getOffsetByFrame","shouldDraw","_this$_allItems$this$","hoveredItem","selectedIndex","findIndex","scaleWidth","scaleHeight","scaleHeightShort","rangeCount","rangeWidth","ceil","scrollbarXOffsetY","h","innerText","allItemsHeight","ITEMS_OFFSET_CHANGE","checkOutside","canvasWidth","canvasHeight","scrollbarOffsetX","cursor","unselectBlock","right"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/libs/FramesRenderer.ts"],"sourcesContent":["/* eslint-disable class-methods-use-this */\nimport EventEmitter from 'eventemitter3';\nimport { cloneDeep } from 'lodash';\nimport { drawLine, drawRect, drawRectBorder, drawRoundedRect, drawCircle, drawScale, drawText, drawRhombus } from '../utils/canvas';\nimport Cursor from '../components/common/Cursor';\n\nexport interface FrameItem {\n  frameStatus: {\n    [frameIndex: number]: boolean | string; // boolean true means key frame, string used in other cases\n  };\n  frameColor?: {\n    [frameIndex: number]: string;\n  };\n  color: string;\n  type?: FrameItemType;\n  showCards?: boolean;\n  selected?: boolean;\n  draggable?: boolean;\n}\n\nexport interface FrameBlock {\n  startFrame: number;\n  endFrame: number;\n  value: boolean | string;\n  hovered: boolean;\n  selected: boolean;\n  draggable: boolean;\n}\n\nexport enum FrameItemType {\n  DEFAULT = 'default',\n  CARD = 'card',\n  TEXT = 'text',\n  ENDPOINT = 'endpoint',\n}\n\nexport enum EventAction {\n  HEIGHT_CHANGE = 'height-change',\n  VISIBLE_FRAMES_UPDATE = 'visible-frames-update',\n  CURRENT_FRAME_CHANGE = 'current-frame-change',\n  ITEMS_OFFSET_CHANGE = 'items-offset-change',\n  BLOCK_HOVERED = 'block-hovered',\n  BLOCK_SELECTED = 'block-selected',\n  FRAME_STATUS_CHANGED = 'frame-status-changed',\n}\n\nenum HoverType {\n  SCROLLBAR_X = 'scrollbarX',\n  SCROLLBAR_Y = 'scrollbarY',\n  SCROLLBAR_X_CONTAINER = 'scrollbarXContainer',\n  SCROLLBAR_Y_CONTAINER = 'scrollbarYContainer',\n}\n\nconst rangeFramesSet = [1000, 500, 200, 100, 50, 20, 10, 5]; // set of supported frames per range\nconst scrollbarColor = '#777B82';\nconst scrollbarContainerColor = '#22262D';\nconst borderColor = '#484C59';\n\nexport default class FramesRenderer extends EventEmitter {\n  /**\n   * canvas container\n   * @member\n   */\n  container: HTMLDivElement;\n\n  /**\n   * canvas dom element\n   * @member\n   */\n  canvas: HTMLCanvasElement;\n\n  /**\n   * frame tip element\n   * @member\n   */\n  frameTip: HTMLDivElement;\n\n  /**\n   * frames count\n   * @member\n   */\n  frameCount: number;\n\n  /**\n   * frames background color\n   * @member\n   */\n  bgColor: string;\n\n  /**\n   * item default color\n   * @member\n   */\n  itemColor: string;\n\n  /**\n   * item selected color\n   * @member\n   */\n  itemSelectedColor: string;\n\n  /**\n   * card color\n   * @member\n   */\n  cardColor: string;\n\n  /**\n   * is frames container height fix\n   * @member\n   */\n  fixHeight = false;\n\n  /**\n   * scrollable\n   * @private\n   */\n  private _scrollable = false;\n\n  /**\n   * get scrollable\n   * @getter\n   */\n  get scrollable() {\n    return this._scrollable;\n  }\n\n  /**\n   * set scrollable\n   * @setter\n   */\n  set scrollable(scrollable: boolean) {\n    const shouldUpdate = this._scrollable !== scrollable;\n    this._scrollable = scrollable;\n    if (shouldUpdate) {\n      this.setupCanvas();\n    }\n  }\n\n  /**\n   * invalid frames\n   */\n  private _invalidFrames: number[] = [];\n\n  /**\n   * set invalid frames\n   * @setter\n   */\n  set invalidFrames(frames: number[]) {\n    this._invalidFrames = [...frames];\n    this.drawFrames();\n  }\n\n  /**\n   * frame items\n   * @private\n   */\n  private _items: { [id: string]: FrameItem } = {};\n\n  /**\n   * get frame items\n   * @getter\n   */\n  get items() {\n    return this._items;\n  }\n\n  /**\n   * set frame items\n   * @setter\n   */\n  set items(items: { [id: string]: FrameItem }) {\n    const originItemsLen = Object.keys(this._items).length;\n    this._items = cloneDeep(items);\n    this._allItems = [];\n    this._itemBlocks = [];\n\n    const itemKeys = Object.keys(this._items);\n    for (let i = 0; i < itemKeys.length; i += 1) {\n      const itemKey = itemKeys[i];\n      this._allItems[i] = { id: itemKey, index: i };\n      this._itemBlocks[i] = {};\n\n      const { frameStatus = {}, type, draggable = false } = this._items[itemKey];\n      const statusFrames = Object.keys(frameStatus).map((f) => Number(f));\n      let lastStartIndex = 0;\n      for (let j = 0; j < statusFrames.length; j += 1) {\n        const startFrame = statusFrames[lastStartIndex];\n        const endFrame = statusFrames[j] + 1;\n        const framesBreak = j === statusFrames.length - 1 || statusFrames[j + 1] - statusFrames[j] > 1;\n        const framesChange = frameStatus[endFrame] !== frameStatus[startFrame];\n        if (framesBreak || ((type === FrameItemType.TEXT || type === FrameItemType.ENDPOINT) && framesChange)) {\n          this._itemBlocks[i][startFrame] = {\n            startFrame,\n            endFrame,\n            value: frameStatus[startFrame],\n            hovered: false,\n            selected: false,\n            draggable,\n          };\n          lastStartIndex = j + 1;\n        }\n      }\n    }\n\n    const height = Object.keys(this._items).length * this.itemHeight;\n    if (height > this.itemsContainerHeight && !this.scrollable) {\n      this._scrollable = true;\n      this.setupCanvas();\n    } else if (height <= this.itemsContainerHeight && this.scrollable && !this.fixHeight) {\n      this._scrollable = false;\n      this.setupCanvas();\n    } if (originItemsLen !== Object.keys(items).length && !this.scrollable) {\n      // when items length changes, and not scrollable, need resize canvas and redraw\n      this.setupCanvas();\n    } else {\n      // just redraw\n      this.drawFrames();\n    }\n  }\n\n  /**\n   * all items with id and actual index\n   * @private\n   */\n  private _allItems: { id: string; index: number }[] = [];\n\n  /**\n   * all item blocks\n   * @private\n   */\n  private _itemBlocks: {\n    [startFrame: number]: FrameBlock;\n  }[] = [];\n\n  /**\n   * current frame index\n   * @private\n   */\n  private _currentFrame = 0;\n\n  /**\n   * get current frame\n   * @getter\n   */\n  get currentFrame() {\n    return this._currentFrame;\n  }\n\n  /**\n   * set current frame\n   * @setter\n   */\n  set currentFrame(frameIndex: number) {\n    const shouldUpdate = this._currentFrame !== frameIndex;\n    this._currentFrame = frameIndex;\n    if (shouldUpdate) {\n      this.focusFrame(frameIndex);\n    }\n  }\n\n  /**\n   * hovered frame index\n   * @private\n   */\n  private _hoveredFrame = -1;\n\n  /**\n   * hovered item index\n   * @private\n   */\n  private _hoveredItemIndex = -1;\n\n  /**\n   * hovered block\n   */\n  private _hoveredBlock: FrameBlock | null = null;\n\n  /**\n   * selected block\n   */\n  private _selectedBlock: FrameBlock | null = null;\n\n  /**\n   * pending block matches start frame\n   */\n  _pendingStartBlock: FrameBlock | null = null;\n\n  /**\n   * pending block matches end frame\n   */\n  _pendingEndBlock: FrameBlock | null = null;\n\n  /**\n   * is editing pending blocks by dragging\n   */\n  _pendingEditing = false;\n\n  /**\n   * cursor offset when editing pending blocks\n   */\n  _pendingCursorOffset = -1;\n\n  /**\n   * initial calculated range index (largest frames per range)\n   * @private\n   */\n  private _initialRangeIndex = 0;\n\n  /**\n   * current range index in the rangeFramesSet\n   * @private\n   */\n  private _currentRangeIndex = 0;\n\n  /**\n   * get current range index\n   * @getter\n   */\n  get currentRangeIndex() {\n    return this._currentRangeIndex;\n  }\n\n  /**\n   * set current range index\n   * @setters\n   */\n  set currentRangeIndex(index: number) {\n    const rangeIndex = Math.min(Math.max(index, this._initialRangeIndex), rangeFramesSet.length - 1);\n    const shouldUpdate = this._currentRangeIndex !== rangeIndex;\n    this._currentRangeIndex = rangeIndex;\n    if (shouldUpdate) {\n      this.drawFrames();\n    }\n  }\n\n  /**\n   * current range start frame (used for drawing)\n   * @private\n   */\n  private _currentRangeStart = 0;\n\n  /**\n   * current range start frame offset (used for drawing)\n   * @private\n   */\n  private _currentRangeStartOffset = 0;\n\n  /**\n   * current offset in canvas when zooming, dragging and so on\n   * @private\n   */\n  private _baseOffset = 0;\n\n  /**\n   * current offset frame index in canvas when zooming, dragging and so on\n   * @private\n   */\n  private _baseOffsetFrame = 0;\n\n  /**\n   * is mouse down on horizontal scrollbar\n   * @private\n   */\n  private _isScrollXDown = false;\n\n  /**\n   * base offset when mouse down on horizontal scrollbar\n   * @private\n   */\n  private _scrollXDownBaseOffsetFrame = 0;\n\n  /**\n   * client X when mouse down on horizontal scrollbar\n   * @private\n   */\n  private _scrollXDownClientX = 0;\n\n  /**\n   * horizontal scrollbar width\n   * @private\n   */\n  private _scrollXWidth = 0;\n\n  /**\n   * horizontal scrollbar offset\n   * @private\n   */\n  private _scrollXOffset = 0;\n\n  /**\n   * items offset\n   * @private\n   */\n  private _itemsOffset = 0;\n\n  /**\n   * get items offset\n   * @getter\n   */\n  get itemsOffset() {\n    return this._itemsOffset;\n  }\n\n  /**\n   * set items offset\n   * @setter\n   */\n  set itemsOffset(o: number) {\n    const offset = o * window.devicePixelRatio;\n    const shouldUpdate = this._itemsOffset !== offset;\n    this._itemsOffset = offset;\n    if (shouldUpdate) {\n      this.drawFrames();\n    }\n  }\n\n  /**\n   * vertical scrollbar height\n   * @private\n   */\n  private _scrollYHeight = 0;\n\n  /**\n   * vertical scrollbar offset\n   * @private\n   */\n  private _scrollYOffset = 0;\n\n  /**\n   * is mouse down on vertical scrollbar\n   * @private\n   */\n  private _isScrollYDown = false;\n\n  /**\n   * items offset when mouse down on vertical scrollbar\n   * @private\n   */\n  private _scrollYDownItemsOffset = 0;\n\n  /**\n   * client y when mouse down on vertical scrollbar\n   * @private\n   */\n  private _scrollYDownClientY = 0;\n\n  /**\n   * item height\n   * @private\n   */\n  private _itemHeight = 20;\n\n  /**\n   * get item height\n   */\n  get itemHeight() {\n    return this._itemHeight * window.devicePixelRatio;\n  }\n\n  /**\n   * frames height\n   * @private\n   */\n  private _framesHeight = 44;\n\n  /**\n   * get frames height\n   */\n  get framesHeight() {\n    return this._framesHeight * window.devicePixelRatio;\n  }\n\n  /**\n   * frames scale enable\n   */\n  private _scaleEnabled = true;\n\n  /**\n   * base range width\n   */\n  get baseRangeWidth() {\n    return 18 * 5 * window.devicePixelRatio;\n  }\n\n  /**\n   * canvas padding right\n   */\n  get paddingRight() {\n    return 18 * window.devicePixelRatio;\n  }\n\n  /**\n   * horizontal scrollbar container height\n   */\n  get scrollbarXContainerHeight() {\n    return 22 * window.devicePixelRatio;\n  }\n\n  /**\n   * horizontal scrollbar height\n   */\n  get scrollbarXHeight() {\n    return 16 * window.devicePixelRatio;\n  }\n\n  /**\n   * vertical scrollbar width\n   */\n  get scrollbarYWidth() {\n    return 10 * window.devicePixelRatio;\n  }\n\n  /**\n   * vertical scrollbar offset x (from items container right)\n   */\n  get scrollbarYOffsetX() {\n    return 4 * window.devicePixelRatio;\n  }\n\n  /**\n   * item block height\n   */\n  get itemBlockHeight() {\n    return 12 * window.devicePixelRatio;\n  }\n\n  /**\n   * item block offset y (in the item container)\n   */\n  get itemBlockOffsetY() {\n    return 4 * window.devicePixelRatio;\n  }\n\n  /**\n   * item text block height\n   */\n  get itemTextBlockHeight() {\n    return 18 * window.devicePixelRatio;\n  }\n\n  /**\n   * item text block offset y (in the item container)\n   */\n  get itemTextBlockOffsetY() {\n    return 1 * window.devicePixelRatio;\n  }\n\n  /**\n   * item endpoint block height\n   */\n  get itemEndpointBlockHeight() {\n    return 4 * window.devicePixelRatio;\n  }\n\n  /**\n   * item text block offset y (in the item container)\n   */\n  get itemEndpointBlockOffsetY() {\n    return 8 * window.devicePixelRatio;\n  }\n\n  /**\n   * item card height\n   */\n  get itemCardHeight() {\n    return 16 * window.devicePixelRatio;\n  }\n\n  /**\n   * items container height (when not collapsed)\n   */\n  get itemsContainerHeight() {\n    return 275 * window.devicePixelRatio;\n  }\n\n  /**\n   * frames container height\n   */\n  get itemsTotalHeight() {\n    if (this.scrollable) {\n      return this.itemsContainerHeight;\n    }\n    return Object.keys(this._items).length * this.itemHeight;\n  }\n\n  /**\n   * current range frames\n   */\n  get rangeFrames() {\n    return rangeFramesSet[this._currentRangeIndex];\n  }\n\n  /**\n   * current per frame width\n   */\n  get perFrameWidth() {\n    return this._currentRangeIndex <= this._initialRangeIndex\n      ? (this.canvas.width - this.paddingRight) / this.frameCount\n      : this.baseRangeWidth / this.rangeFrames;\n  }\n\n  /**\n   * current card width\n   */\n  get cardWidth() {\n    return this.perFrameWidth - this.cardOffsetX * 2;\n  }\n\n  /**\n   * card offset x (base on item)\n   */\n  get cardOffsetX() {\n    return 1 * window.devicePixelRatio;\n  }\n\n  /**\n   * card offset y (base on item)\n   */\n  get cardOffsetY() {\n    return (this.itemHeight - this.itemCardHeight) / 2 - 1;\n  }\n\n  /**\n   * constructor\n   * @param canvas\n   * @param frameCount\n   * @param options\n   */\n  constructor(\n    container: HTMLDivElement,\n    frameCount: number,\n    { itemHeight, framesHeight, bgColor, itemColor, itemSelectedColor, cardColor, scaleEnabled, fixHeight }: {\n      itemHeight?: number,\n      framesHeight?: number,\n      bgColor?: string,\n      itemColor?: string,\n      itemSelectedColor?: string,\n      cardColor?: string,\n      scaleEnabled?: boolean,\n      fixHeight?: boolean,\n    } = {},\n  ) {\n    super();\n    this._scaleEnabled = scaleEnabled === undefined ? true : scaleEnabled;\n    this.container = container;\n    this.frameCount = frameCount;\n    if (itemHeight) {\n      this._itemHeight = itemHeight;\n    }\n    if (framesHeight) {\n      this._framesHeight = framesHeight;\n    }\n    this.bgColor = bgColor || '#3D424D';\n    this.itemColor = itemColor || '#343846';\n    this.itemSelectedColor = itemSelectedColor || '#2F3340';\n    this.cardColor = cardColor || '#5C5F6B';\n    this.fixHeight = fixHeight || false;\n\n    this.container.style.position = 'relative';\n    // create canvas dom\n    this.canvas = document.createElement('canvas');\n    this.canvas.style.width = '100%';\n    this.canvas.style.height = '100%';\n    this.canvas.style.display = 'block';\n    this.container.appendChild(this.canvas);\n    // create tip dom\n    this.frameTip = document.createElement('div');\n    this.frameTip.style.position = 'absolute';\n    this.frameTip.style.background = '#34CBD1';\n    this.frameTip.style.padding = '0 2px';\n    this.frameTip.style.borderRadius = '2px';\n    this.frameTip.style.fontSize = '10px';\n    this.frameTip.style.color = '#252935';\n    this.frameTip.style.lineHeight = '12px';\n    this.frameTip.style.height = '12px';\n    this.frameTip.style.top = '8px';\n    this.frameTip.style.display = 'none';\n    this.container.appendChild(this.frameTip);\n    this.container.oncontextmenu = (e) => e.preventDefault();\n\n    this.addEventListeners();\n    this.setupCanvas();\n  }\n\n  /**\n   * update one item's frame status\n   * @param id\n   * @param frameStatus\n   */\n  updateItemFrameStatus(id: string, frameStatus: { [frameIndex: number]: boolean }) {\n    if (this._items[id]) {\n      this._items[id].frameStatus = cloneDeep(frameStatus);\n      this.drawFrames();\n    }\n  }\n\n  /**\n   * add event listeners\n   */\n  addEventListeners() {\n    document.addEventListener('mousemove', this.cursorMove);\n    document.addEventListener('mouseup', this.cursorUp);\n    window.addEventListener('resize', this.setupCanvas);\n    window.matchMedia('screen and (min-resolution: 2dppx)').addEventListener('change', this.setupCanvas);\n    this.canvas.addEventListener('wheel', this.wheel);\n    this.canvas.addEventListener('mousedown', this.canvasDown);\n    this.canvas.addEventListener('mousemove', this.canvasMove);\n    this.canvas.addEventListener('mouseleave', this.canvasLeave);\n  }\n\n  /**\n   * remove event listeners\n   */\n  removeEventListeners() {\n    document.removeEventListener('mousemove', this.cursorMove);\n    document.removeEventListener('mouseup', this.cursorUp);\n    window.removeEventListener('resize', this.setupCanvas);\n    window.matchMedia('screen and (min-resolution: 2dppx)').removeEventListener('change', this.setupCanvas);\n    this.canvas.removeEventListener('wheel', this.wheel);\n    this.canvas.removeEventListener('mousedown', this.canvasDown);\n    this.canvas.removeEventListener('mousemove', this.canvasMove);\n    this.canvas.removeEventListener('mouseleave', this.canvasLeave);\n  }\n\n  /**\n   * set up canvas size\n   */\n  setupCanvas = () => {\n    const { width } = this.canvas.getBoundingClientRect();\n    const originCanvasWidth = this.canvas.width;\n    this.canvas.width = width * window.devicePixelRatio;\n    this.canvas.height = this.itemsTotalHeight + this.framesHeight;\n    this.emit(EventAction.HEIGHT_CHANGE, this.canvas.height / window.devicePixelRatio);\n\n    this.setupRangeIndexes(originCanvasWidth !== this.canvas.width);\n    this.drawFrames();\n  };\n\n  /**\n   * calculate initial range index\n   */\n  setupRangeIndexes(update: boolean) {\n    if (update) {\n      const estimatedRangeFrames = (this.frameCount / (this.canvas.width - this.paddingRight)) * this.baseRangeWidth;\n      let rangeIndex = 0;\n      while (rangeFramesSet[rangeIndex] > estimatedRangeFrames && rangeIndex < rangeFramesSet.length) {\n        rangeIndex += 1;\n      }\n      this._initialRangeIndex = rangeIndex > 0 ? rangeIndex - 1 : 0;\n      this._currentRangeIndex = this._initialRangeIndex;\n    }\n    this.emit(\n      EventAction.VISIBLE_FRAMES_UPDATE,\n      this._currentRangeIndex,\n      rangeFramesSet.map((_, i) => i).slice(this._initialRangeIndex),\n    );\n  }\n\n  /**\n   * draw frames\n   */\n  drawFrames() {\n    const ctx = this.canvas.getContext('2d');\n    if (ctx) {\n      ctx.save();\n\n      // clear canvas\n      const { width, height } = this.canvas;\n      ctx.clearRect(0, 0, width, height);\n\n      // calc current range\n      this._currentRangeStart = Math.floor(this._baseOffsetFrame / this.rangeFrames) * this.rangeFrames;\n      if (this._currentRangeStart === 0) {\n        // reset offset to 0\n        this._currentRangeStartOffset = 0;\n      } else {\n        this._currentRangeStartOffset = this._baseOffset - (this._baseOffsetFrame - this._currentRangeStart) * this.perFrameWidth;\n        const firstFrameOffset = this._baseOffset - this._baseOffsetFrame * this.perFrameWidth;\n        const lastFrameOffset = this._baseOffset + (this.frameCount - this._baseOffsetFrame) * this.perFrameWidth;\n        if (firstFrameOffset > 0) {\n          this._currentRangeStartOffset -= firstFrameOffset;\n        } else if (lastFrameOffset < (width - this.paddingRight)) {\n          this._currentRangeStartOffset += width - this.paddingRight - lastFrameOffset;\n        }\n      }\n\n      this.drawFrameItems(ctx);\n      this.drawFrameScales(ctx);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n   * draw frame items\n   * @param ctx\n   */\n  drawFrameItems(ctx: CanvasRenderingContext2D) {\n    if (this._currentRangeIndex === rangeFramesSet.length - 1) {\n      // block cursor & cards\n      this.drawItems(ctx, 'blocks');\n      this.drawFrameHint(ctx);\n      this.drawItems(ctx, 'cards');\n      this.drawInvalidFrames(ctx);\n      this.drawFrameHint(ctx, 'hover');\n    } else {\n      // line cursor & blocks\n      this.drawItems(ctx);\n      this.drawFrameHint(ctx);\n      this.drawInvalidFrames(ctx);\n      this.drawFrameHint(ctx, 'hover');\n    }\n  }\n\n  /**\n   * draw items\n   * @param ctx\n   * @param type empty means all items\n   */\n  drawItems(ctx: CanvasRenderingContext2D, type?: string) {\n    let items = this._allItems;\n    if (type === 'blocks') {\n      items = items.filter(({ id }) => !this._items[id].showCards && this._items[id].type !== FrameItemType.CARD);\n    } else if (type === 'cards') {\n      items = items.filter(({ id }) => this._items[id].showCards || this._items[id].type === FrameItemType.CARD);\n    }\n\n    const width = this.canvas.width - this.paddingRight;\n    items.forEach(({ id, index }) => {\n      const { frameStatus = {}, frameColor = {}, color, type: frameItemType, showCards, selected } = this._items[id];\n      const itemOffset = index * this.itemHeight;\n      if ((itemOffset + this.itemHeight) <= this._itemsOffset || (itemOffset - this._itemsOffset) >= this.itemsTotalHeight) {\n        // out of container\n        return;\n      }\n\n      const height = this.itemHeight;\n      const offsetY = itemOffset - this._itemsOffset + this.scrollbarXContainerHeight;\n\n      // draw background\n      let bgColor = this.itemColor;\n      if (frameItemType === FrameItemType.TEXT && this._hoveredItemIndex === index) {\n        // text block hovered\n        bgColor = this.itemSelectedColor;\n      } else if (selected) {\n        bgColor = this.itemSelectedColor;\n      }\n      drawRect(ctx, 0, offsetY, width, height, bgColor);\n      // draw bottom line\n      drawLine(ctx, 0, offsetY + height - 1, width, offsetY + height - 1, borderColor);\n\n      if ((showCards || frameItemType === FrameItemType.CARD) && this._currentRangeIndex === rangeFramesSet.length - 1) {\n        // draw cards\n        const drawCard = (frame: number, frameOffset: number) => {\n          if (frameOffset + this.cardOffsetX < width) {\n            let cWidth = this.cardWidth;\n            if (frameOffset + this.cardOffsetX + cWidth > width) {\n              cWidth = width - (frameOffset + this.cardOffsetX);\n            }\n            if (frameStatus[frame] !== undefined) {\n              const cardColor = frameColor[frame] || this.cardColor;\n              drawRect(ctx, frameOffset + this.cardOffsetX, offsetY + this.cardOffsetY, cWidth, this.itemCardHeight, cardColor);\n              if (frameStatus[frame] === true && frameOffset + this.perFrameWidth / 2 < width) {\n                drawCircle(ctx, frameOffset + this.perFrameWidth / 2, offsetY + this.itemHeight / 2, 2, '#FFFFFF');\n              }\n            }\n            if (frame === this._currentFrame && selected) {\n              drawRectBorder(ctx, frameOffset + this.cardOffsetX, offsetY + this.cardOffsetY, cWidth, this.itemCardHeight, '#FFFFFF');\n            }\n          }\n        };\n        const drawRangeCards = (start: number, offset: number) => {\n          Array.from({ length: 5 }).forEach((_, i) => {\n            const frame = start + i;\n            if (frameStatus[frame] !== undefined || (frame === this._currentFrame && selected)) {\n              const frameOffset = offset + this.perFrameWidth * i;\n              drawCard(frame, frameOffset);\n            }\n          });\n        };\n\n        if (this._currentRangeIndex <= this._initialRangeIndex) {\n          // just draw all frames\n          Array.from({ length: this.frameCount }).forEach((_, i) => {\n            drawCard(i, this.perFrameWidth * i);\n          });\n        } else {\n          let rangeStart = this._currentRangeStart;\n          let rangeStartOffset = this._currentRangeStartOffset;\n          while ((rangeStartOffset + this.baseRangeWidth) >= 0 && rangeStart >= 0) {\n            drawRangeCards(rangeStart, rangeStartOffset);\n            rangeStart -= this.rangeFrames;\n            rangeStartOffset -= this.baseRangeWidth;\n          }\n          rangeStart = this._currentRangeStart + this.rangeFrames;\n          rangeStartOffset = this._currentRangeStartOffset + this.baseRangeWidth;\n          while (rangeStartOffset < width && rangeStart < this.frameCount) {\n            drawRangeCards(rangeStart, rangeStartOffset);\n            rangeStart += this.rangeFrames;\n            rangeStartOffset += this.baseRangeWidth;\n          }\n        }\n      } else {\n        const drawTextBlock = (startOffset: number, endOffset: number, text: string, blockColor: string, blockSelected: boolean) => {\n          if (endOffset > startOffset) {\n            const o = 1 * window.devicePixelRatio;\n            const itemOffsetX = startOffset + o;\n            const itemOffsetY = offsetY + this.itemTextBlockOffsetY;\n            const blockWidth = endOffset - startOffset - o * 2;\n            drawRect(ctx, itemOffsetX, itemOffsetY, blockWidth, this.itemTextBlockHeight, blockColor);\n            if (blockSelected) {\n              const currentFrameOffset = this._currentRangeStartOffset + (this.currentFrame - this._currentRangeStart) * this.perFrameWidth;\n              drawRect(ctx, currentFrameOffset, itemOffsetY, this.perFrameWidth, this.itemTextBlockHeight, '#4A90E2');\n            }\n            const textOffsetX = itemOffsetX + o * 2;\n            const textOffsetY = itemOffsetY + o * 4;\n            const textWidth = blockWidth - o * 4;\n            drawText(ctx, text, textOffsetX, textOffsetY, '#FFFFFF', 12, textWidth);\n          }\n        };\n        const drawEndpointBlock = (startOffset: number, endOffset: number) => {\n          if (endOffset >= startOffset) {\n            const startOffsetX = startOffset + this.perFrameWidth / 2;\n            if (endOffset > startOffset) {\n              drawRect(ctx, startOffsetX, offsetY + this.itemEndpointBlockOffsetY, endOffset - startOffset - this.perFrameWidth, this.itemEndpointBlockHeight, color);\n            }\n            drawRhombus(ctx, startOffsetX, offsetY + this.itemHeight / 2, 6, '#4A90E2');\n          }\n        };\n        const drawBlock = (startOffset: number, endOffset: number) => {\n          if (endOffset > startOffset) {\n            drawRect(ctx, startOffset, offsetY + this.itemBlockOffsetY, endOffset - startOffset, this.itemBlockHeight, color);\n          }\n        };\n\n        const allBlocks = Object.values(this._itemBlocks[index]);\n        allBlocks.forEach((block) => {\n          const { startFrame, endFrame } = block;\n          let startOffset = this._currentRangeStartOffset + (startFrame - this._currentRangeStart) * this.perFrameWidth;\n          let endOffset = this._currentRangeStartOffset + (endFrame - this._currentRangeStart) * this.perFrameWidth;\n          if (this._pendingEditing) {\n            if (block === this._pendingStartBlock) {\n              startOffset = this._pendingCursorOffset;\n            } else if (block === this._pendingEndBlock) {\n              endOffset = this._pendingCursorOffset;\n            } else if (index === this._hoveredItemIndex) {\n              const pendingStartFrame = this._pendingEndBlock ? this._pendingEndBlock.startFrame : this._pendingStartBlock!.startFrame;\n              const pendingEndFrame = this._pendingStartBlock ? this._pendingStartBlock.endFrame : this._pendingEndBlock!.endFrame;\n              if (startFrame >= pendingEndFrame) {\n                // blocks on the right\n                if (this._pendingCursorOffset > startOffset) {\n                  startOffset = this._pendingCursorOffset;\n                  if (this._pendingCursorOffset > endOffset) {\n                    endOffset = this._pendingCursorOffset;\n                  }\n                }\n              } else if (endFrame <= pendingStartFrame) {\n                // blocks on the left\n                if (this._pendingCursorOffset < endOffset) {\n                  endOffset = this._pendingCursorOffset;\n                  if (this._pendingCursorOffset < startOffset) {\n                    startOffset = this._pendingCursorOffset;\n                  }\n                }\n              }\n            }\n          }\n          startOffset = Math.min(Math.max(startOffset, 0), width);\n          endOffset = Math.min(Math.max(endOffset, 0), width);\n          if (frameItemType === FrameItemType.TEXT) {\n            const blockColor = block.hovered ? '#777B82' : color;\n            drawTextBlock(startOffset, endOffset, `${frameStatus[startFrame]}`, blockColor, block.selected);\n          } else if (frameItemType === FrameItemType.ENDPOINT) {\n            drawEndpointBlock(startOffset, endOffset);\n          } else {\n            drawBlock(startOffset, endOffset);\n          }\n        });\n      }\n    });\n\n    if (type !== 'cards') {\n      // no need to draw vertical scroll bar when drawing cards\n      const visibleItemsCount = this.itemsTotalHeight / this.itemHeight;\n      if (visibleItemsCount < this._allItems.length) {\n        // draw scroll y\n        this._scrollYHeight = (visibleItemsCount / this._allItems.length) * this.itemsTotalHeight;\n        this._scrollYOffset = (this._itemsOffset / (this._allItems.length * this.itemHeight)) * this.itemsTotalHeight + this.scrollbarXContainerHeight;\n        drawRoundedRect(ctx, width + this.scrollbarYOffsetX, this._scrollYOffset, this.scrollbarYWidth, this._scrollYHeight, 6, scrollbarColor);\n      } else {\n        this._scrollYHeight = 0;\n        this._scrollYOffset = 0;\n      }\n    }\n  }\n\n  /**\n   * draw invalid frame style\n   * @param ctx\n   */\n  drawInvalidFrames(ctx: CanvasRenderingContext2D) {\n    // draw invalid frames\n    this._invalidFrames.forEach((frameIndex) => {\n      const offsetX = this.getOffsetByFrame(frameIndex);\n      if (offsetX >= 0) {\n        drawRect(ctx, offsetX, this.scrollbarXContainerHeight, Math.max(this.perFrameWidth, 1 * window.devicePixelRatio), this.itemsTotalHeight, 'rgba(220, 70, 36, 0.3)');\n      }\n    });\n  }\n\n  /**\n   * draw frame hint (for current frame & hovered frame)\n   * @param ctx\n   * @param type\n   */\n  drawFrameHint(ctx: CanvasRenderingContext2D, type?: string) {\n    const frame = type === 'hover' ? this._hoveredFrame : this._currentFrame;\n    const shouldDraw = type !== 'hover' || this._hoveredFrame !== this._currentFrame;\n    if (shouldDraw) {\n      const offsetX = this.getOffsetByFrame(frame);\n      if (offsetX >= 0) {\n        if (this._currentRangeIndex === rangeFramesSet.length - 1) {\n          // block\n          drawRect(ctx, offsetX, this.scrollbarXContainerHeight, this.perFrameWidth, this.itemsTotalHeight, 'rgba(41, 44, 56, 0.4)');\n          if (type === 'hover' && this._hoveredItemIndex >= 0) {\n            const hoveredItem = this.items[this._allItems[this._hoveredItemIndex]?.id];\n            if (hoveredItem?.showCards || hoveredItem?.type === FrameItemType.CARD || hoveredItem?.type === FrameItemType.TEXT) {\n              const offsetY = this._hoveredItemIndex * this.itemHeight - this._itemsOffset + this.scrollbarXContainerHeight;\n              drawRectBorder(ctx, offsetX + this.cardOffsetX, offsetY + this.cardOffsetY, this.cardWidth, this.itemCardHeight, 'rgba(255, 255, 255, 0.4)');\n            }\n          }\n          if (type !== 'hover') {\n            const selectedIndex = this._allItems.findIndex((i) => this.items[i.id].selected);\n            const offsetY = selectedIndex * this.itemHeight - this._itemsOffset + this.scrollbarXContainerHeight;\n            drawRectBorder(ctx, offsetX + this.cardOffsetX, offsetY + this.cardOffsetY, this.cardWidth, this.itemCardHeight, '#FFFFFF');\n          }\n        } else {\n          // line\n          drawLine(ctx, offsetX + 0.5, this.scrollbarXContainerHeight, offsetX + 0.5, this.itemsTotalHeight + this.scrollbarXContainerHeight, type === 'hover' ? 'rgba(255, 255, 255, 0.4)' : '#34CBD1');\n        }\n      }\n    }\n  }\n\n  /**\n   * draw frame scales\n   * @param ctx\n   */\n  drawFrameScales(ctx: CanvasRenderingContext2D) {\n    if (!this._scaleEnabled) return;\n    const width = this.canvas.width - this.paddingRight;\n    const offsetY = this.itemsTotalHeight + this.scrollbarXContainerHeight;\n    const scaleWidth = this.perFrameWidth * this.rangeFrames;\n    const scaleHeight = 16 * window.devicePixelRatio;\n    const scaleHeightShort = 4 * window.devicePixelRatio;\n\n    // draw scales top border\n    drawRect(ctx, 0, offsetY, width, this.itemHeight, this.bgColor);\n    drawLine(ctx, 0, offsetY - 1, width, offsetY - 1, borderColor);\n\n    if (this._currentRangeIndex <= this._initialRangeIndex) {\n      const rangeCount = this.frameCount / this.rangeFrames;\n      const rangeWidth = width / rangeCount;\n      if (rangeWidth > this.baseRangeWidth * 5) {\n        for (let i = 0; i < this.frameCount; i += 1) {\n          drawScale(ctx, i * this.perFrameWidth, offsetY, scaleWidth, scaleHeight, scaleHeightShort, i, false);\n        }\n      } else {\n        for (let i = 0; i < rangeCount; i += 1) {\n          drawScale(ctx, i * rangeWidth, offsetY, scaleWidth, scaleHeight, scaleHeightShort, i * this.rangeFrames);\n        }\n      }\n\n      this._scrollXWidth = 0;\n      this._scrollXOffset = 0;\n    } else {\n      let rangeStart = this._currentRangeStart;\n      let rangeStartOffset = this._currentRangeStartOffset;\n      while ((rangeStartOffset + this.baseRangeWidth) >= 0 && rangeStart >= 0) {\n        drawScale(ctx, rangeStartOffset, offsetY, scaleWidth, scaleHeight, scaleHeightShort, rangeStart);\n        rangeStart -= this.rangeFrames;\n        rangeStartOffset -= this.baseRangeWidth;\n      }\n      rangeStart = this._currentRangeStart + this.rangeFrames;\n      rangeStartOffset = this._currentRangeStartOffset + this.baseRangeWidth;\n      while (rangeStartOffset < width && rangeStart < this.frameCount) {\n        drawScale(ctx, rangeStartOffset, offsetY, scaleWidth, scaleHeight, scaleHeightShort, rangeStart);\n        rangeStart += this.rangeFrames;\n        rangeStartOffset += this.baseRangeWidth;\n      }\n    }\n\n    // draw scrollbar\n    this._scrollXWidth = Math.max(Math.ceil((width / this.perFrameWidth / this.frameCount) * width), 42);\n    this._scrollXOffset = ((this._currentRangeStart - this._currentRangeStartOffset / this.perFrameWidth) / this.frameCount) * width;\n    // scrollbar container background\n    drawRect(ctx, 0, 0, width, this.scrollbarXContainerHeight, scrollbarContainerColor);\n    drawLine(ctx, 0, this.scrollbarXContainerHeight - 1, width, this.scrollbarXContainerHeight - 1, borderColor);\n    // scrollbar thumbnail\n    const scrollbarXOffsetY = (this.scrollbarXContainerHeight - this.scrollbarXHeight) / 2 - 1;\n    drawRoundedRect(ctx, this._scrollXOffset, scrollbarXOffsetY, this._scrollXWidth, this.scrollbarXHeight, 2, scrollbarColor);\n    const o = 2 * window.devicePixelRatio;\n    const h = this.scrollbarXHeight - o * 4;\n    drawRect(ctx, this._scrollXOffset + o, scrollbarXOffsetY + o * 2, o, h, scrollbarContainerColor);\n    drawRect(ctx, this._scrollXOffset + this._scrollXWidth - o * 2, scrollbarXOffsetY + o * 2, o, h, scrollbarContainerColor);\n    // draw current frame\n    const frameOffset = (this._currentFrame / this.frameCount) * width;\n    drawLine(ctx, frameOffset + 0.5, 0, frameOffset + 0.5, this.scrollbarXContainerHeight, '#34CBD1');\n  }\n\n  /**\n   * update frame tip text and posistion\n   */\n  updateFrameTip() {\n    if (this._hoveredFrame >= 0) {\n      this.frameTip.innerText = `${this._hoveredFrame + 1}`;\n      const { width } = this.frameTip.getBoundingClientRect();\n      const frameOffset = this.getOffsetByFrame(this._hoveredFrame) / window.devicePixelRatio;\n      let offset = frameOffset - width / 2;\n      if (this.currentRangeIndex === rangeFramesSet.length - 1) {\n        offset += (this.perFrameWidth / 2) / window.devicePixelRatio;\n      }\n      this.frameTip.style.left = `${offset}px`;\n      this.frameTip.style.display = 'block';\n    } else {\n      this.frameTip.style.display = 'none';\n    }\n  }\n\n  /**\n   * update items scroll and emit event\n   */\n  updateItemsScroll(itemsOffset: number) {\n    const allItemsHeight = this._allItems.length * this.itemHeight;\n    if (allItemsHeight <= this.itemsContainerHeight) {\n      // not scrollable\n      return;\n    }\n    this._itemsOffset = itemsOffset;\n    if (this._itemsOffset < 0) {\n      this._itemsOffset = 0;\n    } else if (this._itemsOffset > allItemsHeight - this.itemsTotalHeight) {\n      this._itemsOffset = allItemsHeight - this.itemsTotalHeight;\n    }\n    this.drawFrames();\n    this.emit(EventAction.ITEMS_OFFSET_CHANGE, this._itemsOffset / window.devicePixelRatio);\n  }\n\n  /**\n   * get frame by clientX\n   * @param clientX\n   * @returns\n   */\n  getFrameByClientX(clientX: number) {\n    const { left } = this.canvas.getBoundingClientRect();\n    const offset = (clientX - left) * window.devicePixelRatio;\n    let frame = this._currentRangeStart + Math.floor((offset - this._currentRangeStartOffset) / this.perFrameWidth);\n    if (frame >= this.frameCount) {\n      frame = this.frameCount - 1;\n    } else if (frame < 0) {\n      frame = 0;\n    }\n    return frame;\n  }\n\n  /**\n   * get item index by clientY\n   * @param clientY\n   * @returns\n   */\n  getItemIndexByClientY(clientY: number) {\n    const { top } = this.canvas.getBoundingClientRect();\n    const offset = (clientY - top) * window.devicePixelRatio;\n    const index = Math.floor((offset + this._itemsOffset - this.scrollbarXContainerHeight) / this.itemHeight);\n    if (index > Object.keys(this._items).length - 1) {\n      return -1;\n    }\n    return index;\n  }\n\n  /**\n   * get offset by frame index\n   * @param frame\n   * @param checkOutside\n   * @returns\n   */\n  getOffsetByFrame(frame: number, checkOutside = true) {\n    const offset = this._currentRangeStartOffset + (frame - this._currentRangeStart) * this.perFrameWidth;\n    if (checkOutside && (offset < 0 || offset > (this.canvas.width - this.paddingRight))) {\n      return -1;\n    }\n    return offset;\n  }\n\n  /**\n   * check hover item\n   * @param clientX\n   * @param clientY\n   * @returns\n   */\n  getMouseHover(clientX: number, clientY: number) {\n    const { width: canvasWidth, height: canvasHeight } = this.canvas;\n    const { left, top, width, height } = this.canvas.getBoundingClientRect();\n    const offsetX = clientX - left;\n    const offsetY = clientY - top;\n\n    if (\n      offsetX / width >= this._scrollXOffset / canvasWidth &&\n      offsetX / width <= (this._scrollXOffset + this._scrollXWidth) / canvasWidth &&\n      offsetY / height <= this.scrollbarXContainerHeight / canvasHeight\n    ) {\n      return HoverType.SCROLLBAR_X;\n    }\n\n    if (\n      offsetY / height <= this.scrollbarXContainerHeight / canvasHeight\n    ) {\n      return HoverType.SCROLLBAR_X_CONTAINER;\n    }\n\n    const scrollbarOffsetX = canvasWidth - this.paddingRight + this.scrollbarYOffsetX;\n    if (\n      offsetX / width >= scrollbarOffsetX / canvasWidth &&\n      offsetX / width <= (scrollbarOffsetX + this.scrollbarYWidth) / canvasWidth &&\n      offsetY / height >= this._scrollYOffset / canvasHeight &&\n      offsetY / height <= (this._scrollYOffset + this._scrollYHeight) / canvasHeight\n    ) {\n      return HoverType.SCROLLBAR_Y;\n    }\n\n    if (\n      offsetX * window.devicePixelRatio > canvasWidth - this.paddingRight &&\n      offsetX * window.devicePixelRatio <= canvasWidth\n    ) {\n      return HoverType.SCROLLBAR_Y_CONTAINER;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * set cursor for progress bar\n   * @param cursor\n   */\n  setCursor(cursor: Cursor) {\n    if (this.canvas.style.cursor !== cursor) {\n      this.canvas.style.cursor = cursor;\n    }\n  }\n\n  /**\n   * unselect block\n   */\n  unselectBlock() {\n    if (this._selectedBlock) {\n      this._selectedBlock.selected = false;\n      this._selectedBlock = null;\n      this.drawFrames();\n    }\n  }\n\n  /**\n   * focus to specific frame if not in the progress bar view\n   * @param frame\n   */\n  focusFrame(frame: number) {\n    const offset = this.getOffsetByFrame(frame, false);\n    const right = this.canvas.width - this.paddingRight - this.perFrameWidth;\n    if (offset < 0) {\n      // move left\n      this._baseOffsetFrame = frame;\n      this._baseOffset = this.perFrameWidth;\n    } else if (offset > right) {\n      // move right\n      this._baseOffsetFrame = frame;\n      this._baseOffset = right - this.perFrameWidth;\n    }\n    this.drawFrames();\n  }\n\n  /**\n   * mouse wheel\n   * @param e\n   */\n  wheel = (e: WheelEvent) => {\n    if (e.altKey) {\n      this.zoom(e);\n    } else {\n      // scroll y\n      this.updateItemsScroll(this._itemsOffset + e.deltaY);\n    }\n  };\n\n  /**\n   * zooming\n   * @param e\n   */\n  zoom = (e: WheelEvent) => {\n    const hover = this.getMouseHover(e.clientX, e.clientY);\n    if (hover === HoverType.SCROLLBAR_Y_CONTAINER || hover === HoverType.SCROLLBAR_Y) {\n      return;\n    }\n    // zoom to scale frames\n    const { left } = this.canvas.getBoundingClientRect();\n    this._baseOffset = (e.clientX - left) * window.devicePixelRatio;\n    this._baseOffsetFrame = this.getFrameByClientX(e.clientX);\n    if (e.deltaY > 0) {\n      this._currentRangeIndex += 1;\n    } else {\n      this._currentRangeIndex -= 1;\n    }\n    this._currentRangeIndex = Math.min(Math.max(this._currentRangeIndex, this._initialRangeIndex), rangeFramesSet.length - 1);\n    this.emit(EventAction.VISIBLE_FRAMES_UPDATE, this._currentRangeIndex, rangeFramesSet.map((_, i) => i).slice(this._initialRangeIndex));\n    this.drawFrames();\n    this.canvasMove(e);\n  };\n\n  /**\n   * mouse down on canvas\n   * @param e\n   */\n  canvasDown = (e: MouseEvent) => {\n    const hover = this.getMouseHover(e.clientX, e.clientY);\n    if (hover === HoverType.SCROLLBAR_X) {\n      // click on horizontal scrollbar\n      this._isScrollXDown = true;\n      this._scrollXDownBaseOffsetFrame = this._baseOffsetFrame;\n      this._scrollXDownClientX = e.clientX;\n    } else if (hover === HoverType.SCROLLBAR_Y) {\n      // click on vertical scrollbar\n      this._isScrollYDown = true;\n      this._scrollYDownItemsOffset = this._itemsOffset;\n      this._scrollYDownClientY = e.clientY;\n    } else if (this._pendingStartBlock || this._pendingEndBlock) {\n      this._pendingEditing = true;\n      this.emit(EventAction.BLOCK_HOVERED, this._hoveredBlock);\n    } else if (this._hoveredBlock) {\n      this.currentFrame = this._hoveredFrame;\n      this.emit(EventAction.CURRENT_FRAME_CHANGE, this._currentFrame, this._hoveredItemIndex);\n      if (e.buttons === 2) {\n        // activate\n        this._selectedBlock = this._hoveredBlock;\n        this._selectedBlock.selected = true;\n        this.drawFrames();\n        const hoveredItemY = this._hoveredItemIndex * this.itemHeight - this._itemsOffset + this.scrollbarXContainerHeight;\n        this.emit(EventAction.BLOCK_SELECTED, this._selectedBlock, this._hoveredItemIndex, e.clientX, (this.canvas.height - hoveredItemY) / window.devicePixelRatio);\n      }\n    } else if (this._hoveredFrame >= 0) {\n      this.currentFrame = this._hoveredFrame;\n      this.emit(EventAction.CURRENT_FRAME_CHANGE, this._currentFrame, this._hoveredItemIndex);\n    }\n  };\n\n  /**\n   * mouse move on canvas\n   * @param e\n   */\n  canvasMove = (e: MouseEvent) => {\n    if (this._pendingEditing) {\n      this._hoveredFrame = this.getFrameByClientX(e.clientX);\n      this.updateFrameTip();\n      return;\n    }\n\n    this.setCursor(Cursor.DEFAULT);\n    const hover = this.getMouseHover(e.clientX, e.clientY);\n    if (hover === HoverType.SCROLLBAR_X) {\n      // hover on horizontal scrollbar\n      this.canvasLeave();\n      this.setCursor(Cursor.POINTER);\n    } else if (hover === HoverType.SCROLLBAR_Y) {\n      this.canvasLeave();\n      this.setCursor(Cursor.POINTER);\n    } else if (hover === HoverType.SCROLLBAR_X_CONTAINER || hover === HoverType.SCROLLBAR_Y_CONTAINER) {\n      this.canvasLeave();\n    } else {\n      this._hoveredFrame = this.getFrameByClientX(e.clientX);\n      this._hoveredItemIndex = this.getItemIndexByClientY(e.clientY);\n      if (this._hoveredBlock) {\n        this._hoveredBlock.hovered = false;\n      }\n      this._hoveredBlock = null;\n      this._pendingStartBlock = null;\n      this._pendingEndBlock = null;\n\n      const { left } = this.canvas.getBoundingClientRect();\n      const cursorOffset = (e.clientX - left) * window.devicePixelRatio;\n      const threshold = 6 * window.devicePixelRatio;\n      this._itemBlocks.forEach((blocks, i) => {\n        Object.values(blocks).forEach((item) => {\n          if (i === this._hoveredItemIndex) {\n            const { startFrame, endFrame, value } = item;\n            // check block hovered\n            item.hovered = this._hoveredFrame >= startFrame && this._hoveredFrame < endFrame && typeof value !== 'boolean';\n            if (item.hovered) {\n              this._hoveredBlock = item;\n            }\n            // check draggable block is pending\n            if (item.draggable && (this._hoveredFrame === startFrame || this._hoveredFrame === startFrame - 1)) {\n              // match the block beginning\n              const frameOffset = this._currentRangeStartOffset + (startFrame - this._currentRangeStart) * this.perFrameWidth;\n              if (Math.abs(cursorOffset - frameOffset) < threshold) {\n                this.setCursor(Cursor.COL_RESIZE);\n                this._pendingStartBlock = item;\n              }\n            }\n            if (item.draggable && (this._hoveredFrame === endFrame || this._hoveredFrame === endFrame - 1)) {\n              // match the block ending\n              const frameOffset = this._currentRangeStartOffset + (endFrame - this._currentRangeStart) * this.perFrameWidth;\n              if (Math.abs(cursorOffset - frameOffset) < threshold) {\n                this.setCursor(Cursor.COL_RESIZE);\n                this._pendingEndBlock = item;\n              }\n            }\n          }\n        });\n      });\n\n      this.drawFrames();\n      this.updateFrameTip();\n\n      const hoveredItemY = this._hoveredItemIndex * this.itemHeight - this._itemsOffset + this.scrollbarXContainerHeight;\n      this.emit(\n        EventAction.BLOCK_HOVERED,\n        this._hoveredBlock,\n        this._hoveredFrame,\n        this._hoveredItemIndex,\n        e.clientX,\n        (this.canvas.height - hoveredItemY) / window.devicePixelRatio,\n      );\n    }\n  };\n\n  /**\n   * mouse leave canvas\n   */\n  canvasLeave = () => {\n    this._hoveredFrame = -1;\n    this._hoveredItemIndex = -1;\n    if (this._hoveredBlock) {\n      this._hoveredBlock.hovered = false;\n    }\n    this._hoveredBlock = null;\n    this._pendingStartBlock = null;\n    this._pendingEndBlock = null;\n    this.drawFrames();\n    this.updateFrameTip();\n    this.emit(EventAction.BLOCK_HOVERED, this._hoveredBlock);\n  };\n\n  /**\n   * mouse move on document (dragging scrollbar)\n   * @param e\n   */\n  cursorMove = (e: MouseEvent) => {\n    if (this._pendingEditing) {\n      const { left } = this.canvas.getBoundingClientRect();\n      this._pendingCursorOffset = (e.clientX - left) * window.devicePixelRatio;\n      this.drawFrames();\n    } else if (this._isScrollXDown) {\n      // move horizontal scrollbar\n      const offset = (e.clientX - this._scrollXDownClientX) * window.devicePixelRatio;\n      const frames = Math.floor((offset / (this.canvas.width - this.paddingRight)) * this.frameCount);\n      this._baseOffsetFrame = this._scrollXDownBaseOffsetFrame + frames;\n      this._hoveredFrame = -1;\n      this._hoveredItemIndex = -1;\n      this.drawFrames();\n      this.updateFrameTip();\n    } else if (this._isScrollYDown) {\n      // move vertical scrollbar\n      const offset = (e.clientY - this._scrollYDownClientY) * window.devicePixelRatio;\n      const itemsOffset = this._scrollYDownItemsOffset + (offset / this.itemsContainerHeight) * this._allItems.length * this.itemHeight;\n      this.updateItemsScroll(itemsOffset);\n    }\n  };\n\n  /**\n   * mouse up on document (dragging scrollbar)\n   */\n  cursorUp = () => {\n    if (this._pendingEditing && this._pendingCursorOffset >= 0) {\n      let frame = this._currentRangeStart + Math.round((this._pendingCursorOffset - this._currentRangeStartOffset) / this.perFrameWidth);\n      if (frame > this.frameCount) {\n        frame = this.frameCount;\n      } else if (frame < 0) {\n        frame = 0;\n      }\n\n      const updatedFrameStatus: {\n        [frameIndex: number]: number | null;\n      } = {};\n      const pendingStartFrame = this._pendingStartBlock?.startFrame;\n      const pendingEndFrame = this._pendingEndBlock?.endFrame;\n      if (pendingStartFrame !== undefined) {\n        if (frame > pendingStartFrame) {\n          // move -> right\n          for (let i = pendingStartFrame; i < frame; i += 1) {\n            updatedFrameStatus[i] = null;\n          }\n          if (pendingEndFrame !== undefined) {\n            for (let i = pendingEndFrame; i < frame; i += 1) {\n              updatedFrameStatus[i] = pendingEndFrame - 1;\n            }\n          }\n        } else if (frame < pendingStartFrame) {\n          // move -> left\n          if (pendingEndFrame !== undefined) {\n            for (let i = frame; i < pendingEndFrame; i += 1) {\n              updatedFrameStatus[i] = null;\n            }\n          }\n          for (let i = frame; i < pendingStartFrame; i += 1) {\n            updatedFrameStatus[i] = pendingStartFrame;\n          }\n        }\n      } else if (pendingEndFrame !== undefined) {\n        if (frame > pendingEndFrame) {\n          // move -> right\n          for (let i = pendingEndFrame; i < frame; i += 1) {\n            updatedFrameStatus[i] = pendingEndFrame - 1;\n          }\n        } else if (frame < pendingEndFrame) {\n          // move -> left\n          for (let i = frame; i < pendingEndFrame; i += 1) {\n            updatedFrameStatus[i] = null;\n          }\n        }\n      }\n      if (Object.keys(updatedFrameStatus).length > 0) {\n        this.emit(EventAction.FRAME_STATUS_CHANGED, updatedFrameStatus, this._hoveredItemIndex);\n      }\n    }\n    this._pendingEditing = false;\n    this._pendingCursorOffset = -1;\n    if (this._isScrollXDown) {\n      this._isScrollXDown = false;\n      this._scrollXDownBaseOffsetFrame = 0;\n      this._scrollXDownClientX = 0;\n    }\n    if (this._isScrollYDown) {\n      this._isScrollYDown = false;\n      this._scrollYDownItemsOffset = 0;\n      this._scrollYDownClientY = 0;\n    }\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}