{"ast":null,"code":"/* eslint-disable class-methods-use-this */ /* eslint-disable no-underscore-dangle */import React from'react';import ReactDOM from'react-dom';import hexToRgba from'hex-to-rgba';import{notification,Modal}from'antd';import{cloneDeep}from'lodash';import WaveSurfer from'wavesurfer.js/dist/wavesurfer';import TimelinePlugin from'wavesurfer.js/dist/plugin/wavesurfer.timeline.min.js';import RegionsPlugin from'wavesurfer.js/dist/plugin/wavesurfer.regions.min.js';import CursorPlugin from'wavesurfer.js/dist/plugin/wavesurfer.cursor.min.js';import MinimapPlugin from'wavesurfer.js/src/plugin/minimap';import{connect}from'react-redux';import{v4 as uuid}from'uuid';import{defaultColor,formatTimestamp,translate,triggerForm,StyleConfigMode,getConfigColor}from'../../constants';import HandleIcon from'../common/Icons/HandleIcon';import{debug,getWavesurfers,mergeSegmentBackward,setPlayingState,setSegmentTimestamp,splitSegmentForward,setVideoValid,setVideoZoom,deleteLine,pushLine,setLineRole,removeSegment,setSegments,parseSegments,setErrorMsg,setAudioErrorMsg,moveSegmentInBatch,updateVideoInfo,setLoading}from'../../redux/action';import'./WavesurferComp.scss';import{createLine,createSegment,isInput}from'../../redux/reducer/segmentController';import{isAnnotationReadonly}from'../../../../utils/tool-mode';import{timeInterval,primaryLabelInterval,secondaryLabelInterval,formatTimeCallback}from'../utils/TimelineUtil';import i18n from'../../locales';export const ANCHOR_MOVEMENT_STEP=0.01;class WavesurferComp extends React.Component{constructor(){super();this.insertLine=data=>{var _styleConfig$groups;// eslint-disable-next-line prefer-const\nlet{start,end,role,videoIndex,segmentIndex,lineIndex,attributes}=data;const{segments}=this.regions;const{ontology,styleConfig}=this.props;videoIndex=Number.isNaN(parseInt(videoIndex,10))?this.current.videoIndex:videoIndex;const wavesurfer=this.wavesurfers[videoIndex];lineIndex=Number.isNaN(parseInt(lineIndex,10))?0:lineIndex;end=Number.isNaN(parseFloat(end))?wavesurfer.getDuration():end;if(!segments[videoIndex])segments[videoIndex]=[];if(!segments[videoIndex][segmentIndex])segments[videoIndex][segmentIndex]=[];role=role||'none';let configColor='';if(attributes&&(styleConfig===null||styleConfig===void 0?void 0:(_styleConfig$groups=styleConfig.groups)===null||_styleConfig$groups===void 0?void 0:_styleConfig$groups.length)>0){configColor=getConfigColor(attributes,styleConfig.groups);}const color=hexToRgba(configColor||ontology.get(role)||defaultColor.defaultWhite,role==='none'&&!configColor?0:defaultColor.defaultAlpha);const item={start,end,color,resize:false,drag:false,data:{type:'line'},formatTimeCallback:()=>''};const region=wavesurfer.addRegion(item);region.element.classList.add('line-region');const mark=document.createElement('div');mark.className='line-mark';region.element.appendChild(mark);const title=document.createElement('div');title.className='line-title';title.innerText=lineIndex===0?\"\".concat(segmentIndex+1,\"\\n\").concat((region.end-region.start).toFixed(3),\"s (\").concat(formatTimestamp(region.start),\"~\").concat(formatTimestamp(region.end),\")\"):'';mark.appendChild(title);region.title=title;region.role=role;segments[videoIndex][segmentIndex].splice(lineIndex,0,region);segments[videoIndex][segmentIndex].filter(line=>!!(line===null||line===void 0?void 0:line.element)).forEach((line,index,array)=>{const height=100/array.length;const top=height*index;line.element.style.height=\"\".concat(height,\"%\");line.element.style.top=\"\".concat(top,\"%\");});return region;};this.renderSegments=()=>{const{videos,results}=this.props;this.regions={segments:[],anchors:[]};videos.forEach((v,i)=>{if(v.ready){this.wavesurfers[i].clearRegions();this.initRegion(i,results[i]);if(i===this.current.videoIndex){this.setNewVideo();this.setSelectedSegment(this.current.segments[0][0]);}}});};this.wavesurfers=[];this.undoList=[];this.redoList=[];this.container={minimap:null,// Minimap container\nwaveform:null,// Waveform container\ntimeline:null,// Timeline container\naudioContainer:null,// Cursor container\nvideoContainer:null// Video container\n};this.regions={segments:[],anchors:[]};this.current={zoom:1,videoIndex:0,wavesurfer:null,segments:null,anchors:null,segmentSelected:null,anchorSelected:null,undoList:null,redoList:null,undoLock:false,redoLock:false};this.state={cursorTime:0// seconds\n};}get currentSegments(){return this.props.results[this.current.videoIndex];}shouldComponentUpdate(nextProps){return nextProps.isLoadedAlaw!==this.props.isLoadedAlaw;}componentDidUpdate(){this.initWaveSurfer();}clearAll(){Modal.confirm({className:'modal-root',title:i18n.translate('COMMON_CLAER_CONFIRM_TITLE'),content:i18n.translate('COMMON_CLAER_CONFIRM_DESC'),autoFocusButton:null,okText:i18n.translate('COMMON_CLAER_CONFIRM_SURE'),okType:'danger',cancelText:i18n.translate('COMMON_CLAER_CONFIRM_CANCEL'),onOk:()=>{const{currentSegment}=this.props;const{videoIndex}=this.current;const segments=cloneDeep(this.currentSegments);const afterSegments=[{id:uuid(),start:0,end:segments[segments.length-1].end,attributes:{},content:[{role:'none',text:'',attributes:{}}],qaChecked:undefined,qaComment:'',qaReason:null}];this.props.setSegments({videoIndex,segments:afterSegments});this.wavesurfers[videoIndex].clearRegions();this.regions.segments[videoIndex]=[];this.regions.anchors[videoIndex]=[];this.current={...this.current,anchorSelected:null,anchors:null,segmentSelected:null,segments:null,videoIndex:0};const currentSegments=this.parseSegments(videoIndex,afterSegments);this.initRegion(videoIndex,currentSegments);this.current.segments=this.regions.segments[videoIndex];this.current.anchors=this.regions.anchors[videoIndex];this.addHistory('clear_all',{after:{videoIndex,currentIndex:0,segments:afterSegments},before:{videoIndex,currentIndex:currentSegment,segments}});}});}addHistory(type,data){const{undoList,undoLock,redoLock,redoList}=this.current;let recallList;if(undoLock)recallList=redoList;else if(redoLock)recallList=undoList;else{recallList=undoList;this.current.redoList=[];}if(type==='trimAnchor'&&recallList.length){const prev=recallList[recallList.length-1];if(prev.type==='trimAnchor'&&prev.data.trimAnchor===data.trimAnchor)return;}recallList.push({type,data});if(recallList.length>50)recallList.shift();}recallHistory(action){const{undoList,redoList,anchors}=this.current;const recallList=action==='undo'?undoList:redoList;if(!recallList.length)return;if(action==='undo')this.current.undoLock=true;// lock\nif(action==='redo')this.current.redoLock=true;const recallItem=recallList.pop();const{type,data}=recallItem;switch(type){case'singleLination-recall':this.singleLination(data.sec);// addHistory inside\nbreak;case'doubleLination-recall':this.doubleLination(data.start,data.end);// addHistory inside\nbreak;case'singleLination-adjust':{const{nearbyAnchorIndex,prevStart}=data;const nearbyAnchor=anchors[nearbyAnchorIndex];const sec=nearbyAnchor.start;nearbyAnchor.update({start:prevStart});this.handleAnchorDrag(nearbyAnchor);this.addHistory('singleLination-recall',{sec});}break;case'singleLination-split':{const{splitAnchorIndex}=data;const splitAnchor=anchors[splitAnchorIndex];const sec=splitAnchor.start;this.mergeSegment(splitAnchor);this.addHistory('singleLination-recall',{sec});}break;case'doubleLination-adjust-adjust':{const{nearbyLeftAnchorIndex,prevLeftStart,nearbyRightAnchorIndex,prevRightStart}=data;const nearbyLeftAnchor=anchors[nearbyLeftAnchorIndex];const nearbyRightAnchor=anchors[nearbyRightAnchorIndex];const{start}=nearbyLeftAnchor;const end=nearbyRightAnchor.start;nearbyLeftAnchor.update({start:prevLeftStart});this.handleAnchorDrag(nearbyLeftAnchor);nearbyRightAnchor.update({start:prevRightStart});this.handleAnchorDrag(nearbyRightAnchor);this.addHistory('doubleLination-recall',{start,end});}break;case'doubleLination-adjust-split':{const{nearbyLeftAnchorIndex,prevLeftStart,splitRightAnchorIndex}=data;const nearbyLeftAnchor=anchors[nearbyLeftAnchorIndex];const splitRightAnchor=anchors[splitRightAnchorIndex];const{start}=nearbyLeftAnchor.start;const end=splitRightAnchor.start;nearbyLeftAnchor.update({start:prevLeftStart});this.handleAnchorDrag(nearbyLeftAnchor);this.mergeSegment(splitRightAnchor);this.addHistory('doubleLination-recall',{start,end});}break;case'doubleLination-split-adjust':{const{splitLeftAnchorIndex,nearbyRightAnchorIndex,prevRightStart}=data;const splitLeftAnchor=anchors[splitLeftAnchorIndex];const nearbyRightAnchor=anchors[nearbyRightAnchorIndex];const{start}=splitLeftAnchor.start;const end=nearbyRightAnchor.start;this.mergeSegment(splitLeftAnchor);nearbyRightAnchor.update({start:prevRightStart});this.handleAnchorDrag(nearbyRightAnchor);this.addHistory('doubleLination-recall',{start,end});}break;case'doubleLination-split-split':{const{splitLeftAnchorIndex,splitRightAnchorIndex}=data;const splitLeftAnchor=anchors[splitLeftAnchorIndex];const splitRightAnchor=anchors[splitRightAnchorIndex];const{start}=splitLeftAnchor.start;const end=splitRightAnchor.start;this.mergeSegment(splitLeftAnchor);this.mergeSegment(splitRightAnchor);this.addHistory('doubleLination-recall',{start,end});}break;case'pushLine':this.props.deleteLine(data);// addHistory inside\nbreak;case'deleteLine':this.props.pushLine(data);// addHistory inside\nbreak;case'dragAnchor':{const{dragAnchorIndex,prevStart}=data;const dragAnchor=anchors[dragAnchorIndex];const{start}=dragAnchor;dragAnchor.update({start:prevStart});this.handleAnchorDrag(dragAnchor);this.addHistory('dragAnchor',{dragAnchorIndex,prevStart:start});}break;case'trimAnchor':{const{trimAnchorIndex,prevStart}=data;const trimAnchor=anchors[trimAnchorIndex];const{start}=trimAnchor;trimAnchor.update({start:prevStart});this.handleAnchorDrag(trimAnchor);this.addHistory('trimAnchor',{trimAnchorIndex,prevStart:start});}break;case'mergeSegment':{const{mergeSec,prevRules,nextRules}=data;const splitSegment=this.getSegmentByTime(mergeSec);this.splitSegment(splitSegment,mergeSec,prevRules,nextRules);}break;case'setLineColor':this.props.setLineRole(data);// addHistory inside\nbreak;case'bulkMovement':{const{step}=data;const bulkMovementDirection=action==='redo'?1:-1;this.moveRegionsInBatch(bulkMovementDirection*step);this.addHistory('bulkMovement',{step:-bulkMovementDirection*step});break;}case'clear_all':{const{before,after}=data;const{videoIndex,currentIndex,segments}=action==='undo'?before:after;this.wavesurfers[videoIndex].clearRegions();this.props.setSegments({videoIndex,segments});this.regions={segments:[],anchors:[]};this.regions.segments[videoIndex]=[];this.regions.anchors[videoIndex]=[];this.current={...this.current,anchorSelected:null,anchors:null,segmentSelected:null,segments:null,videoIndex:0};const currentSegments=this.parseSegments(videoIndex,segments);this.initRegion(videoIndex,currentSegments);this.current.segments=this.regions.segments[videoIndex];this.current.anchors=this.regions.anchors[videoIndex];this.props.setCurrentSegment({index:currentIndex});break;}default:break;}if(action==='undo')this.current.undoLock=false;// lock\nif(action==='redo')this.current.redoLock=false;}// Called after currentVideo change\nsetNewVideo(){const{videoIndex}=this.current;if(this.wavesurfers[videoIndex].isDestroyed){console.error('Video destroyed:',videoIndex);return;}this.current.wavesurfer=this.wavesurfers[videoIndex];this.current.segments=this.regions.segments[videoIndex];this.current.anchors=this.regions.anchors[videoIndex];this.current.zoom=this.props.videos[videoIndex].zoom;this.current.undoList=this.undoList[videoIndex];this.current.redoList=this.redoList[videoIndex];this.setCurrentZoom();}setCurrentVideo(newVideoIndex){const{videoIndex}=this.current;this.wavesurfers[videoIndex].pause();this.removeSelectedSegment();this.removeSelectedAnchor();this.current.videoIndex=newVideoIndex;this.setNewVideo();}removeSelectedAnchor(){const{anchorSelected}=this.current;if(!anchorSelected)return;anchorSelected.mark.classList.remove('anchor-mark-selected');this.current.anchorSelected=null;}setCurrentZoom(newZoom){if(newZoom)this.current.zoom=newZoom;const{zoom,videoIndex,wavesurfer}=this.current;const duration=this.wavesurfers[videoIndex].getDuration();const cursorTime=this.getCursorTime();const currentTime=wavesurfer.getCurrentTime();const{offsetWidth}=wavesurfer.container;const{offsetLeft}=wavesurfer.cursor.cursor;const totalWidth=offsetWidth*zoom;const pxPerSec=totalWidth/duration;wavesurfer.zoom(pxPerSec);this.setCurrentScroll(cursorTime<0?currentTime:cursorTime,cursorTime<0?offsetWidth/2:offsetLeft,false);}componentDidMount(){// Record currentTime and locate currentCursor\nsetInterval(()=>{if(!this.props.isPlaying)return;const{wavesurfer}=this.current;const currentTime=wavesurfer.getCurrentTime();const duration=wavesurfer.getDuration();wavesurfer.timestamp.innerText=\"\".concat(formatTimestamp(currentTime),\"/\").concat(formatTimestamp(duration));this.setCurrentScroll(currentTime,0,true);},200);}componentWillUnmount(){if(Array.isArray(this.container.audioContainer)){this.container.audioContainer.forEach(c=>{if(c){c.removeEventListener('mousemove',this.updateMeasurement);c.removeEventListener('wheel',this.updateMeasurement);}});}}setCurrentScroll(destTime,offsetLeft,boundaryCheck){offsetLeft=offsetLeft||0;destTime=destTime||0;const{wavesurfer}=this.current;const{scrollLeft}=wavesurfer.container.lastChild;const{offsetWidth}=wavesurfer.container;const{minPxPerSec}=wavesurfer.params;const scrollTime=destTime-(offsetLeft-offsetWidth/2)/minPxPerSec;const duration=wavesurfer.getDuration();if(!boundaryCheck)wavesurfer.drawer.recenter(scrollTime/duration);else{const rightBoundaryTime=(scrollLeft+offsetWidth)/minPxPerSec;const leftBoundaryTime=scrollLeft/minPxPerSec;if(destTime<leftBoundaryTime||destTime>rightBoundaryTime)wavesurfer.drawer.recenter(scrollTime/duration);}}insertSegment(data){const{start,end,segmentIndex}=data;let{videoIndex}=data;videoIndex=Number.isNaN(parseInt(videoIndex,10))?this.current.videoIndex:videoIndex;const{segments}=this.regions;if(!segments[videoIndex])segments[videoIndex]=[];segments[videoIndex].splice(segmentIndex,0,[]);this.insertLine({start,end,videoIndex,segmentIndex});return segments[videoIndex][segmentIndex];}insertTempAnchor(data){const{segmentSelected}=this.current;const{start,end}=data;const items=[{start,resize:false,drag:true,data:{type:'tempAnchor',prevStart:start},formatTimeCallback:()=>''},{start:end,resize:false,drag:true,data:{type:'tempAnchor',prevStart:end}}];const{wavesurfer}=this.current;const regions=new Array(2);regions[0]=wavesurfer.addRegion(items[0]);regions[1]=wavesurfer.addRegion(items[1]);// eslint-disable-next-line prefer-destructuring\nsegmentSelected.leftTempAnchor=regions[0];// eslint-disable-next-line prefer-destructuring\nsegmentSelected.rightTempAnchor=regions[1];// eslint-disable-next-line no-restricted-syntax\nfor(const region of regions){region.element.classList.add('anchor-region');const handle=document.createElement('div');handle.className='anchor-handle';ReactDOM.render(/*#__PURE__*/React.createElement(HandleIcon,{style:{height:'100%',width:'100%'},viewBox:\"0, 10, 16, 16\"}),handle);region.element.appendChild(handle);region.hanlde=handle;const mark=document.createElement('div');mark.className='anchor-mark-temp';region.element.appendChild(mark);region.mark=mark;}}insertAnchor(data){// eslint-disable-next-line prefer-const\nlet{start,videoIndex,segmentIndex}=data;const{toolMode}=this.props;const{anchors}=this.regions;videoIndex=Number.isNaN(parseInt(videoIndex,10))?this.current.videoIndex:videoIndex;if(!anchors[videoIndex])anchors[videoIndex]=[];if(segmentIndex===0)return;if(!anchors[videoIndex])anchors[videoIndex]=[];const wavesurfer=this.wavesurfers[videoIndex];const item={start,resize:false,drag:!isAnnotationReadonly(toolMode),// toolMode !== 'QA_RO',\ndata:{type:'anchor',prevStart:start},formatTimeCallback:()=>''};const region=wavesurfer.addRegion(item);anchors[videoIndex].splice(segmentIndex-1,0,region);region.element.classList.add('anchor-region');const handle=document.createElement('div');handle.className='anchor-handle';if(isAnnotationReadonly(toolMode))handle.classList.add('anchor-handle-lock');ReactDOM.render(/*#__PURE__*/React.createElement(HandleIcon,{style:{height:'100%',width:'100%'},viewBox:\"0, 10, 16, 16\"}),handle);region.element.appendChild(handle);region.hanlde=handle;const mark=document.createElement('div');mark.className='anchor-mark';region.element.appendChild(mark);region.mark=mark;return region;}removeSelectedSegment(){const{segmentSelected,anchorSelected}=this.current;if(anchorSelected&&anchorSelected.data.type==='tempAnchor')this.removeSelectedAnchor();if(segmentSelected&&segmentSelected.data.type==='temp'){segmentSelected.remove();if(segmentSelected.leftTempAnchor)segmentSelected.leftTempAnchor.remove();if(segmentSelected.rightTempAnchor)segmentSelected.rightTempAnchor.remove();}this.current.segmentSelected=null;}setSelectedSegment(region){this.removeSelectedSegment();if(region.data.type==='line')this.current.wavesurfer.frame.update({start:region.start,end:region.end});this.current.segmentSelected=region;}setCurrentSegment(currentSegment,start){var _this$current$segment,_this$current$segment2;const{currentPlayMode}=this.props;const{wavesurfer}=this.current;const region=(_this$current$segment=this.current.segments)===null||_this$current$segment===void 0?void 0:(_this$current$segment2=_this$current$segment[currentSegment])===null||_this$current$segment2===void 0?void 0:_this$current$segment2[0];start=start||(region===null||region===void 0?void 0:region.start);this.setSelectedSegment(region);this.seekCurrentAudio(start);this.setCurrentScroll(start,0,true);if(currentPlayMode!=='overallLoop'){wavesurfer.play();}}setLineColor(videoIndex,segmentIndex,lineIndex,role){try{var _styleConfig$groups2;const{results,styleConfig}=this.props;const segment=results[videoIndex][segmentIndex];const line=this.regions.segments[videoIndex][segmentIndex][lineIndex];const prevRole=line.role;let color='';if((styleConfig===null||styleConfig===void 0?void 0:(_styleConfig$groups2=styleConfig.groups)===null||_styleConfig$groups2===void 0?void 0:_styleConfig$groups2.length)>0){const attributes=(styleConfig===null||styleConfig===void 0?void 0:styleConfig.mode)===StyleConfigMode.line?line.attributes:segment.attributes;color=getConfigColor(attributes,styleConfig.groups);}if(!color){color=this.props.ontology.get(role);}line.update({color:hexToRgba(color,!color?0:defaultColor.defaultAlpha)});line.role=role;this.addHistory('setLineColor',{videoIndex,segmentIndex,lineIndex,role:prevRole});}catch(e){console.error('Line region not found');}}setSegmentColor(videoIndex,segmentIndex,lines,color){const segment=this.regions.segments[videoIndex][segmentIndex];for(let i=0;i<lines.length;i+=1){const lineIndex=lines[i];const line=segment[lineIndex];const roleColor=this.props.ontology.get(line.role);const rgba=hexToRgba(color||roleColor||defaultColor.defaultWhite,!color&&line.role==='none'?0:defaultColor.defaultAlpha);if(line&&rgba!==line.color){line.update({color:rgba});}}}getAudioContainer(waveform,timeline,audioContainer,minimap){this.container.waveform=waveform;this.container.timeline=timeline;this.container.audioContainer=audioContainer;this.container.minimap=minimap;if(this.container.videoContainer)this.initWaveSurfer();}getVideoContainer(videoContainer){this.container.videoContainer=videoContainer;if(this.container.waveform)this.initWaveSurfer();}pauseVideo(){this.current.wavesurfer.pause();}playVideo(){const{wavesurfer,segmentSelected}=this.current;if(segmentSelected&&wavesurfer.getCurrentTime()>segmentSelected.end-ANCHOR_MOVEMENT_STEP){this.seekCurrentAudio(segmentSelected.start);this.setCurrentScroll(segmentSelected.start,0,true);}wavesurfer.play();}forwardVideo(){this.current.wavesurfer.skipForward(0.5);}backwardVideo(){this.current.wavesurfer.skipBackward(0.5);}parseSegments(videoIndex,segs){const{results,ontology,lineConfig,keyAttribute,segmentConfig}=this.props;const segments=Array.isArray(segs)?segs:results[videoIndex];const wavesurfer=this.wavesurfers[videoIndex];const duration=wavesurfer.getDuration();const segmentConfigValidKeys=segmentConfig.fields.map(value=>value.name);if(keyAttribute){segmentConfigValidKeys.push(keyAttribute.name);}const lineConfigValidKeys=lineConfig.fields.map(value=>value.name);const{updatedValues:updateLineValues}=triggerForm(lineConfig,{});const{updatedValues:updateSegmentValues}=triggerForm(segmentConfig,{});const ontologyValidKeys=[];ontology.forEach((value,key)=>{ontologyValidKeys.push(key);});for(let i=0;i<segments.length;i+=1){const segment=segments[i];// validate start/end time nan\nif(segment.start){const startNum=Number(segment.start);if(Number.isNaN(startNum)){throw new Error(\"\".concat(translate('PAYLOAD_ERROR_SEGMENT_START_END_NAN'),\" [start NAN] \").concat(JSON.stringify(segment)));}segment.start=startNum;}if(segment.end){const endNum=Number(segment.end);if(Number.isNaN(endNum)){throw new Error(\"\".concat(translate('PAYLOAD_ERROR_SEGMENT_START_END_NAN'),\" [end NAN] \").concat(JSON.stringify(segment)));}segment.end=endNum;}// validate segment id\nsegment.id=segment.id||uuid();// validate segment start\nif(!segment.start&&segment.start!==0){throw new Error(\"\".concat(translate('PAYLOAD_ERROR_SEGMENT_START_NULL'),\" \").concat(JSON.stringify(segment)));}if(segment.end===null||segment.end===undefined){segment.end=duration;}if(segment.end>duration){segment.end=duration;console.log(\"\".concat(translate('PAYLOAD_ERROR_SEGMENT_LENGTH_OVERFLOW'),\" \").concat(JSON.stringify(segment),\" set as max=\").concat(duration));}if(segment.start<0||segment.end<0||segment.start>segment.end){segments.splice(i,1);i-=1;// throw new Error(`${translate('PAYLOAD_ERROR_SEGMENT_START_END_INVALID')} ${JSON.stringify(segment)}`);\n}// validate segment attribute\nsegment.attributes={...updateSegmentValues,...segment.attributes};Object.keys(segment.attributes).forEach(key=>{if(segmentConfigValidKeys.indexOf(key)<0){// throw new Error(`${translate('PAYLOAD_ERROR_INVALID_ATTRIBUTE')}: ${key}`);\ndelete segment.attributes[key];}});if(segment.content==null||!segment.content[0])segment.content=[createLine('none',lineConfig)];segment.content.forEach((line,index,arr)=>{line.role=line.role||'none';line.attributes={...updateLineValues,...line.attributes};if(ontologyValidKeys.indexOf(line.role)<0){line.role='none';// throw new Error(`${translate('PAYLOAD_ERROR_INVALID_ROLE')}: ${line.role}`);\n}Object.keys(line.attributes).forEach(key=>{if(lineConfigValidKeys.indexOf(key)<0){// throw new Error(`${translate('PAYLOAD_ERROR_INVALID_ATTRIBUTE')}: ${key}`);\ndelete line.attributes[key];}});});}// segments = segments.filter(segment => segment.isValid);\nconst MIN_LENGTH=this.props.minSegmentLength;segments.sort((a,b)=>{if(a.start<b.start+MIN_LENGTH&&a.start>b.start-MIN_LENGTH){if(a.end==null)return-1;if(b.end==null)return 1;return a.end-b.end;}return a.start-b.start;});let currentEnd=0;for(let i=0;i<segments.length;i+=1){const segment=segments[i];if(segment.end-segment.start<=MIN_LENGTH&&i<segments.length-1){segments[i+1].start=segment.start;segments.splice(i,1);i-=1;}else if(segment.start>currentEnd-MIN_LENGTH&&segment.start<currentEnd+MIN_LENGTH&&(segment.end>currentEnd||!segment.end)){segments[i].start=currentEnd;currentEnd=segment.end;}else if(segment.start<currentEnd-MIN_LENGTH||currentEnd==null){// throw new Error(`${translate('PAYLOAD_ERROR_OVERLAP_SEGMENT')} ${JSON.stringify(segment)} start=${segment.start} currentEnd=${currentEnd} min=${MIN_LENGTH}`);\nsegments.splice(i,1);i-=1;}else if(segment.start>currentEnd+MIN_LENGTH){segments.splice(i,0,createSegment(currentEnd,segment.start,segmentConfig,lineConfig));currentEnd=segment.end;i+=1;}if(i===segments.length-1){if(segment.end<duration){if(duration-segment.end<=MIN_LENGTH){segment.end=duration;}else{segments.push(createSegment(segment.end,duration,segmentConfig,lineConfig));}}}}// videoIndex, segments\nthis.props.parseSegments({videoIndex,segments});return segments;}initRegion(videoIndex,segments){const wavesurfer=this.wavesurfers[videoIndex];wavesurfer.frame=wavesurfer.addRegion({start:segments[0].start,end:segments[0].end,color:'rgba(0,0,0,0)',resize:false,drag:false});wavesurfer.frame.element.classList.add('segment-frame');for(let segmentIndex=0;segmentIndex<segments.length;segmentIndex+=1){const segment=segments[segmentIndex];segment.content.forEach((line,lineIndex)=>{var _this$props$styleConf;const attributes=((_this$props$styleConf=this.props.styleConfig)===null||_this$props$styleConf===void 0?void 0:_this$props$styleConf.mode)===StyleConfigMode.segment?segment.attributes:line.attributes;this.insertLine({videoIndex,segmentIndex,lineIndex,role:line.role,start:segment.start,end:segment.end,attributes});});this.insertAnchor({videoIndex,segmentIndex,start:segment.start});}}getSegmentByRegion(region){let segmentIndex=-1;const{segments}=this.current;segments.forEach((segment,index)=>{if(segment.indexOf(region)>=0)segmentIndex=index;});return segmentIndex;}seekCurrentAudio(){let currentTime=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;const{wavesurfer}=this.current;const duration=wavesurfer.getDuration();/*\n    currentTime = currentTime || 0;\n    let rate = currentTime / duration;\n    if (rate > 1) rate = 1;\n    if (rate < 0) rate = 0;\n    wavesurfer.seekTo(rate);\n    */ // Skip function wavesurfer.seekTo(progress), use wavesurfer.backend.seekTo(time) instead.\n// Fireevent seek will be ignored\nif(currentTime<0)currentTime=0;if(currentTime>duration)currentTime=duration;wavesurfer.backend.seekTo(currentTime);}handleRegionClick(region,e){e.stopPropagation();const{currentPlayMode}=this.props;if(region.data.type==='temp'){this.setCurrentScroll(region.start,0,true);region.play();}else if(region.data.type==='line'){const segmentIndex=this.getSegmentByRegion(region);const cursorTime=this.getCursorTime();const start=cursorTime>0&&(e.altKey||e.ctrlKey)||currentPlayMode==='overallLoop'?cursorTime:null;if(segmentIndex>=0)this.props.setCurrentSegment({index:segmentIndex,start});}else if(region.data.type==='anchor'||region.data.type==='tempAnchor'){const{anchorSelected}=this.current;if(region!==anchorSelected)this.setSelectedAnchor(region);else this.removeSelectedAnchor();}}setSelectedAnchor(region){this.removeSelectedAnchor();region.mark.classList.add('anchor-mark-selected');this.current.anchorSelected=region;}getCursorTime(){return this.state.cursorTime;}setCurrentSpeed(speed){var _this$current$wavesur;(_this$current$wavesur=this.current.wavesurfer)===null||_this$current$wavesur===void 0?void 0:_this$current$wavesur.setPlaybackRate(speed);}resetRegionTitle(){const{segments}=this.current;segments.forEach((segment,segmentIndex)=>{segment.forEach((line,lineIndex)=>{line.title.innerText=lineIndex===0?\"\".concat(segmentIndex+1,\"\\n\").concat((line.end-line.start).toFixed(3),\" [\").concat(formatTimestamp(line.start),\"~\").concat(formatTimestamp(line.end),\"]\"):'';});});}moveRegionsInBatch(step){const{wavesurfer,anchors,segmentSelected}=this.current;const min=0;const max=wavesurfer.getDuration();Object.keys(wavesurfer.regions.list).forEach(id=>{const region=wavesurfer.regions.list[id];if(region.data.type!=='line'){return;}this.__moveRegion(region,step,min,max);if(segmentSelected===region){wavesurfer.frame.update({start:region.start,end:region.end});}});anchors.forEach(anchor=>{this.__moveRegion(anchor,step,min,max);});this.props.moveSegmentInBatch({step,min,max});this.resetRegionTitle();}__moveRegion(region,step,min,max){if(region.start>min||region.end<max){if(region.start>min){region.start=region.start+step<min?min:region.start+step;}if(region.end<max){region.end=region.end+step>max?max:region.end+step;}region.update({start:region.start,end:region.end});}}handleAnchorDrag(region){const{wavesurfer,anchors,segments,segmentSelected}=this.current;const{minSegmentLength,toolMode}=this.props;const i=anchors.indexOf(region);if(i<0)return false;const leftBoundary=i===0?0:anchors[i-1].start;const rightBoundary=i===anchors.length-1?wavesurfer.getDuration():anchors[i+1].start;if(region.start<rightBoundary-minSegmentLength&&region.start>leftBoundary+minSegmentLength&&!isAnnotationReadonly(toolMode)){region.data.prevStart=region.start;const prevSegment=segments[i];const nextSegment=segments[i+1];prevSegment.forEach(line=>{line.update({end:region.start});});nextSegment.forEach(line=>{line.update({start:region.start});});this.props.setSegmentTimestamp({segmentIndex:i,end:region.start});this.props.setSegmentTimestamp({segmentIndex:i+1,start:region.start});this.resetRegionTitle();if(segmentSelected===prevSegment[0]){wavesurfer.frame.update({start:prevSegment[0].start,end:prevSegment[0].end});}if(segmentSelected===nextSegment[0]){wavesurfer.frame.update({start:nextSegment[0].start,end:nextSegment[0].end});}return true;}region.update({start:region.data.prevStart,end:region.data.prevStart});return false;}handleRegionUpdate(region,e){const{type}=region.data;const{segmentSelected}=this.current;if(type==='temp'&&region!==segmentSelected){this.setSelectedSegment(region);region.element.classList.add('line-region');}}handleRegionEdit(region){const{type}=region.data;const{wavesurfer}=this.current;if(type==='temp'){if(region.end-region.start<this.props.minSegmentLength||this.props.currentPlayMode==='overallLoop'){this.removeSelectedSegment();}else{region.play();this.insertTempAnchor({start:region.start,end:region.end});wavesurfer.frame.update({start:region.start,end:region.end});}}else if(type==='anchor'){const{prevStart}=region.data;const{anchors}=this.current;const result=this.handleAnchorDrag(region);if(result===false)return;const dragAnchorIndex=anchors.indexOf(region);this.addHistory('dragAnchor',{dragAnchorIndex,prevStart});this.setSelectedAnchor(region);}else if(type==='tempAnchor'){this.setTempSegment();}}setTempSegment(){const{segmentSelected,wavesurfer}=this.current;const{leftTempAnchor,rightTempAnchor}=segmentSelected;if(leftTempAnchor.start>rightTempAnchor.start-this.props.minSegmentLength){leftTempAnchor.update({start:leftTempAnchor.data.prevStart});rightTempAnchor.update({start:rightTempAnchor.data.prevStart});}else{leftTempAnchor.data.prevStart=leftTempAnchor.start;rightTempAnchor.data.prevStart=rightTempAnchor.start;segmentSelected.update({start:leftTempAnchor.start,end:rightTempAnchor.start});wavesurfer.frame.update({start:segmentSelected.start,end:segmentSelected.end});}}handleRegionOut(region){const{currentPlayMode}=this.props;const{segmentSelected,wavesurfer}=this.current;const{type}=region.data;if(type!=='line'&&type!=='temp')return;if(segmentSelected===region&&currentPlayMode==='regionLoop'){this.seekCurrentAudio(region.start);this.setCurrentScroll(region.start,0,true);}else if(segmentSelected===region&&currentPlayMode==='regionPlay'){wavesurfer.pause();this.seekCurrentAudio(region.end);}}handlePlayPause(){this.props.setPlayingState({isPlaying:this.current.wavesurfer.isPlaying()});}handleRegionContextmenu(region,e){e.preventDefault();if(region.data.type==='anchor'){const{anchors,segments}=this.current;const i=anchors.indexOf(region);const nextSegment=segments[i+1];const prevSegment=segments[i];const nextRules=[];const prevRules=[];prevSegment.forEach((line,index)=>{prevRules.push({role:line.role,start:line.start,end:line.end,segmentIndex:i,lineIndex:index});});nextSegment.forEach((line,index)=>{nextRules.push({role:line.role,start:line.start,end:line.end,segmentIndex:i+1,lineIndex:index});});this.mergeSegment(region);const mergeSec=region.start;this.addHistory('mergeSegment',{mergeSec,prevRules,nextRules});}}mergeSegment(region){const{anchors,segments,anchorSelected,segmentSelected,wavesurfer}=this.current;const i=anchors.indexOf(region);const nextSegment=segments[i+1];const prevSegment=segments[i];const{start}=prevSegment[0];const{end}=nextSegment[0];const prevRules=[];if(anchorSelected===region)this.removeSelectedAnchor();region.remove();anchors.splice(i,1);this.props.setSegmentTimestamp({segmentIndex:i,end});prevSegment.forEach((line,index)=>{prevRules.push(line.role);line.update({end});});this.props.setCurrentSegment({index:i});this.props.mergeSegmentBackward({segmentIndex:i+1});nextSegment.forEach(line=>{if(prevRules.indexOf(line.role)<0&&line.role!=='none'){this.insertLine({start,end,role:line.role,segmentIndex:i,lineIndex:prevSegment.length});}line.remove();});segments.splice(i+1,1);if(segmentSelected===prevSegment[0]){wavesurfer.frame.update({start:prevSegment[0].start,end:prevSegment[0].end});}this.resetRegionTitle();}// eslint-disable-next-line class-methods-use-this\nsetPlayMode(mode){// none\n}checkNearbyAnchor(sec){const{anchors}=this.current;const{minSegmentLength}=this.props;let invalidAnchor=null;let minDistance=null;anchors.forEach(value=>{const distance=Math.abs(value.start-sec);if(distance<minSegmentLength){if(!invalidAnchor||minDistance>distance){invalidAnchor=value;minDistance=distance;}}});return invalidAnchor;}singleLination(sec){const{minSegmentLength,annotateDisabled}=this.props;const{wavesurfer,anchors}=this.current;if(sec<minSegmentLength||annotateDisabled)return;if(sec>wavesurfer.getDuration()-minSegmentLength)return;const nearbyAnchor=this.checkNearbyAnchor(sec);if(nearbyAnchor){const prevStart=nearbyAnchor.start;nearbyAnchor.update({start:sec});this.handleAnchorDrag(nearbyAnchor);const nearbyAnchorIndex=anchors.indexOf(nearbyAnchor);this.addHistory('singleLination-adjust',{nearbyAnchorIndex,prevStart});}else{const splitSegment=this.getSegmentByTime(sec);const splitAnchor=this.splitSegment(splitSegment,sec);const splitAnchorIndex=anchors.indexOf(splitAnchor);this.addHistory('singleLination-split',{splitAnchorIndex});}}getSegmentByTime(sec){const{segments}=this.current;// eslint-disable-next-line no-restricted-syntax\nfor(const value of segments){const line=value[0];if(line.start<=sec&&line.end>=sec)return value;}return null;}splitSegment(segment,sec,prevRules,nextRules,focusPrevSegment){const{segments,anchors}=this.current;if(!segment)return;const{end}=segment[0];const i=segments.indexOf(segment);const anchor=this.insertAnchor({start:sec,segmentIndex:i+1});this.insertSegment({start:sec,end,segmentIndex:i+1});segment.forEach(line=>{line.update({end:sec});});if(prevRules&&nextRules){const arr=[];prevRules.forEach(rule=>{arr.push(rule.role);});segment.forEach((line,index)=>{if(arr.indexOf(line.role)<0)this.deleteLine({lineIndex:index,segmentIndex:i});});this.deleteLine({lineIndex:0,segmentIndex:i+1});nextRules.forEach(role=>{this.insertLine(role);});const splitAnchorIndex=anchors.indexOf(anchor);this.addHistory('singleLination-split',{splitAnchorIndex});}this.props.setSegmentTimestamp({segmentIndex:i,end:sec});this.props.splitSegmentForward({segmentIndex:i,start:sec,end,prevRules,nextRules});this.removeSelectedSegment();this.resetRegionTitle();this.props.setCurrentSegment({index:focusPrevSegment?i:i+1});return anchor;}deleteLine(data){const{segments}=this.current;const{segmentIndex,lineIndex}=data;const segment=segments[segmentIndex];const line=segment[lineIndex];data.start=line.start;data.end=line.end;data.role=line.role;line.remove();segment.splice(lineIndex,1);// eslint-disable-next-line no-shadow\nsegment.forEach((li,index,array)=>{const height=100/array.length;const top=height*index;li.element.style.height=\"\".concat(height,\"%\");li.element.style.top=\"\".concat(top,\"%\");});this.resetRegionTitle();}toppingLine(data){const{segments}=this.current;const{segmentIndex,lineIndex}=data;const segment=segments[segmentIndex];const line=segment[lineIndex];segment.splice(lineIndex,1);segment.unshift(line);// eslint-disable-next-line no-shadow\nsegment.forEach((li,index,array)=>{const height=100/array.length;const top=height*index;li.element.style.height=\"\".concat(height,\"%\");li.element.style.top=\"\".concat(top,\"%\");});this.resetRegionTitle();}doubleLination(start,end){const{minSegmentLength,annotateDisabled}=this.props;const{anchors,segmentSelected}=this.current;if(!start||Number.isNaN(start))start=segmentSelected.start;if(!end||Number.isNaN(end))end=segmentSelected.end;if(end-start<=minSegmentLength||annotateDisabled)return;const nearbyLeftAnchor=this.checkNearbyAnchor(start);const nearbyRightAnchor=this.checkNearbyAnchor(end);const prevLeftStart=nearbyLeftAnchor?nearbyLeftAnchor.start:-1;const prevRightStart=nearbyRightAnchor?nearbyRightAnchor.start:-1;if(start<minSegmentLength)return;if(end>this.current.wavesurfer.getDuration()-minSegmentLength)return;if(nearbyLeftAnchor&&nearbyRightAnchor){nearbyLeftAnchor.update({start});this.handleAnchorDrag(nearbyLeftAnchor);nearbyRightAnchor.update({start:end});this.handleAnchorDrag(nearbyRightAnchor);const nearbyLeftAnchorIndex=anchors.indexOf(nearbyLeftAnchor);const nearbyRightAnchorIndex=anchors.indexOf(nearbyRightAnchor);this.addHistory('doubleLination-adjust-adjust',{nearbyLeftAnchorIndex,prevLeftStart,nearbyRightAnchorIndex,prevRightStart});}else if(!nearbyLeftAnchor&&nearbyRightAnchor){const splitLeftSegment=this.getSegmentByTime(start);const splitLeftAnchor=this.splitSegment(splitLeftSegment,start);nearbyRightAnchor.update({start:end});this.handleAnchorDrag(nearbyRightAnchor);const splitLeftAnchorIndex=anchors.indexOf(splitLeftAnchor);const nearbyRightAnchorIndex=anchors.indexOf(nearbyRightAnchor);this.addHistory('doubleLination-split-adjust',{splitLeftAnchorIndex,nearbyRightAnchorIndex,prevRightStart});}else if(nearbyLeftAnchor&&!nearbyRightAnchor){nearbyLeftAnchor.update({start});this.handleAnchorDrag(nearbyLeftAnchor);const splitRightSegment=this.getSegmentByTime(end);const splitRightAnchor=this.splitSegment(splitRightSegment,end);const splitRightAnchorIndex=anchors.indexOf(splitRightAnchor);const nearbyLeftAnchorIndex=anchors.indexOf(nearbyLeftAnchor);this.addHistory('doubleLination-adjust-split',{nearbyLeftAnchorIndex,prevLeftStart,splitRightAnchorIndex});}else{const splitLeftSegment=this.getSegmentByTime(start);const splitLeftAnchor=this.splitSegment(splitLeftSegment,start);const splitRightSegment=this.getSegmentByTime(end);const splitRightAnchor=this.splitSegment(splitRightSegment,end,null,null,true);const splitRightAnchorIndex=anchors.indexOf(splitRightAnchor);const splitLeftAnchorIndex=anchors.indexOf(splitLeftAnchor);this.addHistory('doubleLination-split-split',{splitLeftAnchorIndex,splitRightAnchorIndex});}}handleKeyDown(e){if(window.disableLongAudioHotKeys)return;if(isInput())return;if(isAnnotationReadonly(this.props.toolMode))return;// if (this.props.toolMode === 'QA_RO') return;\nif(e.keyCode===83){// s\nconst sec=this.getCursorTime();if(sec<0)return;this.singleLination(sec);}else if(e.keyCode===68){// d\nconst{segmentSelected}=this.current;if(segmentSelected&&segmentSelected.data.type==='temp')this.doubleLination();}else if(e.keyCode===188){// , || <\nif(e.ctrlKey){this.moveRegionsInBatch(-ANCHOR_MOVEMENT_STEP);this.addHistory('bulkMovement',{step:-ANCHOR_MOVEMENT_STEP});}else{this.forwardAnchor();}}else if(e.keyCode===190){// . | >\nif(e.ctrlKey){this.moveRegionsInBatch(ANCHOR_MOVEMENT_STEP);this.addHistory('bulkMovement',{step:ANCHOR_MOVEMENT_STEP});}else{this.backwardAnchor();}}else if(e.ctrlKey&&e.keyCode===90){// z\nthis.recallHistory('undo');}else if(e.ctrlKey&&e.keyCode===89){// y\nthis.recallHistory('redo');}else if((e.keyCode===8||e.keyCode===46)&&e.ctrlKey){// ctrl + delete/backspace\nthis.clearAll();}}backwardAnchor(){const{anchorSelected,wavesurfer,anchors}=this.current;if(!anchorSelected)return;if(anchorSelected.start+ANCHOR_MOVEMENT_STEP>=wavesurfer.getDuration())return;anchorSelected.update({start:anchorSelected.start+ANCHOR_MOVEMENT_STEP});if(anchorSelected.data.type==='anchor'){this.handleAnchorDrag(anchorSelected);const trimAnchorIndex=anchors.indexOf(anchorSelected);this.addHistory('trimAnchor',{trimAnchorIndex,prevStart:anchorSelected.start-ANCHOR_MOVEMENT_STEP});}else if(anchorSelected.data.type==='tempAnchor')this.setTempSegment();}forwardAnchor(){const{anchorSelected,anchors}=this.current;if(!anchorSelected)return;if(anchorSelected.start-ANCHOR_MOVEMENT_STEP<=0)return;anchorSelected.update({start:anchorSelected.start-ANCHOR_MOVEMENT_STEP});if(anchorSelected.data.type==='anchor'){this.handleAnchorDrag(anchorSelected);const trimAnchorIndex=anchors.indexOf(anchorSelected);this.addHistory('trimAnchor',{trimAnchorIndex,prevStart:anchorSelected.start+ANCHOR_MOVEMENT_STEP});}else if(anchorSelected.data.type==='tempAnchor')this.setTempSegment();}handleRegionIn(region){const{currentPlayMode,currentSegment}=this.props;const{wavesurfer}=this.current;const{type}=region.data;if(type!=='line')return;if(currentPlayMode==='overallLoop'){const segmentIndex=this.getSegmentByRegion(region);const currentTime=wavesurfer.getCurrentTime();if(segmentIndex===currentSegment)return;if(segmentIndex>=0)this.props.setCurrentSegment({index:segmentIndex,start:currentTime});}}initMiniMap(i){const wave=this.container.minimap[i].getElementsByTagName('wave')[0];const timestamp=document.createElement('div');const currentTime=this.wavesurfers[i].getDuration();timestamp.className='wavesurfer-timestamp';timestamp.innerText=\"00:00.000/\".concat(formatTimestamp(currentTime));wave.appendChild(timestamp);this.wavesurfers[i].timestamp=timestamp;}initWaveSurfer(){const size=this.props.videos.length;const urls=[];for(let i=0;i<size;i+=1){if(this.props.videos[i].loaded&&!this.wavesurfers[i]){this.wavesurfers[i]=WaveSurfer.create({container:this.container.waveform[i],autoCenter:false,backend:'MediaElement',normalize:true,loopSelection:true,scrollParent:true,// partialRender: true,\nbackgroundColor:defaultColor.defaultGray,waveColor:defaultColor.darkGray,progressColor:defaultColor.darkGray,cursorColor:defaultColor.defaultRed,pixelRatio:1,maxCanvasWidth:4000,plugins:[RegionsPlugin.create(),CursorPlugin.create({width:'1px',height:'10px',container:this.container.audioContainer[i],color:defaultColor.defaultGreen,showTime:true,opacity:1,customShowTimeStyle:{color:defaultColor.defaultGreen,fontSize:'14px',paddingLeft:'5px',position:'absolute',bottom:'3px'},formatTimeCallback:sec=>{this.setState({cursorTime:sec});return formatTimestamp(sec);}}),TimelinePlugin.create({container:this.container.timeline[i],primaryFontColor:defaultColor.defaultWhite,secondaryFontColor:defaultColor.defaultWhite,primaryColor:defaultColor.defaultWhite,secondaryColor:defaultColor.defaultWhite,fontSize:'10',notchPercentHeight:30,timeInterval,primaryLabelInterval,secondaryLabelInterval,formatTimeCallback}),MinimapPlugin.create({container:this.container.minimap[i]})]});urls[i]=this.container.videoContainer[i];this.wavesurfers[i].on('ready',()=>{this.wavesurfers[i].pause();this.wavesurfers[i].enableDragSelection({color:hexToRgba(defaultColor.defaultRed,defaultColor.defaultAlpha),drag:false,resize:false,data:{type:'temp'},formatTimeCallback:()=>''});let segments;try{segments=this.parseSegments(i);}catch(e){console.log('Error',e);this.props.setErrorMsg({errorMsg:e===null||e===void 0?void 0:e.toString()});return;}this.props.setLoading(false);this.initRegion(i,segments);this.initMiniMap(i);if(!i){this.setNewVideo();this.setSelectedSegment(this.current.segments[0][0]);}if(i===0)this.addWindowEvent();this.wavesurfers[i].on('play',e=>this.handlePlayPause());this.wavesurfers[i].on('pause',e=>this.handlePlayPause());this.wavesurfers[i].on('region-updated',(region,e)=>this.handleRegionUpdate(region,e));this.wavesurfers[i].on('region-contextmenu',(region,e)=>this.handleRegionContextmenu(region,e));this.wavesurfers[i].on('region-update-end',(region,e)=>this.handleRegionEdit(region));this.wavesurfers[i].on('region-out',(region,e)=>this.handleRegionOut(region));this.wavesurfers[i].on('region-in',(region,e)=>this.handleRegionIn(region));this.wavesurfers[i].on('region-click',(region,e)=>this.handleRegionClick(region,e));this.wavesurfers[i].un('ready');this.wavesurfers[i].un('error');this.wavesurfers[i].on('redraw',this.props.setXScroll);this.props.setVideoValid({index:i});this.props.updateVideoInfo({index:i,duration:this.wavesurfers[i].getDuration()});});this.wavesurfers[i].on('error',error=>{notification.error({message:\"\".concat(translate('AUDIO_ERROR'),\" \").concat(translate('RECORD_PREFIX')).concat(i+1)});this.props.setAudioErrorMsg({index:i,errorMsg:\"\".concat(translate('AUDIO_ERROR'),\" \").concat(translate('RECORD_PREFIX')).concat(i+1,\" \").concat(urls[i].src,\" \").concat(error)});this.wavesurfers[i].un('ready');this.wavesurfers[i].un('error');this.wavesurfers[i].destroy();if(i===size-1){this.props.setLoading(false);}});this.undoList[i]=[];this.redoList[i]=[];this.container.audioContainer[i].addEventListener('mousemove',()=>this.updateMeasurement(i));this.container.audioContainer[i].addEventListener('wheel',()=>this.updateMeasurement(i));this.wavesurfers[i].load(this.container.videoContainer[i]);}}}updateMeasurement(index){if(this.current.videoIndex===index){// current video\nlet cursorHelper=this.container.audioContainer[index].getElementsByClassName('audio-cursor-helper')[0];if(this.props.selectedMeasurement<0){if(cursorHelper){cursorHelper.remove();}}else{const{zoom,wavesurfer}=this.current;if(!cursorHelper){var _wavesurfer$cursor;cursorHelper=document.createElement('div');cursorHelper.className='audio-cursor-helper';wavesurfer===null||wavesurfer===void 0?void 0:(_wavesurfer$cursor=wavesurfer.cursor)===null||_wavesurfer$cursor===void 0?void 0:_wavesurfer$cursor.cursor.appendChild(cursorHelper);}// calc width\nconst duration=wavesurfer.getDuration();const{offsetWidth}=wavesurfer.container;const totalWidth=offsetWidth*zoom;const width=totalWidth/duration*this.props.selectedMeasurement;cursorHelper.style.width=\"\".concat(width,\"px\");cursorHelper.style.left=\"-\".concat(width/2,\"px\");}}}addWindowEvent(){window.addEventListener('keydown',e=>this.handleKeyDown(e));window.addEventListener('resize',e=>this.setCurrentZoom());}// eslint-disable-next-line react/no-deprecated\ncomponentWillMount(){this.props.getWavesurfers({wavesurfers:this});}render(){return null;}}const mapStateToProps=state=>({videos:state.videos,results:state.results,segmentConfig:state.segmentConfig,lineConfig:state.lineConfig,ontology:state.ontology,currentSegment:state.currentSegment,currentVideo:state.currentVideo,currentPlayMode:state.currentPlayMode,minSegmentLength:state.minSegmentLength,isPlaying:state.isPlaying,toolMode:state.toolMode,spaceLine:state.spaceLine,selectedMeasurement:state.selectedMeasurement,keyAttribute:state.keyAttribute,annotateDisabled:state.annotateDisabled,isLoadedAlaw:state.isLoadedAlaw,styleConfig:state.styleConfig});const mapDispatchToProps={debug,getWavesurfers,setPlayingState,setSegmentTimestamp,mergeSegmentBackward,splitSegmentForward,setVideoValid,setVideoZoom,deleteLine,pushLine,setLineRole,removeSegment,setSegments,parseSegments,setErrorMsg,setAudioErrorMsg,moveSegmentInBatch,updateVideoInfo,setLoading};export default connect(mapStateToProps,mapDispatchToProps,null,{forwardRef:true})(WavesurferComp);","map":{"version":3,"names":["React","ReactDOM","hexToRgba","notification","Modal","cloneDeep","WaveSurfer","TimelinePlugin","RegionsPlugin","CursorPlugin","MinimapPlugin","connect","v4","uuid","defaultColor","formatTimestamp","translate","triggerForm","StyleConfigMode","getConfigColor","HandleIcon","debug","getWavesurfers","mergeSegmentBackward","setPlayingState","setSegmentTimestamp","splitSegmentForward","setVideoValid","setVideoZoom","deleteLine","pushLine","setLineRole","removeSegment","setSegments","parseSegments","setErrorMsg","setAudioErrorMsg","moveSegmentInBatch","updateVideoInfo","setLoading","createLine","createSegment","isInput","isAnnotationReadonly","timeInterval","primaryLabelInterval","secondaryLabelInterval","formatTimeCallback","i18n","ANCHOR_MOVEMENT_STEP","WavesurferComp","Component","constructor","insertLine","data","_styleConfig$groups","start","end","role","videoIndex","segmentIndex","lineIndex","attributes","segments","regions","ontology","styleConfig","props","Number","isNaN","parseInt","current","wavesurfer","wavesurfers","parseFloat","getDuration","configColor","groups","length","color","get","defaultWhite","defaultAlpha","item","resize","drag","type","region","addRegion","element","classList","add","mark","document","createElement","className","appendChild","title","innerText","concat","toFixed","splice","filter","line","forEach","index","array","height","top","style","renderSegments","videos","results","anchors","v","i","ready","clearRegions","initRegion","setNewVideo","setSelectedSegment","undoList","redoList","container","minimap","waveform","timeline","audioContainer","videoContainer","zoom","segmentSelected","anchorSelected","undoLock","redoLock","state","cursorTime","currentSegments","shouldComponentUpdate","nextProps","isLoadedAlaw","componentDidUpdate","initWaveSurfer","clearAll","confirm","content","autoFocusButton","okText","okType","cancelText","onOk","currentSegment","afterSegments","id","text","qaChecked","undefined","qaComment","qaReason","addHistory","after","currentIndex","before","recallList","prev","trimAnchor","push","shift","recallHistory","action","recallItem","pop","singleLination","sec","doubleLination","nearbyAnchorIndex","prevStart","nearbyAnchor","update","handleAnchorDrag","splitAnchorIndex","splitAnchor","mergeSegment","nearbyLeftAnchorIndex","prevLeftStart","nearbyRightAnchorIndex","prevRightStart","nearbyLeftAnchor","nearbyRightAnchor","splitRightAnchorIndex","splitRightAnchor","splitLeftAnchorIndex","splitLeftAnchor","dragAnchorIndex","dragAnchor","trimAnchorIndex","mergeSec","prevRules","nextRules","splitSegment","getSegmentByTime","step","bulkMovementDirection","moveRegionsInBatch","setCurrentSegment","isDestroyed","console","error","setCurrentZoom","setCurrentVideo","newVideoIndex","pause","removeSelectedSegment","removeSelectedAnchor","remove","newZoom","duration","getCursorTime","currentTime","getCurrentTime","offsetWidth","offsetLeft","cursor","totalWidth","pxPerSec","setCurrentScroll","componentDidMount","setInterval","isPlaying","timestamp","componentWillUnmount","Array","isArray","c","removeEventListener","updateMeasurement","destTime","boundaryCheck","scrollLeft","lastChild","minPxPerSec","params","scrollTime","drawer","recenter","rightBoundaryTime","leftBoundaryTime","insertSegment","insertTempAnchor","items","leftTempAnchor","rightTempAnchor","handle","render","width","viewBox","hanlde","insertAnchor","toolMode","frame","_this$current$segment","_this$current$segment2","currentPlayMode","seekCurrentAudio","play","setLineColor","_styleConfig$groups2","segment","prevRole","mode","e","setSegmentColor","lines","roleColor","rgba","getAudioContainer","getVideoContainer","pauseVideo","playVideo","forwardVideo","skipForward","backwardVideo","skipBackward","segs","lineConfig","keyAttribute","segmentConfig","segmentConfigValidKeys","fields","map","value","name","lineConfigValidKeys","updatedValues","updateLineValues","updateSegmentValues","ontologyValidKeys","key","startNum","Error","JSON","stringify","endNum","log","Object","keys","indexOf","arr","MIN_LENGTH","minSegmentLength","sort","a","b","currentEnd","_this$props$styleConf","getSegmentByRegion","arguments","backend","seekTo","handleRegionClick","stopPropagation","altKey","ctrlKey","setSelectedAnchor","setCurrentSpeed","speed","_this$current$wavesur","setPlaybackRate","resetRegionTitle","min","max","list","__moveRegion","anchor","leftBoundary","rightBoundary","prevSegment","nextSegment","handleRegionUpdate","handleRegionEdit","result","setTempSegment","handleRegionOut","handlePlayPause","handleRegionContextmenu","preventDefault","setPlayMode","checkNearbyAnchor","invalidAnchor","minDistance","distance","Math","abs","annotateDisabled","focusPrevSegment","rule","li","toppingLine","unshift","splitLeftSegment","splitRightSegment","handleKeyDown","window","disableLongAudioHotKeys","keyCode","forwardAnchor","backwardAnchor","handleRegionIn","initMiniMap","wave","getElementsByTagName","size","urls","loaded","create","autoCenter","normalize","loopSelection","scrollParent","backgroundColor","defaultGray","waveColor","darkGray","progressColor","cursorColor","defaultRed","pixelRatio","maxCanvasWidth","plugins","defaultGreen","showTime","opacity","customShowTimeStyle","fontSize","paddingLeft","position","bottom","setState","primaryFontColor","secondaryFontColor","primaryColor","secondaryColor","notchPercentHeight","on","enableDragSelection","errorMsg","toString","addWindowEvent","un","setXScroll","message","src","destroy","addEventListener","load","cursorHelper","getElementsByClassName","selectedMeasurement","_wavesurfer$cursor","left","componentWillMount","mapStateToProps","currentVideo","spaceLine","mapDispatchToProps","forwardRef"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/WavesurferComp/WavesurferComp.jsx"],"sourcesContent":["/* eslint-disable class-methods-use-this */\n/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport hexToRgba from 'hex-to-rgba';\nimport { notification, Modal } from 'antd';\nimport { cloneDeep } from 'lodash';\nimport WaveSurfer from 'wavesurfer.js/dist/wavesurfer';\nimport TimelinePlugin from 'wavesurfer.js/dist/plugin/wavesurfer.timeline.min.js';\nimport RegionsPlugin from 'wavesurfer.js/dist/plugin/wavesurfer.regions.min.js';\nimport CursorPlugin from 'wavesurfer.js/dist/plugin/wavesurfer.cursor.min.js';\nimport MinimapPlugin from 'wavesurfer.js/src/plugin/minimap';\nimport { connect } from 'react-redux';\nimport { v4 as uuid } from 'uuid';\nimport { defaultColor, formatTimestamp, translate, triggerForm, StyleConfigMode, getConfigColor } from '../../constants';\nimport HandleIcon from '../common/Icons/HandleIcon';\nimport {\n  debug,\n  getWavesurfers,\n  mergeSegmentBackward,\n  setPlayingState,\n  setSegmentTimestamp,\n  splitSegmentForward,\n  setVideoValid,\n  setVideoZoom,\n  deleteLine,\n  pushLine,\n  setLineRole,\n  removeSegment,\n  setSegments,\n  parseSegments,\n  setErrorMsg,\n  setAudioErrorMsg,\n  moveSegmentInBatch,\n  updateVideoInfo,\n  setLoading,\n} from '../../redux/action';\nimport './WavesurferComp.scss';\nimport { createLine, createSegment, isInput } from '../../redux/reducer/segmentController';\nimport { isAnnotationReadonly } from '../../../../utils/tool-mode';\nimport { timeInterval, primaryLabelInterval, secondaryLabelInterval, formatTimeCallback } from '../utils/TimelineUtil';\nimport i18n from '../../locales';\n\nexport const ANCHOR_MOVEMENT_STEP = 0.01;\n\nclass WavesurferComp extends React.Component {\n  constructor() {\n    super();\n    this.wavesurfers = [];\n    this.undoList = [];\n    this.redoList = [];\n    this.container = {\n      minimap: null, // Minimap container\n      waveform: null, // Waveform container\n      timeline: null, // Timeline container\n      audioContainer: null, // Cursor container\n      videoContainer: null, // Video container\n    };\n    this.regions = {\n      segments: [],\n      anchors: [],\n    };\n    this.current = {\n      zoom: 1,\n      videoIndex: 0,\n      wavesurfer: null,\n      segments: null,\n      anchors: null,\n      segmentSelected: null,\n      anchorSelected: null,\n      undoList: null,\n      redoList: null,\n      undoLock: false,\n      redoLock: false,\n    };\n    this.state = {\n      cursorTime: 0, // seconds\n    };\n  }\n\n  get currentSegments() {\n    return this.props.results[this.current.videoIndex];\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return nextProps.isLoadedAlaw !== this.props.isLoadedAlaw;\n  }\n\n  componentDidUpdate() {\n    this.initWaveSurfer();\n  }\n\n  clearAll() {\n    Modal.confirm({\n      className: 'modal-root',\n      title: i18n.translate('COMMON_CLAER_CONFIRM_TITLE'),\n      content: i18n.translate('COMMON_CLAER_CONFIRM_DESC'),\n      autoFocusButton: null,\n      okText: i18n.translate('COMMON_CLAER_CONFIRM_SURE'),\n      okType: 'danger',\n      cancelText: i18n.translate('COMMON_CLAER_CONFIRM_CANCEL'),\n      onOk: () => {\n        const { currentSegment } = this.props;\n        const { videoIndex } = this.current;\n        const segments = cloneDeep(this.currentSegments);\n        const afterSegments = [{\n          id: uuid(),\n          start: 0,\n          end: segments[segments.length - 1].end,\n          attributes: {},\n          content: [{ role: 'none', text: '', attributes: {} }],\n          qaChecked: undefined,\n          qaComment: '',\n          qaReason: null,\n        }];\n        this.props.setSegments({ videoIndex, segments: afterSegments });\n        this.wavesurfers[videoIndex].clearRegions();\n        this.regions.segments[videoIndex] = [];\n        this.regions.anchors[videoIndex] = [];\n        this.current = {\n          ...this.current,\n          anchorSelected: null,\n          anchors: null,\n          segmentSelected: null,\n          segments: null,\n          videoIndex: 0,\n        };\n        const currentSegments = this.parseSegments(videoIndex, afterSegments);\n        this.initRegion(videoIndex, currentSegments);\n        this.current.segments = this.regions.segments[videoIndex];\n        this.current.anchors = this.regions.anchors[videoIndex];\n        this.addHistory('clear_all', {\n          after: {\n            videoIndex,\n            currentIndex: 0,\n            segments: afterSegments\n          },\n          before: {\n            videoIndex,\n            currentIndex: currentSegment,\n            segments\n          },\n        });\n      },\n    });\n  }\n\n  addHistory(type, data) {\n    const { undoList, undoLock, redoLock, redoList } = this.current;\n    let recallList;\n    if (undoLock) recallList = redoList;\n    else if (redoLock) recallList = undoList;\n    else {\n      recallList = undoList;\n      this.current.redoList = [];\n    }\n    if (type === 'trimAnchor' && recallList.length) {\n      const prev = recallList[recallList.length - 1];\n      if (prev.type === 'trimAnchor' && prev.data.trimAnchor === data.trimAnchor) return;\n    }\n    recallList.push({ type, data });\n    if (recallList.length > 50) recallList.shift();\n  }\n\n  recallHistory(action) {\n    const { undoList, redoList, anchors } = this.current;\n    const recallList = action === 'undo' ? undoList : redoList;\n    if (!recallList.length) return;\n    if (action === 'undo') this.current.undoLock = true; // lock\n    if (action === 'redo') this.current.redoLock = true;\n    const recallItem = recallList.pop();\n    const { type, data } = recallItem;\n    switch (type) {\n      case 'singleLination-recall':\n        this.singleLination(data.sec); // addHistory inside\n        break;\n      case 'doubleLination-recall':\n        this.doubleLination(data.start, data.end); // addHistory inside\n        break;\n      case 'singleLination-adjust':\n        {\n          const { nearbyAnchorIndex, prevStart } = data;\n          const nearbyAnchor = anchors[nearbyAnchorIndex];\n          const sec = nearbyAnchor.start;\n          nearbyAnchor.update({ start: prevStart });\n          this.handleAnchorDrag(nearbyAnchor);\n          this.addHistory('singleLination-recall', { sec });\n        }\n        break;\n      case 'singleLination-split':\n        {\n          const { splitAnchorIndex } = data;\n          const splitAnchor = anchors[splitAnchorIndex];\n          const sec = splitAnchor.start;\n          this.mergeSegment(splitAnchor);\n          this.addHistory('singleLination-recall', { sec });\n        }\n        break;\n      case 'doubleLination-adjust-adjust':\n        {\n          const { nearbyLeftAnchorIndex, prevLeftStart, nearbyRightAnchorIndex, prevRightStart } = data;\n          const nearbyLeftAnchor = anchors[nearbyLeftAnchorIndex];\n          const nearbyRightAnchor = anchors[nearbyRightAnchorIndex];\n          const { start } = nearbyLeftAnchor;\n          const end = nearbyRightAnchor.start;\n          nearbyLeftAnchor.update({ start: prevLeftStart });\n          this.handleAnchorDrag(nearbyLeftAnchor);\n          nearbyRightAnchor.update({ start: prevRightStart });\n          this.handleAnchorDrag(nearbyRightAnchor);\n          this.addHistory('doubleLination-recall', { start, end });\n        }\n        break;\n      case 'doubleLination-adjust-split':\n        {\n          const { nearbyLeftAnchorIndex, prevLeftStart, splitRightAnchorIndex } = data;\n          const nearbyLeftAnchor = anchors[nearbyLeftAnchorIndex];\n          const splitRightAnchor = anchors[splitRightAnchorIndex];\n          const { start } = nearbyLeftAnchor.start;\n          const end = splitRightAnchor.start;\n          nearbyLeftAnchor.update({ start: prevLeftStart });\n          this.handleAnchorDrag(nearbyLeftAnchor);\n          this.mergeSegment(splitRightAnchor);\n          this.addHistory('doubleLination-recall', { start, end });\n        }\n        break;\n      case 'doubleLination-split-adjust':\n        {\n          const { splitLeftAnchorIndex, nearbyRightAnchorIndex, prevRightStart } = data;\n          const splitLeftAnchor = anchors[splitLeftAnchorIndex];\n          const nearbyRightAnchor = anchors[nearbyRightAnchorIndex];\n          const { start } = splitLeftAnchor.start;\n          const end = nearbyRightAnchor.start;\n          this.mergeSegment(splitLeftAnchor);\n          nearbyRightAnchor.update({ start: prevRightStart });\n          this.handleAnchorDrag(nearbyRightAnchor);\n          this.addHistory('doubleLination-recall', { start, end });\n        }\n        break;\n      case 'doubleLination-split-split':\n        {\n          const { splitLeftAnchorIndex, splitRightAnchorIndex } = data;\n          const splitLeftAnchor = anchors[splitLeftAnchorIndex];\n          const splitRightAnchor = anchors[splitRightAnchorIndex];\n          const { start } = splitLeftAnchor.start;\n          const end = splitRightAnchor.start;\n          this.mergeSegment(splitLeftAnchor);\n          this.mergeSegment(splitRightAnchor);\n          this.addHistory('doubleLination-recall', { start, end });\n        }\n        break;\n      case 'pushLine':\n        this.props.deleteLine(data); // addHistory inside\n        break;\n      case 'deleteLine':\n        this.props.pushLine(data); // addHistory inside\n        break;\n      case 'dragAnchor':\n        {\n          const { dragAnchorIndex, prevStart } = data;\n          const dragAnchor = anchors[dragAnchorIndex];\n          const { start } = dragAnchor;\n          dragAnchor.update({ start: prevStart });\n          this.handleAnchorDrag(dragAnchor);\n          this.addHistory('dragAnchor', { dragAnchorIndex, prevStart: start });\n        }\n        break;\n      case 'trimAnchor':\n        {\n          const { trimAnchorIndex, prevStart } = data;\n          const trimAnchor = anchors[trimAnchorIndex];\n          const { start } = trimAnchor;\n          trimAnchor.update({ start: prevStart });\n          this.handleAnchorDrag(trimAnchor);\n          this.addHistory('trimAnchor', { trimAnchorIndex, prevStart: start });\n        }\n        break;\n      case 'mergeSegment':\n        {\n          const { mergeSec, prevRules, nextRules } = data;\n          const splitSegment = this.getSegmentByTime(mergeSec);\n          this.splitSegment(splitSegment, mergeSec, prevRules, nextRules);\n        }\n        break;\n      case 'setLineColor':\n        this.props.setLineRole(data); // addHistory inside\n        break;\n      case 'bulkMovement': {\n        const { step } = data;\n        const bulkMovementDirection = action === 'redo' ? 1 : -1;\n        this.moveRegionsInBatch(bulkMovementDirection * step);\n        this.addHistory('bulkMovement', { step: -bulkMovementDirection * step });\n        break;\n      }\n      case 'clear_all': {\n        const { before, after } = data;\n        const { videoIndex, currentIndex, segments } = action === 'undo' ? before : after;\n        this.wavesurfers[videoIndex].clearRegions();\n        this.props.setSegments({ videoIndex, segments });\n        this.regions = {\n          segments: [],\n          anchors: [],\n        };\n\n        this.regions.segments[videoIndex] = [];\n        this.regions.anchors[videoIndex] = [];\n        this.current = {\n          ...this.current,\n          anchorSelected: null,\n          anchors: null,\n          segmentSelected: null,\n          segments: null,\n          videoIndex: 0,\n        };\n        const currentSegments = this.parseSegments(videoIndex, segments);\n        this.initRegion(videoIndex, currentSegments);\n        this.current.segments = this.regions.segments[videoIndex];\n        this.current.anchors = this.regions.anchors[videoIndex];\n        this.props.setCurrentSegment({ index: currentIndex });\n        break;\n      }\n      default:\n        break;\n    }\n    if (action === 'undo') this.current.undoLock = false; // lock\n    if (action === 'redo') this.current.redoLock = false;\n  }\n\n  // Called after currentVideo change\n  setNewVideo() {\n    const { videoIndex } = this.current;\n    if (this.wavesurfers[videoIndex].isDestroyed) {\n      console.error('Video destroyed:', videoIndex);\n      return;\n    }\n    this.current.wavesurfer = this.wavesurfers[videoIndex];\n    this.current.segments = this.regions.segments[videoIndex];\n    this.current.anchors = this.regions.anchors[videoIndex];\n    this.current.zoom = this.props.videos[videoIndex].zoom;\n    this.current.undoList = this.undoList[videoIndex];\n    this.current.redoList = this.redoList[videoIndex];\n    this.setCurrentZoom();\n  }\n\n  setCurrentVideo(newVideoIndex) {\n    const { videoIndex } = this.current;\n    this.wavesurfers[videoIndex].pause();\n    this.removeSelectedSegment();\n    this.removeSelectedAnchor();\n    this.current.videoIndex = newVideoIndex;\n    this.setNewVideo();\n  }\n\n  removeSelectedAnchor() {\n    const { anchorSelected } = this.current;\n    if (!anchorSelected) return;\n    anchorSelected.mark.classList.remove('anchor-mark-selected');\n    this.current.anchorSelected = null;\n  }\n\n  setCurrentZoom(newZoom) {\n    if (newZoom) this.current.zoom = newZoom;\n    const { zoom, videoIndex, wavesurfer } = this.current;\n    const duration = this.wavesurfers[videoIndex].getDuration();\n    const cursorTime = this.getCursorTime();\n    const currentTime = wavesurfer.getCurrentTime();\n    const { offsetWidth } = wavesurfer.container;\n    const { offsetLeft } = wavesurfer.cursor.cursor;\n    const totalWidth = offsetWidth * zoom;\n    const pxPerSec = totalWidth / duration;\n    wavesurfer.zoom(pxPerSec);\n    this.setCurrentScroll(\n      cursorTime < 0 ? currentTime : cursorTime,\n      cursorTime < 0 ? offsetWidth / 2 : offsetLeft,\n      false,\n    );\n  }\n\n  componentDidMount() {\n    // Record currentTime and locate currentCursor\n    setInterval(() => {\n      if (!this.props.isPlaying) return;\n      const { wavesurfer } = this.current;\n      const currentTime = wavesurfer.getCurrentTime();\n      const duration = wavesurfer.getDuration();\n      wavesurfer.timestamp.innerText = `${formatTimestamp(currentTime)}/${formatTimestamp(duration)}`;\n      this.setCurrentScroll(currentTime, 0, true);\n    }, 200);\n  }\n\n  componentWillUnmount() {\n    if (Array.isArray(this.container.audioContainer)) {\n      this.container.audioContainer.forEach((c) => {\n        if (c) {\n          c.removeEventListener('mousemove', this.updateMeasurement);\n          c.removeEventListener('wheel', this.updateMeasurement);\n        }\n      });\n    }\n  }\n\n  setCurrentScroll(destTime, offsetLeft, boundaryCheck) {\n    offsetLeft = offsetLeft || 0;\n    destTime = destTime || 0;\n    const { wavesurfer } = this.current;\n    const { scrollLeft } = wavesurfer.container.lastChild;\n    const { offsetWidth } = wavesurfer.container;\n    const { minPxPerSec } = wavesurfer.params;\n    const scrollTime = destTime - (offsetLeft - offsetWidth / 2) / minPxPerSec;\n    const duration = wavesurfer.getDuration();\n    if (!boundaryCheck) wavesurfer.drawer.recenter(scrollTime / duration);\n    else {\n      const rightBoundaryTime = (scrollLeft + offsetWidth) / minPxPerSec;\n      const leftBoundaryTime = scrollLeft / minPxPerSec;\n      if (destTime < leftBoundaryTime || destTime > rightBoundaryTime) wavesurfer.drawer.recenter(scrollTime / duration);\n    }\n  }\n\n  insertLine = (data) => {\n    // eslint-disable-next-line prefer-const\n    let { start, end, role, videoIndex, segmentIndex, lineIndex, attributes } = data;\n    const { segments } = this.regions;\n    const { ontology, styleConfig } = this.props;\n    videoIndex = Number.isNaN(parseInt(videoIndex, 10)) ? this.current.videoIndex : videoIndex;\n    const wavesurfer = this.wavesurfers[videoIndex];\n    lineIndex = Number.isNaN(parseInt(lineIndex, 10)) ? 0 : lineIndex;\n    end = Number.isNaN(parseFloat(end)) ? wavesurfer.getDuration() : end;\n    if (!segments[videoIndex]) segments[videoIndex] = [];\n    if (!segments[videoIndex][segmentIndex]) segments[videoIndex][segmentIndex] = [];\n    role = role || 'none';\n    let configColor = '';\n    if (attributes && styleConfig?.groups?.length > 0) {\n      configColor = getConfigColor(attributes, styleConfig.groups);\n    }\n    const color = hexToRgba(\n      configColor || ontology.get(role) || defaultColor.defaultWhite,\n      (role === 'none' && !configColor) ? 0 : defaultColor.defaultAlpha\n    );\n    const item = {\n      start,\n      end,\n      color,\n      resize: false,\n      drag: false,\n      data: { type: 'line' },\n      formatTimeCallback: () => '',\n    };\n    const region = wavesurfer.addRegion(item);\n    region.element.classList.add('line-region');\n    const mark = document.createElement('div');\n    mark.className = 'line-mark';\n    region.element.appendChild(mark);\n    const title = document.createElement('div');\n    title.className = 'line-title';\n    title.innerText = lineIndex === 0 ? `${segmentIndex + 1}\\n${(region.end - region.start).toFixed(3)}s (${formatTimestamp(region.start)}~${formatTimestamp(region.end)})` : '';\n    mark.appendChild(title);\n    region.title = title;\n    region.role = role;\n    segments[videoIndex][segmentIndex].splice(lineIndex, 0, region);\n    segments[videoIndex][segmentIndex].filter((line) => !!line?.element).forEach((line, index, array) => {\n      const height = 100 / array.length;\n      const top = height * index;\n      line.element.style.height = `${height}%`;\n      line.element.style.top = `${top}%`;\n    });\n    return region;\n  };\n\n  insertSegment(data) {\n    const { start, end, segmentIndex } = data;\n    let { videoIndex } = data;\n    videoIndex = Number.isNaN(parseInt(videoIndex, 10)) ? this.current.videoIndex : videoIndex;\n    const { segments } = this.regions;\n    if (!segments[videoIndex]) segments[videoIndex] = [];\n    segments[videoIndex].splice(segmentIndex, 0, []);\n    this.insertLine({ start, end, videoIndex, segmentIndex });\n    return segments[videoIndex][segmentIndex];\n  }\n\n  insertTempAnchor(data) {\n    const { segmentSelected } = this.current;\n    const { start, end } = data;\n    const items = [{\n      start,\n      resize: false,\n      drag: true,\n      data: { type: 'tempAnchor', prevStart: start },\n      formatTimeCallback: () => '',\n    }, {\n      start: end,\n      resize: false,\n      drag: true,\n      data: { type: 'tempAnchor', prevStart: end },\n    }];\n    const { wavesurfer } = this.current;\n    const regions = new Array(2);\n    regions[0] = wavesurfer.addRegion(items[0]);\n    regions[1] = wavesurfer.addRegion(items[1]);\n    // eslint-disable-next-line prefer-destructuring\n    segmentSelected.leftTempAnchor = regions[0];\n    // eslint-disable-next-line prefer-destructuring\n    segmentSelected.rightTempAnchor = regions[1];\n    // eslint-disable-next-line no-restricted-syntax\n    for (const region of regions) {\n      region.element.classList.add('anchor-region');\n      const handle = document.createElement('div');\n      handle.className = 'anchor-handle';\n      ReactDOM.render((<HandleIcon style={{ height: '100%', width: '100%' }} viewBox=\"0, 10, 16, 16\" />), handle);\n      region.element.appendChild(handle);\n      region.hanlde = handle;\n      const mark = document.createElement('div');\n      mark.className = 'anchor-mark-temp';\n      region.element.appendChild(mark);\n      region.mark = mark;\n    }\n  }\n\n  insertAnchor(data) {\n    // eslint-disable-next-line prefer-const\n    let { start, videoIndex, segmentIndex } = data;\n    const { toolMode } = this.props;\n    const { anchors } = this.regions;\n\n    videoIndex = Number.isNaN(parseInt(videoIndex, 10)) ? this.current.videoIndex : videoIndex;\n    if (!anchors[videoIndex]) anchors[videoIndex] = [];\n    if (segmentIndex === 0) return;\n    if (!anchors[videoIndex]) anchors[videoIndex] = [];\n    const wavesurfer = this.wavesurfers[videoIndex];\n    const item = {\n      start,\n      resize: false,\n      drag: !isAnnotationReadonly(toolMode), // toolMode !== 'QA_RO',\n      data: { type: 'anchor', prevStart: start },\n      formatTimeCallback: () => '',\n    };\n    const region = wavesurfer.addRegion(item);\n    anchors[videoIndex].splice(segmentIndex - 1, 0, region);\n    region.element.classList.add('anchor-region');\n    const handle = document.createElement('div');\n    handle.className = 'anchor-handle';\n    if (isAnnotationReadonly(toolMode)) handle.classList.add('anchor-handle-lock');\n    ReactDOM.render((<HandleIcon style={{ height: '100%', width: '100%' }} viewBox=\"0, 10, 16, 16\" />), handle);\n    region.element.appendChild(handle);\n    region.hanlde = handle;\n    const mark = document.createElement('div');\n    mark.className = 'anchor-mark';\n    region.element.appendChild(mark);\n    region.mark = mark;\n    return region;\n  }\n\n  removeSelectedSegment() {\n    const { segmentSelected, anchorSelected } = this.current;\n    if (anchorSelected && anchorSelected.data.type === 'tempAnchor') this.removeSelectedAnchor();\n    if (segmentSelected && segmentSelected.data.type === 'temp') {\n      segmentSelected.remove();\n      if (segmentSelected.leftTempAnchor) segmentSelected.leftTempAnchor.remove();\n      if (segmentSelected.rightTempAnchor) segmentSelected.rightTempAnchor.remove();\n    }\n    this.current.segmentSelected = null;\n  }\n\n  setSelectedSegment(region) {\n    this.removeSelectedSegment();\n    if (region.data.type === 'line') this.current.wavesurfer.frame.update({ start: region.start, end: region.end });\n    this.current.segmentSelected = region;\n  }\n\n  setCurrentSegment(currentSegment, start) {\n    const { currentPlayMode } = this.props;\n    const { wavesurfer } = this.current;\n    const region = this.current.segments?.[currentSegment]?.[0];\n    start = start || region?.start;\n    this.setSelectedSegment(region);\n    this.seekCurrentAudio(start);\n    this.setCurrentScroll(start, 0, true);\n    if (currentPlayMode !== 'overallLoop') {\n      wavesurfer.play();\n    }\n  }\n\n  setLineColor(videoIndex, segmentIndex, lineIndex, role) {\n    try {\n      const { results, styleConfig } = this.props;\n      const segment = results[videoIndex][segmentIndex];\n      const line = this.regions.segments[videoIndex][segmentIndex][lineIndex];\n      const prevRole = line.role;\n      let color = '';\n      if (styleConfig?.groups?.length > 0) {\n        const attributes = styleConfig?.mode === StyleConfigMode.line ? line.attributes : segment.attributes;\n        color = getConfigColor(attributes, styleConfig.groups);\n      }\n      if (!color) {\n        color = this.props.ontology.get(role);\n      }\n\n      line.update({ color: hexToRgba(color, !color ? 0 : defaultColor.defaultAlpha) });\n      line.role = role;\n      this.addHistory('setLineColor', { videoIndex, segmentIndex, lineIndex, role: prevRole });\n    } catch (e) { console.error('Line region not found'); }\n  }\n\n  setSegmentColor(videoIndex, segmentIndex, lines, color) {\n    const segment = this.regions.segments[videoIndex][segmentIndex];\n    for (let i = 0; i < lines.length; i += 1) {\n      const lineIndex = lines[i];\n      const line = segment[lineIndex];\n      const roleColor = this.props.ontology.get(line.role);\n      const rgba = hexToRgba(\n        color || roleColor || defaultColor.defaultWhite,\n        !color && line.role === 'none' ? 0 : defaultColor.defaultAlpha\n      );\n      if (line && rgba !== line.color) {\n        line.update({ color: rgba });\n      }\n    }\n  }\n\n  getAudioContainer(waveform, timeline, audioContainer, minimap) {\n    this.container.waveform = waveform;\n    this.container.timeline = timeline;\n    this.container.audioContainer = audioContainer;\n    this.container.minimap = minimap;\n    if (this.container.videoContainer) this.initWaveSurfer();\n  }\n\n  getVideoContainer(videoContainer) {\n    this.container.videoContainer = videoContainer;\n    if (this.container.waveform) this.initWaveSurfer();\n  }\n\n  pauseVideo() {\n    this.current.wavesurfer.pause();\n  }\n\n  playVideo() {\n    const { wavesurfer, segmentSelected } = this.current;\n    if (segmentSelected && wavesurfer.getCurrentTime() > segmentSelected.end - ANCHOR_MOVEMENT_STEP) {\n      this.seekCurrentAudio(segmentSelected.start);\n      this.setCurrentScroll(segmentSelected.start, 0, true);\n    }\n    wavesurfer.play();\n  }\n\n  forwardVideo() {\n    this.current.wavesurfer.skipForward(0.5);\n  }\n\n  backwardVideo() {\n    this.current.wavesurfer.skipBackward(0.5);\n  }\n\n  parseSegments(videoIndex, segs) {\n    const { results, ontology, lineConfig, keyAttribute, segmentConfig } = this.props;\n    const segments = Array.isArray(segs) ? segs : results[videoIndex];\n    const wavesurfer = this.wavesurfers[videoIndex];\n    const duration = wavesurfer.getDuration();\n    const segmentConfigValidKeys = segmentConfig.fields.map((value) => value.name);\n    if (keyAttribute) {\n      segmentConfigValidKeys.push(keyAttribute.name);\n    }\n    const lineConfigValidKeys = lineConfig.fields.map((value) => value.name);\n    const { updatedValues: updateLineValues } = triggerForm(lineConfig, {});\n    const { updatedValues: updateSegmentValues } = triggerForm(segmentConfig, {});\n    const ontologyValidKeys = [];\n    ontology.forEach((value, key) => {\n      ontologyValidKeys.push(key);\n    });\n    for (let i = 0; i < segments.length; i += 1) {\n      const segment = segments[i];\n      // validate start/end time nan\n      if (segment.start) {\n        const startNum = Number(segment.start);\n        if (Number.isNaN(startNum)) {\n          throw new Error(`${translate('PAYLOAD_ERROR_SEGMENT_START_END_NAN')} [start NAN] ${JSON.stringify(segment)}`);\n        }\n        segment.start = startNum;\n      }\n      if (segment.end) {\n        const endNum = Number(segment.end);\n        if (Number.isNaN(endNum)) {\n          throw new Error(`${translate('PAYLOAD_ERROR_SEGMENT_START_END_NAN')} [end NAN] ${JSON.stringify(segment)}`);\n        }\n        segment.end = endNum;\n      }\n      // validate segment id\n      segment.id = segment.id || uuid();\n      // validate segment start\n      if (!segment.start && segment.start !== 0) {\n        throw new Error(`${translate('PAYLOAD_ERROR_SEGMENT_START_NULL')} ${JSON.stringify(segment)}`);\n      }\n      if (segment.end === null || segment.end === undefined) {\n        segment.end = duration;\n      }\n      if (segment.end > duration) {\n        segment.end = duration;\n        console.log(`${translate('PAYLOAD_ERROR_SEGMENT_LENGTH_OVERFLOW')} ${JSON.stringify(segment)} set as max=${duration}`);\n      }\n      if (segment.start < 0 || segment.end < 0 || segment.start > segment.end) {\n        segments.splice(i, 1);\n        i -= 1;\n        // throw new Error(`${translate('PAYLOAD_ERROR_SEGMENT_START_END_INVALID')} ${JSON.stringify(segment)}`);\n      }\n      // validate segment attribute\n      segment.attributes = {\n        ...updateSegmentValues,\n        ...segment.attributes,\n      };\n      Object.keys(segment.attributes).forEach((key) => {\n        if (segmentConfigValidKeys.indexOf(key) < 0) {\n          // throw new Error(`${translate('PAYLOAD_ERROR_INVALID_ATTRIBUTE')}: ${key}`);\n          delete segment.attributes[key];\n        }\n      });\n      if (segment.content == null || !segment.content[0]) segment.content = [createLine('none', lineConfig)];\n      segment.content.forEach((line, index, arr) => {\n        line.role = line.role || 'none';\n        line.attributes = {\n          ...updateLineValues,\n          ...line.attributes,\n        };\n        if (ontologyValidKeys.indexOf(line.role) < 0) {\n          line.role = 'none';\n          // throw new Error(`${translate('PAYLOAD_ERROR_INVALID_ROLE')}: ${line.role}`);\n        }\n        Object.keys(line.attributes).forEach((key) => {\n          if (lineConfigValidKeys.indexOf(key) < 0) {\n            // throw new Error(`${translate('PAYLOAD_ERROR_INVALID_ATTRIBUTE')}: ${key}`);\n            delete line.attributes[key];\n          }\n        });\n      });\n    }\n    // segments = segments.filter(segment => segment.isValid);\n    const MIN_LENGTH = this.props.minSegmentLength;\n    segments.sort((a, b) => {\n      if (a.start < b.start + MIN_LENGTH && a.start > b.start - MIN_LENGTH) {\n        if (a.end == null) return -1;\n        if (b.end == null) return 1;\n        return a.end - b.end;\n      }\n      return a.start - b.start;\n    });\n    let currentEnd = 0;\n    for (let i = 0; i < segments.length; i += 1) {\n      const segment = segments[i];\n      if (segment.end - segment.start <= MIN_LENGTH && i < segments.length - 1) {\n        segments[i + 1].start = segment.start;\n        segments.splice(i, 1);\n        i -= 1;\n      } else if ((segment.start > currentEnd - MIN_LENGTH) && (segment.start < currentEnd + MIN_LENGTH) && (segment.end > currentEnd || !segment.end)) {\n        segments[i].start = currentEnd;\n        currentEnd = segment.end;\n      } else if (segment.start < currentEnd - MIN_LENGTH || currentEnd == null) {\n        // throw new Error(`${translate('PAYLOAD_ERROR_OVERLAP_SEGMENT')} ${JSON.stringify(segment)} start=${segment.start} currentEnd=${currentEnd} min=${MIN_LENGTH}`);\n        segments.splice(i, 1);\n        i -= 1;\n      } else if (segment.start > currentEnd + MIN_LENGTH) {\n        segments.splice(i, 0, createSegment(currentEnd, segment.start, segmentConfig, lineConfig));\n        currentEnd = segment.end;\n        i += 1;\n      }\n      if (i === segments.length - 1) {\n        if (segment.end < duration) {\n          if (duration - segment.end <= MIN_LENGTH) {\n            segment.end = duration;\n          } else {\n            segments.push(createSegment(segment.end, duration, segmentConfig, lineConfig));\n          }\n        }\n      }\n    }\n    // videoIndex, segments\n    this.props.parseSegments({\n      videoIndex,\n      segments,\n    });\n    return segments;\n  }\n\n  initRegion(videoIndex, segments) {\n    const wavesurfer = this.wavesurfers[videoIndex];\n    wavesurfer.frame = wavesurfer.addRegion({\n      start: segments[0].start,\n      end: segments[0].end,\n      color: 'rgba(0,0,0,0)',\n      resize: false,\n      drag: false,\n    });\n    wavesurfer.frame.element.classList.add('segment-frame');\n    for (let segmentIndex = 0; segmentIndex < segments.length; segmentIndex += 1) {\n      const segment = segments[segmentIndex];\n      segment.content.forEach((line, lineIndex) => {\n        const attributes = this.props.styleConfig?.mode === StyleConfigMode.segment ? segment.attributes : line.attributes;\n        this.insertLine({\n          videoIndex,\n          segmentIndex,\n          lineIndex,\n          role: line.role,\n          start: segment.start,\n          end: segment.end,\n          attributes,\n        });\n      });\n      this.insertAnchor({\n        videoIndex,\n        segmentIndex,\n        start: segment.start,\n      });\n    }\n  }\n\n  getSegmentByRegion(region) {\n    let segmentIndex = -1;\n    const { segments } = this.current;\n    segments.forEach((segment, index) => {\n      if (segment.indexOf(region) >= 0) segmentIndex = index;\n    });\n    return segmentIndex;\n  }\n\n  seekCurrentAudio(currentTime = 0) {\n    const { wavesurfer } = this.current;\n    const duration = wavesurfer.getDuration();\n    /*\n    currentTime = currentTime || 0;\n    let rate = currentTime / duration;\n    if (rate > 1) rate = 1;\n    if (rate < 0) rate = 0;\n    wavesurfer.seekTo(rate);\n    */\n    // Skip function wavesurfer.seekTo(progress), use wavesurfer.backend.seekTo(time) instead.\n    // Fireevent seek will be ignored\n    if (currentTime < 0) currentTime = 0;\n    if (currentTime > duration) currentTime = duration;\n    wavesurfer.backend.seekTo(currentTime);\n  }\n\n  handleRegionClick(region, e) {\n    e.stopPropagation();\n    const { currentPlayMode } = this.props;\n    if (region.data.type === 'temp') {\n      this.setCurrentScroll(region.start, 0, true);\n      region.play();\n    } else if (region.data.type === 'line') {\n      const segmentIndex = this.getSegmentByRegion(region);\n      const cursorTime = this.getCursorTime();\n      const start = ((cursorTime > 0 && (e.altKey || e.ctrlKey)) || currentPlayMode === 'overallLoop') ? cursorTime : null;\n      if (segmentIndex >= 0) this.props.setCurrentSegment({ index: segmentIndex, start });\n    } else if (region.data.type === 'anchor' || region.data.type === 'tempAnchor') {\n      const { anchorSelected } = this.current;\n      if (region !== anchorSelected) this.setSelectedAnchor(region);\n      else this.removeSelectedAnchor();\n    }\n  }\n\n  setSelectedAnchor(region) {\n    this.removeSelectedAnchor();\n    region.mark.classList.add('anchor-mark-selected');\n    this.current.anchorSelected = region;\n  }\n\n  getCursorTime() {\n    return this.state.cursorTime;\n  }\n\n  setCurrentSpeed(speed) {\n    this.current.wavesurfer?.setPlaybackRate(speed);\n  }\n\n  resetRegionTitle() {\n    const { segments } = this.current;\n    segments.forEach((segment, segmentIndex) => {\n      segment.forEach((line, lineIndex) => {\n        line.title.innerText = lineIndex === 0 ? `${segmentIndex + 1}\\n${(line.end - line.start).toFixed(3)} [${formatTimestamp(line.start)}~${formatTimestamp(line.end)}]` : '';\n      });\n    });\n  }\n\n  moveRegionsInBatch(step) {\n    const { wavesurfer, anchors, segmentSelected } = this.current;\n    const min = 0;\n    const max = wavesurfer.getDuration();\n    Object.keys(wavesurfer.regions.list).forEach((id) => {\n      const region = wavesurfer.regions.list[id];\n      if (region.data.type !== 'line') {\n        return;\n      }\n      this.__moveRegion(region, step, min, max);\n      if (segmentSelected === region) { wavesurfer.frame.update({ start: region.start, end: region.end }); }\n    });\n    anchors.forEach((anchor) => {\n      this.__moveRegion(anchor, step, min, max);\n    });\n    this.props.moveSegmentInBatch({ step, min, max });\n    this.resetRegionTitle();\n  }\n\n  __moveRegion(region, step, min, max) {\n    if (region.start > min || region.end < max) {\n      if (region.start > min) {\n        region.start = region.start + step < min ? min : region.start + step;\n      }\n      if (region.end < max) {\n        region.end = region.end + step > max ? max : region.end + step;\n      }\n      region.update({ start: region.start, end: region.end });\n    }\n  }\n\n  handleAnchorDrag(region) {\n    const { wavesurfer, anchors, segments, segmentSelected } = this.current;\n    const { minSegmentLength, toolMode } = this.props;\n    const i = anchors.indexOf(region);\n    if (i < 0) return false;\n    const leftBoundary = (i === 0) ? 0 : anchors[i - 1].start;\n    const rightBoundary = (i === anchors.length - 1) ? wavesurfer.getDuration() : anchors[i + 1].start;\n    if (region.start < rightBoundary - minSegmentLength && region.start > leftBoundary + minSegmentLength && !isAnnotationReadonly(toolMode)) {\n      region.data.prevStart = region.start;\n      const prevSegment = segments[i];\n      const nextSegment = segments[i + 1];\n      prevSegment.forEach((line) => {\n        line.update({ end: region.start });\n      });\n      nextSegment.forEach((line) => {\n        line.update({ start: region.start });\n      });\n      this.props.setSegmentTimestamp({ segmentIndex: i, end: region.start });\n      this.props.setSegmentTimestamp({ segmentIndex: i + 1, start: region.start });\n      this.resetRegionTitle();\n      if (segmentSelected === prevSegment[0]) { wavesurfer.frame.update({ start: prevSegment[0].start, end: prevSegment[0].end }); }\n      if (segmentSelected === nextSegment[0]) { wavesurfer.frame.update({ start: nextSegment[0].start, end: nextSegment[0].end }); }\n      return true;\n    }\n    region.update({ start: region.data.prevStart, end: region.data.prevStart });\n    return false;\n  }\n\n  handleRegionUpdate(region, e) {\n    const { type } = region.data;\n    const { segmentSelected } = this.current;\n    if (type === 'temp' && region !== segmentSelected) {\n      this.setSelectedSegment(region);\n      region.element.classList.add('line-region');\n    }\n  }\n\n  handleRegionEdit(region) {\n    const { type } = region.data;\n    const { wavesurfer } = this.current;\n    if (type === 'temp') {\n      if ((region.end - region.start < this.props.minSegmentLength) || this.props.currentPlayMode === 'overallLoop') {\n        this.removeSelectedSegment();\n      } else {\n        region.play();\n        this.insertTempAnchor({ start: region.start, end: region.end });\n        wavesurfer.frame.update({ start: region.start, end: region.end });\n      }\n    } else if (type === 'anchor') {\n      const { prevStart } = region.data;\n      const { anchors } = this.current;\n      const result = this.handleAnchorDrag(region);\n      if (result === false) return;\n      const dragAnchorIndex = anchors.indexOf(region);\n      this.addHistory('dragAnchor', { dragAnchorIndex, prevStart });\n      this.setSelectedAnchor(region);\n    } else if (type === 'tempAnchor') {\n      this.setTempSegment();\n    }\n  }\n\n  setTempSegment() {\n    const { segmentSelected, wavesurfer } = this.current;\n    const { leftTempAnchor, rightTempAnchor } = segmentSelected;\n    if (leftTempAnchor.start > rightTempAnchor.start - this.props.minSegmentLength) {\n      leftTempAnchor.update({ start: leftTempAnchor.data.prevStart });\n      rightTempAnchor.update({ start: rightTempAnchor.data.prevStart });\n    } else {\n      leftTempAnchor.data.prevStart = leftTempAnchor.start;\n      rightTempAnchor.data.prevStart = rightTempAnchor.start;\n      segmentSelected.update({ start: leftTempAnchor.start, end: rightTempAnchor.start });\n      wavesurfer.frame.update({ start: segmentSelected.start, end: segmentSelected.end });\n    }\n  }\n\n  handleRegionOut(region) {\n    const { currentPlayMode } = this.props;\n    const { segmentSelected, wavesurfer } = this.current;\n    const { type } = region.data;\n    if (type !== 'line' && type !== 'temp') return;\n    if (segmentSelected === region && currentPlayMode === 'regionLoop') {\n      this.seekCurrentAudio(region.start);\n      this.setCurrentScroll(region.start, 0, true);\n    } else if (segmentSelected === region && currentPlayMode === 'regionPlay') {\n      wavesurfer.pause();\n      this.seekCurrentAudio(region.end);\n    }\n  }\n\n  handlePlayPause() {\n    this.props.setPlayingState({ isPlaying: this.current.wavesurfer.isPlaying() });\n  }\n\n  handleRegionContextmenu(region, e) {\n    e.preventDefault();\n    if (region.data.type === 'anchor') {\n      const { anchors, segments } = this.current;\n      const i = anchors.indexOf(region);\n      const nextSegment = segments[i + 1];\n      const prevSegment = segments[i];\n      const nextRules = [];\n      const prevRules = [];\n      prevSegment.forEach((line, index) => {\n        prevRules.push({\n          role: line.role,\n          start: line.start,\n          end: line.end,\n          segmentIndex: i,\n          lineIndex: index,\n        });\n      });\n      nextSegment.forEach((line, index) => {\n        nextRules.push({\n          role: line.role,\n          start: line.start,\n          end: line.end,\n          segmentIndex: i + 1,\n          lineIndex: index,\n        });\n      });\n      this.mergeSegment(region);\n      const mergeSec = region.start;\n      this.addHistory('mergeSegment', { mergeSec, prevRules, nextRules });\n    }\n  }\n\n  mergeSegment(region) {\n    const { anchors, segments, anchorSelected, segmentSelected, wavesurfer } = this.current;\n    const i = anchors.indexOf(region);\n    const nextSegment = segments[i + 1];\n    const prevSegment = segments[i];\n    const { start } = prevSegment[0];\n    const { end } = nextSegment[0];\n    const prevRules = [];\n    if (anchorSelected === region) this.removeSelectedAnchor();\n    region.remove();\n    anchors.splice(i, 1);\n    this.props.setSegmentTimestamp({ segmentIndex: i, end });\n    prevSegment.forEach((line, index) => {\n      prevRules.push(line.role);\n      line.update({ end });\n    });\n    this.props.setCurrentSegment({ index: i });\n    this.props.mergeSegmentBackward({ segmentIndex: i + 1 });\n    nextSegment.forEach((line) => {\n      if (prevRules.indexOf(line.role) < 0 && line.role !== 'none') {\n        this.insertLine({\n          start,\n          end,\n          role: line.role,\n          segmentIndex: i,\n          lineIndex: prevSegment.length,\n        });\n      }\n      line.remove();\n    });\n    segments.splice(i + 1, 1);\n    if (segmentSelected === prevSegment[0]) { wavesurfer.frame.update({ start: prevSegment[0].start, end: prevSegment[0].end }); }\n    this.resetRegionTitle();\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  setPlayMode(mode) {\n    // none\n  }\n\n  checkNearbyAnchor(sec) {\n    const { anchors } = this.current;\n    const { minSegmentLength } = this.props;\n    let invalidAnchor = null;\n    let minDistance = null;\n    anchors.forEach((value) => {\n      const distance = Math.abs(value.start - sec);\n      if (distance < minSegmentLength) {\n        if (!invalidAnchor || minDistance > distance) {\n          invalidAnchor = value;\n          minDistance = distance;\n        }\n      }\n    });\n    return invalidAnchor;\n  }\n\n  singleLination(sec) {\n    const { minSegmentLength, annotateDisabled } = this.props;\n    const { wavesurfer, anchors } = this.current;\n    if (sec < minSegmentLength ||  annotateDisabled) return;\n    if (sec > wavesurfer.getDuration() - minSegmentLength) return;\n    const nearbyAnchor = this.checkNearbyAnchor(sec);\n    if (nearbyAnchor) {\n      const prevStart = nearbyAnchor.start;\n      nearbyAnchor.update({ start: sec });\n      this.handleAnchorDrag(nearbyAnchor);\n      const nearbyAnchorIndex = anchors.indexOf(nearbyAnchor);\n      this.addHistory('singleLination-adjust', { nearbyAnchorIndex, prevStart });\n    } else {\n      const splitSegment = this.getSegmentByTime(sec);\n      const splitAnchor = this.splitSegment(splitSegment, sec);\n      const splitAnchorIndex = anchors.indexOf(splitAnchor);\n      this.addHistory('singleLination-split', { splitAnchorIndex });\n    }\n  }\n\n  getSegmentByTime(sec) {\n    const { segments } = this.current;\n    // eslint-disable-next-line no-restricted-syntax\n    for (const value of segments) {\n      const line = value[0];\n      if (line.start <= sec && line.end >= sec) return value;\n    }\n    return null;\n  }\n\n  splitSegment(segment, sec, prevRules, nextRules, focusPrevSegment) {\n    const { segments, anchors } = this.current;\n    if (!segment) return;\n    const { end } = segment[0];\n    const i = segments.indexOf(segment);\n    const anchor = this.insertAnchor({ start: sec, segmentIndex: i + 1 });\n    this.insertSegment({ start: sec, end, segmentIndex: i + 1 });\n    segment.forEach((line) => { line.update({ end: sec }); });\n    if (prevRules && nextRules) {\n      const arr = [];\n      prevRules.forEach((rule) => { arr.push(rule.role); });\n      segment.forEach((line, index) => {\n        if (arr.indexOf(line.role) < 0) this.deleteLine({ lineIndex: index, segmentIndex: i });\n      });\n      this.deleteLine({ lineIndex: 0, segmentIndex: i + 1 });\n      nextRules.forEach((role) => { this.insertLine(role); });\n      const splitAnchorIndex = anchors.indexOf(anchor);\n      this.addHistory('singleLination-split', { splitAnchorIndex });\n    }\n    this.props.setSegmentTimestamp({ segmentIndex: i, end: sec });\n    this.props.splitSegmentForward({ segmentIndex: i, start: sec, end, prevRules, nextRules });\n    this.removeSelectedSegment();\n    this.resetRegionTitle();\n    this.props.setCurrentSegment({ index: focusPrevSegment ? i : i + 1 });\n    return anchor;\n  }\n\n  deleteLine(data) {\n    const { segments } = this.current;\n    const { segmentIndex, lineIndex } = data;\n\n    const segment = segments[segmentIndex];\n    const line = segment[lineIndex];\n    data.start = line.start;\n    data.end = line.end;\n    data.role = line.role;\n    line.remove();\n    segment.splice(lineIndex, 1);\n    // eslint-disable-next-line no-shadow\n    segment.forEach((li, index, array) => {\n      const height = 100 / array.length;\n      const top = height * index;\n      li.element.style.height = `${height}%`;\n      li.element.style.top = `${top}%`;\n    });\n    this.resetRegionTitle();\n  }\n\n  toppingLine(data) {\n    const { segments } = this.current;\n    const { segmentIndex, lineIndex } = data;\n\n    const segment = segments[segmentIndex];\n    const line = segment[lineIndex];\n    segment.splice(lineIndex, 1);\n    segment.unshift(line);\n    // eslint-disable-next-line no-shadow\n    segment.forEach((li, index, array) => {\n      const height = 100 / array.length;\n      const top = height * index;\n      li.element.style.height = `${height}%`;\n      li.element.style.top = `${top}%`;\n    });\n    this.resetRegionTitle();\n  }\n\n  doubleLination(start, end) {\n    const { minSegmentLength, annotateDisabled } = this.props;\n    const { anchors, segmentSelected } = this.current;\n    if (!start || Number.isNaN(start)) start = segmentSelected.start;\n    if (!end || Number.isNaN(end)) end = segmentSelected.end;\n    if (end - start <= minSegmentLength || annotateDisabled) return;\n    const nearbyLeftAnchor = this.checkNearbyAnchor(start);\n    const nearbyRightAnchor = this.checkNearbyAnchor(end);\n    const prevLeftStart = nearbyLeftAnchor ? nearbyLeftAnchor.start : -1;\n    const prevRightStart = nearbyRightAnchor ? nearbyRightAnchor.start : -1;\n    if (start < minSegmentLength) return;\n    if (end > this.current.wavesurfer.getDuration() - minSegmentLength) return;\n\n    if (nearbyLeftAnchor && nearbyRightAnchor) {\n      nearbyLeftAnchor.update({ start });\n      this.handleAnchorDrag(nearbyLeftAnchor);\n      nearbyRightAnchor.update({ start: end });\n      this.handleAnchorDrag(nearbyRightAnchor);\n      const nearbyLeftAnchorIndex = anchors.indexOf(nearbyLeftAnchor);\n      const nearbyRightAnchorIndex = anchors.indexOf(nearbyRightAnchor);\n      this.addHistory('doubleLination-adjust-adjust', { nearbyLeftAnchorIndex, prevLeftStart, nearbyRightAnchorIndex, prevRightStart });\n    } else if (!nearbyLeftAnchor && nearbyRightAnchor) {\n      const splitLeftSegment = this.getSegmentByTime(start);\n      const splitLeftAnchor = this.splitSegment(splitLeftSegment, start);\n      nearbyRightAnchor.update({ start: end });\n      this.handleAnchorDrag(nearbyRightAnchor);\n      const splitLeftAnchorIndex = anchors.indexOf(splitLeftAnchor);\n      const nearbyRightAnchorIndex = anchors.indexOf(nearbyRightAnchor);\n      this.addHistory('doubleLination-split-adjust', { splitLeftAnchorIndex, nearbyRightAnchorIndex, prevRightStart });\n    } else if (nearbyLeftAnchor && !nearbyRightAnchor) {\n      nearbyLeftAnchor.update({ start });\n      this.handleAnchorDrag(nearbyLeftAnchor);\n      const splitRightSegment = this.getSegmentByTime(end);\n      const splitRightAnchor = this.splitSegment(splitRightSegment, end);\n      const splitRightAnchorIndex = anchors.indexOf(splitRightAnchor);\n      const nearbyLeftAnchorIndex = anchors.indexOf(nearbyLeftAnchor);\n      this.addHistory('doubleLination-adjust-split', { nearbyLeftAnchorIndex, prevLeftStart, splitRightAnchorIndex });\n    } else {\n      const splitLeftSegment = this.getSegmentByTime(start);\n      const splitLeftAnchor = this.splitSegment(splitLeftSegment, start);\n      const splitRightSegment = this.getSegmentByTime(end);\n      const splitRightAnchor = this.splitSegment(splitRightSegment, end, null, null, true);\n      const splitRightAnchorIndex = anchors.indexOf(splitRightAnchor);\n      const splitLeftAnchorIndex = anchors.indexOf(splitLeftAnchor);\n      this.addHistory('doubleLination-split-split', { splitLeftAnchorIndex, splitRightAnchorIndex });\n    }\n  }\n\n  handleKeyDown(e) {\n    if (window.disableLongAudioHotKeys) return;\n    if (isInput()) return;\n    if (isAnnotationReadonly(this.props.toolMode)) return;\n    // if (this.props.toolMode === 'QA_RO') return;\n    if (e.keyCode === 83) { // s\n      const sec = this.getCursorTime();\n      if (sec < 0) return;\n      this.singleLination(sec);\n    } else if (e.keyCode === 68) { // d\n      const { segmentSelected } = this.current;\n      if (segmentSelected && segmentSelected.data.type === 'temp') this.doubleLination();\n    } else if (e.keyCode === 188) { // , || <\n      if (e.ctrlKey) {\n        this.moveRegionsInBatch(-ANCHOR_MOVEMENT_STEP);\n        this.addHistory('bulkMovement', { step: -ANCHOR_MOVEMENT_STEP });\n      } else {\n        this.forwardAnchor();\n      }\n    } else if (e.keyCode === 190) { // . | >\n      if (e.ctrlKey) {\n        this.moveRegionsInBatch(ANCHOR_MOVEMENT_STEP);\n        this.addHistory('bulkMovement', { step: ANCHOR_MOVEMENT_STEP });\n      } else {\n        this.backwardAnchor();\n      }\n    } else if (e.ctrlKey && e.keyCode === 90) { // z\n      this.recallHistory('undo');\n    } else if (e.ctrlKey && e.keyCode === 89) { // y\n      this.recallHistory('redo');\n    } else if ((e.keyCode === 8 || e.keyCode === 46) && e.ctrlKey) { // ctrl + delete/backspace\n      this.clearAll();\n    }\n  }\n\n  backwardAnchor() {\n    const { anchorSelected, wavesurfer, anchors } = this.current;\n    if (!anchorSelected) return;\n    if (anchorSelected.start + ANCHOR_MOVEMENT_STEP >= wavesurfer.getDuration()) return;\n    anchorSelected.update({ start: anchorSelected.start + ANCHOR_MOVEMENT_STEP });\n    if (anchorSelected.data.type === 'anchor') {\n      this.handleAnchorDrag(anchorSelected);\n      const trimAnchorIndex = anchors.indexOf(anchorSelected);\n      this.addHistory('trimAnchor', { trimAnchorIndex, prevStart: anchorSelected.start - ANCHOR_MOVEMENT_STEP });\n    } else if (anchorSelected.data.type === 'tempAnchor') this.setTempSegment();\n  }\n\n  forwardAnchor() {\n    const { anchorSelected, anchors } = this.current;\n    if (!anchorSelected) return;\n    if (anchorSelected.start - ANCHOR_MOVEMENT_STEP <= 0) return;\n    anchorSelected.update({ start: anchorSelected.start - ANCHOR_MOVEMENT_STEP });\n    if (anchorSelected.data.type === 'anchor') {\n      this.handleAnchorDrag(anchorSelected);\n      const trimAnchorIndex = anchors.indexOf(anchorSelected);\n      this.addHistory('trimAnchor', { trimAnchorIndex, prevStart: anchorSelected.start + ANCHOR_MOVEMENT_STEP });\n    } else if (anchorSelected.data.type === 'tempAnchor') this.setTempSegment();\n  }\n\n  handleRegionIn(region) {\n    const { currentPlayMode, currentSegment } = this.props;\n    const { wavesurfer } = this.current;\n    const { type } = region.data;\n    if (type !== 'line') return;\n    if (currentPlayMode === 'overallLoop') {\n      const segmentIndex = this.getSegmentByRegion(region);\n      const currentTime = wavesurfer.getCurrentTime();\n      if (segmentIndex === currentSegment) return;\n      if (segmentIndex >= 0) this.props.setCurrentSegment({ index: segmentIndex, start: currentTime });\n    }\n  }\n\n  initMiniMap(i) {\n    const wave = this.container.minimap[i].getElementsByTagName('wave')[0];\n    const timestamp = document.createElement('div');\n    const currentTime = this.wavesurfers[i].getDuration();\n    timestamp.className = 'wavesurfer-timestamp';\n    timestamp.innerText = `00:00.000/${formatTimestamp(currentTime)}`;\n    wave.appendChild(timestamp);\n    this.wavesurfers[i].timestamp = timestamp;\n  }\n\n  initWaveSurfer() {\n    const size = this.props.videos.length;\n    const urls = [];\n    for (let i = 0; i < size; i += 1) {\n      if (this.props.videos[i].loaded && !this.wavesurfers[i]) {\n        this.wavesurfers[i] = WaveSurfer.create({\n          container: this.container.waveform[i],\n          autoCenter: false,\n          backend: 'MediaElement',\n          normalize: true,\n          loopSelection: true,\n          scrollParent: true,\n          // partialRender: true,\n          backgroundColor: defaultColor.defaultGray,\n          waveColor: defaultColor.darkGray,\n          progressColor: defaultColor.darkGray,\n          cursorColor: defaultColor.defaultRed,\n          pixelRatio: 1,\n          maxCanvasWidth: 4000,\n          plugins: [\n            RegionsPlugin.create(),\n            CursorPlugin.create({\n              width: '1px',\n              height: '10px',\n              container: this.container.audioContainer[i],\n              color: defaultColor.defaultGreen,\n              showTime: true,\n              opacity: 1,\n              customShowTimeStyle: {\n                color: defaultColor.defaultGreen,\n                fontSize: '14px',\n                paddingLeft: '5px',\n                position: 'absolute',\n                bottom: '3px',\n              },\n              formatTimeCallback: (sec) => {\n                this.setState({ cursorTime: sec });\n                return formatTimestamp(sec);\n              },\n            }),\n            TimelinePlugin.create({\n              container: this.container.timeline[i],\n              primaryFontColor: defaultColor.defaultWhite,\n              secondaryFontColor: defaultColor.defaultWhite,\n              primaryColor: defaultColor.defaultWhite,\n              secondaryColor: defaultColor.defaultWhite,\n              fontSize: '10',\n              notchPercentHeight: 30,\n              timeInterval,\n              primaryLabelInterval,\n              secondaryLabelInterval,\n              formatTimeCallback,\n            }),\n            MinimapPlugin.create({\n              container: this.container.minimap[i],\n            }),\n          ],\n        });\n        urls[i] = this.container.videoContainer[i];\n        this.wavesurfers[i].on('ready', () => {\n          this.wavesurfers[i].pause();\n          this.wavesurfers[i].enableDragSelection({\n            color: hexToRgba(defaultColor.defaultRed, defaultColor.defaultAlpha),\n            drag: false,\n            resize: false,\n            data: { type: 'temp' },\n            formatTimeCallback: () => '',\n          });\n          let segments;\n          try {\n            segments = this.parseSegments(i);\n          } catch (e) {\n            console.log('Error', e);\n            this.props.setErrorMsg({ errorMsg: e?.toString() });\n            return;\n          }\n          this.props.setLoading(false);\n          this.initRegion(i, segments);\n          this.initMiniMap(i);\n          if (!i) {\n            this.setNewVideo();\n            this.setSelectedSegment(this.current.segments[0][0]);\n          }\n          if (i === 0) this.addWindowEvent();\n          this.wavesurfers[i].on('play', (e) => this.handlePlayPause());\n          this.wavesurfers[i].on('pause', (e) => this.handlePlayPause());\n          this.wavesurfers[i].on('region-updated', (region, e) => this.handleRegionUpdate(region, e));\n          this.wavesurfers[i].on('region-contextmenu', (region, e) => this.handleRegionContextmenu(region, e));\n          this.wavesurfers[i].on('region-update-end', (region, e) => this.handleRegionEdit(region));\n          this.wavesurfers[i].on('region-out', (region, e) => this.handleRegionOut(region));\n          this.wavesurfers[i].on('region-in', (region, e) => this.handleRegionIn(region));\n          this.wavesurfers[i].on('region-click', (region, e) => this.handleRegionClick(region, e));\n          this.wavesurfers[i].un('ready');\n          this.wavesurfers[i].un('error');\n          this.wavesurfers[i].on('redraw', this.props.setXScroll);\n          this.props.setVideoValid({ index: i });\n          this.props.updateVideoInfo({ index: i, duration: this.wavesurfers[i].getDuration() });\n        });\n        this.wavesurfers[i].on('error', (error) => {\n          notification.error({ message: `${translate('AUDIO_ERROR')} ${translate('RECORD_PREFIX')}${i + 1}` });\n          this.props.setAudioErrorMsg({\n            index: i,\n            errorMsg: `${translate('AUDIO_ERROR')} ${translate('RECORD_PREFIX')}${i + 1} ${urls[i].src} ${error}`\n          });\n          this.wavesurfers[i].un('ready');\n          this.wavesurfers[i].un('error');\n          this.wavesurfers[i].destroy();\n          if (i === size - 1) {\n            this.props.setLoading(false);\n          }\n        });\n        this.undoList[i] = [];\n        this.redoList[i] = [];\n\n        this.container.audioContainer[i].addEventListener('mousemove', () => this.updateMeasurement(i));\n        this.container.audioContainer[i].addEventListener('wheel', () => this.updateMeasurement(i));\n        this.wavesurfers[i].load(this.container.videoContainer[i]);\n      }\n    }\n  }\n\n  updateMeasurement(index) {\n    if (this.current.videoIndex === index) {\n      // current video\n      let cursorHelper = this.container.audioContainer[index].getElementsByClassName('audio-cursor-helper')[0];\n      if (this.props.selectedMeasurement < 0) {\n        if (cursorHelper) {\n          cursorHelper.remove();\n        }\n      } else {\n        const { zoom, wavesurfer } = this.current;\n        if (!cursorHelper) {\n          cursorHelper = document.createElement('div');\n          cursorHelper.className = 'audio-cursor-helper';\n          wavesurfer?.cursor?.cursor.appendChild(cursorHelper);\n        }\n        // calc width\n        const duration = wavesurfer.getDuration();\n        const { offsetWidth } = wavesurfer.container;\n        const totalWidth = offsetWidth * zoom;\n        const width = (totalWidth / duration) * this.props.selectedMeasurement;\n        cursorHelper.style.width = `${width}px`;\n        cursorHelper.style.left = `-${width / 2}px`;\n      }\n    }\n  }\n\n  addWindowEvent() {\n    window.addEventListener('keydown', (e) => this.handleKeyDown(e));\n    window.addEventListener('resize', (e) => this.setCurrentZoom());\n  }\n\n  // eslint-disable-next-line react/no-deprecated\n  componentWillMount() {\n    this.props.getWavesurfers({ wavesurfers: this });\n  }\n\n  renderSegments = () => {\n    const { videos, results } = this.props;\n    this.regions = { segments: [], anchors: [] };\n    videos.forEach((v, i) => {\n      if (v.ready) {\n        this.wavesurfers[i].clearRegions();\n        this.initRegion(i, results[i]);\n        if (i === this.current.videoIndex) {\n          this.setNewVideo();\n          this.setSelectedSegment(this.current.segments[0][0]);\n        }\n      }\n    });\n  };\n\n  render() { return null; }\n}\n\nconst mapStateToProps = (state) => ({\n  videos: state.videos,\n  results: state.results,\n  segmentConfig: state.segmentConfig,\n  lineConfig: state.lineConfig,\n  ontology: state.ontology,\n  currentSegment: state.currentSegment,\n  currentVideo: state.currentVideo,\n  currentPlayMode: state.currentPlayMode,\n  minSegmentLength: state.minSegmentLength,\n  isPlaying: state.isPlaying,\n  toolMode: state.toolMode,\n  spaceLine: state.spaceLine,\n  selectedMeasurement: state.selectedMeasurement,\n  keyAttribute: state.keyAttribute,\n  annotateDisabled: state.annotateDisabled,\n  isLoadedAlaw: state.isLoadedAlaw,\n  styleConfig: state.styleConfig,\n});\nconst mapDispatchToProps = {\n  debug,\n  getWavesurfers,\n  setPlayingState,\n  setSegmentTimestamp,\n  mergeSegmentBackward,\n  splitSegmentForward,\n  setVideoValid,\n  setVideoZoom,\n  deleteLine,\n  pushLine,\n  setLineRole,\n  removeSegment,\n  setSegments,\n  parseSegments,\n  setErrorMsg,\n  setAudioErrorMsg,\n  moveSegmentInBatch,\n  updateVideoInfo,\n  setLoading,\n};\nexport default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(WavesurferComp);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}