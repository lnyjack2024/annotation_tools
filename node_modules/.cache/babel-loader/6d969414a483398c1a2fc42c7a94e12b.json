{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking2/components/attributes/AttributesModal.tsx\";\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { Button } from 'antd';\nimport EasyForm from '@appen/easy-form';\nimport Modal from '../../../common/modal/Modal';\nimport InstanceItemAttributesForm from './InstanceItemAttributesForm';\nimport store from '../../store/RootStore';\nimport i18n from '../../locales';\nimport { setInitialValues } from '../../utils';\nimport { ViewMode } from '../../types';\nimport './AttributesModal.scss';\nclass AttributesModal extends React.Component {\n  constructor(...args) {\n    super(...args);\n    /**\n     * form container\n     */\n    this.ref = React.createRef();\n    /**\n     * forms count that to be submitted\n     */\n    this.submitCount = 0;\n    /**\n     * instance state\n     */\n    this.instanceState = void 0;\n    /**\n     * items state\n     */\n    this.itemStates = [];\n    /**\n     * when instance values submit\n     * @param values\n     */\n    this.onInstanceValuesSubmit = values => {\n      const {\n        selectedInstances\n      } = store.instance;\n      if (selectedInstances.length === 1) {\n        const selectedInstance = selectedInstances[0];\n        const prevBasicInfo = selectedInstance.getBasicInfo();\n        selectedInstance.setAttributes(values);\n        this.instanceState = {\n          prevState: {\n            ...prevBasicInfo,\n            children: []\n          },\n          currState: {\n            ...selectedInstance.getBasicInfo(),\n            children: []\n          }\n        };\n      }\n      this.checkFinished();\n    };\n    /**\n     * when instance item values submit (with OCR text)\n     * @param instanceItem\n     * @param values\n     * @param applyAll\n     */\n    this.onItemValuesSubmit = (instanceItem, values, applyAll) => {\n      const {\n        currentCamera,\n        currentFrame\n      } = store.frame;\n      let frames = [currentFrame];\n      if (applyAll) {\n        const allFrames = Object.keys(instanceItem.cameras[currentCamera].frames).map(f => parseInt(f, 10));\n        const index = allFrames.indexOf(currentFrame);\n        frames = allFrames.slice(index, allFrames.length);\n      }\n      const {\n        prevState,\n        currState\n      } = instanceItem.setAttributes(currentCamera, frames, values);\n      this.itemStates.push({\n        prevState,\n        currState\n      });\n      this.checkFinished();\n      const shape = store.config.viewMode === ViewMode.DEFAULT ? store.shape.selectedShapes[0] : store.grid.getCurrentSelectedShape();\n      if (shape) {\n        store.shape.setShapeStyles(shape, instanceItem);\n      }\n    };\n    /**\n     * submit button click\n     */\n    this.submit = () => {\n      var _this$ref$current;\n      this.submitCount = 0;\n      this.instanceState = undefined;\n      this.itemStates = [];\n      const buttons = (_this$ref$current = this.ref.current) === null || _this$ref$current === void 0 ? void 0 : _this$ref$current.querySelectorAll('button.easyform-btn.form-btn-submit');\n      buttons === null || buttons === void 0 ? void 0 : buttons.forEach(btn => {\n        this.submitCount += 1;\n        btn.click();\n      });\n    };\n    /**\n     * submit by click mask or enter\n     */\n    this.quickSubmit = () => {\n      // simply check by class name, if any popover opened, not trigger submit\n      const applyPopovers = document.querySelectorAll('.frames-apply-popover:not(.ant-popover-hidden)');\n      const formulaPopovers = document.querySelectorAll('.formula-example-selector__popover:not(.easyform-popover-hidden)');\n      if (applyPopovers.length === 0 && formulaPopovers.length === 0) {\n        this.submit();\n      }\n    };\n  }\n  /**\n   * check if all forms has been submitted\n   */\n  checkFinished() {\n    this.submitCount -= 1;\n    if (this.submitCount === 0) {\n      var _this$instanceState, _this$instanceState2;\n      // finish\n      const basicInfo = store.instance.selectedInstances[0].getBasicInfo();\n      const prevInstance = {\n        ...(((_this$instanceState = this.instanceState) === null || _this$instanceState === void 0 ? void 0 : _this$instanceState.prevState) || basicInfo),\n        children: []\n      };\n      const currInstance = {\n        ...(((_this$instanceState2 = this.instanceState) === null || _this$instanceState2 === void 0 ? void 0 : _this$instanceState2.currState) || basicInfo),\n        children: []\n      };\n      this.itemStates.forEach(({\n        prevState,\n        currState\n      }) => {\n        if (prevState) {\n          prevInstance.children.push(prevState);\n        }\n        if (currState) {\n          currInstance.children.push(currState);\n        }\n      });\n      store.undo.push({\n        instances: [prevInstance]\n      }, {\n        instances: [currInstance]\n      });\n      store.config.setAttributesModalVisible(false);\n    }\n  }\n  render() {\n    const {\n      attributesModalVisible\n    } = store.config;\n    const {\n      isMultiSelected,\n      selectedInstances,\n      selectedInstanceItems\n    } = store.instance;\n    if (!attributesModalVisible || isMultiSelected || selectedInstances.length <= 0) {\n      return null;\n    }\n    const selectedInstance = selectedInstances[0];\n    const {\n      labelConfig: instanceConfig\n    } = selectedInstance.categoryRef;\n    let instanceFields;\n    if (instanceConfig) {\n      instanceFields = setInitialValues(instanceConfig.fields, selectedInstance.attributes);\n    }\n    return /*#__PURE__*/React.createElement(Modal, {\n      visible: true,\n      draggable: true,\n      closable: false,\n      dragId: \"video-tracking-attributes\",\n      className: \"attributes-form\",\n      title: i18n.translate('INSTANCE_ATTRIBUTES'),\n      onMaskClick: this.quickSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.ref,\n      className: \"attributes-form-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }\n    }, instanceConfig && instanceFields && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"attributes-form-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"attributes-form-section__title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }\n    }, selectedInstance.label), /*#__PURE__*/React.createElement(EasyForm, {\n      theme: \"dark\",\n      fields: instanceFields,\n      conditions: instanceConfig.conditions,\n      effects: instanceConfig.effects,\n      rules: instanceConfig.rules,\n      onSubmit: this.onInstanceValuesSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 15\n      }\n    })), selectedInstanceItems.length === 1 ? /*#__PURE__*/React.createElement(InstanceItemAttributesForm, {\n      instanceItem: selectedInstanceItems[0],\n      onSubmit: (values, applyAll) => this.onItemValuesSubmit(selectedInstanceItems[0], values, applyAll),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }) : Object.values(selectedInstance.items).map(item => /*#__PURE__*/React.createElement(InstanceItemAttributesForm, {\n      key: item.id,\n      instanceItem: item,\n      onSubmit: (values, applyAll) => this.onItemValuesSubmit(item, values, applyAll),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"attributes-form-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }\n    }, i18n.translate('COMMON_SUBMIT'))));\n  }\n}\nexport default observer(AttributesModal);","map":{"version":3,"names":["React","observer","Button","EasyForm","Modal","InstanceItemAttributesForm","store","i18n","setInitialValues","ViewMode","AttributesModal","Component","constructor","args","ref","createRef","submitCount","instanceState","itemStates","onInstanceValuesSubmit","values","selectedInstances","instance","length","selectedInstance","prevBasicInfo","getBasicInfo","setAttributes","prevState","children","currState","checkFinished","onItemValuesSubmit","instanceItem","applyAll","currentCamera","currentFrame","frame","frames","allFrames","Object","keys","cameras","map","f","parseInt","index","indexOf","slice","push","shape","config","viewMode","DEFAULT","selectedShapes","grid","getCurrentSelectedShape","setShapeStyles","submit","_this$ref$current","undefined","buttons","current","querySelectorAll","forEach","btn","click","quickSubmit","applyPopovers","document","formulaPopovers","_this$instanceState","_this$instanceState2","basicInfo","prevInstance","currInstance","undo","instances","setAttributesModalVisible","render","attributesModalVisible","isMultiSelected","selectedInstanceItems","labelConfig","instanceConfig","categoryRef","instanceFields","fields","attributes","createElement","visible","draggable","closable","dragId","className","title","translate","onMaskClick","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","label","theme","conditions","effects","rules","onSubmit","items","item","key","id","type","onClick"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking2/components/attributes/AttributesModal.tsx"],"sourcesContent":["import React from 'react';\nimport { observer } from 'mobx-react';\nimport { Button } from 'antd';\nimport EasyForm from '@appen/easy-form';\nimport Modal from '../../../common/modal/Modal';\nimport InstanceItemAttributesForm from './InstanceItemAttributesForm';\nimport InstanceItem from '../../model/InstanceItem';\nimport store from '../../store/RootStore';\nimport i18n from '../../locales';\nimport { setInitialValues } from '../../utils';\nimport { Instance as IInstance, InstanceItem as IInstanceItem, ViewMode } from '../../types';\nimport './AttributesModal.scss';\n\nclass AttributesModal extends React.Component {\n  /**\n   * form container\n   */\n  ref = React.createRef<HTMLDivElement>();\n\n  /**\n   * forms count that to be submitted\n   */\n  submitCount = 0;\n\n  /**\n   * instance state\n   */\n  instanceState?: {\n    prevState: IInstance;\n    currState: IInstance;\n  };\n\n  /**\n   * items state\n   */\n  itemStates: {\n    prevState?: IInstanceItem;\n    currState?: IInstanceItem;\n  }[] = [];\n\n  /**\n   * when instance values submit\n   * @param values\n   */\n  onInstanceValuesSubmit = (values: any) => {\n    const { selectedInstances } = store.instance;\n    if (selectedInstances.length === 1) {\n      const selectedInstance = selectedInstances[0];\n      const prevBasicInfo = selectedInstance.getBasicInfo();\n      selectedInstance.setAttributes(values);\n      this.instanceState = {\n        prevState: { ...prevBasicInfo, children: [] },\n        currState: { ...selectedInstance.getBasicInfo(), children: [] },\n      };\n    }\n    this.checkFinished();\n  };\n\n  /**\n   * when instance item values submit (with OCR text)\n   * @param instanceItem\n   * @param values\n   * @param applyAll\n   */\n  onItemValuesSubmit = (instanceItem: InstanceItem, values: { attributes?: any; OCRText?: string; formulaText?: string }, applyAll: boolean) => {\n    const { currentCamera, currentFrame } = store.frame;\n    let frames = [currentFrame];\n    if (applyAll) {\n      const allFrames = Object.keys(instanceItem.cameras[currentCamera].frames).map((f) => parseInt(f, 10));\n      const index = allFrames.indexOf(currentFrame);\n      frames = allFrames.slice(index, allFrames.length);\n    }\n    const { prevState, currState } = instanceItem.setAttributes(currentCamera, frames, values);\n    this.itemStates.push({ prevState, currState });\n    this.checkFinished();\n    const shape = store.config.viewMode === ViewMode.DEFAULT ? store.shape.selectedShapes[0] : store.grid.getCurrentSelectedShape();\n    if (shape) {\n      store.shape.setShapeStyles(shape, instanceItem);\n    }\n  };\n\n  /**\n   * check if all forms has been submitted\n   */\n  checkFinished() {\n    this.submitCount -= 1;\n    if (this.submitCount === 0) {\n      // finish\n      const basicInfo = store.instance.selectedInstances[0]!.getBasicInfo();\n      const prevInstance: IInstance = {\n        ...(this.instanceState?.prevState || basicInfo),\n        children: [],\n      };\n      const currInstance: IInstance = {\n        ...(this.instanceState?.currState || basicInfo),\n        children: [],\n      };\n      this.itemStates.forEach(({ prevState, currState }) => {\n        if (prevState) {\n          prevInstance.children.push(prevState);\n        }\n        if (currState) {\n          currInstance.children.push(currState);\n        }\n      });\n      store.undo.push({ instances: [prevInstance] }, { instances: [currInstance] });\n      store.config.setAttributesModalVisible(false);\n    }\n  }\n\n  /**\n   * submit button click\n   */\n  submit = () => {\n    this.submitCount = 0;\n    this.instanceState = undefined;\n    this.itemStates = [];\n\n    const buttons = this.ref.current?.querySelectorAll('button.easyform-btn.form-btn-submit');\n    buttons?.forEach((btn) => {\n      this.submitCount += 1;\n      (btn as HTMLButtonElement).click();\n    });\n  };\n\n  /**\n   * submit by click mask or enter\n   */\n  quickSubmit = () => {\n    // simply check by class name, if any popover opened, not trigger submit\n    const applyPopovers = document.querySelectorAll('.frames-apply-popover:not(.ant-popover-hidden)');\n    const formulaPopovers = document.querySelectorAll('.formula-example-selector__popover:not(.easyform-popover-hidden)');\n    if (applyPopovers.length === 0 && formulaPopovers.length === 0) {\n      this.submit();\n    }\n  };\n\n  render() {\n    const { attributesModalVisible } = store.config;\n    const { isMultiSelected, selectedInstances, selectedInstanceItems } = store.instance;\n    if (!attributesModalVisible || isMultiSelected || selectedInstances.length <= 0) {\n      return null;\n    }\n\n    const selectedInstance = selectedInstances[0];\n    const { labelConfig: instanceConfig } = selectedInstance.categoryRef;\n    let instanceFields;\n    if (instanceConfig) {\n      instanceFields = setInitialValues(instanceConfig.fields, selectedInstance.attributes);\n    }\n\n    return (\n      <Modal\n        visible\n        draggable\n        closable={false}\n        dragId=\"video-tracking-attributes\"\n        className=\"attributes-form\"\n        title={i18n.translate('INSTANCE_ATTRIBUTES')}\n        onMaskClick={this.quickSubmit}\n      >\n        <div ref={this.ref} className=\"attributes-form-content\">\n          {instanceConfig && instanceFields && (\n            <div className=\"attributes-form-section\">\n              <div className=\"attributes-form-section__title\">\n                {selectedInstance.label}\n              </div>\n              <EasyForm\n                theme=\"dark\"\n                fields={instanceFields}\n                conditions={instanceConfig.conditions}\n                effects={instanceConfig.effects}\n                rules={instanceConfig.rules}\n                onSubmit={this.onInstanceValuesSubmit}\n              />\n            </div>\n          )}\n          {selectedInstanceItems.length === 1 ? (\n            <InstanceItemAttributesForm\n              instanceItem={selectedInstanceItems[0]}\n              onSubmit={(values, applyAll) => this.onItemValuesSubmit(selectedInstanceItems[0], values, applyAll)}\n            />\n          ) : Object.values(selectedInstance.items).map((item) => (\n            <InstanceItemAttributesForm\n              key={item.id}\n              instanceItem={item}\n              onSubmit={(values, applyAll) => this.onItemValuesSubmit(item, values, applyAll)}\n            />\n          ))}\n        </div>\n        <div className=\"attributes-form-footer\">\n          <Button type=\"primary\" onClick={this.submit}>\n            {i18n.translate('COMMON_SUBMIT')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default observer(AttributesModal);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}