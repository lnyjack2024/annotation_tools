{"ast":null,"code":"export const parseAlawPcmToAudioData=data=>{const dataView=new DataView(data);const reader=createReader(dataView);const read=reader.pcm16;const length=data.byteLength/2;const audioBuffer=new AudioBuffer({numberOfChannels:1,length,sampleRate:8000});const channelData=audioBuffer.getChannelData(0);for(let i=0;i<length;i+=1){channelData[i]=read();}return audioBuffer;};export function createReader(dataView){let pos=0;return{remain(){return dataView.byteLength-pos;},skip(n){pos+=n;},uint8(){const data=dataView.getUint8(pos);pos+=1;return data;},int16(){const data=dataView.getInt16(pos,true);pos+=2;return data;},uint16(){const data=dataView.getUint16(pos,true);pos+=2;return data;},uint32(){const data=dataView.getUint32(pos,true);pos+=4;return data;},string(n){let data='';for(let i=0;i<n;i+=1){data+=String.fromCharCode(this.uint8());}return data;},pcm8(){const data=dataView.getUint8(pos)-128;pos+=1;return data<0?data/128:data/127;},pcm8s(){const data=dataView.getUint8(pos)-127.5;pos+=1;return data/127.5;},pcm16(){const data=dataView.getInt16(pos,true);pos+=2;return data<0?data/32768:data/32767;},pcm16s(){const data=dataView.getInt16(pos,true);pos+=2;return data/32768;},pcm24(){const x0=dataView.getUint8(pos+0);const x1=dataView.getUint8(pos+1);const x2=dataView.getUint8(pos+2);const xx=x0+x1*2**8+x2*2**16;const data=xx>0x800000?xx-0x1000000:xx;pos+=3;return data<0?data/8388608:data/8388607;},pcm24s(){const x0=dataView.getUint8(pos+0);const x1=dataView.getUint8(pos+1);const x2=dataView.getUint8(pos+2);const xx=x0+x1*2**8+x2*2**16;const data=xx>0x800000?xx-0x1000000:xx;pos+=3;return data/8388608;},pcm32(){const data=dataView.getInt32(pos,true);pos+=4;return data<0?data/2147483648:data/2147483647;},pcm32s(){const data=dataView.getInt32(pos,true);pos+=4;return data/2147483648;},pcm32f(){const data=dataView.getFloat32(pos,true);pos+=4;return data;},pcm64f(){const data=dataView.getFloat64(pos,true);pos+=8;return data;}};}function writeString(view,offset,str){for(let i=0;i<str.length;i+=1){view.setUint8(offset+i,str.charCodeAt(i));}}function floatTo32BitPCM(output,_offset,_input){const input=new Int32Array(_input);let offset=_offset;for(let i=0;i<input.length;i+=1,offset+=4){output.setInt32(offset,input[i],true);}}function floatTo16BitPCM(output,_offset,_input){const input=new Int16Array(_input);let offset=_offset;for(let i=0;i<input.length;i+=1,offset+=2){output.setInt16(offset,input[i],true);}}function floatTo8BitPCM(output,_offset,_input){const input=new Int8Array(_input);let offset=_offset;for(let i=0;i<input.length;i+=1,offset+=1){output.setInt8(offset,input[i]);}}export const addWavHeader=(samples,sampleRateTmp,sampleBits,channelCount)=>{const dataLength=samples.byteLength;const buffer=new ArrayBuffer(44+dataLength);const view=new DataView(buffer);let offset=0;/* Resource Interchange File Format */writeString(view,offset,'RIFF');offset+=4;/* datalength */view.setUint32(offset,/* 32 */36+dataLength,true);offset+=4;/* file type */writeString(view,offset,'WAVE');offset+=4;/* waveform format */writeString(view,offset,'fmt ');offset+=4;/* filter byte, 0x10 = 16 */view.setUint32(offset,16,true);offset+=4;/* pcm byte */view.setUint16(offset,1,true);offset+=2;/* channel count */view.setUint16(offset,channelCount,true);offset+=2;/* sampleRate */view.setUint32(offset,sampleRateTmp,true);offset+=4;/* bitrate */view.setUint32(offset,sampleRateTmp*channelCount*(sampleBits/8),true);offset+=4;/* sample byte */view.setUint16(offset,channelCount*(sampleBits/8),true);offset+=2;/* sample bits */view.setUint16(offset,sampleBits,true);offset+=2;writeString(view,offset,'data');offset+=4;/* sample datalength: datalength-44 */view.setUint32(offset,dataLength,true);offset+=4;if(sampleBits===16){floatTo16BitPCM(view,44,samples);}else if(sampleBits===8){floatTo8BitPCM(view,44,samples);}else{floatTo32BitPCM(view,44,samples);}return view.buffer;};export const parsePcmToWav=async(fileBuffer,sampleRateTmp,sampleBits,channelCount)=>{try{const audioContext=new AudioContext({sampleRate:sampleRateTmp});const arrayBuffer=addWavHeader(fileBuffer,sampleRateTmp,sampleBits,channelCount);const audioBuffer=await audioContext.decodeAudioData(arrayBuffer);return audioBuffer;}catch(error){console.log('load pcm failed: ',error);return null;}};","map":{"version":3,"names":["parseAlawPcmToAudioData","data","dataView","DataView","reader","createReader","read","pcm16","length","byteLength","audioBuffer","AudioBuffer","numberOfChannels","sampleRate","channelData","getChannelData","i","pos","remain","skip","n","uint8","getUint8","int16","getInt16","uint16","getUint16","uint32","getUint32","string","String","fromCharCode","pcm8","pcm8s","pcm16s","pcm24","x0","x1","x2","xx","pcm24s","pcm32","getInt32","pcm32s","pcm32f","getFloat32","pcm64f","getFloat64","writeString","view","offset","str","setUint8","charCodeAt","floatTo32BitPCM","output","_offset","_input","input","Int32Array","setInt32","floatTo16BitPCM","Int16Array","setInt16","floatTo8BitPCM","Int8Array","setInt8","addWavHeader","samples","sampleRateTmp","sampleBits","channelCount","dataLength","buffer","ArrayBuffer","setUint32","setUint16","parsePcmToWav","fileBuffer","audioContext","AudioContext","arrayBuffer","decodeAudioData","error","console","log"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/utils/pcm.ts"],"sourcesContent":["export const parseAlawPcmToAudioData = (data: ArrayBufferLike) => {\n  const dataView = new DataView(data);\n  const reader = createReader(dataView);\n  const read = reader.pcm16;\n\n  const length = data.byteLength / 2;\n\n  const audioBuffer = new AudioBuffer({\n    numberOfChannels: 1,\n    length,\n    sampleRate: 8000,\n  });\n\n  const channelData = audioBuffer.getChannelData(0);\n\n  for (let i = 0; i < length; i += 1) {\n    channelData[i] = read();\n  }\n\n  return audioBuffer;\n};\n\nexport function createReader(dataView: DataView) {\n  let pos = 0;\n\n  return {\n    remain() {\n      return dataView.byteLength - pos;\n    },\n    skip(n: number) {\n      pos += n;\n    },\n    uint8() {\n      const data = dataView.getUint8(pos);\n\n      pos += 1;\n\n      return data;\n    },\n    int16() {\n      const data = dataView.getInt16(pos, true);\n\n      pos += 2;\n\n      return data;\n    },\n    uint16() {\n      const data = dataView.getUint16(pos, true);\n\n      pos += 2;\n\n      return data;\n    },\n    uint32() {\n      const data = dataView.getUint32(pos, true);\n\n      pos += 4;\n\n      return data;\n    },\n    string(n: number) {\n      let data = '';\n\n      for (let i = 0; i < n; i += 1) {\n        data += String.fromCharCode(this.uint8());\n      }\n\n      return data;\n    },\n    pcm8() {\n      const data = dataView.getUint8(pos) - 128;\n\n      pos += 1;\n\n      return data < 0 ? data / 128 : data / 127;\n    },\n    pcm8s() {\n      const data = dataView.getUint8(pos) - 127.5;\n\n      pos += 1;\n\n      return data / 127.5;\n    },\n    pcm16() {\n      const data = dataView.getInt16(pos, true);\n\n      pos += 2;\n\n      return data < 0 ? data / 32768 : data / 32767;\n    },\n    pcm16s() {\n      const data = dataView.getInt16(pos, true);\n\n      pos += 2;\n\n      return data / 32768;\n    },\n    pcm24() {\n      const x0 = dataView.getUint8(pos + 0);\n      const x1 = dataView.getUint8(pos + 1);\n      const x2 = dataView.getUint8(pos + 2);\n      const xx = (x0 + (x1 * 2 ** 8) + (x2 * 2 ** 16));\n      const data = xx > 0x800000 ? xx - 0x1000000 : xx;\n\n      pos += 3;\n\n      return data < 0 ? data / 8388608 : data / 8388607;\n    },\n    pcm24s() {\n      const x0 = dataView.getUint8(pos + 0);\n      const x1 = dataView.getUint8(pos + 1);\n      const x2 = dataView.getUint8(pos + 2);\n      const xx = (x0 + (x1 * 2 ** 8) + (x2 * 2 ** 16));\n      const data = xx > 0x800000 ? xx - 0x1000000 : xx;\n\n      pos += 3;\n\n      return data / 8388608;\n    },\n    pcm32() {\n      const data = dataView.getInt32(pos, true);\n\n      pos += 4;\n\n      return data < 0 ? data / 2147483648 : data / 2147483647;\n    },\n    pcm32s() {\n      const data = dataView.getInt32(pos, true);\n\n      pos += 4;\n\n      return data / 2147483648;\n    },\n    pcm32f() {\n      const data = dataView.getFloat32(pos, true);\n\n      pos += 4;\n\n      return data;\n    },\n    pcm64f() {\n      const data = dataView.getFloat64(pos, true);\n\n      pos += 8;\n\n      return data;\n    }\n  };\n}\n\nfunction writeString(view: DataView, offset: number, str: string) {\n  for (let i = 0; i < str.length; i += 1) {\n    view.setUint8(offset + i, str.charCodeAt(i));\n  }\n}\n\nfunction floatTo32BitPCM(output: DataView, _offset: number, _input: ArrayBuffer) {\n  const input = new Int32Array(_input);\n  let offset = _offset;\n  for (let i = 0; i < input.length; i += 1, offset += 4) {\n    output.setInt32(offset, input[i], true);\n  }\n}\nfunction floatTo16BitPCM(output: DataView, _offset: number, _input: ArrayBuffer) {\n  const input = new Int16Array(_input);\n  let offset = _offset;\n  for (let i = 0; i < input.length; i += 1, offset += 2) {\n    output.setInt16(offset, input[i], true);\n  }\n}\nfunction floatTo8BitPCM(output: DataView, _offset: number, _input: ArrayBuffer) {\n  const input = new Int8Array(_input);\n  let offset = _offset;\n  for (let i = 0; i < input.length; i += 1, offset += 1) {\n    output.setInt8(offset, input[i]);\n  }\n}\n\nexport const addWavHeader = (samples: ArrayBuffer, sampleRateTmp: number, sampleBits: number, channelCount: number) => {\n  const dataLength = samples.byteLength;\n  const buffer = new ArrayBuffer(44 + dataLength);\n  const view = new DataView(buffer);\n  let offset = 0;\n  /* Resource Interchange File Format */\n  writeString(view, offset, 'RIFF'); offset += 4;\n  /* datalength */\n  view.setUint32(offset, /* 32 */ 36 + dataLength, true); offset += 4;\n  /* file type */\n  writeString(view, offset, 'WAVE'); offset += 4;\n  /* waveform format */\n  writeString(view, offset, 'fmt '); offset += 4;\n  /* filter byte, 0x10 = 16 */\n  view.setUint32(offset, 16, true); offset += 4;\n  /* pcm byte */\n  view.setUint16(offset, 1, true); offset += 2;\n  /* channel count */\n  view.setUint16(offset, channelCount, true); offset += 2;\n  /* sampleRate */\n  view.setUint32(offset, sampleRateTmp, true); offset += 4;\n  /* bitrate */\n  view.setUint32(offset, sampleRateTmp * channelCount * (sampleBits / 8), true); offset += 4;\n  /* sample byte */\n  view.setUint16(offset, channelCount * (sampleBits / 8), true); offset += 2;\n  /* sample bits */\n  view.setUint16(offset, sampleBits, true); offset += 2;\n\n  writeString(view, offset, 'data'); offset += 4;\n  /* sample datalength: datalength-44 */\n  view.setUint32(offset, dataLength, true); offset += 4;\n\n  if (sampleBits === 16) {\n    floatTo16BitPCM(view, 44, samples);\n  } else if (sampleBits === 8) {\n    floatTo8BitPCM(view, 44, samples);\n  } else {\n    floatTo32BitPCM(view, 44, samples);\n  }\n  return view.buffer;\n};\n\nexport const parsePcmToWav = async (fileBuffer: ArrayBuffer, sampleRateTmp: number, sampleBits: number, channelCount: number) => {\n  try {\n    const audioContext = new AudioContext({ sampleRate: sampleRateTmp });\n    const arrayBuffer = addWavHeader(fileBuffer, sampleRateTmp, sampleBits, channelCount);\n    const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n    return audioBuffer;\n  } catch (error) {\n    console.log('load pcm failed: ', error);\n    return null;\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}