{"ast":null,"code":"import _applyDecoratedDescriptor from \"/Users/qzheng/Documents/webroot/annotation_tools/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nvar _class,\n  _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/phonetic-transcription/components/Helper/Assist.tsx\";\nimport React from 'react';\nimport { makeObservable, computed, reaction } from 'mobx';\nimport rootStore from '../../store/RootStore';\nimport { Align, Style } from '../../types';\nimport { wrapText } from '../../utils';\nconst pitchRange = {\n  min: 75,\n  max: 500\n};\nconst intensityRange = {\n  min: 50,\n  max: 100\n};\nlet Assist = (_class = class Assist extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ratio = 1;\n    this.lineWidth = 1;\n    this.canvasRef = React.createRef();\n    this.ctx = null;\n    /**\n     * reaction disposer\n     */\n    this.reactionDisposer = void 0;\n    this.setupAssistCanvas = () => {\n      const canvas = this.canvasRef.current;\n      this.ctx = canvas.getContext('2d');\n      this.updateAssist();\n    };\n    this.updateAssist = () => {\n      const canvas = this.canvasRef.current;\n      this.ratio = window.devicePixelRatio;\n      const rect = canvas.getBoundingClientRect();\n      canvas.width = rect.width * this.ratio;\n      canvas.height = rect.height * this.ratio;\n      this.updateLine();\n    };\n    this.updateLine = () => {\n      if (!this.ctx) return;\n      if (!this.withinRangeWidth || !this.withinRangeHeight) {\n        return;\n      }\n      const {\n        margin,\n        timelineHeight,\n        atlasHeight,\n        atlasWidth\n      } = this.props.ratioPlacement;\n      const pos = {\n        x: this.props.mousePosition.x * this.ratio,\n        y: this.props.mousePosition.y * this.ratio\n      };\n      const line1 = [];\n      const line2 = [];\n      const fontSize = Style.FONTSIZE * this.ratio;\n      line1.push([pos.x, 0], [pos.x, timelineHeight + atlasHeight]);\n      line2.push([margin + 1, pos.y], [margin + atlasWidth + 1, pos.y]);\n      this.ctx.setLineDash([5]);\n      this.ctx.save();\n      this.ctx.strokeStyle = Style.STROKE;\n      this.ctx.lineWidth = this.lineWidth * this.ratio;\n      this.ctx.beginPath();\n      if (line2.length === 2) {\n        this.ctx.moveTo(line1[0][0], line1[0][1]);\n        this.ctx.lineTo(line1[1][0], line1[1][1]);\n        this.ctx.moveTo(line2[0][0], line2[0][1]);\n        this.ctx.lineTo(line2[1][0], line2[1][1]);\n      }\n      this.ctx.stroke();\n      this.ctx.beginPath();\n      this.ctx.setLineDash([]);\n      this.ctx.moveTo(pos.x - 6 * this.ratio, 0);\n      this.ctx.lineTo(pos.x + 6 * this.ratio, 0);\n      this.ctx.lineTo(pos.x, timelineHeight / 5);\n      wrapText(this.ctx, rootStore.analyse.cursorTime.toFixed(6), line1[0][0] + 6, timelineHeight - fontSize / 2, Align.LEFT, Style.STROKE, Style.FONTSIZE);\n      this.ctx.closePath();\n      this.ctx.fillStyle = Style.STROKE;\n      this.ctx.fill();\n      this.drawScale();\n    };\n    this.drawScale = () => {\n      const {\n        amplitude,\n        sampleRate,\n        visible\n      } = rootStore.analyse;\n      const {\n        margin,\n        timelineHeight,\n        atlasHeight,\n        atlasWidth\n      } = this.props.ratioPlacement;\n      const fontSize = Style.FONTSIZE * this.ratio;\n      const y = this.props.mousePosition.y * this.ratio;\n      const atlasY = 1 - (y - (timelineHeight + atlasHeight / 2)) / (atlasHeight / 2);\n      // mouse move on praat atlas\n      const isOnAtlasMouseMove = atlasY > 0 && atlasY < 1;\n      // draw start x\n      const leftStart = margin - 6;\n      const halfFont = fontSize / 2;\n      // waveform curve scale\n      if (amplitude.max !== 0 && atlasY > 1 && atlasY < 2) {\n        const waveformVal = (atlasY - 1.5) * 2 * amplitude.max;\n        wrapText(this.ctx, waveformVal.toFixed(6), leftStart, y + halfFont / 2, Align.RIGHT);\n      }\n      if (isOnAtlasMouseMove) {\n        /**\n         * spectrogram curve scale\n         */\n        if (visible.spectrogram) {\n          const spectrogramVal = atlasY * (sampleRate / 2);\n          wrapText(this.ctx, `${spectrogramVal.toFixed(1)} Hz`, leftStart, y + halfFont / 2, Align.RIGHT);\n        }\n\n        /**\n         * pitch curve scale\n         */\n        if (visible.pitch) {\n          const pitchVal = atlasY * (pitchRange.max - pitchRange.min) + pitchRange.min;\n          wrapText(this.ctx, `${pitchVal.toFixed(2)} Hz`, leftStart + atlasWidth + fontSize, y + halfFont / 2, Align.LEFT, Style.PITCH);\n        }\n\n        /**\n         * intensity curve scale\n         */\n        if (visible.intensity) {\n          const align = visible.pitch ? Align.RIGHT : Align.LEFT;\n          const offsetX = visible.pitch ? 0 : fontSize;\n          const intensityVal = atlasY * (intensityRange.max - intensityRange.min) + intensityRange.min;\n          wrapText(this.ctx, `${intensityVal.toFixed(2)} dB`, leftStart + atlasWidth + offsetX, y - halfFont / 2, align, Style.INTENSITY);\n        }\n      }\n    };\n    makeObservable(this, {});\n    this.reactionDisposer = reaction(() => rootStore.analyse.isPlaying, () => {\n      this.updateAssist();\n    });\n  }\n  get withinRangeWidth() {\n    const {\n      margin,\n      atlasWidth\n    } = rootStore.analyse.placement;\n    return this.props.mousePosition.x > margin + 1 && this.props.mousePosition.x < margin + atlasWidth + 1;\n  }\n  get withinRangeHeight() {\n    const {\n      timelineHeight,\n      atlasHeight\n    } = rootStore.analyse.placement;\n    return this.props.mousePosition.y > timelineHeight && this.props.mousePosition.y < timelineHeight + atlasHeight;\n  }\n  componentDidMount() {\n    this.setupAssistCanvas();\n  }\n  componentWillUnmount() {\n    this.reactionDisposer();\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.mousePosition.x !== this.props.mousePosition.x || prevProps.mousePosition.y !== this.props.mousePosition.y || JSON.stringify(prevProps.ratioPlacement) !== JSON.stringify(this.props.ratioPlacement)) {\n      this.updateAssist();\n    }\n  }\n  render() {\n    const {\n      atlasWidth,\n      margin\n    } = rootStore.analyse.placement;\n    return /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: this.canvasRef,\n      style: {\n        pointerEvents: 'none',\n        width: `${margin * 2 + atlasWidth}px`\n      },\n      className: \"absoluteTopLeftZeroW100H100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 7\n      }\n    });\n  }\n}, _applyDecoratedDescriptor(_class.prototype, \"withinRangeWidth\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"withinRangeWidth\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"withinRangeHeight\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"withinRangeHeight\"), _class.prototype), _class);\n;\nexport default Assist;","map":{"version":3,"names":["React","makeObservable","computed","reaction","rootStore","Align","Style","wrapText","pitchRange","min","max","intensityRange","Assist","_class","Component","constructor","props","ratio","lineWidth","canvasRef","createRef","ctx","reactionDisposer","setupAssistCanvas","canvas","current","getContext","updateAssist","window","devicePixelRatio","rect","getBoundingClientRect","width","height","updateLine","withinRangeWidth","withinRangeHeight","margin","timelineHeight","atlasHeight","atlasWidth","ratioPlacement","pos","x","mousePosition","y","line1","line2","fontSize","FONTSIZE","push","setLineDash","save","strokeStyle","STROKE","beginPath","length","moveTo","lineTo","stroke","analyse","cursorTime","toFixed","LEFT","closePath","fillStyle","fill","drawScale","amplitude","sampleRate","visible","atlasY","isOnAtlasMouseMove","leftStart","halfFont","waveformVal","RIGHT","spectrogram","spectrogramVal","pitch","pitchVal","PITCH","intensity","align","offsetX","intensityVal","INTENSITY","isPlaying","placement","componentDidMount","componentWillUnmount","componentDidUpdate","prevProps","JSON","stringify","render","createElement","ref","style","pointerEvents","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","_applyDecoratedDescriptor","prototype","Object","getOwnPropertyDescriptor"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/phonetic-transcription/components/Helper/Assist.tsx"],"sourcesContent":["import React from 'react';\nimport { makeObservable, computed, reaction, IReactionDisposer } from 'mobx';\nimport rootStore from '../../store/RootStore';\nimport { Align, Style } from '../../types';\nimport { wrapText } from '../../utils';\n\nexport interface AssistLineProps {\n  mousePosition: { x: number; y: number; mousedown: boolean; };\n  ratioPlacement: {[key: string]: number};\n}\n\nconst pitchRange = { min: 75, max: 500 };\nconst intensityRange = { min: 50, max: 100 };\n\nclass Assist extends React.Component<AssistLineProps> {\n  ratio = 1;\n\n  lineWidth = 1;\n\n  canvasRef: React.RefObject<HTMLCanvasElement> = React.createRef();\n\n  ctx: CanvasRenderingContext2D | null = null;\n\n  /**\n   * reaction disposer\n   */\n  reactionDisposer: IReactionDisposer;\n\n  constructor(props: AssistLineProps) {\n    super(props);\n    makeObservable(this, {});\n    this.reactionDisposer = reaction(\n      () => rootStore.analyse.isPlaying,\n      () => {\n        this.updateAssist();\n      },\n    );\n  }\n\n  @computed get withinRangeWidth() {\n    const { margin, atlasWidth } = rootStore.analyse.placement;\n    return this.props.mousePosition.x > (margin + 1) && this.props.mousePosition.x < (margin + atlasWidth + 1);\n  }\n\n  @computed get withinRangeHeight() {\n    const { timelineHeight, atlasHeight } = rootStore.analyse.placement;\n    return this.props.mousePosition.y > timelineHeight && this.props.mousePosition.y < (timelineHeight + atlasHeight);\n  }\n\n  componentDidMount() {\n    this.setupAssistCanvas();\n  }\n\n  componentWillUnmount() {\n    this.reactionDisposer();\n  }\n\n  componentDidUpdate(prevProps: AssistLineProps) {\n    if (\n      prevProps.mousePosition.x !== this.props.mousePosition.x ||\n      prevProps.mousePosition.y !== this.props.mousePosition.y ||\n      JSON.stringify(prevProps.ratioPlacement) !== JSON.stringify(this.props.ratioPlacement)\n    ) {\n      this.updateAssist();\n    }\n  }\n\n  setupAssistCanvas = () => {\n    const canvas = this.canvasRef.current! as HTMLCanvasElement;\n    this.ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n    this.updateAssist();\n  };\n\n  updateAssist = () => {\n    const canvas = this.canvasRef.current! as HTMLCanvasElement;\n    this.ratio = window.devicePixelRatio;\n    const rect = canvas.getBoundingClientRect();\n    canvas.width = rect.width * this.ratio;\n    canvas.height = rect.height * this.ratio;\n    this.updateLine();\n  };\n\n  updateLine = () => {\n    if (!this.ctx) return;\n    if (!this.withinRangeWidth || !this.withinRangeHeight) {\n      return;\n    }\n    const { margin, timelineHeight, atlasHeight, atlasWidth } = this.props.ratioPlacement;\n    const pos = {\n      x: this.props.mousePosition.x * this.ratio,\n      y: this.props.mousePosition.y * this.ratio,\n    };\n\n    const line1 = [];\n    const line2 = [];\n    const fontSize = Style.FONTSIZE * this.ratio;\n\n    line1.push([pos.x, 0], [pos.x, timelineHeight + atlasHeight]);\n    line2.push([margin + 1, pos.y], [margin + atlasWidth + 1, pos.y]);\n    this.ctx.setLineDash([5]);\n    this.ctx.save();\n    this.ctx.strokeStyle = Style.STROKE;\n    this.ctx.lineWidth = this.lineWidth * this.ratio;\n    this.ctx.beginPath();\n    if (line2.length === 2) {\n      this.ctx.moveTo(line1[0][0], line1[0][1]);\n      this.ctx.lineTo(line1[1][0], line1[1][1]);\n      this.ctx.moveTo(line2[0][0], line2[0][1]);\n      this.ctx.lineTo(line2[1][0], line2[1][1]);\n    }\n    this.ctx.stroke();\n\n    this.ctx.beginPath();\n    this.ctx.setLineDash([]);\n    this.ctx.moveTo(pos.x - 6 * this.ratio, 0);\n    this.ctx.lineTo(pos.x + 6 * this.ratio, 0);\n    this.ctx.lineTo(pos.x, timelineHeight / 5);\n    wrapText(this.ctx, rootStore.analyse.cursorTime.toFixed(6), line1[0][0] + 6, timelineHeight - fontSize / 2, Align.LEFT, Style.STROKE, Style.FONTSIZE);\n    this.ctx.closePath();\n    this.ctx.fillStyle = Style.STROKE;\n    this.ctx.fill();\n    this.drawScale();\n  };\n\n  drawScale = () => {\n    const {\n      amplitude,\n      sampleRate,\n      visible\n    } = rootStore.analyse;\n    const { margin, timelineHeight, atlasHeight, atlasWidth } = this.props.ratioPlacement;\n    const fontSize = Style.FONTSIZE * this.ratio;\n    const y = this.props.mousePosition.y * this.ratio;\n\n    const atlasY = 1 - ((y - (timelineHeight + atlasHeight / 2)) / (atlasHeight / 2));\n    // mouse move on praat atlas\n    const isOnAtlasMouseMove = atlasY > 0 && atlasY < 1;\n    // draw start x\n    const leftStart = margin - 6;\n    const halfFont = fontSize / 2;\n    // waveform curve scale\n    if (amplitude.max !== 0 && atlasY > 1 && atlasY < 2) {\n      const waveformVal = (atlasY - 1.5) * 2 * amplitude.max;\n      wrapText(this.ctx, waveformVal.toFixed(6), leftStart, y + halfFont / 2, Align.RIGHT);\n    }\n\n    if (isOnAtlasMouseMove) {\n      /**\n       * spectrogram curve scale\n       */\n      if (visible.spectrogram) {\n        const spectrogramVal = atlasY * (sampleRate / 2);\n        wrapText(this.ctx, `${spectrogramVal.toFixed(1)} Hz`, leftStart, y + halfFont / 2, Align.RIGHT);\n      }\n\n      /**\n       * pitch curve scale\n       */\n      if (visible.pitch) {\n        const pitchVal = atlasY * (pitchRange.max - pitchRange.min) + pitchRange.min;\n        wrapText(this.ctx, `${pitchVal.toFixed(2)} Hz`, leftStart + atlasWidth + fontSize, y + halfFont / 2, Align.LEFT, Style.PITCH);\n      }\n\n      /**\n       * intensity curve scale\n       */\n      if (visible.intensity) {\n        const align = visible.pitch ? Align.RIGHT : Align.LEFT;\n        const offsetX = visible.pitch ? 0 : fontSize;\n        const intensityVal = atlasY * (intensityRange.max - intensityRange.min) + intensityRange.min;\n        wrapText(this.ctx, `${intensityVal.toFixed(2)} dB`, leftStart + atlasWidth + offsetX, y - halfFont / 2, align, Style.INTENSITY);\n      }\n    }\n  };\n\n  render() {\n    const { atlasWidth, margin } = rootStore.analyse.placement;\n    return (\n      <canvas\n        ref={this.canvasRef}\n        style={{\n          pointerEvents: 'none',\n          width: `${margin * 2 + atlasWidth}px`,\n        }}\n        className=\"absoluteTopLeftZeroW100H100\"\n      />\n    );\n  }\n};\n\nexport default Assist;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}