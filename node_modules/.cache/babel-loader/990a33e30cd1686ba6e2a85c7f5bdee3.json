{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/common/layout/LayoutWrapper.tsx\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport cx from 'classnames';\nimport './LayoutWrapper.scss';\nconst LayoutWrapper = ({\n  className,\n  style,\n  loading = false,\n  loadingDelay = 300,\n  children\n}) => {\n  const timer = useRef();\n  const [shouldLoading, setShouldLoading] = useState(false);\n  useEffect(() => {\n    if (loading) {\n      // if loading, set timer to show as loading\n      timer.current = window.setTimeout(() => {\n        setShouldLoading(loading);\n      }, loadingDelay);\n    } else if (timer.current) {\n      window.clearTimeout(timer.current);\n      setShouldLoading(false);\n    }\n  }, [loading]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cx('app-layout-wrapper', className),\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, shouldLoading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }), children);\n};\nexport default LayoutWrapper;","map":{"version":3,"names":["React","useEffect","useRef","useState","cx","LayoutWrapper","className","style","loading","loadingDelay","children","timer","shouldLoading","setShouldLoading","current","window","setTimeout","clearTimeout","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/common/layout/LayoutWrapper.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport cx from 'classnames';\nimport './LayoutWrapper.scss';\n\ninterface LayoutWrapperProps {\n  className?: string;\n  style?: React.CSSProperties;\n  loading?: boolean;\n  loadingDelay?: number;\n  children: React.ReactNode;\n}\n\nconst LayoutWrapper = ({ className, style, loading = false, loadingDelay = 300, children }: LayoutWrapperProps) => {\n  const timer = useRef<number>();\n  const [shouldLoading, setShouldLoading] = useState(false);\n\n  useEffect(() => {\n    if (loading) {\n      // if loading, set timer to show as loading\n      timer.current = window.setTimeout(() => {\n        setShouldLoading(loading);\n      }, loadingDelay);\n    } else if (timer.current) {\n      window.clearTimeout(timer.current);\n      setShouldLoading(false);\n    }\n  }, [loading]);\n\n  return (\n    <div\n      className={cx('app-layout-wrapper', className)}\n      style={style}\n    >\n      {shouldLoading && <div className=\"app-loading\" />}\n      {children}\n    </div>\n  );\n};\n\nexport default LayoutWrapper;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,EAAE,MAAM,YAAY;AAC3B,OAAO,sBAAsB;AAU7B,MAAMC,aAAa,GAAGA,CAAC;EAAEC,SAAS;EAAEC,KAAK;EAAEC,OAAO,GAAG,KAAK;EAAEC,YAAY,GAAG,GAAG;EAAEC;AAA6B,CAAC,KAAK;EACjH,MAAMC,KAAK,GAAGT,MAAM,CAAS,CAAC;EAC9B,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEzDF,SAAS,CAAC,MAAM;IACd,IAAIO,OAAO,EAAE;MACX;MACAG,KAAK,CAACG,OAAO,GAAGC,MAAM,CAACC,UAAU,CAAC,MAAM;QACtCH,gBAAgB,CAACL,OAAO,CAAC;MAC3B,CAAC,EAAEC,YAAY,CAAC;IAClB,CAAC,MAAM,IAAIE,KAAK,CAACG,OAAO,EAAE;MACxBC,MAAM,CAACE,YAAY,CAACN,KAAK,CAACG,OAAO,CAAC;MAClCD,gBAAgB,CAAC,KAAK,CAAC;IACzB;EACF,CAAC,EAAE,CAACL,OAAO,CAAC,CAAC;EAEb,oBACER,KAAA,CAAAkB,aAAA;IACEZ,SAAS,EAAEF,EAAE,CAAC,oBAAoB,EAAEE,SAAS,CAAE;IAC/CC,KAAK,EAAEA,KAAM;IAAAY,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEZZ,aAAa,iBAAIZ,KAAA,CAAAkB,aAAA;IAAKZ,SAAS,EAAC,aAAa;IAAAa,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,EAChDd,QACE,CAAC;AAEV,CAAC;AAED,eAAeL,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}