{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"rowIndex\"],\n  _excluded2 = [\"columnIndex\", \"rowIndex\"],\n  _excluded3 = [\"columnIndex\"],\n  _excluded4 = [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"];\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _callSuper(t, o, e) {\n  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));\n}\nfunction _isNativeReflectConstruct() {\n  try {\n    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n  } catch (t) {}\n  return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n    return !!t;\n  })();\n}\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\nvar MultiGrid = /*#__PURE__*/function (_React$PureComponent) {\n  function MultiGrid(props, context) {\n    var _this;\n    _classCallCheck(this, MultiGrid);\n    _this = _callSuper(this, MultiGrid, [props, context]);\n    _defineProperty(_this, \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n    _defineProperty(_this, \"_deferredInvalidateColumnIndex\", null);\n    _defineProperty(_this, \"_deferredInvalidateRowIndex\", null);\n    _defineProperty(_this, \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n    _defineProperty(_this, \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n    _defineProperty(_this, \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n        rest = _objectWithoutProperties(_ref, _excluded);\n      var _this$props = _this.props,\n        cellRenderer = _this$props.cellRenderer,\n        fixedRowCount = _this$props.fixedRowCount,\n        rowCount = _this$props.rowCount;\n      if (rowIndex === rowCount - fixedRowCount) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread(_objectSpread({}, rest.style), {}, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread(_objectSpread({}, rest), {}, {\n          parent: _this,\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n    _defineProperty(_this, \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n        rowIndex = _ref2.rowIndex,\n        rest = _objectWithoutProperties(_ref2, _excluded2);\n      var _this$props2 = _this.props,\n        cellRenderer = _this$props2.cellRenderer,\n        fixedColumnCount = _this$props2.fixedColumnCount,\n        fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread(_objectSpread({}, rest), {}, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _this,\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n    _defineProperty(_this, \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n        rest = _objectWithoutProperties(_ref3, _excluded3);\n      var _this$props3 = _this.props,\n        cellRenderer = _this$props3.cellRenderer,\n        columnCount = _this$props3.columnCount,\n        fixedColumnCount = _this$props3.fixedColumnCount;\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread(_objectSpread({}, rest.style), {}, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread(_objectSpread({}, rest), {}, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _this\n        }));\n      }\n    });\n    _defineProperty(_this, \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n        columnCount = _this$props4.columnCount,\n        fixedColumnCount = _this$props4.fixedColumnCount,\n        columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n        scrollbarSize = _this$state.scrollbarSize,\n        showHorizontalScrollbar = _this$state.showHorizontalScrollbar;\n\n      // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n    _defineProperty(_this, \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n        scrollTop = scrollInfo.scrollTop;\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n      var onScroll = _this.props.onScroll;\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n    _defineProperty(_this, \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n        size = _ref5.size,\n        vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n        showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n        showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n    _defineProperty(_this, \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n    _defineProperty(_this, \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n    _defineProperty(_this, \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n        fixedRowCount = _this$props5.fixedRowCount,\n        rowCount = _this$props5.rowCount,\n        rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n        scrollbarSize = _this$state3.scrollbarSize,\n        showVerticalScrollbar = _this$state3.showVerticalScrollbar;\n\n      // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n    _defineProperty(_this, \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n    _defineProperty(_this, \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n      _fixedColumnCount = props.fixedColumnCount,\n      _fixedRowCount = props.fixedRowCount;\n    _this._maybeCalculateCachedStyles(true);\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n    return _this;\n  }\n  _inherits(MultiGrid, _React$PureComponent);\n  return _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n\n    /** See Grid#invalidateCellSizeAfterRender */\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref7$columnIndex = _ref7.columnIndex,\n        columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n        _ref7$rowIndex = _ref7.rowIndex,\n        rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n\n    /** See Grid#measureAllCells */\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n\n    /** See Grid#recomputeGridSize */\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref8$columnIndex = _ref8.columnIndex,\n        columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n        _ref8$rowIndex = _ref8.rowIndex,\n        rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n      var _this$props6 = this.props,\n        fixedColumnCount = _this$props6.fixedColumnCount,\n        fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n        scrollLeft = _this$props7.scrollLeft,\n        scrollTop = _this$props7.scrollTop;\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n        this.setState(newState);\n      }\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n        onScroll = _this$props8.onScroll,\n        onSectionRendered = _this$props8.onSectionRendered,\n        onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n        scrollLeftProp = _this$props8.scrollLeft,\n        scrollToColumn = _this$props8.scrollToColumn,\n        scrollTopProp = _this$props8.scrollTop,\n        scrollToRow = _this$props8.scrollToRow,\n        rest = _objectWithoutProperties(_this$props8, _excluded4);\n      this._prepareForRender();\n\n      // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      }\n\n      // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n      var _this$state4 = this.state,\n        scrollLeft = _this$state4.scrollLeft,\n        scrollTop = _this$state4.scrollTop;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread(_objectSpread({}, rest), {}, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread(_objectSpread({}, rest), {}, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread(_objectSpread({}, rest), {}, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n      var topGridHeight = this._getTopGridHeight(props);\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n        columnWidth = props.columnWidth;\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n      var leftGridWidth = this._getLeftGridWidth(props);\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n        rowHeight = props.rowHeight;\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n        columnWidth = _this$props9.columnWidth,\n        enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n        enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n        height = _this$props9.height,\n        fixedColumnCount = _this$props9.fixedColumnCount,\n        fixedRowCount = _this$props9.fixedRowCount,\n        rowHeight = _this$props9.rowHeight,\n        style = _this$props9.style,\n        styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n        styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n        styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n        styleTopRightGrid = _this$props9.styleTopRightGrid,\n        width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n      this._maybeCalculateCachedStyles();\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n        fixedColumnCount = props.fixedColumnCount,\n        fixedRowCount = props.fixedRowCount,\n        rowCount = props.rowCount,\n        hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n      if (!fixedColumnCount) {\n        return null;\n      }\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n        height = this._getBottomGridHeight(props),\n        width = this._getLeftGridWidth(props),\n        scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n        gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n      var bottomLeftGrid = /*#__PURE__*/React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n      if (hideBottomLeftGridScrollbar) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread(_objectSpread({}, this._bottomLeftGridStyle), {}, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n        fixedColumnCount = props.fixedColumnCount,\n        fixedRowCount = props.fixedRowCount,\n        rowCount = props.rowCount,\n        scrollToColumn = props.scrollToColumn,\n        scrollToRow = props.scrollToRow;\n      return /*#__PURE__*/React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n        fixedRowCount = props.fixedRowCount;\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n      return /*#__PURE__*/React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n        enableFixedRowScroll = props.enableFixedRowScroll,\n        fixedColumnCount = props.fixedColumnCount,\n        fixedRowCount = props.fixedRowCount,\n        scrollLeft = props.scrollLeft,\n        hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n        showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n        scrollbarSize = _this$state5.scrollbarSize;\n      if (!fixedRowCount) {\n        return null;\n      }\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n        height = this._getTopGridHeight(props),\n        width = this._getRightGridWidth(props),\n        additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n      var gridHeight = height,\n        style = this._topRightGridStyle;\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread(_objectSpread({}, this._topRightGridStyle), {}, {\n          left: 0\n        });\n      }\n      var topRightGrid = /*#__PURE__*/React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n      if (hideTopRightGridScrollbar) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread(_objectSpread({}, this._topRightGridStyle), {}, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n      return null;\n    }\n  }]);\n}(React.PureComponent);\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","map":{"version":3,"names":["_extends","_objectWithoutProperties","_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_inherits","_defineProperty","_excluded","_excluded2","_excluded3","_excluded4","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","_callSuper","_isNativeReflectConstruct","Reflect","construct","constructor","Boolean","prototype","valueOf","call","PropTypes","React","polyfill","CellMeasurerCacheDecorator","Grid","SCROLLBAR_SIZE_BUFFER","MultiGrid","_React$PureComponent","props","context","_this","scrollLeft","scrollTop","scrollbarSize","showHorizontalScrollbar","showVerticalScrollbar","ref","_bottomLeftGrid","_bottomRightGrid","_ref","rowIndex","rest","_this$props","cellRenderer","fixedRowCount","rowCount","createElement","key","style","height","parent","_ref2","columnIndex","_this$props2","fixedColumnCount","_ref3","_this$props3","columnCount","width","_ref4","index","_this$props4","columnWidth","_this$state","state","scrollInfo","setState","onScroll","_ref5","horizontal","size","vertical","_this$state2","onScrollbarPresenceChange","_onScroll","_ref6","_this$props5","rowHeight","_this$state3","_topLeftGrid","_topRightGrid","deferredMeasurementCache","_fixedColumnCount","_fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","cellMeasurerCache","columnIndexOffset","rowIndexOffset","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","value","forceUpdateGrids","forceUpdate","invalidateCellSizeAfterRender","_ref7","undefined","_ref7$columnIndex","_ref7$rowIndex","_deferredInvalidateColumnIndex","Math","min","_deferredInvalidateRowIndex","measureAllCells","recomputeGridSize","_ref8","_ref8$columnIndex","_ref8$rowIndex","_this$props6","adjustedColumnIndex","max","adjustedRowIndex","_leftGridWidth","_topGridHeight","componentDidMount","_this$props7","newState","_handleInvalidatedGridSize","componentDidUpdate","render","_this$props8","onSectionRendered","scrollLeftProp","scrollToColumn","scrollTopProp","scrollToRow","_prepareForRender","_this$state4","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getBottomGridHeight","topGridHeight","_getTopGridHeight","_getLeftGridWidth","leftGridWidth","_getRightGridWidth","resetAll","_this$props9","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","overflow","position","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","left","overflowX","overflowY","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","top","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","additionalRowCount","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","className","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","tabIndex","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_onScrollbarPresenceChange","_bottomRightGridRef","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","_this$state5","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","getDerivedStateFromProps","nextProps","prevState","PureComponent","propTypes","process","env","NODE_ENV","string","isRequired","bool","number","func","object"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"rowIndex\"],\n  _excluded2 = [\"columnIndex\", \"rowIndex\"],\n  _excluded3 = [\"columnIndex\"],\n  _excluded4 = [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\nvar MultiGrid = /*#__PURE__*/function (_React$PureComponent) {\n  function MultiGrid(props, context) {\n    var _this;\n    _classCallCheck(this, MultiGrid);\n    _this = _callSuper(this, MultiGrid, [props, context]);\n    _defineProperty(_this, \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n    _defineProperty(_this, \"_deferredInvalidateColumnIndex\", null);\n    _defineProperty(_this, \"_deferredInvalidateRowIndex\", null);\n    _defineProperty(_this, \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n    _defineProperty(_this, \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n    _defineProperty(_this, \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n        rest = _objectWithoutProperties(_ref, _excluded);\n      var _this$props = _this.props,\n        cellRenderer = _this$props.cellRenderer,\n        fixedRowCount = _this$props.fixedRowCount,\n        rowCount = _this$props.rowCount;\n      if (rowIndex === rowCount - fixedRowCount) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread(_objectSpread({}, rest.style), {}, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread(_objectSpread({}, rest), {}, {\n          parent: _this,\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n    _defineProperty(_this, \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n        rowIndex = _ref2.rowIndex,\n        rest = _objectWithoutProperties(_ref2, _excluded2);\n      var _this$props2 = _this.props,\n        cellRenderer = _this$props2.cellRenderer,\n        fixedColumnCount = _this$props2.fixedColumnCount,\n        fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread(_objectSpread({}, rest), {}, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _this,\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n    _defineProperty(_this, \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n        rest = _objectWithoutProperties(_ref3, _excluded3);\n      var _this$props3 = _this.props,\n        cellRenderer = _this$props3.cellRenderer,\n        columnCount = _this$props3.columnCount,\n        fixedColumnCount = _this$props3.fixedColumnCount;\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread(_objectSpread({}, rest.style), {}, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread(_objectSpread({}, rest), {}, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _this\n        }));\n      }\n    });\n    _defineProperty(_this, \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n        columnCount = _this$props4.columnCount,\n        fixedColumnCount = _this$props4.fixedColumnCount,\n        columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n        scrollbarSize = _this$state.scrollbarSize,\n        showHorizontalScrollbar = _this$state.showHorizontalScrollbar;\n\n      // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n    _defineProperty(_this, \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n        scrollTop = scrollInfo.scrollTop;\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n      var onScroll = _this.props.onScroll;\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n    _defineProperty(_this, \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n        size = _ref5.size,\n        vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n        showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n        showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n    _defineProperty(_this, \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n    _defineProperty(_this, \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n    _defineProperty(_this, \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n        fixedRowCount = _this$props5.fixedRowCount,\n        rowCount = _this$props5.rowCount,\n        rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n        scrollbarSize = _this$state3.scrollbarSize,\n        showVerticalScrollbar = _this$state3.showVerticalScrollbar;\n\n      // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n    _defineProperty(_this, \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n    _defineProperty(_this, \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n      _fixedColumnCount = props.fixedColumnCount,\n      _fixedRowCount = props.fixedRowCount;\n    _this._maybeCalculateCachedStyles(true);\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n    return _this;\n  }\n  _inherits(MultiGrid, _React$PureComponent);\n  return _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n\n    /** See Grid#invalidateCellSizeAfterRender */\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref7$columnIndex = _ref7.columnIndex,\n        columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n        _ref7$rowIndex = _ref7.rowIndex,\n        rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n\n    /** See Grid#measureAllCells */\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n\n    /** See Grid#recomputeGridSize */\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref8$columnIndex = _ref8.columnIndex,\n        columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n        _ref8$rowIndex = _ref8.rowIndex,\n        rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n      var _this$props6 = this.props,\n        fixedColumnCount = _this$props6.fixedColumnCount,\n        fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n        scrollLeft = _this$props7.scrollLeft,\n        scrollTop = _this$props7.scrollTop;\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n        this.setState(newState);\n      }\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n        onScroll = _this$props8.onScroll,\n        onSectionRendered = _this$props8.onSectionRendered,\n        onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n        scrollLeftProp = _this$props8.scrollLeft,\n        scrollToColumn = _this$props8.scrollToColumn,\n        scrollTopProp = _this$props8.scrollTop,\n        scrollToRow = _this$props8.scrollToRow,\n        rest = _objectWithoutProperties(_this$props8, _excluded4);\n      this._prepareForRender();\n\n      // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      }\n\n      // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n      var _this$state4 = this.state,\n        scrollLeft = _this$state4.scrollLeft,\n        scrollTop = _this$state4.scrollTop;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread(_objectSpread({}, rest), {}, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread(_objectSpread({}, rest), {}, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread(_objectSpread({}, rest), {}, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n      var topGridHeight = this._getTopGridHeight(props);\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n        columnWidth = props.columnWidth;\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n      var leftGridWidth = this._getLeftGridWidth(props);\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n        rowHeight = props.rowHeight;\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n        columnWidth = _this$props9.columnWidth,\n        enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n        enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n        height = _this$props9.height,\n        fixedColumnCount = _this$props9.fixedColumnCount,\n        fixedRowCount = _this$props9.fixedRowCount,\n        rowHeight = _this$props9.rowHeight,\n        style = _this$props9.style,\n        styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n        styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n        styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n        styleTopRightGrid = _this$props9.styleTopRightGrid,\n        width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n      this._maybeCalculateCachedStyles();\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n        fixedColumnCount = props.fixedColumnCount,\n        fixedRowCount = props.fixedRowCount,\n        rowCount = props.rowCount,\n        hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n      if (!fixedColumnCount) {\n        return null;\n      }\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n        height = this._getBottomGridHeight(props),\n        width = this._getLeftGridWidth(props),\n        scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n        gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n      var bottomLeftGrid = /*#__PURE__*/React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n      if (hideBottomLeftGridScrollbar) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread(_objectSpread({}, this._bottomLeftGridStyle), {}, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n        fixedColumnCount = props.fixedColumnCount,\n        fixedRowCount = props.fixedRowCount,\n        rowCount = props.rowCount,\n        scrollToColumn = props.scrollToColumn,\n        scrollToRow = props.scrollToRow;\n      return /*#__PURE__*/React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n        fixedRowCount = props.fixedRowCount;\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n      return /*#__PURE__*/React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n        enableFixedRowScroll = props.enableFixedRowScroll,\n        fixedColumnCount = props.fixedColumnCount,\n        fixedRowCount = props.fixedRowCount,\n        scrollLeft = props.scrollLeft,\n        hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n        showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n        scrollbarSize = _this$state5.scrollbarSize;\n      if (!fixedRowCount) {\n        return null;\n      }\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n        height = this._getTopGridHeight(props),\n        width = this._getRightGridWidth(props),\n        additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n      var gridHeight = height,\n        style = this._topRightGridStyle;\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread(_objectSpread({}, this._topRightGridStyle), {}, {\n          left: 0\n        });\n      }\n      var topRightGrid = /*#__PURE__*/React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n      if (hideTopRightGridScrollbar) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread(_objectSpread({}, this._topRightGridStyle), {}, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n      return null;\n    }\n  }]);\n}(React.PureComponent);\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}