{"ast":null,"code":"import{utils}from'@appen-china/easy-form';import i18n from'./locales';// eslint-disable-next-line import/prefer-default-export\nexport const playMode=['regionPlay','regionLoop','overallLoop'];export const segmentType={overlap:'Overlap',speaking:'Speaking',noise:'Noise'};export const defaultColor={defaultAlpha:0.5,darkGray:'#2D2A34FF',defaultGray:'#FFFFFF35',defaultRed:'#FF0000FF',defaultGreen:'#00FF00FF',defaultWhite:'#FFFFFF99',defaultBlue:'#0000FFFF'};export const attributeType={segment:'segment',line:'line'};/**\n * format in minutes:seconds:milliseconds, for example, 00:00:000\n * @param second\n * @returns {string}\n */export const formatTimestamp=second=>{if(!second||isNaN(second)){return'00:00.000';}const arr=[];arr.push(\"\".concat(Math.floor(second/60)).padStart(2,'0'));second-=arr[0]*60;arr.push(\"\".concat(Math.floor(second)).padStart(2,'0'));second-=arr[1];arr.push(second.toFixed(3).toString().slice(2));return\"\".concat(arr[0],\":\").concat(arr[1],\".\").concat(arr[2]);// arr.join(':');\n};export const translate=word=>i18n.translate(word);export const shortText=function(){let str=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';let length=arguments.length>1&&arguments[1]!==undefined?arguments[1]:18;const text=Array.isArray(str)?str.join(','):str;const len=strlen(text);if(len>length){let strLen=0;let realLen=0;for(let i=0;i<text.length;i+=1){const c=text.charCodeAt(i);if(c>=0x0001&&c<=0x007e||c>=0xff60&&c<=0xff9f){realLen+=1;}else{realLen+=2;}if(realLen>length){break;}else{strLen+=1;}}return\"\".concat(text.substring(0,strLen),\"...\");}return text;};export const strlen=function(){let str=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';let len=0;for(let i=0;i<str.length;i+=1){const c=str.charCodeAt(i);if(c>=0x0001&&c<=0x007e||c>=0xff60&&c<=0xff9f){len+=1;}else{len+=2;}}return len;};export const tagType={tag:'tag',standalone:'standalone'};export const SegmentMode={continuous:'continuous',individual:'individual'};export const triggerForm=function(config){let values=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const{fields:configFields,conditions=[],effects=[],rules=[]}=config;const fields=(configFields||[]).map(field=>({...field,...(values[field.name]!==undefined&&{defaultValue:values[field.name]})}));const parsedValue=utils.parseFormFields(fields);// trigger rule effects\nconst{updatedValues:triggerValues,updatedFields}=rules.reduce((acc,curr)=>utils.ruleTrigger(curr,acc.updatedFields,acc.updatedValues,fields,conditions,effects),{updatedFields:parsedValue.fields,updatedValues:parsedValue.initialValues});const updatedValues={...triggerValues};updatedFields.filter(f=>f.visible===false).forEach(f=>{if(f.name!=='ef-ontology'){updatedValues[f.name]=undefined;}});return{updatedValues,updatedFields};};export const validateForm=function(config){let values=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};// trigger rule effects\nconst{updatedFields}=triggerForm(config,values);const displayFields=updatedFields.filter(i=>i.visible);Object.keys(values).forEach(field=>{if(!displayFields.find(i=>i.name===field)){// remove the key\ndelete values[field];}});for(let i=0;i<displayFields.length;i+=1){const field=displayFields[i];const value=values[field.name];if(field.required&&(value===undefined||value===null||value==='')){return false;}}return true;};export const ValidDurationMode={attributes:'attributes',translations:'translations'};export const StyleConfigMode={segment:'segment_attr',line:'line_attr'};export const getConfigColor=function(){let attributes=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let groups=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];let color='';for(let i=0;i<groups.length;i+=1){const{fill_color:fillColor,attributes:condition}=groups[i];const isInclude=Object.keys(condition).every(key=>{var _ref;return((_ref=Array.isArray(attributes[key])?attributes[key].sort():attributes[key])===null||_ref===void 0?void 0:_ref.toString())===(Array.isArray(condition[key])?condition[key].sort():condition[key]).toString();});if(isInclude){color=fillColor||'';}}return color;};","map":{"version":3,"names":["utils","i18n","playMode","segmentType","overlap","speaking","noise","defaultColor","defaultAlpha","darkGray","defaultGray","defaultRed","defaultGreen","defaultWhite","defaultBlue","attributeType","segment","line","formatTimestamp","second","isNaN","arr","push","concat","Math","floor","padStart","toFixed","toString","slice","translate","word","shortText","str","arguments","length","undefined","text","Array","isArray","join","len","strlen","strLen","realLen","i","c","charCodeAt","substring","tagType","tag","standalone","SegmentMode","continuous","individual","triggerForm","config","values","fields","configFields","conditions","effects","rules","map","field","name","defaultValue","parsedValue","parseFormFields","updatedValues","triggerValues","updatedFields","reduce","acc","curr","ruleTrigger","initialValues","filter","f","visible","forEach","validateForm","displayFields","Object","keys","find","value","required","ValidDurationMode","attributes","translations","StyleConfigMode","getConfigColor","groups","color","fill_color","fillColor","condition","isInclude","every","key","_ref","sort"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/constants.js"],"sourcesContent":["import { utils } from '@appen-china/easy-form';\nimport i18n from './locales';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const playMode = [\n  'regionPlay',\n  'regionLoop',\n  'overallLoop',\n];\nexport const segmentType = {\n  overlap: 'Overlap',\n  speaking: 'Speaking',\n  noise: 'Noise',\n};\nexport const defaultColor = {\n  defaultAlpha: 0.5,\n  darkGray: '#2D2A34FF',\n  defaultGray: '#FFFFFF35',\n  defaultRed: '#FF0000FF',\n  defaultGreen: '#00FF00FF',\n  defaultWhite: '#FFFFFF99',\n  defaultBlue: '#0000FFFF',\n};\nexport const attributeType = {\n  segment: 'segment',\n  line: 'line',\n};\n\n/**\n * format in minutes:seconds:milliseconds, for example, 00:00:000\n * @param second\n * @returns {string}\n */\nexport const formatTimestamp = (second) => {\n  if (!second || isNaN(second)) {\n    return '00:00.000';\n  }\n  const arr = [];\n  arr.push(`${Math.floor(second / 60)}`.padStart(2, '0'));\n  second -= arr[0] * 60;\n  arr.push(`${Math.floor(second)}`.padStart(2, '0'));\n  second -= arr[1];\n  arr.push(second.toFixed(3).toString().slice(2));\n  return `${arr[0]}:${arr[1]}.${arr[2]}`; // arr.join(':');\n};\n\nexport const translate = (word) => i18n.translate(word);\n\nexport const shortText = (str = '', length = 18) => {\n  const text = Array.isArray(str) ? str.join(',') : str;\n  const len = strlen(text);\n  if (len > length) {\n    let strLen = 0;\n    let realLen = 0;\n    for (let i = 0; i < text.length; i += 1) {\n      const c = text.charCodeAt(i);\n      if ((c >= 0x0001 && c <= 0x007e) || (c >= 0xff60 && c <= 0xff9f)) {\n        realLen += 1;\n      } else {\n        realLen += 2;\n      }\n      if (realLen > length) {\n        break;\n      } else {\n        strLen += 1;\n      }\n    }\n    return `${text.substring(0, strLen)}...`;\n  }\n  return text;\n};\n\nexport const strlen = (str = '') => {\n  let len = 0;\n  for (let i = 0; i < str.length; i += 1) {\n    const c = str.charCodeAt(i);\n    if ((c >= 0x0001 && c <= 0x007e) || (c >= 0xff60 && c <= 0xff9f)) {\n      len += 1;\n    } else {\n      len += 2;\n    }\n  }\n  return len;\n};\n\nexport const tagType = {\n  tag: 'tag',\n  standalone: 'standalone',\n};\n\nexport const SegmentMode = {\n  continuous: 'continuous',\n  individual: 'individual',\n};\n\nexport const triggerForm = (config, values = {}) => {\n  const { fields: configFields, conditions = [], effects = [], rules = [] } = config;\n  const fields = (configFields || []).map((field) => ({\n    ...field,\n    ...values[field.name] !== undefined && {\n      defaultValue: values[field.name],\n    },\n  }));\n\n  const parsedValue = utils.parseFormFields(fields);\n  // trigger rule effects\n  const { updatedValues: triggerValues, updatedFields } = rules.reduce(\n    (acc, curr) => utils.ruleTrigger(\n      curr, acc.updatedFields, acc.updatedValues, fields, conditions, effects,\n    ),\n    { updatedFields: parsedValue.fields, updatedValues: parsedValue.initialValues },\n  );\n\n  const updatedValues = {\n    ...triggerValues\n  };\n  updatedFields.filter((f) => f.visible === false).forEach((f) => {\n    if (f.name !== 'ef-ontology') {\n      updatedValues[f.name] = undefined;\n    }\n  });\n  return {\n    updatedValues,\n    updatedFields,\n  };\n};\n\nexport const validateForm = (config, values = {}) => {\n  // trigger rule effects\n  const { updatedFields } = triggerForm(config, values);\n\n  const displayFields = updatedFields.filter((i) => i.visible);\n\n  Object.keys(values).forEach((field) => {\n    if (!displayFields.find((i) => i.name === field)) {\n      // remove the key\n      delete values[field];\n    }\n  });\n\n  for (let i = 0; i < displayFields.length; i += 1) {\n    const field = displayFields[i];\n    const value = values[field.name];\n    if (field.required && (value === undefined || value === null || value === '')) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nexport const ValidDurationMode = {\n  attributes: 'attributes',\n  translations: 'translations',\n};\n\nexport const StyleConfigMode = {\n  segment: 'segment_attr',\n  line: 'line_attr',\n};\n\nexport const getConfigColor = (attributes = {}, groups = []) => {\n  let color = '';\n  for (let i = 0; i < groups.length; i += 1) {\n    const { fill_color: fillColor, attributes: condition } = groups[i];\n    const isInclude = Object.keys(condition).every((key) => (Array.isArray(attributes[key]) ? attributes[key].sort() : attributes[key])?.toString()\n      ===\n      (Array.isArray(condition[key]) ? condition[key].sort() : condition[key]).toString());\n    if (isInclude) {\n      color = fillColor || '';\n    }\n  }\n  return color;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}