{"ast":null,"code":"export let ShapeType = /*#__PURE__*/function (ShapeType) {\n  ShapeType[\"RECTANGLE\"] = \"rectangle\";\n  ShapeType[\"POLYGON\"] = \"polygon\";\n  ShapeType[\"ELLIPSE\"] = \"ellipse\";\n  ShapeType[\"CIRCLE\"] = \"circle\";\n  ShapeType[\"CUBOID\"] = \"cuboid\";\n  ShapeType[\"LSHAPE\"] = \"l-shape\";\n  ShapeType[\"LINE\"] = \"line\";\n  ShapeType[\"DOT\"] = \"dot\";\n  ShapeType[\"GRID\"] = \"grid\";\n  ShapeType[\"ARROW\"] = \"arrow\";\n  ShapeType[\"TWO_SIDES_CUBOID\"] = \"two-sides-cuboid\";\n  return ShapeType;\n}({});\nexport let ShapeVertexType = /*#__PURE__*/function (ShapeVertexType) {\n  ShapeVertexType[\"DOT\"] = \"dot\";\n  ShapeVertexType[\"TRIANGLE\"] = \"triangle\";\n  ShapeVertexType[\"RECTANGLE\"] = \"rectangle\";\n  ShapeVertexType[\"TRAPEZOID\"] = \"trapezoid\";\n  ShapeVertexType[\"RHOMBUS\"] = \"rhombus\";\n  ShapeVertexType[\"PENTAGON\"] = \"pentagon\";\n  ShapeVertexType[\"STAR\"] = \"star\";\n  ShapeVertexType[\"ASTERISK\"] = \"asterisk\";\n  return ShapeVertexType;\n}({});\nexport let ShapeLineType = /*#__PURE__*/function (ShapeLineType) {\n  ShapeLineType[\"STRAIGHT\"] = \"straight\";\n  ShapeLineType[\"WAVY\"] = \"wavy\";\n  ShapeLineType[\"BROKEN\"] = \"broken\";\n  return ShapeLineType;\n}({});","map":{"version":3,"names":["ShapeType","ShapeVertexType","ShapeLineType"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/common/shapes/types.ts"],"sourcesContent":["import type { RectangleData, RectangleOptions } from './Rectangle';\nimport type { PolygonData, PolygonOptions } from './Polygon';\nimport type { EllipseData, EllipseOptions } from './Ellipse';\nimport type { CuboidData, CuboidOptions } from './Cuboid';\nimport type { LShapeData, LShapeOptions } from './LShape';\nimport type { LineData, LineOptions } from './Line';\nimport type { DotData, DotOptions } from './Dot';\nimport type { GridData, GridOptions } from './Grid';\n\nexport enum ShapeType {\n  RECTANGLE = 'rectangle',\n  POLYGON = 'polygon',\n  ELLIPSE = 'ellipse',\n  CIRCLE = 'circle',\n  CUBOID = 'cuboid',\n  LSHAPE = 'l-shape',\n  LINE = 'line',\n  DOT = 'dot',\n  GRID = 'grid',\n  ARROW = 'arrow',\n  TWO_SIDES_CUBOID = 'two-sides-cuboid',\n}\n\nexport type ShapeData = RectangleData | PolygonData | EllipseData | CuboidData | LShapeData | LineData | DotData | GridData;\n\nexport type ShapeOptions = RectangleOptions | PolygonOptions | EllipseOptions | CuboidOptions | LShapeOptions | LineOptions | DotOptions | GridOptions;\n\nexport enum ShapeVertexType {\n  DOT = 'dot',\n  TRIANGLE = 'triangle',\n  RECTANGLE = 'rectangle',\n  TRAPEZOID = 'trapezoid',\n  RHOMBUS = 'rhombus',\n  PENTAGON = 'pentagon',\n  STAR = 'star',\n  ASTERISK = 'asterisk',\n}\n\nexport enum ShapeLineType {\n  STRAIGHT = 'straight',\n  WAVY = 'wavy',\n  BROKEN = 'broken',\n}\n\nexport interface VertexStyles {\n  color?: number;\n  type?: ShapeVertexType;\n}\n\nexport interface EdgeStyles {\n  color?: number;\n  type?: ShapeLineType;\n  bold?: boolean;\n}\n"],"mappings":"AASA,WAAYA,SAAS,0BAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAAA,OAATA,SAAS;AAAA;AAkBrB,WAAYC,eAAe,0BAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAA,OAAfA,eAAe;AAAA;AAW3B,WAAYC,aAAa,0BAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAA,OAAbA,aAAa;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}