{"ast":null,"code":"import { makeAutoObservable, toJS } from 'mobx';\nimport { strlen, substr } from 'fbjs/lib/UnicodeUtils';\nimport { v4 as uuidv4 } from 'uuid';\nimport { findIndex } from 'lodash';\nimport { ReviewItemResult, TAG } from '../types';\nimport { isLabel } from './tag_mode';\nimport { getConfigByKeys } from '../utils/helper';\n\n/**\n * store for config\n * @class\n */\nexport default class ReviewStore {\n  get allReviews() {\n    return Object.entries(this.reviews.data).map(([index, reviewInfo]) => ({\n      ...reviewInfo,\n      id: index\n    }));\n  }\n\n  /**\n  * rejected count\n  * @getter\n  */\n  get rejectedCount() {\n    const reviews = this.allReviews.filter(r => r.result === ReviewItemResult.REJECT);\n    return reviews.length;\n  }\n\n  /**\n  * rejected count\n  * @getter\n  */\n  get unPassedCount() {\n    const reviews = this.allReviews.filter(r => r.result !== ReviewItemResult.PASS);\n    return reviews.length;\n  }\n  get passedCount() {\n    const reviews = this.allReviews.filter(r => r.result === ReviewItemResult.PASS);\n    return reviews.length;\n  }\n  constructor(rootStore) {\n    /**\n     * root store\n     */\n    this.rootStore = void 0;\n    this.text = '';\n    this.reviews = {\n      data: {},\n      missing: []\n    };\n    /**\n    * anchors visible\n    */\n    this.visible = true;\n    makeAutoObservable(this, {\n      rootStore: false\n    }, {\n      autoBind: true\n    });\n    this.rootStore = rootStore;\n  }\n\n  /**\n   * init from paylod\n   * @param payload\n   */\n  init(payload) {\n    const {\n      content\n    } = payload;\n    this.text = content;\n  }\n  parseReview(reviews) {\n    const length = strlen(this.text);\n    const {\n      ontologyConfigMap\n    } = this.rootStore.ontology;\n    this.reviews.data = reviews.data || {};\n    if (reviews.missing) {\n      this.reviews.missing = reviews.missing.filter(label => {\n        var _getConfigByKeys;\n        // invalid start & end\n        if (typeof label !== 'object') return false;\n        if (Number.isNaN(label.start) || label.start === null || label.start < 0 || label.start >= length) {\n          return false;\n        }\n        if (Number.isNaN(label.end) || label.end === null || label.end < 0 || label.end >= length) {\n          return false;\n        }\n        if (!label.keys) {\n          ontologyConfigMap.forEach((value, key) => {\n            const keys = value.keys;\n            if (keys[keys.length - 1] === label.value) {\n              label.keys = value.keys;\n            }\n          });\n        }\n        // invalid value\n        if (!isLabel((_getConfigByKeys = getConfigByKeys(ontologyConfigMap, label.keys)) === null || _getConfigByKeys === void 0 ? void 0 : _getConfigByKeys.type)) {\n          return false;\n        }\n        // invalid & missing id\n        if (!label.id) {\n          label.id = uuidv4();\n        }\n        if (!label.type) {\n          label.type = TAG.LABEL_QA;\n        }\n        // missing text\n        if (!label.text) label.text = substr(this.text, label.start, label.end - label.start);\n        return true;\n      });\n    }\n  }\n  addMissingReview(newItem, id, data) {\n    const {\n      reviews\n    } = this;\n    const {\n      missing\n    } = reviews;\n    missing.unshift(newItem);\n    missing.sort((a, b) => a.start - b.start);\n    const preReview = reviews.data[id];\n    reviews.data[id] = data;\n    reviews.data = {\n      ...reviews.data\n    };\n    return {\n      review: {\n        ...data\n      },\n      preReview,\n      id,\n      label: newItem\n    };\n  }\n  setReview(id, data) {\n    const {\n      reviews\n    } = this;\n    const preReview = reviews.data[id];\n    reviews.data[id] = data;\n    reviews.data = {\n      ...reviews.data\n    };\n    return {\n      review: {\n        ...data\n      },\n      preReview,\n      id\n    };\n  }\n  getReview(id) {\n    if (!id) {\n      return null;\n    }\n    return this.reviews.data[id];\n  }\n  getReviews() {\n    const {\n      missing,\n      data\n    } = this.reviews;\n    return {\n      data: toJS(data),\n      missing: missing === null || missing === void 0 ? void 0 : missing.map(item => toJS(item))\n    };\n  }\n  deleteReview(id) {\n    const reviewData = {\n      ...this.reviews.data[id]\n    };\n    delete this.reviews.data[id];\n    return {\n      review: reviewData,\n      id\n    };\n  }\n  deleteReviews(ids) {\n    const reviewDataList = [];\n    ids.forEach(id => {\n      const reviewData = this.deleteReview(id);\n      reviewDataList.push({\n        ...reviewData,\n        id\n      });\n    });\n    return {\n      reviewDataList\n    };\n  }\n  deleteMissingReview(id) {\n    const {\n      missing,\n      data\n    } = this.reviews;\n    const reviewData = {\n      ...data[id]\n    };\n    const index = findIndex(missing, {\n      id\n    });\n    const label = missing[index];\n    missing.splice(index, 1);\n    delete data[id];\n    return {\n      review: reviewData,\n      id,\n      label\n    };\n  }\n}","map":{"version":3,"names":["makeAutoObservable","toJS","strlen","substr","v4","uuidv4","findIndex","ReviewItemResult","TAG","isLabel","getConfigByKeys","ReviewStore","allReviews","Object","entries","reviews","data","map","index","reviewInfo","id","rejectedCount","filter","r","result","REJECT","length","unPassedCount","PASS","passedCount","constructor","rootStore","text","missing","visible","autoBind","init","payload","content","parseReview","ontologyConfigMap","ontology","label","_getConfigByKeys","Number","isNaN","start","end","keys","forEach","value","key","type","LABEL_QA","addMissingReview","newItem","unshift","sort","a","b","preReview","review","setReview","getReview","getReviews","item","deleteReview","reviewData","deleteReviews","ids","reviewDataList","push","deleteMissingReview","splice"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/editable-text/store/ReviewStore.ts"],"sourcesContent":["import { makeAutoObservable, toJS } from 'mobx';\nimport { strlen, substr } from 'fbjs/lib/UnicodeUtils';\nimport { v4 as uuidv4 } from 'uuid';\nimport { findIndex } from 'lodash';\nimport RootStore from './RootStore';\nimport { MissingItem, Payload, ReviewDataItem, ReviewItemResult, ReviewResult, TAG } from '../types';\nimport { isLabel } from './tag_mode';\nimport { getConfigByKeys } from '../utils/helper';\n\n/**\n * store for config\n * @class\n */\nexport default class ReviewStore {\n  /**\n   * root store\n   */\n  rootStore;\n\n  text = '';\n\n  reviews: ReviewResult = {\n    data: {},\n    missing: [],\n  };\n\n  /**\n * anchors visible\n */\n  visible = true;\n\n  get allReviews() {\n    return Object.entries(this.reviews.data).map(([index, reviewInfo]) => ({\n      ...reviewInfo,\n      id: index\n    }));\n  }\n\n  /**\n * rejected count\n * @getter\n */\n  get rejectedCount() {\n    const reviews = this.allReviews.filter((r) => r.result === ReviewItemResult.REJECT);\n    return reviews.length;\n  }\n\n  /**\n * rejected count\n * @getter\n */\n  get unPassedCount() {\n    const reviews = this.allReviews.filter((r) => r.result !== ReviewItemResult.PASS);\n    return reviews.length;\n  }\n\n  get passedCount() {\n    const reviews = this.allReviews.filter((r) => r.result === ReviewItemResult.PASS);\n    return reviews.length;\n  }\n\n  constructor(rootStore: typeof RootStore) {\n    makeAutoObservable(this, {\n      rootStore: false,\n    }, {\n      autoBind: true,\n    });\n\n    this.rootStore = rootStore;\n  }\n\n  /**\n   * init from paylod\n   * @param payload\n   */\n  init(payload: Payload) {\n    const { content } = payload;\n\n    this.text = content;\n  }\n\n  parseReview(reviews: ReviewResult) {\n    const length = strlen(this.text);\n    const { ontologyConfigMap } = this.rootStore.ontology;\n\n    this.reviews.data = reviews.data || {};\n\n    if (reviews.missing) {\n      this.reviews.missing = reviews.missing.filter((label) => {\n        // invalid start & end\n        if (typeof (label) !== 'object') return false;\n        if (Number.isNaN(label.start) || label.start === null || label.start < 0 || label.start >= length) {\n          return false;\n        }\n        if (Number.isNaN(label.end) || label.end === null || label.end < 0 || label.end >= length) {\n          return false;\n        }\n        if (!label.keys) {\n          ontologyConfigMap.forEach((value, key) => {\n            const keys = value.keys;\n            if (keys[keys.length - 1] === label.value) {\n              label.keys = value.keys;\n            }\n          });\n        }\n        // invalid value\n        if (!isLabel(getConfigByKeys(ontologyConfigMap, label.keys)?.type)) {\n          return false;\n        }\n        // invalid & missing id\n        if (!label.id) {\n          label.id = uuidv4();\n        }\n        if (!label.type) {\n          label.type = TAG.LABEL_QA;\n        }\n        // missing text\n        if (!label.text) label.text = substr(this.text, label.start, label.end - label.start);\n        return true;\n      });\n    }\n  }\n\n  addMissingReview(newItem: MissingItem, id: string, data: ReviewDataItem) {\n    const { reviews } = this;\n\n    const { missing } = reviews;\n    missing.unshift(newItem as MissingItem);\n    missing.sort((a, b) => (a.start - b.start));\n\n    const preReview = reviews.data[id];\n    reviews.data[id] = data;\n    reviews.data = { ...reviews.data };\n    return { review: { ...data }, preReview, id, label: newItem };\n  }\n\n  setReview(id: string, data: ReviewDataItem) {\n    const { reviews } = this;\n    const preReview = reviews.data[id];\n    reviews.data[id] = data;\n    reviews.data = { ...reviews.data };\n    return { review: { ...data }, preReview, id };\n  }\n\n  getReview(id: string) {\n    if (!id) {\n      return null;\n    }\n    return this.reviews.data[id];\n  }\n\n  getReviews() {\n    const { missing, data } = this.reviews;\n    return {\n      data: toJS(data),\n      missing: missing?.map((item) => toJS(item)),\n    };\n  }\n\n  deleteReview(id: string) {\n    const reviewData = { ...this.reviews.data[id] };\n    delete this.reviews.data[id];\n    return { review: reviewData, id };\n  }\n\n  deleteReviews(ids: string[]) {\n    const reviewDataList: ({ review: ReviewDataItem; id: string })[] = [];\n    ids.forEach((id) => {\n      const reviewData = this.deleteReview(id);\n      reviewDataList.push({ ...reviewData, id });\n    });\n    return { reviewDataList };\n  }\n\n  deleteMissingReview(id: string) {\n    const { missing, data } = this.reviews;\n    const reviewData = { ...data[id] };\n\n    const index = findIndex(missing, { id });\n    const label = missing[index];\n    missing.splice(index, 1);\n    delete data[id];\n    return { review: reviewData, id, label };\n  }\n}\n"],"mappings":"AAAA,SAASA,kBAAkB,EAAEC,IAAI,QAAQ,MAAM;AAC/C,SAASC,MAAM,EAAEC,MAAM,QAAQ,uBAAuB;AACtD,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AACnC,SAASC,SAAS,QAAQ,QAAQ;AAElC,SAA+CC,gBAAgB,EAAgBC,GAAG,QAAQ,UAAU;AACpG,SAASC,OAAO,QAAQ,YAAY;AACpC,SAASC,eAAe,QAAQ,iBAAiB;;AAEjD;AACA;AACA;AACA;AACA,eAAe,MAAMC,WAAW,CAAC;EAkB/B,IAAIC,UAAUA,CAAA,EAAG;IACf,OAAOC,MAAM,CAACC,OAAO,CAAC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,CAACC,GAAG,CAAC,CAAC,CAACC,KAAK,EAAEC,UAAU,CAAC,MAAM;MACrE,GAAGA,UAAU;MACbC,EAAE,EAAEF;IACN,CAAC,CAAC,CAAC;EACL;;EAEA;AACF;AACA;AACA;EACE,IAAIG,aAAaA,CAAA,EAAG;IAClB,MAAMN,OAAO,GAAG,IAAI,CAACH,UAAU,CAACU,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,MAAM,KAAKjB,gBAAgB,CAACkB,MAAM,CAAC;IACnF,OAAOV,OAAO,CAACW,MAAM;EACvB;;EAEA;AACF;AACA;AACA;EACE,IAAIC,aAAaA,CAAA,EAAG;IAClB,MAAMZ,OAAO,GAAG,IAAI,CAACH,UAAU,CAACU,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,MAAM,KAAKjB,gBAAgB,CAACqB,IAAI,CAAC;IACjF,OAAOb,OAAO,CAACW,MAAM;EACvB;EAEA,IAAIG,WAAWA,CAAA,EAAG;IAChB,MAAMd,OAAO,GAAG,IAAI,CAACH,UAAU,CAACU,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,MAAM,KAAKjB,gBAAgB,CAACqB,IAAI,CAAC;IACjF,OAAOb,OAAO,CAACW,MAAM;EACvB;EAEAI,WAAWA,CAACC,SAA2B,EAAE;IA/CzC;AACF;AACA;IAFE,KAGAA,SAAS;IAAA,KAETC,IAAI,GAAG,EAAE;IAAA,KAETjB,OAAO,GAAiB;MACtBC,IAAI,EAAE,CAAC,CAAC;MACRiB,OAAO,EAAE;IACX,CAAC;IAED;AACF;AACA;IAFE,KAGAC,OAAO,GAAG,IAAI;IAiCZlC,kBAAkB,CAAC,IAAI,EAAE;MACvB+B,SAAS,EAAE;IACb,CAAC,EAAE;MACDI,QAAQ,EAAE;IACZ,CAAC,CAAC;IAEF,IAAI,CAACJ,SAAS,GAAGA,SAAS;EAC5B;;EAEA;AACF;AACA;AACA;EACEK,IAAIA,CAACC,OAAgB,EAAE;IACrB,MAAM;MAAEC;IAAQ,CAAC,GAAGD,OAAO;IAE3B,IAAI,CAACL,IAAI,GAAGM,OAAO;EACrB;EAEAC,WAAWA,CAACxB,OAAqB,EAAE;IACjC,MAAMW,MAAM,GAAGxB,MAAM,CAAC,IAAI,CAAC8B,IAAI,CAAC;IAChC,MAAM;MAAEQ;IAAkB,CAAC,GAAG,IAAI,CAACT,SAAS,CAACU,QAAQ;IAErD,IAAI,CAAC1B,OAAO,CAACC,IAAI,GAAGD,OAAO,CAACC,IAAI,IAAI,CAAC,CAAC;IAEtC,IAAID,OAAO,CAACkB,OAAO,EAAE;MACnB,IAAI,CAAClB,OAAO,CAACkB,OAAO,GAAGlB,OAAO,CAACkB,OAAO,CAACX,MAAM,CAAEoB,KAAK,IAAK;QAAA,IAAAC,gBAAA;QACvD;QACA,IAAI,OAAQD,KAAM,KAAK,QAAQ,EAAE,OAAO,KAAK;QAC7C,IAAIE,MAAM,CAACC,KAAK,CAACH,KAAK,CAACI,KAAK,CAAC,IAAIJ,KAAK,CAACI,KAAK,KAAK,IAAI,IAAIJ,KAAK,CAACI,KAAK,GAAG,CAAC,IAAIJ,KAAK,CAACI,KAAK,IAAIpB,MAAM,EAAE;UACjG,OAAO,KAAK;QACd;QACA,IAAIkB,MAAM,CAACC,KAAK,CAACH,KAAK,CAACK,GAAG,CAAC,IAAIL,KAAK,CAACK,GAAG,KAAK,IAAI,IAAIL,KAAK,CAACK,GAAG,GAAG,CAAC,IAAIL,KAAK,CAACK,GAAG,IAAIrB,MAAM,EAAE;UACzF,OAAO,KAAK;QACd;QACA,IAAI,CAACgB,KAAK,CAACM,IAAI,EAAE;UACfR,iBAAiB,CAACS,OAAO,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAK;YACxC,MAAMH,IAAI,GAAGE,KAAK,CAACF,IAAI;YACvB,IAAIA,IAAI,CAACA,IAAI,CAACtB,MAAM,GAAG,CAAC,CAAC,KAAKgB,KAAK,CAACQ,KAAK,EAAE;cACzCR,KAAK,CAACM,IAAI,GAAGE,KAAK,CAACF,IAAI;YACzB;UACF,CAAC,CAAC;QACJ;QACA;QACA,IAAI,CAACvC,OAAO,EAAAkC,gBAAA,GAACjC,eAAe,CAAC8B,iBAAiB,EAAEE,KAAK,CAACM,IAAI,CAAC,cAAAL,gBAAA,uBAA9CA,gBAAA,CAAgDS,IAAI,CAAC,EAAE;UAClE,OAAO,KAAK;QACd;QACA;QACA,IAAI,CAACV,KAAK,CAACtB,EAAE,EAAE;UACbsB,KAAK,CAACtB,EAAE,GAAGf,MAAM,CAAC,CAAC;QACrB;QACA,IAAI,CAACqC,KAAK,CAACU,IAAI,EAAE;UACfV,KAAK,CAACU,IAAI,GAAG5C,GAAG,CAAC6C,QAAQ;QAC3B;QACA;QACA,IAAI,CAACX,KAAK,CAACV,IAAI,EAAEU,KAAK,CAACV,IAAI,GAAG7B,MAAM,CAAC,IAAI,CAAC6B,IAAI,EAAEU,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,GAAG,GAAGL,KAAK,CAACI,KAAK,CAAC;QACrF,OAAO,IAAI;MACb,CAAC,CAAC;IACJ;EACF;EAEAQ,gBAAgBA,CAACC,OAAoB,EAAEnC,EAAU,EAAEJ,IAAoB,EAAE;IACvE,MAAM;MAAED;IAAQ,CAAC,GAAG,IAAI;IAExB,MAAM;MAAEkB;IAAQ,CAAC,GAAGlB,OAAO;IAC3BkB,OAAO,CAACuB,OAAO,CAACD,OAAsB,CAAC;IACvCtB,OAAO,CAACwB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAMD,CAAC,CAACZ,KAAK,GAAGa,CAAC,CAACb,KAAM,CAAC;IAE3C,MAAMc,SAAS,GAAG7C,OAAO,CAACC,IAAI,CAACI,EAAE,CAAC;IAClCL,OAAO,CAACC,IAAI,CAACI,EAAE,CAAC,GAAGJ,IAAI;IACvBD,OAAO,CAACC,IAAI,GAAG;MAAE,GAAGD,OAAO,CAACC;IAAK,CAAC;IAClC,OAAO;MAAE6C,MAAM,EAAE;QAAE,GAAG7C;MAAK,CAAC;MAAE4C,SAAS;MAAExC,EAAE;MAAEsB,KAAK,EAAEa;IAAQ,CAAC;EAC/D;EAEAO,SAASA,CAAC1C,EAAU,EAAEJ,IAAoB,EAAE;IAC1C,MAAM;MAAED;IAAQ,CAAC,GAAG,IAAI;IACxB,MAAM6C,SAAS,GAAG7C,OAAO,CAACC,IAAI,CAACI,EAAE,CAAC;IAClCL,OAAO,CAACC,IAAI,CAACI,EAAE,CAAC,GAAGJ,IAAI;IACvBD,OAAO,CAACC,IAAI,GAAG;MAAE,GAAGD,OAAO,CAACC;IAAK,CAAC;IAClC,OAAO;MAAE6C,MAAM,EAAE;QAAE,GAAG7C;MAAK,CAAC;MAAE4C,SAAS;MAAExC;IAAG,CAAC;EAC/C;EAEA2C,SAASA,CAAC3C,EAAU,EAAE;IACpB,IAAI,CAACA,EAAE,EAAE;MACP,OAAO,IAAI;IACb;IACA,OAAO,IAAI,CAACL,OAAO,CAACC,IAAI,CAACI,EAAE,CAAC;EAC9B;EAEA4C,UAAUA,CAAA,EAAG;IACX,MAAM;MAAE/B,OAAO;MAAEjB;IAAK,CAAC,GAAG,IAAI,CAACD,OAAO;IACtC,OAAO;MACLC,IAAI,EAAEf,IAAI,CAACe,IAAI,CAAC;MAChBiB,OAAO,EAAEA,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEhB,GAAG,CAAEgD,IAAI,IAAKhE,IAAI,CAACgE,IAAI,CAAC;IAC5C,CAAC;EACH;EAEAC,YAAYA,CAAC9C,EAAU,EAAE;IACvB,MAAM+C,UAAU,GAAG;MAAE,GAAG,IAAI,CAACpD,OAAO,CAACC,IAAI,CAACI,EAAE;IAAE,CAAC;IAC/C,OAAO,IAAI,CAACL,OAAO,CAACC,IAAI,CAACI,EAAE,CAAC;IAC5B,OAAO;MAAEyC,MAAM,EAAEM,UAAU;MAAE/C;IAAG,CAAC;EACnC;EAEAgD,aAAaA,CAACC,GAAa,EAAE;IAC3B,MAAMC,cAA0D,GAAG,EAAE;IACrED,GAAG,CAACpB,OAAO,CAAE7B,EAAE,IAAK;MAClB,MAAM+C,UAAU,GAAG,IAAI,CAACD,YAAY,CAAC9C,EAAE,CAAC;MACxCkD,cAAc,CAACC,IAAI,CAAC;QAAE,GAAGJ,UAAU;QAAE/C;MAAG,CAAC,CAAC;IAC5C,CAAC,CAAC;IACF,OAAO;MAAEkD;IAAe,CAAC;EAC3B;EAEAE,mBAAmBA,CAACpD,EAAU,EAAE;IAC9B,MAAM;MAAEa,OAAO;MAAEjB;IAAK,CAAC,GAAG,IAAI,CAACD,OAAO;IACtC,MAAMoD,UAAU,GAAG;MAAE,GAAGnD,IAAI,CAACI,EAAE;IAAE,CAAC;IAElC,MAAMF,KAAK,GAAGZ,SAAS,CAAC2B,OAAO,EAAE;MAAEb;IAAG,CAAC,CAAC;IACxC,MAAMsB,KAAK,GAAGT,OAAO,CAACf,KAAK,CAAC;IAC5Be,OAAO,CAACwC,MAAM,CAACvD,KAAK,EAAE,CAAC,CAAC;IACxB,OAAOF,IAAI,CAACI,EAAE,CAAC;IACf,OAAO;MAAEyC,MAAM,EAAEM,UAAU;MAAE/C,EAAE;MAAEsB;IAAM,CAAC;EAC1C;AACF","ignoreList":[]},"metadata":{},"sourceType":"module"}