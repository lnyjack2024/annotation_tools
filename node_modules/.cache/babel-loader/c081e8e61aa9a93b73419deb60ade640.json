{"ast":null,"code":"import React from'react';import{makeObservable,observable,action,reaction}from'mobx';import{observer}from'mobx-react';import{Slider}from'antd';import hexToRgba from'hex-to-rgba';import FrameActions from'./FrameActions';import ItemLabel from'./ItemLabel';import FramesRenderer,{EventAction}from'../../../../libs/FramesRenderer';import{Minus,Plus}from'../../../common/icons';import store from'../../store/RootStore';import{ReviewResult}from'../../types';import'./FrameControl.scss';const itemKeySeparator='|S|';const defaultFrameColor='#5C5F6B';const actionsContainerHeight=40;function getRGBAColor(category){let alpha=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0.2;const{displayColor}=store.ontology.getCategory(category)||{};if(displayColor){return hexToRgba(displayColor,alpha);}return defaultFrameColor;}function getFrameColor(instanceItem,camera){const frameColor={};const cameraData=instanceItem.cameras[camera];if(cameraData){Object.values(cameraData.frames).forEach(_ref=>{let{frameIndex}=_ref;const result=store.review.getReviewForInstanceItem(instanceItem,camera,frameIndex);if(result){if(result===ReviewResult.REJECT){frameColor[frameIndex]='#9C4434';}else if(!store.isRework){if(result===ReviewResult.APPROVE){frameColor[frameIndex]='#3E6F45';}else if(result===ReviewResult.SUSPEND){frameColor[frameIndex]='#A28900';}}}});}return frameColor;};var FramesMode=/*#__PURE__*/function(FramesMode){FramesMode[\"DEFAULT\"]=\"default\";return FramesMode;}(FramesMode||{});class FrameControl extends React.Component{constructor(props){super(props);this.reactionDisposers=[];this.framesRenderer=null;this.framesContainer=React.createRef();this.itemsContainer=React.createRef();this.framesMode=FramesMode.DEFAULT;this.framesHeight=64;this.visibleFramesIndex=0;this.visibleFramesIndexArr=[];this.itemKeys=[];this.updateVisibleFrames=(currentIndex,indexArr)=>{this.visibleFramesIndex=currentIndex;if(indexArr){this.visibleFramesIndexArr=indexArr;}};this.updateCurrentFrame=(frameIndex,itemIndex)=>{const itemKey=this.itemKeys[itemIndex];if(itemKey){const[instanceId,instanceItemId]=itemKey.split(itemKeySeparator);const instance=store.instance.getInstanceById(instanceId);if(instance){const item=instance.items[instanceItemId];if(item){store.instance.selectInstanceItem(item);}else{const isSingle=instance.isSingle&&store.frame.isSingleCamera;if(!isSingle){store.instance.selectInstanceItem(null);}store.instance.selectInstance(instance);}}}store.frame.setFrame(frameIndex);};this.updateFrameCountIndex=v=>{this.visibleFramesIndex=Math.min(Math.max(v,this.visibleFramesIndexArr[0]),this.visibleFramesIndexArr[this.visibleFramesIndexArr.length-1]);if(this.framesRenderer){this.framesRenderer.currentRangeIndex=this.visibleFramesIndex;}};makeObservable(this,{framesMode:observable,visibleFramesIndex:observable,visibleFramesIndexArr:observable,itemKeys:observable,getItems:action,updateVisibleFrames:action,updateFrameCountIndex:action});// when current frame changes\nthis.reactionDisposers.push(reaction(()=>store.frame.currentFrame,()=>{if(this.framesRenderer){this.framesRenderer.currentFrame=store.frame.currentFrame;}}));// when instance changes, or data changes\nthis.reactionDisposers.push(reaction(()=>[store.instance.selectedInstanceItems,store.instance.selectedInstances,store.undo.pointer,store.undo.lastStoreId,store.config.reviewMode],(_ref2,_ref3)=>{let[items,instances,pointer,storeId,reviewMode]=_ref2;let[prevItems,prevInstances,prevPointer,prevStoreId,prevReviewMode]=_ref3;const selectedChanged=items.length!==prevItems.length||items.some(i=>prevItems.indexOf(i)<0)||instances.length!==prevInstances.length||instances.some(i=>prevInstances.indexOf(i)<0);if(this.framesRenderer&&(selectedChanged||pointer!==prevPointer||storeId!==prevStoreId||reviewMode!==prevReviewMode)){this.framesRenderer.items=this.getItems();}}));}componentDidMount(){if(this.framesContainer.current){this.framesRenderer=new FramesRenderer(this.framesContainer.current,store.frame.frameCount);this.framesRenderer.on(EventAction.VISIBLE_FRAMES_UPDATE,this.updateVisibleFrames);this.framesRenderer.on(EventAction.CURRENT_FRAME_CHANGE,this.updateCurrentFrame);this.framesRenderer.items=this.getItems();}}componentWillUnmount(){if(this.framesRenderer){this.framesRenderer.removeEventListeners();this.framesRenderer.off(EventAction.VISIBLE_FRAMES_UPDATE,this.updateVisibleFrames);this.framesRenderer.off(EventAction.CURRENT_FRAME_CHANGE,this.updateCurrentFrame);}this.reactionDisposers.forEach(disposer=>disposer());}getItems(){const items={};const{selectedInstances,selectedInstanceItems}=store.instance;const{currentCamera}=store.frame;if(selectedInstances.length>0){const selectedInstanceItem=selectedInstanceItems[0];const selectedInstance=selectedInstanceItem?selectedInstanceItem.instance:selectedInstances[0];if(!selectedInstanceItem){// only instance selected\nitems[selectedInstance.id]={frameStatus:selectedInstance.frameStatus,color:getRGBAColor(selectedInstance.category)};}else{var _selectedInstanceItem;// instance item in current frame selected\nconst key=[selectedInstance.id,selectedInstanceItem.id,currentCamera].join(itemKeySeparator);items[key]={frameStatus:(_selectedInstanceItem=selectedInstanceItem.cameras[currentCamera])===null||_selectedInstanceItem===void 0?void 0:_selectedInstanceItem.frameStatus,frameColor:getFrameColor(selectedInstanceItem,currentCamera),color:hexToRgba(selectedInstanceItem.categoryItemRef.displayColor||defaultFrameColor,0.2),showCards:true,selected:true};}}else if(this.framesMode===FramesMode.DEFAULT){const frameStatus=Object.values(store.instance.instances).map(i=>i.frameStatus).reduce((acc,curr)=>({...acc,...curr}),{});items.global={frameStatus,color:defaultFrameColor,selected:true};}this.itemKeys=Object.keys(items);return items;}render(){const{selectedInstances,selectedInstanceItems}=store.instance;const selectedInstanceItem=selectedInstanceItems.length>0?selectedInstanceItems[0]:null;let selectedInstance=null;if(selectedInstanceItem){selectedInstance=selectedInstanceItem.instance;}else if(selectedInstances.length>0){selectedInstance=selectedInstances[0];}return/*#__PURE__*/React.createElement(\"div\",{className:\"frame-control\",style:{height:this.framesHeight+actionsContainerHeight}},/*#__PURE__*/React.createElement(\"div\",{className:\"frame-actions\"},/*#__PURE__*/React.createElement(\"div\",null,selectedInstance&&/*#__PURE__*/React.createElement(\"div\",{className:\"label\"},/*#__PURE__*/React.createElement(\"div\",{className:\"label-dot\",style:{backgroundColor:selectedInstance.categoryRef.displayColor}}),selectedInstance.label)),/*#__PURE__*/React.createElement(FrameActions,null),/*#__PURE__*/React.createElement(\"div\",null)),/*#__PURE__*/React.createElement(\"div\",{className:\"frames\"},/*#__PURE__*/React.createElement(\"div\",{className:\"frame-items-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"frame-scaler\"},/*#__PURE__*/React.createElement(\"div\",{className:\"frame-action-icon\",onClick:()=>this.updateFrameCountIndex(this.visibleFramesIndex-1)},/*#__PURE__*/React.createElement(Minus,null)),/*#__PURE__*/React.createElement(\"div\",{style:{flex:1}},/*#__PURE__*/React.createElement(Slider,{tooltipVisible:false,step:1,min:this.visibleFramesIndexArr[0],max:this.visibleFramesIndexArr[this.visibleFramesIndexArr.length-1],value:this.visibleFramesIndex,onChange:this.updateFrameCountIndex})),/*#__PURE__*/React.createElement(\"div\",{className:\"frame-action-icon\",onClick:()=>this.updateFrameCountIndex(this.visibleFramesIndex+1)},/*#__PURE__*/React.createElement(Plus,null))),/*#__PURE__*/React.createElement(\"div\",{ref:this.itemsContainer,className:\"frame-items\",style:{height:this.framesHeight-44}},this.itemKeys.map(itemKey=>/*#__PURE__*/React.createElement(ItemLabel,{key:itemKey,itemKey:itemKey,separator:itemKeySeparator})))),/*#__PURE__*/React.createElement(\"div\",{className:\"frame-steps\"},/*#__PURE__*/React.createElement(\"div\",{ref:this.framesContainer}))));}}export default observer(FrameControl);","map":{"version":3,"names":["React","makeObservable","observable","action","reaction","observer","Slider","hexToRgba","FrameActions","ItemLabel","FramesRenderer","EventAction","Minus","Plus","store","ReviewResult","itemKeySeparator","defaultFrameColor","actionsContainerHeight","getRGBAColor","category","alpha","arguments","length","undefined","displayColor","ontology","getCategory","getFrameColor","instanceItem","camera","frameColor","cameraData","cameras","Object","values","frames","forEach","_ref","frameIndex","result","review","getReviewForInstanceItem","REJECT","isRework","APPROVE","SUSPEND","FramesMode","FrameControl","Component","constructor","props","reactionDisposers","framesRenderer","framesContainer","createRef","itemsContainer","framesMode","DEFAULT","framesHeight","visibleFramesIndex","visibleFramesIndexArr","itemKeys","updateVisibleFrames","currentIndex","indexArr","updateCurrentFrame","itemIndex","itemKey","instanceId","instanceItemId","split","instance","getInstanceById","item","items","selectInstanceItem","isSingle","frame","isSingleCamera","selectInstance","setFrame","updateFrameCountIndex","v","Math","min","max","currentRangeIndex","getItems","push","currentFrame","selectedInstanceItems","selectedInstances","undo","pointer","lastStoreId","config","reviewMode","_ref2","_ref3","instances","storeId","prevItems","prevInstances","prevPointer","prevStoreId","prevReviewMode","selectedChanged","some","i","indexOf","componentDidMount","current","frameCount","on","VISIBLE_FRAMES_UPDATE","CURRENT_FRAME_CHANGE","componentWillUnmount","removeEventListeners","off","disposer","currentCamera","selectedInstanceItem","selectedInstance","id","frameStatus","color","_selectedInstanceItem","key","join","categoryItemRef","showCards","selected","map","reduce","acc","curr","global","keys","render","createElement","className","style","height","backgroundColor","categoryRef","label","onClick","flex","tooltipVisible","step","value","onChange","ref","separator"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking2/components/frames/FrameControl.tsx"],"sourcesContent":["import React from 'react';\nimport { makeObservable, observable, action, reaction, IReactionDisposer } from 'mobx';\nimport { observer } from 'mobx-react';\nimport { Slider } from 'antd';\nimport hexToRgba from 'hex-to-rgba';\nimport FrameActions from './FrameActions';\nimport ItemLabel from './ItemLabel';\nimport FramesRenderer, { FrameItem, EventAction } from '../../../../libs/FramesRenderer';\nimport { Minus, Plus } from '../../../common/icons';\nimport Instance from '../../model/Instance';\nimport InstanceItem from '../../model/InstanceItem';\nimport store from '../../store/RootStore';\nimport { ReviewResult } from '../../types';\nimport './FrameControl.scss';\n\nconst itemKeySeparator = '|S|';\nconst defaultFrameColor = '#5C5F6B';\nconst actionsContainerHeight = 40;\nfunction getRGBAColor(category: string, alpha = 0.2) {\n  const { displayColor } = store.ontology.getCategory(category) || {};\n  if (displayColor) {\n    return hexToRgba(displayColor, alpha);\n  }\n  return defaultFrameColor;\n}\nfunction getFrameColor(instanceItem: InstanceItem, camera: string) {\n  const frameColor: { [frameIndex: number]: string } = {};\n  const cameraData = instanceItem.cameras[camera];\n  if (cameraData) {\n    Object.values(cameraData.frames).forEach(({ frameIndex }) => {\n      const result = store.review.getReviewForInstanceItem(instanceItem, camera, frameIndex);\n      if (result) {\n        if (result === ReviewResult.REJECT) {\n          frameColor[frameIndex] = '#9C4434';\n        } else if (!store.isRework) {\n          if (result === ReviewResult.APPROVE) {\n            frameColor[frameIndex] = '#3E6F45';\n          } else if (result === ReviewResult.SUSPEND) {\n            frameColor[frameIndex] = '#A28900';\n          }\n        }\n      }\n    });\n  }\n  return frameColor;\n};\n\nenum FramesMode {\n  DEFAULT = 'default',\n}\n\nclass FrameControl extends React.Component {\n  reactionDisposers: IReactionDisposer[] = [];\n\n  framesRenderer: FramesRenderer | null = null;\n\n  framesContainer = React.createRef<HTMLDivElement>();\n\n  itemsContainer = React.createRef<HTMLDivElement>();\n\n  framesMode = FramesMode.DEFAULT;\n\n  framesHeight = 64;\n\n  visibleFramesIndex = 0;\n\n  visibleFramesIndexArr: number[] = [];\n\n  itemKeys: string[] = [];\n\n  constructor(props: any) {\n    super(props);\n\n    makeObservable(this, {\n      framesMode: observable,\n      visibleFramesIndex: observable,\n      visibleFramesIndexArr: observable,\n      itemKeys: observable,\n      getItems: action,\n      updateVisibleFrames: action,\n      updateFrameCountIndex: action,\n    });\n\n    // when current frame changes\n    this.reactionDisposers.push(reaction(\n      () => store.frame.currentFrame,\n      () => {\n        if (this.framesRenderer) {\n          this.framesRenderer.currentFrame = store.frame.currentFrame;\n        }\n      },\n    ));\n\n    // when instance changes, or data changes\n    this.reactionDisposers.push(reaction(\n      () => [\n        store.instance.selectedInstanceItems,\n        store.instance.selectedInstances,\n        store.undo.pointer,\n        store.undo.lastStoreId,\n        store.config.reviewMode,\n      ],\n      (\n        [items, instances, pointer, storeId, reviewMode],\n        [prevItems, prevInstances, prevPointer, prevStoreId, prevReviewMode]\n      ) => {\n        const selectedChanged = (items as InstanceItem[]).length !== (prevItems as InstanceItem[]).length\n          || (items as InstanceItem[]).some((i) => (prevItems as InstanceItem[]).indexOf(i) < 0)\n          || (instances as Instance[]).length !== (prevInstances as Instance[]).length\n          || (instances as Instance[]).some((i) => (prevInstances as Instance[]).indexOf(i) < 0);\n        if (this.framesRenderer && (\n          selectedChanged ||\n          pointer !== prevPointer ||\n          storeId !== prevStoreId ||\n          reviewMode !== prevReviewMode\n        )) {\n          this.framesRenderer.items = this.getItems();\n        }\n      },\n    ));\n  }\n\n  componentDidMount() {\n    if (this.framesContainer.current) {\n      this.framesRenderer = new FramesRenderer(this.framesContainer.current, store.frame.frameCount);\n      this.framesRenderer.on(EventAction.VISIBLE_FRAMES_UPDATE, this.updateVisibleFrames);\n      this.framesRenderer.on(EventAction.CURRENT_FRAME_CHANGE, this.updateCurrentFrame);\n      this.framesRenderer.items = this.getItems();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.framesRenderer) {\n      this.framesRenderer.removeEventListeners();\n      this.framesRenderer.off(EventAction.VISIBLE_FRAMES_UPDATE, this.updateVisibleFrames);\n      this.framesRenderer.off(EventAction.CURRENT_FRAME_CHANGE, this.updateCurrentFrame);\n    }\n    this.reactionDisposers.forEach((disposer) => disposer());\n  }\n\n  getItems() {\n    const items: { [id: string]: FrameItem } = {};\n\n    const { selectedInstances, selectedInstanceItems } = store.instance;\n    const { currentCamera } = store.frame;\n\n    if (selectedInstances.length > 0) {\n      const selectedInstanceItem = selectedInstanceItems[0];\n      const selectedInstance = selectedInstanceItem ? selectedInstanceItem.instance : selectedInstances[0];\n      if (!selectedInstanceItem) {\n        // only instance selected\n        items[selectedInstance.id] = {\n          frameStatus: selectedInstance.frameStatus,\n          color: getRGBAColor(selectedInstance.category),\n        };\n      } else {\n        // instance item in current frame selected\n        const key = [selectedInstance.id, selectedInstanceItem.id, currentCamera].join(itemKeySeparator);\n        items[key] = {\n          frameStatus: selectedInstanceItem.cameras[currentCamera]?.frameStatus,\n          frameColor: getFrameColor(selectedInstanceItem, currentCamera),\n          color: hexToRgba(selectedInstanceItem.categoryItemRef.displayColor || defaultFrameColor, 0.2),\n          showCards: true,\n          selected: true,\n        };\n      }\n    } else if (this.framesMode === FramesMode.DEFAULT) {\n      const frameStatus = Object.values(store.instance.instances)\n        .map((i) => i.frameStatus)\n        .reduce((acc, curr) => ({ ...acc, ...curr }), {});\n      items.global = {\n        frameStatus,\n        color: defaultFrameColor,\n        selected: true,\n      };\n    }\n\n    this.itemKeys = Object.keys(items);\n    return items;\n  }\n\n  updateVisibleFrames = (currentIndex: number, indexArr?: number[]) => {\n    this.visibleFramesIndex = currentIndex;\n    if (indexArr) {\n      this.visibleFramesIndexArr = indexArr;\n    }\n  };\n\n  updateCurrentFrame = (frameIndex: number, itemIndex: number) => {\n    const itemKey = this.itemKeys[itemIndex];\n    if (itemKey) {\n      const [instanceId, instanceItemId] = itemKey.split(itemKeySeparator);\n      const instance = store.instance.getInstanceById(instanceId);\n      if (instance) {\n        const item = instance.items[instanceItemId];\n        if (item) {\n          store.instance.selectInstanceItem(item);\n        } else {\n          const isSingle = instance.isSingle && store.frame.isSingleCamera;\n          if (!isSingle) {\n            store.instance.selectInstanceItem(null);\n          }\n          store.instance.selectInstance(instance);\n        }\n      }\n    }\n    store.frame.setFrame(frameIndex);\n  };\n\n  updateFrameCountIndex = (v: number) => {\n    this.visibleFramesIndex = Math.min(\n      Math.max(v, this.visibleFramesIndexArr[0]),\n      this.visibleFramesIndexArr[this.visibleFramesIndexArr.length - 1],\n    );\n    if (this.framesRenderer) {\n      this.framesRenderer.currentRangeIndex = this.visibleFramesIndex;\n    }\n  };\n\n  render() {\n    const { selectedInstances, selectedInstanceItems } = store.instance;\n    const selectedInstanceItem = selectedInstanceItems.length > 0 ? selectedInstanceItems[0] : null;\n    let selectedInstance: Instance | null = null;\n    if (selectedInstanceItem) {\n      selectedInstance = selectedInstanceItem.instance;\n    } else if (selectedInstances.length > 0) {\n      selectedInstance = selectedInstances[0];\n    }\n    return (\n      <div\n        className=\"frame-control\"\n        style={{\n          height: this.framesHeight + actionsContainerHeight,\n        }}\n      >\n        <div className=\"frame-actions\">\n          <div>\n            {selectedInstance && (\n              <div className=\"label\">\n                <div\n                  className=\"label-dot\"\n                  style={{ backgroundColor: selectedInstance.categoryRef.displayColor }}\n                />\n                {selectedInstance.label}\n              </div>\n            )}\n          </div>\n          <FrameActions />\n          <div />\n        </div>\n        <div className=\"frames\">\n          <div className=\"frame-items-container\">\n            <div className=\"frame-scaler\">\n              <div\n                className=\"frame-action-icon\"\n                onClick={() => this.updateFrameCountIndex(this.visibleFramesIndex - 1)}\n              >\n                <Minus />\n              </div>\n              <div style={{ flex: 1 }}>\n                <Slider\n                  tooltipVisible={false}\n                  step={1}\n                  min={this.visibleFramesIndexArr[0]}\n                  max={this.visibleFramesIndexArr[this.visibleFramesIndexArr.length - 1]}\n                  value={this.visibleFramesIndex}\n                  onChange={this.updateFrameCountIndex}\n                />\n              </div>\n              <div\n                className=\"frame-action-icon\"\n                onClick={() => this.updateFrameCountIndex(this.visibleFramesIndex + 1)}\n              >\n                <Plus />\n              </div>\n            </div>\n            <div\n              ref={this.itemsContainer}\n              className=\"frame-items\"\n              style={{ height: this.framesHeight - 44 }}\n            >\n              {this.itemKeys.map((itemKey) => (\n                <ItemLabel\n                  key={itemKey}\n                  itemKey={itemKey}\n                  separator={itemKeySeparator}\n                />\n              ))}\n            </div>\n          </div>\n          <div className=\"frame-steps\">\n            <div ref={this.framesContainer} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default observer(FrameControl);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}