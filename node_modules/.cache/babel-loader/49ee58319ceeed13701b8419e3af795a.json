{"ast":null,"code":"import{Point,BitmapText,Polygon}from'pixi.js';import Flatten from'@flatten-js/core';import{cloneDeep}from'lodash';import Shape,{EventAction}from'./Shape';import{ShapeType}from'./types';import ControlPoint from'./controls/ControlPoint';import{precise}from'./utils';import Cursor from'../Cursor';import{calcOutlineForLine}from'../../../utils/vector';/**\n * Line shape\n * @class\n */export default class Line extends Shape{/**\n   * get points\n   * @getter\n   */get points(){return this._points.map(p=>({x:p.x,y:p.y,...(p.userData&&{userData:p.userData})}));}/**\n   * set points\n   * @setter\n   */set points(points){this._points=points.map(p=>({x:p.x,y:p.y,userData:cloneDeep(p.userData)}));this.normalize();}/**\n   * get position\n   * @getter\n   */get position(){return new Point(this._points[0].x,this._points[0].y);}/**\n   * set position\n   * @setter\n   */set position(point){const offsetX=point.x-this._points[0].x;const offsetY=point.y-this._points[0].y;this._points.forEach(p=>{p.x=precise(p.x+offsetX);p.y=precise(p.y+offsetY);});this.updateGeometory();this.drawShape();}/**\n   * shape bounds\n   * @getter\n   */get shapeBounds(){const linePoints=this.points;const left=Math.min(...linePoints.map(p=>p.x));const right=Math.max(...linePoints.map(p=>p.x));const top=Math.min(...linePoints.map(p=>p.y));const bottom=Math.max(...linePoints.map(p=>p.y));return{left,top,right,bottom};}constructor(options){super(options);this.shapeType=ShapeType.LINE;/**\n   * line points\n   * @protected\n   */this._points=[];/**\n   * indicate next point when creating\n   * @protected\n   */this._nextPoint=null;/**\n   * line geometory data (line array)\n   */this._geometory=[];/**\n   * index of lines when snapped\n   */this._snappingIndex=-1;/**\n   * mouse move listener when creating\n   * @private\n   * @param event\n   */this._mouseMove=event=>{let localPoint=this.globalSnappingPoint;if(!localPoint){const point=this._mapScreenToStagePosition(event.clientX,event.clientY);localPoint=this._mapStageToLocalPosition(point);}this._nextPoint=localPoint;this.drawShape();};/**\n   * mouse up listener when creating\n   * @private\n   * @param event\n   */this._mouseUp=event=>{if(event.button===2){return;}let localPoint=this.globalSnappingPoint;if(!localPoint){const point=this._mapScreenToStagePosition(event.clientX,event.clientY);localPoint=this._mapStageToLocalPosition(point);}this.addPoint(localPoint);};/**\n   * finish by double clicking\n   * @private\n   */this._finishByDoubleClick=()=>{this.finishCreate();};/**\n   * key down handler\n   * @private\n   * @param e\n   */this._keyDown=e=>{var _e$key;switch((_e$key=e.key)===null||_e$key===void 0?void 0:_e$key.toLowerCase()){case'q':if(!this._finished){e.preventDefault();const index=this.points.length-1;this.removePoint(index);}break;case'enter':if(!this._finished){e.preventDefault();e.stopImmediatePropagation();this.finishCreate();}break;default:break;}};/**\n   * finish create\n   */this.finishCreate=()=>{this.normalize();this._finish();this._removeListeners();};const{points}=options;if(Array.isArray(points)&&points.every(p=>p.x!==undefined&&p.y!==undefined)){this.points=points;}document.addEventListener('keydown',this._keyDown,false);}/**\n   * draw shape\n   */drawShape(){this.instance.clear();this._drawShapeLine();this._drawShapeVertex();this._drawSnappingPoint();if(this._finished){this.drawShapeLabel();this.attachControlPoints();this.updateHitArea();}}/**\n   * draw shape border\n   * @protected\n   */_drawShapeLine(){if(this._points.length<=0){return;}const baseWidth=1/this.scale;const color=this.displayBorderColor;let i=0;this.instance.moveTo(this._points[0].x,this._points[0].y);this._points.slice(1).forEach(point=>{this.instance.lineStyle(baseWidth,color);this.instance.drawLine(point.x,point.y,this.borderStyle,this.scale);i+=1;});if(!this._finished&&this._nextPoint){this.instance.lineStyle(baseWidth,color);this.instance.drawLine(this._nextPoint.x,this._nextPoint.y,this.borderStyle,this.scale);}}/**\n   * draw shape vertexes\n   * @protected\n   */_drawShapeVertex(){var _this$vertexesContain;(_this$vertexesContain=this.vertexesContainer)===null||_this$vertexesContain===void 0?void 0:_this$vertexesContain.removeChildren();if(!this.showVertex&&!this.showVertexOrder){return;}const r=4/this.scale;const offset=this.showVertex?r:4/this.scale;this.instance.lineStyle(1/this.scale,this.displayBorderColor);this._points.forEach((point,index)=>{if(this.showVertex&&(!this.editable||!this.selected)){// draw vertex dot\nthis.instance.beginFill(this.color);this.instance.drawVertex(point.x,point.y,r);this.instance.endFill();}if(this.showVertexOrder){// draw vertext order\nconst text=new BitmapText(\"\".concat(1+index,\" \"),{fontName:'ALPHA_NUMERIC'});text.scale.set(1/this.scale);text.position.set(point.x+offset,point.y+offset);if(!this.vertexesContainer){this._createVertexesContainer();}this.vertexesContainer.addChild(text);}});}/**\n   * draw snapping point\n   */_drawSnappingPoint(){if(this._snappingPoint){this.instance.beginFill(this.selectedColor);this.instance.drawCircle(this._snappingPoint.x,this._snappingPoint.y,3/this.scale);this.instance.endFill();}}/**\n   * create by click to add point\n   * @param point\n   */create(){document.addEventListener('mousemove',this._mouseMove,false);document.addEventListener('mouseup',this._mouseUp,false);this.app.view.addEventListener('dblclick',this._finishByDoubleClick,false);this._finished=false;this._nextPoint=null;}/**\n   * remove all listeners\n   * @private\n   */_removeListeners(){document.removeEventListener('mousemove',this._mouseMove,false);document.removeEventListener('mouseup',this._mouseUp,false);this.app.view.removeEventListener('dblclick',this._finishByDoubleClick,false);}/**\n   * get label position\n   */getLabelPosition(){const sorted=[...this._points].sort((a,b)=>{if(a.y===b.y)return a.x-b.x;return a.y-b.y;});return new Point(sorted[0].x,sorted[0].y);}/**\n   * get shape data\n   */getData(){return{points:this.points};}/**\n   * get geo json\n   */getAreaAsGeoJSON(){const hitArea=this.instance.hitArea;const points=[];for(let i=0;i<hitArea.points.length-1;i+=2){const point=[hitArea.points[i],hitArea.points[i+1]];points.push(point);}return[[[...points]]];}/**\n   * delete selected points\n   */deleteSelectedPoints(){if(this.selected){const deletedIndexes=[];this._controls.forEach((c,i)=>{if(c.selected){deletedIndexes.push(i);c.selected=false;}});if(deletedIndexes.length>0){this._points=this._points.filter((_,i)=>!deletedIndexes.includes(i));this.normalize();this._changed();return true;}}return false;}/**\n   * snap to point\n   * @param point\n   * @param tolerance\n   */snapToPoint(point){let tolerance=arguments.length>1&&arguments[1]!==undefined?arguments[1]:8;const t=tolerance/this.scale;// bbox\nconst{x,y}=point;const{left,right,top,bottom}=this.shapeBounds;if(x<left-t||x>right+t||y<top-t||y>bottom+t){return null;}// points\nlet nearestPoint;let d;this.points.forEach(p=>{const pointDistance=Math.sqrt((p.x-x)**2+(p.y-y)**2);if(pointDistance<t&&(d===undefined||pointDistance<d)){d=pointDistance;nearestPoint=p;}});if(nearestPoint){return new Point(nearestPoint.x,nearestPoint.y);}// edges\nconst location=new Flatten.Point(x,y);for(let i=0;i<this._geometory.length;i+=1){const[distance,segment]=this._geometory[i].distanceTo(location);if(distance<t){const{ps,pe}=segment;const edgePoint=ps.equalTo(location)?pe:ps;return new Point(edgePoint.x,edgePoint.y);}}return null;}/**\n   * snap to line edges\n   */snap(event){if(event.data.originalEvent.altKey){const point=event.data.getLocalPosition(this.container);const location=new Flatten.Point(point.x,point.y);for(let i=0;i<this._geometory.length;i+=1){const[distance,segment]=this._geometory[i].distanceTo(location);if(distance<8/this.scale){const{ps,pe}=segment;const edgePoint=ps.equalTo(location)?pe:ps;this._snappingPoint=new Point(edgePoint.x,edgePoint.y);this._snappingIndex=i;this.drawShape();return true;}}}if(this._snappingPoint){this._snappingPoint=null;this._snappingIndex=-1;this.drawShape();}return false;}/**\n   * add snapping point to shape\n   */addSnappingPointToShape(){if(this._snappingPoint&&this._snappingIndex>=0){this._points.splice(this._snappingIndex+1,0,{x:this._snappingPoint.x,y:this._snappingPoint.y});this._snappingPoint=null;this._snappingIndex=-1;this._controls.forEach(c=>{c.selected=false;});this.normalize();this._changed();return true;}return false;}/**\n   * attach control points\n   */attachControlPoints(){if(!this.editable){this.removeControls();return;}[...this._points].forEach((point,index)=>{if(this.selected||this.hovered&&this.showVertex){// create if never created before\nif(!this._controls[index]){this._controls[index]=new ControlPoint({position:point,container:this.controlsContainer,scale:this.scale,color:this.displayBorderColor,cursor:Cursor.POINTER,onPositionChange:(x,y)=>this._updateByPointPosition(index,x,y),onFinish:()=>this._finishResize(),onClick:()=>this._updatePointSelectedStatus(index)});}// update\nthis._controls[index].color=this.displayBorderColor;this._controls[index].position=point;this._controls[index].add();}else if(this._controls[index]){// remove\nthis._controls[index].selected=false;this._controls[index].remove();}});if(this._controls.length>this._points.length){// remove redundant control points\nthis._controls.slice(this._points.length).forEach(c=>{c.remove();});this._controls=this._controls.slice(0,this._points.length);}}/**\n   * update line point\n   * @private\n   * @param index point index\n   * @param x new position x\n   * @param y new position y\n   */_updateByPointPosition(index,x,y){const position=this.globalSnappingPoint||new Point(x,y);const deltaX=position.x-this._points[index].x;const deltaY=position.y-this._points[index].y;this.updateSelectedPointsPosistion(deltaX,deltaY);this._resizing({deltaX,deltaY});}/**\n   * update selected points position\n   * @param deltaX\n   * @param deltaY\n   */updateSelectedPointsPosistion(deltaX,deltaY){// move together\nthis._controls.forEach((c,i)=>{if(c.selected){const position=new Point(this._points[i].x+deltaX,this._points[i].y+deltaY);this._points[i].x=position.x;this._points[i].y=position.y;}});this.drawShape();}/**\n   * update selected point\n   * @private\n   * @param index\n   */_updatePointSelectedStatus(index){if(!this._controls[index].selected){this._emit(EventAction.VERTEX_SELECTED,index);this._controls.forEach((c,i)=>{if(i===index){c.selected=true;}else{c.selected=false;}});}}/**\n   * when finish resize\n   */_finishResize(){this.resizing=false;this.normalize();this._changed();}/**\n   * add a point\n   * @param point\n   * @param index\n   */addPoint(point,index){const pIndex=index===undefined?this._points.length:index;this._points.splice(pIndex,0,{x:precise(point.x),y:precise(point.y)});this.drawShape();}/**\n   * remove a point\n   * @param index\n   */removePoint(index){if(index>=0&&index<this._points.length){this._points.splice(index,1);this.drawShape();}}/**\n   * normalize line shape, remove it if necessary\n   */normalize(){// remove duplicated points\nconst points=[];this._points.forEach((point,index)=>{if(index===this._points.length-1||point.x!==this._points[index+1].x||point.y!==this._points[index+1].y){points.push(point);}});this._points=points;if(this._points.length<2){this._remove();return;}this._points.forEach(p=>{p.x=precise(p.x);p.y=precise(p.y);});this.updateGeometory();this.drawShape();}/**\n   * update geometory\n   */updateGeometory(){const linePoints=this.points;const lines=[];for(let i=0;i<linePoints.length-1;i+=1){const start=linePoints[i];const end=linePoints[i+1];lines.push({start,end});}this._geometory=this._geometory.slice(0,lines.length);for(let i=0;i<lines.length;i+=1){const{start,end}=lines[i];const startPoint=new Flatten.Point(start.x,start.y);const endPoint=new Flatten.Point(end.x,end.y);if(!this._geometory[i]){this._geometory[i]=new Flatten.Segment(startPoint,endPoint);}else{this._geometory[i].ps=startPoint;this._geometory[i].pe=endPoint;}}}/**\n   * update hit area\n   */updateHitArea(){const offset=5/this.scale;const areaPoints=calcOutlineForLine(this.points,offset);this.instance.hitArea=new Polygon(areaPoints);}/**\n   * shape destroy\n   */destroy(){this._removeListeners();document.removeEventListener('keydown',this._keyDown,false);// call parent\nsuper.destroy();}/**\n   * selected points with point index & point instance\n   * @returns\n   */getSelectedPoints(){if(!this._finished){const lastPointIndex=this._points.length-1;return[{index:lastPointIndex,point:this._points[lastPointIndex]}];}const selectedPoints=[];const points=[...this.points];if(this.selected){this._controls.forEach((c,i)=>{if(c.selected){selectedPoints.push({index:i,point:points[i]});}});}return selectedPoints;}/**\n   * set selected points\n   * @param pointsIndex\n   */setSelectedPoints(pointsIndex){if(this.selected){this._controls.forEach((c,i)=>{if(pointsIndex.includes(i)){c.selected=true;}else{c.selected=false;}});}}/**\n   * set points user data\n   * @param pointsData\n   */setPointsUserData(pointsData){pointsData.forEach(_ref=>{let{index,userData}=_ref;this._points[index].userData=cloneDeep(userData);});this.drawShape();if(this._finished){this._changed();}}}","map":{"version":3,"names":["Point","BitmapText","Polygon","Flatten","cloneDeep","Shape","EventAction","ShapeType","ControlPoint","precise","Cursor","calcOutlineForLine","Line","points","_points","map","p","x","y","userData","normalize","position","point","offsetX","offsetY","forEach","updateGeometory","drawShape","shapeBounds","linePoints","left","Math","min","right","max","top","bottom","constructor","options","shapeType","LINE","_nextPoint","_geometory","_snappingIndex","_mouseMove","event","localPoint","globalSnappingPoint","_mapScreenToStagePosition","clientX","clientY","_mapStageToLocalPosition","_mouseUp","button","addPoint","_finishByDoubleClick","finishCreate","_keyDown","e","_e$key","key","toLowerCase","_finished","preventDefault","index","length","removePoint","stopImmediatePropagation","_finish","_removeListeners","Array","isArray","every","undefined","document","addEventListener","instance","clear","_drawShapeLine","_drawShapeVertex","_drawSnappingPoint","drawShapeLabel","attachControlPoints","updateHitArea","baseWidth","scale","color","displayBorderColor","i","moveTo","slice","lineStyle","drawLine","borderStyle","_this$vertexesContain","vertexesContainer","removeChildren","showVertex","showVertexOrder","r","offset","editable","selected","beginFill","drawVertex","endFill","text","concat","fontName","set","_createVertexesContainer","addChild","_snappingPoint","selectedColor","drawCircle","create","app","view","removeEventListener","getLabelPosition","sorted","sort","a","b","getData","getAreaAsGeoJSON","hitArea","push","deleteSelectedPoints","deletedIndexes","_controls","c","filter","_","includes","_changed","snapToPoint","tolerance","arguments","t","nearestPoint","d","pointDistance","sqrt","location","distance","segment","distanceTo","ps","pe","edgePoint","equalTo","snap","data","originalEvent","altKey","getLocalPosition","container","addSnappingPointToShape","splice","removeControls","hovered","controlsContainer","cursor","POINTER","onPositionChange","_updateByPointPosition","onFinish","_finishResize","onClick","_updatePointSelectedStatus","add","remove","deltaX","deltaY","updateSelectedPointsPosistion","_resizing","_emit","VERTEX_SELECTED","resizing","pIndex","_remove","lines","start","end","startPoint","endPoint","Segment","areaPoints","destroy","getSelectedPoints","lastPointIndex","selectedPoints","setSelectedPoints","pointsIndex","setPointsUserData","pointsData","_ref"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/common/shapes/Line.ts"],"sourcesContent":["import { Point, BitmapText, InteractionEvent, Polygon } from 'pixi.js';\nimport Flatten from '@flatten-js/core';\nimport { cloneDeep } from 'lodash';\nimport Shape, { ShapeOptions, EventAction } from './Shape';\nimport { ShapeType } from './types';\nimport ControlPoint from './controls/ControlPoint';\nimport { precise } from './utils';\nimport Cursor from '../Cursor';\nimport { calcOutlineForLine } from '../../../utils/vector';\n\ninterface IPoint {\n  x: number;\n  y: number;\n  userData?: any;\n}\n\nexport interface LineData {\n  points: IPoint[];\n}\n\nexport interface LineOptions extends ShapeOptions {\n  points?: IPoint[];\n}\n\n/**\n * Line shape\n * @class\n */\nexport default class Line extends Shape<LineData> {\n  shapeType = ShapeType.LINE;\n\n  /**\n   * line points\n   * @protected\n   */\n  protected _points: IPoint[] = [];\n\n  /**\n   * indicate next point when creating\n   * @protected\n   */\n  protected _nextPoint: IPoint | null = null;\n\n  /**\n   * line geometory data (line array)\n   */\n  private _geometory: Flatten.Segment[] = [];\n\n  /**\n   * index of lines when snapped\n   */\n  private _snappingIndex = -1;\n\n  /**\n   * get points\n   * @getter\n   */\n  get points() {\n    return this._points.map((p) => ({\n      x: p.x,\n      y: p.y,\n      ...p.userData && { userData: p.userData },\n    }));\n  }\n\n  /**\n   * set points\n   * @setter\n   */\n  set points(points: IPoint[]) {\n    this._points = points.map((p) => ({ x: p.x, y: p.y, userData: cloneDeep(p.userData) }));\n    this.normalize();\n  }\n\n  /**\n   * get position\n   * @getter\n   */\n  get position() {\n    return new Point(this._points[0].x, this._points[0].y);\n  }\n\n  /**\n   * set position\n   * @setter\n   */\n  set position(point: Point) {\n    const offsetX = point.x - this._points[0].x;\n    const offsetY = point.y - this._points[0].y;\n    this._points.forEach((p) => {\n      p.x = precise(p.x + offsetX);\n      p.y = precise(p.y + offsetY);\n    });\n    this.updateGeometory();\n    this.drawShape();\n  }\n\n  /**\n   * shape bounds\n   * @getter\n   */\n  get shapeBounds() {\n    const linePoints = this.points;\n    const left = Math.min(...linePoints.map((p) => p.x));\n    const right = Math.max(...linePoints.map((p) => p.x));\n    const top = Math.min(...linePoints.map((p) => p.y));\n    const bottom = Math.max(...linePoints.map((p) => p.y));\n    return { left, top, right, bottom };\n  }\n\n  constructor(options: LineOptions) {\n    super(options);\n\n    const { points } = options;\n    if (Array.isArray(points) && points.every((p) => p.x !== undefined && p.y !== undefined)) {\n      this.points = points;\n    }\n\n    document.addEventListener('keydown', this._keyDown, false);\n  }\n\n  /**\n   * draw shape\n   */\n  drawShape() {\n    this.instance.clear();\n    this._drawShapeLine();\n    this._drawShapeVertex();\n    this._drawSnappingPoint();\n    if (this._finished) {\n      this.drawShapeLabel();\n      this.attachControlPoints();\n      this.updateHitArea();\n    }\n  }\n\n  /**\n   * draw shape border\n   * @protected\n   */\n  protected _drawShapeLine() {\n    if (this._points.length <= 0) {\n      return;\n    }\n    const baseWidth = 1 / this.scale;\n    const color = this.displayBorderColor;\n\n    let i = 0;\n    this.instance.moveTo(this._points[0].x, this._points[0].y);\n    this._points.slice(1).forEach((point) => {\n      this.instance.lineStyle(baseWidth, color);\n      this.instance.drawLine(point.x, point.y, this.borderStyle, this.scale);\n      i += 1;\n    });\n    if ((!this._finished) && this._nextPoint) {\n      this.instance.lineStyle(baseWidth, color);\n      this.instance.drawLine(this._nextPoint.x, this._nextPoint.y, this.borderStyle, this.scale);\n    }\n  }\n\n  /**\n   * draw shape vertexes\n   * @protected\n   */\n  protected _drawShapeVertex() {\n    this.vertexesContainer?.removeChildren();\n    if (!this.showVertex && !this.showVertexOrder) {\n      return;\n    }\n\n    const r = 4 / this.scale;\n    const offset = this.showVertex ? r : 4 / this.scale;\n    this.instance.lineStyle(1 / this.scale, this.displayBorderColor);\n    this._points.forEach((point, index) => {\n      if (this.showVertex && (!this.editable || !this.selected)) {\n        // draw vertex dot\n        this.instance.beginFill(this.color);\n        this.instance.drawVertex(point.x, point.y, r);\n        this.instance.endFill();\n      }\n      if (this.showVertexOrder) {\n        // draw vertext order\n        const text = new BitmapText(`${1 + index} `, { fontName: 'ALPHA_NUMERIC' });\n        text.scale.set(1 / this.scale);\n        text.position.set(point.x + offset, point.y + offset);\n        if (!this.vertexesContainer) {\n          this._createVertexesContainer();\n        }\n        this.vertexesContainer!.addChild(text);\n      }\n    });\n  }\n\n  /**\n   * draw snapping point\n   */\n  private _drawSnappingPoint() {\n    if (this._snappingPoint) {\n      this.instance.beginFill(this.selectedColor);\n      this.instance.drawCircle(this._snappingPoint.x, this._snappingPoint.y, 3 / this.scale);\n      this.instance.endFill();\n    }\n  }\n\n  /**\n   * create by click to add point\n   * @param point\n   */\n  create() {\n    document.addEventListener('mousemove', this._mouseMove, false);\n    document.addEventListener('mouseup', this._mouseUp, false);\n    this.app.view.addEventListener('dblclick', this._finishByDoubleClick, false);\n\n    this._finished = false;\n    this._nextPoint = null;\n  }\n\n  /**\n   * mouse move listener when creating\n   * @private\n   * @param event\n   */\n  private _mouseMove = (event: MouseEvent) => {\n    let localPoint = this.globalSnappingPoint;\n    if (!localPoint) {\n      const point = this._mapScreenToStagePosition(event.clientX, event.clientY);\n      localPoint = this._mapStageToLocalPosition(point);\n    }\n    this._nextPoint = localPoint;\n    this.drawShape();\n  };\n\n  /**\n   * mouse up listener when creating\n   * @private\n   * @param event\n   */\n  private _mouseUp = (event: MouseEvent) => {\n    if (event.button === 2) {\n      return;\n    }\n    let localPoint = this.globalSnappingPoint;\n    if (!localPoint) {\n      const point = this._mapScreenToStagePosition(event.clientX, event.clientY);\n      localPoint = this._mapStageToLocalPosition(point);\n    }\n    this.addPoint(localPoint);\n  };\n\n  /**\n   * finish by double clicking\n   * @private\n   */\n  private _finishByDoubleClick = () => {\n    this.finishCreate();\n  };\n\n  /**\n   * key down handler\n   * @private\n   * @param e\n   */\n  private _keyDown = (e: KeyboardEvent) => {\n    switch (e.key?.toLowerCase()) {\n      case 'q':\n        if (!this._finished) {\n          e.preventDefault();\n          const index = this.points.length - 1;\n          this.removePoint(index);\n        }\n        break;\n      case 'enter':\n        if (!this._finished) {\n          e.preventDefault();\n          e.stopImmediatePropagation();\n          this.finishCreate();\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  /**\n   * finish create\n   */\n  finishCreate = () => {\n    this.normalize();\n    this._finish();\n    this._removeListeners();\n  };\n\n  /**\n   * remove all listeners\n   * @private\n   */\n  private _removeListeners() {\n    document.removeEventListener('mousemove', this._mouseMove, false);\n    document.removeEventListener('mouseup', this._mouseUp, false);\n    this.app.view.removeEventListener('dblclick', this._finishByDoubleClick, false);\n  }\n\n  /**\n   * get label position\n   */\n  getLabelPosition() {\n    const sorted = [...this._points].sort((a, b) => {\n      if (a.y === b.y) return a.x - b.x;\n      return a.y - b.y;\n    });\n    return new Point(sorted[0].x, sorted[0].y);\n  }\n\n  /**\n   * get shape data\n   */\n  getData() {\n    return {\n      points: this.points,\n    };\n  }\n\n  /**\n   * get geo json\n   */\n  getAreaAsGeoJSON() {\n    const hitArea = this.instance.hitArea as Polygon;\n    const points: [number, number][] = [];\n    for (let i = 0; i < hitArea.points.length - 1; i += 2) {\n      const point = [hitArea.points[i], hitArea.points[i + 1]] as [number, number];\n      points.push(point);\n    }\n    return [[[...points]]];\n  }\n\n  /**\n   * delete selected points\n   */\n  deleteSelectedPoints() {\n    if (this.selected) {\n      const deletedIndexes: number[] = [];\n      this._controls.forEach((c, i) => {\n        if (c.selected) {\n          deletedIndexes.push(i);\n          c.selected = false;\n        }\n      });\n      if (deletedIndexes.length > 0) {\n        this._points = this._points.filter((_, i) => !deletedIndexes.includes(i));\n        this.normalize();\n        this._changed();\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * snap to point\n   * @param point\n   * @param tolerance\n   */\n  snapToPoint(point: Point, tolerance = 8) {\n    const t = tolerance / this.scale;\n\n    // bbox\n    const { x, y } = point;\n    const { left, right, top, bottom } = this.shapeBounds;\n    if (x < left - t || x > right + t || y < top - t || y > bottom + t) {\n      return null;\n    }\n\n    // points\n    let nearestPoint: IPoint | undefined;\n    let d: number | undefined;\n    this.points.forEach((p) => {\n      const pointDistance = Math.sqrt((p.x - x) ** 2 + (p.y - y) ** 2);\n      if (pointDistance < t && (d === undefined || pointDistance < d)) {\n        d = pointDistance;\n        nearestPoint = p;\n      }\n    });\n    if (nearestPoint) {\n      return new Point(nearestPoint.x, nearestPoint.y);\n    }\n\n    // edges\n    const location = new Flatten.Point(x, y);\n    for (let i = 0; i < this._geometory.length; i += 1) {\n      const [distance, segment] = this._geometory[i].distanceTo(location);\n      if (distance < t) {\n        const { ps, pe } = segment;\n        const edgePoint = ps.equalTo(location) ? pe : ps;\n        return new Point(edgePoint.x, edgePoint.y);\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * snap to line edges\n   */\n  snap(event: InteractionEvent) {\n    if (event.data.originalEvent.altKey) {\n      const point = event.data.getLocalPosition(this.container);\n      const location = new Flatten.Point(point.x, point.y);\n      for (let i = 0; i < this._geometory.length; i += 1) {\n        const [distance, segment] = this._geometory[i].distanceTo(location);\n        if (distance < 8 / this.scale) {\n          const { ps, pe } = segment;\n          const edgePoint = ps.equalTo(location) ? pe : ps;\n          this._snappingPoint = new Point(edgePoint.x, edgePoint.y);\n          this._snappingIndex = i;\n          this.drawShape();\n          return true;\n        }\n      }\n    }\n\n    if (this._snappingPoint) {\n      this._snappingPoint = null;\n      this._snappingIndex = -1;\n      this.drawShape();\n    }\n    return false;\n  }\n\n  /**\n   * add snapping point to shape\n   */\n  addSnappingPointToShape() {\n    if (this._snappingPoint && this._snappingIndex >= 0) {\n      this._points.splice(this._snappingIndex + 1, 0, { x: this._snappingPoint.x, y: this._snappingPoint.y });\n      this._snappingPoint = null;\n      this._snappingIndex = -1;\n      this._controls.forEach((c) => {\n        c.selected = false;\n      });\n      this.normalize();\n      this._changed();\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * attach control points\n   */\n  attachControlPoints() {\n    if (!this.editable) {\n      this.removeControls();\n      return;\n    }\n\n    [...this._points].forEach((point, index) => {\n      if (this.selected || (this.hovered && this.showVertex)) {\n        // create if never created before\n        if (!this._controls[index]) {\n          this._controls[index] = new ControlPoint({\n            position: point,\n            container: this.controlsContainer,\n            scale: this.scale,\n            color: this.displayBorderColor,\n            cursor: Cursor.POINTER,\n            onPositionChange: (x, y) => this._updateByPointPosition(index, x, y),\n            onFinish: () => this._finishResize(),\n            onClick: () => this._updatePointSelectedStatus(index),\n          });\n        }\n\n        // update\n        this._controls[index].color = this.displayBorderColor;\n        this._controls[index].position = point;\n        this._controls[index].add();\n      } else if (this._controls[index]) {\n        // remove\n        this._controls[index].selected = false;\n        this._controls[index].remove();\n      }\n    });\n    if (this._controls.length > this._points.length) {\n      // remove redundant control points\n      this._controls.slice(this._points.length).forEach((c) => {\n        c.remove();\n      });\n      this._controls = this._controls.slice(0, this._points.length);\n    }\n  }\n\n  /**\n   * update line point\n   * @private\n   * @param index point index\n   * @param x new position x\n   * @param y new position y\n   */\n  private _updateByPointPosition(index: number, x: number, y: number) {\n    const position = this.globalSnappingPoint || new Point(x, y);\n    const deltaX = position.x - this._points[index].x;\n    const deltaY = position.y - this._points[index].y;\n    this.updateSelectedPointsPosistion(deltaX, deltaY);\n    this._resizing({ deltaX, deltaY });\n  }\n\n  /**\n   * update selected points position\n   * @param deltaX\n   * @param deltaY\n   */\n  updateSelectedPointsPosistion(deltaX: number, deltaY: number) {\n    // move together\n    this._controls.forEach((c, i) => {\n      if (c.selected) {\n        const position = new Point(this._points[i].x + deltaX, this._points[i].y + deltaY);\n        this._points[i].x = position.x;\n        this._points[i].y = position.y;\n      }\n    });\n    this.drawShape();\n  }\n\n  /**\n   * update selected point\n   * @private\n   * @param index\n   */\n  private _updatePointSelectedStatus(index: number) {\n    if (!this._controls[index].selected) {\n      this._emit(EventAction.VERTEX_SELECTED, index);\n      this._controls.forEach((c, i) => {\n        if (i === index) {\n          c.selected = true;\n        } else {\n          c.selected = false;\n        }\n      });\n    }\n  }\n\n  /**\n   * when finish resize\n   */\n  private _finishResize() {\n    this.resizing = false;\n    this.normalize();\n    this._changed();\n  }\n\n  /**\n   * add a point\n   * @param point\n   * @param index\n   */\n  addPoint(point: IPoint | Point, index?: number) {\n    const pIndex = index === undefined ? this._points.length : index;\n    this._points.splice(pIndex, 0, { x: precise(point.x), y: precise(point.y) });\n    this.drawShape();\n  }\n\n  /**\n   * remove a point\n   * @param index\n   */\n  removePoint(index: number) {\n    if (index >= 0 && index < this._points.length) {\n      this._points.splice(index, 1);\n      this.drawShape();\n    }\n  }\n\n  /**\n   * normalize line shape, remove it if necessary\n   */\n  normalize() {\n    // remove duplicated points\n    const points: IPoint[] = [];\n    this._points.forEach((point, index) => {\n      if (index === this._points.length - 1 || point.x !== this._points[index + 1].x || point.y !== this._points[index + 1].y) {\n        points.push(point);\n      }\n    });\n    this._points = points;\n\n    if (this._points.length < 2) {\n      this._remove();\n      return;\n    }\n\n    this._points.forEach((p) => {\n      p.x = precise(p.x);\n      p.y = precise(p.y);\n    });\n\n    this.updateGeometory();\n    this.drawShape();\n  }\n\n  /**\n   * update geometory\n   */\n  updateGeometory() {\n    const linePoints = this.points;\n    const lines = [];\n    for (let i = 0; i < linePoints.length - 1; i += 1) {\n      const start = linePoints[i];\n      const end = linePoints[i + 1];\n      lines.push({ start, end });\n    }\n    this._geometory = this._geometory.slice(0, lines.length);\n    for (let i = 0; i < lines.length; i += 1) {\n      const { start, end } = lines[i];\n      const startPoint = new Flatten.Point(start.x, start.y);\n      const endPoint = new Flatten.Point(end.x, end.y);\n      if (!this._geometory[i]) {\n        this._geometory[i] = new Flatten.Segment(startPoint, endPoint);\n      } else {\n        this._geometory[i].ps = startPoint;\n        this._geometory[i].pe = endPoint;\n      }\n    }\n  }\n\n  /**\n   * update hit area\n   */\n  updateHitArea() {\n    const offset = 5 / this.scale;\n    const areaPoints = calcOutlineForLine(this.points, offset);\n    this.instance.hitArea = new Polygon(areaPoints);\n  }\n\n  /**\n   * shape destroy\n   */\n  destroy() {\n    this._removeListeners();\n    document.removeEventListener('keydown', this._keyDown, false);\n    // call parent\n    super.destroy();\n  }\n\n  /**\n   * selected points with point index & point instance\n   * @returns\n   */\n  getSelectedPoints() {\n    if (!this._finished) {\n      const lastPointIndex = this._points.length - 1;\n      return [{ index: lastPointIndex, point: this._points[lastPointIndex] }];\n    }\n    const selectedPoints: {index: number; point: IPoint}[] = [];\n    const points = [...this.points];\n    if (this.selected) {\n      this._controls.forEach((c, i) => {\n        if (c.selected) {\n          selectedPoints.push({\n            index: i,\n            point: points[i],\n          });\n        }\n      });\n    }\n    return selectedPoints;\n  }\n\n  /**\n   * set selected points\n   * @param pointsIndex\n   */\n  setSelectedPoints(pointsIndex: number[]) {\n    if (this.selected) {\n      this._controls.forEach((c, i) => {\n        if (pointsIndex.includes(i)) {\n          c.selected = true;\n        } else {\n          c.selected = false;\n        }\n      });\n    }\n  }\n\n  /**\n   * set points user data\n   * @param pointsData\n   */\n  setPointsUserData(pointsData: {index: number; userData: any}[]) {\n    pointsData.forEach(({ index, userData }) => {\n      this._points[index].userData = cloneDeep(userData);\n    });\n    this.drawShape();\n    if (this._finished) {\n      this._changed();\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}