{"ast":null,"code":"import{Rectangle}from'pixi.js';import Control from'./Control';/**\n * Control Point\n * @class\n */export default class ControlBar extends Control{/**\n   * get control bar type\n   * @getter\n   */get type(){return this._type;}constructor(options){super(options);/**\n   * control bar type\n   * @private\n   */this._type=void 0;this._type=options.type;}/**\n   * draw bar control\n   */drawControl(){this.control.clear();this._updateHitArea();}/**\n   * move bar position\n   * @param position\n   */move(position){if(this._type==='horizonal'){this.control.y=position.y;}else{this.control.x=position.x;}}/**\n   * draw hit area\n   * @private\n   */_updateHitArea(){const areaSize=8/this.scale;if(this._type==='horizonal'){this.control.hitArea=new Rectangle(-this.size/2,-areaSize/2,this.size,areaSize);}else{this.control.hitArea=new Rectangle(-areaSize/2,-this.size/2,areaSize,this.size);}}}","map":{"version":3,"names":["Rectangle","Control","ControlBar","type","_type","constructor","options","drawControl","control","clear","_updateHitArea","move","position","y","x","areaSize","scale","hitArea","size"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/common/shapes/controls/ControlBar.ts"],"sourcesContent":["import { Point, Rectangle } from 'pixi.js';\nimport Control, { ControlOptions } from './Control';\n\nexport type ControlBarType = 'horizonal' | 'vertical';\n\ninterface ControlBarOptions extends ControlOptions {\n  type: ControlBarType;\n}\n\n/**\n * Control Point\n * @class\n */\nexport default class ControlBar extends Control {\n  /**\n   * control bar type\n   * @private\n   */\n  private _type: ControlBarType;\n\n  /**\n   * get control bar type\n   * @getter\n   */\n  get type() {\n    return this._type;\n  }\n\n  constructor(options: ControlBarOptions) {\n    super(options);\n    this._type = options.type;\n  }\n\n  /**\n   * draw bar control\n   */\n  drawControl() {\n    this.control.clear();\n    this._updateHitArea();\n  }\n\n  /**\n   * move bar position\n   * @param position\n   */\n  move(position: Point) {\n    if (this._type === 'horizonal') {\n      this.control.y = position.y;\n    } else {\n      this.control.x = position.x;\n    }\n  }\n\n  /**\n   * draw hit area\n   * @private\n   */\n  private _updateHitArea() {\n    const areaSize = 8 / this.scale;\n    if (this._type === 'horizonal') {\n      this.control.hitArea = new Rectangle(-this.size / 2, -areaSize / 2, this.size, areaSize);\n    } else {\n      this.control.hitArea = new Rectangle(-areaSize / 2, -this.size / 2, areaSize, this.size);\n    }\n  }\n}\n"],"mappings":"AAAA,OAAgBA,SAAS,KAAQ,SAAS,CAC1C,MAAO,CAAAC,OAAO,KAA0B,WAAW,CAQnD;AACA;AACA;AACA,GACA,cAAe,MAAM,CAAAC,UAAU,QAAS,CAAAD,OAAQ,CAO9C;AACF;AACA;AACA,KACE,GAAI,CAAAE,IAAIA,CAAA,CAAG,CACT,MAAO,KAAI,CAACC,KAAK,CACnB,CAEAC,WAAWA,CAACC,OAA0B,CAAE,CACtC,KAAK,CAACA,OAAO,CAAC,CAfhB;AACF;AACA;AACA,KAHE,KAIQF,KAAK,QAYX,IAAI,CAACA,KAAK,CAAGE,OAAO,CAACH,IAAI,CAC3B,CAEA;AACF;AACA,KACEI,WAAWA,CAAA,CAAG,CACZ,IAAI,CAACC,OAAO,CAACC,KAAK,CAAC,CAAC,CACpB,IAAI,CAACC,cAAc,CAAC,CAAC,CACvB,CAEA;AACF;AACA;AACA,KACEC,IAAIA,CAACC,QAAe,CAAE,CACpB,GAAI,IAAI,CAACR,KAAK,GAAK,WAAW,CAAE,CAC9B,IAAI,CAACI,OAAO,CAACK,CAAC,CAAGD,QAAQ,CAACC,CAAC,CAC7B,CAAC,IAAM,CACL,IAAI,CAACL,OAAO,CAACM,CAAC,CAAGF,QAAQ,CAACE,CAAC,CAC7B,CACF,CAEA;AACF;AACA;AACA,KACUJ,cAAcA,CAAA,CAAG,CACvB,KAAM,CAAAK,QAAQ,CAAG,CAAC,CAAG,IAAI,CAACC,KAAK,CAC/B,GAAI,IAAI,CAACZ,KAAK,GAAK,WAAW,CAAE,CAC9B,IAAI,CAACI,OAAO,CAACS,OAAO,CAAG,GAAI,CAAAjB,SAAS,CAAC,CAAC,IAAI,CAACkB,IAAI,CAAG,CAAC,CAAE,CAACH,QAAQ,CAAG,CAAC,CAAE,IAAI,CAACG,IAAI,CAAEH,QAAQ,CAAC,CAC1F,CAAC,IAAM,CACL,IAAI,CAACP,OAAO,CAACS,OAAO,CAAG,GAAI,CAAAjB,SAAS,CAAC,CAACe,QAAQ,CAAG,CAAC,CAAE,CAAC,IAAI,CAACG,IAAI,CAAG,CAAC,CAAEH,QAAQ,CAAE,IAAI,CAACG,IAAI,CAAC,CAC1F,CACF,CACF","ignoreList":[]},"metadata":{},"sourceType":"module"}