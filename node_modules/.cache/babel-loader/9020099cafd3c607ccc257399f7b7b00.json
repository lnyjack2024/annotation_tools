{"ast":null,"code":"import _applyDecoratedDescriptor from \"/Users/qzheng/Documents/webroot/annotation_tools/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nvar _class,\n  _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/phonetic-transcription/components/Helper/TimeControl.tsx\";\nimport React from 'react';\nimport { reaction, makeObservable, computed, toJS } from 'mobx';\nimport { observer } from 'mobx-react';\nimport rootStore from '../../store/RootStore';\nimport { Align } from '../../types';\nimport i18n from '../../locales';\nimport Cursor from '../../../common/Cursor';\nimport { drawRect, drawRectBorder } from '../../../../utils/canvas';\n;\n;\nconst style = {\n  fillColor: '#D8E1E6',\n  activeColor: '#B2CFFF',\n  borderColor: '#AFB3B4',\n  textColor: '#363B44'\n};\nlet TimeControl = (_class = class TimeControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n    /**\n     * reaction disposer\n     */\n    this.reactionDisposer = void 0;\n    /**\n     * window devicePixelRatio\n     */\n    this.ratio = 1;\n    /**\n     * canvas rendering Context2D\n     */\n    this.ctx = null;\n    /**\n     * control rects\n     */\n    this.rects = [];\n    /**\n     * hovered rect index\n     */\n    this.hoverRectIndex = null;\n    this.cursor = Cursor.DEFAULT;\n    this.setupCanvas = () => {\n      if (this.canvasRef.current) {\n        const canvas = this.canvasRef.current;\n        const rect = canvas.getBoundingClientRect();\n        this.ratio = window.devicePixelRatio;\n        canvas.width = rect.width * this.ratio;\n        canvas.height = rect.height * this.ratio;\n        this.ctx = canvas.getContext('2d');\n        canvas.addEventListener('click', this.clickRect);\n      }\n    };\n    this.clickRect = () => {\n      if (this.hoverRectIndex !== null) {\n        const {\n          start,\n          end\n        } = this.rects[this.hoverRectIndex];\n        rootStore.analyse.setSeekto({\n          start,\n          end\n        });\n      }\n    };\n    this.clearCanvas = () => {\n      if (this.canvasRef.current) {\n        const canvas = this.canvasRef.current;\n        const rect = canvas.getBoundingClientRect();\n        canvas.width = rect.width * this.ratio;\n        canvas.height = rect.height * this.ratio;\n      }\n    };\n    this.updateControlRow = () => {\n      const {\n        timeControlHeight,\n        margin,\n        atlasWidth,\n        timeControlTopGap,\n        duration\n      } = this.placementData;\n      const {\n        selectedRegion,\n        selectedTime,\n        displayBuffer: {\n          start: startPrecent,\n          end: endPrecent,\n          precent\n        }\n      } = this.contorlChange;\n      if (duration > 0) {\n        const startTime = startPrecent * duration;\n        const endTime = endPrecent * duration;\n        const visibleDuration = precent * duration;\n        const rects = [];\n        const rowHeight = (timeControlHeight - timeControlTopGap) / 3;\n        const colWidth = atlasWidth / visibleDuration;\n        // first row\n        if (selectedRegion) {\n          const {\n            start,\n            end\n          } = selectedRegion;\n          const regionDuration = end - start;\n          const leftDuration = start - startTime;\n          const rightDuration = endTime - end;\n          let regionWidth = regionDuration * colWidth;\n          const leftWidth = leftDuration * colWidth;\n          const rightWidth = rightDuration * colWidth;\n          const isStartVisible = start > startTime + 0.01 && start < endTime - 0.01;\n          const isEndVisible = end > startTime + 0.01 && end < endTime - 0.01;\n          if (isStartVisible && isEndVisible) {\n            rects.push({\n              x: margin,\n              y: 0,\n              width: leftWidth,\n              start: startTime,\n              end: start,\n              text: leftDuration.toFixed(6)\n            });\n            rects.push({\n              x: margin + leftWidth,\n              y: 0,\n              width: regionWidth,\n              start,\n              end,\n              text: regionDuration.toFixed(6)\n            });\n            rects.push({\n              x: margin + leftWidth + regionWidth,\n              y: 0,\n              width: rightWidth,\n              start: end,\n              end: endTime,\n              text: rightDuration.toFixed(6)\n            });\n          } else if (!isStartVisible && isEndVisible) {\n            regionWidth = (end - startTime) * colWidth;\n            rects.push({\n              x: margin,\n              y: 0,\n              width: regionWidth,\n              start: startTime,\n              end,\n              text: (end - startTime).toFixed(6)\n            });\n            rects.push({\n              x: margin + regionWidth,\n              y: 0,\n              width: rightWidth,\n              start: end,\n              end: endTime,\n              text: rightDuration.toFixed(6)\n            });\n          } else if (isStartVisible && !isEndVisible) {\n            regionWidth = (endTime - start) * colWidth;\n            rects.push({\n              x: margin,\n              y: 0,\n              width: leftWidth,\n              start: startTime,\n              end: start,\n              text: leftDuration.toFixed(6)\n            });\n            rects.push({\n              x: margin + leftWidth,\n              y: 0,\n              width: regionWidth,\n              start,\n              end: endTime,\n              text: (endTime - start).toFixed(6)\n            });\n          } else {\n            rects.push({\n              x: margin,\n              y: 0,\n              width: atlasWidth,\n              start: startTime,\n              end: endTime,\n              text: visibleDuration.toFixed(6)\n            });\n          }\n        } else if (selectedTime) {\n          const leftDuration = selectedTime - startTime;\n          const rightDuration = endTime - selectedTime;\n          const leftWidth = leftDuration * colWidth;\n          const rightWidth = rightDuration * colWidth;\n          rects.push({\n            x: margin,\n            y: 0,\n            width: leftWidth,\n            start: startTime,\n            end: selectedTime,\n            text: leftDuration.toFixed(6)\n          });\n          rects.push({\n            x: margin + leftWidth,\n            y: 0,\n            width: rightWidth,\n            start: selectedTime,\n            end: endTime,\n            text: rightDuration.toFixed(6)\n          });\n        } else {\n          rects.push({\n            x: margin,\n            y: 0,\n            width: atlasWidth,\n            start: startTime,\n            end: endTime,\n            text: visibleDuration.toFixed(6)\n          });\n        }\n\n        // second row\n        if (startPrecent > 0) {\n          rects.push({\n            x: 0,\n            y: rowHeight,\n            width: margin,\n            start: 0,\n            end: startTime,\n            text: startTime.toFixed(6)\n          });\n        }\n        rects.push({\n          x: margin,\n          y: rowHeight,\n          width: atlasWidth,\n          start: startTime,\n          end: endTime,\n          text: i18n.translate('VISIBLE_DURATION', {\n            values: {\n              time: visibleDuration.toFixed(6)\n            }\n          })\n        });\n        if (endPrecent < 1) {\n          rects.push({\n            x: margin + atlasWidth + 1,\n            y: rowHeight,\n            width: margin,\n            start: endTime,\n            end: duration,\n            text: (duration - endTime).toFixed(6)\n          });\n        }\n        // third row\n        rects.push({\n          x: 0,\n          y: rowHeight * 2,\n          width: atlasWidth + 2 * margin,\n          start: 0,\n          end: duration,\n          text: i18n.translate('TOTAL_DURATION', {\n            values: {\n              time: duration.toFixed(6)\n            }\n          })\n        });\n        this.rects = rects;\n        this.drawControl();\n      }\n    };\n    this.wrapText = (text, x, sy, align, color) => {\n      if (this.ctx) {\n        this.ctx.textAlign = align;\n        this.ctx.fillStyle = color || style.textColor;\n        this.ctx.font = `${12 * this.ratio}px sans-serif`;\n        this.ctx.fillText(text, x, sy);\n        this.ctx.stroke();\n      }\n    };\n    makeObservable(this, {});\n    this.reactionDisposer = reaction(() => this.contorlChange, () => {\n      this.updateControlRow();\n    });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  get contorlChange() {\n    return {\n      placement: rootStore.analyse.placement,\n      selectedRegion: rootStore.analyse.selectedRegion,\n      selectedTime: rootStore.analyse.selectedTime,\n      displayBuffer: rootStore.analyse.displayBuffer,\n      mousePosition: this.props.mousePosition\n    };\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  get placementData() {\n    const newPlacement = toJS(rootStore.analyse.placement);\n    const keys = Object.keys(newPlacement);\n    for (let i = 0; i < keys.length; i += 1) {\n      const key = keys[i];\n      if (key !== 'duration') {\n        newPlacement[key] *= this.ratio;\n      }\n    }\n    return newPlacement;\n  }\n  componentDidMount() {\n    this.setupCanvas();\n  }\n  componentWillUnmount() {\n    if (this.canvasRef.current) {\n      const canvas = this.canvasRef.current;\n      canvas.removeEventListener('click', this.clickRect);\n    }\n    if (this.reactionDisposer) {\n      this.reactionDisposer();\n    }\n  }\n  drawControl() {\n    this.clearCanvas();\n    if (this.ctx) {\n      const {\n        mousePosition\n      } = this.props;\n      const {\n        timeControlHeight,\n        timeControlTopGap,\n        timelineHeight,\n        atlasHeight,\n        tierHeight\n      } = this.placementData;\n      const rowHeight = (timeControlHeight - timeControlTopGap) / 3;\n      const mouseX = mousePosition.x * this.ratio;\n      const mouseY = mousePosition.y * this.ratio - (timeControlTopGap + timelineHeight + atlasHeight + tierHeight);\n      this.hoverRectIndex = null;\n      this.cursor = Cursor.DEFAULT;\n      for (let i = 0; i < this.rects.length; i += 1) {\n        const {\n          x,\n          y,\n          width,\n          text\n        } = this.rects[i];\n        const hovered = mouseX > x && mouseX < x + width && mouseY > y && mouseY < y + rowHeight;\n        drawRect(this.ctx, x, y, width, rowHeight, hovered ? style.activeColor : style.fillColor);\n        drawRectBorder(this.ctx, x, y + (y === 0 ? 1 : 0), width, rowHeight - 1, style.borderColor);\n        this.wrapText(text, x + width / 2, y + rowHeight / 1.5, Align.CENTER);\n        if (hovered) {\n          this.hoverRectIndex = i;\n          this.cursor = Cursor.POINTER;\n        }\n      }\n    }\n  }\n  render() {\n    const {\n      timeControlHeight,\n      timeControlTopGap\n    } = rootStore.analyse.placement;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"praat-time-control\",\n      style: {\n        height: timeControlHeight,\n        padding: `${timeControlTopGap}px 0 0`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: this.canvasRef,\n      style: {\n        width: '100%',\n        height: '100%',\n        cursor: this.cursor\n      },\n      onContextMenu: e => e.preventDefault(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }\n    }));\n  }\n}, _applyDecoratedDescriptor(_class.prototype, \"contorlChange\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"contorlChange\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"placementData\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"placementData\"), _class.prototype), _class);\nexport default observer(TimeControl);","map":{"version":3,"names":["React","reaction","makeObservable","computed","toJS","observer","rootStore","Align","i18n","Cursor","drawRect","drawRectBorder","style","fillColor","activeColor","borderColor","textColor","TimeControl","_class","Component","constructor","props","canvasRef","createRef","reactionDisposer","ratio","ctx","rects","hoverRectIndex","cursor","DEFAULT","setupCanvas","current","canvas","rect","getBoundingClientRect","window","devicePixelRatio","width","height","getContext","addEventListener","clickRect","start","end","analyse","setSeekto","clearCanvas","updateControlRow","timeControlHeight","margin","atlasWidth","timeControlTopGap","duration","placementData","selectedRegion","selectedTime","displayBuffer","startPrecent","endPrecent","precent","contorlChange","startTime","endTime","visibleDuration","rowHeight","colWidth","regionDuration","leftDuration","rightDuration","regionWidth","leftWidth","rightWidth","isStartVisible","isEndVisible","push","x","y","text","toFixed","translate","values","time","drawControl","wrapText","sy","align","color","textAlign","fillStyle","font","fillText","stroke","placement","mousePosition","newPlacement","keys","Object","i","length","key","componentDidMount","componentWillUnmount","removeEventListener","timelineHeight","atlasHeight","tierHeight","mouseX","mouseY","hovered","CENTER","POINTER","render","createElement","className","padding","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ref","onContextMenu","e","preventDefault","_applyDecoratedDescriptor","prototype","getOwnPropertyDescriptor"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/phonetic-transcription/components/Helper/TimeControl.tsx"],"sourcesContent":["import React from 'react';\nimport { reaction, makeObservable, computed, IReactionDisposer, toJS } from 'mobx';\nimport { observer } from 'mobx-react';\nimport rootStore from '../../store/RootStore';\nimport { Align } from '../../types';\nimport i18n from '../../locales';\nimport Cursor from '../../../common/Cursor';\nimport { drawRect, drawRectBorder } from '../../../../utils/canvas';\n\ninterface TimeControlProps {\n  mousePosition: { x:number; y:number; }\n};\n\ninterface Rect {\n  x: number;\n  y: number;\n  width: number;\n  start: number;\n  end: number;\n  text: string;\n};\n\nconst style = {\n  fillColor: '#D8E1E6',\n  activeColor: '#B2CFFF',\n  borderColor: '#AFB3B4',\n  textColor: '#363B44',\n};\n\nclass TimeControl extends React.Component<TimeControlProps> {\n  canvasRef: React.RefObject<HTMLCanvasElement> = React.createRef();\n\n  /**\n   * reaction disposer\n   */\n  reactionDisposer: IReactionDisposer;\n\n  /**\n   * window devicePixelRatio\n   */\n  ratio = 1;\n\n  /**\n   * canvas rendering Context2D\n   */\n  ctx: CanvasRenderingContext2D | null = null;\n\n  /**\n   * control rects\n   */\n  rects: Rect[] = [];\n\n  /**\n   * hovered rect index\n   */\n  hoverRectIndex: number | null = null;\n\n  cursor = Cursor.DEFAULT;\n\n  constructor(props: TimeControlProps) {\n    super(props);\n    makeObservable(this, {});\n\n    this.reactionDisposer = reaction(\n      () => this.contorlChange,\n      () => {\n        this.updateControlRow();\n      },\n    );\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  @computed get contorlChange() {\n    return {\n      placement: rootStore.analyse.placement,\n      selectedRegion: rootStore.analyse.selectedRegion,\n      selectedTime: rootStore.analyse.selectedTime,\n      displayBuffer: rootStore.analyse.displayBuffer,\n      mousePosition: this.props.mousePosition,\n    };\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  @computed get placementData() {\n    const newPlacement:{[key:string]: number;} = toJS(rootStore.analyse.placement);\n    const keys = Object.keys(newPlacement);\n    for (let i = 0; i < keys.length; i += 1) {\n      const key = keys[i];\n      if (key !== 'duration') {\n        newPlacement[key] *= this.ratio;\n      }\n    }\n    return newPlacement;\n  }\n\n  componentDidMount() {\n    this.setupCanvas();\n  }\n\n  componentWillUnmount() {\n    if (this.canvasRef.current) {\n      const canvas = this.canvasRef.current;\n      canvas.removeEventListener('click', this.clickRect);\n    }\n    if (this.reactionDisposer) {\n      this.reactionDisposer();\n    }\n  }\n\n  setupCanvas = () => {\n    if (this.canvasRef.current) {\n      const canvas = this.canvasRef.current;\n      const rect = canvas.getBoundingClientRect();\n      this.ratio = window.devicePixelRatio;\n      canvas.width = rect.width * this.ratio;\n      canvas.height = rect.height * this.ratio;\n      this.ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n      canvas.addEventListener('click', this.clickRect);\n    }\n  };\n\n  clickRect = () => {\n    if (this.hoverRectIndex !== null) {\n      const { start, end } = this.rects[this.hoverRectIndex];\n      rootStore.analyse.setSeekto({ start, end });\n    }\n  };\n\n  clearCanvas =() => {\n    if (this.canvasRef.current) {\n      const canvas = this.canvasRef.current;\n      const rect = canvas.getBoundingClientRect();\n      canvas.width = rect.width * this.ratio;\n      canvas.height = rect.height * this.ratio;\n    }\n  };\n\n  updateControlRow = () => {\n    const { timeControlHeight, margin, atlasWidth, timeControlTopGap, duration } = this.placementData;\n    const { selectedRegion, selectedTime, displayBuffer: { start: startPrecent, end: endPrecent, precent } } = this.contorlChange;\n    if (duration > 0) {\n      const startTime = startPrecent * duration;\n      const endTime = endPrecent * duration;\n      const visibleDuration = precent * duration;\n      const rects: Rect[] = [];\n      const rowHeight = (timeControlHeight - timeControlTopGap) / 3;\n      const colWidth = atlasWidth / visibleDuration;\n      // first row\n      if (selectedRegion) {\n        const { start, end } = selectedRegion;\n        const regionDuration = end - start;\n        const leftDuration = start - startTime;\n        const rightDuration = endTime - end;\n        let regionWidth = regionDuration * colWidth;\n        const leftWidth = leftDuration * colWidth;\n        const rightWidth = rightDuration * colWidth;\n\n        const isStartVisible = start > startTime + 0.01 && start < endTime - 0.01;\n        const isEndVisible = end > startTime + 0.01 && end < endTime - 0.01;\n\n        if (isStartVisible && isEndVisible) {\n          rects.push({ x: margin, y: 0, width: leftWidth, start: startTime, end: start, text: leftDuration.toFixed(6) });\n          rects.push({ x: margin + leftWidth, y: 0, width: regionWidth, start, end, text: regionDuration.toFixed(6) });\n          rects.push({ x: margin + leftWidth + regionWidth, y: 0, width: rightWidth, start: end, end: endTime, text: rightDuration.toFixed(6) });\n        } else if (!isStartVisible && isEndVisible) {\n          regionWidth = (end - startTime) * colWidth;\n          rects.push({ x: margin, y: 0, width: regionWidth, start: startTime, end, text: (end - startTime).toFixed(6) });\n          rects.push({ x: margin + regionWidth, y: 0, width: rightWidth, start: end, end: endTime, text: rightDuration.toFixed(6) });\n        } else if (isStartVisible && !isEndVisible) {\n          regionWidth = (endTime - start) * colWidth;\n          rects.push({ x: margin, y: 0, width: leftWidth, start: startTime, end: start, text: leftDuration.toFixed(6) });\n          rects.push({ x: margin + leftWidth, y: 0, width: regionWidth, start, end: endTime, text: (endTime - start).toFixed(6) });\n        } else {\n          rects.push({ x: margin, y: 0, width: atlasWidth, start: startTime, end: endTime, text: visibleDuration.toFixed(6) });\n        }\n      } else if (selectedTime) {\n        const leftDuration = selectedTime - startTime;\n        const rightDuration = endTime - selectedTime;\n        const leftWidth = leftDuration * colWidth;\n        const rightWidth = rightDuration * colWidth;\n        rects.push({ x: margin, y: 0, width: leftWidth, start: startTime, end: selectedTime, text: leftDuration.toFixed(6) });\n        rects.push({ x: margin + leftWidth, y: 0, width: rightWidth, start: selectedTime, end: endTime, text: rightDuration.toFixed(6) });\n      } else {\n        rects.push({ x: margin, y: 0, width: atlasWidth, start: startTime, end: endTime, text: visibleDuration.toFixed(6) });\n      }\n\n      // second row\n      if (startPrecent > 0) {\n        rects.push({ x: 0, y: rowHeight, width: margin, start: 0, end: startTime, text: startTime.toFixed(6) });\n      }\n      rects.push({ x: margin, y: rowHeight, width: atlasWidth, start: startTime, end: endTime, text: i18n.translate('VISIBLE_DURATION', { values: { time: visibleDuration.toFixed(6) } }) });\n      if (endPrecent < 1) {\n        rects.push({ x: margin + atlasWidth + 1, y: rowHeight, width: margin, start: endTime, end: duration, text: (duration - endTime).toFixed(6) });\n      }\n      // third row\n      rects.push({ x: 0, y: rowHeight * 2, width: atlasWidth + 2 * margin, start: 0, end: duration, text: i18n.translate('TOTAL_DURATION', { values: { time: duration.toFixed(6) } }) });\n      this.rects = rects;\n      this.drawControl();\n    }\n  };\n\n  drawControl() {\n    this.clearCanvas();\n    if (this.ctx) {\n      const { mousePosition } = this.props;\n      const { timeControlHeight, timeControlTopGap, timelineHeight, atlasHeight, tierHeight } = this.placementData;\n      const rowHeight = (timeControlHeight - timeControlTopGap) / 3;\n      const mouseX = mousePosition.x * this.ratio;\n      const mouseY = mousePosition.y * this.ratio - (timeControlTopGap + timelineHeight + atlasHeight + tierHeight);\n      this.hoverRectIndex = null;\n      this.cursor = Cursor.DEFAULT;\n      for (let i = 0; i < this.rects.length; i += 1) {\n        const { x, y, width, text } = this.rects[i];\n        const hovered = (mouseX > x && mouseX < (x + width)) && (mouseY > y && mouseY < y + rowHeight);\n        drawRect(this.ctx, x, y, width, rowHeight, hovered ? style.activeColor : style.fillColor);\n        drawRectBorder(this.ctx, x, y + (y === 0 ? 1 : 0), width, rowHeight - 1, style.borderColor);\n        this.wrapText(text, x + width / 2, y + rowHeight / 1.5, Align.CENTER);\n        if (hovered) {\n          this.hoverRectIndex = i;\n          this.cursor = Cursor.POINTER;\n        }\n      }\n    }\n  }\n\n  wrapText = (text: string, x: number, sy: number, align: CanvasTextAlign, color?: string) => {\n    if (this.ctx) {\n      this.ctx.textAlign = align;\n      this.ctx.fillStyle = color || style.textColor;\n      this.ctx.font = `${12 * this.ratio}px sans-serif`;\n      this.ctx.fillText(text, x, sy);\n      this.ctx.stroke();\n    }\n  };\n\n  render() {\n    const { timeControlHeight, timeControlTopGap } = rootStore.analyse.placement;\n    return (\n      <div className=\"praat-time-control\" style={{ height: timeControlHeight, padding: `${timeControlTopGap}px 0 0` }}>\n        <canvas ref={this.canvasRef} style={{ width: '100%', height: '100%', cursor: this.cursor }} onContextMenu={(e) => e.preventDefault()} />\n      </div>\n    );\n  }\n}\n\nexport default observer(TimeControl);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}