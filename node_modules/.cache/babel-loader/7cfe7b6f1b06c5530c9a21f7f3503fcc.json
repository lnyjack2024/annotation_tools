{"ast":null,"code":"import{Base64}from'js-base64';import{cloneDeep}from'lodash';import{ToolMode,isAnnotationReadonly,isQA,isTemplatePreview}from'../utils/tool-mode';import{fetchResultByUrl,getLocale}from'../utils';import{Language}from'../utils/constants';var ToolFileType=/*#__PURE__*/function(ToolFileType){ToolFileType[\"LABEL_RESULT\"]=\"LABEL_RESULT\";ToolFileType[\"QA_RESULT\"]=\"QA_RESULT\";ToolFileType[\"TEMP_LABEL_RESULT\"]=\"LABEL_TEMP_RESULT\";ToolFileType[\"TEMP_QA_RESULT\"]=\"QA_TEMP_RESULT\";ToolFileType[\"STAT_RESULT\"]=\"STAT_RESULT\";ToolFileType[\"AUDIT_RESULT\"]=\"AUDIT_RESULT\";ToolFileType[\"UNKNOWN\"]=\"UNKNOWN\";return ToolFileType;}(ToolFileType||{});// unknown\nvar FileType=/*#__PURE__*/function(FileType){FileType[\"TEXT\"]=\"text/plain\";return FileType;}(FileType||{});const AUDIT_DIRECTORY='audit';const ErrMsg={RESULT_LOAD_ERROR:{[Language.EN_US]:'Failed to load annotation result. Submit is denied. Please refresh page and try again.',[Language.ZH_CN]:'标注结果加载失败，禁止提交数据，请刷新后重试。',[Language.JA_JP]:'アノテーション結果の読み込みに失敗しました。提出は拒否されました。ページを更新して、もう一度お試しください。',[Language.KO_KR]:'주석 결과를 로드하지 못했습니다. 제출이 거부되었습니다. 페이지를 새로고침하고 다시 시도하십시오.'},LOAD_CONTENT_NOT_DEFINED:{[Language.EN_US]:'No loadContent function defined.',[Language.ZH_CN]:'未定义 loadContent 方法。',[Language.JA_JP]:'loadContent 関数が定義されていません。',[Language.KO_KR]:'loadContent 함수가 정의되지 않았습니다.'},SAVE_CONTENT_NOT_DEFINED:{[Language.EN_US]:'No saveContent function defined.',[Language.ZH_CN]:'未定义 saveContent 方法。',[Language.JA_JP]:'saveContent 関数が定義されていません。',[Language.KO_KR]:'saveContent 함수가 정의되지 않았습니다.'}};export default class JobProxy{get resultId(){return\"\".concat(this.jobId,\".\").concat(this.taskId,\".\").concat(this.recordId,\".result\");}get reviewId(){return\"\".concat(this.jobId,\".\").concat(this.taskId,\".\").concat(this.recordId,\".review\");}get resultFileName(){return\"\".concat(this.resultId,\".json\");}get reviewFileName(){return\"\".concat(this.reviewId,\".json\");}get auditFileName(){return\"\".concat(this.auditId,\".json\");}get resultStatFileName(){return\"\".concat(this.resultId,\".stat.json\");}get reviewStatFileName(){if(this.toolMode===ToolMode.AUDIT){// for audit task, no job id provieded, so use audit id instead\nreturn\"\".concat(this.auditId,\".stat.json\");}return\"\".concat(this.reviewId,\".stat.json\");}get fileDirectory(){if(this.toolMode===ToolMode.AUDIT){// for audit task, no job id provieded, so use a constant\nreturn AUDIT_DIRECTORY;}return this.jobId;}constructor(_ref){var _this=this;let{locale,toolName,toolMode,projectId,flowId,jobId,taskId,recordId,auditId,reviewUrl,reviewFrom,flowData,templateConfig,saveContent,loadContent}=_ref;this.locale=void 0;this.toolName=void 0;this.toolMode=ToolMode.TEMPLATE_PREVIEW;this.projectId='';this.flowId='';this.jobId='';this.taskId='';this.recordId='';this.auditId='';this.reviewUrl='';this.reviewFrom=void 0;this.reviewFromLoadError=false;this.templateConfig=void 0;this.flowData=void 0;this.saveContent=void 0;this.loadContent=void 0;/**\n   * save file\n   * @param file\n   * @param toolFileType\n   */this.saveFile=function(file){let toolFileType=arguments.length>1&&arguments[1]!==undefined?arguments[1]:ToolFileType.UNKNOWN;return new Promise((resolve,reject)=>{const reader=new FileReader();reader.readAsDataURL(file);reader.onload=async()=>{const base64Str=reader.result;const url=await _this.save(base64Str,file.type,\"\".concat(Date.now(),\".\").concat(file.name),toolFileType);if(url){resolve(url);}else{reject();}};reader.onerror=e=>reject(e);});};// set locale\nthis.locale=getLocale(locale);// annotation type, unique key for the processor\nthis.toolName=toolName;this.setMode(toolMode);this.setJobInfo(projectId,flowId,jobId,taskId,recordId);this.setAuditId(auditId);this.setReviewUrl(reviewUrl);this.reviewFrom=reviewFrom;this.flowData=JSON.stringify(flowData);this.templateConfig=cloneDeep(templateConfig);// saveContent & loadContent is provided by the platform\n// if no these two functions, load & save reviews should be implemented by each tool self\nthis.saveContent=saveContent;this.loadContent=loadContent;}setMode(toolMode){if(Object.values(ToolMode).includes(toolMode)){this.toolMode=toolMode;}else{// default is a template preview job\nthis.toolMode=ToolMode.TEMPLATE_PREVIEW;}}setJobInfo(projectId,flowId,jobId,taskId,recordId){this.projectId=projectId||'';this.flowId=flowId||'';this.jobId=jobId||'';this.taskId=taskId||'';this.recordId=recordId||'';}setAuditId(auditId){this.auditId=auditId||\"\".concat(this.jobId,\".\").concat(this.recordId,\".audit\");}setReviewUrl(reviewUrl){this.reviewUrl=reviewUrl||'';}/**\n   * load data by loadContent\n   * @param filename\n   * @param directory\n   */async load(filename){let directory=arguments.length>1&&arguments[1]!==undefined?arguments[1]:this.fileDirectory;if(!this.loadContent||{}.toString.call(this.loadContent)!=='[object Function]'){throw new Error(ErrMsg.LOAD_CONTENT_NOT_DEFINED[this.locale]);}let data;try{const res=await this.loadContent(filename,directory);data=JSON.parse(res);}catch(e){// load error\n}return data;}/**\n   * save data by saveContent\n   * @param base64\n   * @param filetype\n   * @param filename\n   * @param toolFileType\n   */async save(base64,filetype,filename){let toolFileType=arguments.length>3&&arguments[3]!==undefined?arguments[3]:ToolFileType.UNKNOWN;if(!this.saveContent||{}.toString.call(this.saveContent)!=='[object Function]'){throw new Error(ErrMsg.SAVE_CONTENT_NOT_DEFINED[this.locale]);}let type=toolFileType;if(isTemplatePreview(this.toolMode)){// for template preview mode, all save func should be unknown type\ntype=ToolFileType.UNKNOWN;}return this.saveContent(base64,filetype,filename,this.fileDirectory,this.jobId,this.projectId,this.recordId,type,this.flowId);}/**\n   * load temp save annotation result\n   */async loadSavedResult(){if(isAnnotationReadonly(this.toolMode)){// not load temp saved annotation when is readonly\nreturn undefined;}return this.load(this.resultFileName);}/**\n   * load annotation result from last task\n   */async loadReviewFrom(){this.reviewFromLoadError=false;let result;if(typeof this.reviewFrom==='object'){result=this.reviewFrom;}else if(typeof this.reviewFrom==='string'&&this.reviewFrom!==''){if(this.reviewFrom.startsWith('http')){try{result=await fetchResultByUrl(this.reviewFrom);}catch(e){this.reviewFromLoadError=true;throw e;}}else{result=JSON.parse(this.reviewFrom);}}return result;}/**\n   * simply to load annotation result\n   */async loadResult(){// get temp saved annotations\nlet result=await this.loadSavedResult();// get result from review_from\nif(!result){result=await this.loadReviewFrom();}return result;}/**\n   * load temp saved reviews\n   */async loadSavedReviews(){if(!isQA(this.toolMode)){// not load temp saved reviews when is not a qa job\nreturn undefined;}return this.load(this.reviewFileName);}/**\n   * load reviews from last task by link\n   * @param reviewUrl\n   */async loadReviewsFromReview(reviewUrl){let reviews;if(this.toolMode!==ToolMode.AUDIT){try{reviews=await fetchResultByUrl(reviewUrl);}catch(e){// get from review url error\n}}return reviews;}/**\n   * load audit reviews\n   */async loadReviewsFromAudit(){return this.load(this.auditFileName,AUDIT_DIRECTORY);}/**\n   * simply to load reviews\n   * @param reviewUrl\n   */async loadReviews(reviewUrl){// get temp saved reviews\nlet reviews=await this.loadSavedReviews();const url=reviewUrl||this.reviewUrl;if(!reviews&&url){// get from review url first\nreviews=await this.loadReviewsFromReview(url);}if(!reviews){// then get from audit if necessary\nreviews=await this.loadReviewsFromAudit();}return reviews;}/**\n   * save annotation result\n   * @param data\n   * @param isSubmit\n   */async saveResult(data){let isSubmit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(this.reviewFromLoadError){throw new Error(ErrMsg.RESULT_LOAD_ERROR[this.locale]);}const base64=Base64.encode(JSON.stringify(data));const filename=\"\".concat(isSubmit?\"R.\".concat(new Date().getTime(),\".\"):'').concat(this.resultFileName);const toolFileType=isSubmit?ToolFileType.LABEL_RESULT:ToolFileType.TEMP_LABEL_RESULT;return this.save(base64,FileType.TEXT,filename,toolFileType);}/**\n   * save reviews\n   * @param data\n   * @param isSubmit\n   */async saveReviews(data){let isSubmit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(this.toolMode===ToolMode.AUDIT){return this.saveAudit(data);}const base64=Base64.encode(JSON.stringify(data));const toolFileType=isSubmit?ToolFileType.QA_RESULT:ToolFileType.TEMP_QA_RESULT;return this.save(base64,FileType.TEXT,this.reviewFileName,toolFileType);}/**\n   * save audit reviews\n   * @param data\n   */async saveAudit(data){const base64=Base64.encode(JSON.stringify(data));return this.save(base64,FileType.TEXT,this.auditFileName,ToolFileType.AUDIT_RESULT);}/**\n   * save annotation statistics\n   * @param data\n   */async saveResultStat(data){const base64=Base64.encode(JSON.stringify(data));return this.save(base64,FileType.TEXT,this.resultStatFileName,ToolFileType.STAT_RESULT);}/**\n   * save review statistics (including statistics for audit task)\n   * @param data\n   */async saveReviewStat(data){const base64=Base64.encode(JSON.stringify(data));return this.save(base64,FileType.TEXT,this.reviewStatFileName,ToolFileType.STAT_RESULT);}}","map":{"version":3,"names":["Base64","cloneDeep","ToolMode","isAnnotationReadonly","isQA","isTemplatePreview","fetchResultByUrl","getLocale","Language","ToolFileType","FileType","AUDIT_DIRECTORY","ErrMsg","RESULT_LOAD_ERROR","EN_US","ZH_CN","JA_JP","KO_KR","LOAD_CONTENT_NOT_DEFINED","SAVE_CONTENT_NOT_DEFINED","JobProxy","resultId","concat","jobId","taskId","recordId","reviewId","resultFileName","reviewFileName","auditFileName","auditId","resultStatFileName","reviewStatFileName","toolMode","AUDIT","fileDirectory","constructor","_ref","_this","locale","toolName","projectId","flowId","reviewUrl","reviewFrom","flowData","templateConfig","saveContent","loadContent","TEMPLATE_PREVIEW","reviewFromLoadError","saveFile","file","toolFileType","arguments","length","undefined","UNKNOWN","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","base64Str","result","url","save","type","Date","now","name","onerror","e","setMode","setJobInfo","setAuditId","setReviewUrl","JSON","stringify","Object","values","includes","load","filename","directory","toString","call","Error","data","res","parse","base64","filetype","loadSavedResult","loadReviewFrom","startsWith","loadResult","loadSavedReviews","loadReviewsFromReview","reviews","loadReviewsFromAudit","loadReviews","saveResult","isSubmit","encode","getTime","LABEL_RESULT","TEMP_LABEL_RESULT","TEXT","saveReviews","saveAudit","QA_RESULT","TEMP_QA_RESULT","AUDIT_RESULT","saveResultStat","STAT_RESULT","saveReviewStat"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/libs/JobProxy.ts"],"sourcesContent":["import { Base64 } from 'js-base64';\nimport { cloneDeep } from 'lodash';\nimport { AnnotationType } from '../types';\nimport { ToolMode, isAnnotationReadonly, isQA, isTemplatePreview } from '../utils/tool-mode';\nimport { fetchResultByUrl, getLocale } from '../utils';\nimport { Language } from '../utils/constants';\n\ninterface JobProxyParams {\n  locale?: string;\n  toolName: AnnotationType;\n  toolMode?: string;\n  projectId?: string;\n  flowId?: string;\n  jobId?: string;\n  taskId?: string;\n  recordId?: string;\n  auditId?: string;\n  reviewUrl?: string;\n  reviewFrom?: any;\n  flowData?: any;\n  templateConfig: any;\n  saveContent?: (binary: string, filetype: string, filename: string, directory: string, jobId: string, projectId: string, recordId: string, toolFileType: ToolFileType, flowId: string) => Promise<string>;\n  loadContent?: (filename: string, directory: string) => Promise<string>;\n}\n\nenum ToolFileType {\n  LABEL_RESULT = 'LABEL_RESULT', // annotation result\n  QA_RESULT = 'QA_RESULT', // review result\n  TEMP_LABEL_RESULT = 'LABEL_TEMP_RESULT', // temp saved annotation result\n  TEMP_QA_RESULT = 'QA_TEMP_RESULT', // temp saved review result\n  STAT_RESULT = 'STAT_RESULT', // statistics result\n  AUDIT_RESULT = 'AUDIT_RESULT', // audit result\n  UNKNOWN = 'UNKNOWN', // unknown\n}\n\nenum FileType {\n  TEXT = 'text/plain',\n}\n\nconst AUDIT_DIRECTORY = 'audit';\nconst ErrMsg = {\n  RESULT_LOAD_ERROR: {\n    [Language.EN_US]: 'Failed to load annotation result. Submit is denied. Please refresh page and try again.',\n    [Language.ZH_CN]: '标注结果加载失败，禁止提交数据，请刷新后重试。',\n    [Language.JA_JP]: 'アノテーション結果の読み込みに失敗しました。提出は拒否されました。ページを更新して、もう一度お試しください。',\n    [Language.KO_KR]: '주석 결과를 로드하지 못했습니다. 제출이 거부되었습니다. 페이지를 새로고침하고 다시 시도하십시오.',\n  },\n  LOAD_CONTENT_NOT_DEFINED: {\n    [Language.EN_US]: 'No loadContent function defined.',\n    [Language.ZH_CN]: '未定义 loadContent 方法。',\n    [Language.JA_JP]: 'loadContent 関数が定義されていません。',\n    [Language.KO_KR]: 'loadContent 함수가 정의되지 않았습니다.',\n  },\n  SAVE_CONTENT_NOT_DEFINED: {\n    [Language.EN_US]: 'No saveContent function defined.',\n    [Language.ZH_CN]: '未定义 saveContent 方法。',\n    [Language.JA_JP]: 'saveContent 関数が定義されていません。',\n    [Language.KO_KR]: 'saveContent 함수가 정의되지 않았습니다.',\n  },\n};\n\nexport default class JobProxy {\n  locale: Language;\n\n  toolName: AnnotationType;\n\n  toolMode = ToolMode.TEMPLATE_PREVIEW;\n\n  projectId = '';\n\n  flowId = '';\n\n  jobId = '';\n\n  taskId = '';\n\n  recordId = '';\n\n  auditId = '';\n\n  reviewUrl = '';\n\n  reviewFrom: any;\n\n  reviewFromLoadError = false;\n\n  templateConfig: any;\n\n  flowData?: string;\n\n  saveContent?: (binary: string, filetype: string, filename: string, directory: string, jobId: string, projectId: string, recordId: string, toolFileType: ToolFileType, flowId: string) => Promise<string>;\n\n  loadContent?: (filename: string, directory: string) => Promise<string>;\n\n  get resultId() {\n    return `${this.jobId}.${this.taskId}.${this.recordId}.result`;\n  }\n\n  get reviewId() {\n    return `${this.jobId}.${this.taskId}.${this.recordId}.review`;\n  }\n\n  get resultFileName() {\n    return `${this.resultId}.json`;\n  }\n\n  get reviewFileName() {\n    return `${this.reviewId}.json`;\n  }\n\n  get auditFileName() {\n    return `${this.auditId}.json`;\n  }\n\n  get resultStatFileName() {\n    return `${this.resultId}.stat.json`;\n  }\n\n  get reviewStatFileName() {\n    if (this.toolMode === ToolMode.AUDIT) {\n      // for audit task, no job id provieded, so use audit id instead\n      return `${this.auditId}.stat.json`;\n    }\n    return `${this.reviewId}.stat.json`;\n  }\n\n  get fileDirectory() {\n    if (this.toolMode === ToolMode.AUDIT) {\n      // for audit task, no job id provieded, so use a constant\n      return AUDIT_DIRECTORY;\n    }\n    return this.jobId;\n  }\n\n  constructor({\n    locale,\n    toolName,\n    toolMode,\n    projectId,\n    flowId,\n    jobId,\n    taskId,\n    recordId,\n    auditId,\n    reviewUrl,\n    reviewFrom,\n    flowData,\n    templateConfig,\n    saveContent,\n    loadContent,\n  }: JobProxyParams) {\n    // set locale\n    this.locale = getLocale(locale);\n    // annotation type, unique key for the processor\n    this.toolName = toolName;\n\n    this.setMode(toolMode);\n    this.setJobInfo(projectId, flowId, jobId, taskId, recordId);\n    this.setAuditId(auditId);\n    this.setReviewUrl(reviewUrl);\n    this.reviewFrom = reviewFrom;\n    this.flowData = JSON.stringify(flowData);\n    this.templateConfig = cloneDeep(templateConfig);\n\n    // saveContent & loadContent is provided by the platform\n    // if no these two functions, load & save reviews should be implemented by each tool self\n    this.saveContent = saveContent;\n    this.loadContent = loadContent;\n  }\n\n  setMode(toolMode?: string) {\n    if (Object.values(ToolMode).includes(toolMode as ToolMode)) {\n      this.toolMode = toolMode as ToolMode;\n    } else {\n      // default is a template preview job\n      this.toolMode = ToolMode.TEMPLATE_PREVIEW;\n    }\n  }\n\n  setJobInfo(projectId?: string, flowId?: string, jobId?: string, taskId?: string, recordId?: string) {\n    this.projectId = projectId || '';\n    this.flowId = flowId || '';\n    this.jobId = jobId || '';\n    this.taskId = taskId || '';\n    this.recordId = recordId || '';\n  }\n\n  setAuditId(auditId?: string) {\n    this.auditId = auditId || `${this.jobId}.${this.recordId}.audit`;\n  }\n\n  setReviewUrl(reviewUrl?: string) {\n    this.reviewUrl = reviewUrl || '';\n  }\n\n  /**\n   * load data by loadContent\n   * @param filename\n   * @param directory\n   */\n  private async load(filename: string, directory = this.fileDirectory) {\n    if (!this.loadContent || {}.toString.call(this.loadContent) !== '[object Function]') {\n      throw new Error(ErrMsg.LOAD_CONTENT_NOT_DEFINED[this.locale]);\n    }\n\n    let data;\n    try {\n      const res = await this.loadContent(filename, directory);\n      data = JSON.parse(res);\n    } catch (e) {\n      // load error\n    }\n    return data;\n  }\n\n  /**\n   * save data by saveContent\n   * @param base64\n   * @param filetype\n   * @param filename\n   * @param toolFileType\n   */\n  private async save(base64: string, filetype: string, filename: string, toolFileType = ToolFileType.UNKNOWN) {\n    if (!this.saveContent || {}.toString.call(this.saveContent) !== '[object Function]') {\n      throw new Error(ErrMsg.SAVE_CONTENT_NOT_DEFINED[this.locale]);\n    }\n\n    let type = toolFileType;\n    if (isTemplatePreview(this.toolMode)) {\n      // for template preview mode, all save func should be unknown type\n      type = ToolFileType.UNKNOWN;\n    }\n    return this.saveContent(\n      base64,\n      filetype,\n      filename,\n      this.fileDirectory,\n      this.jobId,\n      this.projectId,\n      this.recordId,\n      type,\n      this.flowId,\n    );\n  }\n\n  /**\n   * load temp save annotation result\n   */\n  async loadSavedResult() {\n    if (isAnnotationReadonly(this.toolMode)) {\n      // not load temp saved annotation when is readonly\n      return undefined;\n    }\n    return this.load(this.resultFileName);\n  }\n\n  /**\n   * load annotation result from last task\n   */\n  async loadReviewFrom() {\n    this.reviewFromLoadError = false;\n    let result;\n    if (typeof this.reviewFrom === 'object') {\n      result = this.reviewFrom;\n    } else if (typeof this.reviewFrom === 'string' && this.reviewFrom !== '') {\n      if (this.reviewFrom.startsWith('http')) {\n        try {\n          result = await fetchResultByUrl(this.reviewFrom);\n        } catch (e) {\n          this.reviewFromLoadError = true;\n          throw e;\n        }\n      } else {\n        result = JSON.parse(this.reviewFrom);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * simply to load annotation result\n   */\n  async loadResult() {\n    // get temp saved annotations\n    let result = await this.loadSavedResult();\n\n    // get result from review_from\n    if (!result) {\n      result = await this.loadReviewFrom();\n    }\n\n    return result;\n  }\n\n  /**\n   * load temp saved reviews\n   */\n  async loadSavedReviews() {\n    if (!isQA(this.toolMode)) {\n      // not load temp saved reviews when is not a qa job\n      return undefined;\n    }\n    return this.load(this.reviewFileName);\n  }\n\n  /**\n   * load reviews from last task by link\n   * @param reviewUrl\n   */\n  async loadReviewsFromReview(reviewUrl: string) {\n    let reviews;\n    if (this.toolMode !== ToolMode.AUDIT) {\n      try {\n        reviews = await fetchResultByUrl(reviewUrl);\n      } catch (e) {\n        // get from review url error\n      }\n    }\n    return reviews;\n  }\n\n  /**\n   * load audit reviews\n   */\n  async loadReviewsFromAudit() {\n    return this.load(this.auditFileName, AUDIT_DIRECTORY);\n  }\n\n  /**\n   * simply to load reviews\n   * @param reviewUrl\n   */\n  async loadReviews(reviewUrl?: string) {\n    // get temp saved reviews\n    let reviews = await this.loadSavedReviews();\n    const url = reviewUrl || this.reviewUrl;\n    if (!reviews && url) {\n      // get from review url first\n      reviews = await this.loadReviewsFromReview(url);\n    }\n    if (!reviews) {\n      // then get from audit if necessary\n      reviews = await this.loadReviewsFromAudit();\n    }\n    return reviews;\n  }\n\n  /**\n   * save annotation result\n   * @param data\n   * @param isSubmit\n   */\n  async saveResult(data: unknown, isSubmit = false) {\n    if (this.reviewFromLoadError) {\n      throw new Error(ErrMsg.RESULT_LOAD_ERROR[this.locale]);\n    }\n    const base64 = Base64.encode(JSON.stringify(data));\n    const filename = `${isSubmit ? `R.${new Date().getTime()}.` : ''}${this.resultFileName}`;\n    const toolFileType = isSubmit ? ToolFileType.LABEL_RESULT : ToolFileType.TEMP_LABEL_RESULT;\n    return this.save(base64, FileType.TEXT, filename, toolFileType);\n  }\n\n  /**\n   * save reviews\n   * @param data\n   * @param isSubmit\n   */\n  async saveReviews(data: unknown, isSubmit = false) {\n    if (this.toolMode === ToolMode.AUDIT) {\n      return this.saveAudit(data);\n    }\n    const base64 = Base64.encode(JSON.stringify(data));\n    const toolFileType = isSubmit ? ToolFileType.QA_RESULT : ToolFileType.TEMP_QA_RESULT;\n    return this.save(base64, FileType.TEXT, this.reviewFileName, toolFileType);\n  }\n\n  /**\n   * save audit reviews\n   * @param data\n   */\n  async saveAudit(data: unknown) {\n    const base64 = Base64.encode(JSON.stringify(data));\n    return this.save(base64, FileType.TEXT, this.auditFileName, ToolFileType.AUDIT_RESULT);\n  }\n\n  /**\n   * save annotation statistics\n   * @param data\n   */\n  async saveResultStat(data: unknown) {\n    const base64 = Base64.encode(JSON.stringify(data));\n    return this.save(base64, FileType.TEXT, this.resultStatFileName, ToolFileType.STAT_RESULT);\n  }\n\n  /**\n   * save review statistics (including statistics for audit task)\n   * @param data\n   */\n  async saveReviewStat(data: unknown) {\n    const base64 = Base64.encode(JSON.stringify(data));\n    return this.save(base64, FileType.TEXT, this.reviewStatFileName, ToolFileType.STAT_RESULT);\n  }\n\n  /**\n   * save file\n   * @param file\n   * @param toolFileType\n   */\n  saveFile = (file: File, toolFileType = ToolFileType.UNKNOWN) => new Promise<string>((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = async () => {\n      const base64Str = reader.result as string;\n      const url = await this.save(base64Str, file.type, `${Date.now()}.${file.name}`, toolFileType);\n      if (url) {\n        resolve(url);\n      } else {\n        reject();\n      }\n    };\n    reader.onerror = (e) => reject(e);\n  });\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}