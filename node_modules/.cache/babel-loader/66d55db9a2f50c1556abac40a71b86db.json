{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/SegmentAbstract/LineAbstractItem/LineAbstractItem.jsx\";\nimport React, { useState } from 'react';\nimport { Input, message } from 'antd';\nimport { connect } from 'react-redux';\nimport hexToRgba from 'hex-to-rgba';\nimport { CopyOutlined, CheckOutlined } from '@ant-design/icons';\nimport { setLineText, setAttributeFocusInfo } from '../../../redux/action';\nimport './LineAbstractItem.scss';\nimport { defaultColor, attributeType } from '../../../constants';\nimport { wordCount, copyTextToClipboard } from '../../../../../utils';\nimport { getFieldDisplayLabel } from '../../../../../utils/form';\nimport i18n from '../../../locales';\nconst LineAbstractItem = props => {\n  var _props$lineConfig$fie;\n  const [isCopied, setIsCopied] = useState(false);\n  const color = props.ontology.get(props.line.role) ? hexToRgba(props.ontology.get(props.line.role), defaultColor.defaultAlpha) : 'transparent';\n  const validConfig = props.lineConfig.fields.map(value => value.name) || [];\n  const efOntologyVisible = (_props$lineConfig$fie = props.lineConfig.fields.find(v => v.name === 'ef-ontology')) === null || _props$lineConfig$fie === void 0 ? void 0 : _props$lineConfig$fie.visible;\n  const handleChangeInput = e => {\n    props.setLineText({\n      videoIndex: null,\n      segmentIndex: props.segmentIndex,\n      lineIndex: props.lineIndex,\n      text: e.target.value\n    });\n  };\n  const handleInputClick = e => {\n    e.stopPropagation();\n    props.setCurrentSegment({\n      index: props.segmentIndex\n    });\n    e.target.focus();\n  };\n  const handleAttributeClick = (e, key) => {\n    e.stopPropagation();\n    props.setCurrentSegment({\n      index: props.segmentIndex\n    });\n    props.setAttributeFocusInfo({\n      segmentIndex: props.segmentIndex,\n      type: attributeType.line,\n      lineIndex: props.lineIndex,\n      key\n    });\n  };\n  const handleCopyClick = async e => {\n    e.stopPropagation();\n    try {\n      await copyTextToClipboard(props.line.text || '');\n      message.success(i18n.translate('SEGMENT_COPY_SUCESS'));\n      setIsCopied(true);\n      const timer = setTimeout(() => {\n        clearTimeout(timer);\n        setIsCopied(false);\n      }, 1500);\n    } catch (error) {\n      message.success(i18n.translate('SEGMENT_COPY_ERROR'));\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line react/jsx-filename-extension\n    React.createElement(\"div\", {\n      className: \"line-abstract-item-container segment-abstract-row\",\n      style: {\n        borderLeft: `6px solid ${color}`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }\n    }, props.client === 'hw-translation' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input.TextArea, {\n      className: \"line-abstract-item-text-input-hw\",\n      value: props.line.text,\n      onClick: e => handleInputClick(e),\n      disabled: true,\n      autoComplete: \"off\",\n      autoSize: {\n        minRows: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"line-abstract-item-head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, props.existRole && /*#__PURE__*/React.createElement(LineAbstractRoleTag, {\n      color: color,\n      role: props.line.role,\n      handleClick: e => {\n        handleAttributeClick(e, 'role');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }), Object.keys(props.line.attributes).filter(k => k === 'ef-ontology' && efOntologyVisible !== false || k !== 'ef-ontology').map((key, index) => validConfig.indexOf(key) >= 0 && props.line.attributes[key] !== undefined && props.line.attributes[key] !== '' ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"line-abstract-item-category\"\n      // eslint-disable-next-line react/no-array-index-key\n      ,\n      key: `line-abstract-item-category${index}`,\n      onClick: e => {\n        handleAttributeClick(e, key);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, getFieldDisplayLabel(props.line.attributes[key], props.lineFieldMap[key]) || ' - ') : null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"line-abstract-item-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"line-abstract-item-text-cnt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }, wordCount(props.line.text)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, \"(\", props.line.text.length, \")\")), /*#__PURE__*/React.createElement(Input, {\n      className: \"line-abstract-item-text-input\",\n      value: props.line.text,\n      onChange: e => handleChangeInput(e),\n      onClick: e => handleInputClick(e),\n      disabled: true,\n      autoComplete: \"off\",\n      onFocus: () => {\n        window.disableLongAudioHotKeys = true;\n      },\n      onBlur: () => {\n        window.disableLongAudioHotKeys = false;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"segment-abstract-copy\",\n      onClick: handleCopyClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }\n    }, isCopied ? /*#__PURE__*/React.createElement(CheckOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(CopyOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 41\n      }\n    })))\n  );\n};\nconst LineAbstractRoleTag = props => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"line-abstract-item-role\",\n  onClick: props.handleClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"line-abstract-item-role-color\",\n  style: {\n    backgroundColor: props.color\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }\n}), props.role);\nconst mapStateToProps = state => ({\n  ontology: state.ontology,\n  segmentConfig: state.segmentConfig,\n  lineConfig: state.lineConfig,\n  currentSegment: state.currentSegment,\n  toolMode: state.toolMode,\n  client: state.client,\n  lineFieldMap: state.lineFieldMap\n});\nconst mapDispatchToProps = {\n  setLineText,\n  setAttributeFocusInfo\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(LineAbstractItem);","map":{"version":3,"names":["React","useState","Input","message","connect","hexToRgba","CopyOutlined","CheckOutlined","setLineText","setAttributeFocusInfo","defaultColor","attributeType","wordCount","copyTextToClipboard","getFieldDisplayLabel","i18n","LineAbstractItem","props","_props$lineConfig$fie","isCopied","setIsCopied","color","ontology","get","line","role","defaultAlpha","validConfig","lineConfig","fields","map","value","name","efOntologyVisible","find","v","visible","handleChangeInput","e","videoIndex","segmentIndex","lineIndex","text","target","handleInputClick","stopPropagation","setCurrentSegment","index","focus","handleAttributeClick","key","type","handleCopyClick","success","translate","timer","setTimeout","clearTimeout","error","createElement","className","style","borderLeft","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","client","Fragment","TextArea","onClick","disabled","autoComplete","autoSize","minRows","existRole","LineAbstractRoleTag","handleClick","Object","keys","attributes","filter","k","indexOf","undefined","lineFieldMap","length","onChange","onFocus","window","disableLongAudioHotKeys","onBlur","backgroundColor","mapStateToProps","state","segmentConfig","currentSegment","toolMode","mapDispatchToProps"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/SegmentAbstract/LineAbstractItem/LineAbstractItem.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Input, message } from 'antd';\nimport { connect } from 'react-redux';\nimport hexToRgba from 'hex-to-rgba';\nimport { CopyOutlined, CheckOutlined } from '@ant-design/icons';\nimport { setLineText, setAttributeFocusInfo } from '../../../redux/action';\nimport './LineAbstractItem.scss';\nimport { defaultColor, attributeType } from '../../../constants';\nimport { wordCount, copyTextToClipboard } from '../../../../../utils';\nimport { getFieldDisplayLabel } from '../../../../../utils/form';\nimport i18n from '../../../locales';\n\nconst LineAbstractItem = ((props) => {\n  const [isCopied, setIsCopied] = useState(false);\n\n  const color = props.ontology.get(props.line.role)\n    ? hexToRgba(props.ontology.get(props.line.role), defaultColor.defaultAlpha)\n    : 'transparent';\n  const validConfig = props.lineConfig.fields.map((value) => value.name) || [];\n  const efOntologyVisible = props.lineConfig.fields.find((v) => v.name === 'ef-ontology')?.visible;\n\n  const handleChangeInput = ((e) => {\n    props.setLineText({\n      videoIndex: null,\n      segmentIndex: props.segmentIndex,\n      lineIndex: props.lineIndex,\n      text: e.target.value,\n    });\n  });\n\n  const handleInputClick = (e) => {\n    e.stopPropagation();\n    props.setCurrentSegment({ index: props.segmentIndex });\n    e.target.focus();\n  };\n\n  const handleAttributeClick = (e, key) => {\n    e.stopPropagation();\n    props.setCurrentSegment({ index: props.segmentIndex });\n    props.setAttributeFocusInfo({\n      segmentIndex: props.segmentIndex,\n      type: attributeType.line,\n      lineIndex: props.lineIndex,\n      key,\n    });\n  };\n\n  const handleCopyClick = async (e) => {\n    e.stopPropagation();\n    try {\n      await copyTextToClipboard(props.line.text || '');\n      message.success(i18n.translate('SEGMENT_COPY_SUCESS'));\n      setIsCopied(true);\n      const timer = setTimeout(() => {\n        clearTimeout(timer);\n        setIsCopied(false);\n      }, 1500);\n    } catch (error) {\n      message.success(i18n.translate('SEGMENT_COPY_ERROR'));\n    }\n  };\n\n  return (\n    // eslint-disable-next-line react/jsx-filename-extension\n    <div\n      className=\"line-abstract-item-container segment-abstract-row\"\n      style={{ borderLeft: `6px solid ${color}` }}\n    >\n      { props.client === 'hw-translation' ? (\n        <>\n          <Input.TextArea\n            className=\"line-abstract-item-text-input-hw\"\n            value={props.line.text}\n            onClick={(e) => handleInputClick(e)}\n            disabled\n            autoComplete=\"off\"\n            autoSize={{ minRows: 1 }}\n          />\n        </>\n      ) : (\n        <>\n          <div className=\"line-abstract-item-head\">\n            {props.existRole && (\n              <LineAbstractRoleTag\n                color={color}\n                role={props.line.role}\n                handleClick={(e) => { handleAttributeClick(e, 'role'); }}\n              />\n            )}\n            {Object.keys(props.line.attributes)\n              .filter((k) => (k === 'ef-ontology' && efOntologyVisible !== false) || k !== 'ef-ontology')\n              .map((key, index) => (\n                (validConfig.indexOf(key) >= 0 &&\n                  props.line.attributes[key] !== undefined &&\n                  props.line.attributes[key] !== ''\n                )\n                  ? (\n                    <div\n                      className=\"line-abstract-item-category\"\n                    // eslint-disable-next-line react/no-array-index-key\n                      key={`line-abstract-item-category${index}`}\n                      onClick={(e) => { handleAttributeClick(e, key); }}\n                    >\n                      {getFieldDisplayLabel(props.line.attributes[key], props.lineFieldMap[key]) || ' - '}\n                    </div>\n                  ) : null\n              ))}\n          </div>\n          <div className=\"line-abstract-item-text\">\n            <div className=\"line-abstract-item-text-cnt\">\n              <div>{wordCount(props.line.text)}</div>\n              <div>\n                (\n                {props.line.text.length}\n                )\n              </div>\n            </div>\n            <Input\n              className=\"line-abstract-item-text-input\"\n              value={props.line.text}\n              onChange={(e) => handleChangeInput(e)}\n              onClick={(e) => handleInputClick(e)}\n              disabled\n              autoComplete=\"off\"\n              onFocus={() => { window.disableLongAudioHotKeys = true; }}\n              onBlur={() => { window.disableLongAudioHotKeys = false; }}\n            />\n          </div>\n        </>\n      )}\n      <div className=\"segment-abstract-copy\" onClick={handleCopyClick}>\n        {isCopied ? <CheckOutlined /> : <CopyOutlined />}\n      </div>\n    </div>\n  );\n});\n\nconst LineAbstractRoleTag = ((props) => (\n  <div className=\"line-abstract-item-role\" onClick={props.handleClick}>\n    <div\n      className=\"line-abstract-item-role-color\"\n      style={{ backgroundColor: props.color }}\n    />\n    {props.role}\n  </div>\n));\n\nconst mapStateToProps = (state) => ({\n  ontology: state.ontology,\n  segmentConfig: state.segmentConfig,\n  lineConfig: state.lineConfig,\n  currentSegment: state.currentSegment,\n  toolMode: state.toolMode,\n  client: state.client,\n  lineFieldMap: state.lineFieldMap,\n});\nconst mapDispatchToProps = {\n  setLineText,\n  setAttributeFocusInfo,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(LineAbstractItem);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}