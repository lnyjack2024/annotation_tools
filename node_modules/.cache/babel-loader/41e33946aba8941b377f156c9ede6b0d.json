{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/multi-channel/components/InfoPanel/index.tsx\";\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport cx from 'classnames';\nimport { UnfoldIcon, Fold } from 'src/components/common/icons';\nimport GlobalAttributes from './GlobalAttributes';\nimport store from '../../store/RootStore';\nimport i18n from '../../locales';\nimport './index.scss';\nclass InfoPanel extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      unfold: true,\n      selectedTab: 'global',\n      tabs: [{\n        key: 'global',\n        label: i18n.translate('INFO_PANEL_TAB1'),\n        title: i18n.translate('INFO_PANEL_GLOBAL_TITLE')\n      }]\n    };\n    this.toggleFold = () => {\n      this.setState(prev => ({\n        unfold: !prev.unfold\n      }));\n    };\n  }\n  render() {\n    const {\n      unfold,\n      tabs,\n      selectedTab\n    } = this.state;\n    const {\n      global: {\n        globalConfig,\n        attributes\n      }\n    } = store;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: cx('info-panel-container', {\n        fold: !unfold\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, unfold && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, i18n.translate('INFO_PANEL_TITLE')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"unfold-icon\",\n      onClick: this.toggleFold,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, unfold ? /*#__PURE__*/React.createElement(Fold, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 24\n      }\n    }) : /*#__PURE__*/React.createElement(UnfoldIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 35\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-tab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-tab-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, tabs.map(tab => /*#__PURE__*/React.createElement(\"div\", {\n      key: tab.key,\n      className: cx('info-tab-header-item', {\n        active: selectedTab === tab.key\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, tab.label))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-tab-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, tabs.map(({\n      key,\n      title\n    }) => selectedTab === key ? /*#__PURE__*/React.createElement(\"div\", {\n      key: key,\n      className: \"info-tab-content-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, !unfold && /*#__PURE__*/React.createElement(\"div\", {\n      className: cx('info-tab-content-item-title', {\n        warning: globalConfig.fields.length && Object.keys(attributes).length === 0\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, title), /*#__PURE__*/React.createElement(\"div\", {\n      className: cx('info-tab-content-item-content', {\n        float: !unfold\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }\n    }, key === 'global' && /*#__PURE__*/React.createElement(GlobalAttributes, {\n      unfoldEnabled: unfold,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 43\n      }\n    }))) : null)))));\n  }\n}\nexport default observer(InfoPanel);","map":{"version":3,"names":["React","observer","cx","UnfoldIcon","Fold","GlobalAttributes","store","i18n","InfoPanel","Component","constructor","args","state","unfold","selectedTab","tabs","key","label","translate","title","toggleFold","setState","prev","render","global","globalConfig","attributes","createElement","className","fold","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","tab","active","warning","fields","length","Object","keys","float","unfoldEnabled"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/multi-channel/components/InfoPanel/index.tsx"],"sourcesContent":["import React from 'react';\nimport { observer } from 'mobx-react';\nimport cx from 'classnames';\nimport { UnfoldIcon, Fold } from 'src/components/common/icons';\nimport GlobalAttributes from './GlobalAttributes';\nimport store from '../../store/RootStore';\nimport i18n from '../../locales';\nimport './index.scss';\n\ninterface Tab {\n  key: string;\n  label: string;\n  title: string;\n}\n\ninterface InfoPanelState {\n  unfold: boolean;\n  tabs: Tab[];\n  selectedTab: string;\n}\n\ninterface InfoPanelProps {\n  height?: number;\n}\n\nclass InfoPanel extends React.Component<InfoPanelProps, InfoPanelState> {\n  state = {\n    unfold: true,\n    selectedTab: 'global',\n    tabs: [\n      {\n        key: 'global',\n        label: i18n.translate('INFO_PANEL_TAB1'),\n        title: i18n.translate('INFO_PANEL_GLOBAL_TITLE'),\n      }\n    ]\n  };\n\n  toggleFold = () => {\n    this.setState((prev) => ({ unfold: !prev.unfold }));\n  };\n\n  render() {\n    const { unfold, tabs, selectedTab } = this.state;\n    const { global: { globalConfig, attributes } } = store;\n    return (\n      <div className={cx('info-panel-container', {\n        fold: !unfold,\n      })}\n      >\n        <div className=\"info-header\">\n          {unfold && (\n          <div className=\"title\">\n            {i18n.translate('INFO_PANEL_TITLE')}\n          </div>\n          )}\n          <div className=\"unfold-icon\" onClick={this.toggleFold}>\n            { unfold ? <Fold /> : <UnfoldIcon /> }\n          </div>\n        </div>\n        <div className=\"info-content\">\n          <div className=\"info-tab\">\n            <div className=\"info-tab-header\">\n              {tabs.map((tab) => (\n                <div\n                  key={tab.key}\n                  className={cx('info-tab-header-item', {\n                    active: selectedTab === tab.key\n                  })}\n                >\n                  {tab.label}\n                </div>\n              ))}\n            </div>\n            <div className=\"info-tab-content\">\n              {tabs.map(({ key, title }) => (selectedTab === key ? (\n                <div key={key} className=\"info-tab-content-item\">\n                  {!unfold && (\n                    <div\n                      className={cx('info-tab-content-item-title', {\n                        warning: globalConfig.fields.length && Object.keys(attributes).length === 0\n                      })}\n                    >\n                      {title}\n                    </div>\n                  )}\n                  <div className={cx('info-tab-content-item-content', { float: !unfold })}>\n                    {key === 'global' && (<GlobalAttributes unfoldEnabled={unfold} />)}\n                  </div>\n                </div>\n              ) : null))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default observer(InfoPanel);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}