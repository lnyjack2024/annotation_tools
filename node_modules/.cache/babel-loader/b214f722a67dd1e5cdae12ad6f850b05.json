{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/SegmentAbstract/SegmentAbstractItem/SegmentAbstractItem.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport hexToRgba from 'hex-to-rgba';\nimport { Input, Popover } from 'antd';\nimport { isEqual } from 'lodash';\nimport LineAbstractItem from '../LineAbstractItem/LineAbstractItem';\nimport { defaultColor, formatTimestamp, translate, attributeType } from '../../../constants';\nimport QAAcceptIcon from '../../common/Icons/QAAcceptIcon';\nimport QARejectIcon from '../../common/Icons/QARejectIcon';\nimport { isRework, isQA } from '../../../../../utils/tool-mode';\nimport { setAttributeFocusInfo } from '../../../redux/action';\nimport { getFieldDisplayLabel } from '../../../../../utils/form';\nimport './SegmentAbstractItem.scss';\nclass SegmentAbstractItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getRowHeight = () => {\n      var _this$segmentAbstract;\n      const height = (_this$segmentAbstract = this.segmentAbstractItemBox) === null || _this$segmentAbstract === void 0 ? void 0 : _this$segmentAbstract.offsetHeight;\n      this.props.onUpdate(height);\n    };\n    this.handleContainerClick = e => {\n      this.props.setCurrentSegment({\n        index: this.props.segmentIndex\n      });\n    };\n    this.handleAttributeClick = (e, key) => {\n      e.stopPropagation();\n      this.props.setCurrentSegment({\n        index: this.props.segmentIndex\n      });\n      this.props.setAttributeFocusInfo({\n        segmentIndex: this.props.segmentIndex,\n        type: attributeType.segment,\n        key\n      });\n    };\n    this.rowRef = React.createRef();\n  }\n  componentDidMount() {\n    this.getRowHeight();\n  }\n  componentDidUpdate(prevProps) {\n    var _prevProps$segment, _this$props$segment, _prevProps$segment2, _this$props$segment2;\n    if (!isEqual((_prevProps$segment = prevProps.segment) === null || _prevProps$segment === void 0 ? void 0 : _prevProps$segment.content, (_this$props$segment = this.props.segment) === null || _this$props$segment === void 0 ? void 0 : _this$props$segment.content) || !isEqual((_prevProps$segment2 = prevProps.segment) === null || _prevProps$segment2 === void 0 ? void 0 : _prevProps$segment2.attributes, (_this$props$segment2 = this.props.segment) === null || _this$props$segment2 === void 0 ? void 0 : _this$props$segment2.attributes)) {\n      this.getRowHeight();\n    }\n  }\n  render() {\n    const {\n      currentSegment,\n      ontology,\n      segmentConfig,\n      segmentFieldMap,\n      segment,\n      segmentIndex,\n      toolMode,\n      setCurrentSegment\n    } = this.props;\n    const color = ontology.get(segment.content[0].role) ? hexToRgba(ontology.get(segment.content[0].role), defaultColor.defaultAlpha) : 'transparent';\n    const validConfig = segmentConfig.fields.map(value => value.name);\n    return (\n      /*#__PURE__*/\n      // eslint-disable-next-line react/jsx-filename-extension\n      React.createElement(\"div\", {\n        onClick: e => this.handleContainerClick(e),\n        className: `segment-abstract-item-container ${currentSegment === segmentIndex ? 'segment-abstract-item-container-current' : ''}`,\n        id: `segment-abstract-item-${segmentIndex}`,\n        ref: r => {\n          this.segmentAbstractItemBox = r;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"segment-abstract-item\",\n        style: {\n          borderLeft: `6px solid ${color}`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"segment-abstract-item-index\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }, segmentIndex + 1), this.props.client !== 'hw-translation' && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"segment-abstract-item-timestamp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      }, `${(segment.end - segment.start).toFixed(3)}s (${formatTimestamp(segment.start)}~${formatTimestamp(segment.end)})`), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"segment-abstract-item-qa-state\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      }, segment.qaChecked === undefined || !(isQA(toolMode) || isRework(toolMode)) ? null : /*#__PURE__*/React.createElement(Popover, {\n        overlayStyle: {\n          maxWidth: '30%'\n        },\n        mouseEnterDelay: 0,\n        mouseLeaveDelay: 0,\n        trigger: \"hover\",\n        color: \"#2D2A34FF\",\n        content: segment.qaChecked === false ? /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            fontSize: '15px',\n            color: 'white'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            fontSize: '18px',\n            color: 'white',\n            fontWeight: 'bolder'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }\n        }, translate('qaReject')), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            fontWeight: 'bolder'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }\n        }, `${translate('reason')}: `), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }\n        }, segment.qaReason || ''), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            fontWeight: 'bolder'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }\n        }, `${translate('comment')}: `), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }\n        }, segment.qaComment || '')) : /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            fontSize: '15px',\n            color: 'white'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }\n        }, translate('qaAccept')),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }\n      }, segment.qaChecked === true ? /*#__PURE__*/React.createElement(QAAcceptIcon, {\n        style: {\n          width: '22px',\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 47\n        }\n      }) : /*#__PURE__*/React.createElement(QARejectIcon, {\n        style: {\n          width: '22px',\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 111\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"segment-abstract-attributes segment-abstract-row\",\n        style: {\n          borderLeft: `6px solid ${color}`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }\n      }, this.props.client !== 'hw-translation' ? /*#__PURE__*/React.createElement(React.Fragment, null, Object.keys(segment.attributes).map((key, index) => (validConfig.indexOf(key) >= 0 || this.props.keyAttribute.name === key) && segment.attributes[key] !== undefined ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"segment-abstract-attributes-item\"\n        /* eslint-disable-next-line react/no-array-index-key */,\n        key: `segment-abstract-item-attributes${index}`,\n        onClick: e => {\n          this.handleAttributeClick(e, key);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }\n      }, getFieldDisplayLabel(segment.attributes[key], segmentFieldMap[key]) || ' - ')) : null)) : /*#__PURE__*/React.createElement(Input.TextArea, {\n        className: \"segment-abstract-item-attributes-hw\",\n        value: segment.attributes.source,\n        disabled: true,\n        autoComplete: \"off\",\n        autoSize: {\n          minRows: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }\n      })), segment.content.map((value, index) => /*#__PURE__*/React.createElement(LineAbstractItem\n      /* eslint-disable-next-line react/no-array-index-key */, {\n        key: `lineAbstractItem${index}`,\n        line: value,\n        lineIndex: index,\n        segmentIndex: segmentIndex,\n        setCurrentSegment: setCurrentSegment,\n        existRole: this.props.ontology && this.props.ontology.size > 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }\n      })))\n    );\n  }\n}\n;\nSegmentAbstractItem.protoTypes = {\n  ontology: PropTypes.arrayOf(PropTypes.object),\n  segmentConfig: PropTypes.arrayOf(PropTypes.object),\n  lineConfig: PropTypes.arrayOf(PropTypes.object),\n  currentSegment: PropTypes.number,\n  segment: PropTypes.object,\n  segmentIndex: PropTypes.number\n};\nconst mapStateToProps = state => ({\n  ontology: state.ontology,\n  segmentConfig: state.segmentConfig,\n  lineConfig: state.lineConfig,\n  currentSegment: state.currentSegment,\n  toolMode: state.toolMode,\n  keyAttribute: state.keyAttribute,\n  client: state.client,\n  segmentFieldMap: state.segmentFieldMap,\n  loadReviewEnabled: state.loadReviewEnabled\n});\nconst mapDispatchToProps = {\n  // setCurrentSegment,\n  setAttributeFocusInfo\n};\nexport default connect(mapStateToProps, mapDispatchToProps, null, {\n  forwardRef: true\n})(SegmentAbstractItem);","map":{"version":3,"names":["React","PropTypes","connect","hexToRgba","Input","Popover","isEqual","LineAbstractItem","defaultColor","formatTimestamp","translate","attributeType","QAAcceptIcon","QARejectIcon","isRework","isQA","setAttributeFocusInfo","getFieldDisplayLabel","SegmentAbstractItem","Component","constructor","props","getRowHeight","_this$segmentAbstract","height","segmentAbstractItemBox","offsetHeight","onUpdate","handleContainerClick","e","setCurrentSegment","index","segmentIndex","handleAttributeClick","key","stopPropagation","type","segment","rowRef","createRef","componentDidMount","componentDidUpdate","prevProps","_prevProps$segment","_this$props$segment","_prevProps$segment2","_this$props$segment2","content","attributes","render","currentSegment","ontology","segmentConfig","segmentFieldMap","toolMode","color","get","role","defaultAlpha","validConfig","fields","map","value","name","createElement","onClick","className","id","ref","r","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","borderLeft","client","end","start","toFixed","qaChecked","undefined","overlayStyle","maxWidth","mouseEnterDelay","mouseLeaveDelay","trigger","fontSize","fontWeight","qaReason","qaComment","width","cursor","Fragment","Object","keys","indexOf","keyAttribute","TextArea","source","disabled","autoComplete","autoSize","minRows","line","lineIndex","existRole","size","protoTypes","arrayOf","object","lineConfig","number","mapStateToProps","state","loadReviewEnabled","mapDispatchToProps","forwardRef"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/SegmentAbstract/SegmentAbstractItem/SegmentAbstractItem.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport hexToRgba from 'hex-to-rgba';\nimport { Input, Popover } from 'antd';\nimport { isEqual } from 'lodash';\nimport LineAbstractItem from '../LineAbstractItem/LineAbstractItem';\nimport { defaultColor, formatTimestamp, translate, attributeType } from '../../../constants';\nimport QAAcceptIcon from '../../common/Icons/QAAcceptIcon';\nimport QARejectIcon from '../../common/Icons/QARejectIcon';\nimport { isRework, isQA } from '../../../../../utils/tool-mode';\nimport { setAttributeFocusInfo } from '../../../redux/action';\nimport { getFieldDisplayLabel } from '../../../../../utils/form';\nimport './SegmentAbstractItem.scss';\n\nclass SegmentAbstractItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.rowRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.getRowHeight();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      !isEqual(prevProps.segment?.content, this.props.segment?.content) ||\n      !isEqual(prevProps.segment?.attributes, this.props.segment?.attributes)\n    ) {\n      this.getRowHeight();\n    }\n  }\n\n  getRowHeight = () => {\n    const height = this.segmentAbstractItemBox?.offsetHeight;\n    this.props.onUpdate(height);\n  };\n\n  handleContainerClick = (e) => {\n    this.props.setCurrentSegment({ index: this.props.segmentIndex });\n  };\n\n  handleAttributeClick = (e, key) => {\n    e.stopPropagation();\n    this.props.setCurrentSegment({ index: this.props.segmentIndex });\n    this.props.setAttributeFocusInfo({\n      segmentIndex: this.props.segmentIndex,\n      type: attributeType.segment,\n      key,\n    });\n  };\n\n  render() {\n    const { currentSegment, ontology, segmentConfig, segmentFieldMap, segment, segmentIndex, toolMode, setCurrentSegment } = this.props;\n    const color = ontology.get(segment.content[0].role)\n      ? hexToRgba(ontology.get(segment.content[0].role), defaultColor.defaultAlpha)\n      : 'transparent';\n    const validConfig = segmentConfig.fields.map((value) => value.name);\n\n    return (\n      // eslint-disable-next-line react/jsx-filename-extension\n      <div\n        onClick={(e) => this.handleContainerClick(e)}\n        className={`segment-abstract-item-container ${currentSegment === segmentIndex ? 'segment-abstract-item-container-current' : ''}`}\n        id={`segment-abstract-item-${segmentIndex}`}\n        ref={(r) => { this.segmentAbstractItemBox = r; }}\n      >\n        <div className=\"segment-abstract-item\" style={{ borderLeft: `6px solid ${color}` }}>\n          {/* <div\n            style={{ background: color }}\n            className=\"segment-abstract-item-color\"\n          /> */}\n          <div className=\"segment-abstract-item-index\">{segmentIndex + 1}</div>\n          {this.props.client !== 'hw-translation' && (\n            <div className=\"segment-abstract-item-timestamp\">{`${(segment.end - segment.start).toFixed(3)}s (${formatTimestamp(segment.start)}~${formatTimestamp(segment.end)})`}</div>\n          )}\n          <div className=\"segment-abstract-item-qa-state\">\n            {(segment.qaChecked === undefined || !(isQA(toolMode) || isRework(toolMode))) ? null : (\n              <Popover\n                overlayStyle={{\n                  maxWidth: '30%'\n                }}\n                mouseEnterDelay={0}\n                mouseLeaveDelay={0}\n                trigger=\"hover\"\n                color=\"#2D2A34FF\"\n                content={\n                  segment.qaChecked === false ?\n                    (\n                      <div style={{ fontSize: '15px', color: 'white' }}>\n                        <span style={{ fontSize: '18px', color: 'white', fontWeight: 'bolder' }}>{translate('qaReject')}</span>\n                        <br />\n                        <span style={{ fontWeight: 'bolder' }}>{`${translate('reason')}: `}</span>\n                        <span>{segment.qaReason || ''}</span>\n                        <br />\n                        <span style={{ fontWeight: 'bolder' }}>{`${translate('comment')}: `}</span>\n                        <span>{segment.qaComment || ''}</span>\n                      </div>\n                    ) : <div style={{ fontSize: '15px', color: 'white' }}>{translate('qaAccept')}</div>\n                }\n              >\n                {segment.qaChecked === true ? <QAAcceptIcon style={{ width: '22px', cursor: 'pointer' }} /> : <QARejectIcon style={{ width: '22px', cursor: 'pointer' }} />}\n              </Popover>\n            )}\n          </div>\n        </div>\n        <div\n          className=\"segment-abstract-attributes segment-abstract-row\"\n          style={{ borderLeft: `6px solid ${color}` }}\n        >\n          {\n            this.props.client !== 'hw-translation' ? (\n              <>\n                {Object.keys(segment.attributes).map((key, index) => (\n                  (\n                    (validConfig.indexOf(key) >= 0 || this.props.keyAttribute.name === key) &&\n                    segment.attributes[key] !== undefined\n                  )\n                    ? (\n                      <div\n                        className=\"segment-abstract-attributes-item\"\n                        /* eslint-disable-next-line react/no-array-index-key */\n                        key={`segment-abstract-item-attributes${index}`}\n                        onClick={(e) => { this.handleAttributeClick(e, key); }}\n                      >\n                        <p className=\"text\">\n                          {getFieldDisplayLabel(segment.attributes[key], segmentFieldMap[key]) || ' - '}\n                        </p>\n                      </div>\n                    ) : null\n                ))}\n              </>\n            ) : (\n              <Input.TextArea\n                className=\"segment-abstract-item-attributes-hw\"\n                value={segment.attributes.source}\n                disabled\n                autoComplete=\"off\"\n                autoSize={{ minRows: 1 }}\n              />\n            )\n          }\n        </div>\n        {segment.content.map((value, index) => (\n          <LineAbstractItem\n            /* eslint-disable-next-line react/no-array-index-key */\n            key={`lineAbstractItem${index}`}\n            line={value}\n            lineIndex={index}\n            segmentIndex={segmentIndex}\n            setCurrentSegment={setCurrentSegment}\n            existRole={this.props.ontology && this.props.ontology.size > 0}\n          />\n        ))}\n      </div>\n    );\n  }\n};\n\nSegmentAbstractItem.protoTypes = {\n  ontology: PropTypes.arrayOf(PropTypes.object),\n  segmentConfig: PropTypes.arrayOf(PropTypes.object),\n  lineConfig: PropTypes.arrayOf(PropTypes.object),\n  currentSegment: PropTypes.number,\n  segment: PropTypes.object,\n  segmentIndex: PropTypes.number,\n};\n\nconst mapStateToProps = (state) => ({\n  ontology: state.ontology,\n  segmentConfig: state.segmentConfig,\n  lineConfig: state.lineConfig,\n  currentSegment: state.currentSegment,\n  toolMode: state.toolMode,\n  keyAttribute: state.keyAttribute,\n  client: state.client,\n  segmentFieldMap: state.segmentFieldMap,\n  loadReviewEnabled: state.loadReviewEnabled,\n});\nconst mapDispatchToProps = {\n  // setCurrentSegment,\n  setAttributeFocusInfo,\n};\nexport default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(SegmentAbstractItem);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}