{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/common/llm/chat/ChatContent.tsx\";\n/* eslint-disable react/no-array-index-key */\nimport React, { useCallback } from 'react';\nimport CodeHighlight from '../../code/CodeHighlight';\nimport { ContentItemType } from '../types';\nconst ChatContent = ({\n  content\n}) => {\n  const renderContent = useCallback(() => {\n    if (!content) {\n      return null;\n    }\n    const allItems = [];\n    let code = '';\n    let language;\n    content.forEach((item, i) => {\n      if (code) {\n        allItems.push( /*#__PURE__*/React.createElement(CodeHighlight, {\n          key: i - 1,\n          code: code,\n          language: language,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 11\n          }\n        }));\n        code = '';\n      }\n      if (item.type === ContentItemType.UNSTYLED) {\n        if (!item.content) {\n          allItems.push( /*#__PURE__*/React.createElement(\"br\", {\n            key: i,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 13\n            }\n          }));\n        } else {\n          const splitted = item.content.split('\\n');\n          splitted.forEach((t, ii) => {\n            allItems.push( /*#__PURE__*/React.createElement(\"div\", {\n              key: `${i}-${ii}`,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 15\n              }\n            }, t));\n          });\n        }\n      }\n    });\n    if (code) {\n      allItems.push( /*#__PURE__*/React.createElement(CodeHighlight, {\n        key: content.length,\n        code: code,\n        language: language,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }));\n    }\n    return allItems;\n  }, [content]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"llm-chat-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, renderContent());\n};\nexport default ChatContent;","map":{"version":3,"names":["React","useCallback","CodeHighlight","ContentItemType","ChatContent","content","renderContent","allItems","code","language","forEach","item","i","push","createElement","key","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","UNSTYLED","splitted","split","t","ii","length","className"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/common/llm/chat/ChatContent.tsx"],"sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React, { useCallback } from 'react';\nimport CodeHighlight from '../../code/CodeHighlight';\nimport { Content, ContentItemType } from '../types';\nimport { ChatItemType } from './ChatItem';\n\ninterface ChatContentProps {\n  type?: ChatItemType;\n  content?: Content;\n  onContentChange?: (newContent: Content) => void;\n}\n\nconst ChatContent: React.FC<ChatContentProps> = ({\n  content,\n}) => {\n  const renderContent = useCallback(() => {\n    if (!content) {\n      return null;\n    }\n\n    const allItems = [];\n    let code = '';\n    let language: string | undefined;\n    content.forEach((item, i) => {\n      if (code) {\n        allItems.push(\n          <CodeHighlight key={i - 1} code={code} language={language} />\n        );\n        code = '';\n      }\n      if (item.type === ContentItemType.UNSTYLED) {\n        if (!item.content) {\n          allItems.push(\n            <br key={i} />\n          );\n        } else {\n          const splitted = item.content.split('\\n');\n          splitted.forEach((t, ii) => {\n            allItems.push(\n              <div key={`${i}-${ii}`}>{t}</div>,\n            );\n          });\n        }\n      }\n    });\n    if (code) {\n      allItems.push(\n        <CodeHighlight key={content.length} code={code} language={language} />\n      );\n    }\n    return allItems;\n  }, [content]);\n\n  return (\n    <div className=\"llm-chat-content\">\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default ChatContent;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAC1C,OAAOC,aAAa,MAAM,0BAA0B;AACpD,SAAkBC,eAAe,QAAQ,UAAU;AASnD,MAAMC,WAAuC,GAAGA,CAAC;EAC/CC;AACF,CAAC,KAAK;EACJ,MAAMC,aAAa,GAAGL,WAAW,CAAC,MAAM;IACtC,IAAI,CAACI,OAAO,EAAE;MACZ,OAAO,IAAI;IACb;IAEA,MAAME,QAAQ,GAAG,EAAE;IACnB,IAAIC,IAAI,GAAG,EAAE;IACb,IAAIC,QAA4B;IAChCJ,OAAO,CAACK,OAAO,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAK;MAC3B,IAAIJ,IAAI,EAAE;QACRD,QAAQ,CAACM,IAAI,eACXb,KAAA,CAAAc,aAAA,CAACZ,aAAa;UAACa,GAAG,EAAEH,CAAC,GAAG,CAAE;UAACJ,IAAI,EAAEA,IAAK;UAACC,QAAQ,EAAEA,QAAS;UAAAO,MAAA;UAAAC,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,CAAE,CAC9D,CAAC;QACDb,IAAI,GAAG,EAAE;MACX;MACA,IAAIG,IAAI,CAACW,IAAI,KAAKnB,eAAe,CAACoB,QAAQ,EAAE;QAC1C,IAAI,CAACZ,IAAI,CAACN,OAAO,EAAE;UACjBE,QAAQ,CAACM,IAAI,eACXb,KAAA,CAAAc,aAAA;YAAIC,GAAG,EAAEH,CAAE;YAAAI,MAAA;YAAAC,QAAA;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAA,CAAE,CACf,CAAC;QACH,CAAC,MAAM;UACL,MAAMG,QAAQ,GAAGb,IAAI,CAACN,OAAO,CAACoB,KAAK,CAAC,IAAI,CAAC;UACzCD,QAAQ,CAACd,OAAO,CAAC,CAACgB,CAAC,EAAEC,EAAE,KAAK;YAC1BpB,QAAQ,CAACM,IAAI,eACXb,KAAA,CAAAc,aAAA;cAAKC,GAAG,EAAG,GAAEH,CAAE,IAAGe,EAAG,EAAE;cAAAX,MAAA;cAAAC,QAAA;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAAA,GAAEK,CAAO,CAClC,CAAC;UACH,CAAC,CAAC;QACJ;MACF;IACF,CAAC,CAAC;IACF,IAAIlB,IAAI,EAAE;MACRD,QAAQ,CAACM,IAAI,eACXb,KAAA,CAAAc,aAAA,CAACZ,aAAa;QAACa,GAAG,EAAEV,OAAO,CAACuB,MAAO;QAACpB,IAAI,EAAEA,IAAK;QAACC,QAAQ,EAAEA,QAAS;QAAAO,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAE,CACvE,CAAC;IACH;IACA,OAAOd,QAAQ;EACjB,CAAC,EAAE,CAACF,OAAO,CAAC,CAAC;EAEb,oBACEL,KAAA,CAAAc,aAAA;IAAKe,SAAS,EAAC,kBAAkB;IAAAb,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC9Bf,aAAa,CAAC,CACZ,CAAC;AAEV,CAAC;AAED,eAAeF,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}