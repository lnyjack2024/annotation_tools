{"ast":null,"code":"import _applyDecoratedDescriptor from\"/Users/qzheng/Documents/webroot/annotation_tools/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";var _class;import{computed,makeAutoObservable}from'mobx';import{LabelItem,LabelStyle,LabelFormat,PathStyles}from'../types';export let AttributesMode=/*#__PURE__*/function(AttributesMode){AttributesMode[\"HIDE\"]=\"hide\";AttributesMode[\"HOVER\"]=\"hover\";AttributesMode[\"ALWAYS\"]=\"always\";return AttributesMode;}({});let SettingStore=(_class=class SettingStore{constructor(rootStore){this.rootStore=void 0;this.isFullScreen=false;this.isGridVisible=false;this.pointSize=4;this.lineWidth=1;this.filters={};this.submitCheck=false;/**\n   * active attributes mode for point\n   */this.activePointAttributesMode=AttributesMode.HIDE;/**\n   * active attributes mode\n   */this.activeAttributesMode=AttributesMode.HIDE;/**\n   * label mode\n   */this.labelMode=true;/**\n   * label items\n   */this.labelItems=[LabelItem.CATEGORY,LabelItem.ATTRIBUTE_KEYS,LabelItem.ATTRIBUTE_VALUES];/**\n   * label style\n   */this.labelStyle=LabelStyle.DEFAULT;/**\n   * path style\n   */this.pathStyle=PathStyles.DEFAULT;/**\n   * label background color\n   */this.labelBgColor='rgba(0,0,0,0.6)';/**\n   * label format\n   */this.labelFormat=LabelFormat.DEFAULT;/**\n   * label items for point\n   */this.pointLabelItems=[LabelItem.NUMBER,LabelItem.ATTRIBUTE_KEYS,LabelItem.ATTRIBUTE_VALUES];this.displayPointIndex=true;makeAutoObservable(this,{rootStore:false,submitCheck:false,labelBgColor:false,displayPointIndex:false,pathStyle:false},{autoBind:true});this.rootStore=rootStore;}setPointSize(size){this.pointSize=size;}setLineWidth(width){this.lineWidth=width;}setFullScreen(full){this.isFullScreen=full;}setGridVisible(visible){this.isGridVisible=visible;}setLabelMode(mode){this.labelMode=mode;}handleFiltersChange(filters){this.filters=filters;}get displayCategory(){return this.labelItems.includes(LabelItem.CATEGORY);}/**\n   * init by payload\n   * @param payload\n   */initPayload(payload){return new Promise(resolve=>{// parse label mode\nthis.activeAttributesMode=Object.values(AttributesMode).includes(payload.label_mode)?payload.label_mode:AttributesMode.HIDE;// parse poiny label mode\nthis.activePointAttributesMode=Object.values(AttributesMode).includes(payload.point_label_mode)?payload.point_label_mode:AttributesMode.ALWAYS;// parse label style\nthis.labelStyle=Object.values(LabelStyle).includes(payload.label_style)?payload.label_style:LabelStyle.DEFAULT;this.pathStyle=Object.values(PathStyles).includes(payload.path_style)?payload.path_style:PathStyles.DEFAULT;this.labelBgColor=this.labelStyle===LabelStyle.DEFAULT?'rgba(0,0,0,0.6)':'rgba(0,0,0,0.0)';// parse label format\nthis.labelFormat=Object.values(LabelFormat).includes(payload.label_format)?payload.label_format:LabelFormat.DEFAULT;// parse label items\nif(typeof payload.label_item==='string'&&payload.label_item){this.labelItems=[];payload.label_item.split(',').forEach(i=>{const item=i.trim();if(Object.values(LabelItem).includes(item)){this.labelItems.push(item);}});}// parse point label items\nif(typeof payload.point_label_item==='string'&&payload.point_label_item){this.pointLabelItems=[];payload.point_label_item.split(',').forEach(i=>{const item=i.trim();if(Object.values(LabelItem).includes(item)){this.pointLabelItems.push(item);}});this.displayPointIndex=this.pointLabelItems.includes(LabelItem.NUMBER);}resolve(true);});}/**\n   * set active attributes mode\n   * @param activeMode\n   * @param type point or object\n   */setActiveAttributesMode(activeMode){let type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'object';if(type==='keypoint'){this.activePointAttributesMode=activeMode;}else{this.activeAttributesMode=activeMode;}}},(_applyDecoratedDescriptor(_class.prototype,\"displayCategory\",[computed],Object.getOwnPropertyDescriptor(_class.prototype,\"displayCategory\"),_class.prototype)),_class);export default SettingStore;","map":{"version":3,"names":["computed","makeAutoObservable","LabelItem","LabelStyle","LabelFormat","PathStyles","AttributesMode","SettingStore","_class","constructor","rootStore","isFullScreen","isGridVisible","pointSize","lineWidth","filters","submitCheck","activePointAttributesMode","HIDE","activeAttributesMode","labelMode","labelItems","CATEGORY","ATTRIBUTE_KEYS","ATTRIBUTE_VALUES","labelStyle","DEFAULT","pathStyle","labelBgColor","labelFormat","pointLabelItems","NUMBER","displayPointIndex","autoBind","setPointSize","size","setLineWidth","width","setFullScreen","full","setGridVisible","visible","setLabelMode","mode","handleFiltersChange","displayCategory","includes","initPayload","payload","Promise","resolve","Object","values","label_mode","point_label_mode","ALWAYS","label_style","path_style","label_format","label_item","split","forEach","i","item","trim","push","point_label_item","setActiveAttributesMode","activeMode","type","arguments","length","undefined","_applyDecoratedDescriptor","prototype","getOwnPropertyDescriptor"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/keypoint/store/SettingsStore.ts"],"sourcesContent":["import { computed, makeAutoObservable } from 'mobx';\nimport { RootStoreType } from './RootStore';\nimport { LabelItem, LabelStyle, LabelFormat, PathStyles } from '../types';\n\nexport enum AttributesMode {\n  HIDE = 'hide',\n  HOVER = 'hover',\n  ALWAYS = 'always',\n}\n\nclass SettingStore {\n  rootStore: RootStoreType;\n\n  isFullScreen = false;\n\n  isGridVisible = false;\n\n  pointSize = 4;\n\n  lineWidth = 1;\n\n  filters: {[key: string]: number;} = {};\n\n  submitCheck = false;\n\n  /**\n   * active attributes mode for point\n   */\n  activePointAttributesMode = AttributesMode.HIDE;\n\n  /**\n   * active attributes mode\n   */\n  activeAttributesMode = AttributesMode.HIDE;\n\n  /**\n   * label mode\n   */\n  labelMode = true;\n\n  /**\n   * label items\n   */\n  labelItems = [LabelItem.CATEGORY, LabelItem.ATTRIBUTE_KEYS, LabelItem.ATTRIBUTE_VALUES];\n\n  /**\n   * label style\n   */\n  labelStyle = LabelStyle.DEFAULT;\n\n  /**\n   * path style\n   */\n  pathStyle: PathStyles = PathStyles.DEFAULT;\n\n  /**\n   * label background color\n   */\n\n  labelBgColor = 'rgba(0,0,0,0.6)';\n\n  /**\n   * label format\n   */\n  labelFormat = LabelFormat.DEFAULT;\n\n  /**\n   * label items for point\n   */\n  pointLabelItems = [LabelItem.NUMBER, LabelItem.ATTRIBUTE_KEYS, LabelItem.ATTRIBUTE_VALUES];\n\n  displayPointIndex = true;\n\n  constructor(rootStore: RootStoreType) {\n    makeAutoObservable(this, {\n      rootStore: false,\n      submitCheck: false,\n      labelBgColor: false,\n      displayPointIndex: false,\n      pathStyle: false,\n    }, {\n      autoBind: true,\n    });\n    this.rootStore = rootStore;\n  }\n\n  setPointSize(size: number) {\n    this.pointSize = size;\n  }\n\n  setLineWidth(width: number) {\n    this.lineWidth = width;\n  }\n\n  setFullScreen(full: boolean) {\n    this.isFullScreen = full;\n  }\n\n  setGridVisible(visible: boolean) {\n    this.isGridVisible = visible;\n  }\n\n  setLabelMode(mode: boolean) {\n    this.labelMode = mode;\n  }\n\n  handleFiltersChange(filters: {[key: string]: number}) {\n    this.filters = filters;\n  }\n\n  @computed get displayCategory() {\n    return this.labelItems.includes(LabelItem.CATEGORY);\n  }\n\n  /**\n   * init by payload\n   * @param payload\n   */\n  initPayload(payload: {[key: string]: any}) {\n    return new Promise((resolve) => {\n      // parse label mode\n      this.activeAttributesMode = Object.values(AttributesMode).includes(payload.label_mode) ? payload.label_mode : AttributesMode.HIDE;\n      // parse poiny label mode\n      this.activePointAttributesMode = Object.values(AttributesMode).includes(payload.point_label_mode) ? payload.point_label_mode : AttributesMode.ALWAYS;\n      // parse label style\n      this.labelStyle = Object.values(LabelStyle).includes(payload.label_style) ? payload.label_style : LabelStyle.DEFAULT;\n      this.pathStyle = Object.values(PathStyles).includes(payload.path_style as PathStyles) ? payload.path_style as PathStyles : PathStyles.DEFAULT;\n      this.labelBgColor = this.labelStyle === LabelStyle.DEFAULT ? 'rgba(0,0,0,0.6)' : 'rgba(0,0,0,0.0)';\n      // parse label format\n      this.labelFormat = Object.values(LabelFormat).includes(payload.label_format) ? payload.label_format : LabelFormat.DEFAULT;\n      // parse label items\n      if (typeof payload.label_item === 'string' && payload.label_item) {\n        this.labelItems = [];\n        payload.label_item.split(',').forEach((i) => {\n          const item = i.trim();\n          if ((Object.values(LabelItem) as string[]).includes(item)) {\n            this.labelItems.push(item as LabelItem);\n          }\n        });\n      }\n      // parse point label items\n      if (typeof payload.point_label_item === 'string' && payload.point_label_item) {\n        this.pointLabelItems = [];\n        payload.point_label_item.split(',').forEach((i) => {\n          const item = i.trim();\n          if ((Object.values(LabelItem) as string[]).includes(item)) {\n            this.pointLabelItems.push(item as LabelItem);\n          }\n        });\n        this.displayPointIndex = this.pointLabelItems.includes(LabelItem.NUMBER);\n      }\n\n      resolve(true);\n    });\n  }\n\n  /**\n   * set active attributes mode\n   * @param activeMode\n   * @param type point or object\n   */\n  setActiveAttributesMode(activeMode: AttributesMode, type = 'object') {\n    if (type === 'keypoint') {\n      this.activePointAttributesMode = activeMode;\n    } else {\n      this.activeAttributesMode = activeMode;\n    }\n  };\n}\n\nexport default SettingStore;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}