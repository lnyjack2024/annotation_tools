{"ast":null,"code":"export let Operator = /*#__PURE__*/function (Operator) {\n  Operator[\"EQUAL\"] = \"equal_to\";\n  Operator[\"GREATER\"] = \"greater_than\";\n  Operator[\"LESS\"] = \"less_than\";\n  return Operator;\n}({});\nexport let ReviewMode = /*#__PURE__*/function (ReviewMode) {\n  ReviewMode[\"LABELING\"] = \"labeling\";\n  ReviewMode[\"REVIEW\"] = \"review\";\n  return ReviewMode;\n}({});\nexport let ValidationType = /*#__PURE__*/function (ValidationType) {\n  ValidationType[\"SCRIPT\"] = \"script\";\n  return ValidationType;\n}({});","map":{"version":3,"names":["Operator","ReviewMode","ValidationType"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/dialogue/types.ts"],"sourcesContent":["import JobProxy from '../../libs/JobProxy';\nimport { ChatItemType } from '../common/llm/chat/ChatItem';\nimport { Content, LLMModel, Rank } from '../common/llm/types';\n\nexport interface Payload {\n  jobProxy: JobProxy;\n  locale?: string;\n  tool_mode?: string;\n  issue_types?: string;\n  // config\n  subjects?: string;\n  attributes_config?: string;\n  item_attributes_config?: string;\n  ranking?: string | boolean;\n  ranking_type?: string;\n  ranking_options?: string;\n  editable?: string | boolean;\n  addible?: string | boolean;\n  add_model?: string;\n  // data\n  review_from?: string;\n}\n\nexport enum Operator {\n  EQUAL = 'equal_to',\n  GREATER = 'greater_than',\n  LESS = 'less_than',\n}\n\nexport interface DialogueItem {\n  id: string;\n  type: ChatItemType;\n  original: boolean; // is provided by original data\n  value: Content;\n  originalValue?: Content;\n  rank?: Rank;\n  attributes?: any;\n  model?: LLMModel; // model used to generate\n}\n\nexport interface ChatItem {\n  input: string;\n  output: string;\n  rank?: Rank;\n  attributes?: any;\n}\n\nexport type Chat = ChatItem[];\n\nexport enum ReviewMode {\n  LABELING = 'labeling',\n  REVIEW = 'review',\n}\n\nexport interface Result {\n  id: string;\n  message: string;\n  info: {\n    title: string\n  };\n  blockSubmit?: boolean;\n  type: string;\n}\n\nexport enum ValidationType {\n  SCRIPT = 'script',\n}\n"],"mappings":"AAuBA,WAAYA,QAAQ,0BAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAAA,OAARA,QAAQ;AAAA;AA0BpB,WAAYC,UAAU,0BAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAA,OAAVA,UAAU;AAAA;AAetB,WAAYC,cAAc,0BAAdA,cAAc;EAAdA,cAAc;EAAA,OAAdA,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}