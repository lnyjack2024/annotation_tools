{"ast":null,"code":"import { makeAutoObservable, toJS } from 'mobx';\nimport { v4 as uuidv4 } from 'uuid';\nimport { cloneDeep } from 'lodash';\nimport InstanceItem from './InstanceItem';\n/**\n * Instance\n * @class\n */\nexport default class Instance {\n  /**\n   * instance category class name\n   * @getter\n   */\n  get category() {\n    return this.categoryRef.className;\n  }\n\n  /**\n   * instance label\n   * @getter\n   */\n  get label() {\n    return `${this.categoryRef.displayName}${this.number}`;\n  }\n\n  /**\n   * instance frame status (merged status)\n   * @getter\n   */\n  get frameStatus() {\n    // simple merge\n    return Object.values(this.items).map(i => i.frameStatus).reduce((acc, curr) => ({\n      ...acc,\n      ...curr\n    }), {});\n  }\n\n  /**\n   * instance existed camera names\n   * @getter\n   */\n  get existedCameras() {\n    const cameras = new Set(Object.values(this.items).flatMap(i => i.existedCameras));\n    return Array.from(cameras);\n  }\n\n  /**\n   * is instance empty in all camera & frames\n   * @getter\n   */\n  get isEmpty() {\n    return Object.values(this.items).every(item => item.isEmpty);\n  }\n\n  /**\n   * is instance only contains one item\n   * @getter\n   */\n  get isSingle() {\n    const {\n      children\n    } = this.categoryRef;\n    return children.length === 1 && children[0].count === 1;\n  }\n  constructor({\n    id,\n    categoryRef,\n    number,\n    attributes,\n    items = []\n  }) {\n    /**\n     * instance uuid\n     * @member\n     */\n    this.id = void 0;\n    /**\n     * category instance reference\n     * @member\n     */\n    this.categoryRef = void 0;\n    /**\n     * instance number\n     * @member\n     */\n    this.number = void 0;\n    /**\n     * instance attributes\n     * @member\n     */\n    this.attributes = void 0;\n    /**\n     * instance items\n     * @member\n     */\n    this.items = {};\n    /**\n     * is instance selected\n     * @member\n     */\n    this.selected = false;\n    /**\n     * is instance collapsed\n     * @member\n     */\n    this.collapsed = false;\n    makeAutoObservable(this, {\n      id: false,\n      categoryRef: false,\n      number: false,\n      label: false,\n      isEmpty: false,\n      isSingle: false\n    }, {\n      autoBind: true\n    });\n    this.id = id || uuidv4();\n    this.categoryRef = categoryRef;\n    this.number = number;\n    this.attributes = cloneDeep(attributes);\n    items.forEach(item => this.createItemFromData(item));\n  }\n\n  /**\n   * create instance item from structured instance item data\n   * @param instanceItem\n   */\n  createItemFromData(instanceItem) {\n    const {\n      children\n    } = this.categoryRef;\n    const categoryItem = children.find(c => c.name === instanceItem.name);\n    if (categoryItem) {\n      const item = new InstanceItem({\n        id: instanceItem.id,\n        instance: this,\n        categoryItemRef: categoryItem,\n        number: instanceItem.number,\n        cameras: instanceItem.cameras\n      });\n      this.items[item.id] = item;\n    }\n  }\n\n  /**\n   * get instance items by instance item name\n   * @param instanceItemName\n   */\n  getItemsByName(instanceItemName) {\n    return toJS(Object.values(this.items).filter(i => i.name === instanceItemName));\n  }\n\n  /**\n   * get instance item by name & number\n   * @param instanceItemName\n   * @param instanceItemNumber\n   */\n  getItem(instanceItemName, instanceItemNumber) {\n    const items = Object.values(this.items);\n    return items.find(i => i.name === instanceItemName && i.number === instanceItemNumber);\n  }\n\n  /**\n   * set selected\n   * @param selected\n   */\n  setSelected(selected) {\n    this.selected = selected;\n  }\n\n  /**\n   * set collasped\n   * @param collapsed\n   */\n  setCollapsed(collapsed) {\n    this.collapsed = collapsed;\n  }\n\n  /**\n   * set attributes\n   * @param attributes\n   */\n  setAttributes(attributes) {\n    this.attributes = cloneDeep(attributes);\n  }\n\n  /**\n   * remove item\n   * @param instanceItemId\n   */\n  removeItem(instanceItemId) {\n    delete this.items[instanceItemId];\n  }\n\n  /**\n   * destroy\n   */\n  destroy() {\n    // remove references\n    this.items = {};\n  }\n\n  /**\n   * return structured data\n   */\n  toJSON() {\n    return {\n      ...this.getBasicInfo(),\n      children: Object.values(this.items).filter(item => !item.isEmpty).map(item => item.toJSON())\n    };\n  }\n\n  /**\n   * return basic info data\n   */\n  getBasicInfo() {\n    return {\n      id: this.id,\n      category: this.category,\n      categoryName: this.categoryRef.displayName,\n      categoryColor: this.categoryRef.displayColor,\n      number: this.number,\n      attributes: cloneDeep(toJS(this.attributes))\n    };\n  }\n}","map":{"version":3,"names":["makeAutoObservable","toJS","v4","uuidv4","cloneDeep","InstanceItem","Instance","category","categoryRef","className","label","displayName","number","frameStatus","Object","values","items","map","i","reduce","acc","curr","existedCameras","cameras","Set","flatMap","Array","from","isEmpty","every","item","isSingle","children","length","count","constructor","id","attributes","selected","collapsed","autoBind","forEach","createItemFromData","instanceItem","categoryItem","find","c","name","instance","categoryItemRef","getItemsByName","instanceItemName","filter","getItem","instanceItemNumber","setSelected","setCollapsed","setAttributes","removeItem","instanceItemId","destroy","toJSON","getBasicInfo","categoryName","categoryColor","displayColor"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking2/model/Instance.ts"],"sourcesContent":["import { makeAutoObservable, toJS } from 'mobx';\nimport { v4 as uuidv4 } from 'uuid';\nimport { cloneDeep } from 'lodash';\nimport InstanceItem from './InstanceItem';\nimport { InstanceItem as IInstanceItem, Instance as IInstance, Category } from '../types';\n\ninterface InstanceOptions {\n  id?: string;\n  categoryRef: Category;\n  number: number;\n  attributes?: any;\n  items?: IInstanceItem[];\n}\n\n/**\n * Instance\n * @class\n */\nexport default class Instance {\n  /**\n   * instance uuid\n   * @member\n   */\n  id: string;\n\n  /**\n   * category instance reference\n   * @member\n   */\n  categoryRef: Category;\n\n  /**\n   * instance number\n   * @member\n   */\n  number: number;\n\n  /**\n   * instance attributes\n   * @member\n   */\n  attributes?: any;\n\n  /**\n   * instance items\n   * @member\n   */\n  items: { [itemId: string]: InstanceItem } = {};\n\n  /**\n   * is instance selected\n   * @member\n   */\n  selected = false;\n\n  /**\n   * is instance collapsed\n   * @member\n   */\n  collapsed = false;\n\n  /**\n   * instance category class name\n   * @getter\n   */\n  get category() {\n    return this.categoryRef.className;\n  }\n\n  /**\n   * instance label\n   * @getter\n   */\n  get label() {\n    return `${this.categoryRef.displayName}${this.number}`;\n  }\n\n  /**\n   * instance frame status (merged status)\n   * @getter\n   */\n  get frameStatus() {\n    // simple merge\n    return Object.values(this.items)\n      .map((i) => i.frameStatus)\n      .reduce((acc, curr) => ({ ...acc, ...curr }), {});\n  }\n\n  /**\n   * instance existed camera names\n   * @getter\n   */\n  get existedCameras() {\n    const cameras = new Set(Object.values(this.items).flatMap((i) => i.existedCameras));\n    return Array.from(cameras);\n  }\n\n  /**\n   * is instance empty in all camera & frames\n   * @getter\n   */\n  get isEmpty() {\n    return Object.values(this.items).every((item) => item.isEmpty);\n  }\n\n  /**\n   * is instance only contains one item\n   * @getter\n   */\n  get isSingle() {\n    const { children } = this.categoryRef;\n    return children.length === 1 && children[0].count === 1;\n  }\n\n  constructor({ id, categoryRef, number, attributes, items = [] }: InstanceOptions) {\n    makeAutoObservable(this, {\n      id: false,\n      categoryRef: false,\n      number: false,\n      label: false,\n      isEmpty: false,\n      isSingle: false,\n    }, {\n      autoBind: true,\n    });\n\n    this.id = id || uuidv4();\n    this.categoryRef = categoryRef;\n    this.number = number;\n    this.attributes = cloneDeep(attributes);\n    items.forEach((item) => this.createItemFromData(item));\n  }\n\n  /**\n   * create instance item from structured instance item data\n   * @param instanceItem\n   */\n  createItemFromData(instanceItem: IInstanceItem) {\n    const { children } = this.categoryRef;\n    const categoryItem = children.find((c) => c.name === instanceItem.name);\n    if (categoryItem) {\n      const item = new InstanceItem({\n        id: instanceItem.id,\n        instance: this,\n        categoryItemRef: categoryItem,\n        number: instanceItem.number,\n        cameras: instanceItem.cameras,\n      });\n      this.items[item.id] = item;\n    }\n  }\n\n  /**\n   * get instance items by instance item name\n   * @param instanceItemName\n   */\n  getItemsByName(instanceItemName: string) {\n    return toJS(Object.values(this.items).filter((i) => i.name === instanceItemName));\n  }\n\n  /**\n   * get instance item by name & number\n   * @param instanceItemName\n   * @param instanceItemNumber\n   */\n  getItem(instanceItemName: string, instanceItemNumber: number) {\n    const items = Object.values(this.items);\n    return items.find((i) => i.name === instanceItemName && i.number === instanceItemNumber);\n  }\n\n  /**\n   * set selected\n   * @param selected\n   */\n  setSelected(selected: boolean) {\n    this.selected = selected;\n  }\n\n  /**\n   * set collasped\n   * @param collapsed\n   */\n  setCollapsed(collapsed: boolean) {\n    this.collapsed = collapsed;\n  }\n\n  /**\n   * set attributes\n   * @param attributes\n   */\n  setAttributes(attributes: any) {\n    this.attributes = cloneDeep(attributes);\n  }\n\n  /**\n   * remove item\n   * @param instanceItemId\n   */\n  removeItem(instanceItemId: string) {\n    delete this.items[instanceItemId];\n  }\n\n  /**\n   * destroy\n   */\n  destroy() {\n    // remove references\n    this.items = {};\n  }\n\n  /**\n   * return structured data\n   */\n  toJSON(): IInstance {\n    return {\n      ...this.getBasicInfo(),\n      children: Object.values(this.items)\n        .filter((item) => !item.isEmpty)\n        .map((item) => item.toJSON()),\n    };\n  }\n\n  /**\n   * return basic info data\n   */\n  getBasicInfo() {\n    return {\n      id: this.id,\n      category: this.category,\n      categoryName: this.categoryRef.displayName,\n      categoryColor: this.categoryRef.displayColor,\n      number: this.number,\n      attributes: cloneDeep(toJS(this.attributes)),\n    };\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}