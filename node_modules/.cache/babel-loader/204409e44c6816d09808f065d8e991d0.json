{"ast":null,"code":"export const formatTime = time => [formatHour(time), formatMinute(time), formatSecond(time), formatMillisecond(time)].join(':');\nexport const randomColor = () => {\n  const rgb = new Array(3);\n  for (let i = 0; i < 3; i += 1) {\n    rgb[i] = Math.floor(Math.random() * 255).toString(16);\n    if (rgb[i].length === 1) rgb[i] = `0${rgb[i]}`;\n  }\n  return `#${rgb.join('')}`;\n};\nexport const parseTime = str => {\n  const arr = str.split(':');\n  const time = parseInt(arr[0], 10) * 3600 + parseInt(arr[1], 10) * 60 + parseInt(arr[2], 10) + parseInt(arr[3], 10) / 1000;\n  if (Number.isNaN(time)) return null;\n  return time;\n};\nexport const formatHour = time => {\n  const hour = parseInt(time / 3600, 10).toString();\n  if (!time && time !== 0) return '--';\n  return hour.padStart(2, '0');\n};\nexport const formatMinute = time => {\n  const min = (parseInt(time / 60, 10) % 60).toString();\n  if (!time && time !== 0) return '--';\n  return min.padStart(2, '0');\n};\nexport const formatSecond = time => {\n  const sec = parseInt(time % 60, 10).toString();\n  if (!time && time !== 0) return '--';\n  return sec.padStart(2, '0');\n};\nexport const formatMillisecond = time => {\n  const msec = (time - parseInt(time, 10)).toFixed(3).split('.').pop();\n  if (msec === 'NaN') return '---';\n  return msec;\n};\nexport const simpleClone = obj => {\n  try {\n    return JSON.parse(JSON.stringify(obj));\n  } catch (e) {\n    return {};\n  }\n};\n\n/**\n *\n * @param {Array} distances [left, top, right, bottom]\n * @param {Number} deviation distance to border\n */\nexport const getResizeAction = (distances, deviation) => {\n  const action = [];\n  const sortDis = distances.slice().sort((a, b) => a - b);\n  const firstSmall = distances.indexOf(sortDis[0]);\n  const secondSmall = distances.indexOf(sortDis[1]);\n  if (distances[firstSmall] <= deviation) {\n    action.push(firstSmall);\n  }\n  if (action.length && distances[secondSmall] <= deviation) {\n    if (Math.abs(firstSmall - secondSmall) !== 2) action.push(secondSmall);\n  }\n  return action;\n};\nexport const clamp = (num, min, max) => Math.min(Math.max(min, num), max);\nexport const sortPosition = position => {\n  const tmp = position.slice();\n  position.forEach((p, i) => {\n    if (i < 2) {\n      position[i] = Math.min(p, tmp[i + 2]);\n    } else {\n      position[i] = Math.max(p, tmp[i - 2]);\n    }\n  });\n};","map":{"version":3,"names":["formatTime","time","formatHour","formatMinute","formatSecond","formatMillisecond","join","randomColor","rgb","Array","i","Math","floor","random","toString","length","parseTime","str","arr","split","parseInt","Number","isNaN","hour","padStart","min","sec","msec","toFixed","pop","simpleClone","obj","JSON","parse","stringify","e","getResizeAction","distances","deviation","action","sortDis","slice","sort","a","b","firstSmall","indexOf","secondSmall","push","abs","clamp","num","max","sortPosition","position","tmp","forEach","p"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/advertisement-annotation/util.js"],"sourcesContent":["export const formatTime = (time) => [formatHour(time), formatMinute(time), formatSecond(time), formatMillisecond(time)].join(':');\n\nexport const randomColor = () => {\n  const rgb = new Array(3);\n  for (let i = 0; i < 3; i += 1) {\n    rgb[i] = Math.floor(Math.random() * 255).toString(16);\n    if (rgb[i].length === 1) rgb[i] = `0${rgb[i]}`;\n  }\n  return `#${rgb.join('')}`;\n};\n\nexport const parseTime = (str) => {\n  const arr = str.split(':');\n  const time = parseInt(arr[0], 10) * 3600 + parseInt(arr[1], 10) * 60 + parseInt(arr[2], 10) + parseInt(arr[3], 10) / 1000;\n  if (Number.isNaN(time)) return null;\n  return time;\n};\n\nexport const formatHour = (time) => {\n  const hour = parseInt(time / 3600, 10).toString();\n  if (!time && time !== 0) return '--';\n  return hour.padStart(2, '0');\n};\n\nexport const formatMinute = (time) => {\n  const min = (parseInt(time / 60, 10) % 60).toString();\n  if (!time && time !== 0) return '--';\n  return min.padStart(2, '0');\n};\n\nexport const formatSecond = (time) => {\n  const sec = parseInt(time % 60, 10).toString();\n  if (!time && time !== 0) return '--';\n  return sec.padStart(2, '0');\n};\n\nexport const formatMillisecond = (time) => {\n  const msec = (time - parseInt(time, 10)).toFixed(3).split('.').pop();\n  if (msec === 'NaN') return '---';\n  return msec;\n};\n\nexport const simpleClone = (obj) => {\n  try {\n    return JSON.parse(JSON.stringify(obj));\n  } catch (e) {\n    return {};\n  }\n};\n\n/**\n *\n * @param {Array} distances [left, top, right, bottom]\n * @param {Number} deviation distance to border\n */\nexport const getResizeAction = (distances, deviation) => {\n  const action = [];\n  const sortDis = distances.slice().sort((a, b) => a - b);\n  const firstSmall = distances.indexOf(sortDis[0]);\n  const secondSmall = distances.indexOf(sortDis[1]);\n  if (distances[firstSmall] <= deviation) {\n    action.push(firstSmall);\n  }\n  if (action.length && distances[secondSmall] <= deviation) {\n    if (Math.abs(firstSmall - secondSmall) !== 2) action.push(secondSmall);\n  }\n  return action;\n};\n\nexport const clamp = (num, min, max) => Math.min(Math.max(min, num), max);\n\nexport const sortPosition = (position) => {\n  const tmp = position.slice();\n  position.forEach((p, i) => {\n    if (i < 2) {\n      position[i] = Math.min(p, tmp[i + 2]);\n    } else {\n      position[i] = Math.max(p, tmp[i - 2]);\n    }\n  });\n};\n"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAIC,IAAI,IAAK,CAACC,UAAU,CAACD,IAAI,CAAC,EAAEE,YAAY,CAACF,IAAI,CAAC,EAAEG,YAAY,CAACH,IAAI,CAAC,EAAEI,iBAAiB,CAACJ,IAAI,CAAC,CAAC,CAACK,IAAI,CAAC,GAAG,CAAC;AAEjI,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAC/B,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC,CAAC;EACxB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAE;IAC7BF,GAAG,CAACE,CAAC,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC;IACrD,IAAIN,GAAG,CAACE,CAAC,CAAC,CAACK,MAAM,KAAK,CAAC,EAAEP,GAAG,CAACE,CAAC,CAAC,GAAG,IAAIF,GAAG,CAACE,CAAC,CAAC,EAAE;EAChD;EACA,OAAO,IAAIF,GAAG,CAACF,IAAI,CAAC,EAAE,CAAC,EAAE;AAC3B,CAAC;AAED,OAAO,MAAMU,SAAS,GAAIC,GAAG,IAAK;EAChC,MAAMC,GAAG,GAAGD,GAAG,CAACE,KAAK,CAAC,GAAG,CAAC;EAC1B,MAAMlB,IAAI,GAAGmB,QAAQ,CAACF,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,GAAGE,QAAQ,CAACF,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAGE,QAAQ,CAACF,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAGE,QAAQ,CAACF,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI;EACzH,IAAIG,MAAM,CAACC,KAAK,CAACrB,IAAI,CAAC,EAAE,OAAO,IAAI;EACnC,OAAOA,IAAI;AACb,CAAC;AAED,OAAO,MAAMC,UAAU,GAAID,IAAI,IAAK;EAClC,MAAMsB,IAAI,GAAGH,QAAQ,CAACnB,IAAI,GAAG,IAAI,EAAE,EAAE,CAAC,CAACa,QAAQ,CAAC,CAAC;EACjD,IAAI,CAACb,IAAI,IAAIA,IAAI,KAAK,CAAC,EAAE,OAAO,IAAI;EACpC,OAAOsB,IAAI,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;AAC9B,CAAC;AAED,OAAO,MAAMrB,YAAY,GAAIF,IAAI,IAAK;EACpC,MAAMwB,GAAG,GAAG,CAACL,QAAQ,CAACnB,IAAI,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,EAAEa,QAAQ,CAAC,CAAC;EACrD,IAAI,CAACb,IAAI,IAAIA,IAAI,KAAK,CAAC,EAAE,OAAO,IAAI;EACpC,OAAOwB,GAAG,CAACD,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;AAC7B,CAAC;AAED,OAAO,MAAMpB,YAAY,GAAIH,IAAI,IAAK;EACpC,MAAMyB,GAAG,GAAGN,QAAQ,CAACnB,IAAI,GAAG,EAAE,EAAE,EAAE,CAAC,CAACa,QAAQ,CAAC,CAAC;EAC9C,IAAI,CAACb,IAAI,IAAIA,IAAI,KAAK,CAAC,EAAE,OAAO,IAAI;EACpC,OAAOyB,GAAG,CAACF,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;AAC7B,CAAC;AAED,OAAO,MAAMnB,iBAAiB,GAAIJ,IAAI,IAAK;EACzC,MAAM0B,IAAI,GAAG,CAAC1B,IAAI,GAAGmB,QAAQ,CAACnB,IAAI,EAAE,EAAE,CAAC,EAAE2B,OAAO,CAAC,CAAC,CAAC,CAACT,KAAK,CAAC,GAAG,CAAC,CAACU,GAAG,CAAC,CAAC;EACpE,IAAIF,IAAI,KAAK,KAAK,EAAE,OAAO,KAAK;EAChC,OAAOA,IAAI;AACb,CAAC;AAED,OAAO,MAAMG,WAAW,GAAIC,GAAG,IAAK;EAClC,IAAI;IACF,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACH,GAAG,CAAC,CAAC;EACxC,CAAC,CAAC,OAAOI,CAAC,EAAE;IACV,OAAO,CAAC,CAAC;EACX;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,eAAe,GAAGA,CAACC,SAAS,EAAEC,SAAS,KAAK;EACvD,MAAMC,MAAM,GAAG,EAAE;EACjB,MAAMC,OAAO,GAAGH,SAAS,CAACI,KAAK,CAAC,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,CAAC;EACvD,MAAMC,UAAU,GAAGR,SAAS,CAACS,OAAO,CAACN,OAAO,CAAC,CAAC,CAAC,CAAC;EAChD,MAAMO,WAAW,GAAGV,SAAS,CAACS,OAAO,CAACN,OAAO,CAAC,CAAC,CAAC,CAAC;EACjD,IAAIH,SAAS,CAACQ,UAAU,CAAC,IAAIP,SAAS,EAAE;IACtCC,MAAM,CAACS,IAAI,CAACH,UAAU,CAAC;EACzB;EACA,IAAIN,MAAM,CAACxB,MAAM,IAAIsB,SAAS,CAACU,WAAW,CAAC,IAAIT,SAAS,EAAE;IACxD,IAAI3B,IAAI,CAACsC,GAAG,CAACJ,UAAU,GAAGE,WAAW,CAAC,KAAK,CAAC,EAAER,MAAM,CAACS,IAAI,CAACD,WAAW,CAAC;EACxE;EACA,OAAOR,MAAM;AACf,CAAC;AAED,OAAO,MAAMW,KAAK,GAAGA,CAACC,GAAG,EAAE1B,GAAG,EAAE2B,GAAG,KAAKzC,IAAI,CAACc,GAAG,CAACd,IAAI,CAACyC,GAAG,CAAC3B,GAAG,EAAE0B,GAAG,CAAC,EAAEC,GAAG,CAAC;AAEzE,OAAO,MAAMC,YAAY,GAAIC,QAAQ,IAAK;EACxC,MAAMC,GAAG,GAAGD,QAAQ,CAACb,KAAK,CAAC,CAAC;EAC5Ba,QAAQ,CAACE,OAAO,CAAC,CAACC,CAAC,EAAE/C,CAAC,KAAK;IACzB,IAAIA,CAAC,GAAG,CAAC,EAAE;MACT4C,QAAQ,CAAC5C,CAAC,CAAC,GAAGC,IAAI,CAACc,GAAG,CAACgC,CAAC,EAAEF,GAAG,CAAC7C,CAAC,GAAG,CAAC,CAAC,CAAC;IACvC,CAAC,MAAM;MACL4C,QAAQ,CAAC5C,CAAC,CAAC,GAAGC,IAAI,CAACyC,GAAG,CAACK,CAAC,EAAEF,GAAG,CAAC7C,CAAC,GAAG,CAAC,CAAC,CAAC;IACvC;EACF,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}