{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking2/components/sidebar/ShapeIcon.tsx\";\nimport React from 'react';\nimport { Label, Formula, RectangleFill, PolygonFill, LShapeFill, LineFill, EllipseFill, CircleFill, DotFill, CuboidFill, GridFill, ArrowFill, TwoSidesFill } from '../../../common/icons';\nimport { ShapeType } from '../../../common/shapes/types';\nconst ShapeIcon = ({\n  shapeType,\n  isOCR,\n  isFormula\n}) => {\n  if (isOCR) {\n    return /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 12\n      }\n    });\n  }\n  if (isFormula) {\n    return /*#__PURE__*/React.createElement(Formula, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 12\n      }\n    });\n  }\n  switch (shapeType) {\n    case ShapeType.RECTANGLE:\n      return /*#__PURE__*/React.createElement(RectangleFill, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 14\n        }\n      });\n    case ShapeType.POLYGON:\n      return /*#__PURE__*/React.createElement(PolygonFill, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 14\n        }\n      });\n    case ShapeType.LSHAPE:\n      return /*#__PURE__*/React.createElement(LShapeFill, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 14\n        }\n      });\n    case ShapeType.LINE:\n      return /*#__PURE__*/React.createElement(LineFill, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 14\n        }\n      });\n    case ShapeType.ELLIPSE:\n      return /*#__PURE__*/React.createElement(EllipseFill, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 14\n        }\n      });\n    case ShapeType.CIRCLE:\n      return /*#__PURE__*/React.createElement(CircleFill, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 14\n        }\n      });\n    case ShapeType.DOT:\n      return /*#__PURE__*/React.createElement(DotFill, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 14\n        }\n      });\n    case ShapeType.CUBOID:\n      return /*#__PURE__*/React.createElement(CuboidFill, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 14\n        }\n      });\n    case ShapeType.GRID:\n      return /*#__PURE__*/React.createElement(GridFill, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 14\n        }\n      });\n    case ShapeType.ARROW:\n      return /*#__PURE__*/React.createElement(ArrowFill, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 14\n        }\n      });\n    case ShapeType.TWO_SIDES_CUBOID:\n      return /*#__PURE__*/React.createElement(TwoSidesFill, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 14\n        }\n      });\n    default:\n  }\n  return null;\n};\nexport default ShapeIcon;","map":{"version":3,"names":["React","Label","Formula","RectangleFill","PolygonFill","LShapeFill","LineFill","EllipseFill","CircleFill","DotFill","CuboidFill","GridFill","ArrowFill","TwoSidesFill","ShapeType","ShapeIcon","shapeType","isOCR","isFormula","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","RECTANGLE","POLYGON","LSHAPE","LINE","ELLIPSE","CIRCLE","DOT","CUBOID","GRID","ARROW","TWO_SIDES_CUBOID"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking2/components/sidebar/ShapeIcon.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Label,\n  Formula,\n  RectangleFill,\n  PolygonFill,\n  LShapeFill,\n  LineFill,\n  EllipseFill,\n  CircleFill,\n  DotFill,\n  CuboidFill,\n  GridFill,\n  ArrowFill,\n  TwoSidesFill,\n} from '../../../common/icons';\nimport { ShapeType } from '../../../common/shapes/types';\n\ninterface ShapeIconProps {\n  shapeType?: ShapeType;\n  isOCR?: boolean;\n  isFormula?: boolean;\n}\n\nconst ShapeIcon = ({ shapeType, isOCR, isFormula }: ShapeIconProps) => {\n  if (isOCR) {\n    return <Label />;\n  }\n\n  if (isFormula) {\n    return <Formula />;\n  }\n\n  switch (shapeType) {\n    case ShapeType.RECTANGLE:\n      return <RectangleFill />;\n    case ShapeType.POLYGON:\n      return <PolygonFill />;\n    case ShapeType.LSHAPE:\n      return <LShapeFill />;\n    case ShapeType.LINE:\n      return <LineFill />;\n    case ShapeType.ELLIPSE:\n      return <EllipseFill />;\n    case ShapeType.CIRCLE:\n      return <CircleFill />;\n    case ShapeType.DOT:\n      return <DotFill />;\n    case ShapeType.CUBOID:\n      return <CuboidFill />;\n    case ShapeType.GRID:\n      return <GridFill />;\n    case ShapeType.ARROW:\n      return <ArrowFill />;\n    case ShapeType.TWO_SIDES_CUBOID:\n      return <TwoSidesFill />;\n    default:\n  }\n  return null;\n};\n\nexport default ShapeIcon;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}