{"ast":null,"code":"import{getStorage,setStorage}from'./storage';export let CacheType=/*#__PURE__*/function(CacheType){CacheType[\"GLOBAL\"]=\"global\";CacheType[\"SESSION\"]=\"session\";CacheType[\"BY_PROJECT\"]=\"by-project\";CacheType[\"BY_JOB\"]=\"by-job\";return CacheType;}({});const splitKey='-pid-';const cachedProjectsCount=10;const cachedJobsCount=20;function getNamespaceForProject(toolName,projectId){return\"\".concat(toolName).concat(splitKey).concat(projectId);}function getNamespaceForJob(toolName,jobId){return\"\".concat(toolName).concat(splitKey).concat(jobId);}function getCache(type,key){const storage=type==='session'?sessionStorage:localStorage;const value=storage.getItem(key);if(typeof value==='string'){try{const parsedValue=JSON.parse(value);return parsedValue;}catch(e){return value;}}return undefined;}function setCache(type,key,value){const storage=type==='session'?sessionStorage:localStorage;try{storage.setItem(key,typeof value==='string'?value:JSON.stringify(value));}catch(e){console.log(\"set \".concat(type,\" storage error: \"),e);}}function removeCache(type,key){const storage=type==='session'?sessionStorage:localStorage;storage.removeItem(key);}export default class ToolStorage{get currentProjectNamespace(){return getNamespaceForProject(this.toolName,this.currentProject);}get cachedProjectsNamespace(){return\"\".concat(this.toolName,\"-cached-proejcts\");}get currentJobNamespace(){return getNamespaceForJob(this.toolName,this.currentJob);}get cachedJobsNamespace(){return\"\".concat(this.toolName,\"-cached-jobs\");}constructor(_ref){let{toolName,currentProject,currentJob,getCacheTypeByKey}=_ref;this.toolName=void 0;this.currentProject=void 0;this.currentJob=void 0;this.getCacheTypeByKey=void 0;this.toolName=toolName;this.currentProject=currentProject||'projectId-default';this.currentJob=currentJob||'jobId-default';this.getCacheTypeByKey=getCacheTypeByKey;}setCurrentProject(projectId,jobId){if(projectId){this.currentProject=projectId;}if(jobId){this.currentJob=jobId;}}get(key){const cacheType=this.getCacheTypeByKey(key);switch(cacheType){case CacheType.GLOBAL:case CacheType.SESSION:return getCache(cacheType,key);case CacheType.BY_PROJECT:return this.getCacheByProject(key);case CacheType.BY_JOB:return this.getCacheByJob(key);default:return undefined;}}set(key,value){const cacheType=this.getCacheTypeByKey(key);switch(cacheType){case CacheType.GLOBAL:case CacheType.SESSION:setCache(cacheType,key,value);break;case CacheType.BY_PROJECT:this.setCacheByProject(key,value);break;case CacheType.BY_JOB:this.setCacheByJob(key,value);break;default:}}remove(key){const cacheType=this.getCacheTypeByKey(key);switch(cacheType){case CacheType.GLOBAL:case CacheType.SESSION:removeCache(cacheType,key);break;case CacheType.BY_PROJECT:this.removeCacheByProject(key);break;case CacheType.BY_JOB:this.removeCacheByJob(key);break;default:}}getCacheByProject(key){return getStorage(this.currentProjectNamespace,key);}setCacheByProject(key,value){this.updateCachedProjects();setStorage(this.currentProjectNamespace,key,value);}removeCacheByProject(key){const store=this.getCacheByProject(key);if(store){delete store[key];this.updateCachedProjects();try{localStorage.setItem(this.currentProjectNamespace,JSON.stringify(store));}catch(e){console.log('update storage error: ',e);}}}updateCachedProjects(){let store;try{store=JSON.parse(localStorage.getItem(this.cachedProjectsNamespace)||'{}');}catch(e){store={};}const cachedProjects=Object.keys(store);if(!cachedProjects.includes(this.currentProject)&&cachedProjects.length>=cachedProjectsCount){// cached projects full, remove oldest projects\ncachedProjects.sort((a,b)=>store[a]-store[b]);// asc\nconst deleteCount=cachedProjects.length-cachedProjectsCount+1;for(let i=0;i<deleteCount;i+=1){const deleteProject=cachedProjects[i];delete store[deleteProject];localStorage.removeItem(getNamespaceForProject(this.toolName,deleteProject));}}store[this.currentProject]=Date.now();try{localStorage.setItem(this.cachedProjectsNamespace,JSON.stringify(store));}catch(e){console.log('update cahced projects error: ',e);}}getCacheByJob(key){return getStorage(this.currentJobNamespace,key);}setCacheByJob(key,value){this.updateCachedJobs();setStorage(this.currentJobNamespace,key,value);}removeCacheByJob(key){const store=this.getCacheByJob(key);if(store){delete store[key];this.updateCachedJobs();try{localStorage.setItem(this.currentJobNamespace,JSON.stringify(store));}catch(e){console.info('update storage error: ',e);}}}updateCachedJobs(){let store;try{store=JSON.parse(localStorage.getItem(this.cachedJobsNamespace)||'{}');}catch(e){store={};}const cachedJobs=Object.keys(store);if(!cachedJobs.includes(this.currentJob)&&cachedJobs.length>=cachedJobsCount){// cached projects full, remove oldest projects\ncachedJobs.sort((a,b)=>store[a]-store[b]);// asc\nconst deleteCount=cachedJobs.length-cachedJobsCount+1;for(let i=0;i<deleteCount;i+=1){const deleteJob=cachedJobs[i];delete store[deleteJob];localStorage.removeItem(getNamespaceForJob(this.toolName,deleteJob));}}store[this.currentJob]=Date.now();try{localStorage.setItem(this.cachedJobsNamespace,JSON.stringify(store));}catch(e){console.info('update cahced jobs error: ',e);}}}","map":{"version":3,"names":["getStorage","setStorage","CacheType","splitKey","cachedProjectsCount","cachedJobsCount","getNamespaceForProject","toolName","projectId","concat","getNamespaceForJob","jobId","getCache","type","key","storage","sessionStorage","localStorage","value","getItem","parsedValue","JSON","parse","e","undefined","setCache","setItem","stringify","console","log","removeCache","removeItem","ToolStorage","currentProjectNamespace","currentProject","cachedProjectsNamespace","currentJobNamespace","currentJob","cachedJobsNamespace","constructor","_ref","getCacheTypeByKey","setCurrentProject","get","cacheType","GLOBAL","SESSION","BY_PROJECT","getCacheByProject","BY_JOB","getCacheByJob","set","setCacheByProject","setCacheByJob","remove","removeCacheByProject","removeCacheByJob","updateCachedProjects","store","cachedProjects","Object","keys","includes","length","sort","a","b","deleteCount","i","deleteProject","Date","now","updateCachedJobs","info","cachedJobs","deleteJob"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/utils/tool-storage.ts"],"sourcesContent":["import { getStorage, setStorage } from './storage';\n\nexport enum CacheType {\n  // for all projects\n  GLOBAL = 'global',\n  // for all projects, but only affect current session\n  SESSION = 'session',\n  // for one project\n  BY_PROJECT = 'by-project',\n\n  // for one job\n  BY_JOB = 'by-job',\n}\n\nconst splitKey = '-pid-';\nconst cachedProjectsCount = 10;\nconst cachedJobsCount = 20;\n\nfunction getNamespaceForProject(toolName: string, projectId: string) {\n  return `${toolName}${splitKey}${projectId}`;\n}\n\nfunction getNamespaceForJob(toolName: string, jobId: string) {\n  return `${toolName}${splitKey}${jobId}`;\n}\n\nfunction getCache(type: CacheType.GLOBAL | CacheType.SESSION, key: string) {\n  const storage = type === 'session' ? sessionStorage : localStorage;\n  const value = storage.getItem(key);\n  if (typeof value === 'string') {\n    try {\n      const parsedValue = JSON.parse(value);\n      return parsedValue;\n    } catch (e) {\n      return value;\n    }\n  }\n  return undefined;\n}\nfunction setCache(type: CacheType.GLOBAL | CacheType.SESSION, key: string, value: unknown) {\n  const storage = type === 'session' ? sessionStorage : localStorage;\n  try {\n    storage.setItem(key, typeof value === 'string' ? value : JSON.stringify(value));\n  } catch (e) {\n    console.log(`set ${type} storage error: `, e);\n  }\n}\nfunction removeCache(type: CacheType.GLOBAL | CacheType.SESSION, key: string) {\n  const storage = type === 'session' ? sessionStorage : localStorage;\n  storage.removeItem(key);\n}\n\nexport default class ToolStorage {\n  toolName: string;\n\n  currentProject: string;\n\n  currentJob: string;\n\n  getCacheTypeByKey: (key: string) => CacheType | undefined;\n\n  get currentProjectNamespace() {\n    return getNamespaceForProject(this.toolName, this.currentProject);\n  }\n\n  get cachedProjectsNamespace() {\n    return `${this.toolName}-cached-proejcts`;\n  }\n\n  get currentJobNamespace() {\n    return getNamespaceForJob(this.toolName, this.currentJob);\n  }\n\n  get cachedJobsNamespace() {\n    return `${this.toolName}-cached-jobs`;\n  }\n\n  constructor({ toolName, currentProject, currentJob, getCacheTypeByKey }: {\n    toolName: string;\n    currentProject?: string;\n    currentJob?: string;\n\n    getCacheTypeByKey: (key: string) => CacheType | undefined;\n  }) {\n    this.toolName = toolName;\n    this.currentProject = currentProject || 'projectId-default';\n    this.currentJob = currentJob || 'jobId-default';\n\n    this.getCacheTypeByKey = getCacheTypeByKey;\n  }\n\n  setCurrentProject(projectId?: string, jobId?: string) {\n    if (projectId) {\n      this.currentProject = projectId;\n    }\n    if (jobId) {\n      this.currentJob = jobId;\n    }\n  }\n\n  get(key: string) {\n    const cacheType = this.getCacheTypeByKey(key);\n    switch (cacheType) {\n      case CacheType.GLOBAL:\n      case CacheType.SESSION:\n        return getCache(cacheType, key);\n      case CacheType.BY_PROJECT:\n        return this.getCacheByProject(key);\n      case CacheType.BY_JOB:\n        return this.getCacheByJob(key);\n      default:\n        return undefined;\n    }\n  }\n\n  set(key: string, value: unknown) {\n    const cacheType = this.getCacheTypeByKey(key);\n    switch (cacheType) {\n      case CacheType.GLOBAL:\n      case CacheType.SESSION:\n        setCache(cacheType, key, value);\n        break;\n      case CacheType.BY_PROJECT:\n        this.setCacheByProject(key, value);\n        break;\n      case CacheType.BY_JOB:\n        this.setCacheByJob(key, value);\n        break;\n      default:\n    }\n  }\n\n  remove(key: string) {\n    const cacheType = this.getCacheTypeByKey(key);\n    switch (cacheType) {\n      case CacheType.GLOBAL:\n      case CacheType.SESSION:\n        removeCache(cacheType, key);\n        break;\n      case CacheType.BY_PROJECT:\n        this.removeCacheByProject(key);\n        break;\n      case CacheType.BY_JOB:\n        this.removeCacheByJob(key);\n        break;\n      default:\n    }\n  }\n\n  getCacheByProject(key: string) {\n    return getStorage(this.currentProjectNamespace, key);\n  }\n\n  setCacheByProject(key: string, value: unknown) {\n    this.updateCachedProjects();\n    setStorage(this.currentProjectNamespace, key, value);\n  }\n\n  removeCacheByProject(key: string) {\n    const store = this.getCacheByProject(key);\n    if (store) {\n      delete store[key];\n      this.updateCachedProjects();\n      try {\n        localStorage.setItem(this.currentProjectNamespace, JSON.stringify(store));\n      } catch (e) {\n        console.log('update storage error: ', e);\n      }\n    }\n  }\n\n  updateCachedProjects() {\n    let store: Record<string, number>;\n    try {\n      store = JSON.parse(localStorage.getItem(this.cachedProjectsNamespace) || '{}');\n    } catch (e) {\n      store = {};\n    }\n\n    const cachedProjects = Object.keys(store);\n    if (!cachedProjects.includes(this.currentProject) && cachedProjects.length >= cachedProjectsCount) {\n      // cached projects full, remove oldest projects\n      cachedProjects.sort((a, b) => store[a] - store[b]); // asc\n      const deleteCount = cachedProjects.length - cachedProjectsCount + 1;\n      for (let i = 0; i < deleteCount; i += 1) {\n        const deleteProject = cachedProjects[i];\n        delete store[deleteProject];\n        localStorage.removeItem(getNamespaceForProject(this.toolName, deleteProject));\n      }\n    }\n\n    store[this.currentProject] = Date.now();\n\n    try {\n      localStorage.setItem(this.cachedProjectsNamespace, JSON.stringify(store));\n    } catch (e) {\n      console.log('update cahced projects error: ', e);\n    }\n  }\n\n  getCacheByJob<K>(key: string): K | undefined {\n    return getStorage(this.currentJobNamespace, key);\n  }\n\n  setCacheByJob<K>(key: string, value: K) {\n    this.updateCachedJobs();\n    setStorage(this.currentJobNamespace, key, value);\n  }\n\n  removeCacheByJob(key: string) {\n    const store = this.getCacheByJob(key);\n    if (store) {\n      delete (store as { [key: string]: unknown })[key];\n      this.updateCachedJobs();\n      try {\n        localStorage.setItem(this.currentJobNamespace, JSON.stringify(store));\n      } catch (e) {\n        console.info('update storage error: ', e);\n      }\n    }\n  }\n\n  updateCachedJobs() {\n    let store: Record<string, number>;\n    try {\n      store = JSON.parse(localStorage.getItem(this.cachedJobsNamespace) || '{}');\n    } catch (e) {\n      store = {};\n    }\n\n    const cachedJobs = Object.keys(store);\n    if (!cachedJobs.includes(this.currentJob) && cachedJobs.length >= cachedJobsCount) {\n      // cached projects full, remove oldest projects\n      cachedJobs.sort((a, b) => store[a] - store[b]); // asc\n      const deleteCount = cachedJobs.length - cachedJobsCount + 1;\n      for (let i = 0; i < deleteCount; i += 1) {\n        const deleteJob = cachedJobs[i];\n        delete store[deleteJob];\n        localStorage.removeItem(getNamespaceForJob(this.toolName, deleteJob));\n      }\n    }\n    store[this.currentJob] = Date.now();\n\n    try {\n      localStorage.setItem(this.cachedJobsNamespace, JSON.stringify(store));\n    } catch (e) {\n      console.info('update cahced jobs error: ', e);\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}