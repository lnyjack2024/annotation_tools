{"ast":null,"code":"import React,{useRef,useState,useEffect,useMemo}from'react';import{CaretDownOutlined,CheckOutlined}from'@ant-design/icons';import cx from'classnames';import'./Dropdown.scss';export let MenuItemType=/*#__PURE__*/function(MenuItemType){MenuItemType[\"ITEM\"]=\"item\";MenuItemType[\"TITLE\"]=\"title\";return MenuItemType;}({});const Dropdown=_ref=>{let{children,className,style,menuStyle,arrow,showIcon,closeAfterClick=true,triggerArea='element',disabled,active,menu,onClick}=_ref;const ref=useRef(null);const[dropdownVisible,setDropdownVisible]=useState(false);const menus=useMemo(()=>{if(typeof menu[0]==='string'){return menu.map(i=>({label:i}));}return menu.map(i=>i);},[menu]);useEffect(()=>{const mousedown=e=>{var _ref$current;if((_ref$current=ref.current)===null||_ref$current===void 0?void 0:_ref$current.contains(e.target)){return;}setDropdownVisible(false);};window.addEventListener('mousedown',mousedown);return()=>{window.removeEventListener('mousedown',mousedown);};},[]);const openDropdown=e=>{if(!disabled){e.stopPropagation();setDropdownVisible(!dropdownVisible);}};return/*#__PURE__*/React.createElement(\"div\",Object.assign({ref:ref,style:style,className:cx(className,'dropdown-button',{'dropdown-button--active':active,'dropdown-button--disabled':disabled})},triggerArea==='element'&&{onClick:openDropdown}),children,arrow&&/*#__PURE__*/React.createElement(\"div\",Object.assign({className:\"dropdown-icon\"},triggerArea==='arrow'&&{onClick:openDropdown}),/*#__PURE__*/React.createElement(CaretDownOutlined,{style:{transform:dropdownVisible?'rotate(180deg)':''}})),dropdownVisible&&/*#__PURE__*/React.createElement(\"div\",{className:\"dropdown-menu\",style:menuStyle},menus.map((m,i)=>m.type===MenuItemType.TITLE?/*#__PURE__*/React.createElement(\"div\",{key:m.label,className:\"dropdown-menu-title\"},m.render?m.render(m.label,i,m):m.label):/*#__PURE__*/React.createElement(\"div\",{key:m.value||m.label,className:cx('dropdown-menu-item',{active:m.active,disabled:m.disabled}),onClick:e=>{if(!m.disabled){e.stopPropagation();onClick(m.label,i,m);if(closeAfterClick){setDropdownVisible(false);}}}},showIcon&&/*#__PURE__*/React.createElement(\"span\",{className:\"dropdown-menu-item-icon\"},m.active&&/*#__PURE__*/React.createElement(CheckOutlined,null)),m.render?m.render(m.label,i,m):m.label))));};export default Dropdown;","map":{"version":3,"names":["React","useRef","useState","useEffect","useMemo","CaretDownOutlined","CheckOutlined","cx","MenuItemType","Dropdown","_ref","children","className","style","menuStyle","arrow","showIcon","closeAfterClick","triggerArea","disabled","active","menu","onClick","ref","dropdownVisible","setDropdownVisible","menus","map","i","label","mousedown","e","_ref$current","current","contains","target","window","addEventListener","removeEventListener","openDropdown","stopPropagation","createElement","Object","assign","transform","m","type","TITLE","key","render","value"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/common/dropdown/Dropdown.tsx"],"sourcesContent":["import React, { useRef, useState, useEffect, useMemo } from 'react';\nimport { CaretDownOutlined, CheckOutlined } from '@ant-design/icons';\nimport cx from 'classnames';\nimport './Dropdown.scss';\n\nexport enum MenuItemType {\n  ITEM = 'item',\n  TITLE = 'title',\n}\n\nexport interface MenuItem {\n  label: string;\n  type?: MenuItemType;\n  value?: any;\n  disabled?: boolean;\n  active?: boolean;\n  render?: (label: string, index: number, item: MenuItem) => React.ReactNode;\n}\n\nconst Dropdown = ({ children, className, style, menuStyle, arrow, showIcon, closeAfterClick = true, triggerArea = 'element', disabled, active, menu, onClick }: {\n  children?: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n  menuStyle?: React.CSSProperties;\n  arrow?: boolean;\n  showIcon?: boolean;\n  closeAfterClick?: boolean;\n  triggerArea?: 'element' | 'arrow';\n  disabled?: boolean;\n  active?: boolean;\n  menu: string[] | MenuItem[];\n  onClick: (item: string, index: number, menuItem: MenuItem) => void;\n}) => {\n  const ref = useRef<HTMLDivElement>(null);\n  const [dropdownVisible, setDropdownVisible] = useState(false);\n  const menus = useMemo<MenuItem[]>(() => {\n    if (typeof menu[0] === 'string') {\n      return (menu as string[]).map((i) => ({ label: i } as MenuItem));\n    }\n    return (menu as MenuItem[]).map((i) => i);\n  }, [menu]);\n\n  useEffect(() => {\n    const mousedown = (e: MouseEvent) => {\n      if (ref.current?.contains(e.target as HTMLElement)) {\n        return;\n      }\n      setDropdownVisible(false);\n    };\n    window.addEventListener('mousedown', mousedown);\n    return () => {\n      window.removeEventListener('mousedown', mousedown);\n    };\n  }, []);\n\n  const openDropdown = (e: React.MouseEvent) => {\n    if (!disabled) {\n      e.stopPropagation();\n      setDropdownVisible(!dropdownVisible);\n    }\n  };\n\n  return (\n    <div\n      ref={ref}\n      style={style}\n      className={cx(className, 'dropdown-button', {\n        'dropdown-button--active': active,\n        'dropdown-button--disabled': disabled,\n      })}\n      {...triggerArea === 'element' && {\n        onClick: openDropdown,\n      }}\n    >\n      {children}\n      {arrow && (\n        <div\n          className=\"dropdown-icon\"\n          {...triggerArea === 'arrow' && {\n            onClick: openDropdown,\n          }}\n        >\n          <CaretDownOutlined\n            style={{\n              transform: dropdownVisible ? 'rotate(180deg)' : '',\n            }}\n          />\n        </div>\n      )}\n      {dropdownVisible && (\n        <div className=\"dropdown-menu\" style={menuStyle}>\n          {menus.map((m, i) => (m.type === MenuItemType.TITLE ? (\n            <div key={m.label} className=\"dropdown-menu-title\">\n              {m.render ? m.render(m.label, i, m) : m.label}\n            </div>\n          ) : (\n            <div\n              key={m.value || m.label}\n              className={cx('dropdown-menu-item', {\n                active: m.active,\n                disabled: m.disabled,\n              })}\n              onClick={(e) => {\n                if (!m.disabled) {\n                  e.stopPropagation();\n                  onClick(m.label, i, m);\n                  if (closeAfterClick) {\n                    setDropdownVisible(false);\n                  }\n                }\n              }}\n            >\n              {showIcon && (\n                <span className=\"dropdown-menu-item-icon\">\n                  {m.active && <CheckOutlined />}\n                </span>\n              )}\n              {m.render ? m.render(m.label, i, m) : m.label}\n            </div>\n          )))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dropdown;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}