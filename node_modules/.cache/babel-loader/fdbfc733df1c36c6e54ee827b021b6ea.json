{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/keypoint/components/Board.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport cx from 'classnames';\nimport { Empty } from 'antd';\nimport Sidebar from './Sidebar';\nimport { LandmarkEditType } from '../types';\nimport RectangleFillIcon from '../../common/icons/RectangleFill';\nimport KeypointsIcon from '../../common/icons/Keypoints';\nimport DownArrow from '../../common/icons/DownArrow';\nimport formatMessage from '../locales';\nimport './Board.scss';\nconst Board = ({\n  categories = [],\n  categoryPathShapes = {},\n  points = {},\n  selectedShapeStatus,\n  ontologyGroup,\n  annotated,\n  total,\n  drawMode,\n  frameControlHeight,\n  readonly,\n  instanceReviewsMap,\n  setSelectedShape\n}) => {\n  var _instanceReviewsMap$s;\n  const [sampleUnfold, setSampleUnfold] = useState(false);\n  const [reference, setReference] = useState('');\n  const [isPoint, setIsPoint] = useState(false);\n  useEffect(() => {\n    if (ontologyGroup && selectedShapeStatus) {\n      if (selectedShapeStatus.shapeType === LandmarkEditType.RECTANGLE) {\n        setReference(ontologyGroup.reference || '');\n      } else if (selectedShapeStatus.shapeType === LandmarkEditType.KEYPOINT) {\n        const {\n          id\n        } = selectedShapeStatus;\n        const pointCategory = categories.find(v => id >= v.range[0] && id <= v.range[1]);\n        setReference((pointCategory === null || pointCategory === void 0 ? void 0 : pointCategory.reference) || '');\n      }\n      setIsPoint(ontologyGroup.type === LandmarkEditType.KEYPOINT);\n    }\n  }, [ontologyGroup, selectedShapeStatus, categories]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx('sample', {\n      unfold: sampleUnfold\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sample-label\",\n    onClick: () => {\n      setSampleUnfold(!sampleUnfold);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"Sample\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: cx('sample-label-arrow', {\n      unfold: sampleUnfold\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DownArrow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reference-box\",\n    style: {\n      height: sampleUnfold ? `calc(30vh - ${frameControlHeight / 3}px)` : 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, reference ? /*#__PURE__*/React.createElement(\"img\", {\n    src: reference,\n    className: \"reference\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 24\n    }\n  }) : /*#__PURE__*/React.createElement(Empty, {\n    style: {\n      marginTop: '100px'\n    },\n    description: \"\",\n    image: Empty.PRESENTED_IMAGE_SIMPLE,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 79\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"hint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, isPoint && (selectedShapeStatus === null || selectedShapeStatus === void 0 ? void 0 : selectedShapeStatus.id) !== undefined ? `${formatMessage('IS_DRAWING_POINT')}:  ${selectedShapeStatus === null || selectedShapeStatus === void 0 ? void 0 : selectedShapeStatus.id}` : ''))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"group-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: cx('group-icon', {\n      active: drawMode\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, isPoint ? /*#__PURE__*/React.createElement(KeypointsIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 26\n    }\n  }) : /*#__PURE__*/React.createElement(RectangleFillIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 46\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, ontologyGroup === null || ontologyGroup === void 0 ? void 0 : ontologyGroup.name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, annotated, \"/\", total)), isPoint && selectedShapeStatus && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"group-mark\",\n    style: {\n      height: `calc(60vh - ${frameControlHeight}px)`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Sidebar, {\n    categories: categories,\n    selectedShapeStatus: selectedShapeStatus,\n    categoryPathShapes: categoryPathShapes,\n    points: points,\n    selectedPoint: selectedShapeStatus.id,\n    readonly: readonly,\n    groupReviewsMap: instanceReviewsMap === null || instanceReviewsMap === void 0 ? void 0 : (_instanceReviewsMap$s = instanceReviewsMap[selectedShapeStatus.instanceId]) === null || _instanceReviewsMap$s === void 0 ? void 0 : _instanceReviewsMap$s[selectedShapeStatus.groupName],\n    setSelectedPoint: setSelectedShape,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }))));\n};\nexport default Board;","map":{"version":3,"names":["React","useState","useEffect","cx","Empty","Sidebar","LandmarkEditType","RectangleFillIcon","KeypointsIcon","DownArrow","formatMessage","Board","categories","categoryPathShapes","points","selectedShapeStatus","ontologyGroup","annotated","total","drawMode","frameControlHeight","readonly","instanceReviewsMap","setSelectedShape","_instanceReviewsMap$s","sampleUnfold","setSampleUnfold","reference","setReference","isPoint","setIsPoint","shapeType","RECTANGLE","KEYPOINT","id","pointCategory","find","v","range","type","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","unfold","onClick","style","height","src","alt","marginTop","description","image","PRESENTED_IMAGE_SIMPLE","undefined","active","name","selectedPoint","groupReviewsMap","instanceId","groupName","setSelectedPoint"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/keypoint/components/Board.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport cx from 'classnames';\nimport { Empty } from 'antd';\nimport Sidebar from './Sidebar';\nimport { CategoryItem, CategoryPathShape, Point, LandmarkEditType, ShapeInfo } from '../types';\nimport { OntologyChild } from '../store/OntologyStore';\nimport { InstanceReviewsMap, PointReviewResult } from '../store/ReviewsStore';\nimport RectangleFillIcon from '../../common/icons/RectangleFill';\nimport KeypointsIcon from '../../common/icons/Keypoints';\nimport DownArrow from '../../common/icons/DownArrow';\nimport formatMessage from '../locales';\nimport './Board.scss';\n\ninterface Props {\n  categories: CategoryItem[];\n  categoryPathShapes: {[categoryKey: string]: CategoryPathShape};\n  points: {\n    [index: number]: Point;\n  };\n  selectedShapeStatus: ShapeInfo | undefined;\n  ontologyGroup?: OntologyChild;\n  annotated: number | null;\n  total: number | null;\n  drawMode: boolean;\n  frameControlHeight: number;\n  readonly: boolean;\n  instanceReviewsMap?: InstanceReviewsMap;\n  setSelectedShape: (point: number) => void;\n}\n\nconst Board = ({\n  categories = [],\n  categoryPathShapes = {},\n  points = {},\n  selectedShapeStatus,\n  ontologyGroup,\n  annotated,\n  total,\n  drawMode,\n  frameControlHeight,\n  readonly,\n  instanceReviewsMap,\n  setSelectedShape,\n}: Props) => {\n  const [sampleUnfold, setSampleUnfold] = useState(false);\n  const [reference, setReference] = useState<string|undefined>('');\n  const [isPoint, setIsPoint] = useState<boolean>(false);\n  useEffect(() => {\n    if (ontologyGroup && selectedShapeStatus) {\n      if (selectedShapeStatus.shapeType === LandmarkEditType.RECTANGLE) {\n        setReference(ontologyGroup.reference || '');\n      } else if (selectedShapeStatus.shapeType === LandmarkEditType.KEYPOINT) {\n        const { id } = selectedShapeStatus;\n        const pointCategory = categories.find((v) => (id as number) >= v.range[0] && (id as number) <= v.range[1]);\n        setReference(pointCategory?.reference || '');\n      }\n      setIsPoint(ontologyGroup.type === LandmarkEditType.KEYPOINT);\n    }\n  }, [ontologyGroup, selectedShapeStatus, categories]);\n\n  return (\n    <div className=\"board-container\">\n      <div className={cx('sample', { unfold: sampleUnfold })}>\n        <div className=\"sample-label\" onClick={() => { setSampleUnfold(!sampleUnfold); }}>\n          <span>Sample</span>\n          <span className={cx('sample-label-arrow', { unfold: sampleUnfold })}>\n            <DownArrow />\n          </span>\n        </div>\n        <div\n          className=\"reference-box\"\n          style={{\n            height: sampleUnfold ? `calc(30vh - ${frameControlHeight / 3}px)` : 0\n          }}\n        >\n          {reference ? <img src={reference} className=\"reference\" alt=\"\" /> : <Empty style={{ marginTop: '100px' }} description=\"\" image={Empty.PRESENTED_IMAGE_SIMPLE} />}\n          <p className=\"hint\">\n            {\n              isPoint && selectedShapeStatus?.id !== undefined ?\n                `${formatMessage('IS_DRAWING_POINT')}:  ${selectedShapeStatus?.id}` :\n                ''\n            }\n          </p>\n        </div>\n      </div>\n      <div className=\"mark\">\n        <div className=\"group-label\">\n          <div className=\"left\">\n            <span className={cx('group-icon', { active: drawMode })}>\n              {isPoint ? <KeypointsIcon /> : <RectangleFillIcon /> }\n            </span>\n            <span>{ontologyGroup?.name}</span>\n          </div>\n          <div className=\"right\">\n            {annotated}\n            /\n            {total}\n          </div>\n        </div>\n        {isPoint && selectedShapeStatus && (\n          <div\n            className=\"group-mark\"\n            style={{\n              height: `calc(60vh - ${frameControlHeight}px)`\n            }}\n          >\n            <Sidebar\n              categories={categories}\n              selectedShapeStatus={selectedShapeStatus}\n              categoryPathShapes={categoryPathShapes}\n              points={points}\n              selectedPoint={selectedShapeStatus.id as number}\n              readonly={readonly}\n              groupReviewsMap={instanceReviewsMap?.[selectedShapeStatus.instanceId]?.[selectedShapeStatus.groupName] as PointReviewResult | undefined}\n              setSelectedPoint={setSelectedShape}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Board;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}