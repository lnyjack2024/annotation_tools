{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/TaskNavigation/Measurements/Measurements.jsx\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { translate } from '../../../constants';\nimport { setMeasurement } from '../../../redux/action';\nimport { LineMeasurement } from '../../../../common/icons';\nimport Dropdown from '../../../../common/dropdown/Dropdown';\nimport './Measurement.scss';\nconst catchMeasurementKey = 'long_audio_measurement';\nconst Measurements = ({\n  measurements,\n  selectedMeasurement,\n  setMeasurement: set\n}) => {\n  useEffect(() => {\n    let selected = Number(localStorage.getItem(catchMeasurementKey));\n    if (!selected || (measurements === null || measurements === void 0 ? void 0 : measurements.indexOf(selected)) < 0) {\n      selected = measurements[0];\n    }\n    handleSelect(selected);\n  }, []);\n  const handleSelect = v => {\n    set({\n      selectedMeasurement: v\n    });\n    localStorage.setItem(catchMeasurementKey, v);\n  };\n  const hided = selectedMeasurement < 0;\n  const menus = [{\n    label: translate('HIDE_LABEL'),\n    value: -1,\n    active: hided\n  }, ...measurements.map(m => ({\n    label: `${m} s`,\n    value: m,\n    active: m === selectedMeasurement\n  }))];\n  return measurements.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"audio-measurements-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: `measurement-icon${hided ? '' : ' active'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LineMeasurement, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Dropdown, {\n    arrow: true,\n    style: {\n      height: '100%'\n    },\n    menu: menus,\n    onClick: (label, index, item) => handleSelect(item.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"measurement-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, hided ? translate('HIDE_LABEL') : `${selectedMeasurement}s`)));\n};\nconst mapStateToProps = state => ({\n  measurements: state.measurements,\n  selectedMeasurement: state.selectedMeasurement\n});\nconst mapDispatchToProps = {\n  setMeasurement\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Measurements);","map":{"version":3,"names":["React","useEffect","connect","translate","setMeasurement","LineMeasurement","Dropdown","catchMeasurementKey","Measurements","measurements","selectedMeasurement","set","selected","Number","localStorage","getItem","indexOf","handleSelect","v","setItem","hided","menus","label","value","active","map","m","length","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","arrow","style","height","menu","onClick","index","item","mapStateToProps","state","mapDispatchToProps"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/TaskNavigation/Measurements/Measurements.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { translate } from '../../../constants';\nimport { setMeasurement } from '../../../redux/action';\nimport { LineMeasurement } from '../../../../common/icons';\nimport Dropdown from '../../../../common/dropdown/Dropdown';\nimport './Measurement.scss';\n\nconst catchMeasurementKey = 'long_audio_measurement';\n\nconst Measurements = ({ measurements, selectedMeasurement, setMeasurement: set }) => {\n  useEffect(() => {\n    let selected = Number(localStorage.getItem(catchMeasurementKey));\n    if (!selected || measurements?.indexOf(selected) < 0) {\n      selected = measurements[0];\n    }\n    handleSelect(selected);\n  }, []);\n\n  const handleSelect = (v) => {\n    set({ selectedMeasurement: v });\n    localStorage.setItem(catchMeasurementKey, v);\n  };\n\n  const hided = selectedMeasurement < 0;\n  const menus = [\n    { label: translate('HIDE_LABEL'), value: -1, active: hided },\n    ...measurements.map((m) => ({ label: `${m} s`, value: m, active: m === selectedMeasurement })),\n  ];\n  return measurements.length > 0 && (\n    <div className=\"audio-measurements-button\">\n      <span className={`measurement-icon${hided ? '' : ' active'}`}>\n        <LineMeasurement />\n      </span>\n      <Dropdown\n        arrow\n        style={{ height: '100%' }}\n        menu={menus}\n        onClick={(label, index, item) => handleSelect(item.value)}\n      >\n        <span className=\"measurement-time\">\n          {hided ? translate('HIDE_LABEL') : `${selectedMeasurement}s`}\n        </span>\n      </Dropdown>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  measurements: state.measurements,\n  selectedMeasurement: state.selectedMeasurement,\n});\nconst mapDispatchToProps = {\n  setMeasurement,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Measurements);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}