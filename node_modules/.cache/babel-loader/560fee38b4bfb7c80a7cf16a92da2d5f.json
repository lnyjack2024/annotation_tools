{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/editable-text/components/toolBar/toolItem.jsx\";\nimport React, { useMemo } from 'react';\nimport { observer } from 'mobx-react';\nimport cx from 'classnames';\nimport hexToRgba from 'hex-to-rgba';\nimport { MissingIcon } from '../../../common/icons';\nimport { TAG, ReviewMode } from '../../types';\nimport KeysTransform from './const';\nimport { generateConfigKeyByKeys } from '../../utils/helper';\nimport { isQATag } from '../../store/tag_mode';\nconst ToolItem = observer(({\n  ontologyItem,\n  setCurrentBrush,\n  currentBrush,\n  ontologiesStatusMap,\n  showReview,\n  reviewable,\n  isRework,\n  reviewMode,\n  type\n}) => {\n  const isSelected = useMemo(() => currentBrush && generateConfigKeyByKeys(ontologyItem.keys) === generateConfigKeyByKeys(currentBrush.keys), [currentBrush, ontologyItem]);\n  const statusInfo = useMemo(() => {\n    const statusItem = ontologiesStatusMap === null || ontologiesStatusMap === void 0 ? void 0 : ontologiesStatusMap.get(generateConfigKeyByKeys(ontologyItem.keys));\n    if (!statusItem) {\n      return {\n        tagCount: undefined,\n        rejectCount: undefined\n      };\n    }\n    if (statusItem.isCollapse) {\n      return {\n        tagCount: statusItem.tagCountContainChildren,\n        rejectCount: statusItem.rejectCountContainChildren\n      };\n    }\n    return {\n      tagCount: statusItem.tagCount,\n      rejectCount: statusItem.rejectCount\n    };\n  }, [ontologiesStatusMap, ontologyItem]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cx('tool-item', {\n      selected: isSelected\n    }),\n    style: {\n      backgroundColor: isSelected && ontologyItem.color ? hexToRgba(ontologyItem.color, 0.3) : '#4C5366'\n    },\n    onClick: () => {\n      if ((reviewable || isRework) && isQATag(ontologyItem.type) && reviewMode !== ReviewMode.REVIEW) {\n        return;\n      }\n      setCurrentBrush(ontologyItem);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tool-item-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, KeysTransform[type] === TAG.LABEL_QA ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"tool-item-left-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(MissingIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 50\n    }\n  })) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"tool-item-left-color\",\n    style: {\n      background: ontologyItem.color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"tool-item-left-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, ' ', ontologyItem.displayName || ontologyItem.text)), statusInfo && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tool-item-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, showReview && !isQATag(ontologyItem.type) && statusInfo.rejectCount ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"tool-count-reviewed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, statusInfo.rejectCount), \"/\") : null, statusInfo.tagCount));\n});\nexport default ToolItem;","map":{"version":3,"names":["React","useMemo","observer","cx","hexToRgba","MissingIcon","TAG","ReviewMode","KeysTransform","generateConfigKeyByKeys","isQATag","ToolItem","ontologyItem","setCurrentBrush","currentBrush","ontologiesStatusMap","showReview","reviewable","isRework","reviewMode","type","isSelected","keys","statusInfo","statusItem","get","tagCount","undefined","rejectCount","isCollapse","tagCountContainChildren","rejectCountContainChildren","createElement","className","selected","style","backgroundColor","color","onClick","REVIEW","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","LABEL_QA","background","displayName","text","Fragment"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/editable-text/components/toolBar/toolItem.jsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { observer } from 'mobx-react';\nimport cx from 'classnames';\nimport hexToRgba from 'hex-to-rgba';\nimport { MissingIcon } from '../../../common/icons';\nimport { TAG, ReviewMode } from '../../types';\nimport KeysTransform from './const';\nimport { generateConfigKeyByKeys } from '../../utils/helper';\nimport { isQATag } from '../../store/tag_mode';\n\nconst ToolItem = observer(({ ontologyItem, setCurrentBrush, currentBrush, ontologiesStatusMap, showReview, reviewable, isRework, reviewMode, type }) => {\n  const isSelected = useMemo(() => currentBrush && generateConfigKeyByKeys(ontologyItem.keys) === generateConfigKeyByKeys(currentBrush.keys), [currentBrush, ontologyItem]);\n  const statusInfo = useMemo(() => {\n    const statusItem = ontologiesStatusMap?.get(generateConfigKeyByKeys(ontologyItem.keys));\n    if (!statusItem) {\n      return {\n        tagCount: undefined,\n        rejectCount: undefined\n      };\n    }\n    if (statusItem.isCollapse) {\n      return {\n        tagCount: statusItem.tagCountContainChildren,\n        rejectCount: statusItem.rejectCountContainChildren\n      };\n    }\n    return {\n      tagCount: statusItem.tagCount,\n      rejectCount: statusItem.rejectCount\n    };\n  }, [ontologiesStatusMap, ontologyItem]);\n\n  return (\n    <div\n      className={cx('tool-item', { selected: isSelected })}\n      style={{ backgroundColor: isSelected && ontologyItem.color ? hexToRgba(ontologyItem.color, 0.3) : '#4C5366' }}\n      onClick={() => {\n        if ((reviewable || isRework) && isQATag(ontologyItem.type) && reviewMode !== ReviewMode.REVIEW) {\n          return;\n        }\n        setCurrentBrush(ontologyItem);\n      }}\n    >\n      <div className=\"tool-item-left\">\n        {KeysTransform[type] === TAG.LABEL_QA ?\n          (<span className=\"tool-item-left-icon\"><MissingIcon /></span>) :\n          (<span className=\"tool-item-left-color\" style={{ background: ontologyItem.color }} />)}\n        <span className=\"tool-item-left-text\">\n          {' '}\n          {ontologyItem.displayName || ontologyItem.text}\n        </span>\n      </div>\n      {statusInfo && (\n      <div className=\"tool-item-right\">\n        {\n          showReview && !isQATag(ontologyItem.type) && statusInfo.rejectCount\n            ? (\n              <>\n                <span className=\"tool-count-reviewed\">\n                  {statusInfo.rejectCount}\n                </span>\n                /\n              </>\n            )\n            : null\n        }\n\n        {statusInfo.tagCount }\n      </div>\n      )}\n    </div>\n  );\n});\n\nexport default ToolItem;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}