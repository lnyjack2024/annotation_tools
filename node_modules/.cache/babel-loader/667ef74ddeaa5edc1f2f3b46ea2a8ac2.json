{"ast":null,"code":"import { preloadImage } from './index';\nconst IMAGE_CACHE_SIZE = 10;\nexport class ImagePreloader {\n  constructor(images) {\n    /**\n     * image list\n     */\n    this.images = void 0;\n    /**\n     * currently preloaded image index start\n     */\n    this.preloadedImageIndex = -1;\n    this.images = images;\n  }\n  preload(index) {\n    if (this.preloadedImageIndex < 0) {\n      // never preload\n      this.cacheImages(index);\n    } else {\n      const offset = index - this.preloadedImageIndex;\n      if (Math.abs(offset) >= IMAGE_CACHE_SIZE) {\n        // offset exceeds cache size, always load from start\n        this.cacheImages(index);\n      } else if (offset !== 0) {\n        const startFrame = offset > 0 ? this.preloadedImageIndex + IMAGE_CACHE_SIZE : index;\n        this.cacheImages(startFrame, Math.abs(offset));\n      }\n    }\n    this.preloadedImageIndex = index;\n  }\n  cacheImages(startIndex, cacheSize = IMAGE_CACHE_SIZE) {\n    Array.from({\n      length: cacheSize\n    }).forEach((_, i) => {\n      const index = startIndex + i;\n      if (index >= 0 && index < this.images.length) {\n        const image = this.images[index];\n        if (image) {\n          preloadImage(image, '');\n        }\n      }\n    });\n  }\n}\nexport default images => new ImagePreloader(images);","map":{"version":3,"names":["preloadImage","IMAGE_CACHE_SIZE","ImagePreloader","constructor","images","preloadedImageIndex","preload","index","cacheImages","offset","Math","abs","startFrame","startIndex","cacheSize","Array","from","length","forEach","_","i","image"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/utils/image-preloader.ts"],"sourcesContent":["import { preloadImage } from './index';\n\nconst IMAGE_CACHE_SIZE = 10;\n\nexport class ImagePreloader {\n  /**\n   * image list\n   */\n  images: string[];\n\n  /**\n   * currently preloaded image index start\n   */\n  preloadedImageIndex = -1;\n\n  constructor(images: string[]) {\n    this.images = images;\n  }\n\n  preload(index: number) {\n    if (this.preloadedImageIndex < 0) {\n      // never preload\n      this.cacheImages(index);\n    } else {\n      const offset = index - this.preloadedImageIndex;\n      if (Math.abs(offset) >= IMAGE_CACHE_SIZE) {\n        // offset exceeds cache size, always load from start\n        this.cacheImages(index);\n      } else if (offset !== 0) {\n        const startFrame = offset > 0 ? this.preloadedImageIndex + IMAGE_CACHE_SIZE : index;\n        this.cacheImages(startFrame, Math.abs(offset));\n      }\n    }\n\n    this.preloadedImageIndex = index;\n  }\n\n  cacheImages(startIndex: number, cacheSize: number = IMAGE_CACHE_SIZE) {\n    Array.from({ length: cacheSize }).forEach((_, i) => {\n      const index = startIndex + i;\n      if (index >= 0 && index < this.images.length) {\n        const image = this.images[index];\n        if (image) {\n          preloadImage(image, '');\n        }\n      }\n    });\n  }\n}\n\nexport default (images: string[]) => new ImagePreloader(images);\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,SAAS;AAEtC,MAAMC,gBAAgB,GAAG,EAAE;AAE3B,OAAO,MAAMC,cAAc,CAAC;EAW1BC,WAAWA,CAACC,MAAgB,EAAE;IAV9B;AACF;AACA;IAFE,KAGAA,MAAM;IAEN;AACF;AACA;IAFE,KAGAC,mBAAmB,GAAG,CAAC,CAAC;IAGtB,IAAI,CAACD,MAAM,GAAGA,MAAM;EACtB;EAEAE,OAAOA,CAACC,KAAa,EAAE;IACrB,IAAI,IAAI,CAACF,mBAAmB,GAAG,CAAC,EAAE;MAChC;MACA,IAAI,CAACG,WAAW,CAACD,KAAK,CAAC;IACzB,CAAC,MAAM;MACL,MAAME,MAAM,GAAGF,KAAK,GAAG,IAAI,CAACF,mBAAmB;MAC/C,IAAIK,IAAI,CAACC,GAAG,CAACF,MAAM,CAAC,IAAIR,gBAAgB,EAAE;QACxC;QACA,IAAI,CAACO,WAAW,CAACD,KAAK,CAAC;MACzB,CAAC,MAAM,IAAIE,MAAM,KAAK,CAAC,EAAE;QACvB,MAAMG,UAAU,GAAGH,MAAM,GAAG,CAAC,GAAG,IAAI,CAACJ,mBAAmB,GAAGJ,gBAAgB,GAAGM,KAAK;QACnF,IAAI,CAACC,WAAW,CAACI,UAAU,EAAEF,IAAI,CAACC,GAAG,CAACF,MAAM,CAAC,CAAC;MAChD;IACF;IAEA,IAAI,CAACJ,mBAAmB,GAAGE,KAAK;EAClC;EAEAC,WAAWA,CAACK,UAAkB,EAAEC,SAAiB,GAAGb,gBAAgB,EAAE;IACpEc,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAEH;IAAU,CAAC,CAAC,CAACI,OAAO,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MAClD,MAAMb,KAAK,GAAGM,UAAU,GAAGO,CAAC;MAC5B,IAAIb,KAAK,IAAI,CAAC,IAAIA,KAAK,GAAG,IAAI,CAACH,MAAM,CAACa,MAAM,EAAE;QAC5C,MAAMI,KAAK,GAAG,IAAI,CAACjB,MAAM,CAACG,KAAK,CAAC;QAChC,IAAIc,KAAK,EAAE;UACTrB,YAAY,CAACqB,KAAK,EAAE,EAAE,CAAC;QACzB;MACF;IACF,CAAC,CAAC;EACJ;AACF;AAEA,eAAgBjB,MAAgB,IAAK,IAAIF,cAAc,CAACE,MAAM,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}