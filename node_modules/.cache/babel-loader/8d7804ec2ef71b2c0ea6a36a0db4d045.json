{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/multi-channel/components/InfoPanel/index.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { observer } from 'mobx-react';\nimport cx from 'classnames';\nimport { Expand, Collapse } from 'src/components/common/icons';\nimport ItemPanel from './ItemPanel';\nimport store from '../../store/RootStore';\nimport i18n from '../../locales';\nimport { Video } from '../../../common/icons';\nimport './index.scss';\nexport let TabKey = /*#__PURE__*/function (TabKey) {\n  TabKey[\"GLOBAL\"] = \"global\";\n  TabKey[\"SEGMENT\"] = \"segment\";\n  return TabKey;\n}({});\nexport let ContentKey = /*#__PURE__*/function (ContentKey) {\n  ContentKey[\"GLOBAL_ATTR\"] = \"global_attr\";\n  ContentKey[\"CHANNEL_ATTR\"] = \"channel_attr\";\n  ContentKey[\"GLOBAL_INFO\"] = \"global_info\";\n  ContentKey[\"VIDEO\"] = \"video\";\n  ContentKey[\"SEGMENT_ATTRIBUTES\"] = \"segment_attributes\";\n  return ContentKey;\n}({});\nconst InfoPanel = () => {\n  const {\n    global: {\n      globalConfig\n    },\n    videoUrl,\n    ontology: {\n      channelConfig\n    }\n  } = store;\n  const [unfold, setUnfold] = useState(true);\n  const [selectedTab, setSelectedTab] = useState(TabKey.GLOBAL);\n  const [selectedContent, setSelectedContent] = useState(undefined);\n  const [tabs, setTabs] = useState([{\n    key: TabKey.GLOBAL,\n    label: i18n.translate('INFO_PANEL_TAB1'),\n    contents: []\n  }\n  // {\n  //   key: TabKey.SEGMENT,\n  //   label: i18n.translate('INFO_PANEL_TAB2'),\n  //   contents: [\n  //     {\n  //       key: ContentKey.SEGMENT_ATTRIBUTES,\n  //       title: i18n.translate('INFO_PANEL_SEGMENT_ATTRIBUTES_TITLE')\n  //     }\n  //   ]\n  // },\n  ]);\n  useEffect(() => {\n    const newTabs = [...tabs];\n    newTabs[0].contents = [];\n    if (videoUrl !== undefined) {\n      newTabs[0].contents.push({\n        key: ContentKey.VIDEO,\n        title: /*#__PURE__*/React.createElement(Video, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 16\n          }\n        })\n      });\n    }\n    if (globalConfig.fields.length > 0) {\n      newTabs[0].contents.push({\n        key: ContentKey.GLOBAL_ATTR,\n        title: i18n.translate('INFO_PANEL_GLOBAL_TITLE')\n      });\n    }\n    newTabs[0].contents.push({\n      key: ContentKey.GLOBAL_INFO,\n      title: i18n.translate('INFO_PANEL_GLOBAL_INFO_TITLE')\n    });\n    if (channelConfig.fields.length > 0) {\n      newTabs[0].contents.push({\n        key: ContentKey.CHANNEL_ATTR,\n        title: i18n.translate('INFO_PANEL_CHANNEL_ATTR_TITLE')\n      });\n    }\n    setTabs(newTabs);\n  }, [globalConfig, videoUrl, channelConfig]);\n  const toggleFold = () => {\n    setUnfold(!unfold);\n    setSelectedContent(undefined);\n  };\n  const handleClickTab = content => {\n    setSelectedContent(content === selectedContent ? undefined : content);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cx('info-panel-container', {\n      fold: !unfold\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, unfold && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, i18n.translate('INFO_PANEL_TITLE')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"unfold-icon\",\n    onClick: toggleFold,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, unfold ? /*#__PURE__*/React.createElement(Collapse, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(Expand, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 36\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-tab-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, tabs.map(tab => /*#__PURE__*/React.createElement(\"div\", {\n    key: tab.key,\n    className: cx('info-tab-header-item', {\n      active: selectedTab === tab.key\n    }),\n    onClick: () => {\n      setSelectedTab(tab.key);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, tab.label))), /*#__PURE__*/React.createElement(\"div\", {\n    className: cx('info-tab-content', {\n      active: unfold\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, tabs.map(({\n    key: tabKey,\n    contents\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    key: tabKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, tabKey === selectedTab ? /*#__PURE__*/React.createElement(ItemPanel, {\n    currentTab: tabKey,\n    unfold: unfold,\n    contents: contents,\n    selectedContent: selectedContent,\n    handleClickTab: handleClickTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 19\n    }\n  }) : null))))));\n};\nexport default observer(InfoPanel);","map":{"version":3,"names":["React","useEffect","useState","observer","cx","Expand","Collapse","ItemPanel","store","i18n","Video","TabKey","ContentKey","InfoPanel","global","globalConfig","videoUrl","ontology","channelConfig","unfold","setUnfold","selectedTab","setSelectedTab","GLOBAL","selectedContent","setSelectedContent","undefined","tabs","setTabs","key","label","translate","contents","newTabs","push","VIDEO","title","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","fields","length","GLOBAL_ATTR","GLOBAL_INFO","CHANNEL_ATTR","toggleFold","handleClickTab","content","className","fold","onClick","map","tab","active","tabKey","currentTab"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/multi-channel/components/InfoPanel/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { observer } from 'mobx-react';\nimport cx from 'classnames';\nimport { Expand, Collapse } from 'src/components/common/icons';\nimport ItemPanel from './ItemPanel';\nimport store from '../../store/RootStore';\nimport i18n from '../../locales';\nimport { Video } from '../../../common/icons';\nimport './index.scss';\n\nexport enum TabKey {\n  GLOBAL = 'global',\n  SEGMENT = 'segment'\n}\n\nexport enum ContentKey {\n  GLOBAL_ATTR = 'global_attr',\n  CHANNEL_ATTR = 'channel_attr',\n  GLOBAL_INFO = 'global_info',\n  VIDEO = 'video',\n  SEGMENT_ATTRIBUTES = 'segment_attributes',\n}\n\nexport interface PanelContent {\n  key: ContentKey;\n  title: JSX.Element | Element | string;\n}\n\ninterface Tab {\n  key: TabKey;\n  label: string;\n  contents: PanelContent[];\n}\n\nconst InfoPanel = () => {\n  const {\n    global: { globalConfig }, videoUrl,\n    ontology: { channelConfig },\n  } = store;\n  const [unfold, setUnfold] = useState(true);\n  const [selectedTab, setSelectedTab] = useState<TabKey>(TabKey.GLOBAL);\n  const [selectedContent, setSelectedContent] = useState<ContentKey | undefined>(undefined);\n  const [tabs, setTabs] = useState<Tab[]>([\n    {\n      key: TabKey.GLOBAL,\n      label: i18n.translate('INFO_PANEL_TAB1'),\n      contents: []\n    },\n    // {\n    //   key: TabKey.SEGMENT,\n    //   label: i18n.translate('INFO_PANEL_TAB2'),\n    //   contents: [\n    //     {\n    //       key: ContentKey.SEGMENT_ATTRIBUTES,\n    //       title: i18n.translate('INFO_PANEL_SEGMENT_ATTRIBUTES_TITLE')\n    //     }\n    //   ]\n    // },\n  ]);\n\n  useEffect(() => {\n    const newTabs = [...tabs];\n    newTabs[0].contents = [];\n    if (videoUrl !== undefined) {\n      newTabs[0].contents.push({\n        key: ContentKey.VIDEO,\n        title: <Video />,\n      });\n    }\n    if (globalConfig.fields.length > 0) {\n      newTabs[0].contents.push({\n        key: ContentKey.GLOBAL_ATTR,\n        title: i18n.translate('INFO_PANEL_GLOBAL_TITLE'),\n      });\n    }\n    newTabs[0].contents.push({\n      key: ContentKey.GLOBAL_INFO,\n      title: i18n.translate('INFO_PANEL_GLOBAL_INFO_TITLE'),\n    });\n    if (channelConfig.fields.length > 0) {\n      newTabs[0].contents.push({\n        key: ContentKey.CHANNEL_ATTR,\n        title: i18n.translate('INFO_PANEL_CHANNEL_ATTR_TITLE'),\n      });\n    }\n    setTabs(newTabs);\n  }, [globalConfig, videoUrl, channelConfig]);\n\n  const toggleFold = () => {\n    setUnfold(!unfold);\n    setSelectedContent(undefined);\n  };\n\n  const handleClickTab = (content: ContentKey) => {\n    setSelectedContent(content === selectedContent ? undefined : content);\n  };\n\n  return (\n    <div className={cx('info-panel-container', {\n      fold: !unfold,\n    })}\n    >\n      <div className=\"info-header\">\n        {unfold && (\n          <div className=\"title\">\n            {i18n.translate('INFO_PANEL_TITLE')}\n          </div>\n        )}\n        <div className=\"unfold-icon\" onClick={toggleFold}>\n          {unfold ? <Collapse /> : <Expand />}\n        </div>\n      </div>\n      <div className=\"info-content\">\n        <div className=\"info-tab\">\n          <div className=\"info-tab-header\">\n            {tabs.map((tab) => (\n              <div\n                key={tab.key}\n                className={cx('info-tab-header-item', {\n                  active: selectedTab === tab.key\n                })}\n                onClick={() => { setSelectedTab(tab.key); }}\n              >\n                {tab.label}\n              </div>\n            ))}\n          </div>\n          <div className={cx('info-tab-content', { active: unfold })}>\n            {tabs.map(({ key: tabKey, contents }) => (\n              <div key={tabKey}>\n                {tabKey === selectedTab ? (\n                  <ItemPanel\n                    currentTab={tabKey}\n                    unfold={unfold}\n                    contents={contents}\n                    selectedContent={selectedContent}\n                    handleClickTab={handleClickTab}\n                  />\n                ) : null}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default observer(InfoPanel);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}