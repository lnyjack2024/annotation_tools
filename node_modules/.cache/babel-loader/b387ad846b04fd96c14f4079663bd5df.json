{"ast":null,"code":"import { Point } from 'pixi.js';\nimport Cursor from '../../Cursor';\nimport Control from './Control';\nimport { computedAngle } from '../../../../utils/math';\n/**\n * Rotation Control\n * @class\n */\nexport default class ControlRotation extends Control {\n  /**\n   * update control point position\n   * @param point\n   */\n  move(nowPoint) {\n    if (this._mousePoint) {\n      const center = new Point(this.position.x, this.position.y);\n      const radius = computedAngle(center, this._mousePoint, nowPoint);\n      this.onRotationChange(radius);\n      this._mousePoint = nowPoint;\n    }\n  }\n  constructor({\n    container,\n    position,\n    rotation,\n    size,\n    scale,\n    color,\n    cursor,\n    onFinish,\n    onRotationChange\n  }) {\n    super({\n      position,\n      container,\n      size,\n      scale,\n      color,\n      cursor: cursor || Cursor.ROTATE,\n      onFinish\n    });\n    /**\n     * control rotation\n     */\n    this.rotation = 0;\n    /**\n     * when control mousedown\n     */\n    this.onRotationChange = void 0;\n    this.rotation = rotation;\n    this.onRotationChange = onRotationChange;\n  }\n\n  /**\n   * draw control\n   */\n  drawControl() {\n    this.control.clear();\n    const pivot = new Point(this.position.x, this.position.y);\n    const rotationRectSize = 10 / this.scale;\n    this.control.interactive = true;\n    this.control.lineStyle(1 / this.scale, this.color);\n    this.control.moveTo(pivot.x, pivot.y);\n    this.control.lineTo(pivot.x, this.size);\n    this.control.beginFill(this.color);\n    this.control.drawRect(pivot.x - rotationRectSize / 2, this.size - rotationRectSize / 2, rotationRectSize, rotationRectSize);\n    this.control.endFill();\n    this.control.pivot.set(pivot.x, pivot.y);\n    this.control.position.set(pivot.x, pivot.y);\n    this.control.rotation = this.rotation;\n  }\n}","map":{"version":3,"names":["Point","Cursor","Control","computedAngle","ControlRotation","move","nowPoint","_mousePoint","center","position","x","y","radius","onRotationChange","constructor","container","rotation","size","scale","color","cursor","onFinish","ROTATE","drawControl","control","clear","pivot","rotationRectSize","interactive","lineStyle","moveTo","lineTo","beginFill","drawRect","endFill","set"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/common/shapes/controls/ControlRotation.ts"],"sourcesContent":["import { Point } from 'pixi.js';\nimport Cursor from '../../Cursor';\nimport Control, { ControlOptions } from './Control';\nimport { computedAngle } from '../../../../utils/math';\n\nexport interface ControlRotationOptions extends ControlOptions {\n  rotation: number;\n  onRotationChange: (angle: number) => void;\n}\n\n/**\n * Rotation Control\n * @class\n */\nexport default class ControlRotation extends Control {\n  /**\n   * control rotation\n   */\n  rotation = 0;\n\n  /**\n   * when control mousedown\n   */\n  onRotationChange: (angle: number) => void;\n\n  /**\n   * update control point position\n   * @param point\n   */\n  move(nowPoint:Point) {\n    if (this._mousePoint) {\n      const center = new Point(this.position.x, this.position.y);\n      const radius = computedAngle(center, this._mousePoint, nowPoint);\n      this.onRotationChange(radius);\n      this._mousePoint = nowPoint;\n    }\n  }\n\n  constructor({ container, position, rotation, size, scale, color, cursor, onFinish, onRotationChange }: ControlRotationOptions) {\n    super({ position, container, size, scale, color, cursor: cursor || Cursor.ROTATE, onFinish });\n    this.rotation = rotation;\n    this.onRotationChange = onRotationChange;\n  }\n\n  /**\n   * draw control\n   */\n  drawControl() {\n    this.control.clear();\n    const pivot = new Point(this.position.x, this.position.y);\n    const rotationRectSize = 10 / this.scale;\n    this.control.interactive = true;\n    this.control.lineStyle(1 / this.scale, this.color);\n    this.control.moveTo(pivot.x, pivot.y);\n    this.control.lineTo(pivot.x, this.size);\n    this.control.beginFill(this.color);\n    this.control.drawRect(pivot.x - rotationRectSize / 2, this.size - rotationRectSize / 2, rotationRectSize, rotationRectSize);\n    this.control.endFill();\n    this.control.pivot.set(pivot.x, pivot.y);\n    this.control.position.set(pivot.x, pivot.y);\n    this.control.rotation = this.rotation;\n  };\n}\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,SAAS;AAC/B,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,OAAO,MAA0B,WAAW;AACnD,SAASC,aAAa,QAAQ,wBAAwB;AAOtD;AACA;AACA;AACA;AACA,eAAe,MAAMC,eAAe,SAASF,OAAO,CAAC;EAWnD;AACF;AACA;AACA;EACEG,IAAIA,CAACC,QAAc,EAAE;IACnB,IAAI,IAAI,CAACC,WAAW,EAAE;MACpB,MAAMC,MAAM,GAAG,IAAIR,KAAK,CAAC,IAAI,CAACS,QAAQ,CAACC,CAAC,EAAE,IAAI,CAACD,QAAQ,CAACE,CAAC,CAAC;MAC1D,MAAMC,MAAM,GAAGT,aAAa,CAACK,MAAM,EAAE,IAAI,CAACD,WAAW,EAAED,QAAQ,CAAC;MAChE,IAAI,CAACO,gBAAgB,CAACD,MAAM,CAAC;MAC7B,IAAI,CAACL,WAAW,GAAGD,QAAQ;IAC7B;EACF;EAEAQ,WAAWA,CAAC;IAAEC,SAAS;IAAEN,QAAQ;IAAEO,QAAQ;IAAEC,IAAI;IAAEC,KAAK;IAAEC,KAAK;IAAEC,MAAM;IAAEC,QAAQ;IAAER;EAAyC,CAAC,EAAE;IAC7H,KAAK,CAAC;MAAEJ,QAAQ;MAAEM,SAAS;MAAEE,IAAI;MAAEC,KAAK;MAAEC,KAAK;MAAEC,MAAM,EAAEA,MAAM,IAAInB,MAAM,CAACqB,MAAM;MAAED;IAAS,CAAC,CAAC;IAxB/F;AACF;AACA;IAFE,KAGAL,QAAQ,GAAG,CAAC;IAEZ;AACF;AACA;IAFE,KAGAH,gBAAgB;IAiBd,IAAI,CAACG,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACH,gBAAgB,GAAGA,gBAAgB;EAC1C;;EAEA;AACF;AACA;EACEU,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,OAAO,CAACC,KAAK,CAAC,CAAC;IACpB,MAAMC,KAAK,GAAG,IAAI1B,KAAK,CAAC,IAAI,CAACS,QAAQ,CAACC,CAAC,EAAE,IAAI,CAACD,QAAQ,CAACE,CAAC,CAAC;IACzD,MAAMgB,gBAAgB,GAAG,EAAE,GAAG,IAAI,CAACT,KAAK;IACxC,IAAI,CAACM,OAAO,CAACI,WAAW,GAAG,IAAI;IAC/B,IAAI,CAACJ,OAAO,CAACK,SAAS,CAAC,CAAC,GAAG,IAAI,CAACX,KAAK,EAAE,IAAI,CAACC,KAAK,CAAC;IAClD,IAAI,CAACK,OAAO,CAACM,MAAM,CAACJ,KAAK,CAAChB,CAAC,EAAEgB,KAAK,CAACf,CAAC,CAAC;IACrC,IAAI,CAACa,OAAO,CAACO,MAAM,CAACL,KAAK,CAAChB,CAAC,EAAE,IAAI,CAACO,IAAI,CAAC;IACvC,IAAI,CAACO,OAAO,CAACQ,SAAS,CAAC,IAAI,CAACb,KAAK,CAAC;IAClC,IAAI,CAACK,OAAO,CAACS,QAAQ,CAACP,KAAK,CAAChB,CAAC,GAAGiB,gBAAgB,GAAG,CAAC,EAAE,IAAI,CAACV,IAAI,GAAGU,gBAAgB,GAAG,CAAC,EAAEA,gBAAgB,EAAEA,gBAAgB,CAAC;IAC3H,IAAI,CAACH,OAAO,CAACU,OAAO,CAAC,CAAC;IACtB,IAAI,CAACV,OAAO,CAACE,KAAK,CAACS,GAAG,CAACT,KAAK,CAAChB,CAAC,EAAEgB,KAAK,CAACf,CAAC,CAAC;IACxC,IAAI,CAACa,OAAO,CAACf,QAAQ,CAAC0B,GAAG,CAACT,KAAK,CAAChB,CAAC,EAAEgB,KAAK,CAACf,CAAC,CAAC;IAC3C,IAAI,CAACa,OAAO,CAACR,QAAQ,GAAG,IAAI,CAACA,QAAQ;EACvC;AACF","ignoreList":[]},"metadata":{},"sourceType":"module"}