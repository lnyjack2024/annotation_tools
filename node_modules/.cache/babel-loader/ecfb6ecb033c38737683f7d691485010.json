{"ast":null,"code":"import React from'react';import{observer}from'mobx-react';import{toJS}from'mobx';import{generateConfigKeyByKeys}from'../../utils/helper';import ToolGroupItem from'./toolGroupItem';import{TextIcon,Insertion,Relation}from'../../../common/icons';import{TAG}from'../../types';import store from'../../store/RootStore';import localMessage from'../../locale';import KeysTransform from'./const';const ToolGroup=observer(_ref=>{let{type,filteredOntologies,setCurrentBrush,currentBrush}=_ref;return/*#__PURE__*/React.createElement(\"div\",{className:\"tool-group-wrapper\"},KeysTransform[type]!==TAG.LABEL_QA&&/*#__PURE__*/React.createElement(\"div\",{className:\"tool-group-title\"},KeysTransform[type]===TAG.LABEL&&/*#__PURE__*/React.createElement(\"span\",{className:\"icon\"},/*#__PURE__*/React.createElement(TextIcon,null)),KeysTransform[type]===TAG.INSERTION&&/*#__PURE__*/React.createElement(\"span\",{className:\"icon\"},/*#__PURE__*/React.createElement(Insertion,null)),KeysTransform[type]===TAG.CONNECTION&&/*#__PURE__*/React.createElement(\"span\",{className:\"icon\"},/*#__PURE__*/React.createElement(Relation,null)),localMessage(KeysTransform[type])),filteredOntologies[type]&&/*#__PURE__*/React.createElement(\"div\",null,filteredOntologies[type].map(ontologyItem=>{const key=generateConfigKeyByKeys(ontologyItem.keys);return/*#__PURE__*/React.createElement(\"div\",{className:\"tool-group\",key:key},/*#__PURE__*/React.createElement(ToolGroupItem,{type:type,ontologiesStatusMap:toJS(store.ontology.ontologiesStatusMap),updateOntologiesCollapseStatus:store.ontology.updateOntologiesCollapseStatus,key:key,ontologyItem:ontologyItem,setCurrentBrush:setCurrentBrush,currentBrush:currentBrush,reviewable:store.reviewable,reviewMode:store.config.reviewMode,isRework:store.isRework}));})));});export default ToolGroup;","map":{"version":3,"names":["React","observer","toJS","generateConfigKeyByKeys","ToolGroupItem","TextIcon","Insertion","Relation","TAG","store","localMessage","KeysTransform","ToolGroup","_ref","type","filteredOntologies","setCurrentBrush","currentBrush","createElement","className","LABEL_QA","LABEL","INSERTION","CONNECTION","map","ontologyItem","key","keys","ontologiesStatusMap","ontology","updateOntologiesCollapseStatus","reviewable","reviewMode","config","isRework"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/editable-text/components/toolBar/toolGroup.jsx"],"sourcesContent":["import React from 'react';\nimport { observer } from 'mobx-react';\nimport { toJS } from 'mobx';\nimport { generateConfigKeyByKeys } from '../../utils/helper';\nimport ToolGroupItem from './toolGroupItem';\nimport { TextIcon, Insertion, Relation } from '../../../common/icons';\nimport { TAG } from '../../types';\nimport store from '../../store/RootStore';\nimport localMessage from '../../locale';\nimport KeysTransform from './const';\n\nconst ToolGroup = observer(({ type, filteredOntologies, setCurrentBrush, currentBrush }) => (\n  <div className=\"tool-group-wrapper\">\n    {KeysTransform[type] !== TAG.LABEL_QA && (\n    <div className=\"tool-group-title\">\n      {KeysTransform[type] === TAG.LABEL && (\n      <span className=\"icon\">\n        <TextIcon />\n      </span>\n      )}\n      {KeysTransform[type] === TAG.INSERTION && (\n      <span className=\"icon\">\n        <Insertion />\n      </span>\n      )}\n      {KeysTransform[type] === TAG.CONNECTION && (\n      <span className=\"icon\">\n        <Relation />\n      </span>\n      )}\n      {localMessage(KeysTransform[type])}\n    </div>\n    )}\n    {filteredOntologies[type] && (\n      <div>\n        {\n          filteredOntologies[type].map((ontologyItem) => {\n            const key = generateConfigKeyByKeys(ontologyItem.keys)\n            return (\n              <div className=\"tool-group\" key={key}>\n                <ToolGroupItem\n                  type={type}\n                  ontologiesStatusMap={toJS(store.ontology.ontologiesStatusMap)}\n                  updateOntologiesCollapseStatus={store.ontology.updateOntologiesCollapseStatus}\n                  key={key}\n                  ontologyItem={ontologyItem}\n                  setCurrentBrush={setCurrentBrush}\n                  currentBrush={currentBrush}\n                  reviewable={store.reviewable}\n                  reviewMode={store.config.reviewMode}\n                  isRework={store.isRework}\n                />\n              </div>\n            )\n          })\n        }\n      </div>\n    )}\n  </div>\n));\nexport default ToolGroup;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,YAAY,CACrC,OAASC,IAAI,KAAQ,MAAM,CAC3B,OAASC,uBAAuB,KAAQ,oBAAoB,CAC5D,MAAO,CAAAC,aAAa,KAAM,iBAAiB,CAC3C,OAASC,QAAQ,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,uBAAuB,CACrE,OAASC,GAAG,KAAQ,aAAa,CACjC,MAAO,CAAAC,KAAK,KAAM,uBAAuB,CACzC,MAAO,CAAAC,YAAY,KAAM,cAAc,CACvC,MAAO,CAAAC,aAAa,KAAM,SAAS,CAEnC,KAAM,CAAAC,SAAS,CAAGX,QAAQ,CAACY,IAAA,MAAC,CAAEC,IAAI,CAAEC,kBAAkB,CAAEC,eAAe,CAAEC,YAAa,CAAC,CAAAJ,IAAA,oBACrFb,KAAA,CAAAkB,aAAA,QAAKC,SAAS,CAAC,oBAAoB,EAChCR,aAAa,CAACG,IAAI,CAAC,GAAKN,GAAG,CAACY,QAAQ,eACrCpB,KAAA,CAAAkB,aAAA,QAAKC,SAAS,CAAC,kBAAkB,EAC9BR,aAAa,CAACG,IAAI,CAAC,GAAKN,GAAG,CAACa,KAAK,eAClCrB,KAAA,CAAAkB,aAAA,SAAMC,SAAS,CAAC,MAAM,eACpBnB,KAAA,CAAAkB,aAAA,CAACb,QAAQ,KAAE,CACP,CACL,CACAM,aAAa,CAACG,IAAI,CAAC,GAAKN,GAAG,CAACc,SAAS,eACtCtB,KAAA,CAAAkB,aAAA,SAAMC,SAAS,CAAC,MAAM,eACpBnB,KAAA,CAAAkB,aAAA,CAACZ,SAAS,KAAE,CACR,CACL,CACAK,aAAa,CAACG,IAAI,CAAC,GAAKN,GAAG,CAACe,UAAU,eACvCvB,KAAA,CAAAkB,aAAA,SAAMC,SAAS,CAAC,MAAM,eACpBnB,KAAA,CAAAkB,aAAA,CAACX,QAAQ,KAAE,CACP,CACL,CACAG,YAAY,CAACC,aAAa,CAACG,IAAI,CAAC,CAC9B,CACJ,CACAC,kBAAkB,CAACD,IAAI,CAAC,eACvBd,KAAA,CAAAkB,aAAA,YAEIH,kBAAkB,CAACD,IAAI,CAAC,CAACU,GAAG,CAAEC,YAAY,EAAK,CAC7C,KAAM,CAAAC,GAAG,CAAGvB,uBAAuB,CAACsB,YAAY,CAACE,IAAI,CAAC,CACtD,mBACE3B,KAAA,CAAAkB,aAAA,QAAKC,SAAS,CAAC,YAAY,CAACO,GAAG,CAAEA,GAAI,eACnC1B,KAAA,CAAAkB,aAAA,CAACd,aAAa,EACZU,IAAI,CAAEA,IAAK,CACXc,mBAAmB,CAAE1B,IAAI,CAACO,KAAK,CAACoB,QAAQ,CAACD,mBAAmB,CAAE,CAC9DE,8BAA8B,CAAErB,KAAK,CAACoB,QAAQ,CAACC,8BAA+B,CAC9EJ,GAAG,CAAEA,GAAI,CACTD,YAAY,CAAEA,YAAa,CAC3BT,eAAe,CAAEA,eAAgB,CACjCC,YAAY,CAAEA,YAAa,CAC3Bc,UAAU,CAAEtB,KAAK,CAACsB,UAAW,CAC7BC,UAAU,CAAEvB,KAAK,CAACwB,MAAM,CAACD,UAAW,CACpCE,QAAQ,CAAEzB,KAAK,CAACyB,QAAS,CAC1B,CACE,CAAC,CAEV,CAAC,CAEA,CAEJ,CAAC,EACP,CAAC,CACF,cAAe,CAAAtB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}