{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/phonetic-transcription/components/Helper/AttributesPannel.tsx\";\nimport React, { useState, useEffect, useImperativeHandle, forwardRef, useRef } from 'react';\nimport { observer } from 'mobx-react';\nimport { Input } from 'antd';\nimport rootStore from '../../store/RootStore';\nimport i18n from '../../locales';\nimport './AttributesPannel.scss';\nconst {\n  TextArea\n} = Input;\nconst AttributesPannel = forwardRef(({\n  instance\n}, ref) => {\n  const {\n    placement\n  } = rootStore.analyse;\n  const [label, setLabel] = useState('');\n  const [text, setText] = useState('');\n  const inputRef = useRef(null);\n  useEffect(() => {\n    init();\n  }, [instance]);\n  useImperativeHandle(ref, () => ({\n    handleFocus\n  }));\n\n  // input text\n  const handleChangeValue = e => {\n    e.persist();\n    if (instance) {\n      const {\n        value\n      } = e.target;\n      const {\n        setUpdatedInstances\n      } = rootStore.instance;\n      const newInstance = {\n        [instance.id]: {\n          ...instance,\n          text: value\n        }\n      };\n      setText(value);\n      setUpdatedInstances(newInstance);\n    }\n  };\n  const init = () => {\n    let str = '';\n    if (instance) {\n      var _categoryInstancesMap;\n      const {\n        selectedNumber,\n        categoryInstancesMap\n      } = rootStore.instance;\n      str = `${selectedNumber} / ${((_categoryInstancesMap = categoryInstancesMap[instance.category]) === null || _categoryInstancesMap === void 0 ? void 0 : _categoryInstancesMap.length) || 0}`;\n      setLabel(str);\n      setText(instance.text || '');\n    }\n  };\n  const handleFocus = () => {\n    var _inputRef$current;\n    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n  };\n  const handleKeyDown = e => {\n    if (e.keyCode === 13) {\n      var _inputRef$current2;\n      // enter\n      e.preventDefault();\n      (_inputRef$current2 = inputRef.current) === null || _inputRef$current2 === void 0 ? void 0 : _inputRef$current2.blur();\n    }\n  };\n  if (!instance || !rootStore.review.drawMode) return null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"praat-attributes\",\n    style: {\n      paddingRight: `${placement.margin}px`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"praat-attributes-label\",\n    style: {\n      width: `${placement.margin}px`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, label), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"praat-attributes-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    ref: inputRef,\n    value: text,\n    autoSize: {\n      minRows: 2,\n      maxRows: 3\n    },\n    onChange: handleChangeValue,\n    onKeyDown: handleKeyDown,\n    placeholder: i18n.translate('ANNOTATION_LABEL'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  })));\n});\nexport default observer(AttributesPannel);","map":{"version":3,"names":["React","useState","useEffect","useImperativeHandle","forwardRef","useRef","observer","Input","rootStore","i18n","TextArea","AttributesPannel","instance","ref","placement","analyse","label","setLabel","text","setText","inputRef","init","handleFocus","handleChangeValue","e","persist","value","target","setUpdatedInstances","newInstance","id","str","_categoryInstancesMap","selectedNumber","categoryInstancesMap","category","length","_inputRef$current","current","focus","handleKeyDown","keyCode","_inputRef$current2","preventDefault","blur","review","drawMode","createElement","className","style","paddingRight","margin","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","width","autoSize","minRows","maxRows","onChange","onKeyDown","placeholder","translate"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/phonetic-transcription/components/Helper/AttributesPannel.tsx"],"sourcesContent":["import React, { useState, useEffect, useImperativeHandle, forwardRef, useRef } from 'react';\nimport { observer } from 'mobx-react';\nimport { Input, InputRef } from 'antd';\nimport rootStore from '../../store/RootStore';\nimport i18n from '../../locales';\nimport { Instance } from '../../types';\nimport './AttributesPannel.scss';\n\nconst { TextArea } = Input;\n\ninterface AttributesProps {\n  instance: Instance | null;\n}\n\nexport interface AttributesHandle {\n  handleFocus: () => void;\n}\n\nconst AttributesPannel = forwardRef<AttributesHandle, AttributesProps>(({ instance }: AttributesProps, ref: any) => {\n  const { placement } = rootStore.analyse;\n  const [label, setLabel] = useState('');\n  const [text, setText] = useState('');\n  const inputRef = useRef<InputRef>(null);\n\n  useEffect(() => {\n    init();\n  }, [instance]);\n\n  useImperativeHandle(ref, () => ({\n    handleFocus,\n  }));\n\n  // input text\n  const handleChangeValue = (e: any) => {\n    e.persist();\n    if (instance) {\n      const { value } = e.target;\n      const { setUpdatedInstances } = rootStore.instance;\n      const newInstance: {[id:string]: Instance} = {\n        [instance.id]: {\n          ...instance,\n          text: value,\n        }\n      };\n      setText(value);\n      setUpdatedInstances(newInstance);\n    }\n  };\n\n  const init = () => {\n    let str = '';\n    if (instance) {\n      const { selectedNumber, categoryInstancesMap } = rootStore.instance;\n      str = `${selectedNumber} / ${categoryInstancesMap[instance.category]?.length || 0}`;\n      setLabel(str);\n      setText(instance.text || '');\n    }\n  };\n\n  const handleFocus = () => {\n    inputRef.current?.focus();\n  };\n\n  const handleKeyDown = (e: any) => {\n    if (e.keyCode === 13) { // enter\n      e.preventDefault();\n      inputRef.current?.blur();\n    }\n  };\n\n  if (!instance || !rootStore.review.drawMode) return null;\n\n  return (\n    <div className=\"praat-attributes\" style={{ paddingRight: `${placement.margin}px` }}>\n      <div className=\"praat-attributes-label\" style={{ width: `${placement.margin}px` }}>\n        {label}\n      </div>\n      <div className=\"praat-attributes-value\">\n        <TextArea\n          ref={inputRef}\n          value={text}\n          autoSize={{ minRows: 2, maxRows: 3 }}\n          onChange={handleChangeValue}\n          onKeyDown={handleKeyDown}\n          placeholder={i18n.translate('ANNOTATION_LABEL')}\n        />\n      </div>\n    </div>\n  );\n});\n\nexport default observer(AttributesPannel);\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,mBAAmB,EAAEC,UAAU,EAAEC,MAAM,QAAQ,OAAO;AAC3F,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,KAAK,QAAkB,MAAM;AACtC,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,IAAI,MAAM,eAAe;AAEhC,OAAO,yBAAyB;AAEhC,MAAM;EAAEC;AAAS,CAAC,GAAGH,KAAK;AAU1B,MAAMI,gBAAgB,GAAGP,UAAU,CAAoC,CAAC;EAAEQ;AAA0B,CAAC,EAAEC,GAAQ,KAAK;EAClH,MAAM;IAAEC;EAAU,CAAC,GAAGN,SAAS,CAACO,OAAO;EACvC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMmB,QAAQ,GAAGf,MAAM,CAAW,IAAI,CAAC;EAEvCH,SAAS,CAAC,MAAM;IACdmB,IAAI,CAAC,CAAC;EACR,CAAC,EAAE,CAACT,QAAQ,CAAC,CAAC;EAEdT,mBAAmB,CAACU,GAAG,EAAE,OAAO;IAC9BS;EACF,CAAC,CAAC,CAAC;;EAEH;EACA,MAAMC,iBAAiB,GAAIC,CAAM,IAAK;IACpCA,CAAC,CAACC,OAAO,CAAC,CAAC;IACX,IAAIb,QAAQ,EAAE;MACZ,MAAM;QAAEc;MAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;MAC1B,MAAM;QAAEC;MAAoB,CAAC,GAAGpB,SAAS,CAACI,QAAQ;MAClD,MAAMiB,WAAoC,GAAG;QAC3C,CAACjB,QAAQ,CAACkB,EAAE,GAAG;UACb,GAAGlB,QAAQ;UACXM,IAAI,EAAEQ;QACR;MACF,CAAC;MACDP,OAAO,CAACO,KAAK,CAAC;MACdE,mBAAmB,CAACC,WAAW,CAAC;IAClC;EACF,CAAC;EAED,MAAMR,IAAI,GAAGA,CAAA,KAAM;IACjB,IAAIU,GAAG,GAAG,EAAE;IACZ,IAAInB,QAAQ,EAAE;MAAA,IAAAoB,qBAAA;MACZ,MAAM;QAAEC,cAAc;QAAEC;MAAqB,CAAC,GAAG1B,SAAS,CAACI,QAAQ;MACnEmB,GAAG,GAAG,GAAGE,cAAc,MAAM,EAAAD,qBAAA,GAAAE,oBAAoB,CAACtB,QAAQ,CAACuB,QAAQ,CAAC,cAAAH,qBAAA,uBAAvCA,qBAAA,CAAyCI,MAAM,KAAI,CAAC,EAAE;MACnFnB,QAAQ,CAACc,GAAG,CAAC;MACbZ,OAAO,CAACP,QAAQ,CAACM,IAAI,IAAI,EAAE,CAAC;IAC9B;EACF,CAAC;EAED,MAAMI,WAAW,GAAGA,CAAA,KAAM;IAAA,IAAAe,iBAAA;IACxB,CAAAA,iBAAA,GAAAjB,QAAQ,CAACkB,OAAO,cAAAD,iBAAA,uBAAhBA,iBAAA,CAAkBE,KAAK,CAAC,CAAC;EAC3B,CAAC;EAED,MAAMC,aAAa,GAAIhB,CAAM,IAAK;IAChC,IAAIA,CAAC,CAACiB,OAAO,KAAK,EAAE,EAAE;MAAA,IAAAC,kBAAA;MAAE;MACtBlB,CAAC,CAACmB,cAAc,CAAC,CAAC;MAClB,CAAAD,kBAAA,GAAAtB,QAAQ,CAACkB,OAAO,cAAAI,kBAAA,uBAAhBA,kBAAA,CAAkBE,IAAI,CAAC,CAAC;IAC1B;EACF,CAAC;EAED,IAAI,CAAChC,QAAQ,IAAI,CAACJ,SAAS,CAACqC,MAAM,CAACC,QAAQ,EAAE,OAAO,IAAI;EAExD,oBACE9C,KAAA,CAAA+C,aAAA;IAAKC,SAAS,EAAC,kBAAkB;IAACC,KAAK,EAAE;MAAEC,YAAY,EAAE,GAAGpC,SAAS,CAACqC,MAAM;IAAK,CAAE;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACjFzD,KAAA,CAAA+C,aAAA;IAAKC,SAAS,EAAC,wBAAwB;IAACC,KAAK,EAAE;MAAES,KAAK,EAAE,GAAG5C,SAAS,CAACqC,MAAM;IAAK,CAAE;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC/EzC,KACE,CAAC,eACNhB,KAAA,CAAA+C,aAAA;IAAKC,SAAS,EAAC,wBAAwB;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrCzD,KAAA,CAAA+C,aAAA,CAACrC,QAAQ;IACPG,GAAG,EAAEO,QAAS;IACdM,KAAK,EAAER,IAAK;IACZyC,QAAQ,EAAE;MAAEC,OAAO,EAAE,CAAC;MAAEC,OAAO,EAAE;IAAE,CAAE;IACrCC,QAAQ,EAAEvC,iBAAkB;IAC5BwC,SAAS,EAAEvB,aAAc;IACzBwB,WAAW,EAAEvD,IAAI,CAACwD,SAAS,CAAC,kBAAkB,CAAE;IAAAb,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACjD,CACE,CACF,CAAC;AAEV,CAAC,CAAC;AAEF,eAAenD,QAAQ,CAACK,gBAAgB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}