{"ast":null,"code":"import _initializerDefineProperty from \"/Users/qzheng/Documents/webroot/annotation_tools/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/qzheng/Documents/webroot/annotation_tools/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/qzheng/Documents/webroot/annotation_tools/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor0, _descriptor1, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18;\nimport { observable, computed, action, makeObservable } from 'mobx';\nimport { Base64 } from 'js-base64';\nimport { ValidationType, AttributesMode, ViewMode, LabelItem, LabelStyle, LabelFormat } from '../types';\n\n/**\n * settings store\n */\nlet SettingsStore = (_class = class SettingsStore {\n  constructor() {\n    /**\n     * label config\n     */\n    _initializerDefineProperty(this, \"labelConfig\", _descriptor, this);\n    /**\n     * label items\n     */\n    _initializerDefineProperty(this, \"labelItems\", _descriptor2, this);\n    /**\n     * label style\n     */\n    _initializerDefineProperty(this, \"labelStyle\", _descriptor3, this);\n    /**\n     * label format\n     */\n    _initializerDefineProperty(this, \"labelFormat\", _descriptor4, this);\n    /**\n     * label items for point\n     */\n    _initializerDefineProperty(this, \"pointLabelItems\", _descriptor5, this);\n    /**\n     * measurement box list\n     */\n    _initializerDefineProperty(this, \"measurementBoxList\", _descriptor6, this);\n    /**\n     * active measurement box index\n     */\n    _initializerDefineProperty(this, \"activeMeasurementBoxIndex\", _descriptor7, this);\n    /**\n     * tag configuration for OCR\n     */\n    _initializerDefineProperty(this, \"ocrTagGroup\", _descriptor8, this);\n    /**\n     * auto ocr\n     */\n    _initializerDefineProperty(this, \"autoOCR\", _descriptor9, this);\n    /**\n     * auto interpolation\n     */\n    _initializerDefineProperty(this, \"autoInterpolation\", _descriptor0, this);\n    /**\n     * image boundary check\n     */\n    _initializerDefineProperty(this, \"boundaryCheck\", _descriptor1, this);\n    /**\n     * validation config\n     */\n    _initializerDefineProperty(this, \"validationConfig\", _descriptor10, this);\n    /**\n     * submit check\n     */\n    _initializerDefineProperty(this, \"submitCheck\", _descriptor11, this);\n    /**\n     * canvas view scale factor\n     */\n    _initializerDefineProperty(this, \"viewScale\", _descriptor12, this);\n    /**\n     * whether cross line visible\n     */\n    _initializerDefineProperty(this, \"crossLineVisible\", _descriptor13, this);\n    /**\n     * view mode\n     */\n    _initializerDefineProperty(this, \"viewMode\", _descriptor14, this);\n    /**\n     * active attributes mode\n     */\n    _initializerDefineProperty(this, \"activeAttributesMode\", _descriptor15, this);\n    /**\n     * active attributes mode for point\n     */\n    _initializerDefineProperty(this, \"activePointAttributesMode\", _descriptor16, this);\n    /**\n     * hide other shapes\n     */\n    _initializerDefineProperty(this, \"hideOthers\", _descriptor17, this);\n    /**\n     * Whether the shape can be rotated\n     */\n    _initializerDefineProperty(this, \"rotatable\", _descriptor18, this);\n    makeObservable(this);\n  }\n\n  /**\n   * active measurement box\n   */\n  get activeMeasurementBox() {\n    return (this.measurementBoxList || [])[this.activeMeasurementBoxIndex];\n  }\n\n  /**\n   * init by payload\n   * @param payload\n   */\n  initPayload(payload) {\n    // parse label config\n    this.labelConfig = null;\n    if (typeof payload.label_config === 'string') {\n      try {\n        this.labelConfig = JSON.parse(Base64.decode(payload.label_config));\n      } catch (e) {\n        // parse error\n      }\n    }\n\n    // parse label mode\n    this.activeAttributesMode = Object.values(AttributesMode).includes(payload.label_mode) ? payload.label_mode : AttributesMode.HIDE;\n    // parse poiny label mode\n    this.activePointAttributesMode = Object.values(AttributesMode).includes(payload.point_label_mode) ? payload.point_label_mode : AttributesMode.ALWAYS;\n    // parse label style\n    this.labelStyle = Object.values(LabelStyle).includes(payload.label_style) ? payload.label_style : LabelStyle.DEFAULT;\n    // parse label format\n    this.labelFormat = Object.values(LabelFormat).includes(payload.label_format) ? payload.label_format : LabelFormat.DEFAULT;\n    // parse label items\n    if (typeof payload.label_item === 'string' && payload.label_item) {\n      this.labelItems = [];\n      payload.label_item.split(',').forEach(i => {\n        const item = i.trim();\n        if (Object.values(LabelItem).includes(item)) {\n          this.labelItems.push(item);\n        }\n      });\n    }\n    // parse point label items\n    if (typeof payload.point_label_item === 'string' && payload.point_label_item) {\n      this.pointLabelItems = [];\n      payload.point_label_item.split(',').forEach(i => {\n        const item = i.trim();\n        if (Object.values(LabelItem).includes(item)) {\n          this.pointLabelItems.push(item);\n        }\n      });\n    }\n\n    // parse measurement box list\n    this.measurementBoxList = null;\n    this.activeMeasurementBoxIndex = -1;\n    if (typeof payload.measurement_box === 'string') {\n      try {\n        const list = JSON.parse(payload.measurement_box);\n        if (Array.isArray(list) && list.every(i => i.length === 2 && typeof i[0] === 'number' && typeof i[1] === 'number')) {\n          this.measurementBoxList = list;\n        }\n      } catch (e) {\n        // parse error\n      }\n    }\n\n    // parse ocr tag group\n    this.ocrTagGroup = null;\n    if (typeof payload.ocr_tag_group === 'string') {\n      try {\n        this.ocrTagGroup = JSON.parse(Base64.decode(payload.ocr_tag_group));\n      } catch (e) {\n        // parse error\n      }\n    }\n\n    // parse auto ocr\n    this.autoOCR = payload.auto_ocr !== 'false' && payload.auto_ocr !== false;\n\n    // parse auto interpolation\n    this.autoInterpolation = payload.auto_interpolation !== 'false' && payload.auto_interpolation !== false;\n\n    // parse boundary check\n    this.boundaryCheck = payload.boundary_check === 'true' || payload.boundary_check === true;\n\n    // parse validation config\n    if (this.labelConfig) {\n      this.validationConfig[ValidationType.ATTR_EMPTY] = true;\n    }\n    if (typeof payload.custom_check === 'string') {\n      const scriptIds = payload.custom_check.split(',').map(i => i.trim()).filter(i => !!i);\n      if (scriptIds.length > 0) {\n        this.validationConfig[ValidationType.CUSTOM] = scriptIds;\n      }\n    }\n    // parse submit check config\n    this.submitCheck = payload.submit_check === 'true' || payload.submit_check === true;\n\n    // parse rotatable\n    this.rotatable = payload.rotatable === 'true' || payload.rotatable === true;\n  }\n\n  /**\n   * set active measurement box index\n   * @param activeIndex\n   */\n  setActiveMeasurementBox(activeIndex) {\n    this.activeMeasurementBoxIndex = activeIndex;\n  }\n\n  /**\n   * set view scale\n   * @param scale\n   */\n  setViewScale(scale) {\n    this.viewScale = scale;\n  }\n\n  /**\n   * set cross line visible\n   * @param visible\n   */\n  setCrossLineVisible(visible) {\n    this.crossLineVisible = visible;\n  }\n}, _descriptor = _applyDecoratedDescriptor(_class.prototype, \"labelConfig\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"labelItems\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [LabelItem.CATEGORY, LabelItem.NUMBER, LabelItem.ATTRIBUTE_KEYS, LabelItem.ATTRIBUTE_VALUES];\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"labelStyle\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return LabelStyle.DEFAULT;\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"labelFormat\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return LabelFormat.DEFAULT;\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"pointLabelItems\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [LabelItem.ATTRIBUTE_KEYS, LabelItem.ATTRIBUTE_VALUES];\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"measurementBoxList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"activeMeasurementBoxIndex\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return -1;\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"ocrTagGroup\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"autoOCR\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return true;\n  }\n}), _descriptor0 = _applyDecoratedDescriptor(_class.prototype, \"autoInterpolation\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return true;\n  }\n}), _descriptor1 = _applyDecoratedDescriptor(_class.prototype, \"boundaryCheck\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, \"validationConfig\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return {};\n  }\n}), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, \"submitCheck\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor12 = _applyDecoratedDescriptor(_class.prototype, \"viewScale\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return 1;\n  }\n}), _descriptor13 = _applyDecoratedDescriptor(_class.prototype, \"crossLineVisible\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return true;\n  }\n}), _descriptor14 = _applyDecoratedDescriptor(_class.prototype, \"viewMode\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return ViewMode.DEFAULT;\n  }\n}), _descriptor15 = _applyDecoratedDescriptor(_class.prototype, \"activeAttributesMode\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return AttributesMode.HIDE;\n  }\n}), _descriptor16 = _applyDecoratedDescriptor(_class.prototype, \"activePointAttributesMode\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return AttributesMode.ALWAYS;\n  }\n}), _descriptor17 = _applyDecoratedDescriptor(_class.prototype, \"hideOthers\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor18 = _applyDecoratedDescriptor(_class.prototype, \"rotatable\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"activeMeasurementBox\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"activeMeasurementBox\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"initPayload\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"initPayload\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setActiveMeasurementBox\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setActiveMeasurementBox\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setViewScale\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setViewScale\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setCrossLineVisible\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setCrossLineVisible\"), _class.prototype), _class);\nexport default new SettingsStore();","map":{"version":3,"names":["observable","computed","action","makeObservable","Base64","ValidationType","AttributesMode","ViewMode","LabelItem","LabelStyle","LabelFormat","SettingsStore","_class","constructor","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor0","_descriptor1","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","_descriptor18","activeMeasurementBox","measurementBoxList","activeMeasurementBoxIndex","initPayload","payload","labelConfig","label_config","JSON","parse","decode","e","activeAttributesMode","Object","values","includes","label_mode","HIDE","activePointAttributesMode","point_label_mode","ALWAYS","labelStyle","label_style","DEFAULT","labelFormat","label_format","label_item","labelItems","split","forEach","i","item","trim","push","point_label_item","pointLabelItems","measurement_box","list","Array","isArray","every","length","ocrTagGroup","ocr_tag_group","autoOCR","auto_ocr","autoInterpolation","auto_interpolation","boundaryCheck","boundary_check","validationConfig","ATTR_EMPTY","custom_check","scriptIds","map","filter","CUSTOM","submitCheck","submit_check","rotatable","setActiveMeasurementBox","activeIndex","setViewScale","scale","viewScale","setCrossLineVisible","visible","crossLineVisible","_applyDecoratedDescriptor","prototype","configurable","enumerable","writable","initializer","CATEGORY","NUMBER","ATTRIBUTE_KEYS","ATTRIBUTE_VALUES","getOwnPropertyDescriptor"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking/store/SettingsStore.ts"],"sourcesContent":["import { observable, computed, action, makeObservable } from 'mobx';\nimport { Base64 } from 'js-base64';\nimport { Field, Condition, Effect, Rule } from '@appen/easy-form/es/types';\nimport { TagGroupProps, ValidationType, AttributesMode, ViewMode, LabelItem, LabelStyle, LabelFormat } from '../types';\n\n/**\n * settings store\n */\nclass SettingsStore {\n  /**\n   * label config\n   */\n  @observable labelConfig: {\n    fields: Field[];\n    conditions?: Condition[];\n    effects?: Effect[];\n    rules?: Rule[];\n  } | null = null;\n\n  /**\n   * label items\n   */\n  @observable labelItems = [LabelItem.CATEGORY, LabelItem.NUMBER, LabelItem.ATTRIBUTE_KEYS, LabelItem.ATTRIBUTE_VALUES];\n\n  /**\n   * label style\n   */\n  @observable labelStyle = LabelStyle.DEFAULT;\n\n  /**\n   * label format\n   */\n  @observable labelFormat = LabelFormat.DEFAULT;\n\n  /**\n   * label items for point\n   */\n  @observable pointLabelItems = [LabelItem.ATTRIBUTE_KEYS, LabelItem.ATTRIBUTE_VALUES];\n\n  /**\n   * measurement box list\n   */\n  @observable measurementBoxList: number[][] | null = null;\n\n  /**\n   * active measurement box index\n   */\n  @observable activeMeasurementBoxIndex = -1;\n\n  /**\n   * tag configuration for OCR\n   */\n  @observable ocrTagGroup: TagGroupProps[] | null = null;\n\n  /**\n   * auto ocr\n   */\n  @observable autoOCR = true;\n\n  /**\n   * auto interpolation\n   */\n  @observable autoInterpolation = true;\n\n  /**\n   * image boundary check\n   */\n  @observable boundaryCheck = false;\n\n  /**\n   * validation config\n   */\n  @observable validationConfig: {\n    [type in ValidationType]?: boolean | string[];\n  } = {};\n\n  /**\n   * submit check\n   */\n  @observable submitCheck = false;\n\n  /**\n   * canvas view scale factor\n   */\n  @observable viewScale = 1;\n\n  /**\n   * whether cross line visible\n   */\n  @observable crossLineVisible = true;\n\n  /**\n   * view mode\n   */\n  @observable viewMode = ViewMode.DEFAULT;\n\n  /**\n   * active attributes mode\n   */\n  @observable activeAttributesMode = AttributesMode.HIDE;\n\n  /**\n   * active attributes mode for point\n   */\n  @observable activePointAttributesMode = AttributesMode.ALWAYS;\n\n  /**\n   * hide other shapes\n   */\n  @observable hideOthers = false;\n\n  /**\n   * Whether the shape can be rotated\n   */\n  @observable rotatable = false;\n\n  constructor() {\n    makeObservable(this);\n  }\n\n  /**\n   * active measurement box\n   */\n  @computed get activeMeasurementBox() {\n    return (this.measurementBoxList || [])[this.activeMeasurementBoxIndex];\n  }\n\n  /**\n   * init by payload\n   * @param payload\n   */\n  @action\n  initPayload(payload: {[key: string]: any}) {\n    // parse label config\n    this.labelConfig = null;\n    if (typeof payload.label_config === 'string') {\n      try {\n        this.labelConfig = JSON.parse(Base64.decode(payload.label_config));\n      } catch (e) {\n        // parse error\n      }\n    }\n\n    // parse label mode\n    this.activeAttributesMode = Object.values(AttributesMode).includes(payload.label_mode) ? payload.label_mode : AttributesMode.HIDE;\n    // parse poiny label mode\n    this.activePointAttributesMode = Object.values(AttributesMode).includes(payload.point_label_mode) ? payload.point_label_mode : AttributesMode.ALWAYS;\n    // parse label style\n    this.labelStyle = Object.values(LabelStyle).includes(payload.label_style) ? payload.label_style : LabelStyle.DEFAULT;\n    // parse label format\n    this.labelFormat = Object.values(LabelFormat).includes(payload.label_format) ? payload.label_format : LabelFormat.DEFAULT;\n    // parse label items\n    if (typeof payload.label_item === 'string' && payload.label_item) {\n      this.labelItems = [];\n      payload.label_item.split(',').forEach((i) => {\n        const item = i.trim();\n        if ((Object.values(LabelItem) as string[]).includes(item)) {\n          this.labelItems.push(item as LabelItem);\n        }\n      });\n    }\n    // parse point label items\n    if (typeof payload.point_label_item === 'string' && payload.point_label_item) {\n      this.pointLabelItems = [];\n      payload.point_label_item.split(',').forEach((i) => {\n        const item = i.trim();\n        if ((Object.values(LabelItem) as string[]).includes(item)) {\n          this.pointLabelItems.push(item as LabelItem);\n        }\n      });\n    }\n\n    // parse measurement box list\n    this.measurementBoxList = null;\n    this.activeMeasurementBoxIndex = -1;\n    if (typeof payload.measurement_box === 'string') {\n      try {\n        const list = JSON.parse(payload.measurement_box);\n        if (Array.isArray(list) && list.every((i) => i.length === 2 && typeof i[0] === 'number' && typeof i[1] === 'number')) {\n          this.measurementBoxList = list;\n        }\n      } catch (e) {\n        // parse error\n      }\n    }\n\n    // parse ocr tag group\n    this.ocrTagGroup = null;\n    if (typeof payload.ocr_tag_group === 'string') {\n      try {\n        this.ocrTagGroup = JSON.parse(Base64.decode(payload.ocr_tag_group));\n      } catch (e) {\n        // parse error\n      }\n    }\n\n    // parse auto ocr\n    this.autoOCR = payload.auto_ocr !== 'false' && payload.auto_ocr !== false;\n\n    // parse auto interpolation\n    this.autoInterpolation = payload.auto_interpolation !== 'false' && payload.auto_interpolation !== false;\n\n    // parse boundary check\n    this.boundaryCheck = payload.boundary_check === 'true' || payload.boundary_check === true;\n\n    // parse validation config\n    if (this.labelConfig) {\n      this.validationConfig[ValidationType.ATTR_EMPTY] = true;\n    }\n    if (typeof payload.custom_check === 'string') {\n      const scriptIds = payload.custom_check.split(',').map((i) => i.trim()).filter((i) => !!i);\n      if (scriptIds.length > 0) {\n        this.validationConfig[ValidationType.CUSTOM] = scriptIds;\n      }\n    }\n    // parse submit check config\n    this.submitCheck = payload.submit_check === 'true' || payload.submit_check === true;\n\n    // parse rotatable\n    this.rotatable = payload.rotatable === 'true' || payload.rotatable === true;\n  }\n\n  /**\n   * set active measurement box index\n   * @param activeIndex\n   */\n  @action\n  setActiveMeasurementBox(activeIndex: number) {\n    this.activeMeasurementBoxIndex = activeIndex;\n  }\n\n  /**\n   * set view scale\n   * @param scale\n   */\n  @action\n  setViewScale(scale: number) {\n    this.viewScale = scale;\n  }\n\n  /**\n   * set cross line visible\n   * @param visible\n   */\n  @action\n  setCrossLineVisible(visible: boolean) {\n    this.crossLineVisible = visible;\n  }\n}\n\nexport default new SettingsStore();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}