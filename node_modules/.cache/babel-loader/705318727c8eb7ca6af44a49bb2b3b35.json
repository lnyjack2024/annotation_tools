{"ast":null,"code":"/* eslint-disable no-undef */\nimport { Language } from '../../../utils/constants';\nimport ZN from './zh-CN';\nimport EN from './en-US';\nimport JP from './ja-JP';\nimport KR from './ko-KR';\nclass Internationalization {\n  constructor() {\n    this.locale = Language.EN_US;\n    this.setLocale = locale => {\n      const languages = Object.values(Language);\n      if (locale !== undefined) {\n        // get from props\n        if (languages.includes(locale)) {\n          this.locale = locale;\n        }\n      } else if (navigator.language) {\n        // get from browser\n        const language = languages.find(l => l.slice(0, 2) === navigator.language.slice(0, 2));\n        if (language) {\n          this.locale = language;\n        }\n      }\n    };\n    this.translate = (word, options) => {\n      let translated;\n      switch (this.locale) {\n        case Language.ZH_CN:\n          translated = ZN[word];\n          break;\n        case Language.JA_JP:\n          translated = JP[word];\n          break;\n        case Language.KO_KR:\n          translated = KR[word];\n          break;\n        default:\n          translated = EN[word];\n          break;\n      }\n      if (translated) {\n        let msg = translated;\n        if (options && options.values) {\n          Object.keys(options.values).forEach(k => {\n            msg = msg.replace(new RegExp(`{${k}}`, 'g'), options.values[k]);\n          });\n        }\n        return msg;\n      }\n      return word;\n    };\n  }\n  get isUS() {\n    return this.locale === Language.EN_US;\n  }\n}\nconst i18n = new Internationalization();\nexport const setLocale = i18n.setLocale;\nexport default i18n.translate;","map":{"version":3,"names":["Language","ZN","EN","JP","KR","Internationalization","constructor","locale","EN_US","setLocale","languages","Object","values","undefined","includes","navigator","language","find","l","slice","translate","word","options","translated","ZH_CN","JA_JP","KO_KR","msg","keys","forEach","k","replace","RegExp","isUS","i18n"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/editable-text/locale/index.js"],"sourcesContent":["/* eslint-disable no-undef */\nimport { Language } from '../../../utils/constants';\nimport ZN from './zh-CN';\nimport EN from './en-US';\nimport JP from './ja-JP';\nimport KR from './ko-KR';\n\nclass Internationalization {\n  locale = Language.EN_US;\n\n  get isUS() {\n    return this.locale === Language.EN_US;\n  }\n\n  setLocale = (locale) => {\n    const languages = Object.values(Language);\n    if (locale !== undefined) {\n      // get from props\n      if (languages.includes(locale)) {\n        this.locale = locale;\n      }\n    } else if (navigator.language) {\n      // get from browser\n      const language = languages.find((l) => l.slice(0, 2) === navigator.language.slice(0, 2));\n      if (language) {\n        this.locale = language;\n      }\n    }\n  };\n\n  translate = (word, options) => {\n    let translated;\n    switch (this.locale) {\n      case Language.ZH_CN:\n        translated = ZN[word];\n        break;\n      case Language.JA_JP:\n        translated = JP[word];\n        break;\n      case Language.KO_KR:\n        translated = KR[word];\n        break;\n      default:\n        translated = EN[word];\n        break;\n    }\n    if (translated) {\n      let msg = translated;\n      if (options && options.values) {\n        Object.keys(options.values).forEach((k) => {\n          msg = msg.replace(new RegExp(`{${k}}`, 'g'), options.values[k]);\n        });\n      }\n      return msg;\n    }\n    return word;\n  };\n}\n\nconst i18n = new Internationalization();\n\nexport const setLocale = i18n.setLocale;\nexport default i18n.translate;\n"],"mappings":"AAAA;AACA,SAASA,QAAQ,QAAQ,0BAA0B;AACnD,OAAOC,EAAE,MAAM,SAAS;AACxB,OAAOC,EAAE,MAAM,SAAS;AACxB,OAAOC,EAAE,MAAM,SAAS;AACxB,OAAOC,EAAE,MAAM,SAAS;AAExB,MAAMC,oBAAoB,CAAC;EAAAC,YAAA;IAAA,KACzBC,MAAM,GAAGP,QAAQ,CAACQ,KAAK;IAAA,KAMvBC,SAAS,GAAIF,MAAM,IAAK;MACtB,MAAMG,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACZ,QAAQ,CAAC;MACzC,IAAIO,MAAM,KAAKM,SAAS,EAAE;QACxB;QACA,IAAIH,SAAS,CAACI,QAAQ,CAACP,MAAM,CAAC,EAAE;UAC9B,IAAI,CAACA,MAAM,GAAGA,MAAM;QACtB;MACF,CAAC,MAAM,IAAIQ,SAAS,CAACC,QAAQ,EAAE;QAC7B;QACA,MAAMA,QAAQ,GAAGN,SAAS,CAACO,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAKJ,SAAS,CAACC,QAAQ,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACxF,IAAIH,QAAQ,EAAE;UACZ,IAAI,CAACT,MAAM,GAAGS,QAAQ;QACxB;MACF;IACF,CAAC;IAAA,KAEDI,SAAS,GAAG,CAACC,IAAI,EAAEC,OAAO,KAAK;MAC7B,IAAIC,UAAU;MACd,QAAQ,IAAI,CAAChB,MAAM;QACjB,KAAKP,QAAQ,CAACwB,KAAK;UACjBD,UAAU,GAAGtB,EAAE,CAACoB,IAAI,CAAC;UACrB;QACF,KAAKrB,QAAQ,CAACyB,KAAK;UACjBF,UAAU,GAAGpB,EAAE,CAACkB,IAAI,CAAC;UACrB;QACF,KAAKrB,QAAQ,CAAC0B,KAAK;UACjBH,UAAU,GAAGnB,EAAE,CAACiB,IAAI,CAAC;UACrB;QACF;UACEE,UAAU,GAAGrB,EAAE,CAACmB,IAAI,CAAC;UACrB;MACJ;MACA,IAAIE,UAAU,EAAE;QACd,IAAII,GAAG,GAAGJ,UAAU;QACpB,IAAID,OAAO,IAAIA,OAAO,CAACV,MAAM,EAAE;UAC7BD,MAAM,CAACiB,IAAI,CAACN,OAAO,CAACV,MAAM,CAAC,CAACiB,OAAO,CAAEC,CAAC,IAAK;YACzCH,GAAG,GAAGA,GAAG,CAACI,OAAO,CAAC,IAAIC,MAAM,CAAC,IAAIF,CAAC,GAAG,EAAE,GAAG,CAAC,EAAER,OAAO,CAACV,MAAM,CAACkB,CAAC,CAAC,CAAC;UACjE,CAAC,CAAC;QACJ;QACA,OAAOH,GAAG;MACZ;MACA,OAAON,IAAI;IACb,CAAC;EAAA;EA9CD,IAAIY,IAAIA,CAAA,EAAG;IACT,OAAO,IAAI,CAAC1B,MAAM,KAAKP,QAAQ,CAACQ,KAAK;EACvC;AA6CF;AAEA,MAAM0B,IAAI,GAAG,IAAI7B,oBAAoB,CAAC,CAAC;AAEvC,OAAO,MAAMI,SAAS,GAAGyB,IAAI,CAACzB,SAAS;AACvC,eAAeyB,IAAI,CAACd,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}