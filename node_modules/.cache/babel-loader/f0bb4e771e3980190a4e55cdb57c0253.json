{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking2/components/attributes/FrameAttributesModal.tsx\";\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { makeObservable, reaction } from 'mobx';\nimport { Button, ConfigProvider, Checkbox, Form, Radio } from 'antd';\nimport EasyForm from '@appen/easy-form';\nimport { ConditionType } from '@appen/easy-form/es/types';\nimport Modal from '../../../common/modal/Modal';\nimport store from '../../store/RootStore';\nimport i18n from '../../locales';\nimport { setInitialValues, triggerForm } from '../../utils';\nimport './AttributesModal.scss';\nclass FrameAttributesModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      applyAllFields: [],\n      applyAll: false,\n      frameFields: [],\n      visibleFields: [],\n      isFrameValid: true,\n      frameValidApplyAll: false\n    };\n    this.attributes = {};\n    /**\n     * form container\n     */\n    this.ref = React.createRef();\n    /**\n     * reaction disposer\n     */\n    this.reactionDisposer = void 0;\n    /**\n     * when instance values submit\n     * @param values\n     */\n    this.onFrameValuesSubmit = values => {\n      const {\n        applyAll,\n        applyAllFields,\n        isFrameValid,\n        frameValidApplyAll\n      } = this.state;\n      const {\n        frameCount,\n        currentCamera,\n        currentFrame,\n        setFrameAttributesWithValid\n      } = store.frame;\n      const applyFrames = applyAllFields.length > 0 || frameValidApplyAll ? new Array(frameCount - currentFrame).fill(0).map((v, i) => i + currentFrame) : [currentFrame];\n      setFrameAttributesWithValid(currentCamera, applyFrames, values, applyAllFields, isFrameValid, frameValidApplyAll, applyAll);\n      this.setApplyAll(false);\n      store.config.setFrameAttributesModalVisible(false);\n    };\n    /**\n     * submit button click\n     */\n    this.submit = () => {\n      if (store.frame.frameConfig) {\n        var _this$ref$current;\n        const buttons = (_this$ref$current = this.ref.current) === null || _this$ref$current === void 0 ? void 0 : _this$ref$current.querySelectorAll('button.easyform-btn.form-btn-submit');\n        buttons === null || buttons === void 0 ? void 0 : buttons.forEach(btn => {\n          btn.click();\n        });\n      } else {\n        this.onFrameValuesSubmit(undefined);\n      }\n    };\n    this.setApplyAll = applyAll => {\n      this.setState(prev => ({\n        applyAll,\n        applyAllFields: applyAll ? prev.visibleFields : [],\n        frameValidApplyAll: applyAll\n      }));\n    };\n    this.getEffectedFieldsByConditionIds = ids => {\n      const {\n        frameConfig\n      } = store.frame;\n      const conditions = (frameConfig === null || frameConfig === void 0 ? void 0 : frameConfig.conditions) || [];\n      const effectedConditions = conditions.filter(c => ids.has(c.id));\n      const effectedAggregationConditions = effectedConditions.filter(c => c.type === ConditionType.AGGREGATION);\n      const effectedField = effectedConditions.filter(c => c.type === ConditionType.FIELD).map(c => c.field);\n      if (effectedAggregationConditions.length > 0) {\n        effectedField.push(...this.getEffectedFieldsByConditionIds(new Set(effectedAggregationConditions.flatMap(c => c.conditions))));\n      }\n      return Array.from(new Set(effectedField));\n    };\n    this.getEffectedFields = (fieldNames, _allFieldNames) => {\n      const {\n        frameConfig\n      } = store.frame;\n      const effects = (frameConfig === null || frameConfig === void 0 ? void 0 : frameConfig.effects) || [];\n      const rules = (frameConfig === null || frameConfig === void 0 ? void 0 : frameConfig.rules) || [];\n      let allFieldNames = _allFieldNames;\n      if (!allFieldNames) {\n        allFieldNames = [...fieldNames];\n      }\n      const fieldEffectIds = new Set(effects.filter(e => fieldNames.includes(e.field)).map(e => e.id));\n      if (fieldEffectIds.size > 0) {\n        const effectedConditionIds = new Set(rules.filter(r => r.effects.some(e => fieldEffectIds.has(e))).map(i => i.condition));\n        const effectedFields = this.getEffectedFieldsByConditionIds(effectedConditionIds).filter(i => !allFieldNames.includes(i));\n        if (effectedFields.length > 0) {\n          return this.getEffectedFields(effectedFields, effectedFields.concat(allFieldNames));\n        }\n        return allFieldNames;\n      }\n      return allFieldNames;\n    };\n    this.handleFieldApplyAll = (fieldName, shouldApplyAll) => {\n      const {\n        applyAllFields\n      } = this.state;\n      let newApplyAllFields = [];\n      if (shouldApplyAll && !applyAllFields.includes(fieldName)) {\n        const effectedFields = this.getEffectedFields([fieldName]);\n        newApplyAllFields = [...applyAllFields, ...effectedFields];\n      }\n      if (!shouldApplyAll && applyAllFields.includes(fieldName)) {\n        newApplyAllFields = applyAllFields.filter(f => f !== fieldName);\n      }\n      this.setState(prev => ({\n        applyAllFields: newApplyAllFields,\n        applyAll: prev.frameValidApplyAll && prev.visibleFields.findIndex(n => !newApplyAllFields.includes(n)) < 0\n      }));\n    };\n    this.handleFrameValidApplyAll = shouldApplyAll => {\n      this.setState(prev => ({\n        frameValidApplyAll: shouldApplyAll,\n        applyAll: shouldApplyAll && prev.visibleFields.findIndex(n => !prev.applyAllFields.includes(n)) < 0\n      }));\n    };\n    this.handleChange = values => {\n      const {\n        frameConfig\n      } = store.frame;\n      if (frameConfig) {\n        this.attributes = {\n          ...this.attributes,\n          ...values\n        };\n        const {\n          updatedFields\n        } = triggerForm(frameConfig, this.attributes);\n        this.setState({\n          visibleFields: updatedFields.filter(f => f.visible !== false).map(f => f.name)\n        });\n      }\n    };\n    this.initFrameFields = () => {\n      const {\n        frameConfig,\n        currentFrameAttributes,\n        currentFrameValid\n      } = store.frame;\n      this.setState({\n        isFrameValid: currentFrameValid\n      });\n      if (frameConfig) {\n        this.attributes = currentFrameAttributes;\n        const {\n          updatedFields\n        } = triggerForm(frameConfig, currentFrameAttributes);\n        const frameFields = setInitialValues(frameConfig.fields, {\n          ...currentFrameAttributes\n        });\n        this.setState({\n          frameFields,\n          visibleFields: updatedFields.filter(f => f.visible !== false).map(f => f.name)\n        });\n      }\n    };\n    makeObservable(this, {});\n    this.reactionDisposer = reaction(() => store.config.frameAttributesModalVisible, () => {\n      if (store.config.frameAttributesModalVisible) {\n        this.initFrameFields();\n      }\n    });\n  }\n  render() {\n    const {\n      currentFrame,\n      frameConfig,\n      isSingleCamera,\n      cameraNames,\n      currentCamera\n    } = store.frame;\n    if (!store.config.frameAttributesModalVisible) {\n      return null;\n    }\n    return /*#__PURE__*/React.createElement(Modal, {\n      visible: true,\n      draggable: true,\n      closable: false,\n      dragId: \"video-tracking-attributes\",\n      className: \"attributes-form\",\n      title: `${i18n.translate('FRAME_ATTRIBUTES')}${isSingleCamera ? '' : `-C${cameraNames.indexOf(currentCamera) + 1}`}-${i18n.translate('FRAME_ATTRIBUTES_FRAME', {\n        values: {\n          frame: currentFrame + 1\n        }\n      })}`,\n      onClose: () => store.config.setFrameAttributesModalVisible(false),\n      onMaskClick: this.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      colon: false,\n      labelCol: {\n        span: 24\n      },\n      label: /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }\n      }, i18n.translate('FRAME_ATTRIBUTES_IS_VALID')), /*#__PURE__*/React.createElement(\"label\", {\n        style: {\n          fontSize: 12,\n          color: '#b5b5b5'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(ConfigProvider, {\n        prefixCls: \"easyform\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        checked: this.state.frameValidApplyAll,\n        onChange: e => this.handleFrameValidApplyAll(e.target.checked),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 19\n        }\n      }, i18n.translate('APPLY_TO_FOLLOWING_FRAMES'))))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Radio.Group, {\n      value: this.state.isFrameValid,\n      onChange: e => this.setState({\n        isFrameValid: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Radio, {\n      value: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }\n    }, i18n.translate('FRAME_ATTRIBUTES_VALID')), /*#__PURE__*/React.createElement(Radio, {\n      value: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }\n    }, i18n.translate('FRAME_ATTRIBUTES_INVALID')))), /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.ref,\n      className: \"attributes-form-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }\n    }, frameConfig && this.state.frameFields && /*#__PURE__*/React.createElement(EasyForm, {\n      theme: \"dark\",\n      fields: this.state.frameFields,\n      conditions: frameConfig.conditions,\n      effects: frameConfig.effects,\n      rules: frameConfig.rules,\n      onChange: this.handleChange,\n      onSubmit: this.onFrameValuesSubmit,\n      renderLabel: (label, field) => /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 19\n        }\n      }, label), /*#__PURE__*/React.createElement(\"label\", {\n        style: {\n          fontSize: 12,\n          color: '#b5b5b5'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(ConfigProvider, {\n        prefixCls: \"easyform\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        checked: this.state.applyAllFields.includes(field.name),\n        onChange: e => this.handleFieldApplyAll(field.name, e.target.checked),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 23\n        }\n      }, i18n.translate('APPLY_TO_FOLLOWING_FRAMES'))))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"attributes-form-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }\n    }, i18n.translate('COMMON_SUBMIT')), store.frame.frameCount > 1 && store.frame.frameConfig && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-footer-operation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ConfigProvider, {\n      prefixCls: \"easyform\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      checked: this.state.applyAll,\n      onChange: e => this.setApplyAll(e.target.checked),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }\n    }, i18n.translate('APPLY_ALL_TO_FOLLOWING_FRAMES'))))));\n  }\n}\nexport default observer(FrameAttributesModal);","map":{"version":3,"names":["React","observer","makeObservable","reaction","Button","ConfigProvider","Checkbox","Form","Radio","EasyForm","ConditionType","Modal","store","i18n","setInitialValues","triggerForm","FrameAttributesModal","Component","constructor","props","state","applyAllFields","applyAll","frameFields","visibleFields","isFrameValid","frameValidApplyAll","attributes","ref","createRef","reactionDisposer","onFrameValuesSubmit","values","frameCount","currentCamera","currentFrame","setFrameAttributesWithValid","frame","applyFrames","length","Array","fill","map","v","i","setApplyAll","config","setFrameAttributesModalVisible","submit","frameConfig","_this$ref$current","buttons","current","querySelectorAll","forEach","btn","click","undefined","setState","prev","getEffectedFieldsByConditionIds","ids","conditions","effectedConditions","filter","c","has","id","effectedAggregationConditions","type","AGGREGATION","effectedField","FIELD","field","push","Set","flatMap","from","getEffectedFields","fieldNames","_allFieldNames","effects","rules","allFieldNames","fieldEffectIds","e","includes","size","effectedConditionIds","r","some","condition","effectedFields","concat","handleFieldApplyAll","fieldName","shouldApplyAll","newApplyAllFields","f","findIndex","n","handleFrameValidApplyAll","handleChange","updatedFields","visible","name","initFrameFields","currentFrameAttributes","currentFrameValid","fields","frameAttributesModalVisible","render","isSingleCamera","cameraNames","createElement","draggable","closable","dragId","className","title","translate","indexOf","onClose","onMaskClick","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Item","colon","labelCol","span","label","style","display","justifyContent","fontSize","color","prefixCls","checked","onChange","target","Group","value","theme","onSubmit","renderLabel","onClick"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking2/components/attributes/FrameAttributesModal.tsx"],"sourcesContent":["import React from 'react';\nimport { observer } from 'mobx-react';\nimport { makeObservable, reaction, IReactionDisposer } from 'mobx';\nimport { Button, ConfigProvider, Checkbox, Form, Radio } from 'antd';\nimport EasyForm from '@appen/easy-form';\nimport { ConditionType, Field } from '@appen/easy-form/es/types';\nimport Modal from '../../../common/modal/Modal';\nimport store from '../../store/RootStore';\nimport i18n from '../../locales';\nimport { setInitialValues, triggerForm } from '../../utils';\nimport './AttributesModal.scss';\n\ninterface FrameAttributesModalState {\n  applyAllFields: string[];\n  applyAll: boolean;\n  frameFields: Field[];\n  visibleFields: string[];\n  isFrameValid: boolean;\n  frameValidApplyAll: boolean;\n}\n\nclass FrameAttributesModal extends React.Component {\n  state: FrameAttributesModalState = {\n    applyAllFields: [],\n    applyAll: false,\n    frameFields: [],\n    visibleFields: [],\n    isFrameValid: true,\n    frameValidApplyAll: false,\n  };\n\n  attributes = {};\n\n  /**\n   * form container\n   */\n  ref = React.createRef<HTMLDivElement>();\n\n  /**\n   * reaction disposer\n   */\n  reactionDisposer: IReactionDisposer;\n\n  constructor(props: any) {\n    super(props);\n    makeObservable(this, {});\n\n    this.reactionDisposer = reaction(\n      () => store.config.frameAttributesModalVisible,\n      () => {\n        if (store.config.frameAttributesModalVisible) {\n          this.initFrameFields();\n        }\n      },\n    );\n  }\n\n  /**\n   * when instance values submit\n   * @param values\n   */\n  onFrameValuesSubmit = (values: any) => {\n    const { applyAll, applyAllFields, isFrameValid, frameValidApplyAll } = this.state;\n    const { frameCount, currentCamera, currentFrame, setFrameAttributesWithValid } = store.frame;\n    const applyFrames = (applyAllFields.length > 0 || frameValidApplyAll)\n      ? new Array(frameCount - currentFrame).fill(0).map((v, i) => (i + currentFrame))\n      : [currentFrame];\n    setFrameAttributesWithValid(\n      currentCamera,\n      applyFrames,\n      values,\n      applyAllFields,\n      isFrameValid,\n      frameValidApplyAll,\n      applyAll,\n    );\n    this.setApplyAll(false);\n    store.config.setFrameAttributesModalVisible(false);\n  };\n\n  /**\n   * submit button click\n   */\n  submit = () => {\n    if (store.frame.frameConfig) {\n      const buttons = this.ref.current?.querySelectorAll('button.easyform-btn.form-btn-submit');\n      buttons?.forEach((btn) => {\n        (btn as HTMLButtonElement).click();\n      });\n    } else {\n      this.onFrameValuesSubmit(undefined);\n    }\n  };\n\n  setApplyAll = (applyAll: boolean) => {\n    this.setState((prev: FrameAttributesModalState) => ({\n      applyAll,\n      applyAllFields: applyAll ? prev.visibleFields : [],\n      frameValidApplyAll: applyAll,\n    }));\n  };\n\n  getEffectedFieldsByConditionIds = (ids: Set<string>) => {\n    const { frameConfig } = store.frame;\n    const conditions = frameConfig?.conditions || [];\n    const effectedConditions = (conditions).filter((c) => ids.has(c.id));\n    const effectedAggregationConditions = effectedConditions.filter((c) => c.type === ConditionType.AGGREGATION);\n    const effectedField = effectedConditions.filter((c) => c.type === ConditionType.FIELD).map((c) => c.field);\n    if (effectedAggregationConditions.length > 0) {\n      effectedField.push(...this.getEffectedFieldsByConditionIds(new Set(effectedAggregationConditions.flatMap((c) => c.conditions) as string[])));\n    }\n    return Array.from(new Set(effectedField));\n  };\n\n  getEffectedFields = (fieldNames: string[], _allFieldNames?: string[]): string[] => {\n    const { frameConfig } = store.frame;\n    const effects = frameConfig?.effects || [];\n    const rules = frameConfig?.rules || [];\n    let allFieldNames = _allFieldNames;\n    if (!allFieldNames) {\n      allFieldNames = [...fieldNames];\n    }\n    const fieldEffectIds = new Set((effects).filter((e) => fieldNames.includes(e.field)).map((e) => e.id));\n    if (fieldEffectIds.size > 0) {\n      const effectedConditionIds = new Set((rules).filter((r) => r.effects.some((e) => fieldEffectIds.has(e))).map((i) => i.condition));\n      const effectedFields = this.getEffectedFieldsByConditionIds(effectedConditionIds).filter((i) => !allFieldNames!.includes(i!)) as string[];\n      if (effectedFields.length > 0) {\n        return this.getEffectedFields(effectedFields, effectedFields.concat(allFieldNames));\n      }\n      return allFieldNames;\n    }\n    return allFieldNames;\n  };\n\n  handleFieldApplyAll = (fieldName: string, shouldApplyAll: boolean) => {\n    const { applyAllFields } = this.state;\n    let newApplyAllFields: string[] = [];\n    if (shouldApplyAll && !applyAllFields.includes(fieldName)) {\n      const effectedFields = this.getEffectedFields([fieldName]);\n      newApplyAllFields = [...applyAllFields, ...effectedFields];\n    }\n    if (!shouldApplyAll && applyAllFields.includes(fieldName)) {\n      newApplyAllFields = applyAllFields.filter((f) => f !== fieldName);\n    }\n    this.setState((prev: FrameAttributesModalState) => ({\n      applyAllFields: newApplyAllFields,\n      applyAll: prev.frameValidApplyAll && prev.visibleFields.findIndex((n) => !newApplyAllFields.includes(n)) < 0,\n    }));\n  };\n\n  handleFrameValidApplyAll = (shouldApplyAll: boolean) => {\n    this.setState((prev: FrameAttributesModalState) => ({\n      frameValidApplyAll: shouldApplyAll,\n      applyAll: shouldApplyAll && prev.visibleFields.findIndex((n) => !prev.applyAllFields.includes(n)) < 0,\n    }));\n  };\n\n  handleChange = (values: any) => {\n    const { frameConfig } = store.frame;\n    if (frameConfig) {\n      this.attributes = { ...this.attributes, ...values };\n      const { updatedFields } = triggerForm(frameConfig, this.attributes);\n      this.setState({ visibleFields: updatedFields.filter((f) => f.visible !== false).map((f) => f.name) });\n    }\n  };\n\n  initFrameFields = () => {\n    const { frameConfig, currentFrameAttributes, currentFrameValid } = store.frame;\n    this.setState({ isFrameValid: currentFrameValid });\n    if (frameConfig) {\n      this.attributes = currentFrameAttributes;\n      const { updatedFields } = triggerForm(frameConfig, currentFrameAttributes);\n      const frameFields = setInitialValues(frameConfig.fields, { ...currentFrameAttributes });\n      this.setState({ frameFields, visibleFields: updatedFields.filter((f) => f.visible !== false).map((f) => f.name) });\n    }\n  };\n\n  render() {\n    const { currentFrame, frameConfig, isSingleCamera, cameraNames, currentCamera } = store.frame;\n    if (!store.config.frameAttributesModalVisible) {\n      return null;\n    }\n\n    return (\n      <Modal\n        visible\n        draggable\n        closable={false}\n        dragId=\"video-tracking-attributes\"\n        className=\"attributes-form\"\n        title={\n          `${i18n.translate('FRAME_ATTRIBUTES')}${isSingleCamera ? '' : `-C${cameraNames.indexOf(currentCamera) + 1}`}-${i18n.translate('FRAME_ATTRIBUTES_FRAME', { values: { frame: currentFrame + 1 } })}`\n        }\n        onClose={() => store.config.setFrameAttributesModalVisible(false)}\n        onMaskClick={this.submit}\n      >\n        <Form.Item\n          colon={false}\n          labelCol={{ span: 24 }}\n          label={(\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <span>{i18n.translate('FRAME_ATTRIBUTES_IS_VALID')}</span>\n              {/* eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control */}\n              <label style={{ fontSize: 12, color: '#b5b5b5' }}>\n                <ConfigProvider prefixCls=\"easyform\">\n                  <Checkbox\n                    checked={this.state.frameValidApplyAll}\n                    onChange={(e) => this.handleFrameValidApplyAll(e.target.checked)}\n                  >\n                    {i18n.translate('APPLY_TO_FOLLOWING_FRAMES')}\n                  </Checkbox>\n                </ConfigProvider>\n              </label>\n            </div>\n          )}\n        >\n          <Radio.Group\n            value={this.state.isFrameValid}\n            onChange={(e) => this.setState({ isFrameValid: e.target.value })}\n          >\n            <Radio value>{i18n.translate('FRAME_ATTRIBUTES_VALID')}</Radio>\n            <Radio value={false}>{i18n.translate('FRAME_ATTRIBUTES_INVALID')}</Radio>\n          </Radio.Group>\n        </Form.Item>\n        <div ref={this.ref} className=\"attributes-form-content\">\n          {frameConfig && this.state.frameFields && (\n            <EasyForm\n              theme=\"dark\"\n              fields={this.state.frameFields}\n              conditions={frameConfig.conditions}\n              effects={frameConfig.effects}\n              rules={frameConfig.rules}\n              onChange={this.handleChange}\n              onSubmit={this.onFrameValuesSubmit}\n              renderLabel={(label, field) => (\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                  <span>{label}</span>\n                  {/* eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control */}\n                  <label style={{ fontSize: 12, color: '#b5b5b5' }}>\n                    <ConfigProvider prefixCls=\"easyform\">\n                      <Checkbox\n                        checked={this.state.applyAllFields.includes(field.name)}\n                        onChange={(e) => this.handleFieldApplyAll(field.name, e.target.checked)}\n                      >\n                        {i18n.translate('APPLY_TO_FOLLOWING_FRAMES')}\n                      </Checkbox>\n                    </ConfigProvider>\n                  </label>\n                </div>\n              )}\n            />\n          )}\n        </div>\n        <div className=\"attributes-form-footer\">\n          <Button type=\"primary\" onClick={this.submit}>\n            {i18n.translate('COMMON_SUBMIT')}\n          </Button>\n          {store.frame.frameCount > 1 && store.frame.frameConfig && (\n            <div className=\"form-footer-operation\">\n              <ConfigProvider prefixCls=\"easyform\">\n                <Checkbox checked={this.state.applyAll} onChange={(e) => this.setApplyAll(e.target.checked)}>\n                  {i18n.translate('APPLY_ALL_TO_FOLLOWING_FRAMES')}\n                </Checkbox>\n              </ConfigProvider>\n            </div>\n          )}\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default observer(FrameAttributesModal);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}