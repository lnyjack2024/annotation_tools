{"ast":null,"code":"import { EditorState, convertFromRaw, convertToRaw } from 'draft-js';\nimport { CODE_BLOCK_TYPE } from '../constants';\nexport default function setLanguage(editorState, startBlockKey, language) {\n  const currentContent = editorState.getCurrentContent();\n  const rawData = convertToRaw(currentContent);\n  const {\n    blocks\n  } = rawData;\n  let start = false;\n  for (let i = 0; i < blocks.length; i += 1) {\n    const block = blocks[i];\n    if (block.type === CODE_BLOCK_TYPE) {\n      if (block.key === startBlockKey) {\n        start = true;\n      }\n      if (start) {\n        block.data = {\n          ...block.data,\n          language\n        };\n      }\n    } else if (start) {\n      start = false;\n      break;\n    }\n  }\n  return EditorState.push(editorState, convertFromRaw(rawData), 'change-block-data');\n}","map":{"version":3,"names":["EditorState","convertFromRaw","convertToRaw","CODE_BLOCK_TYPE","setLanguage","editorState","startBlockKey","language","currentContent","getCurrentContent","rawData","blocks","start","i","length","block","type","key","data","push"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/common/llm/input/modifiers/set-language.ts"],"sourcesContent":["import { EditorState, convertFromRaw, convertToRaw } from 'draft-js';\nimport { CODE_BLOCK_TYPE } from '../constants';\n\nexport default function setLanguage(editorState: EditorState, startBlockKey: string, language: string) {\n  const currentContent = editorState.getCurrentContent();\n  const rawData = convertToRaw(currentContent);\n  const { blocks } = rawData;\n\n  let start = false;\n  for (let i = 0; i < blocks.length; i += 1) {\n    const block = blocks[i];\n    if (block.type === CODE_BLOCK_TYPE) {\n      if (block.key === startBlockKey) {\n        start = true;\n      }\n      if (start) {\n        block.data = { ...block.data, language };\n      }\n    } else if (start) {\n      start = false;\n      break;\n    }\n  }\n\n  return EditorState.push(editorState, convertFromRaw(rawData), 'change-block-data');\n}\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,EAAEC,YAAY,QAAQ,UAAU;AACpE,SAASC,eAAe,QAAQ,cAAc;AAE9C,eAAe,SAASC,WAAWA,CAACC,WAAwB,EAAEC,aAAqB,EAAEC,QAAgB,EAAE;EACrG,MAAMC,cAAc,GAAGH,WAAW,CAACI,iBAAiB,CAAC,CAAC;EACtD,MAAMC,OAAO,GAAGR,YAAY,CAACM,cAAc,CAAC;EAC5C,MAAM;IAAEG;EAAO,CAAC,GAAGD,OAAO;EAE1B,IAAIE,KAAK,GAAG,KAAK;EACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,MAAM,CAACG,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;IACzC,MAAME,KAAK,GAAGJ,MAAM,CAACE,CAAC,CAAC;IACvB,IAAIE,KAAK,CAACC,IAAI,KAAKb,eAAe,EAAE;MAClC,IAAIY,KAAK,CAACE,GAAG,KAAKX,aAAa,EAAE;QAC/BM,KAAK,GAAG,IAAI;MACd;MACA,IAAIA,KAAK,EAAE;QACTG,KAAK,CAACG,IAAI,GAAG;UAAE,GAAGH,KAAK,CAACG,IAAI;UAAEX;QAAS,CAAC;MAC1C;IACF,CAAC,MAAM,IAAIK,KAAK,EAAE;MAChBA,KAAK,GAAG,KAAK;MACb;IACF;EACF;EAEA,OAAOZ,WAAW,CAACmB,IAAI,CAACd,WAAW,EAAEJ,cAAc,CAACS,OAAO,CAAC,EAAE,mBAAmB,CAAC;AACpF","ignoreList":[]},"metadata":{},"sourceType":"module"}