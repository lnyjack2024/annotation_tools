{"ast":null,"code":"var _class,\n  _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/keypoint/components/Validator.tsx\";\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport CommonValidator from '../../common/tabs-menu/Validator';\nimport formatMessage from '../locales';\nimport rootStore from '../store/RootStore';\nimport { ValidationType, ReviewResult } from '../types';\nimport './Validator.scss';\nlet Validator = observer(_class = class Validator extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.handleSync = async () => {\n      await this.props.getScriptResult();\n      return {\n        hasCustomError: rootStore.review.hasCustomError,\n        blockSubmitErrors: rootStore.review.blockSubmitErrors\n      };\n    };\n    this.handleAction = warning => {\n      const {\n        setFrame,\n        setSelectedShape,\n        selectGroup\n      } = this.props;\n      const {\n        id,\n        groupName,\n        shapeIds,\n        frames\n      } = warning;\n      setFrame(frames[0]);\n      const instance = this.props.getInstance(id);\n      if (groupName) {\n        if (shapeIds && shapeIds.length) {\n          setSelectedShape(shapeIds[0], {\n            instanceId: id,\n            category: instance === null || instance === void 0 ? void 0 : instance.category,\n            groupName\n          });\n        } else {\n          selectGroup(id, groupName);\n        }\n      }\n    };\n    this.warningMoreHandleAction = (key, warning) => {\n      if (key === ReviewResult.REJECT) return;\n      const {\n        frames,\n        id,\n        groupName,\n        shapeIds\n      } = warning;\n      const currentReview = {\n        instanceId: id,\n        groupName: groupName,\n        frameIndex: frames[0],\n        shapeIds: shapeIds,\n        result: ReviewResult.REJECT\n      };\n      if (key === 'delete') {\n        rootStore.review.deleteReviewByInstance(currentReview);\n      } else {\n        rootStore.review.setReview({\n          result: key\n        }, currentReview);\n      }\n    };\n  }\n  getCategoryByWarning(warning) {\n    const {\n      id,\n      groupName,\n      shapeIds,\n      frames\n    } = warning;\n    const instance = this.props.getInstance(id);\n    const ontologyItem = rootStore.ontology.getOntologyInfo(instance === null || instance === void 0 ? void 0 : instance.category);\n    const groupItem = ontologyItem && ontologyItem.children && ontologyItem.children.find(group => group.name === groupName);\n    return ontologyItem && instance ? `${formatMessage('VALIDATION_FRAME', {\n      values: {\n        frameIndex: frames[0] + 1\n      }\n    })}\n      ${ontologyItem.display_name || ontologyItem.class_name || ''} ${instance.number}\n      ${groupItem ? `- ${groupItem.display_name || groupItem.name}` : ''}\n      ${shapeIds && shapeIds.length && typeof shapeIds[0] === 'number' ? `[${shapeIds.join(',')}]` : ''}` : '';\n  }\n  renderWarningTitle(warning) {\n    var _rootStore$ontology$g;\n    const {\n      id\n    } = warning;\n    const category = this.getCategoryByWarning(warning);\n    if (!category) {\n      return formatMessage('VALIDATION_NO_INSTANCE');\n    }\n    const instance = this.props.getInstance(id);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cat-color-dot\",\n      style: {\n        backgroundColor: (_rootStore$ontology$g = rootStore.ontology.getOntologyInfo(instance.category)) === null || _rootStore$ontology$g === void 0 ? void 0 : _rootStore$ontology$g.display_color\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }), category);\n  }\n  render() {\n    const ValidationTypeTitle = {\n      [ValidationType.ATTR_EMPTY]: formatMessage('VALIDATION_TYPE_ATTR_EMPTY'),\n      [ValidationType.CUSTOM]: formatMessage('VALIDATION_TYPE_CUSTOM'),\n      [ValidationType.QUALITY]: formatMessage('VALIDATION_TYPE_QUALITY')\n    };\n    return /*#__PURE__*/React.createElement(CommonValidator, {\n      isEnabled: rootStore.review.isEnabled,\n      validationTypes: ValidationTypeTitle,\n      warnings: this.props.warnings,\n      errors: rootStore.review.errors,\n      containerWidth: \"286px\",\n      titleFormatter: count => formatMessage('VALIDATION_TITLE', {\n        values: {\n          count\n        }\n      }),\n      checkingMsgFormatter: () => formatMessage('VALIDATION_CHECKING'),\n      onValidate: this.handleSync,\n      renderWarningTitle: warning => this.renderWarningTitle(warning),\n      showWarningAction: warning => !!this.getCategoryByWarning(warning),\n      onWarningAction: warning => this.handleAction(warning),\n      onMoreHandleAction: this.warningMoreHandleAction,\n      formatMessage: formatMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }\n    });\n  }\n}) || _class;\nexport default Validator;","map":{"version":3,"names":["React","observer","CommonValidator","formatMessage","rootStore","ValidationType","ReviewResult","Validator","_class","Component","constructor","args","handleSync","props","getScriptResult","hasCustomError","review","blockSubmitErrors","handleAction","warning","setFrame","setSelectedShape","selectGroup","id","groupName","shapeIds","frames","instance","getInstance","length","instanceId","category","warningMoreHandleAction","key","REJECT","currentReview","frameIndex","result","deleteReviewByInstance","setReview","getCategoryByWarning","ontologyItem","ontology","getOntologyInfo","groupItem","children","find","group","name","values","display_name","class_name","number","join","renderWarningTitle","_rootStore$ontology$g","createElement","Fragment","className","style","backgroundColor","display_color","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","render","ValidationTypeTitle","ATTR_EMPTY","CUSTOM","QUALITY","isEnabled","validationTypes","warnings","errors","containerWidth","titleFormatter","count","checkingMsgFormatter","onValidate","showWarningAction","onWarningAction","onMoreHandleAction"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/keypoint/components/Validator.tsx"],"sourcesContent":["import React from 'react';\nimport { observer } from 'mobx-react';\nimport CommonValidator, { IWarning } from '../../common/tabs-menu/Validator';\nimport formatMessage from '../locales';\nimport JobProxy from '../../../libs/JobProxy';\nimport rootStore from '../store/RootStore';\nimport { InstanceAct, ValidationType, Group, ReviewResult, Review } from '../types';\nimport './Validator.scss';\n\ninterface ValidatorProps {\n  containerWidth?: number | string;\n  containerHeight?: number | string;\n  instances: {[instanceId: string]: InstanceAct};\n  jobProxy: JobProxy;\n  warnings: IWarning[];\n  setFrame: (frame: number) => void;\n  setSelectedShape: (id: number | string, groupData?: Group) => void;\n  selectGroup: (id: string, groupName: string) => void;\n  getInstance: (instanceID: string) => InstanceAct;\n  getScriptResult: () => void;\n  saveResult: () => Promise<string>;\n}\n\n@observer\nclass Validator extends React.Component<ValidatorProps> {\n  getCategoryByWarning(warning: IWarning) {\n    const { id, groupName, shapeIds, frames } = warning;\n    const instance = this.props.getInstance(id);\n    const ontologyItem = rootStore.ontology.getOntologyInfo(instance?.category);\n    const groupItem = ontologyItem && ontologyItem.children && ontologyItem.children.find((group) => group.name === groupName);\n    return ontologyItem && instance ?\n      `${formatMessage('VALIDATION_FRAME', {\n        values: { frameIndex: frames[0] + 1 }\n      })}\n      ${ontologyItem.display_name || ontologyItem.class_name || ''} ${instance.number}\n      ${groupItem ? `- ${groupItem.display_name || groupItem.name}` : ''}\n      ${shapeIds && shapeIds.length && (typeof shapeIds[0] === 'number') ? `[${shapeIds.join(',')}]` : ''}` :\n      '';\n  }\n\n  handleSync = async () => {\n    await this.props.getScriptResult();\n    return {\n      hasCustomError: rootStore.review.hasCustomError,\n      blockSubmitErrors: rootStore.review.blockSubmitErrors\n    };\n  };\n\n  handleAction = (warning: IWarning) => {\n    const { setFrame, setSelectedShape, selectGroup } = this.props;\n    const { id, groupName, shapeIds, frames } = warning;\n    setFrame(frames[0]);\n    const instance = this.props.getInstance(id);\n    if (groupName) {\n      if (shapeIds && shapeIds.length) {\n        setSelectedShape(shapeIds[0], {\n          instanceId: id,\n          category: instance?.category,\n          groupName\n        });\n      } else {\n        selectGroup(id, groupName);\n      }\n    }\n  };\n\n  renderWarningTitle(warning: IWarning) {\n    const { id } = warning;\n    const category = this.getCategoryByWarning(warning);\n    if (!category) {\n      return formatMessage('VALIDATION_NO_INSTANCE');\n    }\n    const instance = this.props.getInstance(id);\n    return (\n      <>\n        <div\n          className=\"cat-color-dot\"\n          style={{ backgroundColor: rootStore.ontology.getOntologyInfo(instance.category)?.display_color }}\n        />\n        {category}\n      </>\n    );\n  }\n\n  warningMoreHandleAction = (key: string, warning: IWarning) => {\n    if (key === ReviewResult.REJECT) return;\n    const { frames, id, groupName, shapeIds } = warning;\n    const currentReview: Review = {\n      instanceId: id,\n      groupName: groupName as string,\n      frameIndex: frames[0],\n      shapeIds: shapeIds!,\n      result: ReviewResult.REJECT\n    };\n    if (key === 'delete') {\n      rootStore.review.deleteReviewByInstance(currentReview);\n    } else {\n      rootStore.review.setReview(\n        { result: key as ReviewResult },\n        currentReview\n      );\n    }\n  };\n\n  render() {\n    const ValidationTypeTitle = {\n      [ValidationType.ATTR_EMPTY]: formatMessage('VALIDATION_TYPE_ATTR_EMPTY'),\n      [ValidationType.CUSTOM]: formatMessage('VALIDATION_TYPE_CUSTOM'),\n      [ValidationType.QUALITY]: formatMessage('VALIDATION_TYPE_QUALITY'),\n    };\n    return (\n      <CommonValidator\n        isEnabled={rootStore.review.isEnabled}\n        validationTypes={ValidationTypeTitle}\n        warnings={this.props.warnings}\n        errors={rootStore.review.errors}\n        containerWidth=\"286px\"\n        titleFormatter={(count) => formatMessage('VALIDATION_TITLE', { values: { count } })}\n        checkingMsgFormatter={() => formatMessage('VALIDATION_CHECKING')}\n        onValidate={this.handleSync}\n        renderWarningTitle={(warning) => this.renderWarningTitle(warning as IWarning)}\n        showWarningAction={(warning) => !!this.getCategoryByWarning(warning)}\n        onWarningAction={(warning) => this.handleAction(warning as IWarning)}\n        onMoreHandleAction={this.warningMoreHandleAction}\n        formatMessage={formatMessage}\n      />\n    );\n  }\n}\n\nexport default Validator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}