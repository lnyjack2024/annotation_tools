{"ast":null,"code":"var _class,\n  _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/keypoint/components/Validator.tsx\";\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport CommonValidator from '../../common/tabs-menu/Validator';\nimport formatMessage from '../locales';\nimport rootStore from '../store/RootStore';\nimport { ValidationType, ReviewResult } from '../types';\nimport './Validator.scss';\nlet Validator = observer(_class = class Validator extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.handleAction = warning => {\n      const {\n        setFrame,\n        setSelectedShape,\n        selectGroup\n      } = this.props;\n      const {\n        id,\n        groupName,\n        shapeIds,\n        data,\n        frames\n      } = warning;\n      setFrame(frames[0]);\n      if (data === null || data === void 0 ? void 0 : data.position) {\n        var _this$props$canvas;\n        const missingReview = rootStore.review.missingReviews.find(r => r.id === id);\n        if (missingReview) {\n          rootStore.review.setSelectedMissingReview(missingReview);\n        }\n        (_this$props$canvas = this.props.canvas) === null || _this$props$canvas === void 0 ? void 0 : _this$props$canvas.fitPoint(data.position);\n        return;\n      }\n      const instance = this.props.getInstance(id);\n      if (groupName) {\n        var _this$props$canvas2;\n        if (shapeIds && shapeIds.length) {\n          setSelectedShape(shapeIds[0], {\n            instanceId: id,\n            category: instance === null || instance === void 0 ? void 0 : instance.category,\n            groupName\n          });\n        } else {\n          selectGroup(id, groupName);\n        }\n        (_this$props$canvas2 = this.props.canvas) === null || _this$props$canvas2 === void 0 ? void 0 : _this$props$canvas2.fitSelected(id);\n      }\n    };\n    this.warningMoreHandleAction = (key, warning) => {\n      if (key === ReviewResult.REJECT) return;\n      const {\n        frames,\n        id,\n        groupName,\n        shapeIds\n      } = warning;\n      const currentReview = {\n        instanceId: id,\n        groupName: groupName,\n        frameIndex: frames[0],\n        shapeIds: shapeIds,\n        result: ReviewResult.REJECT\n      };\n      if (key === 'delete') {\n        rootStore.review.deleteReviewByInstance(currentReview);\n      } else {\n        rootStore.review.setReview({\n          result: key\n        }, currentReview);\n      }\n    };\n  }\n  getCategoryByWarning(warning) {\n    const {\n      id,\n      groupName,\n      shapeIds,\n      frames\n    } = warning;\n    const instance = this.props.getInstance(id);\n    const ontologyItem = rootStore.ontology.getOntologyInfo(instance === null || instance === void 0 ? void 0 : instance.category);\n    const groupItem = ontologyItem && ontologyItem.children && ontologyItem.children.find(group => group.name === groupName);\n    return ontologyItem && instance ? `${formatMessage('VALIDATION_FRAME', {\n      values: {\n        frameIndex: frames[0] + 1\n      }\n    })}\n      ${ontologyItem.display_name || ontologyItem.class_name || ''} ${instance.number}\n      ${groupItem ? `- ${groupItem.display_name || groupItem.name}` : ''}\n      ${shapeIds && shapeIds.length && typeof shapeIds[0] === 'number' ? `[${shapeIds.join(',')}]` : ''}` : '';\n  }\n  renderWarningTitle(warning) {\n    var _rootStore$ontology$g;\n    const {\n      id\n    } = warning;\n    const category = this.getCategoryByWarning(warning);\n    if (!category) {\n      return formatMessage('VALIDATION_NO_INSTANCE');\n    }\n    const instance = this.props.getInstance(id);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cat-color-dot\",\n      style: {\n        backgroundColor: (_rootStore$ontology$g = rootStore.ontology.getOntologyInfo(instance.category)) === null || _rootStore$ontology$g === void 0 ? void 0 : _rootStore$ontology$g.display_color\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }), category);\n  }\n  render() {\n    const ValidationTypeTitle = {\n      [ValidationType.ATTR_EMPTY]: formatMessage('VALIDATION_TYPE_ATTR_EMPTY'),\n      [ValidationType.CUSTOM]: formatMessage('VALIDATION_TYPE_CUSTOM'),\n      [ValidationType.QUALITY]: formatMessage('VALIDATION_TYPE_QUALITY')\n    };\n    return /*#__PURE__*/React.createElement(CommonValidator, {\n      isEnabled: rootStore.review.isEnabled,\n      validationTypes: ValidationTypeTitle,\n      warnings: this.props.warnings,\n      errors: rootStore.review.errors,\n      containerWidth: \"286px\",\n      titleFormatter: count => formatMessage('VALIDATION_TITLE', {\n        values: {\n          count\n        }\n      }),\n      checkingMsgFormatter: () => formatMessage('VALIDATION_CHECKING'),\n      onValidate: this.handleSync,\n      renderWarningTitle: warning => this.renderWarningTitle(warning),\n      showWarningAction: warning => !!this.getCategoryByWarning(warning),\n      onWarningAction: warning => this.handleAction(warning),\n      onMoreHandleAction: this.warningMoreHandleAction,\n      formatMessage: formatMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }\n    });\n  }\n}) || _class;\nexport default Validator;","map":{"version":3,"names":["React","observer","CommonValidator","formatMessage","rootStore","ValidationType","ReviewResult","Validator","_class","Component","constructor","args","handleAction","warning","setFrame","setSelectedShape","selectGroup","props","id","groupName","shapeIds","data","frames","position","_this$props$canvas","missingReview","review","missingReviews","find","r","setSelectedMissingReview","canvas","fitPoint","instance","getInstance","_this$props$canvas2","length","instanceId","category","fitSelected","warningMoreHandleAction","key","REJECT","currentReview","frameIndex","result","deleteReviewByInstance","setReview","getCategoryByWarning","ontologyItem","ontology","getOntologyInfo","groupItem","children","group","name","values","display_name","class_name","number","join","renderWarningTitle","_rootStore$ontology$g","createElement","Fragment","className","style","backgroundColor","display_color","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","render","ValidationTypeTitle","ATTR_EMPTY","CUSTOM","QUALITY","isEnabled","validationTypes","warnings","errors","containerWidth","titleFormatter","count","checkingMsgFormatter","onValidate","handleSync","showWarningAction","onWarningAction","onMoreHandleAction"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/keypoint/components/Validator.tsx"],"sourcesContent":["import React from 'react';\nimport { observer } from 'mobx-react';\nimport CommonValidator, { IWarning } from '../../common/tabs-menu/Validator';\nimport formatMessage from '../locales';\nimport JobProxy from '../../../libs/JobProxy';\nimport rootStore from '../store/RootStore';\nimport { InstanceAct, ValidationType, Group, ReviewResult, Review } from '../types';\nimport './Validator.scss';\nimport Canvas from './Canvas';\n\ninterface ValidatorProps {\n  canvas: Canvas | null;\n  containerWidth?: number | string;\n  containerHeight?: number | string;\n  instances: {[instanceId: string]: InstanceAct};\n  jobProxy: JobProxy;\n  warnings: IWarning[];\n  setFrame: (frame: number) => void;\n  setSelectedShape: (id: number | string, groupData?: Group) => void;\n  selectGroup: (id: string, groupName: string) => void;\n  getInstance: (instanceID: string) => InstanceAct;\n  saveResult: () => Promise<string>;\n}\n\n@observer\nclass Validator extends React.Component<ValidatorProps> {\n  getCategoryByWarning(warning: IWarning) {\n    const { id, groupName, shapeIds, frames } = warning;\n    const instance = this.props.getInstance(id);\n    const ontologyItem = rootStore.ontology.getOntologyInfo(instance?.category);\n    const groupItem = ontologyItem && ontologyItem.children && ontologyItem.children.find((group) => group.name === groupName);\n    return ontologyItem && instance ?\n      `${formatMessage('VALIDATION_FRAME', {\n        values: { frameIndex: frames[0] + 1 }\n      })}\n      ${ontologyItem.display_name || ontologyItem.class_name || ''} ${instance.number}\n      ${groupItem ? `- ${groupItem.display_name || groupItem.name}` : ''}\n      ${shapeIds && shapeIds.length && (typeof shapeIds[0] === 'number') ? `[${shapeIds.join(',')}]` : ''}` :\n      '';\n  }\n\n  handleAction = (warning: IWarning) => {\n    const { setFrame, setSelectedShape, selectGroup } = this.props;\n    const { id, groupName, shapeIds, data, frames } = warning;\n    setFrame(frames[0]);\n    if (data?.position) {\n      const missingReview = rootStore.review.missingReviews.find((r) => r.id === id);\n      if (missingReview) {\n        rootStore.review.setSelectedMissingReview(missingReview);\n      }\n      this.props.canvas?.fitPoint(data.position);\n      return;\n    }\n    const instance = this.props.getInstance(id);\n    if (groupName) {\n      if (shapeIds && shapeIds.length) {\n        setSelectedShape(shapeIds[0], {\n          instanceId: id,\n          category: instance?.category,\n          groupName\n        });\n      } else {\n        selectGroup(id, groupName);\n      }\n      this.props.canvas?.fitSelected(id);\n    }\n  };\n\n  renderWarningTitle(warning: IWarning) {\n    const { id } = warning;\n    const category = this.getCategoryByWarning(warning);\n    if (!category) {\n      return formatMessage('VALIDATION_NO_INSTANCE');\n    }\n    const instance = this.props.getInstance(id);\n    return (\n      <>\n        <div\n          className=\"cat-color-dot\"\n          style={{ backgroundColor: rootStore.ontology.getOntologyInfo(instance.category)?.display_color }}\n        />\n        {category}\n      </>\n    );\n  }\n\n  warningMoreHandleAction = (key: string, warning: IWarning) => {\n    if (key === ReviewResult.REJECT) return;\n    const { frames, id, groupName, shapeIds } = warning;\n    const currentReview: Review = {\n      instanceId: id,\n      groupName: groupName as string,\n      frameIndex: frames[0],\n      shapeIds: shapeIds!,\n      result: ReviewResult.REJECT\n    };\n    if (key === 'delete') {\n      rootStore.review.deleteReviewByInstance(currentReview);\n    } else {\n      rootStore.review.setReview(\n        { result: key as ReviewResult },\n        currentReview\n      );\n    }\n  };\n\n  render() {\n    const ValidationTypeTitle = {\n      [ValidationType.ATTR_EMPTY]: formatMessage('VALIDATION_TYPE_ATTR_EMPTY'),\n      [ValidationType.CUSTOM]: formatMessage('VALIDATION_TYPE_CUSTOM'),\n      [ValidationType.QUALITY]: formatMessage('VALIDATION_TYPE_QUALITY'),\n    };\n    return (\n      <CommonValidator\n        isEnabled={rootStore.review.isEnabled}\n        validationTypes={ValidationTypeTitle}\n        warnings={this.props.warnings}\n        errors={rootStore.review.errors}\n        containerWidth=\"286px\"\n        titleFormatter={(count) => formatMessage('VALIDATION_TITLE', { values: { count } })}\n        checkingMsgFormatter={() => formatMessage('VALIDATION_CHECKING')}\n        onValidate={this.handleSync}\n        renderWarningTitle={(warning) => this.renderWarningTitle(warning as IWarning)}\n        showWarningAction={(warning) => !!this.getCategoryByWarning(warning)}\n        onWarningAction={(warning) => this.handleAction(warning as IWarning)}\n        onMoreHandleAction={this.warningMoreHandleAction}\n        formatMessage={formatMessage}\n      />\n    );\n  }\n}\n\nexport default Validator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}