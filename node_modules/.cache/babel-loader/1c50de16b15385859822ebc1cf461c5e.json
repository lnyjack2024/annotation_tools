{"ast":null,"code":"import { makeAutoObservable, toJS } from 'mobx';\nimport { v4 as uuidv4 } from 'uuid';\nimport { cloneDeep } from 'lodash';\nimport InstanceItem from './InstanceItem';\n/**\n * Instance\n * @class\n */\nexport default class Instance {\n  /**\n   * instance category class name\n   * @getter\n   */\n  get category() {\n    return this.categoryRef.className;\n  }\n\n  /**\n   * instance label\n   * @getter\n   */\n  get label() {\n    return `${this.categoryRef.displayName}${this.number}`;\n  }\n\n  /**\n   * instance frame status (merged status)\n   * @getter\n   */\n  get frameStatus() {\n    // simple merge\n    return Object.values(this.items).map(i => i.frameStatus).reduce((acc, curr) => ({\n      ...acc,\n      ...curr\n    }), {});\n  }\n\n  /**\n   * instance existed camera names\n   * @getter\n   */\n  get existedCameras() {\n    const cameras = new Set(Object.values(this.items).flatMap(i => i.existedCameras));\n    return Array.from(cameras);\n  }\n\n  /**\n   * is instance empty in all camera & frames\n   * @getter\n   */\n  get isEmpty() {\n    return Object.values(this.items).every(item => item.isEmpty);\n  }\n\n  /**\n   * is instance only contains one item\n   * @getter\n   */\n  get isSingle() {\n    const {\n      children\n    } = this.categoryRef;\n    return children.length === 1 && children[0].count === 1;\n  }\n  constructor({\n    id,\n    categoryRef,\n    number,\n    attributes: _attributes,\n    dynamicAttributes: _dynamicAttributes,\n    items = [],\n    getNextShapeOrder\n  }) {\n    /**\n     * instance uuid\n     * @member\n     */\n    this.id = void 0;\n    /**\n     * category instance reference\n     * @member\n     */\n    this.categoryRef = void 0;\n    /**\n     * instance number\n     * @member\n     */\n    this.number = void 0;\n    /**\n     * instance attributes\n     * @member\n     */\n    this.attributes = void 0;\n    /**\n    * instance dynamic attributes\n    * @member\n    */\n    this.dynamicAttributes = void 0;\n    /**\n     * instance items\n     * @member\n     */\n    this.items = {};\n    /**\n     * is instance selected\n     * @member\n     */\n    this.selected = false;\n    /**\n     * is instance collapsed\n     * @member\n     */\n    this.collapsed = false;\n    /**\n     * get next shape order\n     * @member\n     */\n    this.getNextShapeOrder = void 0;\n    /**\n    * set dynamic attributes\n    * @param attrs\n    */\n    this.setDynamicAttributes = attrs => {\n      if (Array.isArray(attrs)) {\n        const dynamicAttributes = {};\n        attrs.forEach(cameraItem => {\n          const {\n            camera,\n            frames\n          } = cameraItem || {};\n          if (camera) {\n            dynamicAttributes[camera] = {};\n            if (Array.isArray(frames)) {\n              frames.forEach(frameItem => {\n                const {\n                  frameIndex,\n                  attributes\n                } = frameItem;\n                dynamicAttributes[camera][frameIndex] = {\n                  frameIndex,\n                  attributes\n                };\n              });\n            }\n          }\n        });\n        this.dynamicAttributes = dynamicAttributes;\n      }\n      ;\n    };\n    makeAutoObservable(this, {\n      id: false,\n      categoryRef: false,\n      isEmpty: false,\n      isSingle: false,\n      getNextShapeOrder: false\n    }, {\n      autoBind: true\n    });\n    this.getNextShapeOrder = getNextShapeOrder;\n    this.id = id || uuidv4();\n    this.categoryRef = categoryRef;\n    this.number = number;\n    this.attributes = cloneDeep(_attributes);\n    this.setDynamicAttributes(_dynamicAttributes);\n    items.forEach(item => this.createItemFromData(item));\n  }\n\n  /**\n   * create instance item from structured instance item data\n   * @param instanceItem\n   */\n  createItemFromData(instanceItem) {\n    const {\n      children\n    } = this.categoryRef;\n    const categoryItem = children.find(c => c.name === instanceItem.name);\n    if (categoryItem) {\n      const item = new InstanceItem({\n        id: instanceItem.id,\n        instance: this,\n        categoryItemRef: categoryItem,\n        number: instanceItem.number,\n        cameras: instanceItem.cameras\n      });\n      this.items[item.id] = item;\n    }\n  }\n\n  /**\n   * get instance items by instance item name\n   * @param instanceItemName\n   */\n  getItemsByName(instanceItemName) {\n    return toJS(Object.values(this.items).filter(i => i.name === instanceItemName));\n  }\n\n  /**\n   * get instance item by name & number\n   * @param instanceItemName\n   * @param instanceItemNumber\n   */\n  getItem(instanceItemName, instanceItemNumber) {\n    const items = Object.values(this.items);\n    return items.find(i => i.name === instanceItemName && i.number === instanceItemNumber);\n  }\n\n  /**\n   * set selected\n   * @param selected\n   */\n  setSelected(selected) {\n    this.selected = selected;\n  }\n\n  /**\n   * set collasped\n   * @param collapsed\n   */\n  setCollapsed(collapsed) {\n    this.collapsed = collapsed;\n  }\n\n  /**\n   * set attributes\n   * @param attributes\n   */\n  setAttributes(attributes) {\n    this.attributes = cloneDeep(attributes);\n  }\n  /**\n   * set dynamic attributes\n   * @param camera\n   * @param updatedDynamicAttributes\n   */\n  setDynamicAttributesByCamera(camera, updatedDynamicAttributes) {\n    for (let i = 0; i < updatedDynamicAttributes.length; i += 1) {\n      const {\n        frameIndex,\n        attributes\n      } = updatedDynamicAttributes[i];\n      if (attributes) {\n        if (!this.dynamicAttributes) {\n          this.dynamicAttributes = {};\n        }\n        if (!this.dynamicAttributes[camera]) {\n          this.dynamicAttributes[camera] = {};\n        }\n        if (!this.dynamicAttributes[camera][frameIndex]) {\n          this.dynamicAttributes[camera][frameIndex] = {\n            frameIndex\n          };\n        }\n        ;\n        this.dynamicAttributes[camera][frameIndex].attributes = cloneDeep(attributes);\n      }\n    }\n  }\n  instanceDynamicAttrNeedDelete(camera, instanceItemId) {\n    const instanceItemHasCameraData = Object.values(this.items).filter(item => {\n      var _item$cameras;\n      return ((_item$cameras = item.cameras) === null || _item$cameras === void 0 ? void 0 : _item$cameras[camera]) && item.id !== instanceItemId;\n    });\n    if (instanceItemHasCameraData && instanceItemHasCameraData.length > 0) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * delete dynamic attributes by camera 、frames、instanceItemId\n   * @param camera\n   * @param frames\n   * @param instanceItemId\n   */\n  deleteDynamicAttributesByCamera(camera, frames, instanceItemId) {\n    var _this$dynamicAttribut;\n    if ((_this$dynamicAttribut = this.dynamicAttributes) === null || _this$dynamicAttribut === void 0 ? void 0 : _this$dynamicAttribut[camera]) {\n      frames.forEach(frameIndex => {\n        var _this$items$instanceI, _this$items$instanceI2, _this$items$instanceI3, _this$items$instanceI4;\n        const needDelete = this.instanceDynamicAttrNeedDelete(camera, instanceItemId);\n        if (needDelete && !((_this$items$instanceI = this.items[instanceItemId]) === null || _this$items$instanceI === void 0 ? void 0 : (_this$items$instanceI2 = _this$items$instanceI.cameras) === null || _this$items$instanceI2 === void 0 ? void 0 : (_this$items$instanceI3 = _this$items$instanceI2[camera]) === null || _this$items$instanceI3 === void 0 ? void 0 : (_this$items$instanceI4 = _this$items$instanceI3.frames) === null || _this$items$instanceI4 === void 0 ? void 0 : _this$items$instanceI4[frameIndex])) {\n          delete this.dynamicAttributes[camera][frameIndex];\n          if (Object.keys(this.dynamicAttributes[camera]).length === 0) {\n            delete this.dynamicAttributes[camera];\n          }\n          if (Object.keys(this.dynamicAttributes).length === 0) {\n            this.dynamicAttributes = undefined;\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * remove item\n   * @param instanceItemId\n   */\n  removeItem(instanceItemId) {\n    delete this.items[instanceItemId];\n  }\n\n  /**\n   * destroy\n   */\n  destroy() {\n    // remove references\n    this.items = {};\n  }\n  dynamicAttributesJSON() {\n    if (!this.dynamicAttributes) {\n      return undefined;\n    }\n    const cameras = Object.keys(this.dynamicAttributes);\n    return cameras.map(camera => {\n      const frames = Object.values(this.dynamicAttributes[camera]).map(({\n        frameIndex,\n        attributes\n      }) => ({\n        frameIndex,\n        attributes: cloneDeep(toJS(attributes))\n      }));\n      return {\n        camera,\n        frames\n      };\n    });\n  }\n\n  /**\n   * return structured data\n   */\n  toJSON() {\n    return {\n      ...this.getBasicInfo(),\n      children: Object.values(this.items).filter(item => !item.isEmpty).map(item => item.toJSON())\n    };\n  }\n\n  /**\n   * return basic info data\n   */\n  getBasicInfo() {\n    return {\n      id: this.id,\n      category: this.category,\n      categoryName: this.categoryRef.displayName,\n      categoryColor: this.categoryRef.displayColor,\n      number: this.number,\n      attributes: cloneDeep(toJS(this.attributes)),\n      dynamicAttributes: this.dynamicAttributesJSON()\n    };\n  }\n}","map":{"version":3,"names":["makeAutoObservable","toJS","v4","uuidv4","cloneDeep","InstanceItem","Instance","category","categoryRef","className","label","displayName","number","frameStatus","Object","values","items","map","i","reduce","acc","curr","existedCameras","cameras","Set","flatMap","Array","from","isEmpty","every","item","isSingle","children","length","count","constructor","id","attributes","dynamicAttributes","getNextShapeOrder","selected","collapsed","setDynamicAttributes","attrs","isArray","forEach","cameraItem","camera","frames","frameItem","frameIndex","autoBind","createItemFromData","instanceItem","categoryItem","find","c","name","instance","categoryItemRef","getItemsByName","instanceItemName","filter","getItem","instanceItemNumber","setSelected","setCollapsed","setAttributes","setDynamicAttributesByCamera","updatedDynamicAttributes","instanceDynamicAttrNeedDelete","instanceItemId","instanceItemHasCameraData","_item$cameras","deleteDynamicAttributesByCamera","_this$dynamicAttribut","_this$items$instanceI","_this$items$instanceI2","_this$items$instanceI3","_this$items$instanceI4","needDelete","keys","undefined","removeItem","destroy","dynamicAttributesJSON","toJSON","getBasicInfo","categoryName","categoryColor","displayColor"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking2/model/Instance.ts"],"sourcesContent":["import { makeAutoObservable, toJS } from 'mobx';\nimport { v4 as uuidv4 } from 'uuid';\nimport { cloneDeep } from 'lodash';\nimport InstanceItem from './InstanceItem';\nimport { InstanceItem as IInstanceItem, Instance as IInstance, Category, DynamicAttributes, InstanceDynamicAttributes } from '../types';\n\ninterface InstanceOptions {\n  id?: string;\n  categoryRef: Category;\n  number: number;\n  attributes?: any;\n  dynamicAttributes?: InstanceDynamicAttributes[];\n  items?: IInstanceItem[];\n  getNextShapeOrder?: (frameIndex: number, camera: string) => number;\n}\n\n/**\n * Instance\n * @class\n */\nexport default class Instance {\n  /**\n   * instance uuid\n   * @member\n   */\n  id: string;\n\n  /**\n   * category instance reference\n   * @member\n   */\n  categoryRef: Category;\n\n  /**\n   * instance number\n   * @member\n   */\n  number: number;\n\n  /**\n   * instance attributes\n   * @member\n   */\n  attributes?: any;\n\n  /**\n * instance dynamic attributes\n * @member\n */\n  dynamicAttributes?: {\n    [camera: string]: {\n      [frameIndex: number]: DynamicAttributes;\n    }\n  };\n\n\n  /**\n   * instance items\n   * @member\n   */\n  items: { [itemId: string]: InstanceItem } = {};\n\n  /**\n   * is instance selected\n   * @member\n   */\n  selected = false;\n\n  /**\n   * is instance collapsed\n   * @member\n   */\n  collapsed = false;\n\n  /**\n   * get next shape order\n   * @member\n   */\n  getNextShapeOrder?: (frameIndex: number, camera: string) => number;\n\n  /**\n   * instance category class name\n   * @getter\n   */\n  get category() {\n    return this.categoryRef.className;\n  }\n\n  /**\n   * instance label\n   * @getter\n   */\n  get label() {\n    return `${this.categoryRef.displayName}${this.number}`;\n  }\n\n  /**\n   * instance frame status (merged status)\n   * @getter\n   */\n  get frameStatus() {\n    // simple merge\n    return Object.values(this.items)\n      .map((i) => i.frameStatus)\n      .reduce((acc, curr) => ({ ...acc, ...curr }), {});\n  }\n\n  /**\n   * instance existed camera names\n   * @getter\n   */\n  get existedCameras() {\n    const cameras = new Set(Object.values(this.items).flatMap((i) => i.existedCameras));\n    return Array.from(cameras);\n  }\n\n  /**\n   * is instance empty in all camera & frames\n   * @getter\n   */\n  get isEmpty() {\n    return Object.values(this.items).every((item) => item.isEmpty);\n  }\n\n  /**\n   * is instance only contains one item\n   * @getter\n   */\n  get isSingle() {\n    const { children } = this.categoryRef;\n    return children.length === 1 && children[0].count === 1;\n  }\n\n  constructor({ id, categoryRef, number, attributes, dynamicAttributes, items = [], getNextShapeOrder }: InstanceOptions) {\n    makeAutoObservable(this, {\n      id: false,\n      categoryRef: false,\n      isEmpty: false,\n      isSingle: false,\n      getNextShapeOrder: false,\n    }, {\n      autoBind: true,\n    });\n\n    this.getNextShapeOrder = getNextShapeOrder;\n    this.id = id || uuidv4();\n    this.categoryRef = categoryRef;\n    this.number = number;\n    this.attributes = cloneDeep(attributes);\n    this.setDynamicAttributes(dynamicAttributes);\n    items.forEach((item) => this.createItemFromData(item));\n  }\n\n  /**\n   * create instance item from structured instance item data\n   * @param instanceItem\n   */\n  createItemFromData(instanceItem: IInstanceItem) {\n    const { children } = this.categoryRef;\n    const categoryItem = children.find((c) => c.name === instanceItem.name);\n    if (categoryItem) {\n      const item = new InstanceItem({\n        id: instanceItem.id,\n        instance: this,\n        categoryItemRef: categoryItem,\n        number: instanceItem.number,\n        cameras: instanceItem.cameras,\n      });\n      this.items[item.id] = item;\n    }\n  }\n\n  /**\n   * get instance items by instance item name\n   * @param instanceItemName\n   */\n  getItemsByName(instanceItemName: string) {\n    return toJS(Object.values(this.items).filter((i) => i.name === instanceItemName));\n  }\n\n  /**\n   * get instance item by name & number\n   * @param instanceItemName\n   * @param instanceItemNumber\n   */\n  getItem(instanceItemName: string, instanceItemNumber: number) {\n    const items = Object.values(this.items);\n    return items.find((i) => i.name === instanceItemName && i.number === instanceItemNumber);\n  }\n\n  /**\n   * set selected\n   * @param selected\n   */\n  setSelected(selected: boolean) {\n    this.selected = selected;\n  }\n\n  /**\n   * set collasped\n   * @param collapsed\n   */\n  setCollapsed(collapsed: boolean) {\n    this.collapsed = collapsed;\n  }\n\n  /**\n   * set attributes\n   * @param attributes\n   */\n  setAttributes(attributes: any) {\n    this.attributes = cloneDeep(attributes);\n  }\n\n  /**\n * set dynamic attributes\n * @param attrs\n */\n  setDynamicAttributes = (attrs: any) => {\n    if (Array.isArray(attrs)) {\n      const dynamicAttributes: {\n        [camera: string]: {\n          [frameIndex: number]: DynamicAttributes;\n        }\n      } = {};\n      attrs.forEach((cameraItem) => {\n        const { camera, frames } = cameraItem || {};\n        if (camera) {\n          dynamicAttributes[camera] = {};\n          if (Array.isArray(frames)) {\n            frames.forEach((frameItem) => {\n              const { frameIndex, attributes } = frameItem;\n              dynamicAttributes[camera][frameIndex] = {\n                frameIndex,\n                attributes,\n              };\n            });\n          }\n        }\n      });\n      this.dynamicAttributes = dynamicAttributes;\n    };\n  };\n\n  /**\n   * set dynamic attributes\n   * @param camera\n   * @param updatedDynamicAttributes\n   */\n  setDynamicAttributesByCamera(camera: string, updatedDynamicAttributes: DynamicAttributes[]) {\n    for (let i = 0; i < updatedDynamicAttributes.length; i += 1) {\n      const { frameIndex, attributes } = updatedDynamicAttributes[i];\n      if (attributes) {\n        if (!this.dynamicAttributes) {\n          this.dynamicAttributes = {};\n        }\n        if (!this.dynamicAttributes[camera]) {\n          this.dynamicAttributes[camera] = {};\n        }\n        if (!this.dynamicAttributes[camera][frameIndex]) {\n          this.dynamicAttributes[camera][frameIndex] = { frameIndex };\n        };\n        this.dynamicAttributes[camera][frameIndex].attributes = cloneDeep(attributes);\n      }\n    }\n  }\n\n  instanceDynamicAttrNeedDelete(camera: string, instanceItemId: string) {\n    const instanceItemHasCameraData = Object.values(this.items).filter((item) => item.cameras?.[camera] && item.id !== instanceItemId);\n    if (instanceItemHasCameraData && instanceItemHasCameraData.length > 0) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * delete dynamic attributes by camera 、frames、instanceItemId\n   * @param camera\n   * @param frames\n   * @param instanceItemId\n   */\n  deleteDynamicAttributesByCamera(camera: string, frames: number[], instanceItemId: string) {\n    if (this.dynamicAttributes?.[camera]) {\n      frames.forEach((frameIndex) => {\n        const needDelete = this.instanceDynamicAttrNeedDelete(camera, instanceItemId);\n        if (needDelete && !this.items[instanceItemId]?.cameras?.[camera]?.frames?.[frameIndex]) {\n          delete this.dynamicAttributes![camera][frameIndex];\n          if (Object.keys(this.dynamicAttributes![camera]).length === 0) {\n            delete this.dynamicAttributes![camera];\n          }\n          if (Object.keys(this.dynamicAttributes!).length === 0) {\n            this.dynamicAttributes = undefined;\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * remove item\n   * @param instanceItemId\n   */\n  removeItem(instanceItemId: string) {\n    delete this.items[instanceItemId];\n  }\n\n  /**\n   * destroy\n   */\n  destroy() {\n    // remove references\n    this.items = {};\n  }\n\n  dynamicAttributesJSON(): InstanceDynamicAttributes[] | undefined {\n    if (!this.dynamicAttributes) {\n      return undefined;\n    }\n    const cameras = Object.keys(this.dynamicAttributes);\n    return cameras.map((camera) => {\n      const frames = Object.values(this.dynamicAttributes![camera]).map(({ frameIndex, attributes }) => ({\n        frameIndex,\n        attributes: cloneDeep(toJS(attributes)),\n      }));\n      return {\n        camera,\n        frames,\n      };\n    });\n  }\n\n  /**\n   * return structured data\n   */\n  toJSON(): IInstance {\n    return {\n      ...this.getBasicInfo(),\n      children: Object.values(this.items)\n        .filter((item) => !item.isEmpty)\n        .map((item) => item.toJSON()),\n    };\n  }\n\n  /**\n   * return basic info data\n   */\n  getBasicInfo() {\n    return {\n      id: this.id,\n      category: this.category,\n      categoryName: this.categoryRef.displayName,\n      categoryColor: this.categoryRef.displayColor,\n      number: this.number,\n      attributes: cloneDeep(toJS(this.attributes)),\n      dynamicAttributes: this.dynamicAttributesJSON(),\n    };\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}