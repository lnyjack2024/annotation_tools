{"ast":null,"code":"import{EditorState,convertFromRaw,convertToRaw}from'draft-js';import{ATOMIC_TYPE}from'../constants';export default function tabCommandHandler(editorState,setEditorState,options){const selection=editorState.getSelection();const start=selection.getStartKey();const end=selection.getEndKey();const startOffset=selection.getStartOffset();const endOffset=selection.getEndOffset();const multiLineSelected=start!==end;const rangeSelected=multiLineSelected||startOffset!==endOffset;const currentContent=editorState.getCurrentContent();const rawData=convertToRaw(currentContent);const{blocks}=rawData;let started=false;let newStartOffset;let newEndOffset;for(let i=0;i<blocks.length;i+=1){const block=blocks[i];if(block.key===start){started=true;}if(started&&block.type!==ATOMIC_TYPE){const spaceCount=block.text.search(/\\S|$/);const mod=spaceCount%4;const trimText=block.text.trim();if(multiLineSelected&&!trimText){// force empty line to empty string when multi-line selected\nblock.text='';}else if(options===null||options===void 0?void 0:options.shift){const delSpaceCount=spaceCount>=4&&mod===0?4:mod;block.text=block.text.substring(delSpaceCount);if(newStartOffset===undefined){if(block.key!==start){newStartOffset=0;}else if(startOffset>spaceCount){newStartOffset=startOffset-delSpaceCount;}else{newStartOffset=Math.min(startOffset,spaceCount-delSpaceCount);}}newEndOffset=block.key===end?endOffset-delSpaceCount:endOffset;}else{const newSpaceCount=4-mod;const spaceStr=new Array(newSpaceCount).fill(' ').join('');block.text=\"\".concat(spaceStr).concat(block.text);if(newStartOffset===undefined){if(block.key!==start){newStartOffset=0;}else if(!rangeSelected||startOffset>spaceCount){newStartOffset=startOffset+newSpaceCount;}else{newStartOffset=startOffset;}}newEndOffset=block.key===end?endOffset+newSpaceCount:endOffset;}}if(block.key===end){started=false;break;}}const state=EditorState.push(editorState,convertFromRaw(rawData),'insert-characters');const isBackward=selection.getIsBackward();setEditorState(EditorState.forceSelection(state,selection.merge({anchorOffset:isBackward?newEndOffset:newStartOffset,focusOffset:isBackward?newStartOffset:newEndOffset})));return'handled';}","map":{"version":3,"names":["EditorState","convertFromRaw","convertToRaw","ATOMIC_TYPE","tabCommandHandler","editorState","setEditorState","options","selection","getSelection","start","getStartKey","end","getEndKey","startOffset","getStartOffset","endOffset","getEndOffset","multiLineSelected","rangeSelected","currentContent","getCurrentContent","rawData","blocks","started","newStartOffset","newEndOffset","i","length","block","key","type","spaceCount","text","search","mod","trimText","trim","shift","delSpaceCount","substring","undefined","Math","min","newSpaceCount","spaceStr","Array","fill","join","concat","state","push","isBackward","getIsBackward","forceSelection","merge","anchorOffset","focusOffset"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/common/llm/input/command-handlers/tab.ts"],"sourcesContent":["import { DraftHandleValue, EditorState, convertFromRaw, convertToRaw } from 'draft-js';\nimport { ATOMIC_TYPE } from '../constants';\n\nexport default function tabCommandHandler(\n  editorState: EditorState,\n  setEditorState: React.Dispatch<React.SetStateAction<EditorState>>,\n  options?: {\n    shift?: boolean;\n  }\n): DraftHandleValue {\n  const selection = editorState.getSelection();\n  const start = selection.getStartKey();\n  const end = selection.getEndKey();\n  const startOffset = selection.getStartOffset();\n  const endOffset = selection.getEndOffset();\n\n  const multiLineSelected = start !== end;\n  const rangeSelected = multiLineSelected || startOffset !== endOffset;\n\n  const currentContent = editorState.getCurrentContent();\n  const rawData = convertToRaw(currentContent);\n  const { blocks } = rawData;\n\n  let started = false;\n  let newStartOffset;\n  let newEndOffset;\n  for (let i = 0; i < blocks.length; i += 1) {\n    const block = blocks[i];\n    if (block.key === start) {\n      started = true;\n    }\n    if (started && block.type !== ATOMIC_TYPE) {\n      const spaceCount = block.text.search(/\\S|$/);\n      const mod = spaceCount % 4;\n      const trimText = block.text.trim();\n      if (multiLineSelected && !trimText) {\n        // force empty line to empty string when multi-line selected\n        block.text = '';\n      } else if (options?.shift) {\n        const delSpaceCount = (spaceCount >= 4 && mod === 0) ? 4 : mod;\n        block.text = block.text.substring(delSpaceCount);\n        if (newStartOffset === undefined) {\n          if (block.key !== start) {\n            newStartOffset = 0;\n          } else if (startOffset > spaceCount) {\n            newStartOffset = startOffset - delSpaceCount;\n          } else {\n            newStartOffset = Math.min(startOffset, spaceCount - delSpaceCount);\n          }\n        }\n        newEndOffset = block.key === end ? endOffset - delSpaceCount : endOffset;\n      } else {\n        const newSpaceCount = 4 - mod;\n        const spaceStr = new Array(newSpaceCount).fill(' ').join('');\n        block.text = `${spaceStr}${block.text}`;\n        if (newStartOffset === undefined) {\n          if (block.key !== start) {\n            newStartOffset = 0;\n          } else if (!rangeSelected || startOffset > spaceCount) {\n            newStartOffset = startOffset + newSpaceCount;\n          } else {\n            newStartOffset = startOffset;\n          }\n        }\n        newEndOffset = block.key === end ? endOffset + newSpaceCount : endOffset;\n      }\n    }\n    if (block.key === end) {\n      started = false;\n      break;\n    }\n  }\n\n  const state = EditorState.push(editorState, convertFromRaw(rawData), 'insert-characters');\n  const isBackward = selection.getIsBackward();\n  setEditorState(EditorState.forceSelection(state, selection.merge({\n    anchorOffset: isBackward ? newEndOffset : newStartOffset,\n    focusOffset: isBackward ? newStartOffset : newEndOffset,\n  })));\n\n  return 'handled';\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}