{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/editable-text/components/tag/InsertionTag.jsx\";\n/* eslint-disable no-nested-ternary */\nimport React from 'react';\nimport hexToRgba from 'hex-to-rgba';\nimport { DEFAULT_ALPHA, HOVER_ALPHA, ACTIVE_ALPHA, REJECT_STYLE, FOCUS_TYPE, PASS_STYLE } from '../../data/constant';\nconst InsertionTag = props => {\n  const {\n    insertion,\n    isHover,\n    isClick,\n    reviewResult,\n    insertionMouseEvent\n  } = props;\n  let bgColor = hexToRgba(insertion.bgColor, DEFAULT_ALPHA);\n  if (isClick) {\n    bgColor = hexToRgba(insertion.bgColor, ACTIVE_ALPHA);\n  } else if (isHover) {\n    bgColor = hexToRgba(insertion.bgColor, HOVER_ALPHA);\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"insertion-wrapper\",\n    \"data-id\": insertion.id,\n    style: {\n      left: insertion.left,\n      top: insertion.top,\n      border: reviewResult === 'reject' ? REJECT_STYLE : reviewResult === 'pass' ? PASS_STYLE : null\n    },\n    onMouseEnter: e => insertionMouseEvent(e, insertion.id, FOCUS_TYPE.HOVER, true),\n    onMouseLeave: e => insertionMouseEvent(e, insertion.id, FOCUS_TYPE.HOVER, false),\n    onClick: e => insertionMouseEvent(e, insertion.id, FOCUS_TYPE.CLICK, true),\n    onContextMenu: e => insertionMouseEvent(e, insertion.id, FOCUS_TYPE.CLICK, false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"insertion-arrow\",\n    style: {\n      borderBottom: `5px solid ${bgColor}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"insertion-body\",\n    style: {\n      background: bgColor,\n      color: insertion.fontColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, insertion.text));\n};\nexport default InsertionTag;","map":{"version":3,"names":["React","hexToRgba","DEFAULT_ALPHA","HOVER_ALPHA","ACTIVE_ALPHA","REJECT_STYLE","FOCUS_TYPE","PASS_STYLE","InsertionTag","props","insertion","isHover","isClick","reviewResult","insertionMouseEvent","bgColor","createElement","className","id","style","left","top","border","onMouseEnter","e","HOVER","onMouseLeave","onClick","CLICK","onContextMenu","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","borderBottom","background","color","fontColor","text"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/editable-text/components/tag/InsertionTag.jsx"],"sourcesContent":["/* eslint-disable no-nested-ternary */\nimport React from 'react';\nimport hexToRgba from 'hex-to-rgba';\nimport { DEFAULT_ALPHA, HOVER_ALPHA, ACTIVE_ALPHA, REJECT_STYLE, FOCUS_TYPE, PASS_STYLE } from '../../data/constant';\n\nconst InsertionTag = (props) => {\n  const { insertion, isHover, isClick, reviewResult, insertionMouseEvent } = props;\n\n  let bgColor = hexToRgba(insertion.bgColor, DEFAULT_ALPHA);\n  if (isClick) {\n    bgColor = hexToRgba(insertion.bgColor, ACTIVE_ALPHA);\n  } else if (isHover) {\n    bgColor = hexToRgba(insertion.bgColor, HOVER_ALPHA);\n  }\n\n  return (\n    <div\n      className=\"insertion-wrapper\"\n      data-id={insertion.id}\n      style={{\n        left: insertion.left,\n        top: insertion.top,\n        border: reviewResult === 'reject' ? REJECT_STYLE : reviewResult === 'pass' ? PASS_STYLE : null,\n      }}\n      onMouseEnter={(e) => insertionMouseEvent(e, insertion.id, FOCUS_TYPE.HOVER, true)}\n      onMouseLeave={(e) => insertionMouseEvent(e, insertion.id, FOCUS_TYPE.HOVER, false)}\n      onClick={(e) => insertionMouseEvent(e, insertion.id, FOCUS_TYPE.CLICK, true)}\n      onContextMenu={(e) => insertionMouseEvent(e, insertion.id, FOCUS_TYPE.CLICK, false)}\n    >\n      <div className=\"insertion-arrow\" style={{ borderBottom: `5px solid ${bgColor}` }} />\n      <div\n        className=\"insertion-body\"\n        style={{ background: bgColor, color: insertion.fontColor }}\n      >\n        {insertion.text}\n      </div>\n    </div>\n  );\n};\nexport default InsertionTag;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,YAAY,EAAEC,UAAU,EAAEC,UAAU,QAAQ,qBAAqB;AAEpH,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAC9B,MAAM;IAAEC,SAAS;IAAEC,OAAO;IAAEC,OAAO;IAAEC,YAAY;IAAEC;EAAoB,CAAC,GAAGL,KAAK;EAEhF,IAAIM,OAAO,GAAGd,SAAS,CAACS,SAAS,CAACK,OAAO,EAAEb,aAAa,CAAC;EACzD,IAAIU,OAAO,EAAE;IACXG,OAAO,GAAGd,SAAS,CAACS,SAAS,CAACK,OAAO,EAAEX,YAAY,CAAC;EACtD,CAAC,MAAM,IAAIO,OAAO,EAAE;IAClBI,OAAO,GAAGd,SAAS,CAACS,SAAS,CAACK,OAAO,EAAEZ,WAAW,CAAC;EACrD;EAEA,oBACEH,KAAA,CAAAgB,aAAA;IACEC,SAAS,EAAC,mBAAmB;IAC7B,WAASP,SAAS,CAACQ,EAAG;IACtBC,KAAK,EAAE;MACLC,IAAI,EAAEV,SAAS,CAACU,IAAI;MACpBC,GAAG,EAAEX,SAAS,CAACW,GAAG;MAClBC,MAAM,EAAET,YAAY,KAAK,QAAQ,GAAGR,YAAY,GAAGQ,YAAY,KAAK,MAAM,GAAGN,UAAU,GAAG;IAC5F,CAAE;IACFgB,YAAY,EAAGC,CAAC,IAAKV,mBAAmB,CAACU,CAAC,EAAEd,SAAS,CAACQ,EAAE,EAAEZ,UAAU,CAACmB,KAAK,EAAE,IAAI,CAAE;IAClFC,YAAY,EAAGF,CAAC,IAAKV,mBAAmB,CAACU,CAAC,EAAEd,SAAS,CAACQ,EAAE,EAAEZ,UAAU,CAACmB,KAAK,EAAE,KAAK,CAAE;IACnFE,OAAO,EAAGH,CAAC,IAAKV,mBAAmB,CAACU,CAAC,EAAEd,SAAS,CAACQ,EAAE,EAAEZ,UAAU,CAACsB,KAAK,EAAE,IAAI,CAAE;IAC7EC,aAAa,EAAGL,CAAC,IAAKV,mBAAmB,CAACU,CAAC,EAAEd,SAAS,CAACQ,EAAE,EAAEZ,UAAU,CAACsB,KAAK,EAAE,KAAK,CAAE;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEpFnC,KAAA,CAAAgB,aAAA;IAAKC,SAAS,EAAC,iBAAiB;IAACE,KAAK,EAAE;MAAEiB,YAAY,EAAE,aAAarB,OAAO;IAAG,CAAE;IAAAe,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACpFnC,KAAA,CAAAgB,aAAA;IACEC,SAAS,EAAC,gBAAgB;IAC1BE,KAAK,EAAE;MAAEkB,UAAU,EAAEtB,OAAO;MAAEuB,KAAK,EAAE5B,SAAS,CAAC6B;IAAU,CAAE;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAE1DzB,SAAS,CAAC8B,IACR,CACF,CAAC;AAEV,CAAC;AACD,eAAehC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module"}