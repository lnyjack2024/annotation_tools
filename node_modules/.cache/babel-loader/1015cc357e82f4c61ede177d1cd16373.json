{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/excel/index.jsx\";\n/* eslint-disable no-undef */\nimport React from 'react';\nimport { Base64 } from 'js-base64';\nimport Spreadsheet from '@appen-china/spreadsheet';\nimport { saveAs } from 'file-saver';\nimport ExcelJS from 'exceljs';\nimport { notification, Spin } from 'antd';\nimport pako from 'pako';\nimport PaPa from 'papaparse';\nimport STATUS from './type';\nimport { isAnnotationReadonly, isPreview } from '../../utils/tool-mode';\nimport { stringToUint8Array, uint8ArrayToString, uint8ToString } from './utils';\nimport workbookToJson, { checkStyleValid } from './workbook2json';\nimport jsonToWorkbook from './json2Workbook';\nimport localMessage, { i18n, localizeSheet } from './locale';\nimport '@appen-china/spreadsheet/dist/index.css';\nimport './index.scss';\nnotification.config({\n  top: 60\n});\nexport default class ExcelAnnotationApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.sheet = null;\n    i18n.setLocale(props.locale);\n    this.state = {\n      status: STATUS.NONE\n    };\n  }\n  get excelLinkFile() {\n    return `${this.props.jobProxy.resultId}.excel.xlsx`;\n  }\n  get jsonLinkFile() {\n    return `${this.props.jobProxy.resultId}.excel.json`;\n  }\n  componentDidMount() {\n    // 根据浏览器语言设置显示语言\n    localizeSheet(Spreadsheet);\n    this.sheet = new Spreadsheet('#x-spreadsheet', {\n      view: {\n        height: () => document.documentElement.clientHeight,\n        width: () => document.documentElement.clientWidth\n      },\n      toolbar: {\n        allowSave: !(isAnnotationReadonly(this.props.jobProxy.toolMode) || isPreview(this.props.jobProxy.toolMode)),\n        allowExport: false,\n        allowPrint: false\n      },\n      lockEnable: !this.props.initial_value_editable\n    });\n    this.sheet.validate();\n    this.sheet.on('table-save', this.onSubmit.bind(this, true)).on('export', this.onExport.bind(this));\n    this.onLoad();\n  }\n  async onLoad() {\n    this.setState({\n      status: STATUS.LOAD\n    });\n    try {\n      await this.props.jobProxy.loadResult().then(async res => {\n        if (res) {\n          const payload = JSON.parse(JSON.stringify(res));\n          await fetch(payload.json).then(result => result.json()).then(async compressedData => {\n            // 若能找到之前保存的资源则载入保存的资源, data格式为json\n            const depress = pako.inflate(stringToUint8Array(compressedData.saveData));\n            const str = uint8ArrayToString(depress);\n            const data = JSON.parse(str);\n            await this.sheet.loadData(data);\n            notification.success({\n              message: localMessage('loadSuccess')\n            });\n          }).catch(e => {\n            notification.error({\n              message: localMessage('loadFail'),\n              description: !(e.message instanceof Object) && e.message || localMessage('retry')\n            });\n          });\n        } else {\n          // 若找不到则在payload的url中寻找\n          await this.loadPayload();\n        }\n      });\n    } catch (e) {\n      notification.error({\n        message: localMessage('ANNOTATION_DATA_LOAD_ERROR'),\n        duration: null\n      });\n      return;\n    }\n    this.setState({\n      status: STATUS.NONE\n    });\n  }\n  onSubmit(normalSave) {\n    let result;\n    if (!isAnnotationReadonly(this.props.jobProxy.toolMode)) {\n      result = this.onSave(!normalSave).catch(e => {\n        if (!normalSave) {\n          throw new Error(localMessage('saveFail'), e);\n        }\n      });\n    } else {\n      notification.warning({\n        message: localMessage('saveNotAllow')\n      });\n    }\n    return result;\n  }\n  async onSave(isSubmit) {\n    const uploadPromise = new Promise((resolve, reject) => {\n      this.setState({\n        status: STATUS.SAVE\n      }, () => {\n        setTimeout(async () => {\n          let excelLink;\n          let jsonLink;\n          let dataLink;\n          try {\n            const saveData = this.sheet.getData();\n            const workbook = jsonToWorkbook(saveData);\n            await workbook.xlsx.writeBuffer().then(async data => {\n              try {\n                excelLink = await this.props.saveContent({\n                  b64Content: window.btoa(uint8ToString(data)),\n                  type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8',\n                  filename: `${isSubmit ? `R.${new Date().getTime()}` : ''}${this.excelLinkFile}`,\n                  filePrefix: this.props.jobProxy.jobId,\n                  jobId: this.props.jobProxy.jobId,\n                  projectId: this.props.jobProxy.projectId,\n                  recordId: this.props.jobProxy.recordId,\n                  toolFileType: 'UNKNOWN',\n                  flowId: this.props.jobProxy.flowId\n                });\n              } catch (err) {\n                reject(err);\n              }\n            });\n            const compress = pako.gzip(JSON.stringify(saveData), {\n              to: 'String'\n            });\n            jsonLink = await this.props.saveContent({\n              b64Content: Base64.encode(JSON.stringify({\n                saveData: uint8ToString(compress)\n              })),\n              type: 'text/plain',\n              filename: `${isSubmit ? `R.${new Date().getTime()}` : ''}${this.jsonLinkFile}`,\n              filePrefix: this.props.jobProxy.jobId,\n              jobId: this.props.jobProxy.jobId,\n              projectId: this.props.jobProxy.projectId,\n              recordId: this.props.jobProxy.recordId,\n              toolFileType: 'UNKNOWN',\n              flowId: this.props.jobProxy.flowId\n            });\n            dataLink = this.props.jobProxy.saveResult({\n              excel: excelLink,\n              json: jsonLink\n            }, isSubmit);\n            this.setState({\n              status: STATUS.NONE\n            });\n            resolve(dataLink);\n          } catch (e) {\n            this.setState({\n              status: STATUS.NONE\n            });\n            reject(e);\n          }\n        }, 0);\n      });\n    });\n    let result;\n    await uploadPromise.then(res => {\n      result = res;\n      notification.success({\n        message: localMessage('saveSuccess')\n      });\n    }).catch(e => {\n      notification.error({\n        message: localMessage('saveFail'),\n        description: !(e.message instanceof Object) && e.message || localMessage('retry')\n      });\n      throw new Error(e);\n    });\n    return result;\n  }\n  async onExport() {\n    this.setState({\n      status: STATUS.EXPORT\n    });\n    try {\n      const workbook = jsonToWorkbook(this.sheet.getData());\n      await workbook.xlsx.writeBuffer().then(buff => {\n        const blob = new Blob([buff], {\n          type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8'\n        });\n        saveAs(blob, 'Excel.xlsx'); // 浏览器下载文件\n        notification.success({\n          message: localMessage('exportSuccess')\n        });\n      });\n    } catch (e) {\n      notification.error({\n        message: localMessage('exportFail'),\n        description: !(e.message instanceof Object) && e.message || localMessage('retry')\n      });\n    } finally {\n      this.setState({\n        status: STATUS.NONE\n      });\n    }\n  }\n  async loadPayload() {\n    let loadPromise;\n    let res = await fetch(this.props.excel);\n    res = res.blob();\n    await res.then(data => {\n      const reader = new FileReader();\n      loadPromise = new Promise((resolve, reject) => {\n        switch (data.type) {\n          case 'text/csv':\n            reader.onload = () => {\n              try {\n                PaPa.parse(reader.result, {\n                  complete: csv => {\n                    this.resolveCsv(csv.data);\n                    resolve(true);\n                  }\n                });\n              } catch (err) {\n                reject(err);\n              }\n            };\n            reader.readAsText(data);\n            break;\n          case 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet':\n            reader.onload = async () => {\n              try {\n                const result = new Uint8Array(reader.result);\n                const workbook = new ExcelJS.Workbook();\n                await workbook.xlsx.load(result);\n                if (!checkStyleValid(workbook)) notification.warning({\n                  message: localMessage('loadStyleWarning')\n                });\n                const json = workbookToJson(workbook);\n                this.sheet.loadData(json);\n                this.sheet.reRender();\n                resolve(true);\n              } catch (err) {\n                reject(err);\n              }\n            };\n            reader.readAsArrayBuffer(data);\n            break;\n          default:\n            throw new Error();\n        }\n      });\n    });\n    await loadPromise.then(() => {\n      notification.success({\n        message: localMessage('loadSuccess')\n      });\n    }).catch(err => {\n      notification.error({\n        message: localMessage('loadFail')\n      });\n      throw new Error(err);\n    });\n  }\n  resolveCsv(data) {\n    for (let i = 0; i < data.length; i += 1) {\n      const cols = data[i];\n      for (let j = 0; j < cols.length; j += 1) {\n        this.sheet.cellText(i, j, cols[j]);\n        this.sheet.cell(i, j).locked = true;\n      }\n    }\n    this.sheet.lockSheet(0);\n    this.sheet.reRender();\n  }\n  spinTip() {\n    switch (this.state.status) {\n      case STATUS.LOAD:\n        return `${localMessage('loading')}...`;\n      case STATUS.EXPORT:\n        return `${localMessage('exporting')}...`;\n      case STATUS.SAVE:\n        return `${localMessage('saving')}...`;\n      default:\n        return '';\n    }\n    ;\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"excel-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Spin, {\n      spinning: this.state.status !== STATUS.NONE,\n      delay: 0,\n      tip: this.spinTip(),\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"x-spreadsheet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }\n    })));\n  }\n}","map":{"version":3,"names":["React","Base64","Spreadsheet","saveAs","ExcelJS","notification","Spin","pako","PaPa","STATUS","isAnnotationReadonly","isPreview","stringToUint8Array","uint8ArrayToString","uint8ToString","workbookToJson","checkStyleValid","jsonToWorkbook","localMessage","i18n","localizeSheet","config","top","ExcelAnnotationApp","Component","constructor","props","sheet","setLocale","locale","state","status","NONE","excelLinkFile","jobProxy","resultId","jsonLinkFile","componentDidMount","view","height","document","documentElement","clientHeight","width","clientWidth","toolbar","allowSave","toolMode","allowExport","allowPrint","lockEnable","initial_value_editable","validate","on","onSubmit","bind","onExport","onLoad","setState","LOAD","loadResult","then","res","payload","JSON","parse","stringify","fetch","json","result","compressedData","depress","inflate","saveData","str","data","loadData","success","message","catch","e","error","description","Object","loadPayload","duration","normalSave","onSave","Error","warning","isSubmit","uploadPromise","Promise","resolve","reject","SAVE","setTimeout","excelLink","jsonLink","dataLink","getData","workbook","xlsx","writeBuffer","saveContent","b64Content","window","btoa","type","filename","Date","getTime","filePrefix","jobId","projectId","recordId","toolFileType","flowId","err","compress","gzip","to","encode","saveResult","excel","EXPORT","buff","blob","Blob","loadPromise","reader","FileReader","onload","complete","csv","resolveCsv","readAsText","Uint8Array","Workbook","load","reRender","readAsArrayBuffer","i","length","cols","j","cellText","cell","locked","lockSheet","spinTip","render","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","spinning","delay","tip","size","id"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/excel/index.jsx"],"sourcesContent":["/* eslint-disable no-undef */\nimport React from 'react';\nimport { Base64 } from 'js-base64';\nimport Spreadsheet from '@appen-china/spreadsheet';\nimport { saveAs } from 'file-saver';\nimport ExcelJS from 'exceljs';\nimport { notification, Spin } from 'antd';\nimport pako from 'pako';\nimport PaPa from 'papaparse';\nimport STATUS from './type';\nimport { isAnnotationReadonly, isPreview } from '../../utils/tool-mode';\nimport { stringToUint8Array, uint8ArrayToString, uint8ToString } from './utils';\nimport workbookToJson, { checkStyleValid } from './workbook2json';\nimport jsonToWorkbook from './json2Workbook';\nimport localMessage, { i18n, localizeSheet } from './locale';\nimport '@appen-china/spreadsheet/dist/index.css';\nimport './index.scss';\n\nnotification.config({ top: 60 });\n\nexport default class ExcelAnnotationApp extends React.Component {\n  sheet = null;\n\n  constructor(props) {\n    super(props);\n    i18n.setLocale(props.locale);\n    this.state = {\n      status: STATUS.NONE,\n    };\n  }\n\n  get excelLinkFile() {\n    return `${this.props.jobProxy.resultId}.excel.xlsx`;\n  }\n\n  get jsonLinkFile() {\n    return `${this.props.jobProxy.resultId}.excel.json`;\n  }\n\n  componentDidMount() {\n    // 根据浏览器语言设置显示语言\n    localizeSheet(Spreadsheet);\n    this.sheet = new Spreadsheet('#x-spreadsheet', {\n      view: {\n        height: () => document.documentElement.clientHeight,\n        width: () => document.documentElement.clientWidth,\n      },\n      toolbar: {\n        allowSave: !(isAnnotationReadonly(this.props.jobProxy.toolMode) || isPreview(this.props.jobProxy.toolMode)),\n        allowExport: false,\n        allowPrint: false,\n      },\n      lockEnable: !this.props.initial_value_editable,\n    });\n    this.sheet.validate();\n    this.sheet\n      .on('table-save', this.onSubmit.bind(this, true))\n      .on('export', this.onExport.bind(this));\n    this.onLoad();\n  }\n\n  async onLoad() {\n    this.setState({ status: STATUS.LOAD });\n    try {\n      await this.props.jobProxy.loadResult().then(async (res) => {\n        if (res) {\n          const payload = JSON.parse(JSON.stringify(res));\n          await fetch(payload.json)\n            .then((result) => result.json())\n            .then(async (compressedData) => { // 若能找到之前保存的资源则载入保存的资源, data格式为json\n              const depress = pako.inflate(stringToUint8Array(compressedData.saveData));\n              const str = uint8ArrayToString(depress);\n              const data = JSON.parse(str);\n              await this.sheet.loadData(data);\n              notification.success({ message: localMessage('loadSuccess') });\n            }).catch((e) => {\n              notification.error({ message: localMessage('loadFail'), description: (!(e.message instanceof Object) && e.message) || localMessage('retry') });\n            });\n        } else { // 若找不到则在payload的url中寻找\n          await this.loadPayload();\n        }\n      });\n    } catch (e) {\n      notification.error({ message: localMessage('ANNOTATION_DATA_LOAD_ERROR'), duration: null });\n      return;\n    }\n    this.setState({ status: STATUS.NONE });\n  }\n\n  onSubmit(normalSave) {\n    let result;\n    if (!isAnnotationReadonly(this.props.jobProxy.toolMode)) {\n      result = this.onSave(!normalSave).catch((e) => {\n        if (!normalSave) {\n          throw new Error(localMessage('saveFail'), e);\n        }\n      });\n    } else {\n      notification.warning({ message: localMessage('saveNotAllow') });\n    }\n    return result;\n  };\n\n  async onSave(isSubmit) {\n    const uploadPromise = new Promise((resolve, reject) => {\n      this.setState({ status: STATUS.SAVE }, () => {\n        setTimeout(async () => {\n          let excelLink;\n          let jsonLink;\n          let dataLink;\n          try {\n            const saveData = this.sheet.getData();\n            const workbook = jsonToWorkbook(saveData);\n            await workbook.xlsx.writeBuffer()\n              .then(async (data) => {\n                try {\n                  excelLink = await this.props.saveContent({\n                    b64Content: window.btoa(uint8ToString(data)),\n                    type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8',\n                    filename: `${isSubmit ? `R.${new Date().getTime()}` : ''}${this.excelLinkFile}`,\n                    filePrefix: this.props.jobProxy.jobId,\n                    jobId: this.props.jobProxy.jobId,\n                    projectId: this.props.jobProxy.projectId,\n                    recordId: this.props.jobProxy.recordId,\n                    toolFileType: 'UNKNOWN',\n                    flowId: this.props.jobProxy.flowId,\n                  });\n                } catch (err) {\n                  reject(err);\n                }\n              });\n            const compress = pako.gzip(JSON.stringify(saveData), { to: 'String' });\n            jsonLink = await this.props.saveContent({\n              b64Content: Base64.encode(JSON.stringify({ saveData: uint8ToString(compress) })),\n              type: 'text/plain',\n              filename: `${isSubmit ? `R.${new Date().getTime()}` : ''}${this.jsonLinkFile}`,\n              filePrefix: this.props.jobProxy.jobId,\n              jobId: this.props.jobProxy.jobId,\n              projectId: this.props.jobProxy.projectId,\n              recordId: this.props.jobProxy.recordId,\n              toolFileType: 'UNKNOWN',\n              flowId: this.props.jobProxy.flowId,\n            });\n\n            dataLink = this.props.jobProxy.saveResult({\n              excel: excelLink,\n              json: jsonLink,\n            }, isSubmit);\n            this.setState({ status: STATUS.NONE });\n            resolve(dataLink);\n          } catch (e) {\n            this.setState({ status: STATUS.NONE });\n            reject(e);\n          }\n        }, 0);\n      });\n    });\n    let result;\n    await uploadPromise.then((res) => {\n      result = res;\n      notification.success({ message: localMessage('saveSuccess') });\n    }).catch((e) => {\n      notification.error({ message: localMessage('saveFail'), description: (!(e.message instanceof Object) && e.message) || localMessage('retry') });\n      throw new Error(e);\n    });\n    return result;\n  }\n\n  async onExport() {\n    this.setState({ status: STATUS.EXPORT });\n    try {\n      const workbook = jsonToWorkbook(this.sheet.getData());\n      await workbook.xlsx.writeBuffer()\n        .then((buff) => {\n          const blob = new Blob([buff], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8' });\n          saveAs(blob, 'Excel.xlsx'); // 浏览器下载文件\n          notification.success({ message: localMessage('exportSuccess') });\n        });\n    } catch (e) {\n      notification.error({ message: localMessage('exportFail'), description: (!(e.message instanceof Object) && e.message) || localMessage('retry') });\n    } finally {\n      this.setState({ status: STATUS.NONE });\n    }\n  }\n\n  async loadPayload() {\n    let loadPromise;\n    let res = await fetch(this.props.excel);\n    res = res.blob();\n    await res.then((data) => {\n      const reader = new FileReader();\n      loadPromise = new Promise((resolve, reject) => {\n        switch (data.type) {\n          case 'text/csv':\n            reader.onload = () => {\n              try {\n                PaPa.parse(reader.result, {\n                  complete: (csv) => {\n                    this.resolveCsv(csv.data);\n                    resolve(true);\n                  }\n                });\n              } catch (err) {\n                reject(err);\n              }\n            };\n            reader.readAsText(data);\n            break;\n          case 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet':\n            reader.onload = async () => {\n              try {\n                const result = new Uint8Array(reader.result);\n                const workbook = new ExcelJS.Workbook();\n                await workbook.xlsx.load(result);\n                if (!checkStyleValid(workbook)) notification.warning({ message: localMessage('loadStyleWarning') });\n                const json = workbookToJson(workbook);\n                this.sheet.loadData(json);\n                this.sheet.reRender();\n                resolve(true);\n              } catch (err) {\n                reject(err);\n              }\n            };\n            reader.readAsArrayBuffer(data);\n            break;\n          default:\n            throw new Error();\n        }\n      });\n    });\n    await loadPromise.then(() => {\n      notification.success({ message: localMessage('loadSuccess') });\n    }).catch((err) => {\n      notification.error({ message: localMessage('loadFail') });\n      throw new Error(err);\n    });\n  }\n\n  resolveCsv(data) {\n    for (let i = 0; i < data.length; i += 1) {\n      const cols = data[i];\n      for (let j = 0; j < cols.length; j += 1) {\n        this.sheet.cellText(i, j, cols[j]);\n        this.sheet.cell(i, j).locked = true;\n      }\n    }\n    this.sheet.lockSheet(0);\n    this.sheet.reRender();\n  }\n\n  spinTip() {\n    switch (this.state.status) {\n      case STATUS.LOAD: return `${localMessage('loading')}...`;\n      case STATUS.EXPORT: return `${localMessage('exporting')}...`;\n      case STATUS.SAVE: return `${localMessage('saving')}...`;\n      default: return '';\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"excel-container\">\n        <Spin\n          spinning={this.state.status !== STATUS.NONE}\n          delay={0}\n          tip={this.spinTip()}\n          size=\"large\"\n        >\n          <div id=\"x-spreadsheet\" />\n        </Spin>\n      </div>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}