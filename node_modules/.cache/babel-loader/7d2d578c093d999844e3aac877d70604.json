{"ast":null,"code":"import{Point}from'pixi.js';import Flatten from'@flatten-js/core';import Shape from'./Shape';import{ShapeType}from'./types';import ControlPoint from'./controls/ControlPoint';import ControlBar from'./controls/ControlBar';import ControlRotation from'./controls/ControlRotation';import{precise}from'./utils';import Cursor from'../Cursor';import{computeRotatedPosition}from'../../../utils/math';/**\n * Rectangle shape\n * @class\n */export default class Rectangle extends Shape{/**\n   * get x\n   * @getter\n   */get x(){return this._x||0;}/**\n   * set x\n   * @setter\n   */set x(x){this._x=x;this.normalize();}/**\n   * get y\n   * @getter\n   */get y(){return this._y||0;}/**\n   * set y\n   * @setter\n   */set y(y){this._y=y;this.normalize();}/**\n   * get width\n   * @getter\n   */get width(){return this._width||0;}/**\n   * set width\n   * @setter\n   */set width(width){this._width=width;this.normalize();}/**\n   * get height\n   * @getter\n   */get height(){return this._height||0;}/**\n   * set height\n   * @setter\n   */set height(height){this._height=height;this.normalize();}/**\n   * get position\n   * @getter\n   */get position(){return new Point(this.x,this.y);}/**\n   * set position\n   * @setter\n   */set position(point){if(this.x!==point.x||this.y!==point.y){this._x=precise(point.x);this._y=precise(point.y);this.drawShape();}}/**\n   * get pivot\n   * @getter\n   */get pivot(){return new Point(this.x+this.width/2,this.y+this.height/2);}/**\n   * set pivot\n   * @setter\n   */set pivot(point){const{x:px,y:py}=this.pivot;const shouldUpdate=point.x!==px||point.y!==py;this._x=point.x-this.width/2;this._y=point.y-this.height/2;if(shouldUpdate){this.drawShape();}}/**\n   * shape bounds\n   * @getter\n   */get shapeBounds(){const rotatedPoints=this.getRotatedPoints();const left=Math.min(...rotatedPoints.map(p=>p.x));const right=Math.max(...rotatedPoints.map(p=>p.x));const top=Math.min(...rotatedPoints.map(p=>p.y));const bottom=Math.max(...rotatedPoints.map(p=>p.y));return{left,top,right,bottom};}/**\n   * shape area\n   * @getter\n   */get area(){return this.width*this.height;}constructor(options){super(options);this.shapeType=ShapeType.RECTANGLE;/**\n   * LT vertex position x\n   * @private\n   */this._x=void 0;/**\n   * LT vertex position y\n   * @private\n   */this._y=void 0;/**\n   * rectangle width\n   * @private\n   */this._width=void 0;/**\n   * rectangle height\n   * @private\n   */this._height=void 0;/**\n   * mouse move when creating\n   */this.mouseMove=event=>{const point=this._mapScreenToStagePosition(event.clientX,event.clientY);const localPoint=this._mapStageToLocalPosition(point);this._draw(localPoint);};/**\n   * mouse up when creating\n   */this.mouseUp=()=>{this.normalize();this._finish();document.removeEventListener('mousemove',this.mouseMove,false);document.removeEventListener('mouseup',this.mouseUp,false);};const{x,y,width,height}=options;if(x!==undefined&&y!==undefined&&width!==undefined&&height!==undefined){this._x=x;this._y=y;this._width=width;this._height=height;this.normalize();}}/**\n   * draw shape\n   */drawShape(){this.instance.clear();this._controlLine.clear();this._drawShapeFill();this._drawShapeLine();if(this._finished){this.drawShapeLabel();this.attachControlPoints();}}/**\n   * draw shape fill\n   */_drawShapeFill(){this.instance.beginFill(this.color,this.alpha);this.instance.drawRect(this.x,this.y,this.width,this.height);this.instance.endFill();}/**\n   * draw shape border\n   */_drawShapeLine(){const ctx=this.selected?this._controlLine:this.instance;const baseWidth=1/this.scale;const color=this.displayBorderColor;ctx.moveTo(this.x,this.y);ctx.lineStyle(baseWidth,color);ctx.drawLine(this.x+this.width,this.y,this.borderStyle,this.scale);ctx.lineStyle(baseWidth,color);ctx.drawLine(this.x+this.width,this.y+this.height,this.borderStyle,this.scale);ctx.lineStyle(baseWidth,color);ctx.drawLine(this.x,this.y+this.height,this.borderStyle,this.scale);ctx.lineStyle(baseWidth,color);ctx.drawLine(this.x,this.y,this.borderStyle,this.scale);}/**\n   * drag to create\n   */create(){this._finished=false;document.addEventListener('mousemove',this.mouseMove,false);document.addEventListener('mouseup',this.mouseUp,false);}/**\n   * get label position\n   */getLabelPosition(){return this.position;}/**\n   * get shape data\n   */getData(){return{x:this.x,y:this.y,width:this.width,height:this.height,rotation:this.rotation,points:this.getRotatedPoints()};}/**\n   * get geo json\n   */getAreaAsGeoJSON(){const rotatedPoints=this.getRotatedPoints();return[[rotatedPoints.map(p=>[p.x,p.y])]];}/**\n   * attach control points\n   */attachControlPoints(){if(!this.editable){this.removeControls();return;}if(this.selected){const points=this.getPoints();const edgePoints=points.map((point,index)=>{const nextPoint=points[index+1<4?index+1:0];return{x:(point.x+nextPoint.x)/2,y:(point.y+nextPoint.y)/2};});edgePoints.forEach((point,index)=>{const i=index+4;const size=index%2===0?this.width:this.height;if(!this._controls[i]){this._controls[i]=new ControlBar({type:index%2===0?'horizonal':'vertical',size,position:point,container:this.controlsContainer,scale:this.scale,color:this.selectedColor,cursor:this.getCursor(i),onPositionChange:(x,y)=>this._updateByBarPosition(index,x,y),onFinish:()=>this._finishResize()});}else{this._controls[i].cursor=this.getCursor(i);this._controls[i].position=point;this._controls[i].size=size;}this._controls[i].add();});points.forEach((point,index)=>{// create if never created before\nif(!this._controls[index]){this._controls[index]=new ControlPoint({position:point,container:this.controlsContainer,scale:this.scale,color:this.selectedColor,cursor:this.getCursor(index),onPositionChange:(x,y)=>this._updateByPointPosition(index,x,y),onFinish:()=>this._finishResize()});}else{// update\nthis._controls[index].cursor=this.getCursor(index);this._controls[index].position=point;}this._controls[index].add();});if(this.rotatable){const size=this.pivot.y-Math.abs(this.height)/2-50/this.scale;if(!this._rotateControl){this._rotateControl=new ControlRotation({container:this.container,position:this.pivot,size,rotation:this.shapeContainer.rotation,scale:this.scale,color:this.selectedColor,onRotationChange:angle=>{if(this.rotation!==undefined){this.rotation+=angle;if(this.rotation>=Math.PI){this.rotation-=2*Math.PI;}if(this.rotation<=-Math.PI){this.rotation+=2*Math.PI;}}},onFinish:()=>{this._changed();}});}this._rotateControl.rotation=this.shapeContainer.rotation;this._rotateControl.position=this.pivot;this._rotateControl.size=size;this._rotateControl.add();}}else{this.removeControls();}}/**\n   * update rectangle x, y, width, height by dragging point\n   * @private\n   * @param index point index\n   * @param x new position x\n   * @param y new position y\n   * @param event\n   */_updateByPointPosition(index,x,y){const position=new Point(x,y);const points=this.getPoints();const offsetX=position.x-points[index].x;const offsetY=position.y-points[index].y;if(this._x!==undefined&&this._y!==undefined&&this._width!==undefined&&this._height!==undefined){switch(index){case 0:this._x=position.x;this._y=position.y;this._width-=offsetX;this._height-=offsetY;break;case 1:this._y+=position.y-this._y;this._width+=offsetX;this._height-=offsetY;break;case 2:this._width+=offsetX;this._height+=offsetY;break;case 3:this._x+=position.x-this._x;this._width-=offsetX;this._height+=offsetY;break;default:}this.drawShape();this._updatePosition(true);this._resizing();}}/**\n   * update rectangle x, y, width, height by dragging edge\n   * @param index edge index, top -> right -> bottom -> left\n   * @param x new position x\n   * @param y new position y\n   * @param event\n   */_updateByBarPosition(index,x,y){const position=new Point(x,y);if(this._x!==undefined&&this._y!==undefined&&this._width!==undefined&&this._height!==undefined){const offsetX=position.x-this._x;const offsetY=position.y-this._y;switch(index){case 0:this._y=position.y;this._height-=offsetY;break;case 1:this._width=offsetX;break;case 2:this._height=offsetY;break;case 3:this._x=position.x;this._width-=offsetX;break;default:}this.drawShape();this._updatePosition(true);this._resizing();}}/**\n   * when finish resize\n   */_finishResize(){this.resizing=false;this.normalize();this._changed();}/**\n   * draw shape by the position\n   * @private\n   * @param point mouse position\n   */_draw(point){const p=point;if(this._x===undefined||this._y===undefined){this._x=p.x;this._y=p.y;}else{this._width=p.x-this._x;this._height=p.y-this._y;}this.drawShape();}/**\n   * normalize rectangle shape, remove it if necessary\n   */normalize(){if(this._x===undefined||this._y===undefined||!this._width||!this._height){this._remove();return;}if(this._width<0){this._x+=this._width;this._width=Math.abs(this._width);}if(this._height<0){this._y+=this._height;this._height=Math.abs(this._height);}this._x=precise(this._x);this._y=precise(this._y);this._width=precise(this._width);this._height=precise(this._height);this.drawShape();}/**\n   * get control cursor\n   * @returns corsor\n   */getCursor(index){const rotateMultiple=Math.round(this.rotation/(Math.PI/4));let cursor=Cursor.DEFAULT;switch(rotateMultiple){case 0:case 4:case-4:if(index<4){cursor=index%2===0?Cursor.NWSE_RESIZE:Cursor.NESW_RESIZE;}else{cursor=index%2===0?Cursor.NS_RESIZE:Cursor.EW_RESIZE;}break;case 2:case-2:if(index<4){cursor=index%2===0?Cursor.NESW_RESIZE:Cursor.NWSE_RESIZE;}else{cursor=index%2===0?Cursor.EW_RESIZE:Cursor.NS_RESIZE;}break;case 1:case-3:if(index<4){cursor=index%2===0?Cursor.NS_RESIZE:Cursor.EW_RESIZE;}else{cursor=index%2===0?Cursor.NESW_RESIZE:Cursor.NWSE_RESIZE;}break;case-1:case 3:if(index<4){cursor=index%2===0?Cursor.EW_RESIZE:Cursor.NS_RESIZE;}else{cursor=index%2===0?Cursor.NWSE_RESIZE:Cursor.NESW_RESIZE;}break;default:break;}return cursor;}/**\n   * get 4 points based on the position and size\n   */getPoints(){const right=precise(this.x+this.width);const bottom=precise(this.y+this.height);return[{x:this.x,y:this.y},{x:right,y:this.y},{x:right,y:bottom},{x:this.x,y:bottom}];}/**\n   * get actual 4 points position\n   */getRotatedPoints(){const points=this.getPoints();if(this.rotation!==0){points.forEach(p=>{const point=computeRotatedPosition(this.pivot,p,this.rotation);p.x=precise(point.x);p.y=precise(point.y);});}return points;}/**\n   * snap to point\n   * @param point\n   * @param tolerance\n   */snapToPoint(point){let tolerance=arguments.length>1&&arguments[1]!==undefined?arguments[1]:8;const t=tolerance/this.scale;// bbox\nconst{x,y}=point;const{left,right,top,bottom}=this.shapeBounds;if(x<left-t||x>right+t||y<top-t||y>bottom+t){return null;}const points=this.getRotatedPoints();// points\nlet nearestPoint;let d;points.forEach(p=>{const pointDistance=Math.sqrt((p.x-x)**2+(p.y-y)**2);if(pointDistance<t&&(d===undefined||pointDistance<d)){d=pointDistance;nearestPoint=p;}});if(nearestPoint){return new Point(nearestPoint.x,nearestPoint.y);}// edges\nconst location=new Flatten.Point(x,y);for(let i=0;i<points.length;i+=1){const startPoint=new Flatten.Point(points[i].x,points[i].y);const endPoint=new Flatten.Point(points[(i+1)%4].x,points[(i+1)%4].y);const line=new Flatten.Segment(startPoint,endPoint);const[distance,segment]=line.distanceTo(location);if(distance<t){const{ps,pe}=segment;const edgePoint=ps.equalTo(location)?pe:ps;return new Point(edgePoint.x,edgePoint.y);}}return null;}/**\n   * shape destroy\n   */destroy(){document.removeEventListener('mousemove',this.mouseMove,false);document.removeEventListener('mouseup',this.mouseUp,false);// call parent\nsuper.destroy();}}","map":{"version":3,"names":["Point","Flatten","Shape","ShapeType","ControlPoint","ControlBar","ControlRotation","precise","Cursor","computeRotatedPosition","Rectangle","x","_x","normalize","y","_y","width","_width","height","_height","position","point","drawShape","pivot","px","py","shouldUpdate","shapeBounds","rotatedPoints","getRotatedPoints","left","Math","min","map","p","right","max","top","bottom","area","constructor","options","shapeType","RECTANGLE","mouseMove","event","_mapScreenToStagePosition","clientX","clientY","localPoint","_mapStageToLocalPosition","_draw","mouseUp","_finish","document","removeEventListener","undefined","instance","clear","_controlLine","_drawShapeFill","_drawShapeLine","_finished","drawShapeLabel","attachControlPoints","beginFill","color","alpha","drawRect","endFill","ctx","selected","baseWidth","scale","displayBorderColor","moveTo","lineStyle","drawLine","borderStyle","create","addEventListener","getLabelPosition","getData","rotation","points","getAreaAsGeoJSON","editable","removeControls","getPoints","edgePoints","index","nextPoint","forEach","i","size","_controls","type","container","controlsContainer","selectedColor","cursor","getCursor","onPositionChange","_updateByBarPosition","onFinish","_finishResize","add","_updateByPointPosition","rotatable","abs","_rotateControl","shapeContainer","onRotationChange","angle","PI","_changed","offsetX","offsetY","_updatePosition","_resizing","resizing","_remove","rotateMultiple","round","DEFAULT","NWSE_RESIZE","NESW_RESIZE","NS_RESIZE","EW_RESIZE","snapToPoint","tolerance","arguments","length","t","nearestPoint","d","pointDistance","sqrt","location","startPoint","endPoint","line","Segment","distance","segment","distanceTo","ps","pe","edgePoint","equalTo","destroy"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/common/shapes/Rectangle.ts"],"sourcesContent":["import { Point } from 'pixi.js';\nimport Flatten from '@flatten-js/core';\nimport Shape, { ShapeOptions } from './Shape';\nimport { ShapeType } from './types';\nimport ControlPoint from './controls/ControlPoint';\nimport ControlBar from './controls/ControlBar';\nimport ControlRotation from './controls/ControlRotation';\nimport { precise } from './utils';\nimport Cursor from '../Cursor';\nimport { computeRotatedPosition } from '../../../utils/math';\n\nexport interface RectangleData {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  points: {x: number, y: number}[];\n  rotation?: number;\n}\n\nexport interface RectangleOptions extends ShapeOptions {\n  x?: number;\n  y?: number;\n  width?: number;\n  height?: number;\n}\n\n/**\n * Rectangle shape\n * @class\n */\nexport default class Rectangle extends Shape<RectangleData> {\n  shapeType = ShapeType.RECTANGLE;\n\n  /**\n   * LT vertex position x\n   * @private\n   */\n  private _x: number | undefined;\n\n  /**\n   * LT vertex position y\n   * @private\n   */\n  private _y: number | undefined;\n\n  /**\n   * rectangle width\n   * @private\n   */\n  private _width: number | undefined;\n\n  /**\n   * rectangle height\n   * @private\n   */\n  private _height: number | undefined;\n\n  /**\n   * get x\n   * @getter\n   */\n  get x() {\n    return this._x || 0;\n  }\n\n  /**\n   * set x\n   * @setter\n   */\n  set x(x: number) {\n    this._x = x;\n    this.normalize();\n  }\n\n  /**\n   * get y\n   * @getter\n   */\n  get y() {\n    return this._y || 0;\n  }\n\n  /**\n   * set y\n   * @setter\n   */\n  set y(y: number) {\n    this._y = y;\n    this.normalize();\n  }\n\n  /**\n   * get width\n   * @getter\n   */\n  get width() {\n    return this._width || 0;\n  }\n\n  /**\n   * set width\n   * @setter\n   */\n  set width(width: number) {\n    this._width = width;\n    this.normalize();\n  }\n\n  /**\n   * get height\n   * @getter\n   */\n  get height() {\n    return this._height || 0;\n  }\n\n  /**\n   * set height\n   * @setter\n   */\n  set height(height: number) {\n    this._height = height;\n    this.normalize();\n  }\n\n  /**\n   * get position\n   * @getter\n   */\n  get position() {\n    return new Point(this.x, this.y);\n  }\n\n  /**\n   * set position\n   * @setter\n   */\n  set position(point: Point) {\n    if (this.x !== point.x || this.y !== point.y) {\n      this._x = precise(point.x);\n      this._y = precise(point.y);\n      this.drawShape();\n    }\n  }\n\n  /**\n   * get pivot\n   * @getter\n   */\n  get pivot() {\n    return new Point(this.x + this.width / 2, this.y + this.height / 2);\n  }\n\n  /**\n   * set pivot\n   * @setter\n   */\n  set pivot(point: Point) {\n    const { x: px, y: py } = this.pivot;\n    const shouldUpdate = point.x !== px || point.y !== py;\n    this._x = point.x - this.width / 2;\n    this._y = point.y - this.height / 2;\n    if (shouldUpdate) {\n      this.drawShape();\n    }\n  }\n\n  /**\n   * shape bounds\n   * @getter\n   */\n  get shapeBounds() {\n    const rotatedPoints = this.getRotatedPoints();\n    const left = Math.min(...rotatedPoints.map((p) => p.x));\n    const right = Math.max(...rotatedPoints.map((p) => p.x));\n    const top = Math.min(...rotatedPoints.map((p) => p.y));\n    const bottom = Math.max(...rotatedPoints.map((p) => p.y));\n    return { left, top, right, bottom };\n  }\n\n  /**\n   * shape area\n   * @getter\n   */\n  get area() {\n    return this.width * this.height;\n  }\n\n  constructor(options: RectangleOptions) {\n    super(options);\n\n    const { x, y, width, height } = options;\n\n    if (x !== undefined && y !== undefined && width !== undefined && height !== undefined) {\n      this._x = x;\n      this._y = y;\n      this._width = width;\n      this._height = height;\n      this.normalize();\n    }\n  }\n\n  /**\n   * draw shape\n   */\n  drawShape() {\n    this.instance.clear();\n    this._controlLine.clear();\n    this._drawShapeFill();\n    this._drawShapeLine();\n    if (this._finished) {\n      this.drawShapeLabel();\n      this.attachControlPoints();\n    }\n  }\n\n  /**\n   * draw shape fill\n   */\n  private _drawShapeFill() {\n    this.instance.beginFill(this.color, this.alpha);\n    this.instance.drawRect(this.x, this.y, this.width, this.height);\n    this.instance.endFill();\n  }\n\n  /**\n   * draw shape border\n   */\n  private _drawShapeLine() {\n    const ctx = this.selected ? this._controlLine : this.instance;\n    const baseWidth = 1 / this.scale;\n    const color = this.displayBorderColor;\n    ctx.moveTo(this.x, this.y);\n    ctx.lineStyle(baseWidth, color);\n    ctx.drawLine(this.x + this.width, this.y, this.borderStyle, this.scale);\n    ctx.lineStyle(baseWidth, color);\n    ctx.drawLine(this.x + this.width, this.y + this.height, this.borderStyle, this.scale);\n    ctx.lineStyle(baseWidth, color);\n    ctx.drawLine(this.x, this.y + this.height, this.borderStyle, this.scale);\n    ctx.lineStyle(baseWidth, color);\n    ctx.drawLine(this.x, this.y, this.borderStyle, this.scale);\n  }\n\n  /**\n   * drag to create\n   */\n  create() {\n    this._finished = false;\n    document.addEventListener('mousemove', this.mouseMove, false);\n    document.addEventListener('mouseup', this.mouseUp, false);\n  }\n\n  /**\n   * mouse move when creating\n   */\n  mouseMove = (event: MouseEvent) => {\n    const point = this._mapScreenToStagePosition(event.clientX, event.clientY);\n    const localPoint = this._mapStageToLocalPosition(point);\n    this._draw(localPoint);\n  };\n\n  /**\n   * mouse up when creating\n   */\n  mouseUp = () => {\n    this.normalize();\n    this._finish();\n    document.removeEventListener('mousemove', this.mouseMove, false);\n    document.removeEventListener('mouseup', this.mouseUp, false);\n  };\n\n  /**\n   * get label position\n   */\n  getLabelPosition() {\n    return this.position;\n  }\n\n  /**\n   * get shape data\n   */\n  getData() {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height,\n      rotation: this.rotation,\n      points: this.getRotatedPoints(),\n    };\n  }\n\n  /**\n   * get geo json\n   */\n  getAreaAsGeoJSON() {\n    const rotatedPoints = this.getRotatedPoints();\n    return [[rotatedPoints.map((p) => [p.x, p.y] as [number, number])]];\n  }\n\n  /**\n   * attach control points\n   */\n  attachControlPoints() {\n    if (!this.editable) {\n      this.removeControls();\n      return;\n    }\n\n    if (this.selected) {\n      const points = this.getPoints();\n      const edgePoints = points.map((point, index) => {\n        const nextPoint = points[index + 1 < 4 ? index + 1 : 0];\n        return {\n          x: (point.x + nextPoint.x) / 2,\n          y: (point.y + nextPoint.y) / 2,\n        };\n      });\n\n      edgePoints.forEach((point, index) => {\n        const i = index + 4;\n        const size = index % 2 === 0 ? this.width : this.height;\n        if (!this._controls[i]) {\n          this._controls[i] = new ControlBar({\n            type: index % 2 === 0 ? 'horizonal' : 'vertical',\n            size,\n            position: point,\n            container: this.controlsContainer,\n            scale: this.scale,\n            color: this.selectedColor,\n            cursor: this.getCursor(i),\n            onPositionChange: (x, y) => this._updateByBarPosition(index, x, y),\n            onFinish: () => this._finishResize(),\n          });\n        } else {\n          this._controls[i].cursor = this.getCursor(i);\n          this._controls[i].position = point;\n          this._controls[i].size = size;\n        }\n        this._controls[i].add();\n      });\n\n      points.forEach((point, index) => {\n        // create if never created before\n        if (!this._controls[index]) {\n          this._controls[index] = new ControlPoint({\n            position: point,\n            container: this.controlsContainer,\n            scale: this.scale,\n            color: this.selectedColor,\n            cursor: this.getCursor(index),\n            onPositionChange: (x, y) => this._updateByPointPosition(index, x, y),\n            onFinish: () => this._finishResize(),\n          });\n        } else {\n          // update\n          this._controls[index].cursor = this.getCursor(index);\n          this._controls[index].position = point;\n        }\n        this._controls[index].add();\n      });\n\n      if (this.rotatable) {\n        const size = this.pivot.y - Math.abs(this.height) / 2 - 50 / this.scale;\n        if (!this._rotateControl) {\n          this._rotateControl = new ControlRotation({\n            container: this.container,\n            position: this.pivot,\n            size,\n            rotation: this.shapeContainer.rotation,\n            scale: this.scale,\n            color: this.selectedColor,\n            onRotationChange: (angle) => {\n              if (this.rotation !== undefined) {\n                this.rotation += angle;\n                if (this.rotation >= Math.PI) {\n                  this.rotation -= 2 * Math.PI;\n                }\n                if (this.rotation <= -Math.PI) {\n                  this.rotation += 2 * Math.PI;\n                }\n              }\n            },\n            onFinish: () => {\n              this._changed();\n            }\n          });\n        }\n        this._rotateControl.rotation = this.shapeContainer.rotation;\n        this._rotateControl.position = this.pivot;\n        this._rotateControl.size = size;\n        this._rotateControl.add();\n      }\n    } else {\n      this.removeControls();\n    }\n  }\n\n  /**\n   * update rectangle x, y, width, height by dragging point\n   * @private\n   * @param index point index\n   * @param x new position x\n   * @param y new position y\n   * @param event\n   */\n  private _updateByPointPosition(index: number, x: number, y: number) {\n    const position = new Point(x, y);\n    const points = this.getPoints();\n    const offsetX = position.x - points[index].x;\n    const offsetY = position.y - points[index].y;\n    if (this._x !== undefined && this._y !== undefined && this._width !== undefined && this._height !== undefined) {\n      switch (index) {\n        case 0:\n          this._x = position.x;\n          this._y = position.y;\n          this._width -= offsetX;\n          this._height -= offsetY;\n          break;\n        case 1:\n          this._y += position.y - this._y;\n          this._width += offsetX;\n          this._height -= offsetY;\n          break;\n        case 2:\n          this._width += offsetX;\n          this._height += offsetY;\n          break;\n        case 3:\n          this._x += position.x - this._x;\n          this._width -= offsetX;\n          this._height += offsetY;\n          break;\n        default:\n      }\n      this.drawShape();\n      this._updatePosition(true);\n      this._resizing();\n    }\n  }\n\n  /**\n   * update rectangle x, y, width, height by dragging edge\n   * @param index edge index, top -> right -> bottom -> left\n   * @param x new position x\n   * @param y new position y\n   * @param event\n   */\n  private _updateByBarPosition(index: number, x: number, y: number) {\n    const position = new Point(x, y);\n    if (this._x !== undefined && this._y !== undefined && this._width !== undefined && this._height !== undefined) {\n      const offsetX = position.x - this._x;\n      const offsetY = position.y - this._y;\n      switch (index) {\n        case 0:\n          this._y = position.y;\n          this._height -= offsetY;\n          break;\n        case 1:\n          this._width = offsetX;\n          break;\n        case 2:\n          this._height = offsetY;\n          break;\n        case 3:\n          this._x = position.x;\n          this._width -= offsetX;\n          break;\n        default:\n      }\n      this.drawShape();\n      this._updatePosition(true);\n      this._resizing();\n    }\n  }\n\n  /**\n   * when finish resize\n   */\n  private _finishResize() {\n    this.resizing = false;\n    this.normalize();\n    this._changed();\n  }\n\n  /**\n   * draw shape by the position\n   * @private\n   * @param point mouse position\n   */\n  private _draw(point: Point) {\n    const p = point;\n    if (this._x === undefined || this._y === undefined) {\n      this._x = p.x;\n      this._y = p.y;\n    } else {\n      this._width = p.x - this._x;\n      this._height = p.y - this._y;\n    }\n    this.drawShape();\n  }\n\n  /**\n   * normalize rectangle shape, remove it if necessary\n   */\n  normalize() {\n    if (this._x === undefined || this._y === undefined || !this._width || !this._height) {\n      this._remove();\n      return;\n    }\n\n    if (this._width < 0) {\n      this._x += this._width;\n      this._width = Math.abs(this._width);\n    }\n    if (this._height < 0) {\n      this._y += this._height;\n      this._height = Math.abs(this._height);\n    }\n    this._x = precise(this._x);\n    this._y = precise(this._y);\n    this._width = precise(this._width);\n    this._height = precise(this._height);\n\n    this.drawShape();\n  }\n\n  /**\n   * get control cursor\n   * @returns corsor\n   */\n  getCursor(index: number):Cursor {\n    const rotateMultiple = Math.round(this.rotation / (Math.PI / 4));\n    let cursor = Cursor.DEFAULT;\n    switch (rotateMultiple) {\n      case 0:\n      case 4:\n      case -4:\n        if (index < 4) {\n          cursor = index % 2 === 0 ? Cursor.NWSE_RESIZE : Cursor.NESW_RESIZE;\n        } else {\n          cursor = index % 2 === 0 ? Cursor.NS_RESIZE : Cursor.EW_RESIZE;\n        }\n        break;\n      case 2:\n      case -2:\n        if (index < 4) {\n          cursor = index % 2 === 0 ? Cursor.NESW_RESIZE : Cursor.NWSE_RESIZE;\n        } else {\n          cursor = index % 2 === 0 ? Cursor.EW_RESIZE : Cursor.NS_RESIZE;\n        }\n        break;\n      case 1:\n      case -3:\n        if (index < 4) {\n          cursor = index % 2 === 0 ? Cursor.NS_RESIZE : Cursor.EW_RESIZE;\n        } else {\n          cursor = index % 2 === 0 ? Cursor.NESW_RESIZE : Cursor.NWSE_RESIZE;\n        }\n        break;\n      case -1:\n      case 3:\n        if (index < 4) {\n          cursor = index % 2 === 0 ? Cursor.EW_RESIZE : Cursor.NS_RESIZE;\n        } else {\n          cursor = index % 2 === 0 ? Cursor.NWSE_RESIZE : Cursor.NESW_RESIZE;\n        }\n        break;\n      default:\n        break;\n    }\n    return cursor;\n  }\n\n  /**\n   * get 4 points based on the position and size\n   */\n  getPoints() {\n    const right = precise(this.x + this.width);\n    const bottom = precise(this.y + this.height);\n    return [\n      { x: this.x, y: this.y },\n      { x: right, y: this.y },\n      { x: right, y: bottom },\n      { x: this.x, y: bottom },\n    ];\n  }\n\n  /**\n   * get actual 4 points position\n   */\n  getRotatedPoints() {\n    const points = this.getPoints();\n    if (this.rotation !== 0) {\n      points.forEach((p) => {\n        const point = computeRotatedPosition(this.pivot, p, this.rotation);\n        p.x = precise(point.x);\n        p.y = precise(point.y);\n      });\n    }\n    return points;\n  }\n\n  /**\n   * snap to point\n   * @param point\n   * @param tolerance\n   */\n  snapToPoint(point: Point, tolerance = 8) {\n    const t = tolerance / this.scale;\n\n    // bbox\n    const { x, y } = point;\n    const { left, right, top, bottom } = this.shapeBounds;\n    if (x < left - t || x > right + t || y < top - t || y > bottom + t) {\n      return null;\n    }\n\n    const points = this.getRotatedPoints();\n    // points\n    let nearestPoint: { x: number; y: number; } | undefined;\n    let d: number | undefined;\n    points.forEach((p) => {\n      const pointDistance = Math.sqrt((p.x - x) ** 2 + (p.y - y) ** 2);\n      if (pointDistance < t && (d === undefined || pointDistance < d)) {\n        d = pointDistance;\n        nearestPoint = p;\n      }\n    });\n    if (nearestPoint) {\n      return new Point(nearestPoint.x, nearestPoint.y);\n    }\n\n    // edges\n    const location = new Flatten.Point(x, y);\n    for (let i = 0; i < points.length; i += 1) {\n      const startPoint = new Flatten.Point(points[i].x, points[i].y);\n      const endPoint = new Flatten.Point(points[(i + 1) % 4].x, points[(i + 1) % 4].y);\n      const line = new Flatten.Segment(startPoint, endPoint);\n      const [distance, segment] = line.distanceTo(location);\n      if (distance < t) {\n        const { ps, pe } = segment;\n        const edgePoint = ps.equalTo(location) ? pe : ps;\n        return new Point(edgePoint.x, edgePoint.y);\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * shape destroy\n   */\n  destroy() {\n    document.removeEventListener('mousemove', this.mouseMove, false);\n    document.removeEventListener('mouseup', this.mouseUp, false);\n    // call parent\n    super.destroy();\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}