{"ast":null,"code":"import{preloadImage}from'./index';const IMAGE_CACHE_SIZE=10;export class ImagePreloader{constructor(images){/**\n   * image list\n   */this.images=void 0;/**\n   * currently preloaded image index start\n   */this.preloadedImageIndex=-1;this.images=images;}preload(index){if(this.preloadedImageIndex<0){// never preload\nthis.cacheImages(index);}else{const offset=index-this.preloadedImageIndex;if(Math.abs(offset)>=IMAGE_CACHE_SIZE){// offset exceeds cache size, always load from start\nthis.cacheImages(index);}else if(offset!==0){const startFrame=offset>0?this.preloadedImageIndex+IMAGE_CACHE_SIZE:index;this.cacheImages(startFrame,Math.abs(offset));}}this.preloadedImageIndex=index;}cacheImages(startIndex){let cacheSize=arguments.length>1&&arguments[1]!==undefined?arguments[1]:IMAGE_CACHE_SIZE;Array.from({length:cacheSize}).forEach((_,i)=>{const index=startIndex+i;if(index>=0&&index<this.images.length){const image=this.images[index];if(image){preloadImage(image,'');}}});}}export default(images=>new ImagePreloader(images));","map":{"version":3,"names":["preloadImage","IMAGE_CACHE_SIZE","ImagePreloader","constructor","images","preloadedImageIndex","preload","index","cacheImages","offset","Math","abs","startFrame","startIndex","cacheSize","arguments","length","undefined","Array","from","forEach","_","i","image"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/utils/image-preloader.ts"],"sourcesContent":["import { preloadImage } from './index';\n\nconst IMAGE_CACHE_SIZE = 10;\n\nexport class ImagePreloader {\n  /**\n   * image list\n   */\n  images: string[];\n\n  /**\n   * currently preloaded image index start\n   */\n  preloadedImageIndex = -1;\n\n  constructor(images: string[]) {\n    this.images = images;\n  }\n\n  preload(index: number) {\n    if (this.preloadedImageIndex < 0) {\n      // never preload\n      this.cacheImages(index);\n    } else {\n      const offset = index - this.preloadedImageIndex;\n      if (Math.abs(offset) >= IMAGE_CACHE_SIZE) {\n        // offset exceeds cache size, always load from start\n        this.cacheImages(index);\n      } else if (offset !== 0) {\n        const startFrame = offset > 0 ? this.preloadedImageIndex + IMAGE_CACHE_SIZE : index;\n        this.cacheImages(startFrame, Math.abs(offset));\n      }\n    }\n\n    this.preloadedImageIndex = index;\n  }\n\n  cacheImages(startIndex: number, cacheSize: number = IMAGE_CACHE_SIZE) {\n    Array.from({ length: cacheSize }).forEach((_, i) => {\n      const index = startIndex + i;\n      if (index >= 0 && index < this.images.length) {\n        const image = this.images[index];\n        if (image) {\n          preloadImage(image, '');\n        }\n      }\n    });\n  }\n}\n\nexport default (images: string[]) => new ImagePreloader(images);\n"],"mappings":"AAAA,OAASA,YAAY,KAAQ,SAAS,CAEtC,KAAM,CAAAC,gBAAgB,CAAG,EAAE,CAE3B,MAAO,MAAM,CAAAC,cAAe,CAW1BC,WAAWA,CAACC,MAAgB,CAAE,CAV9B;AACF;AACA,KAFE,KAGAA,MAAM,QAEN;AACF;AACA,KAFE,KAGAC,mBAAmB,CAAG,CAAC,CAAC,CAGtB,IAAI,CAACD,MAAM,CAAGA,MAAM,CACtB,CAEAE,OAAOA,CAACC,KAAa,CAAE,CACrB,GAAI,IAAI,CAACF,mBAAmB,CAAG,CAAC,CAAE,CAChC;AACA,IAAI,CAACG,WAAW,CAACD,KAAK,CAAC,CACzB,CAAC,IAAM,CACL,KAAM,CAAAE,MAAM,CAAGF,KAAK,CAAG,IAAI,CAACF,mBAAmB,CAC/C,GAAIK,IAAI,CAACC,GAAG,CAACF,MAAM,CAAC,EAAIR,gBAAgB,CAAE,CACxC;AACA,IAAI,CAACO,WAAW,CAACD,KAAK,CAAC,CACzB,CAAC,IAAM,IAAIE,MAAM,GAAK,CAAC,CAAE,CACvB,KAAM,CAAAG,UAAU,CAAGH,MAAM,CAAG,CAAC,CAAG,IAAI,CAACJ,mBAAmB,CAAGJ,gBAAgB,CAAGM,KAAK,CACnF,IAAI,CAACC,WAAW,CAACI,UAAU,CAAEF,IAAI,CAACC,GAAG,CAACF,MAAM,CAAC,CAAC,CAChD,CACF,CAEA,IAAI,CAACJ,mBAAmB,CAAGE,KAAK,CAClC,CAEAC,WAAWA,CAACK,UAAkB,CAAwC,IAAtC,CAAAC,SAAiB,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGd,gBAAgB,CAClEiB,KAAK,CAACC,IAAI,CAAC,CAAEH,MAAM,CAAEF,SAAU,CAAC,CAAC,CAACM,OAAO,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAK,CAClD,KAAM,CAAAf,KAAK,CAAGM,UAAU,CAAGS,CAAC,CAC5B,GAAIf,KAAK,EAAI,CAAC,EAAIA,KAAK,CAAG,IAAI,CAACH,MAAM,CAACY,MAAM,CAAE,CAC5C,KAAM,CAAAO,KAAK,CAAG,IAAI,CAACnB,MAAM,CAACG,KAAK,CAAC,CAChC,GAAIgB,KAAK,CAAE,CACTvB,YAAY,CAACuB,KAAK,CAAE,EAAE,CAAC,CACzB,CACF,CACF,CAAC,CAAC,CACJ,CACF,CAEA,eAAgBnB,MAAgB,EAAK,GAAI,CAAAF,cAAc,CAACE,MAAM,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}