{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/SegmentDetail/LineText/LineText.jsx\";\n/* eslint-disable react/no-array-index-key */\n/* eslint-disable no-bitwise */\n/* eslint-disable no-undef */\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport './LineText.scss';\nimport { Input, Tooltip, notification } from 'antd';\nimport { setLineText } from '../../../redux/action';\nimport { translate, tagType, shortText } from '../../../constants';\nimport { isAnnotationReadonly } from '../../../../../utils/tool-mode';\nimport TagIcon from '../../common/Icons/TagIcon';\nimport StandaloneTagIcon from '../../common/Icons/StandaloneTagIcon';\nimport { containsRTLLanguage, escapeRegExp } from '../../../../../utils';\nnotification.config({\n  top: 60\n});\nconst LineText = props => {\n  const textareaRef = useRef();\n  const [translation, setTranslation] = useState('');\n  const [isSelectedTag, setIsSelectedTag] = useState(false);\n  const {\n    text,\n    lineIndex,\n    tagGroup\n  } = props;\n  useEffect(() => {\n    if (text !== translation) {\n      setTranslation(text);\n    }\n  }, [text]);\n  const handleTextChange = value => {\n    setTranslation(value);\n    props.setLineText({\n      text: value,\n      videoIndex: null,\n      segmentIndex: null,\n      lineIndex\n    });\n  };\n  const handleTagClick = (group, tag) => {\n    if (isAnnotationReadonly(props.toolMode) || props.annotateDisabled) {\n      return;\n    }\n    const domTextArea = textareaRef.current.resizableTextArea.textArea;\n    const txt = domTextArea.value;\n    const before = txt.substring(0, domTextArea.selectionStart);\n    const selected = txt.substring(domTextArea.selectionStart, domTextArea.selectionEnd);\n    const after = txt.substring(domTextArea.selectionEnd);\n    let newTxt = domTextArea.value;\n    let newSelection = before === null || before === void 0 ? void 0 : before.length;\n    if (group.type === tagType.standalone) {\n      var _tag$text;\n      newSelection += (_tag$text = tag.text) === null || _tag$text === void 0 ? void 0 : _tag$text.length;\n      newTxt = `${before}${tag.text}${after}`;\n    } else if (group.type === tagType.tag) {\n      var _tag$prefix, _tag$suffix;\n      newSelection += ((_tag$prefix = tag.prefix) === null || _tag$prefix === void 0 ? void 0 : _tag$prefix.length) + (selected === null || selected === void 0 ? void 0 : selected.length) + (selected.length === 0 ? 0 : (_tag$suffix = tag.suffix) === null || _tag$suffix === void 0 ? void 0 : _tag$suffix.length);\n      newTxt = `${before}${tag.prefix}${selected}${tag.suffix}${after}`;\n    }\n    domTextArea.value = newTxt;\n    handleTextChange(newTxt);\n    domTextArea.focus();\n    domTextArea.setSelectionRange(newSelection, newSelection);\n  };\n  const handleTagShortcut = e => {\n    if (e.ctrlKey && e.shiftKey && e.key) {\n      e.preventDefault();\n      tagGroup.forEach(group => {\n        group.tags.forEach(tag => {\n          var _tag$shortcut;\n          if (e.key.toUpperCase() === ((_tag$shortcut = tag.shortcut) === null || _tag$shortcut === void 0 ? void 0 : _tag$shortcut.toUpperCase())) {\n            handleTagClick(group, tag);\n          }\n        });\n      });\n    }\n  };\n  const textTags = useMemo(() => {\n    var _tagGroup$find, _tagGroup$find2;\n    /**\n     *  {\n     *    \"text\": \"#4\"\n     *    \"name\": \"#4\"\n     *  },\n     */\n    const standaloneTags = (tagGroup === null || tagGroup === void 0 ? void 0 : (_tagGroup$find = tagGroup.find(t => t.type === tagType.standalone)) === null || _tagGroup$find === void 0 ? void 0 : _tagGroup$find.tags) || [];\n    /**\n     *  {\n     *    \"prefix\": \"【\",\n     *    \"suffix\": \"】\",\n     *    \"name\": \"【】\"\n     *  },\n     */\n    const tags = (tagGroup === null || tagGroup === void 0 ? void 0 : (_tagGroup$find2 = tagGroup.find(t => t.type === tagType.tag)) === null || _tagGroup$find2 === void 0 ? void 0 : _tagGroup$find2.tags) || [];\n    const tagArray = [];\n    if (!!translation && (standaloneTags.length > 0 || tags.length > 0)) {\n      for (let i = 0; i < standaloneTags.length; i += 1) {\n        const tag = standaloneTags[i].text;\n        const regexp = new RegExp(escapeRegExp(tag), 'g');\n        const list = [...translation.matchAll(regexp)];\n        tagArray.push(...list.map(m => ({\n          text: tag,\n          start: m.index,\n          end: m.index + tag.length\n        })));\n      }\n      for (let i = 0; i < tags.length; i += 1) {\n        const {\n          prefix,\n          suffix,\n          name\n        } = tags[i];\n        const prefixRegexp = new RegExp(escapeRegExp(prefix), 'g');\n        const suffixRegexp = new RegExp(escapeRegExp(suffix), 'g');\n        const prefixs = [...translation.matchAll(prefixRegexp)];\n        const suffixs = [...translation.matchAll(suffixRegexp)];\n        const prefixList = prefixs.map(m => ({\n          text: name,\n          start: m.index,\n          end: m.index + prefix.length\n        }));\n        const suffixList = suffixs.map(m => ({\n          text: name,\n          start: m.index,\n          end: m.index + suffix.length\n        }));\n        for (let n = prefixList.length - 1; n >= 0; n -= 1) {\n          const prefixTag = prefixList[n];\n          const suffixTagIndex = suffixList.findIndex(s => prefixTag.start < s.start);\n          if (suffixTagIndex >= 0) {\n            const suffixTag = suffixList[suffixTagIndex];\n            tagArray.push({\n              ...prefixTag,\n              end: suffixTag.end\n            });\n            suffixList.splice(suffixTagIndex, 1);\n          } else {\n            tagArray.push(prefixTag);\n          }\n        }\n        if (suffixList.length > 0) {\n          tagArray.push(...suffixList);\n        }\n      }\n    }\n    return tagArray.sort((a, b) => b.start - a.start);\n  }, [translation, tagGroup]);\n  const handleClick = () => {\n    if (isSelectedTag) {\n      setIsSelectedTag(false);\n      return;\n    }\n    const domTextArea = textareaRef.current.resizableTextArea.textArea;\n    const {\n      selectionStart,\n      selectionEnd,\n      value\n    } = domTextArea;\n    if (selectionStart === selectionEnd && selectionStart > 0 && selectionEnd < value.length) {\n      const selectedTag = textTags.find(s => selectionStart >= s.start && selectionEnd < s.end);\n      if (selectedTag) {\n        domTextArea.setSelectionRange(selectedTag.start, selectedTag.end);\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"line-text-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"line-text-head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"line-text-content-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, `${translate('content')}:`)), /*#__PURE__*/React.createElement(Input.TextArea, {\n    ref: textareaRef,\n    className: \"line-text\",\n    value: translation,\n    autoSize: {\n      minRows: 6\n    },\n    onChange: e => handleTextChange(e.target.value),\n    autoComplete: \"off\",\n    disabled: isAnnotationReadonly(props.toolMode) || props.annotateDisabled,\n    onFocus: () => {\n      window.disableLongAudioHotKeys = true;\n    },\n    onBlur: () => {\n      window.disableLongAudioHotKeys = false;\n      setIsSelectedTag(false);\n    },\n    onKeyDown: e => {\n      handleTagShortcut(e);\n    },\n    dir: containsRTLLanguage(translation) ? 'rtl' : 'ltr',\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }, tagGroup.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tags-group-shortcut\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, translate('TAG_SHORTCUT'), \": ctrl+shift+[key]\"), tagGroup.map(group => /*#__PURE__*/React.createElement(\"div\", {\n    key: `tags-group-${group.name}`,\n    className: \"tags-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: group.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tags-group-tag-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }, group.type === tagType.tag && /*#__PURE__*/React.createElement(TagIcon, {\n    size: 16,\n    viewBox: \"0 0 16 16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 51\n    }\n  }), group.type === tagType.standalone && /*#__PURE__*/React.createElement(StandaloneTagIcon, {\n    size: 16,\n    viewBox: \"0 0 16 16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 58\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tags-group-tags\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 15\n    }\n  }, group.tags.map((tag, idx) => /*#__PURE__*/React.createElement(Tooltip, {\n    overlayClassName: \"tooltip\",\n    key: `tags-group-tag-${group.name}-${tag.name}-${idx}`,\n    title: `${translate('TAG')}: ${tag.prefix ? tag.prefix : ''}${tag.suffix ? tag.suffix : ''}${tag.text ? tag.text : ''} ${tag.shortcut ? `${translate('TAG_SHORTCUT')}: ctrl+shift+${tag.shortcut}` : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: `tags-group-tag tags-group-tag-${group.type} tags-group-tag-${isAnnotationReadonly(props.toolMode) || props.annotateDisabled ? 'disabled' : 'enabled'}`,\n    key: `tags-group-tag-${group.name}-${tag.name}-${idx}`,\n    onClick: () => handleTagClick(group, tag),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }\n  }, `${shortText(tag.name, 50)}${tag.shortcut ? ` [${tag.shortcut}]` : ''}`))))))));\n};\nLineText.propTypes = {\n  setLineText: PropTypes.func,\n  text: PropTypes.string,\n  lineIndex: PropTypes.number\n};\nconst mapStateToProps = state => ({\n  toolMode: state.toolMode,\n  tagGroup: state.tagGroup,\n  wavesurfers: state.wavesurfers,\n  autoTranscription: state.autoTranscription,\n  autoTranscriptionLanguage: state.autoTranscriptionLanguage,\n  autoTranscriptionEndpoint: state.autoTranscriptionEndpoint,\n  jobId: state.jobId,\n  videos: state.videos,\n  currentVideo: state.currentVideo,\n  wordTimestamps: state.wordTimestamps,\n  annotateDisabled: state.annotateDisabled,\n  jobProxy: state.jobProxy\n});\nconst mapDispatchToProps = {\n  setLineText\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(LineText);","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","PropTypes","connect","Input","Tooltip","notification","setLineText","translate","tagType","shortText","isAnnotationReadonly","TagIcon","StandaloneTagIcon","containsRTLLanguage","escapeRegExp","config","top","LineText","props","textareaRef","translation","setTranslation","isSelectedTag","setIsSelectedTag","text","lineIndex","tagGroup","handleTextChange","value","videoIndex","segmentIndex","handleTagClick","group","tag","toolMode","annotateDisabled","domTextArea","current","resizableTextArea","textArea","txt","before","substring","selectionStart","selected","selectionEnd","after","newTxt","newSelection","length","type","standalone","_tag$text","_tag$prefix","_tag$suffix","prefix","suffix","focus","setSelectionRange","handleTagShortcut","e","ctrlKey","shiftKey","key","preventDefault","forEach","tags","_tag$shortcut","toUpperCase","shortcut","textTags","_tagGroup$find","_tagGroup$find2","standaloneTags","find","t","tagArray","i","regexp","RegExp","list","matchAll","push","map","m","start","index","end","name","prefixRegexp","suffixRegexp","prefixs","suffixs","prefixList","suffixList","n","prefixTag","suffixTagIndex","findIndex","s","suffixTag","splice","sort","a","b","handleClick","selectedTag","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","TextArea","ref","autoSize","minRows","onChange","target","autoComplete","disabled","onFocus","window","disableLongAudioHotKeys","onBlur","onKeyDown","dir","onClick","title","size","viewBox","idx","overlayClassName","propTypes","func","string","number","mapStateToProps","state","wavesurfers","autoTranscription","autoTranscriptionLanguage","autoTranscriptionEndpoint","jobId","videos","currentVideo","wordTimestamps","jobProxy","mapDispatchToProps"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/SegmentDetail/LineText/LineText.jsx"],"sourcesContent":["/* eslint-disable react/no-array-index-key */\n/* eslint-disable no-bitwise */\n/* eslint-disable no-undef */\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport './LineText.scss';\nimport { Input, Tooltip, notification } from 'antd';\nimport { setLineText } from '../../../redux/action';\nimport { translate, tagType, shortText } from '../../../constants';\nimport { isAnnotationReadonly } from '../../../../../utils/tool-mode';\nimport TagIcon from '../../common/Icons/TagIcon';\nimport StandaloneTagIcon from '../../common/Icons/StandaloneTagIcon';\nimport {containsRTLLanguage, escapeRegExp } from '../../../../../utils';\n\nnotification.config({ top: 60 });\n\nconst LineText = (props) => {\n  const textareaRef = useRef();\n  const [translation, setTranslation] = useState('');\n  const [isSelectedTag, setIsSelectedTag] = useState(false);\n  const { text, lineIndex, tagGroup } = props;\n\n  useEffect(() => {\n    if (text !== translation) {\n      setTranslation(text);\n    }\n  }, [text]);\n\n  const handleTextChange = (value) => {\n    setTranslation(value);\n    props.setLineText({\n      text: value,\n      videoIndex: null,\n      segmentIndex: null,\n      lineIndex,\n    });\n  };\n\n  const handleTagClick = (group, tag) => {\n    if (isAnnotationReadonly(props.toolMode) || props.annotateDisabled) {\n      return;\n    }\n    const domTextArea = textareaRef.current.resizableTextArea.textArea;\n    const txt = domTextArea.value;\n    const before = txt.substring(0, domTextArea.selectionStart);\n    const selected = txt.substring(domTextArea.selectionStart, domTextArea.selectionEnd);\n    const after = txt.substring(domTextArea.selectionEnd);\n    let newTxt = domTextArea.value;\n    let newSelection = before?.length;\n    if (group.type === tagType.standalone) {\n      newSelection += tag.text?.length;\n      newTxt = `${before}${tag.text}${after}`;\n    } else if (group.type === tagType.tag) {\n      newSelection += tag.prefix?.length + selected?.length + (selected.length === 0 ? 0 : tag.suffix?.length);\n      newTxt = `${before}${tag.prefix}${selected}${tag.suffix}${after}`;\n    }\n    domTextArea.value = newTxt;\n    handleTextChange(newTxt);\n    domTextArea.focus();\n    domTextArea.setSelectionRange(newSelection, newSelection);\n  };\n\n  const handleTagShortcut = (e) => {\n    if (e.ctrlKey && e.shiftKey && e.key) {\n      e.preventDefault();\n      tagGroup.forEach((group) => {\n        group.tags.forEach((tag) => {\n          if (e.key.toUpperCase() === tag.shortcut?.toUpperCase()) {\n            handleTagClick(group, tag);\n          }\n        });\n      });\n    }\n  };\n\n  const textTags = useMemo(() => {\n    /**\n     *  {\n     *    \"text\": \"#4\"\n     *    \"name\": \"#4\"\n     *  },\n     */\n    const standaloneTags = tagGroup?.find((t) => t.type === tagType.standalone)?.tags || [];\n    /**\n     *  {\n     *    \"prefix\": \"【\",\n     *    \"suffix\": \"】\",\n     *    \"name\": \"【】\"\n     *  },\n     */\n    const tags = tagGroup?.find((t) => t.type === tagType.tag)?.tags || [];\n    const tagArray = [];\n    if (!!translation && (standaloneTags.length > 0 || tags.length > 0)) {\n      for (let i = 0; i < standaloneTags.length; i += 1) {\n        const tag = standaloneTags[i].text;\n        const regexp = new RegExp(escapeRegExp(tag), 'g');\n        const list = [...translation.matchAll(regexp)];\n        tagArray.push(...list.map((m) => ({\n          text: tag,\n          start: m.index,\n          end: m.index + tag.length\n        })));\n      }\n\n      for (let i = 0; i < tags.length; i += 1) {\n        const { prefix, suffix, name } = tags[i];\n        const prefixRegexp = new RegExp(escapeRegExp(prefix), 'g');\n        const suffixRegexp = new RegExp(escapeRegExp(suffix), 'g');\n        const prefixs = [...translation.matchAll(prefixRegexp)];\n        const suffixs = [...translation.matchAll(suffixRegexp)];\n        const prefixList = prefixs.map((m) => ({\n          text: name,\n          start: m.index,\n          end: m.index + prefix.length\n        }));\n        const suffixList = suffixs.map((m) => ({\n          text: name,\n          start: m.index,\n          end: m.index + suffix.length\n        }));\n        for (let n = prefixList.length - 1; n >= 0; n -= 1) {\n          const prefixTag = prefixList[n];\n          const suffixTagIndex = suffixList.findIndex((s) => prefixTag.start < s.start);\n          if (suffixTagIndex >= 0) {\n            const suffixTag = suffixList[suffixTagIndex];\n            tagArray.push({\n              ...prefixTag,\n              end: suffixTag.end\n            });\n            suffixList.splice(suffixTagIndex, 1);\n          } else {\n            tagArray.push(prefixTag);\n          }\n        }\n        if (suffixList.length > 0) {\n          tagArray.push(...suffixList);\n        }\n      }\n    }\n    return tagArray.sort((a, b) => b.start - a.start);\n  }, [translation, tagGroup]);\n\n  const handleClick = () => {\n    if (isSelectedTag) {\n      setIsSelectedTag(false);\n      return;\n    }\n    const domTextArea = textareaRef.current.resizableTextArea.textArea;\n    const { selectionStart, selectionEnd, value } = domTextArea;\n    if (selectionStart === selectionEnd && selectionStart > 0 && selectionEnd < value.length) {\n      const selectedTag = textTags.find((s) => selectionStart >= s.start && selectionEnd < s.end);\n      if (selectedTag) {\n        domTextArea.setSelectionRange(selectedTag.start, selectedTag.end);\n      }\n    }\n  };\n\n  return (\n    <div className=\"line-text-container\">\n      <div className=\"line-text-head\">\n        <div className=\"line-text-content-title\">{`${translate('content')}:`}</div>\n      </div>\n      <Input.TextArea\n        ref={textareaRef}\n        className=\"line-text\"\n        value={translation}\n        autoSize={{ minRows: 6 }}\n        onChange={(e) => handleTextChange(e.target.value)}\n        autoComplete=\"off\"\n        disabled={isAnnotationReadonly(props.toolMode) || props.annotateDisabled}\n        onFocus={() => { window.disableLongAudioHotKeys = true; }}\n        onBlur={() => { window.disableLongAudioHotKeys = false; setIsSelectedTag(false); }}\n        onKeyDown={(e) => { handleTagShortcut(e); }}\n        dir={containsRTLLanguage(translation) ? 'rtl' : 'ltr'}\n        onClick={handleClick}\n      />\n      <div>\n        {\n          tagGroup.length > 0 && (\n            <div className=\"tags-group-shortcut\">\n              {translate('TAG_SHORTCUT')}\n              : ctrl+shift+[key]\n            </div>\n          )\n        }\n        {\n          tagGroup.map((group) => (\n            <div key={`tags-group-${group.name}`} className=\"tags-group\">\n              <Tooltip\n                title={group.name}\n              >\n                <div className=\"tags-group-tag-icon\">\n                  {\n                    group.type === tagType.tag && <TagIcon size={16} viewBox=\"0 0 16 16\" />\n                  }\n                  {\n                    group.type === tagType.standalone && <StandaloneTagIcon size={16} viewBox=\"0 0 16 16\" />\n                  }\n                </div>\n              </Tooltip>\n              <div className=\"tags-group-tags\">\n                {\n                group.tags.map((tag, idx) => (\n                  <Tooltip\n                    overlayClassName=\"tooltip\"\n                    key={`tags-group-tag-${group.name}-${tag.name}-${idx}`}\n                    title={`${translate('TAG')}: ${tag.prefix ? tag.prefix : ''}${tag.suffix ? tag.suffix : ''}${tag.text ? tag.text : ''} ${tag.shortcut ? `${translate('TAG_SHORTCUT')}: ctrl+shift+${tag.shortcut}` : ''}`}\n                  >\n                    <span\n                      className={`tags-group-tag tags-group-tag-${group.type} tags-group-tag-${isAnnotationReadonly(props.toolMode) || props.annotateDisabled ? 'disabled' : 'enabled'}`}\n                      key={`tags-group-tag-${group.name}-${tag.name}-${idx}`}\n                      onClick={() => handleTagClick(group, tag)}\n                    >\n                      {`${shortText(tag.name, 50)}${tag.shortcut ? ` [${tag.shortcut}]` : ''}`}\n                    </span>\n                  </Tooltip>\n                ))\n              }\n              </div>\n            </div>\n          ))\n        }\n      </div>\n    </div>\n  );\n};\n\nLineText.propTypes = {\n  setLineText: PropTypes.func,\n  text: PropTypes.string,\n  lineIndex: PropTypes.number,\n};\nconst mapStateToProps = (state) => ({\n  toolMode: state.toolMode,\n  tagGroup: state.tagGroup,\n  wavesurfers: state.wavesurfers,\n  autoTranscription: state.autoTranscription,\n  autoTranscriptionLanguage: state.autoTranscriptionLanguage,\n  autoTranscriptionEndpoint: state.autoTranscriptionEndpoint,\n  jobId: state.jobId,\n  videos: state.videos,\n  currentVideo: state.currentVideo,\n  wordTimestamps: state.wordTimestamps,\n  annotateDisabled: state.annotateDisabled,\n  jobProxy: state.jobProxy,\n});\nconst mapDispatchToProps = {\n  setLineText,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(LineText);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}