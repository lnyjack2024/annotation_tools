{"ast":null,"code":"import{Base64}from'js-base64';import{v4 as uuid}from'uuid';import hexToRgba from'hex-to-rgba';import rootStore from'./store/RootStore';import{LandmarkEditType,LabelItem,LabelFormat,LabelStyle}from'./types';import{getFieldDisplayLabel}from'../../utils/form';/* eslint-disable no-param-reassign */export function parseFrames(frames){return(typeof frames==='string'?frames.split(','):frames).map((f,i)=>({url:f.trim(),valid:true,index:i}));}export async function parseFramesByPaylod(_ref){let{frames,imageData}=_ref;let parsedFrames=[];if(frames){parsedFrames=parseFrames(frames);}if(imageData){parsedFrames=imageData.map((v,index)=>typeof v==='string'?{url:v,valid:true,index}:{url:v.url,valid:v.valid!==undefined?v.valid:true,index});}return parsedFrames;}export function getValuesLabel(fields,values,labelItems){let content='';if(fields&&values){for(let i=0;i<fields.length;i+=1){const{name,label,visible}=fields[i];if(rootStore.setting.labelFormat===LabelFormat.DEFAULT){content=\"\\n\".concat(content);}if(visible||!visible&&values[name]){if(labelItems.includes(LabelItem.ATTRIBUTE_KEYS)){content+=\"\".concat(label||name,\": \");}if(labelItems.includes(LabelItem.ATTRIBUTE_VALUES)){content+=\"\".concat(getFieldDisplayLabel(values[name],fields[i])||'');}}if(i<fields.length-1&&content){content+=';';}}}return content;};export function resetAttrLabelPosition(label,position,visible){if(visible!==undefined){label.visible=visible;}label.position.x=position.x;label.position.y=position.y;if(rootStore.setting.labelStyle===LabelStyle.DEFAULT){label.children[0].position.x=position.x;label.children[0].position.y=position.y;}label.children.slice(-1)[0].position.x=position.x;label.children.slice(-1)[0].position.y=position.y;}// load result\nexport function loadInstancesFromResult(instances){const newInstances={};const categoryInstancesMap={};instances.forEach(instanceData=>{const{category,children:defaultChildren,number}=instanceData;const id=instanceData.id||uuid();let notEmpty=0;const ontologyItem=rootStore.ontology.ontology.find(onto=>onto.class_name===category);if(ontologyItem){const children=ontologyItem.children.map(group=>{var _defaultChildren$find;const groupFrames=(_defaultChildren$find=defaultChildren.find(c=>c.name===group.name))===null||_defaultChildren$find===void 0?void 0:_defaultChildren$find.frames;const frames={};if(Array.isArray(groupFrames)){groupFrames.forEach(frame=>{if(frame){notEmpty+=frame.shapes.length;const shapes={};frame.shapes.forEach(shape=>{if(shape){if(group.type===LandmarkEditType.KEYPOINT){const point=shape;const{index,...rest}=point;if(index||index===0){const realCategory=group&&Array.isArray(group.categories)&&group.categories.find(c=>c.range&&c.range.length===2&&index>=c.range[0]&&index<=c.range[1]);if(realCategory){// fix pointCategory and key point info for saved data\nrest.pointCategory=realCategory.name;rest.isKeyPoint=realCategory.keys.includes(index);rest.visible=rest.visible!==false;shapes[index]=rest;}}}else if(group.type===LandmarkEditType.RECTANGLE){const rectangle=shape;shapes[rectangle.id]=rectangle;}}});frames[frame.frameIndex]={frameIndex:frame.frameIndex,count:frame.shapes.length,shapes,attributes:frame.attributes};}});}return{name:group.name,shapeType:group.type,count:(groupFrames===null||groupFrames===void 0?void 0:groupFrames.reduce((n,f)=>n+(f?f.shapes.length:0),0))||0,frames};})||[];newInstances[id]={...instanceData,id,notEmpty,children};}// add to categoryInstancesMap\nif(!categoryInstancesMap[category]){categoryInstancesMap[category]={};}categoryInstancesMap[category][id]=number;});return{newInstances,categoryInstancesMap};}export function getFrameShapes(instances,currentFrame){let isRemove=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;const updateShapes=[];const updatedCategories=[];instances.filter(v=>!!v).forEach(_ref2=>{let{id,category,children}=_ref2;if(Array.isArray(children)){children.forEach(group=>{const currentFrameGroup=group.frames[currentFrame];if(currentFrameGroup){Object.keys(currentFrameGroup.shapes).forEach(key=>{const shape=group.shapeType===LandmarkEditType.KEYPOINT?currentFrameGroup.shapes[Number(key)]:currentFrameGroup.shapes[key];if(shape){const updateShape={frameIndex:currentFrame,instanceId:id,category,groupName:group.name,shape:isRemove?undefined:shape,shapeType:group.shapeType};if(group.shapeType===LandmarkEditType.KEYPOINT){updateShapes.push({...updateShape,index:Number(key)});const{position,pointCategory,index,isKeyPoint}=shape;if(position!==undefined&&pointCategory!==undefined&&index!==undefined&&isKeyPoint!==undefined){if(updatedCategories.findIndex(v=>v.pointCategory===pointCategory)<0){updatedCategories.push({frameIndex:currentFrame,pointCategory,instanceId:id,groupName:group.name,category});}}}else if(group.shapeType===LandmarkEditType.RECTANGLE){updateShapes.push({...updateShape,id:key});}}});}});}});return{updateShapes,updatedCategories};}export function initInstances(points,frameCount){const newPoints=points.map(point=>({...point,index:point.index}));const ontologyItem=rootStore.ontology.ontology.find(onto=>onto.class_name==='Ontology');const children=(ontologyItem===null||ontologyItem===void 0?void 0:ontologyItem.children.filter(group=>group.name!=='default').map(group=>({...group,name:group.name,shape_type:group.type,frames:Array.from({length:frameCount}).map((v,i)=>i===0?{frameIndex:i,count:points.length,shapes:newPoints}:undefined)})))||[];return[{id:uuid(),index:1,color:'#5cdef0',ontology:'Ontology',children}];}// init ontology\nexport function initOntology(loadOntology){let list=[];if(loadOntology.find(v=>v.class_name)){list=loadOntology.map(o=>({...o,children:o.children&&o.children.map(child=>{let groupConfig=null;let pointConfig=null;if(typeof child.label_config==='string'){try{groupConfig=JSON.parse(Base64.decode(child.label_config));}catch(e){// parse error\n}}if(typeof child.point_label_config==='string'){try{pointConfig=JSON.parse(Base64.decode(child.point_label_config));}catch(e){// parse error\n}}return{...child,display_color:o.display_color||'#5cdef0',lines:child.lines?child.lines.map(v=>({...v,// points: v.points.sort((a, b) => a - b)\npoints:[...v.points]})):[],label_config:groupConfig,point_label_config:pointConfig};})}));}else{// for older version\nlist=[{class_name:'Ontology',display_color:'#5cdef0',children:[{name:'default',type:LandmarkEditType.KEYPOINT,categories:loadOntology.map(v=>({...v,isConnect:true})),lines:[],count:loadOntology.reduce((total,pointCategory)=>total+(pointCategory.range[1]-pointCategory.range[0]+1),0),reference:'',label_config:null,point_label_config:null}]}];};return list;}export function resizeLabel(size,oldZoom,point,label){let type=arguments.length>4&&arguments[4]!==undefined?arguments[4]:'attr';if(!label||!label.children){return;}label.children.slice(-1)[0].set({fontSize:size.fontSize/size.zoom,shadowBlur:2/size.zoom,shadowOffset:2/size.zoom});const scale=size.zoom/oldZoom;const[x,y]=point;const newWidth=size.width/scale;const newHeight=size.height/scale;if(rootStore.setting.labelStyle===LabelStyle.DEFAULT){label.children[0].size.width=newWidth;label.children[0].size.height=newHeight;}let position={x,y};if(type==='label'){position={x:x+newWidth/2,y:y-newHeight/2};}resetAttrLabelPosition(label,position);}export function getRGBAColor(displayColor){let alpha=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0.2;if(displayColor){return hexToRgba(displayColor,alpha);}return'#FFFFFF';};export function getInstanceFrames(instance){const frameStatus={};if(instance){instance.children.forEach(group=>{Object.values(group.frames).forEach(frame=>{if(frame&&frame.count>0){frameStatus[frame.frameIndex]=false;}});});}return frameStatus;};export const getNextState=setState=>new Promise(resolve=>{setState(preState=>{resolve(preState);return preState;});});","map":{"version":3,"names":["Base64","v4","uuid","hexToRgba","rootStore","LandmarkEditType","LabelItem","LabelFormat","LabelStyle","getFieldDisplayLabel","parseFrames","frames","split","map","f","i","url","trim","valid","index","parseFramesByPaylod","_ref","imageData","parsedFrames","v","undefined","getValuesLabel","fields","values","labelItems","content","length","name","label","visible","setting","labelFormat","DEFAULT","concat","includes","ATTRIBUTE_KEYS","ATTRIBUTE_VALUES","resetAttrLabelPosition","position","x","y","labelStyle","children","slice","loadInstancesFromResult","instances","newInstances","categoryInstancesMap","forEach","instanceData","category","defaultChildren","number","id","notEmpty","ontologyItem","ontology","find","onto","class_name","group","_defaultChildren$find","groupFrames","c","Array","isArray","frame","shapes","shape","type","KEYPOINT","point","rest","realCategory","categories","range","pointCategory","isKeyPoint","keys","RECTANGLE","rectangle","frameIndex","count","attributes","shapeType","reduce","n","getFrameShapes","currentFrame","isRemove","arguments","updateShapes","updatedCategories","filter","_ref2","currentFrameGroup","Object","key","Number","updateShape","instanceId","groupName","push","findIndex","initInstances","points","frameCount","newPoints","shape_type","from","color","initOntology","loadOntology","list","o","child","groupConfig","pointConfig","label_config","JSON","parse","decode","e","point_label_config","display_color","lines","isConnect","total","reference","resizeLabel","size","oldZoom","set","fontSize","zoom","shadowBlur","shadowOffset","scale","newWidth","width","newHeight","height","getRGBAColor","displayColor","alpha","getInstanceFrames","instance","frameStatus","getNextState","setState","Promise","resolve","preState"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/keypoint/utils.ts"],"sourcesContent":["import { Dispatch, SetStateAction } from 'react';\nimport { Field } from '@appen-china/easy-form/es/types';\nimport { Base64 } from 'js-base64';\nimport { v4 as uuid } from 'uuid';\nimport hexToRgba from 'hex-to-rgba';\nimport rootStore from './store/RootStore';\nimport { OntologyItem } from './store/OntologyStore';\nimport {\n  InstanceListItem, LandmarkEditType, Rectangle, UpdatedShape,\n  CategoryItem, PointListItem, InstanceAct, Shapes, CurrentShapes,\n  Points, CategoryInstancesMap, KeypointCategoryProps, Frame,\n  LabelItem, LabelFormat, LabelStyle, ValidationType, Image,\n} from './types';\nimport { IWarning } from '../common/tabs-menu/Validator';\nimport { getFieldDisplayLabel } from '../../utils/form';\n\n/* eslint-disable no-param-reassign */\n\nexport function parseFrames(frames: string | string[]) {\n  return (\n    typeof frames === 'string' ?\n      (frames as string).split(',') :\n      frames\n  ).map((f, i) => ({ url: f.trim(), valid: true, index: i }));\n}\n\nexport async function parseFramesByPaylod({ frames, imageData }: { frames?: string | string[]; imageData?: Image[] }) {\n  let parsedFrames: Image[] = [];\n  if (frames) {\n    parsedFrames = parseFrames(frames);\n  }\n  if (imageData) {\n    parsedFrames = imageData.map((v, index) => (typeof v === 'string' ? {\n      url: v,\n      valid: true,\n      index,\n    } : {\n      url: v.url,\n      valid: v.valid !== undefined ? v.valid : true,\n      index,\n    }));\n  }\n  return parsedFrames;\n}\n\nexport function getValuesLabel(fields: Field[] | undefined, values: any, labelItems: LabelItem[]) {\n  let content = '';\n  if (fields && values) {\n    for (let i = 0; i < fields.length; i += 1) {\n      const { name, label, visible } = fields[i];\n      if (rootStore.setting.labelFormat === LabelFormat.DEFAULT) {\n        content = `\\n${content}`;\n      }\n      if (visible || (!visible && values[name])) {\n        if (labelItems.includes(LabelItem.ATTRIBUTE_KEYS)) {\n          content += `${label || name}: `;\n        }\n\n        if (labelItems.includes(LabelItem.ATTRIBUTE_VALUES)) {\n          content += `${getFieldDisplayLabel(values[name], fields[i]) || ''}`;\n        }\n      }\n      if (i < fields.length - 1 && content) {\n        content += ';';\n      }\n    }\n  }\n  return content;\n};\n\nexport function resetAttrLabelPosition(label: paper.Group, position: { x: number, y: number }, visible?: boolean) {\n  if (visible !== undefined) {\n    label.visible = visible;\n  }\n\n  label.position.x = position.x;\n  label.position.y = position.y;\n  if (rootStore.setting.labelStyle === LabelStyle.DEFAULT) {\n    label.children[0].position.x = position.x;\n    label.children[0].position.y = position.y;\n  }\n  label.children.slice(-1)[0].position.x = position.x;\n  label.children.slice(-1)[0].position.y = position.y;\n}\n\n// load result\nexport function loadInstancesFromResult(instances: InstanceListItem[]) {\n  const newInstances: {[id: string]: InstanceAct} = {};\n  const categoryInstancesMap: CategoryInstancesMap = {};\n  instances.forEach((instanceData) => {\n    const { category, children: defaultChildren, number } = instanceData;\n    const id = instanceData.id || uuid();\n    let notEmpty = 0;\n\n    const ontologyItem = rootStore.ontology.ontology.find((onto) => onto.class_name === category);\n    if (ontologyItem) {\n      const children = ontologyItem.children.map((group) => {\n        const groupFrames = defaultChildren.find((c) => c.name === group.name)?.frames;\n        const frames: {[frameIndex: number]: Frame} = {};\n        if (Array.isArray(groupFrames)) {\n          groupFrames.forEach((frame) => {\n            if (frame) {\n              notEmpty += frame.shapes.length;\n              const shapes: Shapes = {};\n              frame.shapes.forEach((shape: any) => {\n                if (shape) {\n                  if (group.type === LandmarkEditType.KEYPOINT) {\n                    const point = shape as PointListItem;\n                    const { index, ...rest } = point;\n                    if (index || index === 0) {\n                      const realCategory = group && Array.isArray(group.categories) && group.categories.find((c) => c.range && c.range.length === 2 && index >= c.range[0] && index <= c.range[1]);\n                      if (realCategory) {\n                        // fix pointCategory and key point info for saved data\n                        rest.pointCategory = realCategory.name;\n                        rest.isKeyPoint = realCategory.keys.includes(index);\n                        rest.visible = rest.visible !== false;\n                        (shapes as Points)[index] = rest;\n                      }\n                    }\n                  } else if (group.type === LandmarkEditType.RECTANGLE) {\n                    const rectangle = shape as Rectangle;\n                    (shapes as CurrentShapes)[rectangle.id] = rectangle;\n                  }\n                }\n              });\n              frames[frame.frameIndex] = {\n                frameIndex: frame.frameIndex,\n                count: frame.shapes.length,\n                shapes,\n                attributes: frame.attributes\n              };\n            }\n          });\n        }\n        return {\n          name: group.name,\n          shapeType: group.type,\n          count: groupFrames?.reduce((n, f) => n + (f ? f.shapes.length : 0), 0) || 0,\n          frames,\n        };\n      }) || [];\n      newInstances[id] = {\n        ...instanceData,\n        id,\n        notEmpty,\n        children\n      };\n    }\n    // add to categoryInstancesMap\n    if (!categoryInstancesMap[category]) {\n      categoryInstancesMap[category] = {};\n    }\n    categoryInstancesMap[category][id] = number;\n  });\n  return {\n    newInstances,\n    categoryInstancesMap\n  };\n}\n\nexport function getFrameShapes(instances: InstanceAct[], currentFrame: number, isRemove = false) {\n  const updateShapes: UpdatedShape[] = [];\n  const updatedCategories: KeypointCategoryProps[] = [];\n  instances.filter((v) => !!v).forEach(({ id, category, children }) => {\n    if (Array.isArray(children)) {\n      children.forEach((group) => {\n        const currentFrameGroup = group.frames[currentFrame];\n        if (currentFrameGroup) {\n          Object.keys(currentFrameGroup.shapes).forEach((key) => {\n            const shape = group.shapeType === LandmarkEditType.KEYPOINT ?\n              (currentFrameGroup.shapes as Points)[Number(key)] :\n              (currentFrameGroup.shapes as CurrentShapes)[key];\n            if (shape) {\n              const updateShape = {\n                frameIndex: currentFrame,\n                instanceId: id,\n                category,\n                groupName: group.name,\n                shape: isRemove ? undefined : shape,\n                shapeType: group.shapeType\n              };\n              if (group.shapeType === LandmarkEditType.KEYPOINT) {\n                updateShapes.push({\n                  ...updateShape,\n                  index: Number(key),\n                });\n                const { position, pointCategory, index, isKeyPoint } = shape as PointListItem;\n                if (position !== undefined && pointCategory !== undefined && index !== undefined && isKeyPoint !== undefined) {\n                  if (updatedCategories.findIndex((v) => v.pointCategory === pointCategory) < 0) {\n                    updatedCategories.push({\n                      frameIndex: currentFrame,\n                      pointCategory,\n                      instanceId: id,\n                      groupName: group.name,\n                      category\n                    });\n                  }\n                }\n              } else if (group.shapeType === LandmarkEditType.RECTANGLE) {\n                updateShapes.push({\n                  ...updateShape,\n                  id: key,\n                });\n              }\n            }\n          });\n        }\n      });\n    }\n  });\n  return {\n    updateShapes,\n    updatedCategories\n  };\n}\n\nexport function initInstances(points: PointListItem[], frameCount: number) {\n  const newPoints = points.map((point) => ({ ...point, index: point.index }));\n  const ontologyItem = rootStore.ontology.ontology.find((onto) => onto.class_name === 'Ontology');\n  const children = ontologyItem?.children.filter((group) => group.name !== 'default').map((group) => (({\n    ...group,\n    name: group.name,\n    shape_type: group.type,\n    frames: Array.from({ length: frameCount }).map((v, i) => (i === 0 ? {\n      frameIndex: i,\n      count: points.length,\n      shapes: newPoints\n    } : undefined))\n  }))) || [];\n  return [{\n    id: uuid(),\n    index: 1,\n    color: '#5cdef0',\n    ontology: 'Ontology',\n    children\n  }];\n}\n\n// init ontology\nexport function initOntology(loadOntology: OntologyItem[] | CategoryItem[]) {\n  let list:OntologyItem[] = [];\n  if ((loadOntology as OntologyItem[]).find((v) => v.class_name)) {\n    list = (loadOntology as OntologyItem[]).map((o) => ({\n      ...o,\n      children: o.children && o.children.map((child) => {\n        let groupConfig = null;\n        let pointConfig = null;\n        if (typeof child.label_config === 'string') {\n          try {\n            groupConfig = JSON.parse(Base64.decode(child.label_config));\n          } catch (e) {\n            // parse error\n          }\n        }\n        if (typeof child.point_label_config === 'string') {\n          try {\n            pointConfig = JSON.parse(Base64.decode(child.point_label_config));\n          } catch (e) {\n            // parse error\n          }\n        }\n        return {\n          ...child,\n          display_color: o.display_color || '#5cdef0',\n          lines: child.lines ? child.lines.map((v) => ({\n            ...v,\n            // points: v.points.sort((a, b) => a - b)\n            points: [...v.points],\n          })) : [],\n          label_config: groupConfig,\n          point_label_config: pointConfig\n        };\n      })\n    }));\n  } else {\n    // for older version\n    list = [\n      {\n        class_name: 'Ontology',\n        display_color: '#5cdef0',\n        children: [\n          {\n            name: 'default',\n            type: LandmarkEditType.KEYPOINT,\n            categories: ((loadOntology as CategoryItem[]).map((v) => ({ ...v, isConnect: true })) as CategoryItem[]),\n            lines: [],\n            count: (loadOntology as CategoryItem[]).reduce((total: number, pointCategory: CategoryItem) => total + (pointCategory.range[1] - pointCategory.range[0] + 1), 0),\n            reference: '',\n            label_config: null,\n            point_label_config: null,\n          }\n        ]\n      },\n    ];\n  };\n  return list;\n}\n\nexport function resizeLabel(\n  size: {width: number, height: number, zoom: number, fontSize: number},\n  oldZoom: number,\n  point: number[],\n  label: paper.Item,\n  type = 'attr'\n) {\n  if (!label || !label.children) {\n    return;\n  }\n  (label.children.slice(-1)[0] as paper.PointText).set({\n    fontSize: size.fontSize / size.zoom,\n    shadowBlur: 2 / size.zoom,\n    shadowOffset: 2 / size.zoom,\n  });\n  const scale = size.zoom / oldZoom;\n  const [x, y] = point;\n  const newWidth = size.width / scale;\n  const newHeight = size.height / scale;\n  if (rootStore.setting.labelStyle === LabelStyle.DEFAULT) {\n    (label.children[0] as paper.Shape).size.width = newWidth;\n    (label.children[0] as paper.Shape).size.height = newHeight;\n  }\n  let position = { x, y };\n  if (type === 'label') {\n    position = {\n      x: x + newWidth / 2,\n      y: y - newHeight / 2\n    };\n  }\n  resetAttrLabelPosition(label as paper.Group, position);\n}\n\nexport function getRGBAColor(displayColor?: string, alpha = 0.2) {\n  if (displayColor) {\n    return hexToRgba(displayColor, alpha);\n  }\n  return '#FFFFFF';\n};\n\nexport function getInstanceFrames(instance?: InstanceAct) {\n  const frameStatus: { [frameIndex: number]: boolean } = {};\n  if (instance) {\n    instance.children.forEach((group) => {\n      Object.values(group.frames).forEach((frame) => {\n        if (frame && frame.count > 0) {\n          frameStatus[frame.frameIndex] = false;\n        }\n      });\n    });\n  }\n  return frameStatus;\n};\n\nexport const getNextState = <S>(setState: Dispatch<SetStateAction<S>>) => new Promise<S>((resolve) => {\n  setState((preState) => {\n    resolve(preState);\n    return preState;\n  });\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}