{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/GlobalAttributes/GlobalAttributes.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { isEqual } from 'lodash';\nimport EasyForm, { utils as formUtils } from '@appen-china/easy-form';\nimport { FieldControlType } from '@appen-china/easy-form/es/types';\nimport { translate, validateForm } from '../../constants';\nimport * as actions from '../../redux/action';\nimport { isEasyformSelectDropdown } from '../../../../utils';\nimport { getFieldDisplayLabel } from '../../../../utils/form';\nimport { isAnnotationReadonly } from '../../../../utils/tool-mode';\nimport './GlobalAttributes.scss';\nclass GlobalAttributes extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.container = React.createRef();\n    this.state = {\n      editing: true,\n      fieldsMap: {}\n    };\n    this.handleClick = e => {\n      if (isEasyformSelectDropdown(e.target)) {\n        e.stopPropagation();\n        return;\n      }\n      const video = this.props.videos[this.props.currentVideo];\n      if (!this.readonly && this.container.current && video) {\n        if (this.container.current.contains(e.target)) {\n          if (!this.state.editing) {\n            video.attributes = {\n              ...video.defaultAttributes,\n              ...video.originAttributes,\n              ...video.attributes\n            };\n            this.setState({\n              editing: true\n            });\n          }\n        } else if (this.state.editing) {\n          const isValid = validateForm(this.props.globalConfig, video.attributes);\n          // collapse\n          if (isValid) {\n            this.setState({\n              editing: false\n            });\n          }\n        }\n      }\n    };\n    this.handleChange = value => {\n      this.props.setVideoAttributes({\n        index: this.props.currentVideo,\n        attributes: value\n      });\n    };\n  }\n  get readonly() {\n    return isAnnotationReadonly(this.props.toolMode);\n  }\n  componentDidMount() {\n    window.addEventListener('mousedown', this.handleClick);\n    this.setState({\n      editing: !this.readonly\n    });\n    this.updateFiledsMap();\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.currentVideo !== this.props.currentVideo) {\n      this.setState({\n        editing: !this.readonly\n      });\n    }\n    if (!isEqual(prevProps.globalConfig, this.props.globalConfig)) {\n      this.updateFiledsMap();\n    }\n  }\n  componentWillUnmount() {\n    window.removeEventListener('mousedown', this.handleClick);\n  }\n  updateFiledsMap() {\n    const {\n      fields = []\n    } = this.props.globalConfig || {};\n    const map = {};\n    fields.forEach(field => {\n      const {\n        name,\n        label,\n        type,\n        valueType,\n        options = []\n      } = field;\n      const newField = {\n        name,\n        type,\n        label\n      };\n      if (type === FieldControlType.RADIO || type === FieldControlType.SELECT || type === FieldControlType.CHECKBOX || type === FieldControlType.CASCADER) {\n        // has options\n        newField.options = formUtils.parseOptions(options, valueType);\n      }\n      map[name] = newField;\n    });\n    this.setState({\n      fieldsMap: map\n    });\n  }\n  renderAttrs(attributes) {\n    const allValues = [];\n    Object.keys(attributes).forEach(fieldName => {\n      const field = this.state.fieldsMap[fieldName];\n      const fieldValue = attributes[fieldName];\n      if (fieldValue !== undefined && fieldValue !== '') {\n        if (field === null || field === void 0 ? void 0 : field.options) {\n          const displayValue = getFieldDisplayLabel(fieldValue, field);\n          allValues.push(displayValue);\n        } else {\n          allValues.push(fieldValue.toString());\n        }\n      }\n    });\n    return allValues.join('; ');\n  }\n  render() {\n    const {\n      videos,\n      currentVideo,\n      globalConfig\n    } = this.props;\n    if (!globalConfig || !globalConfig.fields || globalConfig.fields.length === 0) {\n      // no global config\n      return null;\n    }\n    const video = videos[currentVideo];\n    if (!video || !video.ready) {\n      // no video, or video not ready\n      return null;\n    }\n    const {\n      attributes = {}\n    } = video;\n    const fields = globalConfig.fields.map(f => ({\n      ...f,\n      ...(attributes[f.name] !== undefined && {\n        defaultValue: attributes[f.name]\n      })\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.container,\n      className: \"global-attributes-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }, translate('GLOBAL_ATTR_TITLE')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }, this.state.editing ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: '#FFFFFF'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }, translate('GLOBAL_ATTR_SUBTITLE')), /*#__PURE__*/React.createElement(EasyForm, {\n      theme: \"dark\",\n      autoFocus: false,\n      fields: fields,\n      conditions: globalConfig.conditions,\n      effects: globalConfig.effects,\n      rules: globalConfig.rules,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    })) : this.renderAttrs(attributes)));\n  }\n}\nconst mapStateToProps = state => ({\n  toolMode: state.toolMode,\n  videos: state.videos,\n  currentVideo: state.currentVideo,\n  globalConfig: state.globalConfig\n});\nconst mapDispatchToProps = {\n  setVideoAttributes: actions.setVideoAttributes\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(GlobalAttributes);","map":{"version":3,"names":["React","connect","isEqual","EasyForm","utils","formUtils","FieldControlType","translate","validateForm","actions","isEasyformSelectDropdown","getFieldDisplayLabel","isAnnotationReadonly","GlobalAttributes","Component","constructor","args","container","createRef","state","editing","fieldsMap","handleClick","e","target","stopPropagation","video","props","videos","currentVideo","readonly","current","contains","attributes","defaultAttributes","originAttributes","setState","isValid","globalConfig","handleChange","value","setVideoAttributes","index","toolMode","componentDidMount","window","addEventListener","updateFiledsMap","componentDidUpdate","prevProps","componentWillUnmount","removeEventListener","fields","map","forEach","field","name","label","type","valueType","options","newField","RADIO","SELECT","CHECKBOX","CASCADER","parseOptions","renderAttrs","allValues","Object","keys","fieldName","fieldValue","undefined","displayValue","push","toString","join","render","length","ready","f","defaultValue","createElement","ref","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","style","color","theme","autoFocus","conditions","effects","rules","onChange","mapStateToProps","mapDispatchToProps"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/GlobalAttributes/GlobalAttributes.jsx"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { isEqual } from 'lodash';\nimport EasyForm, { utils as formUtils } from '@appen-china/easy-form';\nimport { FieldControlType } from '@appen-china/easy-form/es/types';\nimport { translate, validateForm } from '../../constants';\nimport * as actions from '../../redux/action';\nimport { isEasyformSelectDropdown } from '../../../../utils';\nimport { getFieldDisplayLabel } from '../../../../utils/form';\nimport { isAnnotationReadonly } from '../../../../utils/tool-mode';\nimport './GlobalAttributes.scss';\n\nclass GlobalAttributes extends React.Component {\n  container = React.createRef();\n\n  state = {\n    editing: true,\n    fieldsMap: {},\n  };\n\n  get readonly() {\n    return isAnnotationReadonly(this.props.toolMode);\n  }\n\n  componentDidMount() {\n    window.addEventListener('mousedown', this.handleClick);\n    this.setState({ editing: !this.readonly });\n    this.updateFiledsMap();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.currentVideo !== this.props.currentVideo) {\n      this.setState({ editing: !this.readonly });\n    }\n    if (!isEqual(prevProps.globalConfig, this.props.globalConfig)) {\n      this.updateFiledsMap();\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('mousedown', this.handleClick);\n  }\n\n  updateFiledsMap() {\n    const { fields = [] } = this.props.globalConfig || {};\n    const map = {};\n    fields.forEach((field) => {\n      const { name, label, type, valueType, options = [] } = field;\n      const newField = { name, type, label };\n      if (type === FieldControlType.RADIO || type === FieldControlType.SELECT || type === FieldControlType.CHECKBOX || type === FieldControlType.CASCADER) {\n        // has options\n        newField.options = formUtils.parseOptions(options, valueType);\n      }\n      map[name] = newField;\n    });\n    this.setState({ fieldsMap: map });\n  }\n\n  handleClick = (e) => {\n    if (isEasyformSelectDropdown(e.target)) {\n      e.stopPropagation();\n      return;\n    }\n    const video = this.props.videos[this.props.currentVideo];\n    if (!this.readonly && this.container.current && video) {\n      if (this.container.current.contains(e.target)) {\n        if (!this.state.editing) {\n          video.attributes = { ...video.defaultAttributes, ...video.originAttributes, ...video.attributes };\n          this.setState({ editing: true });\n        }\n      } else if (this.state.editing) {\n        const isValid = validateForm(this.props.globalConfig, video.attributes);\n        // collapse\n        if (isValid) {\n          this.setState({ editing: false });\n        }\n      }\n    }\n  };\n\n  handleChange = (value) => {\n    this.props.setVideoAttributes({ index: this.props.currentVideo, attributes: value });\n  };\n\n  renderAttrs(attributes) {\n    const allValues = [];\n    Object.keys(attributes).forEach((fieldName) => {\n      const field = this.state.fieldsMap[fieldName];\n      const fieldValue = attributes[fieldName];\n      if (fieldValue !== undefined && fieldValue !== '') {\n        if (field?.options) {\n          const displayValue = getFieldDisplayLabel(fieldValue, field);\n          allValues.push(displayValue);\n        } else {\n          allValues.push(fieldValue.toString());\n        }\n      }\n    });\n    return allValues.join('; ');\n  }\n\n  render() {\n    const { videos, currentVideo, globalConfig } = this.props;\n\n    if (!globalConfig || !globalConfig.fields || globalConfig.fields.length === 0) {\n      // no global config\n      return null;\n    }\n\n    const video = videos[currentVideo];\n    if (!video || !video.ready) {\n      // no video, or video not ready\n      return null;\n    }\n\n    const { attributes = {} } = video;\n    const fields = globalConfig.fields.map((f) => ({\n      ...f,\n      ...attributes[f.name] !== undefined && {\n        defaultValue: attributes[f.name],\n      },\n    }));\n\n    return (\n      <div ref={this.container} className=\"global-attributes-container\">\n        <div className=\"header\">\n          {translate('GLOBAL_ATTR_TITLE')}\n        </div>\n        <div className=\"content\">\n          {this.state.editing ? (\n            <>\n              <div style={{ color: '#FFFFFF' }}>{translate('GLOBAL_ATTR_SUBTITLE')}</div>\n              <EasyForm\n                theme=\"dark\"\n                autoFocus={false}\n                fields={fields}\n                conditions={globalConfig.conditions}\n                effects={globalConfig.effects}\n                rules={globalConfig.rules}\n                onChange={this.handleChange}\n              />\n            </>\n          ) : this.renderAttrs(attributes)}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  toolMode: state.toolMode,\n  videos: state.videos,\n  currentVideo: state.currentVideo,\n  globalConfig: state.globalConfig,\n});\nconst mapDispatchToProps = {\n  setVideoAttributes: actions.setVideoAttributes,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(GlobalAttributes);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}