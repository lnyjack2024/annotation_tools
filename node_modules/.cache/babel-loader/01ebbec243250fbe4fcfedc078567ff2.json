{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/multi-channel/components/Channels/index.tsx\";\nimport React from 'react';\nimport { makeObservable, toJS } from 'mobx';\nimport { observer } from 'mobx-react';\nimport Controls from './Controls';\nimport PlayControls from '../PlayControls';\nimport WaveformObserve from './Waveform';\nimport XScroll from '../ScrollControl/XScroll';\nimport store from '../../store/RootStore';\nimport { requestAnimationFrame, cancelAnimationFrame } from '../../utils';\nimport { PluginType } from '../Wave';\nimport './index.scss';\nexport class ChannelsComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    /**\n     * application dom container\n     */\n    this.scrollContainer = React.createRef();\n    /**\n     * waveform reference\n     */\n    this.waveformRef = React.createRef();\n    /**\n     * scroll\n     */\n    this.scroll = void 0;\n    this.stop = void 0;\n    this.update = () => {\n      if (this.stop) return;\n      this.stop = requestAnimationFrame(this.updatePlugins);\n    };\n    this.cancelUpdate = () => {\n      if (this.stop) {\n        cancelAnimationFrame(this.stop);\n        this.stop = null;\n        this.updatePlugins();\n      }\n    };\n    this.updatePlugins = () => {\n      if (store.waveform.isPlaying) {\n        var _this$scroll, _this$waveformRef$cur, _this$waveformRef$cur2, _this$waveformRef$cur3;\n        this.handleAudioprocess();\n        (_this$scroll = this.scroll) === null || _this$scroll === void 0 ? void 0 : _this$scroll.updateTimeline();\n        (_this$waveformRef$cur = this.waveformRef.current) === null || _this$waveformRef$cur === void 0 ? void 0 : (_this$waveformRef$cur2 = _this$waveformRef$cur.wave) === null || _this$waveformRef$cur2 === void 0 ? void 0 : (_this$waveformRef$cur3 = _this$waveformRef$cur2.plugins[PluginType.TIMELINE]) === null || _this$waveformRef$cur3 === void 0 ? void 0 : _this$waveformRef$cur3.renderTimeline();\n      }\n      if (this.stop) {\n        this.stop = requestAnimationFrame(this.updatePlugins);\n      }\n    };\n    this.handleAudioprocess = () => {\n      var _this$waveformRef$cur4;\n      if ((_this$waveformRef$cur4 = this.waveformRef.current) === null || _this$waveformRef$cur4 === void 0 ? void 0 : _this$waveformRef$cur4.wave) {\n        const currentTime = this.waveformRef.current.wave.getCurrentTime();\n        const {\n          displayTime: {\n            startTime,\n            endTime\n          },\n          displayRange: {\n            start,\n            end\n          },\n          duration\n        } = store.waveform;\n        const {\n          selectedInstance\n        } = store.instance;\n        store.waveform.setCurrentTime(currentTime);\n        if (store.waveform.autoScrollEnabled && (currentTime < startTime || currentTime > endTime)) {\n          const displayPercent = end - start;\n          let newStart = currentTime / duration;\n          let newEnd = newStart + displayPercent;\n          if (selectedInstance && (selectedInstance.start >= endTime || selectedInstance.end <= startTime)) {\n            const instanceStart = selectedInstance.start / duration;\n            const instanceEnd = selectedInstance.end / duration;\n            const center = instanceEnd - instanceStart > displayPercent ? instanceStart : (instanceEnd + instanceStart) / 2;\n            newStart = center - displayPercent / 2;\n            newEnd = newStart + displayPercent;\n          }\n          if (newEnd > 1) {\n            newEnd = 1;\n            newStart = 1 - displayPercent;\n          }\n          this.onScroll({\n            start: newStart,\n            end: newEnd\n          });\n        }\n      }\n    };\n    this.onChangSelectedInstance = (start, end) => {\n      var _this$scroll2;\n      (_this$scroll2 = this.scroll) === null || _this$scroll2 === void 0 ? void 0 : _this$scroll2.updateRegion(start, end);\n    };\n    this.onScroll = ({\n      start,\n      end\n    }) => {\n      var _this$scroll3, _this$waveformRef$cur5;\n      (_this$scroll3 = this.scroll) === null || _this$scroll3 === void 0 ? void 0 : _this$scroll3.setScroll({\n        start,\n        end\n      });\n      (_this$waveformRef$cur5 = this.waveformRef.current) === null || _this$waveformRef$cur5 === void 0 ? void 0 : _this$waveformRef$cur5.handleScroll({\n        start,\n        end\n      });\n    };\n    this.onZoom = ({\n      start,\n      end\n    }) => {\n      var _this$scroll4;\n      (_this$scroll4 = this.scroll) === null || _this$scroll4 === void 0 ? void 0 : _this$scroll4.setScroll({\n        start,\n        end\n      });\n    };\n    makeObservable(this, {});\n  }\n  componentDidMount() {\n    var _this$waveformRef$cur6, _this$waveformRef$cur7, _this$waveformRef$cur9, _this$waveformRef$cur0, _this$waveformRef$cur10, _this$waveformRef$cur11;\n    this.initScroll();\n    (_this$waveformRef$cur6 = this.waveformRef.current) === null || _this$waveformRef$cur6 === void 0 ? void 0 : (_this$waveformRef$cur7 = _this$waveformRef$cur6.wave) === null || _this$waveformRef$cur7 === void 0 ? void 0 : _this$waveformRef$cur7.on('pause', () => {\n      var _this$waveformRef$cur8;\n      this.cancelUpdate();\n      (_this$waveformRef$cur8 = this.waveformRef.current) === null || _this$waveformRef$cur8 === void 0 ? void 0 : _this$waveformRef$cur8.handlePausePlay(false);\n    });\n    (_this$waveformRef$cur9 = this.waveformRef.current) === null || _this$waveformRef$cur9 === void 0 ? void 0 : (_this$waveformRef$cur0 = _this$waveformRef$cur9.wave) === null || _this$waveformRef$cur0 === void 0 ? void 0 : _this$waveformRef$cur0.on('play', () => {\n      var _this$waveformRef$cur1;\n      this.update();\n      (_this$waveformRef$cur1 = this.waveformRef.current) === null || _this$waveformRef$cur1 === void 0 ? void 0 : _this$waveformRef$cur1.handlePausePlay(true);\n    });\n    (_this$waveformRef$cur10 = this.waveformRef.current) === null || _this$waveformRef$cur10 === void 0 ? void 0 : (_this$waveformRef$cur11 = _this$waveformRef$cur10.wave) === null || _this$waveformRef$cur11 === void 0 ? void 0 : _this$waveformRef$cur11.on('change-time', time => {\n      var _this$scroll5;\n      store.waveform.setCurrentTime(time);\n      (_this$scroll5 = this.scroll) === null || _this$scroll5 === void 0 ? void 0 : _this$scroll5.updateTimeline();\n      store.waveform.syncVideoTime();\n    });\n  }\n  initScroll() {\n    if (this.scrollContainer.current) {\n      this.scroll = new XScroll({\n        container: this.scrollContainer.current,\n        height: 20,\n        trackStyle: {\n          color: '#22262D'\n        },\n        displayRange: store.waveform.displayRange,\n        onScroll: e => {\n          store.waveform.changeAutoScroll(false);\n          this.onScroll(e);\n        }\n      });\n    }\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"channel-pannel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"channel-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Controls, {\n      channelsOptions: toJS(store.waveform.channelsOptions),\n      channelOffset: toJS(store.waveform.channelOffset),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(WaveformObserve, {\n      ref: this.waveformRef,\n      onZoom: this.onZoom,\n      onScroll: this.onScroll,\n      onChangSelectedInstance: this.onChangSelectedInstance,\n      selectedInstance: store.instance.selectedInstance,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wave-scroll-container\",\n      ref: this.scrollContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(PlayControls, {\n      currentTime: store.waveform.currentTime,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }\n    }));\n  }\n}\n;\nexport default observer(ChannelsComponent);","map":{"version":3,"names":["React","makeObservable","toJS","observer","Controls","PlayControls","WaveformObserve","XScroll","store","requestAnimationFrame","cancelAnimationFrame","PluginType","ChannelsComponent","Component","constructor","props","scrollContainer","createRef","waveformRef","scroll","stop","update","updatePlugins","cancelUpdate","waveform","isPlaying","_this$scroll","_this$waveformRef$cur","_this$waveformRef$cur2","_this$waveformRef$cur3","handleAudioprocess","updateTimeline","current","wave","plugins","TIMELINE","renderTimeline","_this$waveformRef$cur4","currentTime","getCurrentTime","displayTime","startTime","endTime","displayRange","start","end","duration","selectedInstance","instance","setCurrentTime","autoScrollEnabled","displayPercent","newStart","newEnd","instanceStart","instanceEnd","center","onScroll","onChangSelectedInstance","_this$scroll2","updateRegion","_this$scroll3","_this$waveformRef$cur5","setScroll","handleScroll","onZoom","_this$scroll4","componentDidMount","_this$waveformRef$cur6","_this$waveformRef$cur7","_this$waveformRef$cur9","_this$waveformRef$cur0","_this$waveformRef$cur10","_this$waveformRef$cur11","initScroll","on","_this$waveformRef$cur8","handlePausePlay","_this$waveformRef$cur1","time","_this$scroll5","syncVideoTime","container","height","trackStyle","color","e","changeAutoScroll","render","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","channelsOptions","channelOffset","ref"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/multi-channel/components/Channels/index.tsx"],"sourcesContent":["import React from 'react';\nimport { makeObservable, toJS } from 'mobx';\nimport { observer } from 'mobx-react';\nimport Controls from './Controls';\nimport PlayControls from '../PlayControls';\nimport WaveformObserve, { Waveform } from './Waveform';\nimport XScroll from '../ScrollControl/XScroll';\nimport store from '../../store/RootStore';\nimport { requestAnimationFrame, cancelAnimationFrame } from '../../utils';\nimport { PluginType } from '../Wave';\nimport { Range } from '../../types';\nimport './index.scss';\n\nexport class ChannelsComponent extends React.Component {\n  /**\n   * application dom container\n   */\n  scrollContainer: React.RefObject<HTMLDivElement> = React.createRef();\n\n  /**\n   * waveform reference\n   */\n  waveformRef = React.createRef<Waveform>();\n\n  /**\n   * scroll\n   */\n  scroll?: XScroll;\n\n  stop: any;\n\n  constructor(props: any) {\n    super(props);\n    makeObservable(this, {});\n  }\n\n  componentDidMount() {\n    this.initScroll();\n\n    this.waveformRef.current?.wave?.on('pause', () => {\n      this.cancelUpdate();\n      this.waveformRef.current?.handlePausePlay(false);\n    });\n    this.waveformRef.current?.wave?.on('play', () => {\n      this.update();\n      this.waveformRef.current?.handlePausePlay(true);\n    });\n    this.waveformRef.current?.wave?.on('change-time', (time: number) => {\n      store.waveform.setCurrentTime(time);\n      this.scroll?.updateTimeline();\n      store.waveform.syncVideoTime();\n    });\n  }\n\n  initScroll() {\n    if (this.scrollContainer.current) {\n      this.scroll = new XScroll({\n        container: this.scrollContainer.current,\n        height: 20,\n        trackStyle: {\n          color: '#22262D',\n        },\n        displayRange: store.waveform.displayRange,\n        onScroll: (e: Range) => {\n          store.waveform.changeAutoScroll(false);\n          this.onScroll(e);\n        }\n      });\n    }\n  }\n\n  update = () => {\n    if (this.stop) return;\n    this.stop = requestAnimationFrame(this.updatePlugins);\n  };\n\n  cancelUpdate = () => {\n    if (this.stop) {\n      cancelAnimationFrame(this.stop);\n      this.stop = null;\n      this.updatePlugins();\n    }\n  };\n\n  updatePlugins = () => {\n    if (store.waveform.isPlaying) {\n      this.handleAudioprocess();\n      this.scroll?.updateTimeline();\n      this.waveformRef.current?.wave?.plugins[PluginType.TIMELINE]?.renderTimeline();\n    }\n    if (this.stop) {\n      this.stop = requestAnimationFrame(this.updatePlugins);\n    }\n  };\n\n  handleAudioprocess = () => {\n    if (this.waveformRef.current?.wave) {\n      const currentTime = this.waveformRef.current.wave.getCurrentTime();\n      const {\n        displayTime: { startTime, endTime },\n        displayRange: { start, end },\n        duration,\n      } = store.waveform;\n      const { selectedInstance } = store.instance;\n      store.waveform.setCurrentTime(currentTime);\n      if (\n        store.waveform.autoScrollEnabled\n        && (currentTime < startTime || currentTime > endTime)\n      ) {\n        const displayPercent = end - start;\n        let newStart = currentTime / duration;\n        let newEnd = newStart + displayPercent;\n\n        if (selectedInstance && (selectedInstance.start >= endTime || selectedInstance.end <= startTime)) {\n          const instanceStart = selectedInstance.start / duration;\n          const instanceEnd = selectedInstance.end / duration;\n          const center = (instanceEnd - instanceStart) > displayPercent ? instanceStart : (instanceEnd + instanceStart) / 2;\n          newStart = center - displayPercent / 2;\n          newEnd = newStart + displayPercent;\n        }\n\n        if (newEnd > 1) {\n          newEnd = 1;\n          newStart = 1 - displayPercent;\n        }\n        this.onScroll({ start: newStart, end: newEnd });\n      }\n    }\n  };\n\n  onChangSelectedInstance = (start?: number, end?: number) => {\n    this.scroll?.updateRegion(start, end);\n  };\n\n  onScroll = ({ start, end }: Range) => {\n    this.scroll?.setScroll({ start, end });\n    this.waveformRef.current?.handleScroll({ start, end });\n  };\n\n  onZoom = ({ start, end }: Range) => {\n    this.scroll?.setScroll({ start, end });\n  };\n\n  render() {\n    return (\n      <div className=\"channel-pannel\">\n        <div className=\"channel-main\">\n          <Controls\n            channelsOptions={toJS(store.waveform.channelsOptions)}\n            channelOffset={toJS(store.waveform.channelOffset)}\n          />\n          <WaveformObserve\n            ref={this.waveformRef}\n            onZoom={this.onZoom}\n            onScroll={this.onScroll}\n            onChangSelectedInstance={this.onChangSelectedInstance}\n            selectedInstance={store.instance.selectedInstance}\n          />\n        </div>\n        <div className=\"wave-scroll-container\" ref={this.scrollContainer} />\n        <PlayControls\n          currentTime={store.waveform.currentTime}\n        />\n      </div>\n    );\n  }\n};\n\nexport default observer(ChannelsComponent);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}