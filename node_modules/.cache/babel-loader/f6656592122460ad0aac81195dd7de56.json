{"ast":null,"code":"/*!\n * @pixi/mixin-get-child-by-name - v6.2.2\n * Compiled Wed, 26 Jan 2022 16:23:27 UTC\n *\n * @pixi/mixin-get-child-by-name is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { DisplayObject, Container } from '@pixi/display';\n\n/**\n * The instance name of the object.\n *\n * @memberof PIXI.DisplayObject#\n * @member {string} name\n */\nDisplayObject.prototype.name = null;\n/**\n * Returns the display object in the container.\n *\n * Recursive searches are done in a preorder traversal.\n *\n * @method getChildByName\n * @memberof PIXI.Container#\n * @param {string} name - Instance name.\n * @param {boolean}[deep=false] - Whether to search recursively\n * @return {PIXI.DisplayObject} The child with the specified name.\n */\nContainer.prototype.getChildByName = function getChildByName(name, deep) {\n  for (var i = 0, j = this.children.length; i < j; i++) {\n    if (this.children[i].name === name) {\n      return this.children[i];\n    }\n  }\n  if (deep) {\n    for (var i = 0, j = this.children.length; i < j; i++) {\n      var child = this.children[i];\n      if (!child.getChildByName) {\n        continue;\n      }\n      var target = this.children[i].getChildByName(name, true);\n      if (target) {\n        return target;\n      }\n    }\n  }\n  return null;\n};","map":{"version":3,"sources":["../../src/index.ts"],"names":[],"mappings":";;;;;;;;;AAEA;;;;;;AAMA,aAAa,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI;AAEnC;;;;;;;;;;;AAWA,SAAS,CAAC,SAAS,CAAC,cAAc,GAAG,SAAS,cAAc,CAAC,IAAY,EAAE,IAAc,EAAA;EAErF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EACpD;IACI,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,EAClC;MACI,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC1B;EACJ;EAED,IAAI,IAAI,EACR;IACI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EACpD;MACI,IAAM,KAAK,GAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAe;MAE7C,IAAI,CAAC,KAAK,CAAC,cAAc,EACzB;QACI;MACH;MAED,IAAM,MAAM,GAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAe,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC;MAEzE,IAAI,MAAM,EACV;QACI,OAAO,MAAM;MAChB;IACJ;EACJ;EAED,OAAO,IAAI;AACf,CAAC","sourcesContent":["import { DisplayObject, Container } from '@pixi/display';\n\n/**\n * The instance name of the object.\n *\n * @memberof PIXI.DisplayObject#\n * @member {string} name\n */\nDisplayObject.prototype.name = null;\n\n/**\n * Returns the display object in the container.\n *\n * Recursive searches are done in a preorder traversal.\n *\n * @method getChildByName\n * @memberof PIXI.Container#\n * @param {string} name - Instance name.\n * @param {boolean}[deep=false] - Whether to search recursively\n * @return {PIXI.DisplayObject} The child with the specified name.\n */\nContainer.prototype.getChildByName = function getChildByName(name: string, deep?: boolean): DisplayObject\n{\n    for (let i = 0, j = this.children.length; i < j; i++)\n    {\n        if (this.children[i].name === name)\n        {\n            return this.children[i];\n        }\n    }\n\n    if (deep)\n    {\n        for (let i = 0, j = this.children.length; i < j; i++)\n        {\n            const child = (this.children[i] as Container);\n\n            if (!child.getChildByName)\n            {\n                continue;\n            }\n\n            const target = (this.children[i] as Container).getChildByName(name, true);\n\n            if (target)\n            {\n                return target;\n            }\n        }\n    }\n\n    return null;\n};\n"]},"metadata":{},"sourceType":"module"}