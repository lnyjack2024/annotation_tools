{"ast":null,"code":"import _applyDecoratedDescriptor from \"/Users/qzheng/Documents/webroot/annotation_tools/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nvar _class;\nimport { observable, computed, action, makeObservable, toJS } from 'mobx';\nimport { v4 as uuid } from 'uuid';\nimport { AnnotationType } from '../types';\nlet AtlasStore = (_class = class AtlasStore {\n  get oneTierHeight() {\n    return this.placement.tierHeight / this.rootStore.ontology.categories.length;\n  }\n  constructor(rootStore) {\n    this.rootStore = void 0;\n    /**\n     * curve visibility\n     */\n    this.visible = {\n      spectrogram: true,\n      pitch: true,\n      formant: true,\n      intensity: true\n    };\n    /**\n     * analyse sampleRate\n     */\n    this.sampleRate = 10000;\n    this.placement = {\n      margin: 69,\n      // atlas start position\n      analyserHeight: 0,\n      // analyser window height\n      atlasWidth: 0,\n      // atlas window width\n      timelineHeight: 24,\n      // timeline height\n      atlasHeight: 320,\n      // atlas window height\n      tierHeight: 240,\n      // tier window height\n      timeControlHeight: 78,\n      // time controller height\n      timeControlTopGap: 12,\n      // gap at the top of the time controller\n      scalerHeight: 32,\n      // scaler height\n      duration: 0 // audio duration\n    };\n    /**\n     * tiers\n     */\n    this.tiers = {};\n    /**\n     * audiobuffer\n     */\n    this.audioBuffer = void 0;\n    /**\n     * anaylse duration threshold/second\n     */\n    this.threshold = 20;\n    /**\n     * draw atlas end\n     */\n    this.isDrawAtlasEnd = false;\n    /**\n     * waveform display range/precent\n     */\n    this.displayBuffer = {\n      start: 0,\n      end: 1,\n      precent: 1\n    };\n    /**\n     * selected region\n     */\n    this.selectedRegion = null;\n    /**\n     * selected time\n     */\n    this.selectedTime = null;\n    /**\n     * waveform value range\n     */\n    this.amplitude = {\n      min: 0,\n      max: 0\n    };\n    /**\n     * intensity value range\n     */\n    this.intensityRange = {\n      min: 0,\n      max: 0\n    };\n    /**\n     * play duration\n     */\n    this.seekto = null;\n    /**\n     * cursor time\n     */\n    this.cursorTime = 0;\n    this.setAudioBuffer = buffer => {\n      this.audioBuffer = buffer;\n    };\n    this.setDuration = duration => {\n      this.updatePlacement({\n        duration\n      });\n      if (Object.keys(this.tiers).length === 0) {\n        const tiers = {};\n        this.rootStore.ontology.categories.forEach(({\n          className,\n          type\n        }) => {\n          tiers[className] = type === AnnotationType.TIMING ? [] : [{\n            id: uuid(),\n            category: className\n          }];\n        });\n        this.initTier(tiers);\n        this.rootStore.instance.createDefaultInstances();\n      }\n    };\n    // set curcve visiblity\n    this.setCurveVisible = curve => {\n      const visible = toJS(this.visible);\n      visible[curve] = !this.visible[curve];\n      this.visible = visible;\n    };\n    this.setIsDrawAtlasEnd = end => {\n      this.isDrawAtlasEnd = end;\n    };\n    this.updatePlacement = data => {\n      this.placement = {\n        ...toJS(this.placement),\n        ...data\n      };\n    };\n    // set atlas value range\n    this.setAmplitudeRange = range => {\n      this.amplitude = range;\n    };\n    makeObservable(this, {\n      visible: observable,\n      isDrawAtlasEnd: observable,\n      placement: observable,\n      amplitude: observable,\n      tiers: observable,\n      displayBuffer: observable,\n      selectedRegion: observable,\n      selectedTime: observable,\n      seekto: observable,\n      setDisplayBuffer: action,\n      setCurveVisible: action,\n      setIsDrawAtlasEnd: action,\n      setAmplitudeRange: action,\n      updatePlacement: action,\n      initTier: action,\n      setSelectedRegion: action,\n      setSelectedTime: action,\n      setSeekto: action\n    });\n    this.rootStore = rootStore;\n  }\n  setDisplayBuffer(bufferSize) {\n    this.displayBuffer = bufferSize;\n  }\n  initTier(tiers) {\n    this.tiers = tiers;\n  }\n  /**\n   * set selected region\n   */\n  setSelectedRegion(region) {\n    this.selectedRegion = region;\n    if (region !== null) {\n      this.selectedTime = null;\n    }\n  }\n\n  /**\n   * set selected time\n   */\n  setSelectedTime(time) {\n    this.selectedTime = time;\n    if (time !== null) {\n      this.selectedRegion = null;\n    }\n  }\n\n  /**\n   * set seekto\n   */\n  setSeekto(seekto) {\n    this.seekto = seekto;\n  }\n  setCursorTime(time) {\n    this.cursorTime = time;\n  }\n}, _applyDecoratedDescriptor(_class.prototype, \"oneTierHeight\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"oneTierHeight\"), _class.prototype), _class);\nexport default AtlasStore;","map":{"version":3,"names":["observable","computed","action","makeObservable","toJS","v4","uuid","AnnotationType","AtlasStore","_class","oneTierHeight","placement","tierHeight","rootStore","ontology","categories","length","constructor","visible","spectrogram","pitch","formant","intensity","sampleRate","margin","analyserHeight","atlasWidth","timelineHeight","atlasHeight","timeControlHeight","timeControlTopGap","scalerHeight","duration","tiers","audioBuffer","threshold","isDrawAtlasEnd","displayBuffer","start","end","precent","selectedRegion","selectedTime","amplitude","min","max","intensityRange","seekto","cursorTime","setAudioBuffer","buffer","setDuration","updatePlacement","Object","keys","forEach","className","type","TIMING","id","category","initTier","instance","createDefaultInstances","setCurveVisible","curve","setIsDrawAtlasEnd","data","setAmplitudeRange","range","setDisplayBuffer","setSelectedRegion","setSelectedTime","setSeekto","bufferSize","region","time","setCursorTime","_applyDecoratedDescriptor","prototype","getOwnPropertyDescriptor"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/phonetic-transcription/store/AnalyseStore.ts"],"sourcesContent":["import { observable, computed, action, makeObservable, toJS } from 'mobx';\nimport { v4 as uuid } from 'uuid';\nimport { RootStoreType } from './RootStore';\nimport { DisplayBuffer, CurveType, Tier, AnnotationType } from '../types';\n\nclass AtlasStore {\n  rootStore: RootStoreType;\n\n  /**\n   * curve visibility\n   */\n  visible: { [key: string]: boolean } = {\n    spectrogram: true,\n    pitch: true,\n    formant: true,\n    intensity: true\n  };\n\n  /**\n   * analyse sampleRate\n   */\n  sampleRate = 10000;\n\n  placement: {[key: string]: number} = {\n    margin: 69, // atlas start position\n    analyserHeight: 0, // analyser window height\n    atlasWidth: 0, // atlas window width\n    timelineHeight: 24, // timeline height\n    atlasHeight: 320, // atlas window height\n    tierHeight: 240, // tier window height\n    timeControlHeight: 78, // time controller height\n    timeControlTopGap: 12, // gap at the top of the time controller\n    scalerHeight: 32, // scaler height\n    duration: 0, // audio duration\n  };\n\n  /**\n   * tiers\n   */\n  tiers: {[key: string]: Tier[]} = {};\n\n  /**\n   * audiobuffer\n   */\n  audioBuffer?: AudioBuffer;\n\n  /**\n   * anaylse duration threshold/second\n   */\n  threshold = 20;\n\n  /**\n   * draw atlas end\n   */\n  isDrawAtlasEnd = false;\n\n  /**\n   * waveform display range/precent\n   */\n  displayBuffer: DisplayBuffer = {\n    start: 0,\n    end: 1,\n    precent: 1,\n  };\n\n  /**\n   * selected region\n   */\n  selectedRegion: null | {start: number; end: number} = null;\n\n  /**\n   * selected time\n   */\n  selectedTime: null | number = null;\n\n  /**\n   * waveform value range\n   */\n  amplitude: {min: number, max: number} = { min: 0, max: 0 };\n\n  /**\n   * intensity value range\n   */\n  intensityRange: {min: number, max: number} = { min: 0, max: 0 };\n\n  /**\n   * play duration\n   */\n  seekto: { start: number; end?: number; } | null = null;\n\n  /**\n   * cursor time\n   */\n  cursorTime = 0;\n\n  @computed get oneTierHeight() {\n    return this.placement.tierHeight / this.rootStore.ontology.categories.length;\n  }\n\n  constructor(rootStore: RootStoreType) {\n    makeObservable(this, {\n      visible: observable,\n      isDrawAtlasEnd: observable,\n      placement: observable,\n      amplitude: observable,\n      tiers: observable,\n      displayBuffer: observable,\n      selectedRegion: observable,\n      selectedTime: observable,\n      seekto: observable,\n      setDisplayBuffer: action,\n      setCurveVisible: action,\n      setIsDrawAtlasEnd: action,\n      setAmplitudeRange: action,\n      updatePlacement: action,\n      initTier: action,\n      setSelectedRegion: action,\n      setSelectedTime: action,\n      setSeekto: action,\n    });\n    this.rootStore = rootStore;\n  };\n\n  setDisplayBuffer(bufferSize: DisplayBuffer) {\n    this.displayBuffer = bufferSize;\n  };\n\n  setAudioBuffer = (buffer: AudioBuffer) => {\n    this.audioBuffer = buffer;\n  };\n\n  setDuration = (duration: number) => {\n    this.updatePlacement({ duration });\n    if (Object.keys(this.tiers).length === 0) {\n      const tiers: {[key: string]: Tier[]} = {};\n      this.rootStore.ontology.categories.forEach(({ className, type }) => {\n        tiers[className] = type === AnnotationType.TIMING ? [] : [{\n          id: uuid(),\n          category: className\n        }];\n      });\n      this.initTier(tiers);\n      this.rootStore.instance.createDefaultInstances();\n    }\n  };\n\n  // set curcve visiblity\n  setCurveVisible = (curve: CurveType) => {\n    const visible = toJS(this.visible);\n    visible[curve] = !this.visible[curve];\n    this.visible = visible;\n  };\n\n  setIsDrawAtlasEnd = (end: boolean) => {\n    this.isDrawAtlasEnd = end;\n  };\n\n  updatePlacement = (data: {[key: string]: number}) => {\n    this.placement = {\n      ...toJS(this.placement),\n      ...data,\n    };\n  };\n\n  // set atlas value range\n  setAmplitudeRange = (range: { min: number, max: number }) => {\n    this.amplitude = range;\n  };\n\n  initTier(tiers: {[key: string]: Tier[]}) {\n    this.tiers = tiers;\n  };\n\n  /**\n   * set selected region\n   */\n  setSelectedRegion(region: {start: number; end: number} | null) {\n    this.selectedRegion = region;\n    if (region !== null) {\n      this.selectedTime = null;\n    }\n  }\n\n  /**\n   * set selected time\n   */\n  setSelectedTime(time: number | null) {\n    this.selectedTime = time;\n    if (time !== null) {\n      this.selectedRegion = null;\n    }\n  }\n\n  /**\n   * set seekto\n   */\n  setSeekto(seekto: {start:number; end?: number;} | null) {\n    this.seekto = seekto;\n  }\n\n  setCursorTime(time: number) {\n    this.cursorTime = time;\n  }\n}\n\nexport default AtlasStore;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}