{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking2/components/move/MovingModal.tsx\";\nimport React from 'react';\nimport { makeObservable, observable, computed, action, reaction } from 'mobx';\nimport { observer } from 'mobx-react';\nimport { Col, Row, Select, Radio, Button, Form } from 'antd';\nimport { cloneDeep } from 'lodash';\nimport Modal from '../../../common/modal/Modal';\nimport TargetAttributes from './TargetAttributes';\nimport { ShapeType } from '../../../common/shapes/types';\nimport store from '../../store/RootStore';\nimport i18n from '../../locales';\nimport { formatFrames, getShapeTypeByTool } from '../../utils';\nimport { Tool } from '../../types';\nimport './MovingModal.scss';\nclass MovingModal extends React.Component {\n  /**\n   * supported category items can be selected\n   */\n  get supportedCategoryItems() {\n    if (!this.categoryName) {\n      return [];\n    }\n    const category = store.ontology.getCategory(this.categoryName);\n    if (!category || !category.children) {\n      return [];\n    }\n    return category.children.filter(c => this.isCategoryItemValid(c));\n  }\n\n  /**\n   * supported instances can be selected\n   */\n  get supportedInstances() {\n    if (!this.categoryName || !this.itemName) {\n      return [];\n    }\n    const categoryInstances = store.instance.categoryInstancesMap[this.categoryName];\n    if (!categoryInstances) {\n      return [];\n    }\n    const category = store.ontology.getCategory(this.categoryName);\n    const categoryItem = store.ontology.getCategoryItem(this.categoryName, this.itemName);\n    if (!category || !categoryItem) {\n      return [];\n    }\n    const filteredChildren = category.children.filter(c => this.isCategoryItemValid(c) && c.name !== this.itemName);\n    const {\n      selectedInstances,\n      selectedInstanceItems\n    } = store.instance;\n    const selectedInstance = selectedInstances[0];\n    const selectedInstanceItem = selectedInstanceItems[0];\n    return categoryInstances.filter(instance => {\n      if (categoryItem.count === 1 || categoryItem.maxCount === 1) {\n        // because we can overwrite target item, so, just self can't be selected\n        if ((selectedInstance === null || selectedInstance === void 0 ? void 0 : selectedInstance.id) === instance.id && (selectedInstanceItem === null || selectedInstanceItem === void 0 ? void 0 : selectedInstanceItem.name) === categoryItem.name) {\n          // selected instance item is just the category item to be move\n          return false;\n        }\n        if (filteredChildren.length > 0) {\n          // has other category items can be moved to\n          return true;\n        }\n        return instance.id !== (selectedInstance === null || selectedInstance === void 0 ? void 0 : selectedInstance.id);\n      }\n      return true;\n    });\n  }\n\n  /**\n   * supported instance items can be selected\n   */\n  get supportedInstanceItems() {\n    if (!this.categoryName || !this.itemName || !this.instanceId) {\n      return [];\n    }\n    if (this.instanceId === 'new') {\n      return ['new'];\n    }\n    const categoryItem = store.ontology.getCategoryItem(this.categoryName, this.itemName);\n    if (!categoryItem) {\n      return [];\n    }\n    const selectedInstanceItem = store.instance.selectedInstanceItems[0];\n    const instance = store.instance.getInstanceById(this.instanceId);\n    const items = instance.getItemsByName(this.itemName);\n    const instanceItems = [];\n    if (categoryItem.count !== undefined) {\n      if (items.length < categoryItem.count) {\n        instanceItems.push('new');\n      }\n    } else if (categoryItem.maxCount !== undefined && items.length < categoryItem.maxCount) {\n      instanceItems.push('new');\n    } else {\n      instanceItems.push('new');\n    }\n    items.forEach(item => {\n      if (item.id !== (selectedInstanceItem === null || selectedInstanceItem === void 0 ? void 0 : selectedInstanceItem.id)) {\n        instanceItems.push(item);\n      }\n    });\n    return instanceItems;\n  }\n\n  /**\n   * all overlapping frames\n   */\n  get allOverlappingFrames() {\n    if (this.itemId && this.itemId !== 'new') {\n      const {\n        currentCamera\n      } = store.frame;\n      const targetInstance = store.instance.getInstanceById(this.instanceId);\n      const targetInstanceItem = targetInstance.items[this.itemId];\n      return this.currentFrames.filter(frameIndex => {\n        var _targetInstanceItem$c;\n        return !!((_targetInstanceItem$c = targetInstanceItem.cameras[currentCamera]) === null || _targetInstanceItem$c === void 0 ? void 0 : _targetInstanceItem$c.frames[frameIndex]);\n      });\n    }\n    return [];\n  }\n\n  /**\n   * following overlapping frames (based on current frame)\n   */\n  get followingOverlappingFrames() {\n    const {\n      currentFrame\n    } = store.frame;\n    const index = this.allOverlappingFrames.findIndex(frame => frame >= currentFrame);\n    return index >= 0 ? this.allOverlappingFrames.slice(index) : [];\n  }\n  constructor(props) {\n    super(props);\n    /**\n     * reaction disposer\n     */\n    this.reactionDisposer = void 0;\n    /**\n     * selected category name\n     */\n    this.categoryName = '';\n    /**\n     * category name error\n     */\n    this.categoryNameError = '';\n    /**\n     * selected instance item name\n     */\n    this.itemName = '';\n    /**\n     * item name error\n     */\n    this.itemNameError = '';\n    /**\n     * selected instance id\n     */\n    this.instanceId = '';\n    /**\n     * instance id error\n     */\n    this.instanceIdError = '';\n    /**\n     * selected instance item id\n     */\n    this.itemId = '';\n    /**\n     * item id error\n     */\n    this.itemIdError = '';\n    /**\n     * apply type\n     */\n    this.applyType = 'current';\n    /**\n     * moving instance item current shape type\n     */\n    this.currentShapeType = void 0;\n    /**\n     * moving instance item current isOCR\n     */\n    this.currentIsOCR = void 0;\n    /**\n     * moving instance item current isFormula\n     */\n    this.currentIsFormula = void 0;\n    /**\n     * moving instance item current all frames\n     */\n    this.currentFrames = [];\n    /**\n     * attributes form count\n     */\n    this.submitCount = 0;\n    /**\n     * attributes form values\n     */\n    this.attrValues = [];\n    /**\n     * attributes container ref\n     */\n    this.attrRef = React.createRef();\n    this.checkFinished = valuesItem => {\n      this.submitCount -= 1;\n      this.attrValues.push(valuesItem);\n      if (this.submitCount === 0) {\n        let newInstanceAttr;\n        let newDynamicInstanceAttr;\n        let newInstanceItemAttr;\n        this.attrValues.forEach(({\n          type,\n          values\n        }) => {\n          if (type === 'instance') {\n            newInstanceAttr = values;\n          } else if (type === 'dynamicInstance') {\n            const affectedFrames = this.getAffectedFrames(this.applyType);\n            newDynamicInstanceAttr = affectedFrames.map(frameIndex => ({\n              frameIndex,\n              attributes: values\n            }));\n          } else if (type === 'instance-item') {\n            newInstanceItemAttr = values;\n          }\n        });\n        this.attrValues = [];\n        this.finish(newInstanceAttr, newDynamicInstanceAttr, newInstanceItemAttr);\n      }\n    };\n    makeObservable(this, {\n      categoryName: observable,\n      categoryNameError: observable,\n      itemName: observable,\n      itemNameError: observable,\n      instanceId: observable,\n      instanceIdError: observable,\n      itemId: observable,\n      itemIdError: observable,\n      applyType: observable,\n      // currentShapeType: observable,\n      // currentIsOCR: observable,\n      currentFrames: observable,\n      supportedCategoryItems: computed,\n      supportedInstances: computed,\n      supportedInstanceItems: computed,\n      allOverlappingFrames: computed,\n      followingOverlappingFrames: computed,\n      setCategory: action.bound,\n      setInstanceId: action.bound,\n      setItemName: action.bound,\n      setItemId: action.bound,\n      setApplyType: action.bound,\n      handleSave: action.bound\n    });\n    this.reactionDisposer = reaction(() => store.config.movingModalVisible, visible => {\n      this.categoryName = '';\n      this.categoryNameError = '';\n      this.itemName = '';\n      this.itemNameError = '';\n      this.instanceId = '';\n      this.instanceIdError = '';\n      this.itemId = '';\n      this.itemIdError = '';\n      this.applyType = 'current';\n      if (visible && store.instance.isSingleSelected) {\n        const selectedInstanceItem = store.instance.selectedInstanceItems[0];\n        const {\n          currentCamera,\n          currentFrame\n        } = store.frame;\n        const {\n          frames = {}\n        } = selectedInstanceItem.cameras[currentCamera] || {};\n        const {\n          shapeType,\n          isOCR,\n          isFormula\n        } = frames[currentFrame];\n        this.currentShapeType = shapeType;\n        this.currentIsOCR = isOCR;\n        this.currentIsFormula = isFormula;\n        this.currentFrames = Object.values(frames).map(({\n          frameIndex\n        }) => frameIndex);\n      }\n    });\n  }\n  componentWillUnmount() {\n    this.reactionDisposer();\n  }\n  isCategoryItemValid(categoryItem) {\n    const {\n      tools\n    } = categoryItem;\n    const toolTypes = tools.map(t => t.type);\n    if (this.currentIsOCR) {\n      return toolTypes.includes(Tool.OCR) && this.currentShapeType === ShapeType.RECTANGLE || toolTypes.includes(Tool.OCR_POLYGON) && this.currentShapeType === ShapeType.POLYGON;\n    }\n    if (this.currentIsFormula) {\n      return toolTypes.includes(Tool.FORMULA_POLYGON) && this.currentShapeType === ShapeType.POLYGON;\n    }\n    const shapeTypes = tools.map(tool => getShapeTypeByTool(tool.type));\n    return shapeTypes.includes(this.currentShapeType);\n  }\n  getAffectedFrames(type) {\n    const {\n      currentFrame\n    } = store.frame;\n    if (type === 'current') {\n      return [currentFrame];\n    }\n    if (type === 'following') {\n      return this.currentFrames.slice(this.currentFrames.indexOf(currentFrame));\n    }\n    if (type === 'all') {\n      return [...this.currentFrames];\n    }\n    return [];\n  }\n  setCategory(category) {\n    this.categoryNameError = '';\n    this.categoryName = category;\n    this.itemName = '';\n    this.instanceId = '';\n    this.itemId = '';\n    this.applyType = 'current';\n    const {\n      children = []\n    } = store.ontology.getCategory(category) || {};\n    if (children.every(child => !this.isCategoryItemValid(child))) {\n      this.categoryNameError = i18n.translate('MOVE_ERROR_CATEGORY');\n    }\n  }\n  setItemName(item) {\n    this.itemNameError = '';\n    this.itemName = item;\n    this.instanceId = '';\n    this.itemId = '';\n    this.applyType = 'current';\n  }\n  setInstanceId(id) {\n    this.instanceIdError = '';\n    this.instanceId = id;\n    this.itemId = '';\n    this.applyType = 'current';\n  }\n  setItemId(id) {\n    this.itemIdError = '';\n    this.itemId = id;\n    this.applyType = 'current';\n  }\n  setApplyType(type) {\n    this.applyType = type;\n  }\n  handleSave() {\n    var _this$attrRef$current;\n    if (!this.categoryName) {\n      this.categoryNameError = i18n.translate('MOVE_ERROR_NO_CATEGORY');\n    }\n    if (!this.itemName) {\n      this.itemNameError = i18n.translate('MOVE_ERROR_NO_CATEGORY_ITEM');\n    }\n    if (this.categoryNameError || this.itemNameError) {\n      return;\n    }\n    if (!this.instanceId) {\n      this.instanceIdError = i18n.translate('MOVE_ERROR_NO_INSTANCE');\n    }\n    if (!this.itemId) {\n      this.itemIdError = i18n.translate('MOVE_ERROR_NO_ITEM');\n    }\n    if (this.instanceIdError || this.itemIdError) {\n      return;\n    }\n    this.submitCount = 0;\n    const buttons = (_this$attrRef$current = this.attrRef.current) === null || _this$attrRef$current === void 0 ? void 0 : _this$attrRef$current.getButtons();\n    if (buttons && buttons.length > 0) {\n      buttons.forEach(btn => {\n        this.submitCount += 1;\n        btn.click();\n      });\n    } else {\n      this.finish();\n    }\n  }\n  finish(newInstanceAttr, newDynamicInstanceAttr, newInstanceItemAttr) {\n    var _selectedInstanceItem;\n    const selectedInstanceItem = store.instance.selectedInstanceItems[0];\n    const {\n      currentCamera\n    } = store.frame;\n    const affectedFrames = this.getAffectedFrames(this.applyType);\n    const cameraDynamicAttributes = (_selectedInstanceItem = selectedInstanceItem.instance.dynamicAttributes) === null || _selectedInstanceItem === void 0 ? void 0 : _selectedInstanceItem[currentCamera];\n    if (cameraDynamicAttributes && !newInstanceItemAttr) {\n      newDynamicInstanceAttr = Object.keys(cameraDynamicAttributes).map(frameIndexStr => {\n        var _cameraDynamicAttribu;\n        const frameIndex = Number(frameIndexStr);\n        return {\n          frameIndex,\n          attributes: cloneDeep((_cameraDynamicAttribu = cameraDynamicAttributes[frameIndex]) === null || _cameraDynamicAttribu === void 0 ? void 0 : _cameraDynamicAttribu.attributes)\n        };\n      });\n    }\n    store.instance.moveInstanceItem(this.categoryName, this.itemName, this.instanceId, this.itemId, affectedFrames, newDynamicInstanceAttr, newInstanceAttr, newInstanceItemAttr);\n    store.config.setMovingModalVisible(false);\n  }\n  render() {\n    if (!store.config.movingModalVisible || !store.instance.isSingleSelected) {\n      return null;\n    }\n    const selectedInstanceItem = store.instance.selectedInstanceItems[0];\n    return /*#__PURE__*/React.createElement(Modal, {\n      className: \"instance-move\",\n      visible: true,\n      title: i18n.translate('MOVE_TITLE'),\n      onClose: () => store.config.setMovingModalVisible(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginBottom: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }\n    }, i18n.translate('MOVE_TO_LABEL', {\n      values: {\n        object: selectedInstanceItem.label\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"instance-move-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }\n    }, i18n.translate('MOVE_CLASS_LABEL')), /*#__PURE__*/React.createElement(Row, {\n      gutter: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, this.categoryNameError && {\n      validateStatus: 'error',\n      help: this.categoryNameError\n    }, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      value: this.categoryName,\n      onChange: this.setCategory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 15\n      }\n    }, store.ontology.categories.map(c => /*#__PURE__*/React.createElement(Select.Option, {\n      key: c.className,\n      value: c.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 19\n      }\n    }, c.displayName))))), /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, this.itemNameError && {\n      validateStatus: 'error',\n      help: this.itemNameError\n    }, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      value: this.itemName,\n      onChange: this.setItemName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 15\n      }\n    }, this.supportedCategoryItems.map(c => /*#__PURE__*/React.createElement(Select.Option, {\n      key: c.name,\n      value: c.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 19\n      }\n    }, c.name)))))), this.itemName && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"instance-move-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 13\n      }\n    }, i18n.translate('MOVE_OBJECT_LABEL')), /*#__PURE__*/React.createElement(Row, {\n      gutter: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, this.instanceIdError && {\n      validateStatus: 'error',\n      help: this.instanceIdError\n    }, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      value: this.instanceId,\n      onChange: this.setInstanceId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Select.Option, {\n      value: \"new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 23\n      }\n    }, i18n.translate('MOVE_CREATE_ID'))), this.supportedInstances.map(instance => /*#__PURE__*/React.createElement(Select.Option, {\n      key: instance.id,\n      value: instance.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 23\n      }\n    }, instance.number))))), /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, this.itemIdError && {\n      validateStatus: 'error',\n      help: this.itemIdError\n    }, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      value: this.itemId,\n      onChange: this.setItemId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 19\n      }\n    }, this.supportedInstanceItems.map(item => item === 'new' ? /*#__PURE__*/React.createElement(Select.Option, {\n      key: \"new\",\n      value: \"new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 25\n      }\n    }, i18n.translate('MOVE_CREATE_ID_ITEM'))) : /*#__PURE__*/React.createElement(Select.Option, {\n      key: item.id,\n      value: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 23\n      }\n    }, item.number))))))), this.itemId && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Radio.Group, {\n      value: this.applyType,\n      onChange: e => this.setApplyType(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Radio, {\n      className: \"radio-option\",\n      value: \"current\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 15\n      }\n    }, i18n.translate('MOVE_APPLY_CURRENT_FRAME'), formatFrames(this.getAffectedFrames('current')), this.allOverlappingFrames.includes(store.frame.currentFrame) && i18n.translate('MOVE_OVERLAP_WARNING', {\n      values: {\n        overlaps: formatFrames([store.frame.currentFrame])\n      }\n    })), /*#__PURE__*/React.createElement(Radio, {\n      className: \"radio-option\",\n      value: \"following\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 15\n      }\n    }, i18n.translate('MOVE_APPLY_FOLLOWING_FRAMES'), formatFrames(this.getAffectedFrames('following')), this.followingOverlappingFrames.length > 0 && i18n.translate('MOVE_OVERLAP_WARNING', {\n      values: {\n        overlaps: formatFrames(this.followingOverlappingFrames)\n      }\n    })), /*#__PURE__*/React.createElement(Radio, {\n      className: \"radio-option\",\n      value: \"all\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 15\n      }\n    }, i18n.translate('MOVE_APPLY_ALL_FRAMES'), formatFrames(this.getAffectedFrames('all')), this.allOverlappingFrames.length > 0 && i18n.translate('MOVE_OVERLAP_WARNING', {\n      values: {\n        overlaps: formatFrames(this.allOverlappingFrames)\n      }\n    })))), this.itemId && (this.categoryName !== selectedInstanceItem.instance.category || this.itemName !== selectedInstanceItem.name) && /*#__PURE__*/React.createElement(TargetAttributes, {\n      ref: this.attrRef,\n      category: this.categoryName,\n      categoryItem: this.itemName,\n      instanceId: this.instanceId,\n      checkFinished: this.checkFinished,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: 45,\n        textAlign: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      style: {\n        width: 80\n      },\n      onClick: this.handleSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 11\n      }\n    }, i18n.translate('COMMON_SAVE'))));\n  }\n}\nexport default observer(MovingModal);","map":{"version":3,"names":["React","makeObservable","observable","computed","action","reaction","observer","Col","Row","Select","Radio","Button","Form","cloneDeep","Modal","TargetAttributes","ShapeType","store","i18n","formatFrames","getShapeTypeByTool","Tool","MovingModal","Component","supportedCategoryItems","categoryName","category","ontology","getCategory","children","filter","c","isCategoryItemValid","supportedInstances","itemName","categoryInstances","instance","categoryInstancesMap","categoryItem","getCategoryItem","filteredChildren","name","selectedInstances","selectedInstanceItems","selectedInstance","selectedInstanceItem","count","maxCount","id","length","supportedInstanceItems","instanceId","getInstanceById","items","getItemsByName","instanceItems","undefined","push","forEach","item","allOverlappingFrames","itemId","currentCamera","frame","targetInstance","targetInstanceItem","currentFrames","frameIndex","_targetInstanceItem$c","cameras","frames","followingOverlappingFrames","currentFrame","index","findIndex","slice","constructor","props","reactionDisposer","categoryNameError","itemNameError","instanceIdError","itemIdError","applyType","currentShapeType","currentIsOCR","currentIsFormula","submitCount","attrValues","attrRef","createRef","checkFinished","valuesItem","newInstanceAttr","newDynamicInstanceAttr","newInstanceItemAttr","type","values","affectedFrames","getAffectedFrames","map","attributes","finish","setCategory","bound","setInstanceId","setItemName","setItemId","setApplyType","handleSave","config","movingModalVisible","visible","isSingleSelected","shapeType","isOCR","isFormula","Object","componentWillUnmount","tools","toolTypes","t","includes","OCR","RECTANGLE","OCR_POLYGON","POLYGON","FORMULA_POLYGON","shapeTypes","tool","indexOf","every","child","translate","_this$attrRef$current","buttons","current","getButtons","btn","click","_selectedInstanceItem","cameraDynamicAttributes","dynamicAttributes","keys","frameIndexStr","_cameraDynamicAttribu","Number","moveInstanceItem","setMovingModalVisible","render","createElement","className","title","onClose","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","object","label","gutter","span","Item","assign","validateStatus","help","value","onChange","categories","Option","key","displayName","Fragment","textAlign","number","marginTop","Group","e","target","overlaps","ref","width","onClick"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking2/components/move/MovingModal.tsx"],"sourcesContent":["import React from 'react';\nimport { makeObservable, observable, computed, action, reaction, IReactionDisposer } from 'mobx';\nimport { observer } from 'mobx-react';\nimport { Col, Row, Select, Radio, Button, Form } from 'antd';\nimport { cloneDeep } from 'lodash';\nimport Modal from '../../../common/modal/Modal';\nimport TargetAttributes, { TargetAttributesHandle } from './TargetAttributes';\nimport { ShapeType } from '../../../common/shapes/types';\nimport InstanceItem from '../../model/InstanceItem';\nimport store from '../../store/RootStore';\nimport i18n from '../../locales';\nimport { formatFrames, getShapeTypeByTool } from '../../utils';\nimport { CategoryItem, DynamicAttributes, Tool } from '../../types';\nimport './MovingModal.scss';\n\nclass MovingModal extends React.Component {\n  /**\n   * reaction disposer\n   */\n  reactionDisposer: IReactionDisposer;\n\n  /**\n   * selected category name\n   */\n  categoryName = '';\n\n  /**\n   * category name error\n   */\n  categoryNameError = '';\n\n  /**\n   * selected instance item name\n   */\n  itemName = '';\n\n  /**\n   * item name error\n   */\n  itemNameError = '';\n\n  /**\n   * selected instance id\n   */\n  instanceId = '';\n\n  /**\n   * instance id error\n   */\n  instanceIdError = '';\n\n  /**\n   * selected instance item id\n   */\n  itemId = '';\n\n  /**\n   * item id error\n   */\n  itemIdError = '';\n\n  /**\n   * apply type\n   */\n  applyType: 'current' | 'following' | 'all' = 'current';\n\n  /**\n   * moving instance item current shape type\n   */\n  currentShapeType?: ShapeType;\n\n  /**\n   * moving instance item current isOCR\n   */\n  currentIsOCR?: boolean;\n\n  /**\n   * moving instance item current isFormula\n   */\n  currentIsFormula?: boolean;\n\n  /**\n   * moving instance item current all frames\n   */\n  currentFrames: number[] = [];\n\n  /**\n   * attributes form count\n   */\n  submitCount = 0;\n\n  /**\n   * attributes form values\n   */\n  attrValues: { type: string; values: any }[] = [];\n\n  /**\n   * attributes container ref\n   */\n  attrRef = React.createRef<TargetAttributesHandle>();\n\n  /**\n   * supported category items can be selected\n   */\n  get supportedCategoryItems() {\n    if (!this.categoryName) {\n      return [];\n    }\n    const category = store.ontology.getCategory(this.categoryName);\n    if (!category || !category.children) {\n      return [];\n    }\n    return category.children.filter((c) => this.isCategoryItemValid(c));\n  }\n\n  /**\n   * supported instances can be selected\n   */\n  get supportedInstances() {\n    if (!this.categoryName || !this.itemName) {\n      return [];\n    }\n    const categoryInstances = store.instance.categoryInstancesMap[this.categoryName];\n    if (!categoryInstances) {\n      return [];\n    }\n    const category = store.ontology.getCategory(this.categoryName);\n    const categoryItem = store.ontology.getCategoryItem(this.categoryName, this.itemName);\n    if (!category || !categoryItem) {\n      return [];\n    }\n\n    const filteredChildren = category.children.filter((c) => this.isCategoryItemValid(c) && c.name !== this.itemName);\n    const { selectedInstances, selectedInstanceItems } = store.instance;\n    const selectedInstance = selectedInstances[0];\n    const selectedInstanceItem = selectedInstanceItems[0];\n    return categoryInstances.filter((instance) => {\n      if (categoryItem.count === 1 || categoryItem.maxCount === 1) {\n        // because we can overwrite target item, so, just self can't be selected\n        if (selectedInstance?.id === instance.id && selectedInstanceItem?.name === categoryItem.name) {\n          // selected instance item is just the category item to be move\n          return false;\n        }\n        if (filteredChildren.length > 0) {\n          // has other category items can be moved to\n          return true;\n        }\n        return instance.id !== selectedInstance?.id;\n      }\n      return true;\n    });\n  }\n\n  /**\n   * supported instance items can be selected\n   */\n  get supportedInstanceItems(): (InstanceItem | 'new')[] {\n    if (!this.categoryName || !this.itemName || !this.instanceId) {\n      return [];\n    }\n    if (this.instanceId === 'new') {\n      return ['new'];\n    }\n    const categoryItem = store.ontology.getCategoryItem(this.categoryName, this.itemName);\n    if (!categoryItem) {\n      return [];\n    }\n    const selectedInstanceItem = store.instance.selectedInstanceItems[0];\n    const instance = store.instance.getInstanceById(this.instanceId);\n    const items = instance.getItemsByName(this.itemName);\n    const instanceItems: (InstanceItem | 'new')[] = [];\n    if (categoryItem.count !== undefined) {\n      if (items.length < categoryItem.count) {\n        instanceItems.push('new');\n      }\n    } else if (categoryItem.maxCount !== undefined && items.length < categoryItem.maxCount) {\n      instanceItems.push('new');\n    } else {\n      instanceItems.push('new');\n    }\n    items.forEach((item) => {\n      if (item.id !== selectedInstanceItem?.id) {\n        instanceItems.push(item);\n      }\n    });\n    return instanceItems;\n  }\n\n  /**\n   * all overlapping frames\n   */\n  get allOverlappingFrames() {\n    if (this.itemId && this.itemId !== 'new') {\n      const { currentCamera } = store.frame;\n      const targetInstance = store.instance.getInstanceById(this.instanceId);\n      const targetInstanceItem = targetInstance.items[this.itemId];\n      return this.currentFrames.filter((frameIndex) => !!targetInstanceItem.cameras[currentCamera]?.frames[frameIndex]);\n    }\n    return [];\n  }\n\n  /**\n   * following overlapping frames (based on current frame)\n   */\n  get followingOverlappingFrames() {\n    const { currentFrame } = store.frame;\n    const index = this.allOverlappingFrames.findIndex((frame) => frame >= currentFrame);\n    return index >= 0 ? this.allOverlappingFrames.slice(index) : [];\n  }\n\n  constructor(props: any) {\n    super(props);\n\n    makeObservable(this, {\n      categoryName: observable,\n      categoryNameError: observable,\n      itemName: observable,\n      itemNameError: observable,\n      instanceId: observable,\n      instanceIdError: observable,\n      itemId: observable,\n      itemIdError: observable,\n      applyType: observable,\n      // currentShapeType: observable,\n      // currentIsOCR: observable,\n      currentFrames: observable,\n      supportedCategoryItems: computed,\n      supportedInstances: computed,\n      supportedInstanceItems: computed,\n      allOverlappingFrames: computed,\n      followingOverlappingFrames: computed,\n      setCategory: action.bound,\n      setInstanceId: action.bound,\n      setItemName: action.bound,\n      setItemId: action.bound,\n      setApplyType: action.bound,\n      handleSave: action.bound,\n    });\n\n    this.reactionDisposer = reaction(\n      () => store.config.movingModalVisible,\n      (visible) => {\n        this.categoryName = '';\n        this.categoryNameError = '';\n        this.itemName = '';\n        this.itemNameError = '';\n        this.instanceId = '';\n        this.instanceIdError = '';\n        this.itemId = '';\n        this.itemIdError = '';\n        this.applyType = 'current';\n        if (visible && store.instance.isSingleSelected) {\n          const selectedInstanceItem = store.instance.selectedInstanceItems[0];\n          const { currentCamera, currentFrame } = store.frame;\n          const { frames = {} } = selectedInstanceItem.cameras[currentCamera] || {};\n          const { shapeType, isOCR, isFormula } = frames[currentFrame];\n          this.currentShapeType = shapeType;\n          this.currentIsOCR = isOCR;\n          this.currentIsFormula = isFormula;\n          this.currentFrames = Object.values(frames).map(({ frameIndex }) => frameIndex);\n        }\n      },\n    );\n  }\n\n  componentWillUnmount() {\n    this.reactionDisposer();\n  }\n\n  isCategoryItemValid(categoryItem: CategoryItem) {\n    const { tools } = categoryItem;\n    const toolTypes = tools.map((t) => t.type);\n    if (this.currentIsOCR) {\n      return (\n        (toolTypes.includes(Tool.OCR) && this.currentShapeType === ShapeType.RECTANGLE) ||\n        (toolTypes.includes(Tool.OCR_POLYGON) && this.currentShapeType === ShapeType.POLYGON)\n      );\n    }\n    if (this.currentIsFormula) {\n      return toolTypes.includes(Tool.FORMULA_POLYGON) && this.currentShapeType === ShapeType.POLYGON;\n    }\n    const shapeTypes = tools.map((tool) => getShapeTypeByTool(tool.type));\n    return shapeTypes.includes(this.currentShapeType);\n  }\n\n  getAffectedFrames(type: 'current' | 'following' | 'all') {\n    const { currentFrame } = store.frame;\n    if (type === 'current') {\n      return [currentFrame];\n    }\n    if (type === 'following') {\n      return this.currentFrames.slice(this.currentFrames.indexOf(currentFrame));\n    }\n    if (type === 'all') {\n      return [...this.currentFrames];\n    }\n    return [];\n  }\n\n  setCategory(category: string) {\n    this.categoryNameError = '';\n    this.categoryName = category;\n    this.itemName = '';\n    this.instanceId = '';\n    this.itemId = '';\n    this.applyType = 'current';\n    const { children = [] } = store.ontology.getCategory(category) || {};\n    if (children.every((child) => !this.isCategoryItemValid(child))) {\n      this.categoryNameError = i18n.translate('MOVE_ERROR_CATEGORY');\n    }\n  }\n\n  setItemName(item: string) {\n    this.itemNameError = '';\n    this.itemName = item;\n    this.instanceId = '';\n    this.itemId = '';\n    this.applyType = 'current';\n  }\n\n  setInstanceId(id: string) {\n    this.instanceIdError = '';\n    this.instanceId = id;\n    this.itemId = '';\n    this.applyType = 'current';\n  }\n\n  setItemId(id: string) {\n    this.itemIdError = '';\n    this.itemId = id;\n    this.applyType = 'current';\n  }\n\n  setApplyType(type: 'current' | 'following' | 'all') {\n    this.applyType = type;\n  }\n\n  handleSave() {\n    if (!this.categoryName) {\n      this.categoryNameError = i18n.translate('MOVE_ERROR_NO_CATEGORY');\n    }\n    if (!this.itemName) {\n      this.itemNameError = i18n.translate('MOVE_ERROR_NO_CATEGORY_ITEM');\n    }\n    if (this.categoryNameError || this.itemNameError) {\n      return;\n    }\n    if (!this.instanceId) {\n      this.instanceIdError = i18n.translate('MOVE_ERROR_NO_INSTANCE');\n    }\n    if (!this.itemId) {\n      this.itemIdError = i18n.translate('MOVE_ERROR_NO_ITEM');\n    }\n    if (this.instanceIdError || this.itemIdError) {\n      return;\n    }\n\n    this.submitCount = 0;\n    const buttons = this.attrRef.current?.getButtons();\n    if (buttons && buttons.length > 0) {\n      buttons.forEach((btn) => {\n        this.submitCount += 1;\n        (btn as HTMLButtonElement).click();\n      });\n    } else {\n      this.finish();\n    }\n  }\n\n  finish(newInstanceAttr?: any, newDynamicInstanceAttr?: DynamicAttributes[], newInstanceItemAttr?: any) {\n    const selectedInstanceItem = store.instance.selectedInstanceItems[0];\n    const { currentCamera } = store.frame;\n    const affectedFrames = this.getAffectedFrames(this.applyType);\n    const cameraDynamicAttributes = selectedInstanceItem.instance.dynamicAttributes?.[currentCamera];\n    if (cameraDynamicAttributes && !newInstanceItemAttr) {\n      newDynamicInstanceAttr = Object.keys(cameraDynamicAttributes).map((frameIndexStr) => {\n        const frameIndex = Number(frameIndexStr);\n        return {\n          frameIndex,\n          attributes: cloneDeep(cameraDynamicAttributes[frameIndex]?.attributes)\n        };\n      });\n    }\n    store.instance.moveInstanceItem(\n      this.categoryName,\n      this.itemName,\n      this.instanceId,\n      this.itemId,\n      affectedFrames,\n      newDynamicInstanceAttr,\n      newInstanceAttr,\n      newInstanceItemAttr,\n    );\n    store.config.setMovingModalVisible(false);\n  }\n\n  checkFinished = (valuesItem: { type: string; values: any }) => {\n    this.submitCount -= 1;\n    this.attrValues.push(valuesItem);\n\n    if (this.submitCount === 0) {\n      let newInstanceAttr;\n      let newDynamicInstanceAttr: DynamicAttributes[] | undefined;\n      let newInstanceItemAttr;\n      this.attrValues.forEach(({ type, values }) => {\n        if (type === 'instance') {\n          newInstanceAttr = values;\n        } else if (type === 'dynamicInstance') {\n          const affectedFrames = this.getAffectedFrames(this.applyType);\n          newDynamicInstanceAttr = affectedFrames.map((frameIndex) => ({\n            frameIndex,\n            attributes: values\n          }));\n        } else if (type === 'instance-item') {\n          newInstanceItemAttr = values;\n        }\n      });\n      this.attrValues = [];\n      this.finish(newInstanceAttr, newDynamicInstanceAttr, newInstanceItemAttr);\n    }\n  };\n\n  render() {\n    if (!store.config.movingModalVisible || !store.instance.isSingleSelected) {\n      return null;\n    }\n    const selectedInstanceItem = store.instance.selectedInstanceItems[0];\n    return (\n      <Modal\n        className=\"instance-move\"\n        visible\n        title={i18n.translate('MOVE_TITLE')}\n        onClose={() => store.config.setMovingModalVisible(false)}\n      >\n        <div style={{ marginBottom: 16 }}>\n          {i18n.translate('MOVE_TO_LABEL', { values: { object: selectedInstanceItem.label } })}\n        </div>\n        <div className=\"instance-move-label\">{i18n.translate('MOVE_CLASS_LABEL')}</div>\n        <Row gutter={16}>\n          <Col span={12}>\n            <Form.Item {...this.categoryNameError && { validateStatus: 'error', help: this.categoryNameError }}>\n              <Select\n                value={this.categoryName}\n                onChange={this.setCategory}\n              >\n                {store.ontology.categories.map((c) => (\n                  <Select.Option key={c.className} value={c.className}>\n                    {c.displayName}\n                  </Select.Option>\n                ))}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col span={12}>\n            <Form.Item {...this.itemNameError && { validateStatus: 'error', help: this.itemNameError }}>\n              <Select\n                value={this.itemName}\n                onChange={this.setItemName}\n              >\n                {this.supportedCategoryItems.map((c) => (\n                  <Select.Option key={c.name} value={c.name}>\n                    {c.name}\n                  </Select.Option>\n                ))}\n              </Select>\n            </Form.Item>\n          </Col>\n        </Row>\n        {this.itemName && (\n          <>\n            <div className=\"instance-move-label\">{i18n.translate('MOVE_OBJECT_LABEL')}</div>\n            <Row gutter={16}>\n              <Col span={12}>\n                <Form.Item {...this.instanceIdError && { validateStatus: 'error', help: this.instanceIdError }}>\n                  <Select\n                    value={this.instanceId}\n                    onChange={this.setInstanceId}\n                  >\n                    <Select.Option value=\"new\">\n                      <div style={{ textAlign: 'center' }}>{i18n.translate('MOVE_CREATE_ID')}</div>\n                    </Select.Option>\n                    {this.supportedInstances.map((instance) => (\n                      <Select.Option key={instance.id} value={instance.id}>\n                        {instance.number}\n                      </Select.Option>\n                    ))}\n                  </Select>\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item {...this.itemIdError && { validateStatus: 'error', help: this.itemIdError }}>\n                  <Select\n                    value={this.itemId}\n                    onChange={this.setItemId}\n                  >\n                    {this.supportedInstanceItems.map((item) => (item === 'new' ? (\n                      <Select.Option key=\"new\" value=\"new\">\n                        <div style={{ textAlign: 'center' }}>{i18n.translate('MOVE_CREATE_ID_ITEM')}</div>\n                      </Select.Option>\n                    ) : (\n                      <Select.Option key={(item as InstanceItem).id} value={(item as InstanceItem).id}>\n                        {(item as InstanceItem).number}\n                      </Select.Option>\n                    )))}\n                  </Select>\n                </Form.Item>\n              </Col>\n            </Row>\n          </>\n        )}\n        {this.itemId && (\n          <div style={{ marginTop: 16 }}>\n            <Radio.Group\n              value={this.applyType}\n              onChange={(e) => this.setApplyType(e.target.value)}\n            >\n              <Radio className=\"radio-option\" value=\"current\">\n                {i18n.translate('MOVE_APPLY_CURRENT_FRAME')}\n                {formatFrames(this.getAffectedFrames('current'))}\n                {this.allOverlappingFrames.includes(store.frame.currentFrame) && i18n.translate('MOVE_OVERLAP_WARNING', { values: { overlaps: formatFrames([store.frame.currentFrame]) } })}\n              </Radio>\n              <Radio className=\"radio-option\" value=\"following\">\n                {i18n.translate('MOVE_APPLY_FOLLOWING_FRAMES')}\n                {formatFrames(this.getAffectedFrames('following'))}\n                {this.followingOverlappingFrames.length > 0 && i18n.translate('MOVE_OVERLAP_WARNING', { values: { overlaps: formatFrames(this.followingOverlappingFrames) } })}\n              </Radio>\n              <Radio className=\"radio-option\" value=\"all\">\n                {i18n.translate('MOVE_APPLY_ALL_FRAMES')}\n                {formatFrames(this.getAffectedFrames('all'))}\n                {this.allOverlappingFrames.length > 0 && i18n.translate('MOVE_OVERLAP_WARNING', { values: { overlaps: formatFrames(this.allOverlappingFrames) } })}\n              </Radio>\n            </Radio.Group>\n          </div>\n        )}\n        {this.itemId && (this.categoryName !== selectedInstanceItem.instance.category || this.itemName !== selectedInstanceItem.name) && (\n          <TargetAttributes\n            ref={this.attrRef}\n            category={this.categoryName}\n            categoryItem={this.itemName}\n            instanceId={this.instanceId}\n            checkFinished={this.checkFinished}\n          />\n        )}\n        <div style={{ marginTop: 45, textAlign: 'right' }}>\n          <Button type=\"primary\" style={{ width: 80 }} onClick={this.handleSave}>\n            {i18n.translate('COMMON_SAVE')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default observer(MovingModal);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}