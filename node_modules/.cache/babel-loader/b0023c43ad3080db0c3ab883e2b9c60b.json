{"ast":null,"code":"var _jsxFileName = \"/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/AudioComp/PlaySettingSegment/PlaySettingSegment.jsx\";\nimport React, { useState, useEffect, useImperativeHandle } from 'react';\nimport { connect } from 'react-redux';\nimport { Input } from 'antd';\nimport { UpOutlined, DownOutlined } from '@ant-design/icons';\nimport { setSegmentStartEnd } from '../../../redux/action';\nimport { formatTimestamp } from '../../../constants';\nimport './PlaySettingSegment.scss';\nconst TIMESTAMP = '00:00.000';\nconst TIMESTAMP_REGX = /^\\d{2}:\\d{2}\\.\\d{3}$/;\nexport const MoveType = {\n  PLUS: 'plus',\n  MINUS: 'minus'\n};\nconst InputNumber = ({\n  className,\n  step = 0.1,\n  min,\n  max,\n  value,\n  onChange,\n  onFocus,\n  onBlur\n}) => {\n  const [timestamp, setTimestamp] = useState('');\n  useEffect(() => {\n    setTimestamp(formatTimestamp(value));\n  }, [value]);\n  const select = (input, selectionStart, selectionEnd) => {\n    setTimeout(() => {\n      input.setSelectionRange(selectionStart, selectionEnd !== undefined ? selectionEnd : selectionStart);\n    }, 0);\n  };\n  const change = t => {\n    if (TIMESTAMP_REGX.test(t)) {\n      const minute = parseInt(t.substring(0, 2), 10);\n      const second = parseFloat(t.substring(3));\n      const time = minute * 60 + second;\n      if (time >= min && time <= max) {\n        onChange(time);\n      } else {\n        setTimestamp(formatTimestamp(value));\n      }\n    }\n  };\n  const handleChange = e => {\n    const input = e.target;\n    const str = input.value;\n    if (TIMESTAMP_REGX.test(str)) {\n      setTimestamp(str);\n      return;\n    }\n    const arr = Array.from(str);\n    const timestampArr = Array.from(timestamp);\n    const index = arr.findIndex((c, i) => timestampArr[i] !== c);\n    const {\n      selectionStart\n    } = input;\n    if ((index < 0 || index >= selectionStart) && arr.length <= timestampArr.length) {\n      // just delete some characters\n      const beginStr = str.substring(0, selectionStart);\n      const endStr = str.substring(selectionStart);\n      const complementStr = TIMESTAMP.substring(beginStr.length, TIMESTAMP.length - endStr.length);\n      const tStr = `${beginStr}${complementStr}${endStr}`;\n      setTimestamp(tStr);\n      change(tStr);\n      select(input, selectionStart === 3 || selectionStart === 6 ? selectionStart - 1 : selectionStart);\n    } else {\n      const subStr = str.substring(index, selectionStart);\n      if (/^\\d+$/.test(subStr)) {\n        const subArr = Array.from(subStr);\n        const characters = timestampArr.map((_, i) => {\n          if (i >= index && subArr.length > 0) {\n            if (i === 2 || i === 5) {\n              return timestampArr[i];\n            }\n            const character = subArr.shift();\n            return character;\n          }\n          return timestampArr[i];\n        });\n        const tStr = characters.join('');\n        setTimestamp(tStr);\n        change(tStr);\n        select(input, selectionStart === 3 || selectionStart === 6 ? selectionStart + 1 : selectionStart);\n      }\n    }\n  };\n  const handleKeyDown = e => {\n    const key = e.key.toLowerCase();\n    if (key === '=' || key === '+') {\n      // plus\n      handlePlus();\n    } else if (key === '-' || key === '_') {\n      // minus\n      handleMinus();\n    }\n  };\n  const handlePlus = () => {\n    onChange(Math.min(Math.max(value + step, min), max));\n  };\n  const handleMinus = () => {\n    onChange(Math.min(Math.max(value - step, min), max));\n  };\n  return /*#__PURE__*/React.createElement(Input, {\n    className: className,\n    value: timestamp,\n    onChange: handleChange,\n    onKeyDown: handleKeyDown,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    addonAfter: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: handlePlus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(UpOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: handleMinus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DownOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 38\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  });\n};\nconst PlaySettingSegment = ({\n  wavesurfers,\n  results,\n  currentVideo,\n  currentSegment,\n  adjustmentStep = 0.1,\n  minSegmentLength,\n  segmentOverlap,\n  updateSegment,\n  playSettingRef\n}) => {\n  const [start, setStart] = useState(0);\n  const [end, setEnd] = useState(0);\n  const [min, setMin] = useState(0);\n  const [max, setMax] = useState(0);\n  useEffect(() => {\n    const segment = results[currentVideo][currentSegment];\n    if (segment) {\n      setStart(segment.start);\n      setEnd(segment.end);\n    }\n    if (wavesurfers && wavesurfers.current && wavesurfers.current.wavesurfer) {\n      let segMin = 0;\n      let segMax = wavesurfers.current.wavesurfer.getDuration();\n      if (!segmentOverlap) {\n        const prevSeg = results[currentVideo][currentSegment - 1];\n        const nextSeg = results[currentVideo][currentSegment + 1];\n        if (prevSeg) {\n          segMin = prevSeg.end;\n        }\n        if (nextSeg) {\n          segMax = nextSeg.start;\n        }\n      }\n      setMin(segMin);\n      setMax(segMax);\n    }\n  }, [results, currentVideo, currentSegment, wavesurfers]);\n  useImperativeHandle(playSettingRef, () => ({\n    moveStart,\n    moveEnd\n  }));\n  const handleStartChange = value => {\n    updateSegment({\n      videoIndex: currentVideo,\n      segmentIndex: currentSegment,\n      start: value,\n      end\n    });\n  };\n  const handleEndChange = value => {\n    updateSegment({\n      videoIndex: currentVideo,\n      segmentIndex: currentSegment,\n      start,\n      end: value\n    });\n  };\n  const moveStart = type => {\n    const newStart = Math.min(Math.max(start + (type === 'plus' ? adjustmentStep : -adjustmentStep), min), end - minSegmentLength);\n    handleStartChange(newStart);\n  };\n  const moveEnd = type => {\n    const newEnd = Math.min(Math.max(end + (type === 'plus' ? adjustmentStep : -adjustmentStep), start + minSegmentLength), max);\n    handleEndChange(newEnd);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"play-setting-segment-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 5\n    }\n  }, currentSegment >= 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputNumber, {\n    className: \"play-setting-segment-time\",\n    min: min,\n    max: end - minSegmentLength,\n    step: adjustmentStep,\n    value: start,\n    onChange: handleStartChange,\n    onFocus: () => {\n      window.disableLongAudioHotKeys = true;\n    },\n    onBlur: () => {\n      window.disableLongAudioHotKeys = false;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }, \"~\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputNumber, {\n    className: \"play-setting-segment-time\",\n    min: start + minSegmentLength,\n    max: max,\n    step: adjustmentStep,\n    value: end,\n    onChange: handleEndChange,\n    onFocus: () => {\n      window.disableLongAudioHotKeys = true;\n    },\n    onBlur: () => {\n      window.disableLongAudioHotKeys = false;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  }, `(${(end - start).toFixed(3)}s)`)));\n};\nconst mapStateToProps = state => ({\n  wavesurfers: state.wavesurfers,\n  results: state.results,\n  currentVideo: state.currentVideo,\n  currentSegment: state.currentSegment,\n  adjustmentStep: state.adjustmentStep,\n  minSegmentLength: state.minSegmentLength,\n  segmentOverlap: state.segmentOverlap\n});\nconst mapDispatchToProps = {\n  updateSegment: setSegmentStartEnd\n};\nconst PlaySettingSegmentComponent = connect(mapStateToProps, mapDispatchToProps)(PlaySettingSegment);\nexport default React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(PlaySettingSegmentComponent, Object.assign({}, props, {\n  ref: ref,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 49\n  }\n})));","map":{"version":3,"names":["React","useState","useEffect","useImperativeHandle","connect","Input","UpOutlined","DownOutlined","setSegmentStartEnd","formatTimestamp","TIMESTAMP","TIMESTAMP_REGX","MoveType","PLUS","MINUS","InputNumber","className","step","min","max","value","onChange","onFocus","onBlur","timestamp","setTimestamp","select","input","selectionStart","selectionEnd","setTimeout","setSelectionRange","undefined","change","t","test","minute","parseInt","substring","second","parseFloat","time","handleChange","e","target","str","arr","Array","from","timestampArr","index","findIndex","c","i","length","beginStr","endStr","complementStr","tStr","subStr","subArr","characters","map","_","character","shift","join","handleKeyDown","key","toLowerCase","handlePlus","handleMinus","Math","createElement","onKeyDown","addonAfter","Fragment","onClick","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","PlaySettingSegment","wavesurfers","results","currentVideo","currentSegment","adjustmentStep","minSegmentLength","segmentOverlap","updateSegment","playSettingRef","start","setStart","end","setEnd","setMin","setMax","segment","current","wavesurfer","segMin","segMax","getDuration","prevSeg","nextSeg","moveStart","moveEnd","handleStartChange","videoIndex","segmentIndex","handleEndChange","type","newStart","newEnd","window","disableLongAudioHotKeys","toFixed","mapStateToProps","state","mapDispatchToProps","PlaySettingSegmentComponent","forwardRef","props","ref","Object","assign"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/long-audio/components/AudioComp/PlaySettingSegment/PlaySettingSegment.jsx"],"sourcesContent":["import React, { useState, useEffect, useImperativeHandle } from 'react';\nimport { connect } from 'react-redux';\nimport { Input } from 'antd';\nimport { UpOutlined, DownOutlined } from '@ant-design/icons';\nimport { setSegmentStartEnd } from '../../../redux/action';\nimport { formatTimestamp } from '../../../constants';\nimport './PlaySettingSegment.scss';\n\nconst TIMESTAMP = '00:00.000';\nconst TIMESTAMP_REGX = /^\\d{2}:\\d{2}\\.\\d{3}$/;\n\nexport const MoveType = {\n  PLUS: 'plus',\n  MINUS: 'minus'\n};\n\nconst InputNumber = ({ className, step = 0.1, min, max, value, onChange, onFocus, onBlur }) => {\n  const [timestamp, setTimestamp] = useState('');\n\n  useEffect(() => {\n    setTimestamp(formatTimestamp(value));\n  }, [value]);\n\n  const select = (input, selectionStart, selectionEnd) => {\n    setTimeout(() => {\n      input.setSelectionRange(selectionStart, selectionEnd !== undefined ? selectionEnd : selectionStart);\n    }, 0);\n  };\n\n  const change = (t) => {\n    if (TIMESTAMP_REGX.test(t)) {\n      const minute = parseInt(t.substring(0, 2), 10);\n      const second = parseFloat(t.substring(3));\n      const time = minute * 60 + second;\n      if (time >= min && time <= max) {\n        onChange(time);\n      } else {\n        setTimestamp(formatTimestamp(value));\n      }\n    }\n  };\n\n  const handleChange = (e) => {\n    const input = e.target;\n    const str = input.value;\n    if (TIMESTAMP_REGX.test(str)) {\n      setTimestamp(str);\n      return;\n    }\n\n    const arr = Array.from(str);\n    const timestampArr = Array.from(timestamp);\n    const index = arr.findIndex((c, i) => timestampArr[i] !== c);\n    const { selectionStart } = input;\n    if ((index < 0 || index >= selectionStart) && arr.length <= timestampArr.length) {\n      // just delete some characters\n      const beginStr = str.substring(0, selectionStart);\n      const endStr = str.substring(selectionStart);\n      const complementStr = TIMESTAMP.substring(beginStr.length, TIMESTAMP.length - endStr.length);\n      const tStr = `${beginStr}${complementStr}${endStr}`;\n      setTimestamp(tStr);\n      change(tStr);\n      select(input, selectionStart === 3 || selectionStart === 6 ? selectionStart - 1 : selectionStart);\n    } else {\n      const subStr = str.substring(index, selectionStart);\n      if (/^\\d+$/.test(subStr)) {\n        const subArr = Array.from(subStr);\n        const characters = timestampArr.map((_, i) => {\n          if (i >= index && subArr.length > 0) {\n            if (i === 2 || i === 5) {\n              return timestampArr[i];\n            }\n            const character = subArr.shift();\n            return character;\n          }\n          return timestampArr[i];\n        });\n        const tStr = characters.join('');\n        setTimestamp(tStr);\n        change(tStr);\n        select(input, selectionStart === 3 || selectionStart === 6 ? selectionStart + 1 : selectionStart);\n      }\n    }\n  };\n\n  const handleKeyDown = (e) => {\n    const key = e.key.toLowerCase();\n    if (key === '=' || key === '+') {\n      // plus\n      handlePlus();\n    } else if (key === '-' || key === '_') {\n      // minus\n      handleMinus();\n    }\n  };\n\n  const handlePlus = () => {\n    onChange(Math.min(Math.max(value + step, min), max));\n  };\n\n  const handleMinus = () => {\n    onChange(Math.min(Math.max(value - step, min), max));\n  };\n\n  return (\n    <Input\n      className={className}\n      value={timestamp}\n      onChange={handleChange}\n      onKeyDown={handleKeyDown}\n      onFocus={onFocus}\n      onBlur={onBlur}\n      addonAfter={(\n        <>\n          <div onClick={handlePlus}><UpOutlined /></div>\n          <div onClick={handleMinus}><DownOutlined /></div>\n        </>\n      )}\n    />\n  );\n};\n\nconst PlaySettingSegment = ({ wavesurfers, results, currentVideo, currentSegment, adjustmentStep = 0.1, minSegmentLength, segmentOverlap, updateSegment, playSettingRef }) => {\n  const [start, setStart] = useState(0);\n  const [end, setEnd] = useState(0);\n  const [min, setMin] = useState(0);\n  const [max, setMax] = useState(0);\n\n  useEffect(() => {\n    const segment = results[currentVideo][currentSegment];\n    if (segment) {\n      setStart(segment.start);\n      setEnd(segment.end);\n    }\n\n    if (wavesurfers && wavesurfers.current && wavesurfers.current.wavesurfer) {\n      let segMin = 0;\n      let segMax = wavesurfers.current.wavesurfer.getDuration();\n      if (!segmentOverlap) {\n        const prevSeg = results[currentVideo][currentSegment - 1];\n        const nextSeg = results[currentVideo][currentSegment + 1];\n        if (prevSeg) {\n          segMin = prevSeg.end;\n        }\n        if (nextSeg) {\n          segMax = nextSeg.start;\n        }\n      }\n      setMin(segMin);\n      setMax(segMax);\n    }\n  }, [results, currentVideo, currentSegment, wavesurfers]);\n\n  useImperativeHandle(playSettingRef, () => ({\n    moveStart,\n    moveEnd,\n  }));\n\n  const handleStartChange = (value) => {\n    updateSegment({\n      videoIndex: currentVideo,\n      segmentIndex: currentSegment,\n      start: value,\n      end,\n    });\n  };\n\n  const handleEndChange = (value) => {\n    updateSegment({\n      videoIndex: currentVideo,\n      segmentIndex: currentSegment,\n      start,\n      end: value,\n    });\n  };\n\n  const moveStart = (type) => {\n    const newStart = Math.min(Math.max(start + (type === 'plus' ? adjustmentStep : -adjustmentStep), min), end - minSegmentLength);\n    handleStartChange(newStart);\n  };\n\n  const moveEnd = (type) => {\n    const newEnd = Math.min(Math.max(end + (type === 'plus' ? adjustmentStep : -adjustmentStep), start + minSegmentLength), max);\n    handleEndChange(newEnd);\n  };\n\n  return (\n    <div className=\"play-setting-segment-container\">\n      {currentSegment >= 0 && (\n        <>\n          <span>\n            <InputNumber\n              className=\"play-setting-segment-time\"\n              min={min}\n              max={end - minSegmentLength}\n              step={adjustmentStep}\n              value={start}\n              onChange={handleStartChange}\n              onFocus={() => { window.disableLongAudioHotKeys = true; }}\n              onBlur={() => { window.disableLongAudioHotKeys = false; }}\n            />\n          </span>\n          <span>~</span>\n          <span>\n            <InputNumber\n              className=\"play-setting-segment-time\"\n              min={start + minSegmentLength}\n              max={max}\n              step={adjustmentStep}\n              value={end}\n              onChange={handleEndChange}\n              onFocus={() => { window.disableLongAudioHotKeys = true; }}\n              onBlur={() => { window.disableLongAudioHotKeys = false; }}\n            />\n          </span>\n          <span>{`(${(end - start).toFixed(3)}s)`}</span>\n        </>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  wavesurfers: state.wavesurfers,\n  results: state.results,\n  currentVideo: state.currentVideo,\n  currentSegment: state.currentSegment,\n  adjustmentStep: state.adjustmentStep,\n  minSegmentLength: state.minSegmentLength,\n  segmentOverlap: state.segmentOverlap,\n});\nconst mapDispatchToProps = {\n  updateSegment: setSegmentStartEnd,\n};\n\nconst PlaySettingSegmentComponent = connect(mapStateToProps, mapDispatchToProps)(PlaySettingSegment);\nexport default React.forwardRef((props, ref) => <PlaySettingSegmentComponent {...props} ref={ref} />);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}