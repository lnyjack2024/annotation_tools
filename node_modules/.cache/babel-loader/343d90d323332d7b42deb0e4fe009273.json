{"ast":null,"code":"export let ProjectModel = /*#__PURE__*/function (ProjectModel) {\n  // use homography\n  ProjectModel[\"DEFAULT\"] = \"default\";\n  // based on 3D vehicle points\n  ProjectModel[\"OMNI_DIRECTIONAL\"] = \"omni-directional\";\n  ProjectModel[\"KANNALA_BRANDT\"] = \"kannala-brandt\";\n  return ProjectModel;\n}({});\nexport let CalculateType = /*#__PURE__*/function (CalculateType) {\n  CalculateType[\"VEHICLE_TO_CAMERA\"] = \"vehicle-to-camera\";\n  CalculateType[\"VEHICLE_TO_CAMERA_FINISH\"] = \"vehicle-to-camera-finish\";\n  return CalculateType;\n}({});","map":{"version":3,"names":["ProjectModel","CalculateType"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/video-tracking2/cameras-mapping/types.ts"],"sourcesContent":["export enum ProjectModel {\n  // use homography\n  DEFAULT = 'default',\n  // based on 3D vehicle points\n  OMNI_DIRECTIONAL = 'omni-directional',\n  KANNALA_BRANDT = 'kannala-brandt',\n}\ntype VehicleProjectModel =\n  ProjectModel.OMNI_DIRECTIONAL |\n  ProjectModel.KANNALA_BRANDT;\n\nexport interface Calibration {\n  model: VehicleProjectModel;\n  fov?: number;\n  distortions: number[];\n  intrinsics: number[];\n  sensorToDevice: number[];\n}\nexport interface HomographyCalibration {\n  model: ProjectModel.DEFAULT;\n  homography: number[] | Record<string, number[]>;\n}\n\nexport type CameraCalibration =\n  Calibration |\n  HomographyCalibration |\n  null;\n\nexport type CameraCalibrations =\n  CameraCalibration |\n  CameraCalibration[];\n\nexport interface CameraSize {\n  width: number;\n  height: number;\n}\nexport type CameraSizeByFrame = Record<number, CameraSize>;\n\nexport type Point2D = [number, number];\nexport type Point3D = [number, number, number];\n\nexport enum CalculateType {\n  VEHICLE_TO_CAMERA = 'vehicle-to-camera',\n  VEHICLE_TO_CAMERA_FINISH = 'vehicle-to-camera-finish',\n}\n"],"mappings":"AAAA,WAAYA,YAAY,0BAAZA,YAAY;EACtB;EADUA,YAAY;EAGtB;EAHUA,YAAY;EAAZA,YAAY;EAAA,OAAZA,YAAY;AAAA;AAyCxB,WAAYC,aAAa,0BAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAA,OAAbA,aAAa;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}