{"ast":null,"code":"import { isConnection, isInsertion, isLabel } from '../store/tag_mode';\nclass TagInfoMap {\n  constructor() {\n    this.labels = {};\n    this.insertions = {};\n    this.connections = {};\n  }\n  reciveInfo(json) {\n    this.labels = JSON.parse(json.labels);\n    this.insertions = JSON.parse(json.insertions);\n    this.connections = JSON.parse(json.connections);\n    return this;\n  }\n  getItem(id, type) {\n    const {\n      labels,\n      connections,\n      insertions\n    } = this;\n    if (isLabel(type)) return labels[id];\n    if (isConnection(type)) return connections[id];\n    if (isInsertion(type)) return insertions[id];\n    return undefined;\n  }\n  setItem(id, item) {\n    const {\n      labels,\n      connections,\n      insertions\n    } = this;\n    if (isLabel(item.type)) {\n      labels[id] = item;\n    }\n    if (isConnection(item.type)) {\n      connections[id] = item;\n    }\n    if (isInsertion(item.type)) {\n      insertions[id] = item;\n    }\n  }\n  getMap() {\n    return {\n      labels: JSON.stringify(this.labels),\n      connections: JSON.stringify(this.connections),\n      insertions: JSON.stringify(this.insertions)\n    };\n  }\n  clone() {\n    return new TagInfoMap().reciveInfo(this.getMap());\n  }\n}\nexport default TagInfoMap;","map":{"version":3,"names":["isConnection","isInsertion","isLabel","TagInfoMap","constructor","labels","insertions","connections","reciveInfo","json","JSON","parse","getItem","id","type","undefined","setItem","item","getMap","stringify","clone"],"sources":["/Users/qzheng/Documents/webroot/annotation_tools/src/components/editable-text/utils/TagInfoMap.js"],"sourcesContent":["import { isConnection, isInsertion, isLabel } from '../store/tag_mode';\n\nclass TagInfoMap {\n  constructor() {\n    this.labels = {};\n    this.insertions = {};\n    this.connections = {};\n  }\n\n  reciveInfo(json) {\n    this.labels = JSON.parse(json.labels);\n    this.insertions = JSON.parse(json.insertions);\n    this.connections = JSON.parse(json.connections);\n    return this;\n  }\n\n  getItem(id, type) {\n    const { labels, connections, insertions } = this;\n    if (isLabel(type)) return labels[id];\n    if (isConnection(type)) return connections[id];\n    if (isInsertion(type)) return insertions[id];\n    return undefined;\n  }\n\n  setItem(id, item) {\n    const { labels, connections, insertions } = this;\n    if (isLabel(item.type)) {\n      labels[id] = item;\n    }\n    if (isConnection(item.type)) {\n      connections[id] = item;\n    }\n    if (isInsertion(item.type)) {\n      insertions[id] = item;\n    }\n  }\n\n  getMap() {\n    return {\n      labels: JSON.stringify(this.labels),\n      connections: JSON.stringify(this.connections),\n      insertions: JSON.stringify(this.insertions),\n    };\n  }\n\n  clone() {\n    return new TagInfoMap().reciveInfo(this.getMap());\n  }\n}\n\nexport default TagInfoMap;\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,WAAW,EAAEC,OAAO,QAAQ,mBAAmB;AAEtE,MAAMC,UAAU,CAAC;EACfC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,MAAM,GAAG,CAAC,CAAC;IAChB,IAAI,CAACC,UAAU,GAAG,CAAC,CAAC;IACpB,IAAI,CAACC,WAAW,GAAG,CAAC,CAAC;EACvB;EAEAC,UAAUA,CAACC,IAAI,EAAE;IACf,IAAI,CAACJ,MAAM,GAAGK,IAAI,CAACC,KAAK,CAACF,IAAI,CAACJ,MAAM,CAAC;IACrC,IAAI,CAACC,UAAU,GAAGI,IAAI,CAACC,KAAK,CAACF,IAAI,CAACH,UAAU,CAAC;IAC7C,IAAI,CAACC,WAAW,GAAGG,IAAI,CAACC,KAAK,CAACF,IAAI,CAACF,WAAW,CAAC;IAC/C,OAAO,IAAI;EACb;EAEAK,OAAOA,CAACC,EAAE,EAAEC,IAAI,EAAE;IAChB,MAAM;MAAET,MAAM;MAAEE,WAAW;MAAED;IAAW,CAAC,GAAG,IAAI;IAChD,IAAIJ,OAAO,CAACY,IAAI,CAAC,EAAE,OAAOT,MAAM,CAACQ,EAAE,CAAC;IACpC,IAAIb,YAAY,CAACc,IAAI,CAAC,EAAE,OAAOP,WAAW,CAACM,EAAE,CAAC;IAC9C,IAAIZ,WAAW,CAACa,IAAI,CAAC,EAAE,OAAOR,UAAU,CAACO,EAAE,CAAC;IAC5C,OAAOE,SAAS;EAClB;EAEAC,OAAOA,CAACH,EAAE,EAAEI,IAAI,EAAE;IAChB,MAAM;MAAEZ,MAAM;MAAEE,WAAW;MAAED;IAAW,CAAC,GAAG,IAAI;IAChD,IAAIJ,OAAO,CAACe,IAAI,CAACH,IAAI,CAAC,EAAE;MACtBT,MAAM,CAACQ,EAAE,CAAC,GAAGI,IAAI;IACnB;IACA,IAAIjB,YAAY,CAACiB,IAAI,CAACH,IAAI,CAAC,EAAE;MAC3BP,WAAW,CAACM,EAAE,CAAC,GAAGI,IAAI;IACxB;IACA,IAAIhB,WAAW,CAACgB,IAAI,CAACH,IAAI,CAAC,EAAE;MAC1BR,UAAU,CAACO,EAAE,CAAC,GAAGI,IAAI;IACvB;EACF;EAEAC,MAAMA,CAAA,EAAG;IACP,OAAO;MACLb,MAAM,EAAEK,IAAI,CAACS,SAAS,CAAC,IAAI,CAACd,MAAM,CAAC;MACnCE,WAAW,EAAEG,IAAI,CAACS,SAAS,CAAC,IAAI,CAACZ,WAAW,CAAC;MAC7CD,UAAU,EAAEI,IAAI,CAACS,SAAS,CAAC,IAAI,CAACb,UAAU;IAC5C,CAAC;EACH;EAEAc,KAAKA,CAAA,EAAG;IACN,OAAO,IAAIjB,UAAU,CAAC,CAAC,CAACK,UAAU,CAAC,IAAI,CAACU,MAAM,CAAC,CAAC,CAAC;EACnD;AACF;AAEA,eAAef,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module"}