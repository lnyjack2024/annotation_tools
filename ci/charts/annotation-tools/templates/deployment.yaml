apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    environemt: {{.Values.environment}}
    app: {{.Chart.Name}}
  name: {{.Chart.Name}}
  namespace: loonshots-{{.Values.environment}}

spec:
  progressDeadlineSeconds: 600
  replicas: {{.Values.replicaCount}}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{.Chart.Name}}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{.Chart.Name}}
    spec:
      containers:
        - image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{.Values.image.pullPolicy}}
          name: {{ .Chart.Name }}
          {{- with .Values.ports }}
          ports:
          {{- toYaml . | nindent 12 }}
          {{end}}
          terminationMessagePath: /{{.Values.environment}}/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: {{.Values.replicaCount}}
  readyReplicas: {{.Values.replicaCount}}
  replicas: {{.Values.replicaCount}}
  updatedReplicas: {{.Values.replicaCount}}
